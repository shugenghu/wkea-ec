{"version":3,"sources":["webpack:///./src/modules/search/search.view.tsx?f0eb"],"names":[],"mappings":"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","file":"1.46ed38dd5ad56aa8d982.hot-update.js","sourcesContent":["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { INodeProps, Module, Node } from '@msdyn365-commerce-modules/utilities';\nimport * as React from 'react';\nimport { ISearchCategoryViewProps, ISearchFormViewProps, ISearchKeywordViewProps, ISearchProductViewProps } from './components';\nimport { ISearchViewProps } from './search';\n\nconst SearchView: React.FC<ISearchViewProps> = props => {\n    const {\n        Search,\n        AutoSuggestAriaLabel,\n        AutoSuggestAriaLabelText,\n        searchText,\n        AutoSuggest,\n        KeywordSuggest,\n        ProductSuggest,\n        CategorySuggest,\n        UlKeyword,\n        UlProduct,\n        UlCategory,\n        form,\n        autosuggestCategory,\n        autosuggestKeyword,\n        autosuggestProduct,\n        SearchForm,\n        FormWrapper,\n        label\n    } = props;\n\n    return (\n        <Module {...Search}>\n            {label}\n            {_renderForm(form as ISearchFormViewProps, SearchForm, FormWrapper)}\n            <Node {...AutoSuggest}>\n                {searchText && searchText.length > 0 ?\n                    <Node {...AutoSuggestAriaLabel}>{AutoSuggestAriaLabelText}</Node> : ''\n                }\n                {_renderKeywordSuggestions(KeywordSuggest, UlKeyword, autosuggestKeyword)}\n                {_renderProductSuggestions(ProductSuggest, UlProduct, autosuggestProduct)}\n                {_renderCategorySuggestions(CategorySuggest, UlCategory, autosuggestCategory)}\n\n            </Node>\n        </Module>\n    );\n};\n\nconst _renderForm = (form: ISearchFormViewProps, SearchForm: INodeProps, FormWrapper: INodeProps) => {\n    return (\n        <Node {...SearchForm}>\n           \n            <Node {...FormWrapper}>\n                {form.submitBtn}\n                {form.input}\n                {form.cancelBtn}\n            </Node>\n        </Node>\n    );\n};\n\nconst _renderKeywordSuggestions = (\n    KeywordSuggest: INodeProps,\n    UlKeyword: INodeProps,\n    keywordSuggestions?: ISearchKeywordViewProps\n) => {\n    return (\n        keywordSuggestions && (\n            <Node {...KeywordSuggest}>\n                <Node {...UlKeyword}>\n                    {keywordSuggestions.text.map(text => {\n                        return text;\n                    })}\n                </Node>\n            </Node>\n        )\n    );\n};\n\nconst _renderProductSuggestions = (\n    ProductSuggest: INodeProps,\n    UlProduct: INodeProps,\n    productSuggestions?: ISearchProductViewProps\n) => {\n    return (\n        productSuggestions && (\n            <Node {...ProductSuggest}>\n                <Node {...UlProduct}>\n                    {productSuggestions.title}\n                    {productSuggestions.items.map((item, index) => {\n                        return (\n                            <Node {...item.LiProduct} key={item.id || index}>\n                                <Node {...item.AProduct}>\n                                    {item.thumbnail}\n                                    {item.text}\n                                    {item.price}\n                                </Node>\n                            </Node>\n                        );\n                    })}\n                </Node>\n            </Node>\n        )\n    );\n};\n\nconst _renderCategorySuggestions = (\n    CategorySuggest: INodeProps,\n    UlCategory: INodeProps,\n    categorySuggestions?: ISearchCategoryViewProps\n) => {\n    return (\n        categorySuggestions && (\n            <Node {...CategorySuggest}>\n                <Node {...UlCategory}>\n                    {categorySuggestions.title}\n                    {categorySuggestions.text.map(text => {\n                        return text;\n                    })}\n                </Node>\n            </Node>\n        )\n    );\n};\n\nexport default SearchView;"],"sourceRoot":""}