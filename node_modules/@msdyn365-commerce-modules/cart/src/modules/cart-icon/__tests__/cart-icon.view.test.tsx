/*---------------------------------------------------------------------------------------------
 *  Copyright (c) Microsoft Corporation. All rights reserved.
 *  Licensed under the MIT License. See License.txt in the project root for license information.
 *--------------------------------------------------------------------------------------------*/

import { buildMockModuleProps } from '@msdyn365-commerce/core';
import { render } from 'enzyme';
import * as React from 'react';
import { mockResources } from '../__mocks__/mock-resources';
import { ICartIconViewProps } from '../cart-icon';
import CartIconView from '../cart-icon.view';

describe('Cart view unit tests - View', () => {
    it('renders correctly with all attributes', () => {
        const moduleProps: ICartIconViewProps= buildMockModuleProps({}, {}) as ICartIconViewProps;
        moduleProps.resources = mockResources;
        const mockProps: ICartIconViewProps = {
            ...moduleProps,
            className: 'className',
            cartIcon: 'Icon',
            // @ts-ignore partial mock
            cartlines:[
                {
                    cartline: <div>cartline1</div>,
                    remove: <button>removecartline1</button>,
                    hasError: false,
                    data: {
                        // @ts-ignore partial mock
                        product: {},
                        // @ts-ignore partial mock
                        cartline: {}
                    }
                },
                {
                    cartline: <div>cartline2</div>,
                    remove: <button>removecartline2</button>,
                    hasError: false,
                    data: {
                        // @ts-ignore partial mock
                        product: {},
                        // @ts-ignore partial mock
                        cartline: {}
                    }
                }
            ],
            FlyoutContainer: { className: 'node-class-FlyoutContainer' },
            CartlinesWrapper: { className: 'node-class-CartlinesWrapper' },
            totalPrice: '$0.00',
            checkoutAsSignInUserButton: <button>Checkout</button>,
            checkoutAsGuestButton: <button>Checkout as guest</button>,
            goToCartButton: <button>Back to shopping</button>,
            waitingComponent: 'Waiting',
            isCartLoading: false,
            removeItemClickHandler: jest.fn(),
        };
        const component = render(<CartIconView {...mockProps} />);
        expect(component).toMatchSnapshot();
    });
    it('renders correctly ', () => {
        const moduleProps: ICartIconViewProps= buildMockModuleProps({}, {}) as ICartIconViewProps;
        moduleProps.resources = mockResources;
        const mockProps: ICartIconViewProps = {
            ...moduleProps,
            className: 'className',
            cartIcon: 'Icon',
            // @ts-ignore partial mock
            cartlines:undefined,
            FlyoutContainer: { className: 'node-class-FlyoutContainer' },
            CartlinesWrapper: { className: 'node-class-CartlinesWrapper' },
            totalPrice: '$0.00',
            checkoutAsSignInUserButton: <button>Checkout</button>,
            checkoutAsGuestButton: <button>Checkout as guest</button>,
            goToCartButton: <button>Back to shopping</button>,
            waitingComponent: 'Waiting',
            isCartLoading: false,
            removeItemClickHandler: jest.fn(),
        };
        const component = render(<CartIconView {...mockProps} />);
        expect(component).toMatchSnapshot();
    });
    it('renders correctly FlyoutContainer check', () => {
        const moduleProps: ICartIconViewProps= buildMockModuleProps({}, {}) as ICartIconViewProps;
        moduleProps.resources = mockResources;
        const mockProps: ICartIconViewProps = {
            ...moduleProps,
            className: 'className',
            cartIcon: 'Icon',
            // @ts-ignore partial mock
            cartlines:undefined,
            FlyoutContainer:undefined,
            CartlinesWrapper: { className: 'node-class-CartlinesWrapper' },
            totalPrice: '$0.00',
            checkoutAsSignInUserButton: <button>Checkout</button>,
            checkoutAsGuestButton: <button>Checkout as guest</button>,
            goToCartButton: <button>Back to shopping</button>,
            waitingComponent: 'Waiting',
            isCartLoading: false,
            removeItemClickHandler: jest.fn(),
        };
        const component = render(<CartIconView {...mockProps} />);
        expect(component).toMatchSnapshot();
    });
});
