/*---------------------------------------------------------------------------------------------
 *  Copyright (c) Microsoft Corporation. All rights reserved.
 *  Licensed under the MIT License. See License.txt in the project root for license information.
 *--------------------------------------------------------------------------------------------*/

import { buildHydratedMockActionContext,IActionContext } from '@msdyn365-commerce/core';

import * as GlobalStateActions from '@msdyn365-commerce/global-state';
import {
    Cart,
} from '@msdyn365-commerce/retail-proxy/dist/Entities/CommerceTypes.g';

import {createInput,getMiniCartData } from '../../utils/get-products-in-mini-cart';
jest.mock('@msdyn365-commerce/global-state');
let mockCartState: GlobalStateActions.ICartState;
let mockActionContext: IActionContext;
let mockCheckoutState: GlobalStateActions.ICheckoutState;
const mockActiveCart: Cart = {
    Id: 'gB8DCi6AK3mzMavh08C4P18wFDbEEyto',
    CartLines: [
        {
            LineId: '574208bdcf744390adf75d460d5339bb'
        }
    ],
    Version: 123
};
const mockCheckoutCart: Cart = {
    Id: 'cN6mfMjzVw7lBTQMdrwsQh~lKaU4XXbF',
    AmountDue: 100,
    TotalAmount: 100,
    CartLines: [
        {
            LineId: '574208bdcf744390adf75d460d5339bb',
            Quantity: 2,
            ProductId: 2
        }
    ],
    LoyaltyCardId: 'ABC',
    Version: 123
};
describe('emptyActiveCartAction  ccc', () => {
    mockActionContext = buildHydratedMockActionContext({});
    // mockActionContext.chainAction = jest.fn((action, input) => { return Promise.resolve('us');});
    // @ts-ignore: Jest Mocking Confuses TS Complier
    mockCartState = {
        cart: mockActiveCart,
        removeCartLines: jest.fn(),
        removeAllPromoCodes: jest.fn()
    };

    // @ts-ignore: Jest Mocking Confuses TS Complier
    mockCheckoutState = {
        // @ts-ignore: Jest Mocking Confuses TS Complier
        checkoutCart: {
            cart: mockCheckoutCart
        },
        removeCheckoutCartId: jest.fn()
    };
    // @ts-ignore: Jest Mocking Confuses TS Complier
    GlobalStateActions.getCartState.mockImplementation(async () => mockCartState);
    // @ts-ignore: Jest Mocking Confuses TS Complier
    GlobalStateActions.getCheckoutState.mockImplementation(async () => mockCheckoutState);
    it('throws error when getMiniCartData throws error', async () => {
        createInput();
        try {
            // @ts-ignore: Using partial for testing
            await getMiniCartData(mockActionContext);
        } catch (e) {
            expect(e).toBeDefined();
        }
    });

});
