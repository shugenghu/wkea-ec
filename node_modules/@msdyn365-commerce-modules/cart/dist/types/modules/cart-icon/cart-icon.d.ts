import { INodeProps } from '@msdyn365-commerce-modules/utilities';
import { CartLine, OrgUnitLocation } from '@msdyn365-commerce/retail-proxy';
import React from 'react';
import { ICartIconData } from './cart-icon.data';
import { ICartIconProps } from './cart-icon.props.autogenerated';
import { IFlyoutCartLineItemViewProps } from './components/flyout-cart-line-items';
import { IMiniCartData } from './utils/get-products-in-mini-cart';
export interface IMiniCartState {
    miniCartData: IMiniCartData;
    orgUnitLocations?: OrgUnitLocation[];
}
export interface ICartIconViewProps extends ICartIconProps<ICartIconData> {
    className: string;
    cartIcon: React.ReactNode;
    FlyoutContainer?: INodeProps;
    CartlinesWrapper: INodeProps;
    miniCartWrapper: INodeProps;
    miniCartItemWrapper: INodeProps;
    cartlines?: IFlyoutCartLineItemViewProps[];
    flyoutTitle: React.ReactNode;
    totalPrice: React.ReactNode;
    checkoutAsGuestButton?: React.ReactNode;
    checkoutAsSignInUserButton?: React.ReactNode;
    goToCartButton?: React.ReactNode;
    waitingComponent?: React.ReactNode;
    isCartLoading: boolean;
    removeItemClickHandler(cartlineToRemove: CartLine): void;
}
declare class CartIcon extends React.Component<ICartIconProps<ICartIconData>, IMiniCartState> {
    private telemetryContent;
    private checkoutBySignInAttributes;
    private checkoutByGuestAttributes;
    private viewShoppingBagAttributes;
    constructor(props: ICartIconProps<ICartIconData>);
    componentDidMount(): Promise<void>;
    render(): JSX.Element | null;
    private _getCheckoutURL;
    private _getCartLines;
    private _getImageSettings;
    private _removeItemFromCartHandler;
}
export default CartIcon;
