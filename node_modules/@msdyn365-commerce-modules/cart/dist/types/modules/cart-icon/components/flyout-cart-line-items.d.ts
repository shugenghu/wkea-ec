import { IProductInventoryInformation } from '@msdyn365-commerce-modules/retail-actions';
import { ITelemetryContent } from '@msdyn365-commerce-modules/utilities';
import { ICartlineResourceString } from '@msdyn365-commerce/components';
import { ICoreContext, IGridSettings, IImageSettings, ITelemetry } from '@msdyn365-commerce/core';
import { ICartState } from '@msdyn365-commerce/global-state';
import { CartLine, OrgUnitLocation, ProductDeliveryOptions, SimpleProduct } from '@msdyn365-commerce/retail-proxy';
import * as React from 'react';
export interface IFlyoutCartLineItemsProps {
    cartlines: CartLine[];
    cartState: ICartState | undefined;
    orgUnitLocations: OrgUnitLocation[] | undefined;
    resources: ICartlineResourceString;
    productAvailabilites: IProductInventoryInformation[] | undefined;
    products: SimpleProduct[] | undefined;
    productDeliveryOptions: ProductDeliveryOptions[] | undefined;
    pickupDeliveryModeCode?: string;
    gridSettings: IGridSettings;
    imageSettings: IImageSettings;
    id: string;
    typeName: string;
    context: ICoreContext;
    telemetry: ITelemetry;
    removeButtonText: string;
    outOfStockText: string;
    outOfRangeOneText: string;
    outOfRangeFormatText: string;
    maxCartlineQuantity: number;
    outOfStockThreshold: number;
    isStockCheckEnabled: boolean;
    telemetryContent?: ITelemetryContent;
    removeItemClickHandler(cartlineToRemove: CartLine): void;
}
export interface IFlyoutCartLineItemViewProps {
    cartline: React.ReactNode;
    remove: React.ReactNode;
    storeLocation: React.ReactNode;
    hasError: boolean;
    data: {
        product: SimpleProduct;
        cartline: CartLine;
    };
}
export declare const FlyoutCartLineItems: (props: IFlyoutCartLineItemsProps) => IFlyoutCartLineItemViewProps[] | null;
