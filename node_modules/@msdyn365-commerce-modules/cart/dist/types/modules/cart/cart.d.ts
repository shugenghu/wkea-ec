import { IOrderSummaryLines } from '@msdyn365-commerce-modules/order-summary-utilities';
import { INodeProps, ITelemetryContent } from '@msdyn365-commerce-modules/utilities';
import { IWishlistActionSuccessResult } from '@msdyn365-commerce/components';
import { ICartState } from '@msdyn365-commerce/global-state';
import { CartLine } from '@msdyn365-commerce/retail-proxy';
import React from 'react';
import { ICartData } from './cart.data';
import { ICartProps } from './cart.props.autogenerated';
import { ICartlinesViewProps } from './components/cart-line-items';
export interface ICartViewProps extends ICartProps<ICartData> {
    className: string;
    title?: React.ReactNode;
    CartlinesWrapper: INodeProps;
    cartlines?: ICartlinesViewProps[];
    cart: ICartState | undefined;
    orderSummaryHeading: React.ReactNode;
    orderSummaryLineitems?: IOrderSummaryLines;
    OrderSummaryWrapper: INodeProps;
    OrderSummaryItems: INodeProps;
    OrderSummaryErrors?: IOrderSummaryErrors;
    checkoutAsGuestButton: React.ReactNode;
    checkoutAsSignInUserButton: React.ReactNode;
    storeSelector?: React.ReactNode;
    backToShoppingButton: React.ReactNode;
    waitingComponent: React.ReactNode;
    promoCode: React.ReactNode;
    cartLoadingStatus: string;
    cartDataResult: boolean;
    createTemplateFromCartButton: React.ReactNode;
    telemetryContent?: ITelemetryContent;
    removeItemClickHandler(cartlineToRemove: CartLine): void;
    moveToWishlistSuccessHandler(result: IWishlistActionSuccessResult, cartlineId: CartLine): void;
}
export interface IOrderSummaryErrors {
    Wrapper: INodeProps;
    header: React.ReactNode;
    errors: React.ReactNode[];
}
declare class Cart extends React.Component<ICartProps<ICartData>> {
    private telemetryContent;
    private payLoad;
    constructor(props: ICartProps<ICartData>);
    render(): JSX.Element | null;
    private _displayAddCartToTemplate;
    private _getOrderSummaryErrors;
    private _getOrderSummaryLineItems;
    private _getPromoCode;
    private _generateAddToOrderTemplateDialogResources;
    private _generateItemAddedToOrderTemplateDialogResources;
    private _generateLinesAddedToOrderTemplateDialogResources;
    private _generateDuplicateItemsWhenAddingToOrderTemplateDialogResources;
    private _generateOrderTemplateNameDialogResources;
    private _getCartLines;
    private _getCheckoutURL;
    private _getImageSettings;
    private _removeItemFromCartHandler;
    private _moveToWishlistSuccessHandler;
    private _updateCartlineQuantity;
}
export default Cart;
