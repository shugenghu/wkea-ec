import { CartLineItems } from '../components/cart-line-items';
describe('Cart line items component', () => {
    it('renders correctly when all the data is provided', () => {
        const componentProps = {
            cartlines: [
                {
                    ItemId: '10',
                    LineId: '10',
                    ProductId: 10
                },
                {
                    ItemId: '20',
                    LineId: '20',
                    ProductId: 20
                }
            ],
            products: [
                {
                    RecordId: 10,
                },
                {
                    RecordId: 20
                }
            ],
            resources: {
                sizeString: 'Size',
                colorString: 'Color',
                configString: 'Config',
                styleString: 'Style',
                quantityDisplayString: 'Quantity',
                inputQuantityAriaLabel: 'aria label for quantity',
                discountStringText: 'Savings',
                originalPriceText: 'Original Price',
                currentPriceText: 'Current Price',
                shippingChargesText: 'Shipping charges'
            },
            productAvailabilites: [
                {
                    ProductAvailableQuantity: {
                        ProductId: 10,
                        AvailableQuantity: 15,
                    },
                    IsProductAvailable: true
                },
                {
                    ProductAvailableQuantity: {
                        ProductId: 20,
                        AvailableQuantity: 5
                    },
                    IsProductAvailable: true
                },
            ],
            isStockCheckEnabled: true,
            outOfStockThreshold: 2,
            maxCartlineQuantity: 20,
            context: {
                request: {
                    user: {
                        isAuthenticated: false
                    }
                }
            }
        };
        const cartLineItems = CartLineItems(componentProps);
        expect(cartLineItems).not.toBeNull();
        expect(cartLineItems[0].cartline).not.toBeNull();
        expect(cartLineItems[0].remove).not.toBeNull();
    });
    it('renders correctly with error messages switched on', () => {
        const componentProps = {
            cartlines: [
                {
                    ItemId: '10',
                    LineId: '10',
                    ProductId: 10,
                    Quantity: 10,
                },
                {
                    ItemId: '20',
                    LineId: '20',
                    ProductId: 20,
                    Quantity: 10,
                },
                {
                    ItemId: '30',
                    LineId: '30',
                    ProductId: 30,
                    Quantity: 10,
                },
                {
                    ItemId: '40',
                    LineId: '40',
                    ProductId: 40,
                    Quantity: 10,
                }
            ],
            products: [
                {
                    RecordId: 10,
                },
                {
                    RecordId: 20
                },
                {
                    RecordId: 30
                },
                {
                    RecordId: 40
                }
            ],
            resources: {
                sizeString: 'Size',
                colorString: 'Color',
                configString: 'Config',
                styleString: 'Style',
                quantityDisplayString: 'Quantity',
                inputQuantityAriaLabel: 'aria label for quantity',
                discountStringText: 'Savings',
                originalPriceText: 'Original Price',
                currentPriceText: 'Current Price',
                shippingChargesText: 'Shipping charges'
            },
            outOfStockText: 'This product is no longer available. Please remove it from the bag.',
            outOfRangeOneText: 'There is only one product left. Please choose quantity within the available range',
            outOfRangeFormatText: 'There are only {numLeft} products left. Please choose quantity within the available range',
            productAvailabilites: [
                { ProductAvailableQuantity: { ProductId: 10, AvailableQuantity: 15 }, IsProductAvailable: true },
                { ProductAvailableQuantity: { ProductId: 20, AvailableQuantity: 5 }, IsProductAvailable: true },
                { ProductAvailableQuantity: { ProductId: 30, AvailableQuantity: 1 }, IsProductAvailable: true },
                { ProductAvailableQuantity: { ProductId: 40, AvailableQuantity: 0 }, IsProductAvailable: true }
            ],
            isStockCheckEnabled: true,
            includeErrors: true,
            outOfStockThreshold: 0,
            maxCartlineQuantity: 20,
            context: {
                request: {
                    user: {
                        isAuthenticated: false
                    }
                }
            }
        };
        const cartLineItems = CartLineItems(componentProps);
        expect(cartLineItems).not.toBeNull();
        expect(cartLineItems[0].cartline).not.toBeNull();
        expect(cartLineItems[0].remove).not.toBeNull();
    });
    it('renders correctly without stock check', () => {
        const componentProps = {
            cartlines: [
                {
                    ItemId: '10',
                    LineId: '10',
                    ProductId: 10
                },
                {
                    ItemId: '20',
                    LineId: '20',
                    ProductId: 20
                }
            ],
            products: [
                {
                    RecordId: 10,
                },
                {
                    RecordId: 20
                }
            ],
            resources: {
                sizeString: 'Size',
                colorString: 'Color',
                configString: 'Config',
                styleString: 'Style',
                quantityDisplayString: 'Quantity',
                inputQuantityAriaLabel: 'aria label for quantity',
                discountStringText: 'Savings',
                originalPriceText: 'Original Price',
                currentPriceText: 'Current Price',
                shippingChargesText: 'Shipping charges'
            },
            isStockCheckEnabled: true,
            outOfStockThreshold: 2,
            maxCartlineQuantity: 20,
            context: {
                request: {
                    user: {
                        isAuthenticated: false
                    }
                }
            }
        };
        const cartLineItems = CartLineItems(componentProps);
        expect(cartLineItems).not.toBeNull();
        expect(cartLineItems[0].cartline).not.toBeNull();
        expect(cartLineItems[0].remove).not.toBeNull();
    });
    it('renders correctly with order templates', () => {
        const componentProps = {
            cartlines: [
                {
                    ItemId: '10',
                    LineId: '10',
                    ProductId: 10
                },
                {
                    ItemId: '20',
                    LineId: '20',
                    ProductId: 20
                }
            ],
            products: [
                {
                    RecordId: 10,
                },
                {
                    RecordId: 20
                }
            ],
            resources: {
                sizeString: 'Size',
                colorString: 'Color',
                configString: 'Config',
                styleString: 'Style',
                quantityDisplayString: 'Quantity',
                inputQuantityAriaLabel: 'aria label for quantity',
                discountStringText: 'Savings',
                originalPriceText: 'Original Price',
                currentPriceText: 'Current Price',
                shippingChargesText: 'Shipping charges'
            },
            productAvailabilites: [
                {
                    ProductAvailableQuantity: {
                        ProductId: 10,
                        AvailableQuantity: 15,
                    },
                    IsProductAvailable: true
                },
                {
                    ProductAvailableQuantity: {
                        ProductId: 20,
                        AvailableQuantity: 5
                    },
                    IsProductAvailable: true
                },
            ],
            isStockCheckEnabled: true,
            outOfStockThreshold: 2,
            maxCartlineQuantity: 20,
            context: {
                request: {
                    user: {
                        isAuthenticated: false
                    }
                }
            },
            orderTemplates: [],
            customerInformation: {
                AccountNumber: 'AccountNumber',
                IsB2b: true
            }
        };
        const cartLineItems = CartLineItems(componentProps);
        expect(cartLineItems).not.toBeNull();
        expect(cartLineItems[0].cartline).not.toBeNull();
        expect(cartLineItems[0].remove).not.toBeNull();
        expect(cartLineItems[0].addToOrderTemplate).not.toBeNull();
    });
    it('renders correctly with stock check', () => {
        const componentProps = {
            cartlines: [
                {
                    ItemId: '10',
                    LineId: '10',
                    ProductId: 10,
                    Quantity: 90,
                },
                {
                    ItemId: '20',
                    LineId: '20',
                    ProductId: 20,
                    Quantity: 120,
                }
            ],
            products: [
                {
                    RecordId: 10,
                },
                {
                    RecordId: 20
                }
            ],
            resources: {
                sizeString: 'Size',
                colorString: 'Color',
                configString: 'Config',
                styleString: 'Style',
                quantityDisplayString: 'Quantity',
                inputQuantityAriaLabel: 'aria label for quantity',
                discountStringText: 'Savings',
                originalPriceText: 'Original Price',
                currentPriceText: 'Current Price',
                shippingChargesText: 'Shipping charges'
            },
            isStockCheckEnabled: false,
            outOfStockThreshold: 100,
            maxCartlineQuantity: 20,
            context: {
                request: {
                    user: {
                        isAuthenticated: false
                    }
                }
            }
        };
        const cartLineItems = CartLineItems(componentProps);
        const dataProps = cartLineItems[0].cartline;
        expect(dataProps.props.maxQuantity).toBe(20);
    });
    it('renders correctly with stock productAvailability', () => {
        const componentProps = {
            cartlines: [
                {
                    ItemId: '10',
                    LineId: '10',
                    ProductId: 10,
                    Quantity: 90,
                },
                {
                    ItemId: '20',
                    LineId: '20',
                    ProductId: 20,
                    Quantity: 120,
                }
            ],
            products: [
                {
                    RecordId: 10,
                },
                {
                    RecordId: 20
                }
            ],
            resources: {
                sizeString: 'Size',
                colorString: 'Color',
                configString: 'Config',
                styleString: 'Style',
                quantityDisplayString: 'Quantity',
                inputQuantityAriaLabel: 'aria label for quantity',
                discountStringText: 'Savings',
                originalPriceText: 'Original Price',
                currentPriceText: 'Current Price',
                shippingChargesText: 'Shipping charges'
            },
            isStockCheckEnabled: true,
            outOfStockThreshold: 100,
            maxCartlineQuantity: 20,
            context: {
                request: {
                    user: {
                        isAuthenticated: false
                    }
                }
            }
        };
        const cartLineItems = CartLineItems(componentProps);
        const dataProps = cartLineItems[0].cartline;
        expect(dataProps.props.maxQuantity).toBe(0);
    });
    it('renders correctly with stock max Qunatities and productAvailability ', () => {
        const componentProps = {
            cartlines: [
                {
                    ItemId: '10',
                    LineId: '10',
                    ProductId: 10,
                    Quantity: 90,
                },
                {
                    ItemId: '20',
                    LineId: '20',
                    ProductId: 20,
                    Quantity: 120,
                }
            ],
            products: [
                {
                    RecordId: 10,
                },
                {
                    RecordId: 20
                }
            ],
            resources: {
                sizeString: 'Size',
                colorString: 'Color',
                configString: 'Config',
                styleString: 'Style',
                quantityDisplayString: 'Quantity',
                inputQuantityAriaLabel: 'aria label for quantity',
                discountStringText: 'Savings',
                originalPriceText: 'Original Price',
                currentPriceText: 'Current Price',
                shippingChargesText: 'Shipping charges'
            },
            isStockCheckEnabled: true,
            outOfStockThreshold: 100,
            maxCartlineQuantity: 20,
            productAvailabilites: [
                {
                    ProductAvailableQuantity: { AvailableQuantity: 20, ProductId: 10 },
                    StockLevelCode: '123',
                    StockLevelLabel: 'xyz',
                    IsProductAvailable: true,
                },
                {
                    ProductAvailableQuantity: { AvailableQuantity: 20, ProductId: 20 },
                    StockLevelCode: '123',
                    StockLevelLabel: 'xyz',
                    IsProductAvailable: true,
                }
            ],
            productDeliveryOptions: [
                {
                    ProductId: 10
                },
                {
                    ProductId: 20
                }
            ],
            context: {
                request: {
                    user: {
                        isAuthenticated: false
                    }
                }
            }
        };
        const cartLineItems = CartLineItems(componentProps);
        const dataProps = cartLineItems[0].cartline;
        expect(dataProps.props.maxQuantity).toBe(20);
    });
});
//# sourceMappingURL=cart-line-items.test.js.map