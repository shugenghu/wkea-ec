{"version":3,"file":"cart.view.test.js","sourceRoot":"./src/","sources":["modules/cart/__tests__/cart.view.test.tsx"],"names":[],"mappings":"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","sourcesContent":["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { buildMockModuleProps } from '@msdyn365-commerce/core';\nimport { render } from 'enzyme';\nimport * as React from 'react';\nimport { ICartViewProps } from '../cart';\nimport { ICartResources } from '../cart.props.autogenerated';\nimport CartView from '../cart.view';\n\ndescribe('Cart view unit tests - View', () => {\n    const mockResources = { emptyCartText: 'foo'} as ICartResources;\n    it('renders correctly with all attributes', () => {\n        const moduleProps: ICartViewProps= buildMockModuleProps({}, {}) as ICartViewProps;\n        moduleProps.resources = mockResources;\n        const mockProps = {\n            ...moduleProps,\n            className: 'className',\n            title: <h1>Cart</h1>,\n            storeSelector :'{storeSelector}',\n            OrderSummaryErrors:{\n                Wrapper:{className: 'node-class-Wrapper' },\n                header:'{header}',\n                errors:['{}','{}']\n            },\n            cartlines:[\n                {\n                    cartline: <div>cartline1</div>,\n                    remove: <button>removecartline1</button>,\n                    pickUpInStore: {\n                        callbacks: {\n                            toggleBopis: jest.fn\n                        },\n                        shippingMethod: <div>Shipped to you</div>,\n                        isBopisSelected: false,\n                        ContainerProps: {\n                            className: 'msc-cart-line__bopis'\n                        }\n                    },\n                    addToWishlist: undefined,\n                    addToOrderTemplate: undefined\n                },\n                {\n                    cartline: <div>cartline2</div>,\n                    remove: <button>removecartline2</button>,\n                    pickUpInStore: {\n                        callbacks: {\n                            toggleBopis: jest.fn\n                        },\n                        defaultComponent: <div>Shipped to you</div>,\n                        isBopisSelected: false,\n                        ContainerProps: {\n                            className: 'msc-cart-line__bopis'\n                        }\n                    },\n                    addToWishlist: undefined,\n                    addToOrderTemplate: undefined\n                }\n            ],\n            orderSummaryHeading: <h2>Order summary</h2>,\n            CartlinesWrapper: { className: 'node-class-CartlinesWrapper' },\n            OrderSummaryWrapper: { className: 'node-class-OrderSummaryWrapper' },\n            checkoutAsSignInUserButton: <button>Checkout</button>,\n            checkoutAsGuestButton: <button>Checkout as guest</button>,\n            backToShoppingButton: <button>Back to shopping</button>,\n            orderSummaryLineitems:{\n                subtotal: <span>Subtotal</span>,\n                shipping: <span>estimatedshipping</span>,\n                tax: <span>estimatedtax</span>,\n                orderTotal: <span>ordertotal</span>,\n                totalDiscounts:<span>totalDiscounts</span>\n            },\n            promoCode: <p>promo code</p>\n        };\n        const component = render(<CartView {...mockProps} />);\n        expect(component).toMatchSnapshot();\n    });\n\n    it('renders correctly with no cartlines', () => {\n        const moduleProps: ICartViewProps= buildMockModuleProps({}, {}) as ICartViewProps;\n        moduleProps.resources = mockResources;\n        const mockProps = {\n            ...moduleProps,\n            className: 'className',\n            cartEmptyText: 'This cart is empty',\n            title: <h1>Cart</h1>,\n            cartlines: undefined,\n            orderSummaryHeading: <h2>Order summary</h2>,\n            CartlinesWrapper: { className: 'node-class-CartlinesWrapper' },\n            OrderSummaryWrapper: { className: 'node-class-OrderSummaryWrapper' },\n            checkoutAsGuestButton: <button>Checkout as guest</button>,\n            backToShoppingButton: <button>Back to shopping</button>,\n            orderSummaryLineitems:{\n                subtotal: <span>Subtotal</span>,\n                shipping: <span>estimatedshipping</span>,\n                tax: <span>estimatedtax</span>,\n                orderTotal: <span>ordertotal</span>,\n                totalDiscounts:<span>totalDiscounts</span>\n            },\n            promoCode: <p>promo code</p>\n        };\n        const component = render(<CartView {...mockProps} />);\n        expect(component).toMatchSnapshot();\n    });\n\n    it('renders correctly with no orderSummary lines', () => {\n        const moduleProps: ICartViewProps= buildMockModuleProps({}, {}) as ICartViewProps;\n        moduleProps.resources = mockResources;\n        const mockProps = {\n            ...moduleProps,\n            className: 'className',\n            cartEmptyText: 'This cart is empty',\n            title: <h1>Cart</h1>,\n            cartlines: undefined,\n            orderSummaryHeading: <h2>Order summary</h2>,\n            CartlinesWrapper: { className: 'node-class-CartlinesWrapper' },\n            OrderSummaryWrapper: { className: 'node-class-OrderSummaryWrapper' },\n            checkoutAsGuestButton: <button>Checkout as guest</button>,\n            backToShoppingButton: <button>Back to shopping</button>,\n            orderSummaryLineitems:undefined,\n            promoCode: <p>promo code</p>\n        };\n        const component = render(<CartView {...mockProps} />);\n        expect(component).toMatchSnapshot();\n    });\n\n    it('renders correctly with no orderSummarylines with discount lines', () => {\n        const moduleProps: ICartViewProps= buildMockModuleProps({}, {}) as ICartViewProps;\n        moduleProps.resources = mockResources;\n        const mockProps = {\n            ...moduleProps,\n            className: 'className',\n            cartEmptyText: 'This cart is empty',\n            title: <h1>Cart</h1>,\n            cartlines: undefined,\n            orderSummaryHeading: <h2>Order summary</h2>,\n            CartlinesWrapper: { className: 'node-class-CartlinesWrapper' },\n            OrderSummaryWrapper: { className: 'node-class-OrderSummaryWrapper' },\n            checkoutAsGuestButton: <button>Checkout as guest</button>,\n            backToShoppingButton: <button>Back to shopping</button>,\n            orderSummaryLineitems:{\n                subtotal: <span>Subtotal</span>,\n                shipping: <span>estimatedshipping</span>,\n                tax: <span>estimatedtax</span>,\n                orderTotal: <span>ordertotal</span>,\n                totalDiscounts:<span>totalDiscounts</span>\n            },\n            promoCode: <p>promo code</p>\n        };\n        const component = render(<CartView {...mockProps} />);\n        expect(component).toMatchSnapshot();\n    });\n\n    it('renders correctly with no orderSummarylines without discount lines', () => {\n        const moduleProps: ICartViewProps= buildMockModuleProps({}, {}) as ICartViewProps;\n        moduleProps.resources = mockResources;\n        const mockProps = {\n            ...moduleProps,\n            className: 'className',\n            cartEmptyText: 'This cart is empty',\n            title: <h1>Cart</h1>,\n            cartlines: undefined,\n            orderSummaryHeading: <h2>Order summary</h2>,\n            CartlinesWrapper: { className: 'node-class-CartlinesWrapper' },\n            OrderSummaryWrapper: { className: 'node-class-OrderSummaryWrapper' },\n            checkoutAsGuestButton: <button>Checkout as guest</button>,\n            backToShoppingButton: <button>Back to shopping</button>,\n            orderSummaryLineitems:{\n                subtotal: <span>Subtotal</span>,\n                shipping: <span>estimatedshipping</span>,\n                tax: <span>estimatedtax</span>,\n                orderTotal: <span>ordertotal</span>\n            },\n            promoCode: <p>promo code</p>\n        };\n        const component = render(<CartView {...mockProps} />);\n        expect(component).toMatchSnapshot();\n    });\n    it('renders correctly with loading message', () => {\n        const moduleProps: ICartViewProps= buildMockModuleProps({}, {}) as ICartViewProps;\n        moduleProps.resources = mockResources;\n        const mockProps = {\n            ...moduleProps,\n            className: 'className',\n            cartEmptyText: 'This cart is empty',\n            cartLoadingStatus:'loading',\n            title: <h1>Cart</h1>,\n            cartlines: undefined,\n            orderSummaryHeading: <h2>Order summary</h2>,\n            CartlinesWrapper: { className: 'node-class-CartlinesWrapper' },\n            OrderSummaryWrapper: { className: 'node-class-OrderSummaryWrapper' },\n            checkoutAsGuestButton: <button>Checkout as guest</button>,\n            backToShoppingButton: <button>Back to shopping</button>,\n            orderSummaryLineitems:{\n                subtotal: <span>Subtotal</span>,\n                shipping: <span>estimatedshipping</span>,\n                tax: <span>estimatedtax</span>,\n                orderTotal: <span>ordertotal</span>\n            },\n            promoCode: <p>promo code</p>\n        };\n        const component = render(<CartView {...mockProps} />);\n        expect(component).toMatchSnapshot();\n    });\n    it('renders correctly with loading message', () => {\n        const moduleProps: ICartViewProps= buildMockModuleProps({}, {}) as ICartViewProps;\n        moduleProps.resources = mockResources;\n        const mockProps = {\n            ...moduleProps,\n            className: 'className',\n            cartEmptyText: 'This cart is empty',\n            cartDataResult:true,\n            title: <h1>Cart</h1>,\n            cartlines: undefined,\n            orderSummaryHeading: <h2>Order summary</h2>,\n            CartlinesWrapper: { className: 'node-class-CartlinesWrapper' },\n            OrderSummaryWrapper: { className: 'node-class-OrderSummaryWrapper' },\n            checkoutAsGuestButton: <button>Checkout as guest</button>,\n            backToShoppingButton: <button>Back to shopping</button>,\n            orderSummaryLineitems:{\n                subtotal: <span>Subtotal</span>,\n                shipping: <span>estimatedshipping</span>,\n                tax: <span>estimatedtax</span>,\n                orderTotal: <span>ordertotal</span>\n            },\n            promoCode: <p>promo code</p>\n        };\n        const component = render(<CartView {...mockProps} />);\n        expect(component).toMatchSnapshot();\n    });\n\n});\n"]}