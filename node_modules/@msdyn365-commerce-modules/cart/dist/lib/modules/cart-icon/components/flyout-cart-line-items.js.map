{"version":3,"file":"flyout-cart-line-items.js","sourceRoot":"./src/","sources":["modules/cart-icon/components/flyout-cart-line-items.tsx"],"names":[],"mappings":"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","sourcesContent":["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { getProductUrlSync, IProductInventoryInformation } from '@msdyn365-commerce-modules/retail-actions';\nimport { Button, getPayloadObject, getTelemetryAttributes, ITelemetryContent, TelemetryConstant } from '@msdyn365-commerce-modules/utilities';\nimport { CartLineItemComponent, ICartlineResourceString } from '@msdyn365-commerce/components';\nimport { ICoreContext, IGridSettings, IImageSettings, ITelemetry } from '@msdyn365-commerce/core';\nimport { ICartState } from '@msdyn365-commerce/global-state';\nimport { CartLine, OrgUnitLocation, ProductAvailableQuantity, ProductDeliveryOptions, SimpleProduct } from '@msdyn365-commerce/retail-proxy';\nimport { ReleasedProductType } from '@msdyn365-commerce/retail-proxy/dist/Entities/CommerceTypes.g';\nimport * as React from 'react';\n\nexport interface IFlyoutCartLineItemsProps {\n    cartlines: CartLine[];\n    cartState: ICartState | undefined;\n    orgUnitLocations: OrgUnitLocation[] | undefined;\n    resources: ICartlineResourceString;\n    productAvailabilites: IProductInventoryInformation[] | undefined;\n    products: SimpleProduct[] | undefined;\n    productDeliveryOptions: ProductDeliveryOptions[] | undefined;\n    pickupDeliveryModeCode?: string;\n    /** GridSettings for the product image in cartline  */\n    gridSettings: IGridSettings;\n    /** ImageSettings for the product image in cartline  */\n    imageSettings: IImageSettings;\n    id: string;\n    typeName:string;\n    context: ICoreContext;\n    telemetry: ITelemetry;\n    removeButtonText: string;\n    outOfStockText: string;\n    outOfRangeOneText: string;\n    outOfRangeFormatText: string;\n    maxCartlineQuantity: number;\n\n    outOfStockThreshold: number;\n    isStockCheckEnabled: boolean;\n    telemetryContent?: ITelemetryContent;\n    removeItemClickHandler(cartlineToRemove: CartLine): void;\n}\n\nexport interface IFlyoutCartLineItemViewProps {\n    cartline: React.ReactNode;\n    remove: React.ReactNode;\n    storeLocation: React.ReactNode;\n    hasError: boolean;\n\n    data: {\n        product: SimpleProduct;\n        cartline: CartLine;\n    };\n}\n\nconst _getProduct = (productId: number | undefined, products: SimpleProduct[]): SimpleProduct | undefined => {\n    if (productId !== undefined && products) {\n        return products.find(product => {\n            return productId === product.RecordId;\n        });\n    }\n    return undefined;\n};\n\nconst _getCartItemMaxQuantity = (outOfStockThreshold: number, maxCartlineQuantity: number, isStockCheckEnabled: boolean, productAvailability?: ProductAvailableQuantity) => {\n    if(isStockCheckEnabled) {\n        if(!productAvailability || !productAvailability.AvailableQuantity || productAvailability.AvailableQuantity <= 0 || productAvailability.AvailableQuantity <= outOfStockThreshold) {\n            return 0;\n        }\n        return productAvailability.AvailableQuantity - outOfStockThreshold;\n    }\n\n    return maxCartlineQuantity;\n};\n\nconst _assembleNode = (\n    cartline: CartLine,\n    product: SimpleProduct,\n    props:IFlyoutCartLineItemsProps,\n    index:number,\n    foundProductAvailability?:ProductAvailableQuantity,\n    foundProductDeliveryOptions?:ProductDeliveryOptions,\n    ):IFlyoutCartLineItemViewProps => {\n    const {\n            imageSettings,\n            gridSettings,\n            id,\n            typeName,\n            context,\n            resources,\n            removeButtonText,\n            removeItemClickHandler } = props;\n\n    const maxQuantity = _getCartItemMaxQuantity(props.outOfStockThreshold,  props.maxCartlineQuantity, props.isStockCheckEnabled, foundProductAvailability);\n\n    // check if the product is service or not by product type\n    const PRODUCTASSERVICE = 2 as ReleasedProductType.Service;\n    const isServiceItem = product.ItemTypeValue === PRODUCTASSERVICE;\n\n    const onRemoveClickHandler = (event: React.MouseEvent<HTMLElement>) => { removeItemClickHandler(cartline); };\n    const payLoad = getPayloadObject('click', props.telemetryContent!, TelemetryConstant.RemoveCartItem);\n    const removeCartItemAttribute = getTelemetryAttributes(props.telemetryContent!, payLoad);\n\n    return {\n        data: {\n            product: product,\n            cartline: cartline\n        },\n        hasError: (!isServiceItem && props.isStockCheckEnabled) ? cartline.Quantity! > maxQuantity : false,\n        cartline: (\n            <CartLineItemComponent\n                    data={{\n                        cartLine: cartline,\n                        product: product\n                    }}\n                    currentQuantity = {cartline.Quantity!}\n                    maxQuantity = {maxQuantity}\n                    isOutOfStock = {(!isServiceItem && props.isStockCheckEnabled) ? (maxQuantity <= 0 ? true: false) : false}\n                    gridSettings={gridSettings}\n                    imageSettings={imageSettings}\n                    id={id}\n                    typeName={typeName}\n                    productUrl={getProductUrlSync(product, props.context.actionContext, undefined)}\n                    context={context}\n                    resources={resources}\n                    key={index}\n                    isQuantityEditable={false}\n                    primaryImageUrl={product.PrimaryImageUrl}\n                    displayMode='COMPACT'\n                    telemetryContent={props.telemetryContent!}\n            />),\n        remove: (\n            <Button\n                className='msc-cart-line__remove-item'\n                onClick={onRemoveClickHandler}\n                title={removeButtonText}\n                {...removeCartItemAttribute}\n            >\n                {removeButtonText}\n            </Button>\n        ),\n        storeLocation: (\n            _renderStoreLocation(cartline, props)\n        )\n    };\n};\n\nconst _renderStoreLocation = (cartLine: CartLine | null | undefined, props: IFlyoutCartLineItemsProps): JSX.Element | null => {\n    if(cartLine && cartLine.FulfillmentStoreId) {\n        const orgUnitName = _getOrgUnitName(cartLine.FulfillmentStoreId, props.orgUnitLocations);\n\n        if(orgUnitName) {\n            return (\n                <div className={`msc-cart-line__bopis-method`}>\n                    <span className={`pick-up`}>{orgUnitName}</span>\n                </div>\n            );\n        }\n    }\n\n    return null;\n};\n\nconst _getOrgUnitName = (fulfillmentStoreId: string | undefined, orgUnitLocations: OrgUnitLocation[] | undefined) => {\n    if(!orgUnitLocations || !fulfillmentStoreId || !(orgUnitLocations.length > 0)) {\n        return '';\n    }\n\n    const foundLocation = orgUnitLocations.find(orgUnitLocation => {\n        return orgUnitLocation.OrgUnitNumber === fulfillmentStoreId;\n    });\n\n    if(foundLocation) {\n        return foundLocation.OrgUnitName;\n    } else {\n        return fulfillmentStoreId;\n    }\n};\n\nconst _assembleCartlines = (\n    cartlines: CartLine[],\n    products: SimpleProduct[] | undefined,\n    props: IFlyoutCartLineItemsProps):IFlyoutCartLineItemViewProps[] | null => {\n    const reactNodes:IFlyoutCartLineItemViewProps[] = [];\n\n    if(!products || products.length === 0) {\n        props.context.telemetry.error('Cartlines content is empty, module wont render');\n        return null;\n    }\n\n    cartlines.map((cartline, index) => {\n        const product = _getProduct(cartline.ProductId, products);\n        let foundProductAvailability;\n        if(props.productAvailabilites && props.productAvailabilites.length > 0) {\n            foundProductAvailability = props.productAvailabilites.find((productAvailability) => {\n                return productAvailability.ProductAvailableQuantity?.ProductId! === cartline.ProductId;\n            });\n        }\n        let foundProductDeliveryOption;\n        if(props.productDeliveryOptions && props.productDeliveryOptions.length > 0) {\n            foundProductDeliveryOption = props.productDeliveryOptions.find((deliveryOption) => {\n                return deliveryOption && deliveryOption.ProductId === cartline.ProductId;\n            });\n        }\n        if(product) {\n            reactNodes.push(_assembleNode(cartline, product, props, index, foundProductAvailability?.ProductAvailableQuantity, foundProductDeliveryOption));\n        }\n    });\n\n    return reactNodes;\n};\n\n/**\n * CartLineItems component\n */\n\nexport const FlyoutCartLineItems = (props: IFlyoutCartLineItemsProps) => {\n    const { products, cartlines } = props;\n    return (\n        _assembleCartlines(cartlines, products, props)\n    );\n};"]}