{"version":3,"file":"cart-icon.view.test.js","sourceRoot":"./src/","sources":["modules/cart-icon/__tests__/cart-icon.view.test.tsx"],"names":[],"mappings":"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","sourcesContent":["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { buildMockModuleProps } from '@msdyn365-commerce/core';\nimport { render } from 'enzyme';\nimport * as React from 'react';\nimport { mockResources } from '../__mocks__/mock-resources';\nimport { ICartIconViewProps } from '../cart-icon';\nimport CartIconView from '../cart-icon.view';\n\ndescribe('Cart view unit tests - View', () => {\n    it('renders correctly with all attributes', () => {\n        const moduleProps: ICartIconViewProps= buildMockModuleProps({}, {}) as ICartIconViewProps;\n        moduleProps.resources = mockResources;\n        const mockProps: ICartIconViewProps = {\n            ...moduleProps,\n            className: 'className',\n            cartIcon: 'Icon',\n            // @ts-ignore partial mock\n            cartlines:[\n                {\n                    cartline: <div>cartline1</div>,\n                    remove: <button>removecartline1</button>,\n                    hasError: false,\n                    data: {\n                        // @ts-ignore partial mock\n                        product: {},\n                        // @ts-ignore partial mock\n                        cartline: {}\n                    }\n                },\n                {\n                    cartline: <div>cartline2</div>,\n                    remove: <button>removecartline2</button>,\n                    hasError: false,\n                    data: {\n                        // @ts-ignore partial mock\n                        product: {},\n                        // @ts-ignore partial mock\n                        cartline: {}\n                    }\n                }\n            ],\n            FlyoutContainer: { className: 'node-class-FlyoutContainer' },\n            CartlinesWrapper: { className: 'node-class-CartlinesWrapper' },\n            totalPrice: '$0.00',\n            checkoutAsSignInUserButton: <button>Checkout</button>,\n            checkoutAsGuestButton: <button>Checkout as guest</button>,\n            goToCartButton: <button>Back to shopping</button>,\n            waitingComponent: 'Waiting',\n            isCartLoading: false,\n            removeItemClickHandler: jest.fn(),\n        };\n        const component = render(<CartIconView {...mockProps} />);\n        expect(component).toMatchSnapshot();\n    });\n    it('renders correctly ', () => {\n        const moduleProps: ICartIconViewProps= buildMockModuleProps({}, {}) as ICartIconViewProps;\n        moduleProps.resources = mockResources;\n        const mockProps: ICartIconViewProps = {\n            ...moduleProps,\n            className: 'className',\n            cartIcon: 'Icon',\n            // @ts-ignore partial mock\n            cartlines:undefined,\n            FlyoutContainer: { className: 'node-class-FlyoutContainer' },\n            CartlinesWrapper: { className: 'node-class-CartlinesWrapper' },\n            totalPrice: '$0.00',\n            checkoutAsSignInUserButton: <button>Checkout</button>,\n            checkoutAsGuestButton: <button>Checkout as guest</button>,\n            goToCartButton: <button>Back to shopping</button>,\n            waitingComponent: 'Waiting',\n            isCartLoading: false,\n            removeItemClickHandler: jest.fn(),\n        };\n        const component = render(<CartIconView {...mockProps} />);\n        expect(component).toMatchSnapshot();\n    });\n    it('renders correctly FlyoutContainer check', () => {\n        const moduleProps: ICartIconViewProps= buildMockModuleProps({}, {}) as ICartIconViewProps;\n        moduleProps.resources = mockResources;\n        const mockProps: ICartIconViewProps = {\n            ...moduleProps,\n            className: 'className',\n            cartIcon: 'Icon',\n            // @ts-ignore partial mock\n            cartlines:undefined,\n            FlyoutContainer:undefined,\n            CartlinesWrapper: { className: 'node-class-CartlinesWrapper' },\n            totalPrice: '$0.00',\n            checkoutAsSignInUserButton: <button>Checkout</button>,\n            checkoutAsGuestButton: <button>Checkout as guest</button>,\n            goToCartButton: <button>Back to shopping</button>,\n            waitingComponent: 'Waiting',\n            isCartLoading: false,\n            removeItemClickHandler: jest.fn(),\n        };\n        const component = render(<CartIconView {...mockProps} />);\n        expect(component).toMatchSnapshot();\n    });\n});\n"]}