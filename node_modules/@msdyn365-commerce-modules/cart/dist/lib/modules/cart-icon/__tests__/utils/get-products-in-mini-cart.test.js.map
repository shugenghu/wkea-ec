{"version":3,"file":"get-products-in-mini-cart.test.js","sourceRoot":"./src/","sources":["modules/cart-icon/__tests__/utils/get-products-in-mini-cart.test.tsx"],"names":[],"mappings":"AAKA,OAAO,EAAE,8BAA8B,EAAiB,MAAM,yBAAyB,CAAC;AAExF,OAAO,KAAK,kBAAkB,MAAM,iCAAiC,CAAC;AAKtE,OAAO,EAAC,WAAW,EAAC,eAAe,EAAE,MAAM,uCAAuC,CAAC;AACnF,IAAI,CAAC,IAAI,CAAC,iCAAiC,CAAC,CAAC;AAC7C,IAAI,aAA4C,CAAC;AACjD,IAAI,iBAAiC,CAAC;AACtC,IAAI,iBAAoD,CAAC;AACzD,MAAM,cAAc,GAAS;IACzB,EAAE,EAAE,kCAAkC;IACtC,SAAS,EAAE;QACP;YACI,MAAM,EAAE,kCAAkC;SAC7C;KACJ;IACD,OAAO,EAAE,GAAG;CACf,CAAC;AACF,MAAM,gBAAgB,GAAS;IAC3B,EAAE,EAAE,kCAAkC;IACtC,SAAS,EAAE,GAAG;IACd,WAAW,EAAE,GAAG;IAChB,SAAS,EAAE;QACP;YACI,MAAM,EAAE,kCAAkC;YAC1C,QAAQ,EAAE,CAAC;YACX,SAAS,EAAE,CAAC;SACf;KACJ;IACD,aAAa,EAAE,KAAK;IACpB,OAAO,EAAE,GAAG;CACf,CAAC;AACF,QAAQ,CAAC,4BAA4B,EAAE,GAAG,EAAE;IACxC,iBAAiB,GAAG,8BAA8B,CAAC,EAAE,CAAC,CAAC;IAGvD,aAAa,GAAG;QACZ,IAAI,EAAE,cAAc;QACpB,eAAe,EAAE,IAAI,CAAC,EAAE,EAAE;QAC1B,mBAAmB,EAAE,IAAI,CAAC,EAAE,EAAE;KACjC,CAAC;IAGF,iBAAiB,GAAG;QAEhB,YAAY,EAAE;YACV,IAAI,EAAE,gBAAgB;SACzB;QACD,oBAAoB,EAAE,IAAI,CAAC,EAAE,EAAE;KAClC,CAAC;IAEF,kBAAkB,CAAC,YAAY,CAAC,kBAAkB,CAAC,KAAK,IAAI,EAAE,CAAC,aAAa,CAAC,CAAC;IAE9E,kBAAkB,CAAC,gBAAgB,CAAC,kBAAkB,CAAC,KAAK,IAAI,EAAE,CAAC,iBAAiB,CAAC,CAAC;IACtF,EAAE,CAAC,gDAAgD,EAAE,KAAK,IAAI,EAAE;QAC5D,WAAW,EAAE,CAAC;QACd,IAAI;YAEA,MAAM,eAAe,CAAC,iBAAiB,CAAC,CAAC;SAC5C;QAAC,OAAO,CAAC,EAAE;YACR,MAAM,CAAC,CAAC,CAAC,CAAC,WAAW,EAAE,CAAC;SAC3B;IACL,CAAC,CAAC,CAAC;AAEP,CAAC,CAAC,CAAC","sourcesContent":["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { buildHydratedMockActionContext,IActionContext } from '@msdyn365-commerce/core';\n\nimport * as GlobalStateActions from '@msdyn365-commerce/global-state';\nimport {\n    Cart,\n} from '@msdyn365-commerce/retail-proxy/dist/Entities/CommerceTypes.g';\n\nimport {createInput,getMiniCartData } from '../../utils/get-products-in-mini-cart';\njest.mock('@msdyn365-commerce/global-state');\nlet mockCartState: GlobalStateActions.ICartState;\nlet mockActionContext: IActionContext;\nlet mockCheckoutState: GlobalStateActions.ICheckoutState;\nconst mockActiveCart: Cart = {\n    Id: 'gB8DCi6AK3mzMavh08C4P18wFDbEEyto',\n    CartLines: [\n        {\n            LineId: '574208bdcf744390adf75d460d5339bb'\n        }\n    ],\n    Version: 123\n};\nconst mockCheckoutCart: Cart = {\n    Id: 'cN6mfMjzVw7lBTQMdrwsQh~lKaU4XXbF',\n    AmountDue: 100,\n    TotalAmount: 100,\n    CartLines: [\n        {\n            LineId: '574208bdcf744390adf75d460d5339bb',\n            Quantity: 2,\n            ProductId: 2\n        }\n    ],\n    LoyaltyCardId: 'ABC',\n    Version: 123\n};\ndescribe('emptyActiveCartAction  ccc', () => {\n    mockActionContext = buildHydratedMockActionContext({});\n    // mockActionContext.chainAction = jest.fn((action, input) => { return Promise.resolve('us');});\n    // @ts-ignore: Jest Mocking Confuses TS Complier\n    mockCartState = {\n        cart: mockActiveCart,\n        removeCartLines: jest.fn(),\n        removeAllPromoCodes: jest.fn()\n    };\n\n    // @ts-ignore: Jest Mocking Confuses TS Complier\n    mockCheckoutState = {\n        // @ts-ignore: Jest Mocking Confuses TS Complier\n        checkoutCart: {\n            cart: mockCheckoutCart\n        },\n        removeCheckoutCartId: jest.fn()\n    };\n    // @ts-ignore: Jest Mocking Confuses TS Complier\n    GlobalStateActions.getCartState.mockImplementation(async () => mockCartState);\n    // @ts-ignore: Jest Mocking Confuses TS Complier\n    GlobalStateActions.getCheckoutState.mockImplementation(async () => mockCheckoutState);\n    it('throws error when getMiniCartData throws error', async () => {\n        createInput();\n        try {\n            // @ts-ignore: Using partial for testing\n            await getMiniCartData(mockActionContext);\n        } catch (e) {\n            expect(e).toBeDefined();\n        }\n    });\n\n});\n"]}