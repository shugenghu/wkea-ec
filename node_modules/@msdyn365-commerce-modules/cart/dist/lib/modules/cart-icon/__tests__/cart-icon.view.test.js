import { buildMockModuleProps } from '@msdyn365-commerce/core';
import { render } from 'enzyme';
import * as React from 'react';
import { mockResources } from '../__mocks__/mock-resources';
import CartIconView from '../cart-icon.view';
describe('Cart view unit tests - View', () => {
    it('renders correctly with all attributes', () => {
        const moduleProps = buildMockModuleProps({}, {});
        moduleProps.resources = mockResources;
        const mockProps = {
            ...moduleProps,
            className: 'className',
            cartIcon: 'Icon',
            cartlines: [
                {
                    cartline: React.createElement("div", null, "cartline1"),
                    remove: React.createElement("button", null, "removecartline1"),
                    hasError: false,
                    data: {
                        product: {},
                        cartline: {}
                    }
                },
                {
                    cartline: React.createElement("div", null, "cartline2"),
                    remove: React.createElement("button", null, "removecartline2"),
                    hasError: false,
                    data: {
                        product: {},
                        cartline: {}
                    }
                }
            ],
            FlyoutContainer: { className: 'node-class-FlyoutContainer' },
            CartlinesWrapper: { className: 'node-class-CartlinesWrapper' },
            totalPrice: '$0.00',
            checkoutAsSignInUserButton: React.createElement("button", null, "Checkout"),
            checkoutAsGuestButton: React.createElement("button", null, "Checkout as guest"),
            goToCartButton: React.createElement("button", null, "Back to shopping"),
            waitingComponent: 'Waiting',
            isCartLoading: false,
            removeItemClickHandler: jest.fn(),
        };
        const component = render(React.createElement(CartIconView, Object.assign({}, mockProps)));
        expect(component).toMatchSnapshot();
    });
    it('renders correctly ', () => {
        const moduleProps = buildMockModuleProps({}, {});
        moduleProps.resources = mockResources;
        const mockProps = {
            ...moduleProps,
            className: 'className',
            cartIcon: 'Icon',
            cartlines: undefined,
            FlyoutContainer: { className: 'node-class-FlyoutContainer' },
            CartlinesWrapper: { className: 'node-class-CartlinesWrapper' },
            totalPrice: '$0.00',
            checkoutAsSignInUserButton: React.createElement("button", null, "Checkout"),
            checkoutAsGuestButton: React.createElement("button", null, "Checkout as guest"),
            goToCartButton: React.createElement("button", null, "Back to shopping"),
            waitingComponent: 'Waiting',
            isCartLoading: false,
            removeItemClickHandler: jest.fn(),
        };
        const component = render(React.createElement(CartIconView, Object.assign({}, mockProps)));
        expect(component).toMatchSnapshot();
    });
    it('renders correctly FlyoutContainer check', () => {
        const moduleProps = buildMockModuleProps({}, {});
        moduleProps.resources = mockResources;
        const mockProps = {
            ...moduleProps,
            className: 'className',
            cartIcon: 'Icon',
            cartlines: undefined,
            FlyoutContainer: undefined,
            CartlinesWrapper: { className: 'node-class-CartlinesWrapper' },
            totalPrice: '$0.00',
            checkoutAsSignInUserButton: React.createElement("button", null, "Checkout"),
            checkoutAsGuestButton: React.createElement("button", null, "Checkout as guest"),
            goToCartButton: React.createElement("button", null, "Back to shopping"),
            waitingComponent: 'Waiting',
            isCartLoading: false,
            removeItemClickHandler: jest.fn(),
        };
        const component = render(React.createElement(CartIconView, Object.assign({}, mockProps)));
        expect(component).toMatchSnapshot();
    });
});
//# sourceMappingURL=cart-icon.view.test.js.map