{"version":3,"file":"flyout-cart-line-items.test.js","sourceRoot":"./src/","sources":["modules/cart-icon/__tests__/flyout-cart-line-items.test.tsx"],"names":[],"mappings":"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","sourcesContent":["import { FlyoutCartLineItems, IFlyoutCartLineItemsProps } from '../components/flyout-cart-line-items';\n\ndescribe('Cart line items component', () => {\n\n    it('renders correctly when all the data is provided', () => {\n        // @ts-ignore partial mock\n        const componentProps: IFlyoutCartLineItemsProps = {\n            cartlines:[\n                {\n                    ItemId: '10',\n                    LineId: '10',\n                    ProductId: 10,\n                    FulfillmentStoreId:'{FulfillmentStoreId}'\n                },\n                {\n                    ItemId: '20',\n                    LineId: '20',\n                    ProductId: 20,\n                    FulfillmentStoreId:'{FulfillmentStoreId}'\n                }\n            ],\n            // @ts-ignore partial mock\n            products: [\n                // @ts-ignore partial mock\n                {\n                    RecordId: 10,\n                },\n                // @ts-ignore partial mock\n                {\n                    RecordId: 20\n                }\n            ],\n            resources: {\n                sizeString: 'Size',\n                colorString: 'Color',\n                configString: 'Config',\n                styleString: 'Style',\n                quantityDisplayString: 'Quantity',\n                inputQuantityAriaLabel: 'aria label for quantity',\n                discountStringText: 'Savings',\n                originalPriceText: 'Original Price',\n                currentPriceText: 'Current Price',\n                shippingChargesText: 'Shipping charges'\n            },\n            productAvailabilites: [\n                { ProductAvailableQuantity: { ProductId: 10, AvailableQuantity: 15 }, IsProductAvailable:true },\n                { ProductAvailableQuantity: { ProductId: 20, AvailableQuantity: 5 }, IsProductAvailable:true }\n            ],\n            isStockCheckEnabled: true,\n            outOfStockThreshold: 2,\n            maxCartlineQuantity: 20,\n            orgUnitLocations:[\n                {\n                    ChannelId:10,\n                    OrgUnitNumber:'{FulfillmentStoreId}'\n                },\n            ],\n            context: {\n                request:{\n                    // @ts-ignore partial mock\n                    user: {\n                        isAuthenticated: false\n                    }\n                }\n            }\n        };\n\n        const cartLineItems =  FlyoutCartLineItems(componentProps);\n        expect(cartLineItems).not.toBeNull();\n        expect(cartLineItems![0].cartline).not.toBeNull();\n        expect(cartLineItems![0].remove).not.toBeNull();\n    });\n    it('renders correctly with error messages switched on', () => {\n        // @ts-ignore partial mock\n        const componentProps: ICartLineItemsProps = {\n            cartlines:[\n                {\n                    ItemId: '10',\n                    LineId: '10',\n                    ProductId: 10,\n                    Quantity: 10,\n                },\n                {\n                    ItemId: '20',\n                    LineId: '20',\n                    ProductId: 20,\n                    Quantity: 10,\n                },\n                {\n                    ItemId: '30',\n                    LineId: '30',\n                    ProductId: 30,\n                    Quantity: 10,\n                },\n                {\n                    ItemId: '40',\n                    LineId: '40',\n                    ProductId: 40,\n                    Quantity: 10,\n                }\n            ],\n            // @ts-ignore partial mock\n            products: [\n                // @ts-ignore partial mock\n                {\n                    RecordId: 10,\n                },\n                // @ts-ignore partial mock\n                {\n                    RecordId: 20\n                },\n                // @ts-ignore partial mock\n                {\n                    RecordId: 30\n                },\n                // @ts-ignore partial mock\n                {\n                    RecordId: 40\n                }\n            ],\n            resources: {\n                sizeString: 'Size',\n                colorString: 'Color',\n                configString: 'Config',\n                styleString: 'Style',\n                quantityDisplayString: 'Quantity',\n                inputQuantityAriaLabel: 'aria label for quantity',\n                discountStringText: 'Savings'\n            },\n            outOfStockText: 'This product is no longer available. Please remove it from the bag.',\n            outOfRangeOneText: 'There is only one product left. Please choose quantity within the available range',\n            outOfRangeFormatText: 'There are only {numLeft} products left. Please choose quantity within the available range',\n            productAvailabilites: [\n                {\n                    ProductId: 10,\n                    AvailableQuantity: 15,\n                },\n                {\n                    ProductId: 20,\n                    AvailableQuantity: 5\n                },\n                {\n                    ProductId: 30,\n                    AvailableQuantity: 1,\n                },\n                {\n                    ProductId: 40,\n                    AvailableQuantity: 0\n                }\n            ],\n            isStockCheckEnabled: true,\n            includeErrors: true,\n            outOfStockThreshold: 0,\n            maxCartlineQuantity: 20,\n            context: {\n                request:{\n                    // @ts-ignore partial mock\n                    user: {\n                        isAuthenticated: false\n                    }\n                }\n            }\n        };\n\n        const cartLineItems =  FlyoutCartLineItems(componentProps);\n        expect(cartLineItems).not.toBeNull();\n        expect(cartLineItems![0].cartline).not.toBeNull();\n        expect(cartLineItems![0].remove).not.toBeNull();\n    });\n    it('renders correctly without stock check', () => {\n        // @ts-ignore partial mock\n        const componentProps: ICartLineItemsProps = {\n            cartlines:[\n                {\n                    ItemId: '10',\n                    LineId: '10',\n                },\n                {\n                    ItemId: '20',\n                    LineId: '20',\n                    ProductId: 20\n                }\n            ],\n            // @ts-ignore partial mock\n            products: [\n                // @ts-ignore partial mock\n                {\n                    RecordId: 10,\n                },\n                // @ts-ignore partial mock\n                {\n                    RecordId: 20\n                }\n            ],\n            resources: {\n                sizeString: 'Size',\n                colorString: 'Color',\n                configString: 'Config',\n                styleString: 'Style',\n                quantityDisplayString: 'Quantity',\n                inputQuantityAriaLabel: 'aria label for quantity',\n                discountStringText: 'Savings'\n            },\n            isStockCheckEnabled: false,\n            outOfStockThreshold: 2,\n            maxCartlineQuantity: 20,\n            productDeliveryOptions:[10,20],\n            context: {\n                request:{\n                    // @ts-ignore partial mock\n                    user: {\n                        isAuthenticated: false\n                    }\n                }\n            }\n        };\n\n        const cartLineItems =  FlyoutCartLineItems(componentProps);\n        expect(cartLineItems).not.toBeNull();\n        expect(cartLineItems![0].cartline).not.toBeNull();\n        expect(cartLineItems![0].remove).not.toBeNull();\n    });\n});"]}