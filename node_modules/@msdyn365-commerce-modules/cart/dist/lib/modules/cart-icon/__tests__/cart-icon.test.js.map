{"version":3,"file":"cart-icon.test.js","sourceRoot":"./src/","sources":["modules/cart-icon/__tests__/cart-icon.test.tsx"],"names":[],"mappings":"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","sourcesContent":["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { buildMockModuleProps, ICoreContext } from '@msdyn365-commerce/core';\nimport { ICartState } from '@msdyn365-commerce/global-state';\nimport { AsyncResult, OrgUnitLocation, SimpleProduct } from '@msdyn365-commerce/retail-proxy';\nimport { mount, shallow } from 'enzyme';\nimport * as React from 'react';\nimport { mockResources } from '../__mocks__/mock-resources';\nimport CartIcon, { ICartIconViewProps } from '../cart-icon';\nimport { ICartIconData } from '../cart-icon.data';\nimport { ICartIconProps } from '../cart-icon.props.autogenerated';\n\n// @ts-ignore partial mock\nconst mockContext: ICoreContext  = {\n    app: {\n        config: {\n            imageSettings: {\n                viewports: {\n                    xs: { q: `w=80&h=94&m=6`, w: 0, h: 0 },\n                    sm: { q: `w=148&h=174&m=6`, w: 0, h: 0 },\n                    lg: { q: `w=148&h=174&m=6`, w: 0, h: 0 }\n                },\n                lazyload: true\n            }\n        },\n        routes: {\n            home: '/fedev',\n            checkout: '/checkout'\n        }\n    },\n    request:{\n        // @ts-ignore partial mock\n        user:{\n            isAuthenticated: true\n        },\n        // @ts-ignore partial mock\n        channel: {\n            PickupDeliveryModeCode: '60',\n        }\n    },\n};\n\n// @ts-ignore partial mock\nconst mockContextWithoutRoutes: ICoreContext  = {\n    app: {\n        config: {\n            imageSettings: {\n                viewports: {\n                    xs: { q: `w=80&h=94&m=6`, w: 0, h: 0 },\n                    sm: { q: `w=148&h=174&m=6`, w: 0, h: 0 },\n                    lg: { q: `w=148&h=174&m=6`, w: 0, h: 0 }\n                },\n                lazyload: true\n            },\n            enableHoverCart:true\n        }\n    },\n    request:{\n        // @ts-ignore partial mock\n        user:{\n            isAuthenticated: false,\n            signInUrl:'https://xyz.com'\n        },\n    }\n};\n\nconst mockData: ICartIconData = {\n    cart: {\n        status: 'SUCCESS',\n        result: undefined\n    } as AsyncResult<ICartState>,\n    orgUnitLocations: {\n        status: 'FAILED',\n        result: undefined,\n    } as AsyncResult<OrgUnitLocation[]>\n};\n\ndescribe('Cart icon module snapshot tests', () => {\n    let moduleProps: ICartIconProps<ICartIconData>;\n\n    it('renders as expected when no cart present', () => {\n        moduleProps = {\n            ...buildMockModuleProps(mockData, {}, {}, mockContext) as ICartIconProps<ICartIconData>,\n             // @ts-ignore\n             renderView: jest.fn(props => { return <div props={props} />;}),\n             slots:{\n                storeSelector:[]\n             },\n             resources: mockResources\n        };\n\n        const result = mount(<CartIcon {...moduleProps} />);\n\n        expect(moduleProps.renderView).toBeCalled();\n        const viewProps: ICartIconViewProps = result.childAt(0).props().props;\n        expect(viewProps).toBeDefined();\n        expect(viewProps.cartlines).not.toBeTruthy();\n        expect(viewProps.checkoutAsGuestButton).not.toBeTruthy();\n        expect(viewProps.checkoutAsSignInUserButton).toBeTruthy();\n    });\n\n    it('renders as expected when getUrlSync return the correct URL', () => {\n        moduleProps = {\n             // @ts-ignore\n            ...buildMockModuleProps(\n                {\n                    ...mockData,\n                    id:'cart-icon',\n                    typeName:'{typeName}',\n                    // @ts-ignore\n                    products: {\n                        status: 'SUCCESS',\n                        result: [],\n                    } as AsyncResult<SimpleProduct[]>,\n                    // @ts-ignore\n                    cart: {\n                        status: 'SUCCESS',\n                        result: {\n                            cart:{\n                                Quantity: 1,\n                                NetAmountWithoutTax: 25,\n                                NetPrice: 27,\n                                TaxAmount: 2.7,\n                                TotalAmount: 25,\n                                Id: '123',\n                                ChargeLines: [\n                                    {\n                                        ChargeCode: 'FREIGHT',\n                                        Value: 20\n                                    }\n                                ],\n                                CartLines:[\n                                    {\n                                        ItemId: 10,\n                                        LineId: 10,\n                                        ProductId: 10\n                                    }\n                                ]\n                            }\n                        },\n                    } as AsyncResult<ICartState>\n                },\n                {},\n                {},\n                mockContextWithoutRoutes\n            ) as ICartIconProps<ICartIconData>,\n            // @ts-ignore\n            renderView: jest.fn(props => { return <div props={props} />;}),\n            resources: mockResources,\n            slots:{\n                storeSelector:[]\n            }\n        };\n\n        const result = mount(<CartIcon {...moduleProps} />);\n\n        expect(moduleProps.renderView).toBeCalled();\n\n        const viewProps: ICartIconViewProps = result.childAt(0).props().props;\n        expect(viewProps).toBeDefined();\n\n        expect(viewProps).toBeDefined();\n        expect(viewProps.cartlines).toBeNull();\n        expect(viewProps.checkoutAsGuestButton).toBeTruthy();\n        expect(viewProps.checkoutAsSignInUserButton).toBeTruthy();\n    });\n});\n\ndescribe('Cart module unit tests', () => {\n    let moduleProps: ICartIconProps<ICartIconData>;\n\n    it('when remove button it clicked it removes an item ', () => {\n        // tslint:disable-next-line:promise-must-complete\n        const removeCartLinesSpy = jest.fn(() => new Promise(() => { return '';}));\n        moduleProps = {\n             // @ts-ignore\n            ...buildMockModuleProps(\n                {\n                    ...mockData,\n                    // @ts-ignore\n                    products: {\n                        status: 'SUCCESS',\n                        result: [{\n                            RecordId:10,\n                        },\n                        {\n                            RecordId:20,\n                        }\n                    ],\n                    } as AsyncResult<SimpleProduct[]>,\n                    // @ts-ignore\n                    cart: {\n                        status: 'SUCCESS',\n                        result: {\n                            cart:{\n                                Quantity: 1,\n                                NetAmountWithoutTax: 25,\n                                NetPrice: 27,\n                                TaxAmount: 2.7,\n                                TotalAmount: 25,\n                                Id: '123',\n                                ChargeLines: [\n                                    {\n                                        ChargeCode: 'FREIGHT',\n                                        Value: 20\n                                    }\n                                ],\n                                CartLines:[\n                                    {\n                                        ItemId: 10,\n                                        LineId: 10,\n                                        ProductId: 10\n                                    },\n                                    {\n                                        ItemId: 20,\n                                        LineId: 20,\n                                        ProductId: 20\n                                    }\n                                ]\n                            },\n                            removeCartLines: removeCartLinesSpy\n                        },\n                    } as AsyncResult<ICartState>\n                },\n                {},\n                {},\n                mockContext\n            ) as ICartIconProps<ICartIconData>,\n            // @ts-ignore\n            renderView: jest.fn(props => { return <div props={props} />;}),\n            resources: mockResources,\n            slots:{\n                storeSelector:[]\n            }\n        };\n\n        const result = shallow(<CartIcon {...moduleProps} />);\n        // @ts-ignore\n        result.instance()._removeItemFromCartHandler({\n            ItemId: 10,\n            LineId: 10,\n            ProductId: 10\n        });\n\n        expect(removeCartLinesSpy).toHaveBeenCalled();\n        result.instance().setState({miniCartData:{products:[]}});\n        result.update();\n    });\n});\n"]}