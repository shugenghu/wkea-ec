import { buildMockModuleProps, IModule } from '@msdyn365-commerce/core';
import * as TelemetryHelper from './telemetryHelper';

describe('TelemetryHelper.getPayloadObject test', () => {
    let moduleProps: IModule;
    const mockActions = {};
    const mockConfig = {};
    beforeAll(() => {
        moduleProps = buildMockModuleProps({}, mockActions, mockConfig);
        moduleProps.friendlyName = 'Content Block';
        moduleProps.context.request.telemetryPageName = 'Homepage';
    });
    it('should return payLoad Object.', () => {

        const telemetryContent = TelemetryHelper.getTelemetryObject(moduleProps.context.request.telemetryPageName!, moduleProps.friendlyName, moduleProps.telemetry);

        const payLoad = TelemetryHelper.getPayloadObject('click', telemetryContent, 'Shop Now', '');
        expect(payLoad.contentCategory).toBe('click');
        expect(payLoad.contentAction.pgname).toBe('Homepage');
        expect(payLoad.contentAction.mname).toBe('Content Block');
        expect(payLoad.contentAction.etext).toBe('Shop Now');
        expect(payLoad.contentAction.recid).toBe('');
    });
});

describe('TelemetryHelper.getTelemetryAttributes test', () => {
    let moduleProps: IModule;
    const mockActions = {};
    const mockConfig = {};
    beforeAll(() => {
        moduleProps = buildMockModuleProps({}, mockActions, mockConfig);
        moduleProps.friendlyName = 'Content Block';
        moduleProps.context.request.telemetryPageName = 'Homepage';
    });
    it('should return telemetry Attributes.', () => {
        const telemetryContent = TelemetryHelper.getTelemetryObject(moduleProps.context.request.telemetryPageName!, moduleProps.friendlyName, moduleProps.telemetry);
        const payLoad = TelemetryHelper.getPayloadObject('click', telemetryContent, 'Shop Now', '');

        const attributes = TelemetryHelper.getTelemetryAttributes(telemetryContent, payLoad);
        expect(attributes).not.toBeNull();
    });
});
