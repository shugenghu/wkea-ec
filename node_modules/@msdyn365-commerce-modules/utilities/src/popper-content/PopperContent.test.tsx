import { mount, render } from 'enzyme';
import * as React from 'react';
import Tooltip from '../tooltip/Tooltip';
import PopperContent from './PopperContent';

const testRef: React.RefObject<HTMLAnchorElement> = React.createRef();
const spyOnToggle = jest.fn();

describe('PopperContent render without crash.', () => {
    let wrapper;

    it('renders correctly with Snapshot', () => {
        const component = render(
            <div>
            <PopperContent
                isOpen={ false}
                target={testRef}
                className={'test'}
                hideArrow={true}
                placementPrefix={''}
                arrowClassName={'arrowClassName'}
            >
                <div
                    className={'tooltip'}
                    role='tooltip'
                    id={'tooltip-test'}
                    aria-hidden={true}
                    onMouseOver={spyOnToggle}
                    onMouseLeave={spyOnToggle}
                    onKeyDown={spyOnToggle}
                />
            </PopperContent>
        </div>

        );
        expect(component).toMatchSnapshot();
    });
    it('State should be update.', () => {
        wrapper = mount(
            <PopperContent
                isOpen={ false}
                target={testRef}
                className={'test'}
                hideArrow={true}
                placementPrefix={''}
                arrowClassName={'arrowClassName'}
                placement={'top'}
            >
                <div
                    className={'tooltip'}
                    role='tooltip'
                    id={'tooltip-test'}
                    aria-hidden={true}
                    onMouseOver={spyOnToggle}
                    onMouseLeave={spyOnToggle}
                    onKeyDown={spyOnToggle}
                />
            </PopperContent>
        );
        wrapper.setProps({ isOpen: true });
        expect(wrapper.state().isOpen).toBe(true);
    });
});