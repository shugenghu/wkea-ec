/*---------------------------------------------------------------------------------------------
 *  Copyright (c) Microsoft Corporation. All rights reserved.
 *  Licensed under the MIT License. See License.txt in the project root for license information.
 *--------------------------------------------------------------------------------------------*/
import * as React from 'react';

export type WrapperTag = 'div' | 'span' | 'ul' | 'nav' | 'form' | 'li' | 'a' | 'header' | 'table' | 'tbody'| 'button';

export interface IGetWrapperInput {
    /* Component display name */
    displayName: string;

    /* Wrapper class */
    className: string;

    /* Wrapper Tag */
    tag?: WrapperTag;

    /* Other attrributes */
    // tslint:disable-next-line:no-any
    [x: string]: any;
}

export interface IWrapperProps {
    /* Children node */
    children: React.ReactNode;

    /** Mouse Enter Event Handler */
    onMouseEnter?(): void;

    /** Mouse Leave Event Handler */
    onMouseLeave?(): void;

    /** Click Event Handler */
    onClick?(): void;
}

export const getWrapper = (input: IGetWrapperInput): React.ComponentType<IWrapperProps> => {
    const { displayName = 'Wrapper', className = '', tag: Tag = 'div', ...restAttribute} = input;
    const Wrapper: React.FC<IWrapperProps> = ({ children, ...props }) => (
        <Tag className={className} {...restAttribute} {...props}>
            {children}
        </Tag>
    );
    Wrapper.displayName = displayName;
    return Wrapper;
};
