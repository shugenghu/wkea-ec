/*---------------------------------------------------------------------------------------------
 *  Copyright (c) Microsoft Corporation. All rights reserved.
 *  Licensed under the MIT License. See License.txt in the project root for license information.
 *--------------------------------------------------------------------------------------------*/
import * as React from 'react';

export type NodeTag = React.ReactType;

export interface INodeProps {
    /* Wrapper class */
    className: string;

    /* Children node */
    children?: React.ReactNode;

    /* Wrapper Tag */
    tag?: NodeTag;

    /* Other attrributes */
    // tslint:disable-next-line:no-any
    [x: string]: any;
}

export type IComponentNodeProps<T extends {}> = INodeProps & T & {
    /* Wrapper Tag */
    tag?: React.ReactType<T>;
};

export const Node: React.FC<INodeProps> = React.forwardRef(({ className = '', tag: Tag = 'div', element: Element, ...restAttribute }, ref) => {
    return (<Tag className={className} {...restAttribute} ref={ref}/>);
});

export default Node;
