import { render } from 'enzyme';
import * as React from 'react';
import Drawer from './Drawer';

describe('Drawer', () => {
    it('renders drawer with glyph at the end', () => {
        const drawer = render(
            <Drawer
                collapseProps={{
                    className: 'drawer',
                    timeout: 1000
                }}
                toggleButtonText={'Select Shipping Address'}
                toggleButtonProps={{
                    color: 'primary',
                    tag: 'button'
                }}
                openGlyph={'fa fa-chevron-up'}
                closeGlyph={'fa fa-chevron-down'}
                glyphPlacement={'end'}
            >
                <div className='card drawer__card'>
                    <span>This is a card</span>
                </div>
            </Drawer>
        );
        expect(drawer).toMatchSnapshot();
    });

    it('renders disabled drawer', () => {
        const drawer = render(
            <Drawer
                disabled
                collapseProps={{
                    className: 'drawer',
                    timeout: 1000
                }}
                toggleButtonText={'Select Shipping Address'}
                toggleButtonProps={{
                    color: 'primary',
                    tag: 'button'
                }}
                openGlyph={'fa fa-chevron-up'}
                closeGlyph={'fa fa-chevron-down'}
                glyphPlacement={'end'}
            >
                <div className='card drawer__card'>
                    <span>This is a card</span>
                </div>
            </Drawer>
        );
        expect(drawer).toMatchSnapshot();
    });

    it('renders drawer with glyph at the start', () => {
        const drawer = render(
            <Drawer
                collapseProps={{
                    className: 'drawer',
                    timeout: 1000
                }}
                toggleButtonText={'Select Shipping Address'}
                toggleButtonProps={{
                    color: 'primary',
                    tag: 'button'
                }}
                openGlyph={'fa fa-chevron-up'}
                closeGlyph={'fa fa-chevron-down'}
                glyphPlacement={'start'}
            >
                <div className='card drawer__card'>
                    <span>This is a card</span>
                </div>
            </Drawer>
        );
        expect(drawer).toMatchSnapshot();
    });

    it('renders drawer without a glyph', () => {
        const drawer = render(
            <Drawer
                collapseProps={{
                    className: 'drawer',
                    timeout: 1000
                }}
                toggleButtonText={'Select Shipping Address'}
                toggleButtonProps={{
                    color: 'primary',
                    tag: 'button'
                }}
            >
                <div className='card drawer__card'>
                    <span>This is a card</span>
                </div>
            </Drawer>
        );
        expect(drawer).toMatchSnapshot();
    });

    it('renders drawer with animation in glyph when closed', () => {
        const drawer = render(
            <Drawer
                collapseProps={{
                    className: 'drawer',
                    timeout: 1000
                }}
                toggleButtonText={'Select Shipping Address'}
                toggleButtonProps={{
                    color: 'primary',
                    tag: 'button'
                }}
                openGlyph={'fa fa-chevron-up'}
                glyphPlacement={'end'}
                animateGlyph={true}
                toggleGlyphClassName={'custom_glyph_animation'}
            >
                <div className='card drawer__card'>
                    <span>This is a card</span>
                </div>
            </Drawer>
        );
        expect(drawer).toMatchSnapshot();
    });

    it('renders drawer with animation in glyph when open', () => {
        const drawer = render(
            <Drawer
                collapseProps={{
                    className: 'drawer',
                    timeout: 1000,
                    isOpen: true
                }}
                toggleButtonText={'Select Shipping Address'}
                toggleButtonProps={{
                    color: 'primary',
                    tag: 'button'
                }}
                closeGlyph={'fa fa-chevron-up'}
                glyphPlacement={'end'}
                animateGlyph={true}
                toggleGlyphClassName={'custom_glyph_animation'}
            >
                <div className='card drawer__card'>
                    <span>This is a card</span>
                </div>
            </Drawer>
        );
        expect(drawer).toMatchSnapshot();
    });

    it('renders drawer with animation in glyph when no glyph provided and depends on class applied for icon', () => {
        const drawer = render(
            <Drawer
                collapseProps={{
                    className: 'drawer',
                    timeout: 1000,
                    isOpen: true
                }}
                toggleButtonText={'Select Shipping Address'}
                toggleButtonProps={{
                    color: 'primary',
                    tag: 'button'
                }}
                glyphPlacement={'end'}
                animateGlyph={true}
                toggleGlyphClassName={'custom_glyph_animation'}
            >
                <div className='card drawer__card'>
                    <span>This is a card</span>
                </div>
            </Drawer>
        );
        expect(drawer).toMatchSnapshot();
    });

    it('renders drawer correctly when no collapse props are provided', () => {
        const drawer = render(
            <Drawer
                toggleButtonText={'Select Shipping Address'}
                toggleButtonProps={{
                    color: 'primary',
                    tag: 'button'
                }}
                glyphPlacement={'end'}
                animateGlyph={true}
                toggleGlyphClassName={'custom_glyph_animation'}
            >
                <div className='card drawer__card'>
                    <span>This is a card</span>
                </div>
            </Drawer>
        );
        expect(drawer).toMatchSnapshot();
    });

    it('renders drawer correctly when className is provided', () => {
        const drawer = render(
            <Drawer
                toggleButtonText={'Select Shipping Address'}
                toggleButtonProps={{
                    color: 'primary',
                    tag: 'button'
                }}
                openGlyph={'fa fa-chevron-up'}
                closeGlyph={'fa fa-chevron-down'}
                glyphPlacement={'end'}
                className={'custom parent classname'}
            >
                <div className='card drawer__card'>
                    <span>This is a card</span>
                </div>
            </Drawer>
        );
        expect(drawer).toMatchSnapshot();
    });

    it('renders drawer correctly with custom button classname is provided', () => {
        const drawer = render(
            <Drawer
                toggleButtonText={'Select Shipping Address'}
                toggleButtonProps={{
                    color: 'primary',
                    tag: 'button'
                }}
                openGlyph={'fa fa-chevron-up'}
                closeGlyph={'fa fa-chevron-down'}
                glyphPlacement={'end'}
                toggleButtonClassName={'custom toggle button classname'}
            >
                <div className='card drawer__card'>
                    <span>This is a card</span>
                </div>
            </Drawer>
        );
        expect(drawer).toMatchSnapshot();
    });
});
