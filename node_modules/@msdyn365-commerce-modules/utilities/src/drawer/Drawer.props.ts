import * as Msdyn365 from '@msdyn365-commerce/core';
import { IButtonProps } from '../button/Button.props';
import { ICollapseProps } from '../collapse/Collapse.props';
import { ITelemetryContent } from '../common/telemetryHelper';
import { GlyphPlacement, IDrawerState } from './Drawer';

export interface IDrawerProps {
    /** Sets the text for the drawer button */
    toggleButtonText: string | React.ReactChild;

    /** Sets a custom css class for the drawer button */
    toggleButtonClassName?: string;

    /** Sets a custom css class for the glyph in the button */
    toggleGlyphClassName?: string;

    /** Sets the toggle button props */
    toggleButtonProps?: IButtonProps;

    /** Sets the collapse props */
    collapseProps?: ICollapseProps;

    /** Sets the glyph to show when the drawer is open */
    openGlyph?: string;

    /** Sets the glyph to show when the drawer is closed */
    closeGlyph?: string;

    /** Children of the drawer component */
    children?: React.ReactChildren | React.ReactElement<HTMLElement>;

    /** Indicates placement of glyph */
    glyphPlacement?: GlyphPlacement;

    /** gives the parent component a custom class */
    className?: string;

    /** Prop to disable the drawer  */
    disabled?: boolean;

    /** Animate glyph, NOTE: we do not provide any animation out of the box, that will have to be done though themeing and css class  */
    animateGlyph?: boolean;

    /* Telemetry Content*/
    telemetryContent?: ITelemetryContent;

    /** Request context */
    requestContext?:Msdyn365.IRequestContext;

    /** Custom Toggle handler callback */
    onToggle?(state: IDrawerState): void;

    /** On text change event handler */
    onTextChange?(event: Msdyn365.ContentEditableEvent): void;
}
