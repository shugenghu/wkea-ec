import classNames from 'classnames';
import * as React from 'react';
import Transition, { ENTERED, ENTERING, EXITED, EXITING, UNMOUNTED } from 'react-transition-group/Transition';
import { mapToCssModules, TransitionTimeouts } from '../common/utilities';
import { IFadeProps } from './Fade.props';

export interface IFadeState {
    fadeIn: boolean;
}

type TransitionStatus =
    typeof ENTERING |
    typeof ENTERED |
    typeof EXITING |
    typeof EXITED |
    typeof UNMOUNTED;

/**
 * Fade component
 */
export default class Fade extends React.Component<IFadeProps, IFadeState> {

    public static defaultProps: Partial<IFadeProps> = {
        tag: 'div',
        baseClass: 'fade',
        baseClassActive: 'show',
        timeout: TransitionTimeouts.Fade,
        in: true,
        appear: true,
        enter: true,
        exit: true
    };

    public render(): JSX.Element | null {
        const {
            tag,
            className,
            cssModule,
            baseClass,
            baseClassActive,

            appear,
            enter,
            exit,
            in: fadeIn,
            mountOnEnter,
            unmountOnExit,
            timeout: timeoutOrUndefined,
            addEndListener,
            onEnter,
            onEntering,
            onEntered,
            onExit,
            onExiting,
            onExited,
            children,

            ...otherProps } = this.props;
        const timeout = timeoutOrUndefined !== undefined ? timeoutOrUndefined : TransitionTimeouts.Fade;

        const transitionProps = {
            appear,
            enter,
            exit,
            in: fadeIn,
            mountOnEnter,
            unmountOnExit,
            timeout,
            addEndListener,
            onEnter,
            onEntering,
            onEntered,
            onExit,
            onExiting,
            onExited,
            children
        };

        const Tag = this.props.tag ? this.props.tag : 'div';
        const baseClassAlways = baseClass || 'fade';
        const baseClassActiveAlways = baseClassActive || 'show';

        return (
            <Transition {...transitionProps}>
                {(status: TransitionStatus) => {
                    const isActive = status === 'entered';
                    const classes = mapToCssModules(
                        classNames([
                            className,
                            baseClassAlways,
                            isActive && baseClassActiveAlways
                        ]),
                        cssModule
                    );

                    return (
                        <Tag className={classes} {...otherProps}>
                            {children}
                        </Tag>
                    );
                }}
            </Transition>
        );
    }
}
