import * as Popper from 'popper.js';
import * as React from 'react';

/**
 * Popover properties.
 */
export interface IPopoverProps extends React.HTMLAttributes<HTMLElement> {

    /** Flag to set to indicate of the popover is open. */
    isOpen?: boolean;

    /** Callback for popover isOpen in the controlling component.
     * It will receive an object with info about the event that triggered it.
     */
    toggle?: Function;

    /** Target element, React reference, or element ID for the popover to attach to. */
    target: string | HTMLElement | React.RefObject<HTMLElement>;

    /**
     * Appends the popover to a specific element.
     * It allows you to position the popover in the flow of the document near the triggering element,
     * which will prevent the popover from floating away from
     * the triggering element during a window resize.
     */
    container?: string | HTMLElement;

    /** Property to set any CSS classnames on the button. */
    className?: string;

    /** Which side of the target to attach to. */
    placement?: Popper.Placement;

    /** Apply class to the inner-popover. */
    innerClassName?: string;

    /** Flag to set to indicate of the popover is disabled. */
    disabled?: boolean;

    /** Whether the popover arrow should be hidden. */
    hideArrow?: boolean;

    /** Optional prefix for the given placement. */
    placementPrefix?: string;

    /** Custom modifiers that are passed to Popper.js,
     * see https://popper.js.org/popper-documentation.html#modifiers.
     */
    modifiers?: Popper.Modifiers;

    /** Property to set the css modules. */
    cssModule?: object;

    /** Boundaries for popover, can be scrollParent, window, viewport, or any DOM element */
    boundariesElement?: Popper.Boundary | Element;

    /** Popper offser, see https://popper.js.org/popper-documentation.html#modifiers..offset */
    offset?: string | number;

    /** Used to describe the contents of the popover, for accessibility */
    'aria-describedby'?: string;

    /** Role property for the Popover */
    role?: string;

    /** sets the id of the Popover */
    id?: string;
}
