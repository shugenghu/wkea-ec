import { mount } from 'enzyme';
import * as React from 'react';
import Button from '../button/Button';
import Collapse from './Collapse';
import {CollapseExample} from './Collapse.examples';

describe('Collapse', () => {
    it('Check for state change',  () => {
        const onClick = jest.fn();
        const collapseWrapper = mount(
            <CollapseExample>
            <Button color='primary' tag='button' onClick={onClick} >Toggle</Button>
            <Collapse timeout={350}>
                <div className='card'>
                    This is an example div.
                    It will collapse and expand by clicking on 'Toggle' button.
                </div>
            </Collapse>
            </CollapseExample>,
            { attachTo: document.body.firstElementChild as HTMLElement }
        );

        const collapseComponent = collapseWrapper.instance() as CollapseExample;
        const collapseDiv =  collapseWrapper.find('.collapse');
        expect(collapseComponent.state.expanded).toBe(false);
        collapseWrapper.find('button').simulate('click');
        collapseWrapper.update();
        expect(collapseComponent.state.expanded).toBe(true);
        expect(collapseDiv.getDOMNode().getAttribute('class')).toBe('collapsing');
        setTimeout(() => { expect(collapseDiv.getDOMNode().getAttribute('class')).toBe('collapse show'); }, 500);
        collapseWrapper.unmount();
    });

    it('Check for Aria-expanded attribute', () => {
        const onClick = jest.fn();
        const collapseWrapper = mount(
            <CollapseExample>
            <Button color='primary' tag='button' onClick={onClick} >Toggle</Button>
            <Collapse  timeout={900} >
                <div className='card'>
                    This is an example div.
                    It will collapse and expand by clicking on 'Toggle' button.
                </div>
            </Collapse>
            </CollapseExample>,
            { attachTo: document.body.firstElementChild as HTMLElement }
        );
        const btnToggle=  collapseWrapper.find('button');
        expect(btnToggle.getDOMNode().getAttribute('aria-expanded')).toBe('false');
        btnToggle.simulate('click');
        collapseWrapper.update();
        expect(btnToggle.getDOMNode().getAttribute('aria-expanded')).toBe('true');
        collapseWrapper.unmount();
    });
});
