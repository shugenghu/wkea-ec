export interface ISliderThumbProps {
    /** Sets the classname on the slider thumb */
    className?: string;

    /** aria-label attribute */
    ariaLabel?: string;

    /** aria-valuetext attribute */
    ariaValueText?: string;

    /** Flag to set whether to show tooltip on the slider thumb or not */
    showTooltip?: boolean;

    /** The value of the slider thumb */
    sliderValue: number | undefined;

    /** Id for the slider's thumb */
    id: string;

    /** max value of the slider */
    max: number;

    /** min value of the slider */
    min: number;

    /** orientation for the slider's thumb */
    orientation: 'horizontal' | 'vertical';

    /** The Slider init value */
    tooltip?: ITooltip;

    /** Sets the css class on the track thumb */
    trackThumbClass?: string;

    /** The Slider init value */
    style?: React.CSSProperties;

    /** Focus event for slider */
    handleFocus?(event: React.FocusEvent<HTMLDivElement>): void;

    /** Blur event for slider */
    handleBlur?(event: React.FocusEvent<HTMLDivElement>): void;

    /** Touch drag handler on the slider thumb */
    handleDrag(event: React.TouchEvent<HTMLDivElement>):void;

    /** Mousedown and touch handler on the slider thumb */
    handleStart(event: React.MouseEvent<HTMLDivElement>):void;

    /** Mouseup and touch end handler on the slider thumb */
    handleEnd(event: React.TouchEvent<HTMLDivElement> | React.MouseEvent<HTMLDivElement>):void;

    /** Keydown handler on the slider thumb */
    handleKeydown(event: React.KeyboardEvent<HTMLDivElement>):void;

    /** Callback to handle the tooltip text */
    handleTooltipText?(sliderValue: number): string;
}

export interface ITooltip {
    /** Placement options for the tooltip on the slider thumb */
    placement: 'top'|'bottom'|'right'|'left';
}
