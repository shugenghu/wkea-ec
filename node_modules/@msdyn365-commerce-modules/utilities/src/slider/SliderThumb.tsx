import * as React from 'react';
import { UncontrolledTooltip } from '../';
import { ISliderThumbProps } from './SliderThumb.props';

/**
 * Sliderthumb - This is a sliderthumb component this component which is
 * used to control the slider thumb
 */
export default class SliderThumb extends React.PureComponent<ISliderThumbProps> {

    public static defaultProps: Partial<ISliderThumbProps> = {
        showTooltip: true,
        tooltip: {
            placement: 'top'
        }
    };

    public sliderButtonRef: React.RefObject<HTMLDivElement> = React.createRef<HTMLDivElement>();

    public render():JSX.Element {
        const sliderThumbBaseClass = `slider__thumb `;
        const sliderThumbClass = this.props.trackThumbClass ?
            `${sliderThumbBaseClass} ${this.props.trackThumbClass}` :
            sliderThumbBaseClass;

        return (
            <React.Fragment>
                <div
                    role='presentation'
                    id={this.props.id}
                    ref={this.sliderButtonRef}
                    onMouseDown={this.props.handleStart}
                    onMouseUp={this.props.handleEnd}
                    onTouchMove={this.props.handleDrag}
                    onTouchEnd={this.props.handleEnd}
                    onKeyDown={this.props.handleKeydown}
                    onFocus={this.props.handleFocus}
                    onBlur={this.props.handleBlur}
                    style={this.props.style}
                    className={sliderThumbClass}
                />
                { this.props.showTooltip &&
                    <UncontrolledTooltip placement={this.props.tooltip!.placement} target={this.sliderButtonRef}>
                        {this.props.handleTooltipText ?
                                this.props.handleTooltipText(this.props.sliderValue!) :
                                this.props.sliderValue!.toString()
                        }
                    </UncontrolledTooltip>
                }
            </React.Fragment>
        );
    }
}
