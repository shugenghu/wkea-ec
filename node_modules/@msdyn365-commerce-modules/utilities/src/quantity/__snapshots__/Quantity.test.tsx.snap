// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`Quantity Verify input changeHandler 1`] = `
<Quantity
  max={30}
  min={1}
>
  <input
    aria-label="undefined"
    aria-live="polite"
    aria-valuemax={30}
    aria-valuemin={1}
    aria-valuenow={5}
    className="msc-quantity-input"
    min={1}
    onBlur={[Function]}
    onChange={[Function]}
    pattern="[0-9]*"
    role="spinbutton"
    type="number"
    value={5}
  />
</Quantity>
`;

exports[`Quantity Verify input changeHandler calls callback 1`] = `
<Quantity
  max={30}
  min={1}
  onChange={
    [MockFunction] {
      "calls": Array [
        Array [
          5,
        ],
      ],
      "results": Array [
        Object {
          "type": "return",
          "value": undefined,
        },
      ],
    }
  }
>
  <input
    aria-label="undefined"
    aria-live="polite"
    aria-valuemax={30}
    aria-valuemin={1}
    aria-valuenow={5}
    className="msc-quantity-input"
    min={1}
    onBlur={[Function]}
    onChange={[Function]}
    pattern="[0-9]*"
    role="spinbutton"
    type="number"
    value={5}
  />
</Quantity>
`;

exports[`Quantity Verify input changeHandler calls callback when input is more than max 1`] = `
<Quantity
  max={30}
  min={1}
  onChange={
    [MockFunction] {
      "calls": Array [
        Array [
          30,
        ],
      ],
      "results": Array [
        Object {
          "type": "return",
          "value": undefined,
        },
      ],
    }
  }
>
  <input
    aria-label="undefined"
    aria-live="polite"
    aria-valuemax={30}
    aria-valuemin={1}
    aria-valuenow={30}
    className="msc-quantity-input"
    min={1}
    onBlur={[Function]}
    onChange={[Function]}
    pattern="[0-9]*"
    role="spinbutton"
    type="number"
    value={30}
  />
</Quantity>
`;

exports[`Quantity Verify input changeHandler calls callback when input is nan 1`] = `
<Quantity
  max={30}
  min={1}
  onChange={
    [MockFunction] {
      "calls": Array [
        Array [
          1,
        ],
      ],
      "results": Array [
        Object {
          "type": "return",
          "value": undefined,
        },
      ],
    }
  }
>
  <input
    aria-label="undefined"
    aria-live="polite"
    aria-valuemax={30}
    aria-valuemin={1}
    aria-valuenow={1}
    className="msc-quantity-input"
    min={1}
    onBlur={[Function]}
    onChange={[Function]}
    pattern="[0-9]*"
    role="spinbutton"
    type="number"
    value={1}
  />
</Quantity>
`;

exports[`Quantity Verify input changeHandler validating max quantity correctly 1`] = `
<Quantity
  max={30}
  min={1}
>
  <input
    aria-label="undefined"
    aria-live="polite"
    aria-valuemax={30}
    aria-valuemin={1}
    aria-valuenow={30}
    className="msc-quantity-input"
    min={1}
    onBlur={[Function]}
    onChange={[Function]}
    pattern="[0-9]*"
    role="spinbutton"
    type="number"
    value={30}
  />
</Quantity>
`;

exports[`Quantity Verify input changeHandler validating min quantity correctly 1`] = `
<Quantity
  max={30}
  min={1}
>
  <input
    aria-label="undefined"
    aria-live="polite"
    aria-valuemax={30}
    aria-valuemin={1}
    aria-valuenow={1}
    className="msc-quantity-input"
    min={1}
    onBlur={[Function]}
    onChange={[Function]}
    pattern="[0-9]*"
    role="spinbutton"
    type="number"
    value={1}
  />
</Quantity>
`;

exports[`Quantity Verify input onBlur is called and value is set to min when input is below min and min prop is not provided 1`] = `
<Quantity
  max={30}
  min={1}
  onChange={
    [MockFunction] {
      "calls": Array [
        Array [
          1,
        ],
      ],
      "results": Array [
        Object {
          "type": "return",
          "value": undefined,
        },
      ],
    }
  }
>
  <input
    aria-label="undefined"
    aria-live="polite"
    aria-valuemax={30}
    aria-valuemin={1}
    aria-valuenow={1}
    className="msc-quantity-input"
    min={1}
    onBlur={[Function]}
    onChange={[Function]}
    pattern="[0-9]*"
    role="spinbutton"
    type="number"
    value={1}
  />
</Quantity>
`;

exports[`Quantity Verify input onBlur is called and value is set to min when input is below min and min prop is provided 1`] = `
<Quantity
  max={30}
  min={5}
  onChange={
    [MockFunction] {
      "calls": Array [
        Array [
          5,
        ],
      ],
      "results": Array [
        Object {
          "type": "return",
          "value": undefined,
        },
      ],
    }
  }
>
  <input
    aria-label="undefined"
    aria-live="polite"
    aria-valuemax={30}
    aria-valuemin={5}
    aria-valuenow={5}
    className="msc-quantity-input"
    min={5}
    onBlur={[Function]}
    onChange={[Function]}
    pattern="[0-9]*"
    role="spinbutton"
    type="number"
    value={5}
  />
</Quantity>
`;

exports[`Quantity Verify input onBlur is called and value is unchanged when input is above min 1`] = `
<Quantity
  max={30}
  min={5}
  onChange={
    [MockFunction] {
      "calls": Array [
        Array [
          10,
        ],
        Array [
          10,
        ],
      ],
      "results": Array [
        Object {
          "type": "return",
          "value": undefined,
        },
        Object {
          "type": "return",
          "value": undefined,
        },
      ],
    }
  }
>
  <input
    aria-label="undefined"
    aria-live="polite"
    aria-valuemax={30}
    aria-valuemin={5}
    aria-valuenow={10}
    className="msc-quantity-input"
    min={5}
    onBlur={[Function]}
    onChange={[Function]}
    pattern="[0-9]*"
    role="spinbutton"
    type="number"
    value={10}
  />
</Quantity>
`;
