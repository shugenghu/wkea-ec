import * as React from 'react';
import { createPortal } from 'react-dom';
import { canUseDOM } from '../common/utilities';
import { IPortalProps } from './Portal.props';

export interface IPortalState {
    defaultNode: Element | null;
}

/**
 * Portal component
 */
export default class Portal extends React.Component<IPortalProps, IPortalState> {
    constructor(props: IPortalProps) {
        super(props);

        this.state = {
            defaultNode: null
        };
    }

    public componentWillUnmount(): void {
        if (this.state.defaultNode) {
            document.body.removeChild(this.state.defaultNode);
        }
    }

    public render(): React.ReactPortal | null {
        let node = null;
        if (!canUseDOM) {
            return null;
        }

        if (!this.props.node && !this.state.defaultNode) {
            node = document.createElement('div');
            document.body.appendChild(node);
            this.setState({ defaultNode: node });
        }
        return createPortal(this.props.children, this.props.node || node);
    }
}
