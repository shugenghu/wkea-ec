import { ITelemetryContent } from '../common/telemetryHelper';

/**
 * UncontrolledPagination properties.
 */
export interface IUncontrolledPaginationProps extends React.HTMLAttributes<HTMLElement> {
    /** The current url */
    url: string;

    /** The qsp to use with the pagination */
    qsp: string;

    /** Number of items */
    items?: number;

    /** Items per page */
    itemsPerPage?: number;

    /** Index of first item returned */
    startingItem?: number;

    /** The text to display for the previous arrow */
    previousText?: React.ReactChild;

    /** The text to display for the next arrow */
    nextText?: React.ReactChild;

    /** The aria-label for the previous arrow */
    previousAriaLabel?: string;

    /** The aria-label for the next arrow */
    nextAriaLabel?: string;

    /** Tag property to set if you want the HTML tag to be something else */
    tag?: React.ReactType;

    /** List tag property to set if you want the HTML tag to be something else */
    listTag?: React.ReactType;

    /** ClassName Property to set any CSS classnames on the pagination */
    className?: string;

    /** List ClassName Property to set any CSS classnames on the pagination */
    listClassName?: string;

    /** CssModule Property to set any CSS classModule on the pagination */
    cssModule?: object;

    /** Set the pagination bar showed size */
    size?: string;

    /** Define a string that labels the current element */
    'aria-label'?: string;

    /** Define a string that provide the role on the pagination */
    role?: string;

    /** The Id for the next arrow */
    nextId?: string;

    /** The Id for the prev arrow */
    prevId?: string;

    /** The text for the next arrow aria described */
    nextAreaDescribed?: string;

    /** The text for the prev arrow aria described */
    prevAreaDescribed?: string;

    /** The telemetry content */
    telemetryContent?: ITelemetryContent;
}
