import classNames from 'classnames';
import * as React from 'react';
import { getPayloadObject, getTelemetryAttributes, IPayLoad } from '../common/telemetryHelper';
import { mapToCssModules } from '../common/utilities';
import { IPaginationLinkProps } from './PaginationLink.props';

/**
 * PaginationLink component
 */
export default class PaginationLink extends React.Component<IPaginationLinkProps> {
    public static defaultProps: Partial<IPaginationLinkProps> = {
        tag: 'a'
    };
    private payLoad: IPayLoad;

    constructor(props: IPaginationLinkProps) {
        super(props);
        this.payLoad = getPayloadObject('click', this.props.telemetryContent!, '');
    }

    public render(): JSX.Element {
        // tslint:disable-next-line
        let { className, cssModule, next, previous, tag: Tag, children, telemetryContent, ...props }: any = this.props;
        let etext: string = children;
        const paginationLinkclasses = mapToCssModules(classNames(className, 'msc-page-link'), cssModule);

        let defaultCaret;
        if (previous) {
            defaultCaret = '\u00ab';
            etext = 'previous';
        } else if (next) {
            defaultCaret = '\u00bb';
            etext = 'next';
        }

        if (children && Array.isArray(children) && children.length === 0) {
            children = null;
        }
        if (!props.href && Tag === 'a') {
            Tag = 'span';
        }

        if (previous || next) {
            children = [
                (
                    <span key='caret'>
                        {children || defaultCaret}
                    </span>
                )
            ];
        }

        this.payLoad.contentAction.etext = etext;
        const attribute = getTelemetryAttributes(telemetryContent!, this.payLoad);

        return (
            <Tag {...props} className={paginationLinkclasses} {...attribute}>
                {children}
            </Tag>
        );
    }
}
