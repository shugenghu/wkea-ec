import React from 'react';
export interface ITableResources {
}
export interface IDataTableProps {
    resources: ITableResources;
    headings: (IHeadingsProperty | undefined)[];
    rows: ITableRowProps[];
    className?: string;
    editLinkText?: string;
    actionLinkText?: string;
    deleteLinkText?: string;
    viewLinkText?: string;
    enableToModify: boolean;
    showCheckBoxes?: boolean;
    isSortable?: boolean;
    showPagination?: boolean;
    paginationProperty: IPaginationProperty;
    minifyActions?: boolean;
    minifiedButtonText?: string;
    excludedColumns?: string[];
    actions: {
        onDelete?(userData: ITableItemProps[]): void | undefined;
        onEdit?(userData: ITableItemProps[]): void | undefined;
        onView?(userData: ITableItemProps[]): void | undefined;
    };
    checkBoxCallback?(records: ITableRowProps[]): void;
    formatPrice?(price: number): string;
}
export interface IPaginationProperty {
    itemPerPage: number;
    skipCount: number;
    prevText: string;
    nextText: string;
    paginationText: string;
    url: string;
}
export interface ITableItemProps {
    id: string;
    type: TableDataType;
    value: boolean | number | string;
}
export interface ITableRowProps {
    row: ITableItemProps[];
}
export interface IHeadingsProperty {
    name: string;
    sortable: boolean;
}
export interface ITableState {
    sortingKey: string;
    ascendingOrder: boolean;
    showActions: boolean;
    selectedIndex: string;
}
export declare enum TableDataType {
    Number = "Number",
    Text = "Text",
    Price = "Price"
}
export default class Table extends React.Component<IDataTableProps, ITableState> {
    componentClassName: string;
    private headingPrefix;
    constructor(props: IDataTableProps);
    render(): JSX.Element;
    private _selectSortingKey;
    private _renderHeadingRow;
    private _renderRow;
    private _renderActions;
    private _toggleActions;
    private _sortTableRow;
    private _getCurrentPageData;
    private tableCell;
}
