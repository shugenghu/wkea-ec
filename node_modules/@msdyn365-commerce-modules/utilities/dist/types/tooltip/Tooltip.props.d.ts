import * as Popper from 'popper.js';
import * as React from 'react';
export interface IUncontrolledTooltipProps extends React.HTMLAttributes<HTMLElement> {
    target: string | HTMLElement | React.RefObject<HTMLElement>;
    delay?: number | {
        show: number;
        hide: number;
    };
    innerClassName?: string;
    autohide?: boolean;
    placement?: Popper.Placement;
    modifiers?: Popper.Modifiers;
    placementPrefix?: string;
    innerRef?: React.RefObject<HTMLDivElement>;
    hideArrow?: boolean;
    disabled?: boolean;
    trigger?: string;
    boundariesElement?: Popper.Boundary | Element;
    offset?: string | number;
    arrowClassName?: string;
    className?: string;
    cssModule?: object;
    displayMode?: 'TOOLTIP' | 'FLYOUT';
    'aria-describedby'?: string;
}
export interface ITooltipProps extends IUncontrolledTooltipProps {
    id?: string;
    isOpen?: boolean;
    toggle?(): void;
}
