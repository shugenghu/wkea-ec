import * as React from 'react';
import { ISliderProps, ISliderThumbProps } from './Slider.props';
export interface ISliderState {
    sliderThumbs: ISliderThumbProps[];
    limit: number;
    grab: number;
    active: boolean;
    id: string;
}
export default class Slider extends React.Component<ISliderProps, ISliderState> {
    static defaultProps: Partial<ISliderProps>;
    private static sliderBaseClass;
    isRangeSlider: boolean;
    private ref;
    private thumb1Ref;
    private thumb2Ref;
    static getDerivedStateFromProps(props: ISliderProps, state: ISliderState): ISliderState | null;
    constructor(props: ISliderProps);
    componentDidMount(): void;
    shouldComponentUpdate(nextProps: ISliderProps, _nextState: ISliderState): boolean;
    componentWillUnmount(): void;
    render(): JSX.Element;
    private _renderLabels;
    private _renderSliderThumbs;
    private _handleUpdate;
    private _handleStart;
    private _handleEnd;
    private _handleDrag;
    private _handleOnClick;
    private _position;
    private _getPositionFromValue;
    private _getValueFromPosition;
    private _coordinates;
    private _handleOnChange;
    private _setSliderValue;
    private _getThumbFromProps;
    private _publishNotification;
    private _getThumbAndPublishEvent;
    private _willThumbsCrossOver;
}
