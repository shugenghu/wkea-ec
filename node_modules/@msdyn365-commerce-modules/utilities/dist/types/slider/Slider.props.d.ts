import { IGenericFormProps } from '../common/IGenericFormProps';
import Slider from './Slider';
export interface ISliderChangeNotification {
    id?: string;
    slider: Slider;
    firstThumbValue: number;
    secondThumbValue?: number;
    eventType: string;
}
export interface ISliderProps extends IGenericFormProps {
    id?: string;
    className?: string;
    fillTrackValue?: number;
    ariaLabel?: string;
    labels?: ISliderLabel[];
    min: number;
    max: number;
    orientation: 'vertical' | 'horizontal';
    showLabels: boolean;
    step: number;
    showProgressBar?: boolean;
    showTooltip?: boolean;
    sliderThumbs: ISliderThumbProps[];
    trackProgressClass?: string;
    trackThumbClass?: string;
    'aria-disabled'?: boolean;
    onFocus?(event: React.FocusEvent<HTMLDivElement>): void;
    onBlur?(): void;
    handleTooltipText?(sliderValue: number): string;
    onChange?(notfication: Readonly<ISliderChangeNotification>): void;
    onChangeEnd?(notfication: Readonly<ISliderChangeNotification>): void;
    onChangeStart?(notfication: Readonly<ISliderChangeNotification>): void;
}
export interface ISliderLabel {
    labelId: string;
    labelString: string;
    labelPositioning: string;
}
export interface ISliderThumbProps {
    id: string;
    ariaLabel?: string;
    value: number;
    ariaValueText?: string;
}
