import * as React from 'react';
import IModalProps from './Modal.props';
export interface IModalState {
    wasOpen: boolean;
    isOpen: boolean;
    mouseDownElement: EventTarget | null;
}
export declare type ModalVerticalPosition = 'top' | 'center' | 'bottom';
export declare type ModalHorizontalPosition = 'left' | 'center' | 'right';
export default class Modal extends React.Component<IModalProps, IModalState> {
    static defaultProps: Partial<IModalProps>;
    private static openCount;
    private element;
    private mounted;
    private ref;
    private applicationNode;
    constructor(props: IModalProps);
    componentDidMount(): void;
    componentWillUnmount(): void;
    componentDidUpdate(_prevProps: IModalProps, prevState: IModalState): void;
    componentWillReceiveProps(nextProps: IModalProps): void;
    render(): JSX.Element | null;
    private _open;
    private _close;
    private _getFocusableChildren;
    private _getFocusedChild;
    private _handleBackdropClick;
    private _handleTab;
    private _handleBackdropMouseDown;
    private _handleEscape;
    private _onOpened;
    private _onClosed;
}
