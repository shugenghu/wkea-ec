"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
var core_1 = require("@msdyn365-commerce/core");
var TelemetryConstant;
(function (TelemetryConstant) {
    TelemetryConstant["ShopSimliarLooks"] = "shop similar looks";
    TelemetryConstant["PickupInStore"] = "pick up in store";
    TelemetryConstant["PreferredStore"] = "set as preferred store";
    TelemetryConstant["RemovePreferredStore"] = "remove preferred store";
    TelemetryConstant["IncrementQuantity"] = "Increment quantity";
    TelemetryConstant["DecrementQuantity"] = "Decrement quantity";
    TelemetryConstant["Checkout"] = "Checkout";
    TelemetryConstant["GuestCheckout"] = "Guest checkout";
    TelemetryConstant["BackToShopping"] = "Back to shopping";
    TelemetryConstant["ApplyPromoCode"] = "Apply promo code";
    TelemetryConstant["ViewMore"] = "View more";
    TelemetryConstant["OrderDetails"] = "Order details";
    TelemetryConstant["AvailablePoints"] = "Available points";
    TelemetryConstant["ExpiringPoints"] = "Expiring points";
    TelemetryConstant["AddUser"] = "Add user";
    TelemetryConstant["BuyItAgain"] = "Buy it again";
    TelemetryConstant["ContactNumber"] = "ContactNumber";
    TelemetryConstant["CheckoutChange"] = "Change";
    TelemetryConstant["Save"] = "Save";
    TelemetryConstant["SaveContinue"] = "Save and Continue";
    TelemetryConstant["Cancel"] = "Cancel";
    TelemetryConstant["DeliveryOptions"] = "Delivery options";
    TelemetryConstant["CheckoutTermsAndConditions"] = "Checkout terms and conditions";
    TelemetryConstant["ExpandAll"] = "Expand all";
    TelemetryConstant["CollapseAll"] = "Collapse all";
    TelemetryConstant["Expand"] = "Expand";
    TelemetryConstant["Collapse"] = "Collapse";
    TelemetryConstant["SignIn"] = "Sign in";
    TelemetryConstant["SignUp"] = "Sign up";
    TelemetryConstant["SignOut"] = "Sign out";
    TelemetryConstant["LoyaltyDetailLink"] = "Loyalty detail ink";
    TelemetryConstant["LoyaltyTermsLink"] = "Loyalty terms link";
    TelemetryConstant["LoyaltyTermsCancel"] = "Loyalty terms cancel";
    TelemetryConstant["LoyaltyTermsSubmit"] = "Loyalty terms submit";
    TelemetryConstant["LoyaltyTermsAgree"] = "Loyalty terms agree";
    TelemetryConstant["RemoveCartItem"] = "Remove cart item";
    TelemetryConstant["EditCart"] = "Edit cart";
    TelemetryConstant["BackToTop"] = "Back to top";
    TelemetryConstant["Logo"] = "Logo";
    TelemetryConstant["NavIcon"] = "Navigation icon";
    TelemetryConstant["ViewBagAndCheckout"] = "View bag and checkout";
    TelemetryConstant["ContinueShopping"] = "Continue shopping";
    TelemetryConstant["AddOrderTemplateToCart"] = "Add order template to cart";
    TelemetryConstant["PromoBannerClose"] = "Close promo banner";
    TelemetryConstant["WriteReview"] = "Write Review";
    TelemetryConstant["Next"] = "Next";
    TelemetryConstant["Previous"] = "Previous";
    TelemetryConstant["SubmitReview"] = "Submit review";
    TelemetryConstant["SuccessButton"] = "Success";
    TelemetryConstant["SearchStore"] = "Search store";
    TelemetryConstant["ShowAllStore"] = "Show all store";
    TelemetryConstant["ToggleMapView"] = "Toggle map view";
    TelemetryConstant["PrivacyPolicy"] = "Privacy policy";
    TelemetryConstant["ViewShoppingBag"] = "View shopping bag";
    TelemetryConstant["MyProfile"] = "My profile";
})(TelemetryConstant = exports.TelemetryConstant || (exports.TelemetryConstant = {}));
function getTelemetryObject(pageName, moduleName, telemetry) {
    var telemetryContent = { pageName: pageName, moduleName: moduleName, telemetry: telemetry };
    return telemetryContent;
}
exports.getTelemetryObject = getTelemetryObject;
function getPayloadObject(eventType, telemetryContent, etext, recid) {
    var pageName = telemetryContent && telemetryContent.pageName ? telemetryContent.pageName : '';
    var moduleName = telemetryContent && telemetryContent.moduleName ? telemetryContent.moduleName : '';
    var payload = {
        contentCategory: eventType,
        contentAction: {
            pgname: pageName,
            mname: moduleName,
            etext: etext,
            recid: recid,
            etype: eventType,
        }
    };
    return payload;
}
exports.getPayloadObject = getPayloadObject;
function getTelemetryAttributes(telemetryContent, payLoad) {
    var contentData = payLoad.contentAction.recid ? payLoad.contentAction.recid : payLoad.contentAction.etext;
    var attributes = telemetryContent
        && telemetryContent.telemetry
        && telemetryContent.telemetry.setTelemetryAttribute
        && telemetryContent.telemetry.setTelemetryAttribute(contentData, payLoad.contentAction);
    return attributes;
}
exports.getTelemetryAttributes = getTelemetryAttributes;
exports.onTelemetryClick = function (telemetryContent, payLoad, linkText) { return function () {
    payLoad.contentAction.etext = linkText;
    if (telemetryContent && telemetryContent.telemetry) {
        telemetryContent.telemetry.logEvent(core_1.TelemetryEvent.Custom, payLoad);
    }
}; };
//# sourceMappingURL=telemetryHelper.js.map