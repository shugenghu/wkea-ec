"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
var tslib_1 = require("tslib");
var Msdyn365 = tslib_1.__importStar(require("@msdyn365-commerce/core"));
var React = tslib_1.__importStar(require("react"));
var __1 = require("..");
var BackToTop = (function (_super) {
    tslib_1.__extends(BackToTop, _super);
    function BackToTop(props) {
        var _this = _super.call(this, props) || this;
        _this._renderHeading = function (text) {
            return (React.createElement(Msdyn365.Text, { className: 'ms-accordion-header-section__heading', text: text, editProps: _this.props.editProps }));
        };
        _this.state = { attributes: { 'aria-hidden': true, tabIndex: -1 } };
        _this._reevaluatePosition = _this._reevaluatePosition.bind(_this);
        _this._scrollToTop = _this._scrollToTop.bind(_this);
        var payLoad = __1.getPayloadObject('click', props.telemetryContent, __1.TelemetryConstant.BackToTop);
        _this.attributes = __1.getTelemetryAttributes(props.telemetryContent, payLoad);
        return _this;
    }
    BackToTop.prototype.componentDidMount = function () {
        window.addEventListener('resize', this._reevaluatePosition);
        window.addEventListener('scroll', this._reevaluatePosition);
        this._reevaluatePosition();
    };
    BackToTop.prototype.componentWillUnmount = function () {
        window.removeEventListener('resize', this._reevaluatePosition);
        window.removeEventListener('scroll', this._reevaluatePosition);
    };
    BackToTop.prototype.render = function () {
        var _a = this.props, className = _a.className, threshold = _a.threshold, delayInMs = _a.delayInMs, scrollStepInPx = _a.scrollStepInPx, props = tslib_1.__rest(_a, ["className", "threshold", "delayInMs", "scrollStepInPx"]);
        var children = this.props.children || (React.createElement("i", { className: 'fa fa-arrow-up' }));
        if (this.props.text) {
            return (React.createElement("a", tslib_1.__assign({ className: "back-to-top " + className }, props, this.state.attributes, { role: 'link', onClick: this._scrollToTop }, this.attributes), this._renderHeading(this.props.text)));
        }
        else {
            return (React.createElement("a", tslib_1.__assign({ className: "back-to-top " + className }, props, this.state.attributes, { role: 'link', onClick: this._scrollToTop }, this.attributes), children));
        }
    };
    BackToTop.prototype._scrollStep = function () {
        if ((document.documentElement.scrollTop || document.body.scrollTop) === 0) {
            clearInterval(this.state.intervalId);
            this.setState({ intervalId: 0 });
            this._reevaluatePosition();
        }
        if (this.state.intervalId !== 0) {
            window.scrollTo(0, document.body.scrollTop - this.props.scrollStepInPx);
            document.body.scrollTop = document.body.scrollTop > 0 ? document.body.scrollTop - this.props.scrollStepInPx : 0;
        }
    };
    BackToTop.prototype._scrollToTop = function (e) {
        e.preventDefault();
        var intervalId = setInterval(this._scrollStep.bind(this), this.props.delayInMs);
        this.setState({ intervalId: intervalId });
    };
    BackToTop.prototype._reevaluatePosition = function () {
        var scrollTop = window.pageYOffset || document.body.scrollTop;
        var height = Math.min(window.innerHeight, document.documentElement.clientHeight);
        var threshold = Math.min(this.props.threshold !== undefined ? this.props.threshold : -1, 100);
        var hide = scrollTop > 0 && threshold >= 0
            ? scrollTop < (document.documentElement.scrollHeight - height) * threshold / 100
            : scrollTop < height * 2;
        var tabIndexValue = hide ? -1 : 0;
        this.setState({ attributes: { 'aria-hidden': hide, tabIndex: tabIndexValue } });
    };
    BackToTop.defaultProps = {
        className: 'btn btn-lg btn-secondary',
        delayInMs: 0,
        scrollStepInPx: 25,
    };
    return BackToTop;
}(React.PureComponent));
exports.default = BackToTop;
//# sourceMappingURL=BackToTop.js.map