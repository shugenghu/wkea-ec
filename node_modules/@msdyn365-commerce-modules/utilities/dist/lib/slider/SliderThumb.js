"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
var tslib_1 = require("tslib");
var React = tslib_1.__importStar(require("react"));
var __1 = require("../");
var SliderThumb = (function (_super) {
    tslib_1.__extends(SliderThumb, _super);
    function SliderThumb() {
        var _this = _super !== null && _super.apply(this, arguments) || this;
        _this.sliderButtonRef = React.createRef();
        return _this;
    }
    SliderThumb.prototype.render = function () {
        var sliderThumbBaseClass = "slider__thumb ";
        var sliderThumbClass = this.props.trackThumbClass ?
            sliderThumbBaseClass + " " + this.props.trackThumbClass :
            sliderThumbBaseClass;
        return (React.createElement(React.Fragment, null,
            React.createElement("div", { role: 'presentation', id: this.props.id, ref: this.sliderButtonRef, onMouseDown: this.props.handleStart, onMouseUp: this.props.handleEnd, onTouchMove: this.props.handleDrag, onTouchEnd: this.props.handleEnd, onKeyDown: this.props.handleKeydown, onFocus: this.props.handleFocus, onBlur: this.props.handleBlur, style: this.props.style, className: sliderThumbClass }),
            this.props.showTooltip &&
                React.createElement(__1.UncontrolledTooltip, { placement: this.props.tooltip.placement, target: this.sliderButtonRef }, this.props.handleTooltipText ?
                    this.props.handleTooltipText(this.props.sliderValue) :
                    this.props.sliderValue.toString())));
    };
    SliderThumb.defaultProps = {
        showTooltip: true,
        tooltip: {
            placement: 'top'
        }
    };
    return SliderThumb;
}(React.PureComponent));
exports.default = SliderThumb;
//# sourceMappingURL=SliderThumb.js.map