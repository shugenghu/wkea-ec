"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
var tslib_1 = require("tslib");
var classnames_1 = tslib_1.__importDefault(require("classnames"));
var React = tslib_1.__importStar(require("react"));
var telemetryHelper_1 = require("../common/telemetryHelper");
var utilities_1 = require("../common/utilities");
var PaginationLink = (function (_super) {
    tslib_1.__extends(PaginationLink, _super);
    function PaginationLink(props) {
        var _this = _super.call(this, props) || this;
        _this.payLoad = telemetryHelper_1.getPayloadObject('click', _this.props.telemetryContent, '');
        return _this;
    }
    PaginationLink.prototype.render = function () {
        var _a = this.props, className = _a.className, cssModule = _a.cssModule, next = _a.next, previous = _a.previous, Tag = _a.tag, children = _a.children, telemetryContent = _a.telemetryContent, props = tslib_1.__rest(_a, ["className", "cssModule", "next", "previous", "tag", "children", "telemetryContent"]);
        var etext = children;
        var paginationLinkclasses = utilities_1.mapToCssModules(classnames_1.default(className, 'msc-page-link'), cssModule);
        var defaultCaret;
        if (previous) {
            defaultCaret = '\u00ab';
            etext = 'previous';
        }
        else if (next) {
            defaultCaret = '\u00bb';
            etext = 'next';
        }
        if (children && Array.isArray(children) && children.length === 0) {
            children = null;
        }
        if (!props.href && Tag === 'a') {
            Tag = 'span';
        }
        if (previous || next) {
            children = [
                (React.createElement("span", { key: 'caret' }, children || defaultCaret))
            ];
        }
        this.payLoad.contentAction.etext = etext;
        var attribute = telemetryHelper_1.getTelemetryAttributes(telemetryContent, this.payLoad);
        return (React.createElement(Tag, tslib_1.__assign({}, props, { className: paginationLinkclasses }, attribute), children));
    };
    PaginationLink.defaultProps = {
        tag: 'a'
    };
    return PaginationLink;
}(React.Component));
exports.default = PaginationLink;
//# sourceMappingURL=PaginationLink.js.map