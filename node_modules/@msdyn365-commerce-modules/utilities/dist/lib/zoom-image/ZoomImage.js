"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
function onMouseMoveLensContainer(event) {
    var _a;
    if (event.type === 'touchmove' || event.type === 'touchstart' || event.type === 'touchend') {
        return;
    }
    var img = ((_a = event.currentTarget.nextElementSibling) === null || _a === void 0 ? void 0 : _a.querySelector('img')) || undefined;
    var lens = event.currentTarget;
    if (!document.body.querySelector('.ms-containerZoom__result')) {
        var containerDiv = document.createElement('div');
        containerDiv.setAttribute('class', 'ms-containerZoom__result');
        document.body.appendChild(containerDiv);
    }
    var zoomPic = document.body.querySelector('.ms-containerZoom__result') || undefined;
    containerZoomMouseMoveHandler(event, img, lens, zoomPic);
}
exports.onMouseMoveLensContainer = onMouseMoveLensContainer;
function containerZoomMouseMoveHandler(event, img, lens, zoomPic) {
    var cx = zoomPic.clientWidth / lens.offsetWidth;
    var cy = zoomPic.clientHeight / lens.offsetHeight;
    var pos = getCursorPos(event, img);
    var xy = getXY(pos.x, pos.y, lens.offsetWidth, lens.offsetHeight, lens.parentElement.parentElement.offsetWidth, lens.parentElement.parentElement.offsetHeight);
    var lensStyle = "; left:" + (xy.x + "px") + " " + "; top:" + (xy.y + "px") + " ";
    lens === null || lens === void 0 ? void 0 : lens.setAttribute('style', lensStyle);
    var src = img.getAttribute('src');
    var picStyleValues = "; background-position:" + "-" + (xy.x * cx + "px") + " -" + (xy.y * cy + "px")
        + "; background-size:" + (img.width * cx + "px") + " " + (img.height * cy + "px")
        + "; background-image:url('" + ("" + src) + " ')" + "; top:" + (pos.z + "px") + " ";
    zoomPic.setAttribute('style', picStyleValues);
}
function onMouseOutLensContainer(event) {
    var _a, _b;
    event.currentTarget.removeAttribute('style');
    (_a = event.currentTarget) === null || _a === void 0 ? void 0 : _a.setAttribute('style', 'left: -200px; top: -200px');
    event.currentTarget.classList.remove('ms-containerZoom__zoom-lens__opacity');
    var img = (_b = event.currentTarget.nextElementSibling) === null || _b === void 0 ? void 0 : _b.querySelector('img');
    img.removeAttribute('style');
    var resultEle = document.body.querySelector('.ms-containerZoom__result');
    if (document.body.querySelector('.ms-containerZoom__result')) {
        document.body.removeChild(resultEle);
    }
}
exports.onMouseOutLensContainer = onMouseOutLensContainer;
function onMouseOverImageContainer(event) {
    var _a, _b, _c;
    var lens = (_a = event.currentTarget.parentElement) === null || _a === void 0 ? void 0 : _a.previousElementSibling;
    lens.classList.add('ms-containerZoom__zoom-lens__opacity');
    if (!document.body.querySelector('.ms-containerZoom__result')) {
        var containerDiv = document.createElement('div');
        containerDiv.setAttribute('class', 'ms-containerZoom__result');
        document.body.appendChild(containerDiv);
    }
    var pos = getCursorPosOfLens(event);
    var xy = getXY(pos.x, pos.y, lens.clientWidth, lens.clientWidth, ((_b = lens === null || lens === void 0 ? void 0 : lens.parentElement) === null || _b === void 0 ? void 0 : _b.parentElement).offsetWidth, ((_c = lens === null || lens === void 0 ? void 0 : lens.parentElement) === null || _c === void 0 ? void 0 : _c.parentElement).offsetHeight);
    var lensStyle = "left:" + (xy.x + "px") + " " + "; top:" + (xy.y + "px") + " ";
    lens === null || lens === void 0 ? void 0 : lens.setAttribute('style', lensStyle);
}
exports.onMouseOverImageContainer = onMouseOverImageContainer;
function onContainerZoomInit(event) {
    var _a, _b;
    var lens = ((_b = (_a = event.currentTarget.parentElement) === null || _a === void 0 ? void 0 : _a.parentElement) === null || _b === void 0 ? void 0 : _b.querySelector('.ms-containerZoom__zoom-lens')) || undefined;
    if (!document.body.querySelector('.ms-containerZoom__result')) {
        var containerDiv = document.createElement('div');
        containerDiv.setAttribute('class', 'ms-containerZoom__result');
        document.body.appendChild(containerDiv);
    }
    var resultEle = document.body.querySelector('.ms-containerZoom__result') || undefined;
    lens.classList.add('ms-containerZoom__zoom-lens__opacity');
    onMouseOverImageContainer(event);
    containerZoomMouseMoveHandler(event, event.currentTarget, lens, resultEle);
}
exports.onContainerZoomInit = onContainerZoomInit;
function inlineZoomImageOnHover(event, scale) {
    var _a, _b;
    if (event.type === 'touchmove' || event.type === 'touchstart' || event.type === 'touchend') {
        return;
    }
    var zoomImg = (_b = (_a = event.currentTarget.parentElement) === null || _a === void 0 ? void 0 : _a.nextElementSibling) === null || _b === void 0 ? void 0 : _b.querySelector('img');
    var width = event.currentTarget.width;
    var height = event.currentTarget.height;
    var inlineStyle = "; width:" + ("" + width * Number(scale)) + "px" + "; height:" + ("" + height * Number(scale)) + "px" + "; opacity: 1";
    zoomImg.setAttribute('style', inlineStyle);
}
exports.inlineZoomImageOnHover = inlineZoomImageOnHover;
function inlineZoomImageOnMouseMove(event) {
    if (event.type === 'touchmove' || event.type === 'touchstart' || event.type === 'touchend') {
        return;
    }
    var parentElement = event.currentTarget.parentElement.parentElement;
    var zoomImg = event.currentTarget;
    var dataScale = parentElement && parentElement.getAttribute('data-scale') || '';
    var inlineStyle = getInlineStyleOnMouseMove(zoomImg, dataScale, event);
    zoomImg.removeAttribute('style');
    zoomImg.setAttribute('style', inlineStyle);
}
exports.inlineZoomImageOnMouseMove = inlineZoomImageOnMouseMove;
function getInlineStyleOnMouseMove(zoomImg, dataScale, event) {
    zoomImg.removeAttribute('style');
    var picImg = zoomImg.parentElement && zoomImg.parentElement.previousElementSibling && zoomImg.parentElement.previousElementSibling.querySelector('img');
    var inlineStyle = "; width:" + ("" + picImg.width * Number(dataScale)) + "px"
        + "; height:" + ("" + picImg.height * Number(dataScale)) + "px" + "; opacity: 1";
    zoomImg.setAttribute('style', inlineStyle);
    var targetWidth = picImg.offsetWidth;
    var targetHeight = picImg.offsetHeight;
    var sourceWidth = picImg.offsetWidth;
    var sourceHeight = picImg.offsetHeight;
    var xRatio = (zoomImg.width - targetWidth) / sourceWidth;
    var yRatio = (zoomImg.height - targetHeight) / sourceHeight;
    var imgArea = picImg.getBoundingClientRect();
    var left = 0;
    var top = 0;
    left = event.pageX - imgArea.left;
    top = event.pageY - imgArea.top;
    left = left - window.pageXOffset;
    top = top - window.pageYOffset;
    top = Math.max(Math.min(top, sourceHeight), 0);
    left = Math.max(Math.min(left, sourceWidth), 0);
    return "" + inlineStyle + "; left:" + ("" + left * -xRatio) + "px" + "; top:" + ("" + top * -yRatio) + "px";
}
function inlineZoomImageOnMouseOut(event) {
    if (event.type === 'touchmove' || event.type === 'touchstart' || event.type === 'touchend') {
        return;
    }
    event.currentTarget.removeAttribute('style');
    event.currentTarget.style.height = '0';
    event.currentTarget.style.width = '0';
}
exports.inlineZoomImageOnMouseOut = inlineZoomImageOnMouseOut;
function inlineZoomInit(event, dataScale) {
    var _a, _b;
    if (event.type === 'touchmove' || event.type === 'touchstart' || event.type === 'touchend') {
        return;
    }
    var zoomImg = (_b = (_a = event.currentTarget.parentElement) === null || _a === void 0 ? void 0 : _a.nextElementSibling) === null || _b === void 0 ? void 0 : _b.querySelector('img');
    if (!zoomImg) {
        return;
    }
    var inlineStyle = getInlineStyleOnMouseMove(zoomImg, dataScale || '1', event);
    zoomImg.removeAttribute('style');
    zoomImg.setAttribute('style', inlineStyle);
}
exports.inlineZoomInit = inlineZoomInit;
function getXY(positionX, positionY, clientWidth, clientheight, eleOffsetWidth, eleOffsetHeight) {
    var x = 0;
    var y = 0;
    x = positionX - (clientWidth / 2);
    y = positionY - (clientheight / 2);
    if (x > eleOffsetWidth - clientWidth) {
        x = eleOffsetWidth - clientWidth;
    }
    if (x < 0) {
        x = 0;
    }
    if (y > eleOffsetHeight - clientheight) {
        y = eleOffsetHeight - clientheight;
    }
    if (y < 0) {
        y = 0;
    }
    return {
        x: x,
        y: y
    };
}
function getCursorPosOfLens(event) {
    var img = event.currentTarget;
    var x = 0;
    var y = 0;
    event = event || window.event;
    var a = img.getBoundingClientRect();
    x = event.pageX - a.left;
    y = event.pageY - a.top;
    x = x - window.pageXOffset;
    y = y - window.pageYOffset;
    return {
        x: x,
        y: y
    };
}
function getCursorPos(event, img) {
    var x = 0;
    var y = 0;
    var z = 0;
    event = event || window.event;
    var a = img.getBoundingClientRect();
    x = event.pageX - a.left;
    y = event.pageY - a.top;
    z = a.top;
    x = x - window.pageXOffset;
    y = y - window.pageYOffset;
    return {
        x: x,
        y: y,
        z: z
    };
}
function removeInlineZoomStyle() {
    var imgTag = document.body.querySelector('.ms-inline-zoom__zoomedImg');
    var hasStyleAttr = imgTag && imgTag.hasAttribute('style');
    if (hasStyleAttr) {
        imgTag.removeAttribute('style');
        imgTag.setAttribute('style', 'width: 0; height: 0;');
    }
}
exports.removeInlineZoomStyle = removeInlineZoomStyle;
//# sourceMappingURL=ZoomImage.js.map