"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
var tslib_1 = require("tslib");
var retail_actions_1 = require("@msdyn365-commerce-modules/retail-actions");
var core_1 = require("@msdyn365-commerce/core");
var React = tslib_1.__importStar(require("react"));
var __1 = require("..");
var modal_1 = require("../modal");
exports.Popup = function (popupProps) {
    var dialogStrings = popupProps.dialogStrings, className = popupProps.className, imageSettings = popupProps.imageSettings, gridSettings = popupProps.gridSettings, _a = popupProps.data, product = _a.product, price = _a.price, productQuantity = popupProps.productQuantity, priceComponent = popupProps.priceComponent, navigationUrl = popupProps.navigationUrl, modalOpen = popupProps.modalOpen, telemetryContent = popupProps.telemetryContent, setModalOpen = popupProps.setModalOpen, context = popupProps.context;
    if (!dialogStrings || !product) {
        return null;
    }
    var payLoad = __1.getPayloadObject('click', telemetryContent, __1.TelemetryConstant.ContinueShopping);
    var continueShoppingAttribute = __1.getTelemetryAttributes(telemetryContent, payLoad);
    payLoad.contentAction.etext = __1.TelemetryConstant.ViewBagAndCheckout;
    var viewBagAttribute = __1.getTelemetryAttributes(telemetryContent, payLoad);
    var closeModal = function () { setModalOpen(false); };
    var fallbackImageUrl = retail_actions_1.getFallbackImageUrl(product.ItemId, context.actionContext.requestContext.apiSettings);
    var quantity = productQuantity !== undefined ? productQuantity : 1;
    var itemsString = quantity === 1 ? dialogStrings.headerItemOneText : dialogStrings.headerItemFormatText.replace('{0}', quantity.toString());
    var reducedDimensions = product.Dimensions ? product.Dimensions.reduce(function (str, productDimension) {
        if (productDimension.DimensionValue && productDimension.DimensionValue.Value) {
            if (str) {
                return str + ", " + productDimension.DimensionValue.Value;
            }
            return "" + productDimension.DimensionValue.Value;
        }
        return str;
    }, '') : '';
    return (React.createElement(modal_1.Modal, { isOpen: modalOpen, onClosed: closeModal, className: className + "__dialog" },
        React.createElement(modal_1.ModalHeader, { toggle: closeModal, className: className + "__dialog__header" },
            React.createElement("span", null, itemsString),
            React.createElement("span", null, dialogStrings.headerMessageText)),
        React.createElement(modal_1.ModalBody, { className: className + "__dialog__body" },
            React.createElement(core_1.Image, { className: className + "__dialog__image", src: product.PrimaryImageUrl || '', fallBackSrc: fallbackImageUrl, altText: product.Name, gridSettings: gridSettings || {}, imageSettings: imageSettings, loadFailureBehavior: 'empty' }),
            React.createElement("span", { className: className + "__dialog__product-title" }, product.Name),
            reducedDimensions !== '' ?
                React.createElement("div", { className: className + "__dialog__product-variants" }, reducedDimensions) :
                '',
            price ? (React.createElement("div", { className: className + "__dialog__product-price" }, priceComponent)) : '',
            React.createElement(__1.Button, tslib_1.__assign({ className: className + "__dialog__go-to-cart", href: navigationUrl, title: dialogStrings.goToCartText }, viewBagAttribute), dialogStrings.goToCartText),
            React.createElement(__1.Button, tslib_1.__assign({ className: className + "__dialog__back-to-shopping", onClick: closeModal, title: dialogStrings.continueShoppingText }, continueShoppingAttribute), dialogStrings.continueShoppingText))));
};
exports.default = exports.Popup;
//# sourceMappingURL=Popup.js.map