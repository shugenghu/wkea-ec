{"version":3,"file":"header.view.js","sourceRoot":"./src/","sources":["modules/fabrikam/views/header.view.tsx"],"names":[],"mappings":"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","sourcesContent":["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport classnames from 'classnames';\nimport * as React from 'react';\n\nimport { IHeaderViewProps } from '@msdyn365-commerce-modules/header';\nimport { Collapse, Drawer, Module, Node } from '@msdyn365-commerce-modules/utilities';\nimport { AsyncResult } from '@msdyn365-commerce/core';\nimport { Customer } from '@msdyn365-commerce/retail-proxy';\n\nconst headerView: React.FC<IHeaderViewProps> = props => {\n    const {\n        HeaderTag,\n        HeaderContainer,\n        HeaderTopBarContainer,\n        Divider,\n    } = props;\n    return (\n        <Module {...HeaderTag}>\n            <Node {...HeaderContainer}>\n                <Node {...HeaderTopBarContainer}>\n                    {props.navIcon}\n                    {props.logo}\n                    {_renderReactFragment(props.search)}\n                    {_renderAccountBlock(props, false)}\n                    {props.wishListIconDesktop}\n                    <Node {...Divider}/>\n                    {props.cartIcon}\n                    {_renderReactFragment(props.siteOptions)}\n                </Node>\n                {_renderCollapseMenu(props)}\n                <Node className={'ms-header__desktop-view'}>\n                    {_renderReactFragment(props.menuBar)}\n                </Node>\n            </Node>\n        </Module>\n    );\n};\n\nfunction _renderCollapseMenu(props: IHeaderViewProps): JSX.Element | null {\n    const {Divider, MobileMenuLinksContainer, mobileMenuCollapsed} = props;\n    return (\n        <Collapse className={'ms-header__collapsible-hamburger'} isOpen={!mobileMenuCollapsed}>\n            <Node {...MobileMenuLinksContainer}>\n                {_renderReactFragment(props.search)}\n                {_renderMobileAccountBlock(props, true)}\n                { props.wishListIconMobile }\n            </Node>\n            <Node {...Divider}/>\n            {_renderReactFragment(props.menuBar)}\n        </Collapse>\n    );\n}\nconst renderCustomerName = (accountInformation: AsyncResult<Customer>): React.ReactChild => {\n    const customer = accountInformation && accountInformation.result;\n    return (\n        <>{customer ? customer.FirstName || customer.Name : ''}</>\n    );\n};\n\nfunction _renderMobileAccountBlock(props: IHeaderViewProps, renderForMobile: boolean): JSX.Element | null {\n    const {\n        AccountInfoDropdownParentContainer,\n        signOutLink,\n        signInLink,\n        data,\n        accountLinks} = props;\n\n    if (AccountInfoDropdownParentContainer) {\n        const accountClassName = classnames('ms-header__drawer', AccountInfoDropdownParentContainer.className, renderForMobile ? 'account-mobile' : 'account-desktop');\n\n        if (accountLinks) {\n            return (\n                <Drawer className={accountClassName} openGlyph='ms-header__drawer-open' closeGlyph='ms-header__drawer-close' glyphPlacement='end' toggleButtonText={renderCustomerName(data.accountInformation)}>\n                    <div>\n                        { accountLinks ? accountLinks.map((link: React.ReactNode) => link) : false }\n                        {signOutLink}\n                    </div>\n                </Drawer>\n            );\n        } else if (signInLink) {\n            return (\n                <Node {...AccountInfoDropdownParentContainer} className={accountClassName}>\n                    {signInLink}\n                </Node>\n            );\n        }\n    }\n    return null;\n}\n\nfunction _renderAccountBlock(props: IHeaderViewProps, renderForMobile: boolean): JSX.Element | null {\n    const {\n        AccountInfoDropdownParentContainer,\n        AccountInfoDropdownPopoverConentContainer,\n        accountInfoDropdownButton,\n        signOutLink,\n        signInLink,\n        accountLinks,\n    } = props;\n\n    if (AccountInfoDropdownParentContainer) {\n        const accountClassName = classnames(AccountInfoDropdownParentContainer.className, renderForMobile ? 'account-mobile' : 'account-desktop');\n        if (AccountInfoDropdownPopoverConentContainer) {\n            return (\n                <Node {...AccountInfoDropdownParentContainer} className={accountClassName}>\n                    {accountInfoDropdownButton}\n                    <Node {...AccountInfoDropdownPopoverConentContainer}>\n                        { accountLinks ? accountLinks.map((link: React.ReactNode) => link) : false }\n                        {signOutLink}\n                    </Node>\n                </Node>\n            );\n        } else if (signInLink) {\n            return (\n                <Node {...AccountInfoDropdownParentContainer} className={accountClassName}>\n                    {signInLink}\n                </Node>\n            );\n        }\n    }\n\n    return null;\n}\n\nfunction _renderReactFragment(items: React.ReactNode[]): JSX.Element | null {\n    return (\n        <React.Fragment>\n            {items && items.length\n                ? items.map((slot: React.ReactNode, index: number) => {\n                      return <React.Fragment key={index}>{slot}</React.Fragment>;\n                  })\n                : null}\n        </React.Fragment>\n    );\n}\n\nexport default headerView;"]}