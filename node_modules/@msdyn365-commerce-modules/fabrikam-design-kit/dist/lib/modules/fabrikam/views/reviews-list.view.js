import { Module, Node } from '@msdyn365-commerce-modules/utilities';
import * as React from 'react';
const ReviewsListview = props => {
    const { averageRating, filterByDropdown, moduleProps, noReviewsMessage, noReviewsWithFilterMessage, pageControls, refineReviewsProps, reportReviewModal, reviewsListProps, reviewCards, reviewCount, reviewModal, sortByDropdown, state, userReview } = props;
    if (!userReview && reviewCards.length === 0 && !state.isFilterApplied) {
        return React.createElement(Module, Object.assign({}, moduleProps), noReviewsMessage);
    }
    return (React.createElement(Module, Object.assign({}, moduleProps),
        averageRating,
        reviewCount,
        React.createElement(Node, Object.assign({}, refineReviewsProps),
            sortByDropdown,
            filterByDropdown),
        React.createElement(Node, Object.assign({}, reviewsListProps),
            userReview && buildReviewCard(userReview),
            reviewCards.map(review => {
                return buildReviewCard(review);
            })),
        reviewCards.length === 0 && state.isFilterApplied && noReviewsWithFilterMessage,
        pageControls,
        createReviewModal(reviewModal, moduleProps),
        createReportModal(reportReviewModal, state)));
};
const buildReviewCard = (props) => {
    return (React.createElement(Node, Object.assign({}, props.cardProps),
        React.createElement(Node, Object.assign({}, props.headerProps),
            props.rating,
            props.name,
            props.date),
        React.createElement(Node, Object.assign({}, props.cardBodyProps),
            React.createElement(Node, Object.assign({}, props.reviewProps),
                props.reviewTitle,
                props.reviewText),
            React.createElement(Node, Object.assign({}, props.responseProps),
                props.responseName,
                props.responseDate,
                props.responseText),
            React.createElement(Node, Object.assign({}, props.controlsProps),
                props.ratingHelpfulLabel,
                props.like,
                props.dislike,
                props.edit,
                props.report))));
};
const createReviewModal = (props, moduleProps) => {
    return (React.createElement(Module, Object.assign({}, props.modal, moduleProps),
        props.modalHeader,
        React.createElement(Node, Object.assign({}, props.modalBody),
            React.createElement(Node, Object.assign({}, props.form),
                React.createElement(Node, Object.assign({}, props.inputRow),
                    props.rating,
                    props.ratingLabel),
                React.createElement(Node, Object.assign({}, props.inputRow),
                    props.titleLabel,
                    props.titleInput),
                React.createElement(Node, Object.assign({}, props.inputRow),
                    props.textLabel,
                    props.textInput),
                props.privacyPolicyUrl,
                props.error)),
        React.createElement(Node, Object.assign({}, props.modalFooter),
            props.submitButton,
            props.cancelButton)));
};
const createReportModal = (props, state) => {
    return (React.createElement(Node, Object.assign({}, props.modal),
        React.createElement(Node, Object.assign({}, props.modalHeader), state.reported ? props.headerSubmitted : props.header),
        React.createElement(Node, Object.assign({}, props.modalBody), state.reported ? props.reportSubmittedMessage : [props.reportMessage, props.radioButtons, props.error]),
        React.createElement(Node, Object.assign({}, props.modalFooter), state.reported ? props.succesfulButton : [props.submitButton, props.cancelButton])));
};
export default ReviewsListview;
//# sourceMappingURL=reviews-list.view.js.map