{"version":3,"file":"cartlineitem.component.js","sourceRoot":"./src/","sources":["modules/fabrikam/views/components/cartlineitem.component.tsx"],"names":[],"mappings":"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","sourcesContent":["/*!\n * Copyright (c) Microsoft Corporation.\n * All rights reserved. See LICENSE in the project root for license information.\n */\n\nimport { getFallbackImageUrl } from '@msdyn365-commerce-modules/retail-actions';\nimport { getPayloadObject, getTelemetryAttributes, ITelemetryContent } from '@msdyn365-commerce-modules/utilities';\nimport { PriceComponent } from '@msdyn365-commerce/components';\nimport { IComponentProps, IGridSettings, IImageSettings, Image } from '@msdyn365-commerce/core';\nimport { SimpleProduct } from '@msdyn365-commerce/retail-proxy';\nimport { CartLine, SalesLine } from '@msdyn365-commerce/retail-proxy/dist/Entities/CommerceTypes.g';\nimport classNames from 'classnames';\nimport * as React from 'react';\nimport { Quantity } from '../../utilities/quantity';\n\n/**\n * ICartlineResourceString: Interface for specifying the\n * resource strings that the component needs\n */\nexport interface ICartlineResourceString {\n    /** Display string for discount label */\n    discountStringText: string;\n    /** String for size key  */\n    sizeString: string;\n    /** String for color key  */\n    colorString: string;\n    /** String associated with the configuration product dimension  */\n    configString: string;\n    /** String for style key  */\n    styleString: string;\n    /** Display string for quantity label  */\n    quantityDisplayString: string;\n    /** Display string for quantity label  */\n    inputQuantityAriaLabel: string;\n    /** Aria label for the decrement button in quantity component  */\n    decrementButtonAriaLabel: string;\n    /** Aria label for the increment button in quantity component  */\n    incrementButtonAriaLabel: string;\n    /** original text screenreader */\n    originalPriceText: string;\n    /** current text screenreader  */\n    currentPriceText: string;\n    /** shipping Charges Text  */\n    shippingChargesText: string;\n}\n\ninterface ICartLineData {\n    cartLine: CartLine | SalesLine;\n    product: SimpleProduct;\n}\n\n/**\n * ICartLineProps: The props required to render cartLineitem\n */\nexport interface ICartLineProps extends IComponentProps<ICartLineData> {\n    /** The flag to change the quantity component from interactible to static  */\n    disableQuantityInteractivity?: boolean;\n    /** The primary image url  */\n    primaryImageUrl?: string;\n    /** The product url  */\n    productUrl?: string;\n    /** GridSettings for the product image in cartLine  */\n    gridSettings: IGridSettings;\n    /** ImageSettings for the product image in cartLine  */\n    imageSettings: IImageSettings;\n    /** Boolean flag to indicate if the item is out of stock  */\n    isOutOfStock?: boolean;\n    /** Flag to make quantity section editable  */\n    isQuantityEditable?: boolean;\n    /** Max quantity for line item  */\n    maxQuantity?: number;\n    /** Current quantity for line item  */\n    currentQuantity?: number;\n    /** Resource string for the component  */\n    resources: ICartlineResourceString;\n    /** SalesLine flag  */\n    isSalesLine?: boolean;\n    /** Error message to show in place of quantity */\n    errorMessage?: string;\n    /** Inventory information label  */\n    inventoryInformationLabel?: string;\n    /** Inventory information class name  */\n    inventoryLabelClassName?: string;\n    /** Flag to show/hide shipping charges for line items  */\n    showShippingChargesForLineItems?: boolean;\n    /** Boolean flag to indicate if cart state status is ready  */\n    isCartStateReady?: boolean;\n    /** The telemetry content */\n    telemetryContent?: ITelemetryContent;\n    /** Quantity onChange callback  */\n    quantityOnChange?(cartLine: CartLine, newQuantity: number): void;\n}\n\ninterface IDimensionStrings {\n    /** String for size key  */\n    sizeString: string;\n    /** String for color key  */\n    colorString: string;\n    /** String associated with the configuration product dimension  */\n    configString: string;\n    /** String for style key  */\n    styleString: string;\n}\n\nconst CartLineItemFunctions = {\n    renderProductDimensions: (Product: SimpleProduct, DimensionStrings: IDimensionStrings) => {\n        if (!Product || !Product.Dimensions) {\n            return [];\n        }\n\n        return Product.Dimensions.map(productDimension => {\n\n            if (productDimension.DimensionTypeValue === 1) {\n                return (\n                    <div key={`${Product.RecordId}ProductDimensions1`} className='msc-cart-line__product-variant-item'>\n                        <span className='msc-cart-line__product-variant-color'>{DimensionStrings.colorString}:\n                        <span className='name'>{productDimension.DimensionValue && productDimension.DimensionValue.Value}</span></span>\n                    </div>\n                );\n            }\n\n            if (productDimension.DimensionTypeValue === 2) {\n                return (\n                    <div key={`${Product.RecordId}ProductDimensions2`} className='msc-cart-line__product-variant-item'>\n                        <span className='msc-cart-line__product-configuration'>{DimensionStrings.configString}:\n                        <span className='name'>{productDimension.DimensionValue && productDimension.DimensionValue.Value}</span></span>\n                    </div>\n                );\n            }\n\n            if (productDimension.DimensionTypeValue === 3) {\n                return (\n                    <div key={`${Product.RecordId}ProductDimensions3`} className='msc-cart-line__product-variant-item'>\n                        <span className='msc-cart-line__product-variant-size'>{DimensionStrings.sizeString}:\n                        <span className='name'>{productDimension.DimensionValue && productDimension.DimensionValue.Value}</span></span>\n                    </div>\n                );\n            }\n\n            if (productDimension.DimensionTypeValue === 4) {\n                return (\n                    <div key={`${Product.RecordId}ProductDimensions4`} className='msc-cart-line__product-variant-item'>\n                        <span className='msc-cart-line__product-variant-style'>{DimensionStrings.styleString}:\n                        <span className='name'>{productDimension.DimensionValue && productDimension.DimensionValue.Value}</span></span>\n                    </div>\n                );\n            }\n            return null;\n        });\n    },\n    renderDiscountLines: (props: ICartLineProps) => {\n\n        if (!props.data.cartLine.DiscountLines || props.data.cartLine.DiscountLines.length === 0) {\n            return null;\n        }\n        return props.data.cartLine.DiscountLines.map((discountLine, index) => {\n            return (\n                <div key={discountLine.OfferId || index} className='msc-cart-line-item-product-discount'>\n                    <span>\n                        {discountLine.OfferName ? discountLine.OfferName : ''}:\n                        {` ${props.resources.discountStringText || 'Discount'} `}\n                    </span>\n                    <span className={'cart-line-item-product-discount-price'}>\n                        <PriceComponent\n                            data={props.isSalesLine ? {\n                                price: {\n                                    // @ts-ignore\n                                    CustomerContextualPrice: props.data.cartLine.PeriodicDiscount\n                                }\n                            } : {\n                                    price: {\n                                        CustomerContextualPrice: props.data.cartLine.DiscountAmountWithoutTax,\n                                        BasePrice: props.data.cartLine.DiscountAmount\n                                    }\n                                }}\n                            context={props.context}\n                            id={props.id}\n                            typeName={props.typeName}\n                        />\n                    </span>\n                    <span>\n                        {` (${discountLine.Percentage !== undefined ? discountLine.Percentage : ''}%)`}\n                    </span>\n                </div>\n            );\n        });\n    },\n    renderInventoryLabel: (props: ICartLineProps) => {\n        if (!props.inventoryInformationLabel) {\n            return null;\n        }\n        const inventoryCssName = props.inventoryLabelClassName ? `msc-cart-line__product-inventory-label ${props.inventoryLabelClassName}` : 'msc-cart-line__product-inventory-label';\n        return (\n            <span className={inventoryCssName}>{props.inventoryInformationLabel}</span>\n        );\n    },\n    renderShippingLabel: (props: ICartLineProps) => {\n        const pickupDeliveryModeCode = props.context.request.channel?.PickupDeliveryModeCode;\n        const cartline = props.data.cartLine;\n        const hasShippingMethod = !!cartline.DeliveryMode && cartline.DeliveryMode !== pickupDeliveryModeCode ? true : false;\n        if (!hasShippingMethod) {\n            return undefined;\n        }\n\n        const shippingChargeLines = (cartline.ChargeLines || []).filter(chargeLine => chargeLine.IsShipping);\n\n        if (shippingChargeLines.length === 0) {\n            return undefined;\n        }\n\n        const freightFee = shippingChargeLines.reduce((chargeTotal, chargeLine) => {\n            return chargeTotal + (chargeLine.CalculatedAmount || 0);\n        },                                            0);\n\n        const priceComponent = (\n            <PriceComponent\n                data={{\n                    price: {\n                        // @ts-ignore\n                        CustomerContextualPrice: freightFee\n                    }\n                }}\n                freePriceText={'Free'}\n                context={props.context}\n                id={props.id}\n                typeName={props.typeName}\n                className='msc-cart-line__freight-actual'\n            />\n        );\n        return (\n            <>\n                <label className='msc-cart-line__freight-label'>{`${props.resources.shippingChargesText}:`}</label>\n                <span className='shipping-value'>\n                    {priceComponent}\n                </span>\n            </>\n        );\n    },\n    renderOtherCharges: (props: ICartLineProps) => {\n        const cartline = props.data.cartLine;\n        const otherCharges = cartline.ChargeLines?.filter((chargeline) => !chargeline.IsShipping);\n\n        return otherCharges && otherCharges.map((otherCharge, key) => {\n            return (\n                <div className='msc-cart-line__other-charges' key={key}>\n                    <label className='msc-cart-line__other-charges-label'>{`${otherCharge.Description}:`}</label>\n                    <span className='other-charge-value'>\n                        <PriceComponent\n                            data={{\n                                price: {\n                                    // @ts-ignore\n                                    CustomerContextualPrice: otherCharge.CalculatedAmount\n                                }\n                            }}\n                            context={props.context}\n                            id={props.id}\n                            typeName={props.typeName}\n                            className='msc-cart-line__other-charges-actual'\n                        />\n                    </span>\n                </div>\n            );\n        }) || undefined;\n    }\n};\n\n// tslint:disable-next-line:max-func-body-length\nconst CartLine: React.FC<ICartLineProps> = (props: ICartLineProps) => {\n    const { isSalesLine, productUrl, resources } = props;\n    const { product } = props.data;\n\n    const destructDimensionStrings = {\n        sizeString: resources.sizeString,\n        colorString: resources.colorString,\n        styleString: resources.styleString,\n        configString: resources.configString\n    };\n\n    const fallbackImageUrl = getFallbackImageUrl(product.ItemId, props.context.actionContext.requestContext.apiSettings);\n    const productDimensions = CartLineItemFunctions.renderProductDimensions(product, destructDimensionStrings);\n    const renderDisountLines = CartLineItemFunctions.renderDiscountLines(props);\n    const renderInventoryLabel = CartLineItemFunctions.renderInventoryLabel(props);\n    const renderShippingLabel = CartLineItemFunctions.renderShippingLabel(props);\n    const renderOtherCharges = CartLineItemFunctions.renderOtherCharges(props);\n    const payLoad = getPayloadObject('click', props.telemetryContent!, '', product.RecordId.toString());\n    const prodAttribute = getTelemetryAttributes(props.telemetryContent!, payLoad);\n\n    const onChange = (newValue: number) => {\n        if (props.quantityOnChange) {\n            props.quantityOnChange(props.data.cartLine, newValue);\n        }\n    };\n\n    const _generateErrorMessage = (): JSX.Element | null => {\n        if (props.errorMessage) {\n            return (\n                <div className='msc-alert__header'>\n                    <span className='msi-exclamation-triangle' />\n                    <span>{props.errorMessage}</span>\n                </div>\n            );\n        }\n\n        return null;\n    };\n\n    const _generateQuantityandPrice = (): JSX.Element[] | null => {\n        const nodes = [];\n        if (props.isOutOfStock) {\n            const errorMessage = _generateErrorMessage();\n\n            if (errorMessage) {\n                return [errorMessage];\n            }\n\n            return null;\n        }\n        if (props.isQuantityEditable) {\n            nodes.push(\n                <div className='msc-cart-line__product-quantity'>\n                    <div className='msc-cart-line__product-quantity-label'>{resources.quantityDisplayString}</div>\n\n                    {_generateErrorMessage()}\n\n                    <Quantity\n                        id={`msc-cart-line__quantity_${props.data.product.RecordId}`}\n                        max={props.maxQuantity || 10}\n                        currentCount={props.currentQuantity}\n                        onChange={onChange}\n                        inputQuantityAriaLabel={resources.inputQuantityAriaLabel}\n                        decrementButtonAriaLabel={resources.decrementButtonAriaLabel}\n                        incrementButtonAriaLabel={resources.incrementButtonAriaLabel}\n                        key={props.data.cartLine.LineId}\n                        disabled={!props.isCartStateReady}\n                        telemetryContent={props.telemetryContent}\n                    />\n                </div>\n            );\n        } else {\n            nodes.push(\n                <div className={classNames('msc-cart-line__quantity', { 'single-quantity': props.data.cartLine.Quantity === 1 })}>\n                    <label className='quantity-label'>{resources.quantityDisplayString}:</label>\n\n                    {_generateErrorMessage()}\n\n                    <span className='quantity-value'>{props.data.cartLine.Quantity}</span>\n                </div>\n            );\n        }\n\n        nodes.push(\n            <div className='msc-cart-line__product-savings'>\n                <PriceComponent\n                    data={isSalesLine ? {\n                        price: {\n                            // @ts-ignore\n                            CustomerContextualPrice: props.data.cartLine.NetAmount,\n                            BasePrice: props.data.cartLine.Price\n                        }\n                    } : {\n                            price: {\n                                CustomerContextualPrice: props.data.cartLine.NetAmountWithoutTax,\n                                BasePrice: props.data.cartLine.NetPrice\n                            }\n                        }}\n                    context={props.context}\n                    id={props.id}\n                    typeName={props.typeName}\n                    className='msc-cart-line__product-savings-actual'\n                    originalPriceText={resources.originalPriceText}\n                    currentPriceText={resources.currentPriceText}\n                />\n                {\n                    props.data.cartLine.DiscountAmount && props.data.cartLine.DiscountAmount > 0 &&\n                    <>\n                        <span className='msc-cart-line__product-savings-label'>{` ${props.resources.discountStringText || 'Discount'} `}</span>\n                        <PriceComponent\n                            data={props.isSalesLine ? {\n                                price: {\n                                    // @ts-ignore\n                                    CustomerContextualPrice: props.data.cartLine.PeriodicDiscount\n                                }\n                            } : {\n                                    price: {\n                                        CustomerContextualPrice: props.data.cartLine.DiscountAmountWithoutTax,\n                                        BasePrice: props.data.cartLine.DiscountAmount\n                                    }\n                                }}\n                            context={props.context}\n                            id={props.id}\n                            typeName={props.typeName}\n                            className='msc-cart-line__product-savings-text'\n                        />\n                    </> ||\n                    null\n                }\n            </div>\n        );\n\n        return nodes;\n    };\n\n    return (\n        <div className='msc-cart-line'>\n            <div className='msc-cart-line__product-image'>\n                <Image src={props.primaryImageUrl || ''} fallBackSrc={fallbackImageUrl} altText={product.Name} gridSettings={props.gridSettings} imageSettings={props.imageSettings} loadFailureBehavior='empty' />\n            </div>\n            <div className='msc-cart-line__content'>\n                <div className='msc-cart-line__product'>\n                    <a className='msc-cart-line__product-title' href={productUrl} {...prodAttribute} >{product.Name}</a>\n                    {productDimensions.length > 0 ?\n                        <div className='msc-cart-line__product-variants'>{productDimensions}</div> :\n                        ''\n                    }\n                    <div className='msc-cart-line__product-price'>\n                        <PriceComponent\n                            data={isSalesLine ? {\n                                price: {\n                                    // @ts-ignore\n                                    CustomerContextualPrice: props.data.cartLine.NetAmount,\n                                    BasePrice: props.data.cartLine.Price\n                                }\n                            } : {\n                                    price: {\n                                        CustomerContextualPrice: props.data.cartLine.NetAmountWithoutTax,\n                                        BasePrice: props.data.cartLine.NetPrice\n                                    }\n                                }}\n                            context={props.context}\n                            id={props.id}\n                            typeName={props.typeName}\n                            className='discount-value'\n                        />\n                    </div>\n                    {renderDisountLines}\n                    {renderInventoryLabel}\n                    {props.showShippingChargesForLineItems && <div className='msc-cart-line__freight'>\n                        {renderShippingLabel}\n                    </div>}\n                    {renderOtherCharges}\n                </div>\n                {\n                    _generateQuantityandPrice()\n                }\n            </div>\n        </div>\n    );\n};\n\nexport default CartLine;"]}