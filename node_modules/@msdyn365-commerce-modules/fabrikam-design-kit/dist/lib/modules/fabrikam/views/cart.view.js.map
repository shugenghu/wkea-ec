{"version":3,"file":"cart.view.js","sourceRoot":"./src/","sources":["modules/fabrikam/views/cart.view.tsx"],"names":[],"mappings":"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","sourcesContent":["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nimport * as React from 'react';\n\nimport {\n    ICartlinesViewProps,\n    ICartResources,\n    ICartViewProps,\n    IOrderSummaryErrors\n} from '@msdyn365-commerce-modules/cart';\n\nimport { IOrderSummaryLines } from '@msdyn365-commerce-modules/order-summary-utilities';\nimport { Button, getPayloadObject, getTelemetryAttributes, INodeProps, ITelemetryContent, Node, TelemetryConstant } from '@msdyn365-commerce-modules/utilities';\n\nconst CartView: React.FC<ICartViewProps> = (props: ICartViewProps) => (\n    <div className={props.className} id={props.id} {...props.renderModuleAttributes(props)}>\n        {props.title}\n        <Node {...props.CartlinesWrapper}>\n            {_renderCartlines(props.cartlines, props.resources, props.storeSelector, props.backToShoppingButton, props.waitingComponent, props.cartLoadingStatus, props.cartDataResult, props.telemetryContent)}\n        </Node>\n        {props.orderSummaryHeading &&\n            < Node {...props.OrderSummaryWrapper}>\n                {props.orderSummaryHeading}\n                {_renderOrderSummarylines(props.orderSummaryLineitems, props.OrderSummaryItems, props)}\n                {_renderErrorBlock(props.OrderSummaryErrors)}\n                {props.checkoutAsSignInUserButton}\n                {props.checkoutAsGuestButton}\n                {props.backToShoppingButton}\n                {props.createTemplateFromCartButton}\n            </Node>\n        }\n        {props.storeSelector}\n    </div>\n);\n\nconst _renderCartlines = (cartLines: ICartlinesViewProps[] | undefined, resources: ICartResources, storeSelector: React.ReactNode | undefined,\n                          backToShoppingButton: React.ReactNode, waitingComponent: React.ReactNode, cartLoadingStatus: string, cartDataResult: boolean, telemetryContent?: ITelemetryContent): JSX.Element[] | JSX.Element => {\n\n    const { emptyCartText } = resources;\n\n    if (cartLoadingStatus) {\n        return <>{cartLoadingStatus}</>;\n    }\n    if (cartLines) {\n        return cartLines.map((cartLine, index) => {\n            return (\n                <div className='msc-cart-lines-item' key={index}>\n                    {cartLine.cartline}\n                    {_renderBOPISBlock(cartLine, resources, storeSelector, telemetryContent)}\n                    {\n                        cartLine.addToOrderTemplate ? (\n                            <div className='msc-cart-line__extra-actions'>\n                                {cartLine.addToOrderTemplate}\n                                {cartLine.addToWishlist}\n                                {cartLine.remove}\n                            </div>\n                        ) : (\n                            <>\n                                {cartLine.addToWishlist}\n                                {cartLine.remove}\n                            </>\n                        )\n                    }\n                </div>\n            );\n        });\n    } else {\n        return (cartDataResult ?\n            (\n                <div className='msc-cart__empty-cart'>\n                    <p className='msc-cart-line'>{emptyCartText}</p>\n                    {backToShoppingButton}\n                </div>\n            ) : <>{waitingComponent}</>\n        );\n    }\n};\n\nconst _renderBOPISBlock = (cartLine: ICartlinesViewProps, resources: ICartResources, storeSelector: React.ReactNode | undefined, telemetryContent?: ITelemetryContent): JSX.Element | null => {\n    if (!cartLine.pickUpInStore || !storeSelector) {\n        return null;\n    }\n\n    const { shipInsteadDisplayText, shipToAddressDisplayText, pickItUpDisplayText, pickUpAtStoreWithLocationText, changeStoreDisplayText } = resources;\n\n    const isBopisSelected = cartLine.pickUpInStore.isBopisSelected;\n    const toggleBopis = (event: React.MouseEvent<HTMLElement>) => { return cartLine.pickUpInStore && cartLine.pickUpInStore.callbacks.toggleBopis(!isBopisSelected); };\n    const changeStore = (event: React.MouseEvent<HTMLElement>) => { return cartLine.pickUpInStore && cartLine.pickUpInStore.callbacks.toggleBopis(true); };\n    const payLoad = getPayloadObject('click',telemetryContent!, TelemetryConstant.PickupInStore);\n    const puckUpinStoreAttribute = getTelemetryAttributes(telemetryContent!, payLoad);\n\n    return (\n        <Node {...cartLine.pickUpInStore.ContainerProps}>\n            <div className='msc-cart-line__bopis-method'>\n                {isBopisSelected ? <span className='pick-up'>{pickUpAtStoreWithLocationText}</span> : <span className='ship'>{shipToAddressDisplayText}</span>}\n            </div>\n            {\n                isBopisSelected &&\n                <div className='msc-cart-line__bopis-fullfilment'>\n                    <span className='msc-cart-line__bopis-fullfilment-store'>{cartLine.pickUpInStore.orgUnitName}</span>\n                    <Button className='msc-cart-line__bopis-changestore' onClick={changeStore}>{changeStoreDisplayText}</Button>\n                </div>\n            }\n            <Button className='msc-cart-line__bopis-btn' {...puckUpinStoreAttribute} onClick={toggleBopis}>{isBopisSelected ? shipInsteadDisplayText : pickItUpDisplayText}</Button>\n        </Node>\n    );\n};\n\nconst _renderErrorBlock = (errorData: IOrderSummaryErrors | undefined): JSX.Element | null => {\n    if (!errorData || errorData.errors.length === 0) {\n        return null;\n    }\n    return (\n        <Node {...errorData.Wrapper}>\n            {errorData.header}\n            {errorData.errors}\n        </Node>\n    );\n};\n\nconst _renderOrderSummarylines = (orderSummaryLines: IOrderSummaryLines | undefined, OrderSummaryItems: INodeProps, props: ICartViewProps): JSX.Element | null => {\n    if (!orderSummaryLines) {\n        return null;\n    }\n    return (\n        <Node {...OrderSummaryItems}>\n            {props.promoCode}\n            {orderSummaryLines.subtotal}\n            {orderSummaryLines.shipping}\n            {orderSummaryLines.otherCharge}\n            {orderSummaryLines.tax}\n            {orderSummaryLines.totalDiscounts ? orderSummaryLines.totalDiscounts : null}\n            {orderSummaryLines.orderTotal}\n        </Node>\n    );\n};\nexport default CartView;"]}