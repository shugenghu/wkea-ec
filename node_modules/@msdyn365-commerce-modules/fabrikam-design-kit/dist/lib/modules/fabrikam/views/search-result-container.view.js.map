{"version":3,"file":"search-result-container.view.js","sourceRoot":"./src/","sources":["modules/fabrikam/views/search-result-container.view.tsx"],"names":[],"mappings":"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","sourcesContent":["\nimport { ICategoryHierarchyViewProps, IRefineMenuViewProps, ISearchResultContainerViewProps, ISearchResultModalViewProps, ISortByViewProps, ITitleViewProps } from '@msdyn365-commerce-modules/search-result-container';\nimport {  Module, Node } from '@msdyn365-commerce-modules/utilities';\nimport * as React from 'react';\n\nconst SearchResultContainerView: React.FC<ISearchResultContainerViewProps> = props => {\n    const { SearchResultContainer, products, pagination, ProductsContainer, ProductSectionContainer, choiceSummary, isMobile, modalToggle, searchResultModal, TitleViewProps,\n        refineMenu, categoryHierarchy, sortByOptions, CategoryNavContainer, RefineAndProductSectionContainer, errorMessage, FeatureSearchContainer, similarLookProduct } = props;\n    if (isMobile) {\n        return (\n            <Module {...SearchResultContainer}>\n                {categoryHierarchy && renderCategoryHierarchy(categoryHierarchy)}\n                {renderTitle(TitleViewProps)}\n                {choiceSummary}\n                {modalToggle}\n                {createSearchResultModal(searchResultModal, refineMenu, sortByOptions)}\n                <Node {...FeatureSearchContainer}>\n                    {similarLookProduct}\n                </Node>\n                <Node {...ProductsContainer}>\n                    {errorMessage}\n                    {products}\n                </Node>\n                {pagination}\n            </Module>\n        );\n    }\n    return (\n        <Module {...SearchResultContainer}>\n           {categoryHierarchy &&\n                <Node {...CategoryNavContainer}>\n                {renderCategoryHierarchy(categoryHierarchy)}\n                </Node>\n            }\n            <Node {...RefineAndProductSectionContainer}>\n            {refineMenu && renderRefiner(refineMenu)}\n            <Node {...ProductSectionContainer}>\n                <Node {...FeatureSearchContainer}>\n                    {similarLookProduct}\n                </Node>\n                <div className='ms-search-result-wrapper-title-choice-summary'>\n                    {TitleViewProps && renderTitle(TitleViewProps)}\n                    {choiceSummary}\n                </div>\n                <div className='ms-search-result-wrapper-sort-by-category'>\n                    {sortByOptions && renderSort(sortByOptions)}\n                </div>\n                <Node {...ProductsContainer}>\n                {errorMessage}\n                    {products}\n                </Node>\n                {pagination}\n            </Node>\n            </Node>\n        </Module>\n    );\n\n};\n\nconst createSearchResultModal = (modalProps: ISearchResultModalViewProps, refineMenu: IRefineMenuViewProps, sortByDropDown: ISortByViewProps): JSX.Element => {\n    return React.cloneElement(modalProps.modal, {}, modalProps.modalHeader, createModalBody(modalProps, refineMenu, sortByDropDown), modalProps.modalFooter);\n};\n\nconst createModalBody = (props: ISearchResultModalViewProps, refineMenu: IRefineMenuViewProps, sortByDropDown: ISortByViewProps): JSX.Element | null => {\n    if (sortByDropDown) {\n        return React.cloneElement(props.modalBody, {}, renderSort(sortByDropDown), renderRefiner(refineMenu));\n    }\n    return null;\n};\n\nconst renderRefiner = (props: IRefineMenuViewProps): JSX.Element | null => {\n    const { refiners, RefineMenuContainer, RefinerSectionContainer } = props;\n    if (refiners) {\n        return (\n            <Node {...RefinerSectionContainer}>\n                <Node {...RefineMenuContainer}>\n                    {refiners.map((submenu, index) => (\n                        <React.Fragment key={index}>\n                            {submenu}\n                        </React.Fragment>\n                    ))}\n                </Node>\n            </Node>\n        );\n    }\n    return null;\n};\n\nconst renderSort = (props: ISortByViewProps): JSX.Element | null => {\n    const { SortingContainer, sortByDropDown } = props;\n    if (sortByDropDown) {\n        return (\n            <Node {...SortingContainer}>\n                {sortByDropDown}\n            </Node>\n        );\n    }\n    return null;\n};\n\nconst renderCategoryHierarchy = (props: ICategoryHierarchyViewProps): JSX.Element | null => {\n    const { CategoryHierarchyContainer, categoryHierarchyList, categoryHierarchySeparator } = props;\n    if (categoryHierarchyList) {\n        return (\n            <Node {...CategoryHierarchyContainer}>\n                {categoryHierarchyList.map((category, index) => (\n                    <React.Fragment key={index}>\n                        {category}\n                        {categoryHierarchyList && categoryHierarchyList[index + 1] && categoryHierarchySeparator}\n                    </React.Fragment>\n                ))}\n            </Node>\n        );\n    }\n\n    return null;\n};\n\nconst renderTitle = (props: ITitleViewProps): JSX.Element | null => {\n    const { title, TitleContainer } = props;\n    if (title) {\n        return (\n            <Node {...TitleContainer}>\n                <h2>\n                    {title.titlePrefix}\n                    {title.titleText}\n                     ({title.titleCount})\n                </h2>\n            </Node>\n        );\n    }\n    return null;\n};\n\nexport default SearchResultContainerView;"]}