{"version":3,"file":"accordion.view.test.js","sourceRoot":"./src/","sources":["modules/accordion/__tests__/unit/accordion.view.test.tsx"],"names":[],"mappings":"AACA,OAAO,EAAE,oBAAoB,EAAE,MAAM,yBAAyB,CAAC;AAC/D,OAAO,EAAE,MAAM,EAAE,MAAM,QAAQ,CAAC;AAChC,OAAO,KAAK,KAAK,MAAM,OAAO,CAAC;AAG/B,OAAO,aAAa,MAAM,sBAAsB,CAAC;AAEjD,QAAQ,CAAC,6BAA6B,EAAE,GAAG,EAAE;IACzC,EAAE,CAAC,mBAAmB,EAAE,GAAG,EAAE;QACzB,MAAM,WAAW,GAAwB,oBAAoB,CAAC,EAAE,EAAE,EAAE,CAAwB,CAAC;QAC7F,MAAM,iBAAiB,GAAoB,yBAAyB,CAAC;QACrE,MAAM,iBAAiB,GAAoB,yBAAyB,CAAC;QACrE,WAAW,CAAC,KAAK,GAAG,EAAC,cAAc,EAAE,CAAC,iBAAiB,EAAE,iBAAiB,CAAC,EAAC,CAAC;QAC7E,MAAM,SAAS,GAAwB;YACnC,GAAG,WAAW;YACd,OAAO,EAAE,oBAAoB;YAC3B,kBAAkB,EAAE;gBAClB,WAAW;gBACX,SAAS,EAAE,cAAc;aAC1B;YACD,aAAa,EAAE,EAAC,SAAS,EAAE,6BAA6B,EAAC;YACzD,cAAc,EAAE,EAAE,SAAS,EAAE,uCAAuC,EAAE;YACtE,yBAAyB,EAAE;gBACzB,GAAG,EAAE,KAAgB;gBACrB,SAAS,EAAE,qDAAqD;aACjE;YACD,sBAAsB,EAAE;gBACtB,GAAG,EAAE,KAAgB;gBACrB,SAAS,EAAE,2BAA2B;aACvC;YACD,gBAAgB,EAAE,oBAAoB;YACtC,cAAc,EAAG,oBAAoB;SAC1C,CAAC;QACF,MAAM,SAAS,GAAG,MAAM,CAAC,oBAAC,aAAa,oBAAK,SAAS,EAAI,CAAC,CAAC;QAC3D,MAAM,CAAC,SAAS,CAAC,CAAC,eAAe,EAAE,CAAC;IACxC,CAAC,CAAC,CAAC;IACH,EAAE,CAAC,aAAa,EAAE,GAAG,EAAE;QACrB,MAAM,WAAW,GAAwB,oBAAoB,CAAC,EAAE,EAAE,EAAE,CAAwB,CAAC;QAC7F,MAAM,iBAAiB,GAAoB,yBAAyB,CAAC;QACrE,MAAM,iBAAiB,GAAoB,yBAAyB,CAAC;QACrE,WAAW,CAAC,KAAK,GAAG,EAAC,cAAc,EAAE,CAAC,iBAAiB,EAAE,iBAAiB,CAAC,EAAC,CAAC;QAC7E,MAAM,SAAS,GAAwB;YACnC,GAAG,WAAW;YACd,OAAO,EAAE,EAAE;YACT,kBAAkB,EAAE;gBAClB,WAAW;gBACX,SAAS,EAAE,cAAc;aAC1B;YACD,aAAa,EAAE,EAAC,SAAS,EAAE,6BAA6B,EAAC;YACzD,cAAc,EAAE,EAAE,SAAS,EAAE,uCAAuC,EAAE;YACtE,yBAAyB,EAAE;gBACzB,GAAG,EAAE,KAAgB;gBACrB,SAAS,EAAE,qDAAqD;aACjE;YACD,sBAAsB,EAAE;gBACtB,GAAG,EAAE,KAAgB;gBACrB,SAAS,EAAE,2BAA2B;aACvC;YACD,gBAAgB,EAAE,EAAE;YACpB,cAAc,EAAG,EAAE;SACxB,CAAC;QACF,MAAM,SAAS,GAAG,MAAM,CAAC,oBAAC,aAAa,oBAAK,SAAS,EAAI,CAAC,CAAC;QAC3D,MAAM,CAAC,SAAS,CAAC,CAAC,eAAe,EAAE,CAAC;IACxC,CAAC,CAAC,CAAC;AACL,CAAC,CAAC,CAAC","sourcesContent":["import { NodeTag } from '@msdyn365-commerce-modules/utilities';\nimport { buildMockModuleProps } from '@msdyn365-commerce/core';\nimport { render } from 'enzyme';\nimport * as React from 'react';\nimport { IAccordionViewProps } from '../../accordion';\nimport { IAccordionProps } from '../../accordion.props.autogenerated';\nimport AccordionView from '../../accordion.view';\n\ndescribe('accordion unit tests - View', () => {\n    it('renders correctly', () => {\n        const moduleProps: IAccordionProps<{}> = buildMockModuleProps({}, {}) as IAccordionProps<{}>;\n        const myReactNodeChild1: React.ReactNode = `whatever child module 1`;\n        const myReactNodeChild2: React.ReactNode = `whatever child module 1`;\n        moduleProps.slots = {accordionItems: [myReactNodeChild1, myReactNodeChild2]};\n        const mockProps: IAccordionViewProps = {\n            ...moduleProps,\n            heading: '{HeadingComponent}',\n              AccordionContainer: {\n                moduleProps,\n                className: 'ms-accordion'\n              },\n              HeaderSection: {className: 'ms-accordion-header-section'},\n              HeadingWrapper: { className: 'ms-accordion-header-section-container' },\n              accordianButtonsContainer: {\n                tag: 'div' as NodeTag,\n                className: 'ms-accordion-header-section-toggle-button-container',\n              },\n              accordionItemContainer: {\n                tag: 'div' as NodeTag,\n                className: 'ms-accordion-item-section',\n              },\n              accordionButtons: '{accordianButtons}',\n              accordionItems : '{accordianButtons}',\n        };\n        const component = render(<AccordionView {...mockProps} />);\n        expect(component).toMatchSnapshot();\n    });\n    it('render null', () => {\n      const moduleProps: IAccordionProps<{}> = buildMockModuleProps({}, {}) as IAccordionProps<{}>;\n      const myReactNodeChild1: React.ReactNode = `whatever child module 1`;\n      const myReactNodeChild2: React.ReactNode = `whatever child module 1`;\n      moduleProps.slots = {accordionItems: [myReactNodeChild1, myReactNodeChild2]};\n      const mockProps: IAccordionViewProps = {\n          ...moduleProps,\n          heading: '',\n            AccordionContainer: {\n              moduleProps,\n              className: 'ms-accordion'\n            },\n            HeaderSection: {className: 'ms-accordion-header-section'},\n            HeadingWrapper: { className: 'ms-accordion-header-section-container' },\n            accordianButtonsContainer: {\n              tag: 'div' as NodeTag,\n              className: 'ms-accordion-header-section-toggle-button-container',\n            },\n            accordionItemContainer: {\n              tag: 'div' as NodeTag,\n              className: 'ms-accordion-item-section',\n            },\n            accordionButtons: '',\n            accordionItems : '',\n      };\n      const component = render(<AccordionView {...mockProps} />);\n      expect(component).toMatchSnapshot();\n  });\n});"]}