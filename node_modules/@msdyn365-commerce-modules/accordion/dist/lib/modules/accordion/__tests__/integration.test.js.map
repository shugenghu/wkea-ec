{"version":3,"file":"integration.test.js","sourceRoot":"./src/","sources":["modules/accordion/__tests__/integration.test.tsx"],"names":[],"mappings":"AAAA,OAAO,EAAE,yBAAyB,EAAE,MAAM,2CAA2C,CAAC;AACtF,OAAO,EAAE,oBAAoB,EAAC,MAAM,yBAAyB,CAAC;AAC9D,OAAO,EAAE,KAAK,EAAE,MAAM,EAAE,MAAM,QAAQ,CAAC;AACvC,OAAO,KAAK,KAAK,MAAM,OAAO,CAAC;AAE/B,OAAO,SAAS,MAAM,cAAc,CAAC;AASrC,OAAO,aAAa,MAAM,mBAAmB,CAAC;AAE9C,MAAM,iBAAiB,GAAmB;IACtC,sBAAsB,EAAE,yBAAyB,CAAC;QAC9C,aAAa,EAAE,IAAI;KACK,CAAC;CAChC,CAAC;AAEF,MAAM,qBAAqB,GAAqB;IAC5C,OAAO,EAAE;QACL,IAAI,EAAE,gBAAgB;QACtB,GAAG,MAAe;KACjB;IACL,aAAa,EAAE,IAAI;IACnB,gBAAgB,eAA8B;IAC9C,SAAS,EAAE,WAAW;CACzB,CAAC;AAQF,MAAM,WAAW,GAAqB;IAClC,OAAO,EAAE;QACL,IAAI,EAAE,gBAAgB;QACtB,GAAG,MAAe;KACjB;IACL,aAAa,EAAE,KAAK;IACpB,gBAAgB,qBAAoC;IACpD,SAAS,EAAE,WAAW;CACzB,CAAC;AAEF,MAAM,YAAY,GAAwB;IACtC,eAAe,EAAE,WAAW;IAC5B,aAAa,EAAE,UAAU;IACzB,kBAAkB,EAAE,GAAG;CAC1B,CAAC;AAEF,MAAM,WAAW,GAAG,EAAE,CAAC;AAEvB,QAAQ,CAAC,6BAA6B,EAAE,GAAG,EAAE;IAC3C,EAAE,CAAC,mBAAmB,EAAE,GAAE,EAAE;QACtB,MAAM,WAAW,GAAoC;YAErD,GAAG,oBAAoB,CAAC,iBAAiB,EAAE,WAAW,EAAE,qBAAqB,CAAoC,EAAE,SAAS,EAAE,YAAY;YAEtI,UAAU,EAAE,aAAa;SAC5B,CAAC;QAEF,MAAM,SAAS,GAAG,MAAM,CAAC,oBAAC,SAAS,oBAAK,WAAW,EAAG,CAAC,CAAC;QACxD,MAAM,CAAC,SAAS,CAAC,CAAC,eAAe,EAAE,CAAC;IAC1C,CAAC,CAAC,CAAC;IAEH,EAAE,CAAC,mDAAmD,EAAE,GAAE,EAAE;QACtD,MAAM,WAAW,GAAoC;YACrD,GAAG,oBAAoB,CAAC,iBAAiB,EAAE,WAAW,EAAE,WAAW,CAAoC,EAAE,SAAS,EAAE,YAAY;YAE5H,UAAU,EAAE,aAAa;SAC5B,CAAC;QAEF,MAAM,SAAS,GAAG,MAAM,CAAC,oBAAC,SAAS,oBAAK,WAAW,EAAG,CAAC,CAAC;QACxD,MAAM,CAAC,SAAS,CAAC,CAAC,eAAe,EAAE,CAAC;IACxC,CAAC,CAAC,CAAC;IAEL,EAAE,CAAC,uCAAuC,EAAE,GAAE,EAAE;QAC1C,MAAM,WAAW,GAAoC;YAErD,GAAG,oBAAoB,CAAC,iBAAiB,EAAE,WAAW,EAAE,qBAAqB,CAAoC;YAChH,SAAS,EAAE,YAAY;YAEvB,UAAU,EAAE,aAAa;SACzB,CAAC;QAEF,MAAM,OAAO,GAAG,KAAK,CAAC,CAAC,oBAAC,SAAS,oBAAK,WAAW,EAAG,CAAC,CAAC,CAAC;QACvD,MAAM,OAAO,GAAG,OAAO,CAAC,IAAI,CAAC,QAAQ,CAAC,CAAC;QACvC,MAAM,CAAC,OAAO,CAAC,MAAM,CAAC,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC;QAC/B,MAAM,WAAW,GAAG,OAAO,CAAC,KAAK,EAAE,CAAC;QACpC,MAAM,SAAS,GAAG,OAAO,CAAC,IAAI,EAAE,CAAC;QAEjC,SAAS,CAAC,QAAQ,CAAC,OAAO,CAAC,CAAC;QAC5B,WAAW,CAAC,QAAQ,CAAC,OAAO,CAAC,CAAC;QAE9B,OAAO,CAAC,OAAO,EAAE,CAAC;IACtB,CAAC,CAAC,CAAC;AACP,CAAC,CAAC,CAAC","sourcesContent":["import { wrapInResolvedAsyncResult } from '@msdyn365-commerce-modules/retail-actions';\nimport { buildMockModuleProps} from '@msdyn365-commerce/core';\nimport { mount, render } from 'enzyme';\nimport * as React from 'react';\nimport { IAccordionExpandedState } from '../../../data-actions/accordion-state';\nimport Accordion from '../accordion';\nimport { IAccordionData } from '../accordion.data';\nimport {\n    HeadingTag,\n    IAccordionConfig,\n    IAccordionProps,\n    IAccordionResources,\n    interactionStyle\n} from '../accordion.props.autogenerated';\nimport accordionView from '../accordion.view';\n\nconst mockAccordionData: IAccordionData = {\n    accordionExpandedState: wrapInResolvedAsyncResult({\n        isAllExpanded: true\n    } as IAccordionExpandedState)\n};\n\nconst mockConfigWithFlipper: IAccordionConfig = {\n    heading: {\n        text: 'Mock heading 1',\n        tag: HeadingTag.h1\n        },\n    showToggleAll: true,\n    interactionStyle: interactionStyle.Independent,\n    className: 'accordion'\n};\n\n// const myReactNodeChild1: React.ReactNode = 'whatever child module 1';\n// const myReactNodeChild2: React.ReactNode = 'whatever child module 2';\n// const slots = {\n//                 accordionItems: [myReactNodeChild1, myReactNodeChild2]\n//             };\n\nconst mockConfig2: IAccordionConfig = {\n    heading: {\n        text: 'Mock heading 1',\n        tag: HeadingTag.h1\n        },\n    showToggleAll: false,\n    interactionStyle: interactionStyle.ExpandOneItemOnly,\n    className: 'accordion'\n};\n\nconst mockResource: IAccordionResources = {\n    collapseAllText: 'close all',\n    expandAllText: 'open all',\n    toggleAllSeparator: '|'\n};\n\nconst mockActions = {};\n\ndescribe('Accordion integration tests', () => {\n  it('renders correctly', ()=> {\n        const moduleProps: IAccordionProps<IAccordionData> = {\n            // slots: slots,\n        ...buildMockModuleProps(mockAccordionData, mockActions, mockConfigWithFlipper) as IAccordionProps<IAccordionData>, resources: mockResource,\n            // @ts-ignore\n            renderView: accordionView\n        };\n\n        const component = render(<Accordion {...moduleProps}/>);\n        expect(component).toMatchSnapshot();\n  });\n\n  it('renders correctly with showToggleAll set to false', ()=> {\n        const moduleProps: IAccordionProps<IAccordionData> = {\n        ...buildMockModuleProps(mockAccordionData, mockActions, mockConfig2) as IAccordionProps<IAccordionData>, resources: mockResource,\n            // @ts-ignore\n            renderView: accordionView\n        };\n\n        const component = render(<Accordion {...moduleProps}/>);\n        expect(component).toMatchSnapshot();\n    });\n\n  it('should fire exapand & collapse events', ()=> {\n        const moduleProps: IAccordionProps<IAccordionData> = {\n        // slots: slots,\n        ...buildMockModuleProps(mockAccordionData, mockActions, mockConfigWithFlipper) as IAccordionProps<IAccordionData>,\n         resources: mockResource,\n            // @ts-ignore\n         renderView: accordionView\n        };\n\n        const wrapper = mount((<Accordion {...moduleProps}/>));\n        const buttons = wrapper.find('button');\n        expect(buttons.length).toBe(2);\n        const collapseAll = buttons.first();\n        const expandAll = buttons.last();\n\n        expandAll.simulate('click');\n        collapseAll.simulate('click');\n\n        wrapper.unmount();\n    });\n});"]}