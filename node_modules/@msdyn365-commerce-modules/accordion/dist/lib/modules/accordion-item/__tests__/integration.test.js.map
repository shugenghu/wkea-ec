{"version":3,"file":"integration.test.js","sourceRoot":"./src/","sources":["modules/accordion-item/__tests__/integration.test.tsx"],"names":[],"mappings":"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","sourcesContent":["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { wrapInResolvedAsyncResult } from '@msdyn365-commerce-modules/retail-actions';\nimport { buildMockModuleProps} from '@msdyn365-commerce/core';\n/// <reference types=\"jest\" />\n\n// tslint:disable-next-line:no-unused-variable\nimport { mount, render } from 'enzyme';\nimport * as React from 'react';\nimport { IAccordionExpandedState } from '../../../data-actions/accordion-state';\nimport { interactionStyle } from '../../accordion/accordion.props.autogenerated';\nimport AccordionItem, { IAccordionItemExtentedProps } from '../accordion-item';\nimport { IAccordionItemData } from '../accordion-item.data';\nimport {\n  IAccordionItemConfig\n} from '../accordion-item.props.autogenerated';\nimport AccordionItemView from '../accordion-item.view';\n\nconst mockData: IAccordionItemData = {\n  accordionExpandedState: wrapInResolvedAsyncResult({ isAllExpanded: false } as IAccordionExpandedState)\n};\n\nconst mockDataWithExpandedTrue: IAccordionItemData = {\n  accordionExpandedState: wrapInResolvedAsyncResult({ isAllExpanded: true } as IAccordionExpandedState)\n};\n\nconst mockConfig: IAccordionItemConfig = {\n  accordionItemTitle: 'Accordion Item Title',\n  isExpandedOnInitialLoad: false,\n  className: ''\n};\n\nconst mockConfig1: IAccordionItemConfig = {\n  accordionItemTitle: '',\n  isExpandedOnInitialLoad: true,\n  className: 'ms-accordion-item-content'\n};\n\nconst myReactNodeChild1: React.ReactNode = 'whatever child module 1';\nconst slots = {\n  accordionItemContent: [myReactNodeChild1]\n        };\n\nconst mockActions = {};\n\ndescribe('AccordionItem', () => {\n  it('renders correctly', () => {\n    let moduleProps: IAccordionItemExtentedProps;\n    moduleProps = {\n      slots: slots,\n       ...buildMockModuleProps(mockData, mockActions, mockConfig) as IAccordionItemExtentedProps,\n       // @ts-ignore\n       renderView: AccordionItemView\n    };\n    moduleProps.interactionStyle = interactionStyle.ExpandOneItemOnly;\n    const component = render(<AccordionItem {...moduleProps} />);\n    expect(component).toMatchSnapshot();\n  });\n});\n\ndescribe('AccordionItemWithourDataAction', () => {\n  it('renders correctly', () => {\n    let moduleProps: IAccordionItemExtentedProps;\n    moduleProps = {\n      slots: slots,\n       ...buildMockModuleProps(mockActions, mockConfig1) as IAccordionItemExtentedProps,\n       // @ts-ignore\n       renderView: AccordionItemView\n    };\n    moduleProps.interactionStyle = interactionStyle.Independent;\n    const component = render(<AccordionItem {...moduleProps} />);\n    expect(component).toMatchSnapshot();\n  });\n});\n\ndescribe('AccordionItemWithExapnded', () => {\n  let moduleProps: IAccordionItemExtentedProps;\n\n  it('renders correctly', () => {\n    moduleProps = {\n      slots: slots,\n       ...buildMockModuleProps(mockDataWithExpandedTrue, mockActions, mockConfig1) as IAccordionItemExtentedProps,\n       // @ts-ignore\n       renderView: AccordionItemView\n    };\n    moduleProps.interactionStyle = interactionStyle.Independent;\n    const component = render(<AccordionItem {...moduleProps} />);\n    expect(component).toMatchSnapshot();\n  });\n});\n\ndescribe('AccordionItem on Toggle click check', () => {\n  let moduleProps: IAccordionItemExtentedProps;\n  beforeAll(() => {\n    moduleProps = {\n      slots: slots,\n       ...buildMockModuleProps(mockData, mockActions, mockConfig) as IAccordionItemExtentedProps,\n      // @ts-ignore\n      renderView: AccordionItemView\n    };\n  });\n  it('renders correctly', () => {\n    moduleProps.interactionStyle = interactionStyle.Independent;\n    const wrapper = mount((<AccordionItem {...moduleProps} />));\n    const buttons = wrapper.find('button');\n    expect(buttons.length).toBe(1);\n    const toggle = buttons.first();\n    toggle.simulate('click');\n\n    wrapper.unmount();\n  });\n});"]}