{"version":3,"file":"accordion-item.js","sourceRoot":"./src/","sources":["modules/accordion-item/accordion-item.tsx"],"names":[],"mappings":"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","sourcesContent":["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { ControlledDrawer, getTelemetryObject, IModuleProps, INodeProps, ITelemetryContent } from '@msdyn365-commerce-modules/utilities';\nimport { IDrawerState } from '@msdyn365-commerce-modules/utilities/dist/types/drawer/Drawer';\nimport * as Msdyn365 from '@msdyn365-commerce/core';\nimport classnames from 'classnames';\nimport { observer } from 'mobx-react';\nimport * as React from 'react';\nimport { createAccordionStateInput } from '../../data-actions/accordion-state-data-action';\nimport { interactionStyle } from '../accordion/accordion.props.autogenerated';\nimport { IAccordionItemData } from './accordion-item.data';\nimport {IAccordionItemProps } from './accordion-item.props.autogenerated';\n\nexport interface IAccordionItemViewProps {\n    AccordionItemContainer: IModuleProps;\n    drawer: INodeProps;\n    accordionSlots: INodeProps;\n    AccordionItemContent: INodeProps;\n    className: string;\n}\n\nexport interface IAccordionItemExtentedProps extends IAccordionItemProps<IAccordionItemData> {\n    interactionStyle?: interactionStyle;\n}\n\n/**\n *\n * AccordionItem component\n * @extends {React.Component<IAccordionItemExtentedProps>}\n */\n@observer\nclass AccordionItem extends React.Component<IAccordionItemExtentedProps> {\n\n    private moduleClassName: string = 'ms-accordion-item';\n    private telemetryContent?: ITelemetryContent;\n\n    constructor(props: IAccordionItemProps<IAccordionItemData>) {\n        super(props);\n        this._onToggle = this._onToggle.bind(this);\n        this.telemetryContent = getTelemetryObject(this.props.context.request.telemetryPageName!, this.props.friendlyName, this.props.telemetry);\n    }\n\n    public render(): JSX.Element {\n        const {slots, renderView, config, data } = this.props;\n        const accordionExpandedStateResult = data && data.accordionExpandedState && data.accordionExpandedState.result;\n        const expanded = accordionExpandedStateResult && accordionExpandedStateResult.isAllExpanded === undefined ?\n        data && config.isExpandedOnInitialLoad :\n        (accordionExpandedStateResult && accordionExpandedStateResult.isAllExpanded);\n        const viewProps = {\n            ... this.props,\n            AccordionItemContainer: {\n                moduleProps: this.props,\n                className:  classnames(this.moduleClassName, config.className)\n            },\n            AccordionItemContent: {\n                className: 'ms-accordion-item-content',\n            },\n            drawer:{\n                tag: ControlledDrawer,\n                className: `${this.moduleClassName}__drawer`,\n                toggleButtonText: (config.accordionItemTitle && config.accordionItemTitle) || '',\n                collapseProps: {isOpen: expanded},\n                onToggle: this._onToggle,\n                onTextChange: this.handleHeadingChange,\n                requestContext: this.props.context.request,\n                telemetryContent: this.telemetryContent\n            },\n            accordionSlots: slots,\n        };\n        return renderView(viewProps) as React.ReactElement;\n    }\n\n    public handleHeadingChange = (event: Msdyn365.ContentEditableEvent) => this.props.config.accordionItemTitle = event.target.value;\n\n    private _onToggle(state: IDrawerState): void {\n        if(!state.isOpen && this.props.interactionStyle === interactionStyle.ExpandOneItemOnly) {\n            const accordionState = { isAllExpanded: false };\n            this.props.context.actionContext.update(createAccordionStateInput(accordionState), accordionState);\n        }\n    }\n\n}\nexport default AccordionItem;"]}