{"version":3,"file":"accordion-item.view.js","sourceRoot":"./src/","sources":["modules/accordion-item/accordion-item.view.tsx"],"names":[],"mappings":"AAIA,OAAO,EAAE,MAAM,EAAE,IAAI,EAAE,MAAM,sCAAsC,CAAC;AACpE,OAAO,KAAK,KAAK,MAAM,OAAO,CAAC;AAG/B,MAAM,iBAAiB,GAAsC,KAAK,CAAC,EAAE;IAC7D,MAAM,EAAE,MAAM,EAAE,cAAc,EAAE,sBAAsB,EAAE,oBAAoB,EAAE,GAAG,KAAK,CAAC;IACvF,OAAO,CACH,oBAAC,MAAM,oBAAK,sBAAsB;QAC9B,oBAAC,IAAI,oBAAK,MAAM;YACZ,oBAAC,IAAI,oBAAK,oBAAoB,GACzB,cAAc,IAAI,cAAc,CAAC,oBAAoB,IAAI,cAAc,CAAC,oBAAoB,CAAC,MAAM,IAAI,CAAC,2BAA2B,CAAC,cAAc,CAAC,oBAAoB,CAAC,CAAC,CACvK,CACJ,CACF,CACR,CAAC;AACV,CAAC,CAAC;AAEN,MAAM,2BAA2B,GAAG,CAAC,KAAwB,EAAsB,EAAE;IACjF,OAAO,CACH,0CACK,KAAK,IAAI,KAAK,CAAC,MAAM,CAAC,CAAC,CAAC,CACxB,KAAK,CAAC,GAAG,CAAC,CAAC,IAAqB,EAAE,KAAa,EAAE,EAAE;QAC/C,OAAO,CACH,oBAAC,KAAK,CAAC,QAAQ,IAAC,GAAG,EAAE,KAAK,IACrB,IAAI,CACQ,CACpB,CAAC;IACN,CAAC,CAAC,CACL,CAAC,CAAC,CAAC,IAAI,CACN,CACN,CAAC;AACN,CAAC,CAAC;AACF,eAAe,iBAAiB,CAAC","sourcesContent":["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nimport { Module, Node } from '@msdyn365-commerce-modules/utilities';\nimport * as React from 'react';\nimport { IAccordionItemViewProps } from './accordion-item';\n\nconst AccordionItemView: React.FC<IAccordionItemViewProps> = props => {\n        const { drawer, accordionSlots, AccordionItemContainer, AccordionItemContent } = props;\n        return (\n            <Module {...AccordionItemContainer} >\n                <Node {...drawer}>\n                    <Node {...AccordionItemContent}>\n                        {accordionSlots && accordionSlots.accordionItemContent && accordionSlots.accordionItemContent.length && (_renderAccordionItemContent(accordionSlots.accordionItemContent))}\n                    </Node>\n                </Node>\n            </Module>\n            );\n    };\n\nconst _renderAccordionItemContent = (items: React.ReactNode[]): JSX.Element | null => {\n    return (\n        <>\n            {items && items.length ? (\n             items.map((item: React.ReactNode, index: number) => {\n                 return (\n                     <React.Fragment key={index}>\n                         {item}\n                     </React.Fragment>\n                 );\n             })\n         ) : null}\n        </>\n    );\n};\nexport default AccordionItemView;"]}