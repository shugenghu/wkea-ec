import { IGiftCardExtend } from '@msdyn365-commerce/global-state';
import { Address, GiftCard, TenderLine, TokenizedPaymentCard } from '@msdyn365-commerce/retail-proxy/dist/Entities/CommerceTypes.g';
/**
 * State information related to what is needed to succesfully perform a checkout
 */
export declare class CheckoutState {
    private _tokenizedPaymentCard?;
    get tokenizedPaymentCard(): Readonly<TokenizedPaymentCard | undefined>;
    private _tenderLine?;
    get tenderLine(): Readonly<TenderLine | undefined>;
    private _billingAddress?;
    get billingAddress(): Readonly<Address | undefined>;
    private _shippingAddress?;
    get shippingAddress(): Readonly<Address | undefined>;
    private _cardPrefix?;
    get cardPrefix(): Readonly<string | undefined>;
    private _giftCards;
    get giftCards(): Readonly<GiftCard[]>;
    private _giftCardExtends;
    get giftCardExtends(): Readonly<IGiftCardExtend[]>;
    private _loyaltyCardNumber?;
    get loyaltyCardNumber(): Readonly<string | undefined>;
    private _loyaltyAmount;
    get loyaltyAmount(): Readonly<number>;
    private _guestCheckoutEmail;
    get guestCheckoutEmail(): Readonly<string>;
    private _isTermsAndConditionAccepted;
    get isTermsAndConditionAccepted(): Readonly<boolean>;
    private _customerAccountAmount;
    get customerAccountAmount(): Readonly<number>;
    updateTokenizedPaymentCard(newTokenizedPaymentCard: TokenizedPaymentCard): void;
    updateTenderLine(newTenderLine?: TenderLine): void;
    updateShippingAddress(newShippingAddress: Address): void;
    updateBillingAddress(newBillingAddress: Address): void;
    updateCardPrefix(newCardPrefix: string): void;
    removeGiftCard(giftCardNumber: string): void;
    removeGiftCardExtend(giftCardNumber: string): void;
    addGiftCard(giftCard: GiftCard): void;
    addGiftCardExtend(giftCard: IGiftCardExtend): void;
    updateLoyaltyCardNumber(newLoyaltyCardNumber: string): void;
    updateLoyaltyAmount(newAmount: number): void;
    updateGuestCheckoutEmail(newGuestCheckoutEmail: string): void;
    updateTermsAndConditionsAcceptance(newIsTermsAndConditionAccepted: boolean): void;
    updateCustomerAccountAmount(newAmount: number): void;
}
