{"version":3,"file":"store-selector-state-manager-data-action.test.js","sourceRoot":"./src/","sources":["store-selector-state-manager/__tests__/store-selector-state-manager-data-action.test.ts"],"names":[],"mappings":"AAAA,OAAO,MAAM,CAAC;AAEd,OAAO,KAAK,IAAI,MAAM,yBAAyB,CAAC;AAChD,OAAO,EAAE,4BAA4B,EAAE,MAAM,qCAAqC,CAAC;AAEnF,OAAO,UAAU,EAAE,EAAE,6BAA6B,EAAE,MAAM,6CAA6C,CAAC;AAExG,QAAQ,CAAC,oDAAoD,EAAE,GAAG,EAAE;IAChE,MAAM,kBAAkB,GAAyB;QAC7C,0BAA0B;QAC1B,OAAO,EAAE;YACL,cAAc,EAAE,MAAM;YACtB,eAAe,EAAE,IAAI;SACxB;KACJ,CAAC;IAEF,EAAE,CAAC,sEAAsE,EAAE,GAAG,EAAE;QAC5E,MAAM,KAAK,GAA+B,IAAI,4BAA4B,EAAE,CAAC;QAE7E,MAAM,KAAK,GAAG,6BAA6B,CAAC,KAAK,CAAC,CAAC;QAEnD,MAAM,CAAC,KAAK,CAAC,MAAM,CAAC,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC;QACjC,MAAM,CAAC,KAAK,CAAC,WAAW,EAAE,CAAC,CAAC,IAAI,CAAC,iBAAiB,CAAC,CAAC;IACxD,CAAC,CAAC,CAAC;IAEH,EAAE,CAAC,0DAA0D,EAAE,GAAG,EAAE;QAChE,MAAM,aAAa,GAAG,IAAI,CAAC,sBAAsB,CAAC,EAAE,cAAc,EAAkC,kBAAmB,EAAE,CAAC,CAAC;QAE3H,MAAM,KAAK,GAAG,UAAU,CAAC,SAAS,CAAC,SAAS,CAAC,EAAC,cAAc,EAAE,aAAa,CAAC,cAAc,EAAC,CAAC,CAAC;QAE7F,MAAM,CAAC,KAAK,CAAC,CAAC,WAAW,EAAE,CAAC;QAC5B,MAAM,CAAC,KAAK,CAAC,MAAM,CAAC,CAAC,WAAW,EAAE,CAAC;QACnC,MAAM,CAAC,KAAK,CAAC,WAAW,EAAE,CAAC,CAAC,IAAI,CAAC,iBAAiB,CAAC,CAAC;IACxD,CAAC,CAAC,CAAC;AACP,CAAC,CAAC,CAAC","sourcesContent":["import 'jest';\n\nimport * as core from '@msdyn365-commerce/core';\nimport { MapStoreSelectorStateManager } from '../map-store-selector-state-manager';\nimport { IStoreSelectorStateManager } from '../i-store-selection-state-manager';\nimport dataAction, { createStoreSelectorStateInput } from '../store-selector-state-manager-data-action';\n\ndescribe('Tests for Store Selector State Manager Data Action', () => {\n    const mockRequestContext: core.IRequestContext = {\n        // @ts-ignore partial mock\n        channel: {\n            BingMapsApiKey: '1001',\n            BingMapsEnabled: true\n        }\n    };\n\n    it('Properly creates input when calling createMapStoreSelectorStateInput', () => {\n        const state: IStoreSelectorStateManager = new MapStoreSelectorStateManager();\n\n        const input = createStoreSelectorStateInput(state);\n\n        expect(input.result).toBe(state);\n        expect(input.getCacheKey()).toBe('Generic-mapSSSM');\n    });\n\n    it('Properly creates input when calling data action directly', () => {\n        const actionContext = core.buildMockActionContext({ requestContext: <core.IRequestContext>(<unknown>mockRequestContext) });\n\n        const input = dataAction.prototype.inputFunc({requestContext: actionContext.requestContext});\n\n        expect(input).toBeDefined();\n        expect(input.result).toBeDefined();\n        expect(input.getCacheKey()).toBe('Generic-mapSSSM');\n    });\n});\n"]}