{"version":3,"file":"map-store-selector-state-manager.js","sourceRoot":"./src/","sources":["store-selector-state-manager/map-store-selector-state-manager.ts"],"names":[],"mappings":"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","sourcesContent":["import { action } from 'mobx';\n\nimport { IActionContext } from '@msdyn365-commerce/core';\nimport { BaseStoreSelectorStateManager } from './base-store-selector-state-manager';\nimport { ILoadMapApiInput, IStoreSelectorLocation } from './i-store-selection-state-manager';\nimport { MapLocationsResult, IMapWindow } from './models/map-data';\n\ndeclare const window: IMapWindow;\n/**\n * Instance of IStoreSelectorStateManager manager that uses Map service\n * for geo location\n */\nexport class MapStoreSelectorStateManager extends BaseStoreSelectorStateManager {\n    private readonly SERVICE_ENDPOINT: string = 'https://dev.virtualearth.net/REST/v1/';\n    private readonly MAP_API_ENDPOINT: string = 'https://www.bing.com/api/maps/mapcontrol?callback=mapAPIReady';\n\n    @action\n    public async geoLocate(searchTerm: string, actionContext: IActionContext): Promise<IStoreSelectorLocation | undefined> {\n        if (!searchTerm ||\n            !actionContext.requestContext.channel ||\n            !actionContext.requestContext.channel.BingMapsApiKey ||\n            !actionContext.requestContext.channel.BingMapsEnabled) {\n            return undefined;\n        }\n\n        const jsonp = `mapSearchCallback_${crypto.getRandomValues(new Uint32Array(1))[0]}`;\n        const query = encodeURI(searchTerm);\n        const key = encodeURI(actionContext.requestContext.channel.BingMapsApiKey);\n\n        const geolocationApiUrl = actionContext.requestContext.app && actionContext.requestContext.app.config && actionContext.requestContext.app.config.geolocationApiUrl;\n        const requestUrl = `${geolocationApiUrl ? geolocationApiUrl : this.SERVICE_ENDPOINT}/Locations?query=${query}&key=${key}&jsonp=${jsonp}`;\n\n        return new Promise<IStoreSelectorLocation | undefined>((resolve) => {\n            const script = document.createElement('script');\n            script.setAttribute('type', 'text/javascript');\n            script.setAttribute('src', requestUrl);\n\n            window[jsonp] = (data: MapLocationsResult) => {\n                delete window[jsonp];\n                document.body.removeChild(script);\n\n                if (data && data.resourceSets && data.resourceSets.length > 0 && data.resourceSets[0].resources.length > 0) {\n                    resolve({\n                        latitude: data.resourceSets[0].resources[0].point.coordinates[0],\n                        longitude: data.resourceSets[0].resources[0].point.coordinates[1]\n                    });\n                }\n\n                resolve(undefined);\n            };\n\n            document.body.appendChild(script);\n        });\n\n    }\n\n    @action\n    public async loadMapApi(input: ILoadMapApiInput): Promise<void> {\n        const isScriptAlreadyLoaded = document?.getElementById('msdyn_map-api-script') ? true : false;\n\n        if (isScriptAlreadyLoaded) {\n            // Prevents from loading multiple script into the body\n            return Promise.resolve();\n        }\n\n        const url = `${this.MAP_API_ENDPOINT}${input.key ? `&key=${input.key}` : ''}${input.lang ? `&setLang=${input.lang}` : ''}${input.market ? `&setMkt=${input.market}` : ''}`;\n\n        return new Promise((resolve, reject) => {\n            const script = document?.createElement('script');\n            script.type = 'text/javascript';\n            script.async = true;\n            script.defer = true;\n            script.src = url;\n            script.id = 'msdyn_map-api-script';\n            if (window) {\n                window.mapAPIReady = () => {\n                    this.isMapApiLoaded = true;\n                    resolve();\n                };\n            }\n            script.onerror = (error: string | Event) => {\n                reject(error);\n            };\n            document?.body?.appendChild(script);\n        });\n    }\n\n}"]}