{"version":3,"file":"video-player.js","sourceRoot":"./src/","sources":["modules/video-player/video-player.tsx"],"names":[],"mappings":"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","sourcesContent":["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { getTelemetryObject, ITelemetryContent } from '@msdyn365-commerce-modules/utilities';\nimport { IVideoMetadata, Player } from '@msdyn365-commerce/components';\nimport { IPlayerOptions } from '@msdyn365-commerce/components/dist/types/videoplayer/components/data/player-options';\nimport { IPlayerResources } from '@msdyn365-commerce/components/dist/types/videoplayer/components/data/player-resources';\nimport { IPlayerData } from '@msdyn365-commerce/components/dist/types/videoplayer/players/player/Player.props';\nimport * as MsDyn365 from '@msdyn365-commerce/core';\nimport * as React from 'react';\nimport { IVideoPlayerConfig, IVideoPlayerProps } from './video-player.props.autogenerated';\n\nexport interface IVideoPlayerViewProps extends IVideoPlayerProps<{}> {\n    player: React.ReactNode;\n}\n\n/**\n *\n * VideoPlayer component\n * @extends {React.PureComponent<IVideoPlayerProps<IVideoPlayerData>>}\n */\nclass VideoPlayer extends React.PureComponent<IVideoPlayerProps<IVideoPlayerConfig>> {\n    private telemetryContent: ITelemetryContent;\n    constructor(props: IVideoPlayerProps<IVideoPlayerConfig>) {\n        super(props);\n        this.telemetryContent = getTelemetryObject(this.props.context.request.telemetryPageName!,\n                                                   this.props.friendlyName,\n                                                   this.props.telemetry);\n    }\n\n    public render(): JSX.Element {\n        const options: IPlayerOptions = this.props.config;\n        const video: MsDyn365.IVideoData = this.props.config.video;\n        const playerResources: IPlayerResources = {\n            playAriaLabel: this.props.resources.playLabel,\n            pauseAriaLabel: this.props.resources.pauseLabel,\n            playingAriaLabel: this.props.resources.playingLabel,\n            pausedAriaLabel: this.props.resources.pausedLabel,\n            muteAriaLabel:this.props.resources.muteLabel,\n            unMuteAriaLabel:this.props.resources.unMuteLabel,\n            fullScreenAriaLabel:this.props.resources.fullScreenLabel,\n            exitFullScreenAriaLabel:this.props.resources.exitFullScreenLabel,\n            seekBarLabel:this.props.resources.seekBarLabel,\n            videoTimeDurationLabel:this.props.resources.videoTimeDurationLabel,\n            closedCaptionLabel:this.props.resources.closedCaptionLabel\n        };\n        const videoMetaData: IVideoMetadata = {};\n\n        if (video) {\n            videoMetaData.videoId = video.id;\n            videoMetaData.title = video.title;\n            videoMetaData.duration = video.playTime;\n\n            if (video.thumbnail) {\n                videoMetaData.posterframeUrl = video.thumbnail.src;\n            }\n\n            if (video._links\n                && video._links.binaryReferences) {\n                    videoMetaData.videoBinaryReferences = video._links.binaryReferences;\n            }\n        }\n        const videoPlayerData: IPlayerData = { options: options, metaData: videoMetaData };\n        const viewProps = {\n            // Context for telemetry and raw data for C1 to do customization\n            // Including computed data, state data and methods\n            ...this.props,\n            // tslint:disable-next-line: jsx-wrap-multiline\n            player: <MsDyn365.Video className='' editProps={{ key: this.props.config.video, requestContext: this.props.context.request }}>\n                        <Player playerData={videoPlayerData}  playerResources={playerResources} telemetryContent={this.telemetryContent} isEditor={this.props.context.request.params.isEditor} />\n                    </MsDyn365.Video>\n        };\n        return this.props.renderView(viewProps) as React.ReactElement;\n    }\n\n}\n\nexport default VideoPlayer;\n"]}