/*---------------------------------------------------------------------------------------------
 *  Copyright (c) Microsoft Corporation. All rights reserved.
 *  Licensed under the MIT License. See License.txt in the project root for license information.
 *--------------------------------------------------------------------------------------------*/
import { buildMockModuleProps } from '@msdyn365-commerce/core';
import { mount } from 'enzyme';
import * as React from 'react';

import NavigationMenu, { INavigationMenuViewProps } from '../navigation-menu';

import { INavigationMenuData } from '../navigation-menu.data';
import { INavigationMenuConfig, INavigationMenuProps, navigationMenuSource } from '../navigation-menu.props.autogenerated';

const mockData: INavigationMenuData = {
    // @ts-ignore partial mock
    categories: {
        status: 'SUCCESS',
        result: [
            {
               Name: 'Link1',
               RecordId: 1,
               NameTranslations: [
                  {
                     Language: 'en-us',
                     Text: 'Fashion Accessories'
                  }
               ],
               Children: [
                  {
                     RecordId: 1,
                     Children: [],
                     NameTranslations: [
                        {
                           Language: 'en-us',
                           Text: 'E2E'
                        }
                     ]
                  },
                  {
                     RecordId: 2,
                     Children: [],
                     NameTranslations: [
                        {
                           Language: 'en-us',
                           Text: 'Fashion Sunglasses'
                        }
                     ]
                  }
               ]
            },
            {
                RecordId: 2,
               NameTranslations: [
                  {
                     Language: 'en-us',
                     Text: 'Mens Wear'
                  }
               ],
               Children: [
                  {
                     RecordId: 1,
                     Children: [],
                     NameTranslations: [
                        {
                           Language: 'en-us',
                           Text: 'Casual Shirts'
                        }
                     ]
                  },
                  {
                     RecordId: 2,
                     Children: [],
                     NameTranslations: [
                        {
                           Language: 'en-us',
                           Text: 'Coats & Jackets'
                        }
                     ]
                  },
                  {
                     RecordId: 3,
                     Children: [],
                     NameTranslations: [
                        {
                           Language: 'en-us',
                           Text: 'Dress Shirts'
                        }
                     ]
                  },
                  {
                     RecordId: 4,
                     Children: [],
                     NameTranslations: [
                        {
                           Language: 'en-us',
                           Text: 'Hats'
                        }
                     ]
                  },
                  {
                     RecordId: 5,
                     Children: [],
                     NameTranslations: [
                        {
                           Language: 'en-us',
                           Text: 'Mens Jeans'
                        }
                     ]
                  }
               ]
            },
            {
                RecordId: 3,
               NameTranslations: [
                  {
                     Language: 'en-us',
                     Text: 'Womenswear'
                  }
               ],
               Children: [
                  {
                     RecordId: 1,
                     Children: [],
                     NameTranslations: [
                        {
                           Language: 'en-us',
                           Text: 'Coats'
                        }
                     ]
                  },
                  {
                     RecordId: 2,
                     Children: [],
                     NameTranslations: [
                        {
                           Language: 'en-us',
                           Text: 'Dresses'
                        }
                     ]
                  },
                  {
                     RecordId: 3,
                     Children: [],
                     NameTranslations: [
                        {
                           Language: 'en-us',
                           Text: 'Skirts'
                        }
                     ]
                  }
               ]
            }
        ]
    }
};

const mockMenu = [
    {
        linkText: 'Contact',
        linkUrl: {
            destinationUrl: '/fedev',
            type: 'externalLink'
        },
        ariaLabel: 'Contact',
        subMenus:[
            {
                linkText: 'sub menu1',
                linkUrl: {
                    destinationUrl: '/fedev',
                    type: 'externalLink'
                },
                ariaLabel: 'Contact',
            },
            {
                linkText: 'sub menu1',
                linkUrl: {
                    destinationUrl: '/fedev',
                    type: 'externalLink'
                },
                ariaLabel: 'Contact',
            }
        ]
    }
];

const mockResources = {
    allCategoryMenuText: '',
    menuAriaLabel:'Menu',
    backButtonAriaLabel:'Back'
};

const mockConfigAll: INavigationMenuConfig = {
    navigationMenuSource: 'all' as navigationMenuSource,
    cmsNavItems: mockMenu
};

describe('NavigationMenu', () => {
    it('navigation integration testing.', () => {
        const moduleProps = {
            ...(buildMockModuleProps(mockData, {}, mockConfigAll) as INavigationMenuProps<INavigationMenuData>),
            resources: mockResources,
            // @ts-ignore
            renderView: jest.fn(props => { return <div props={props} />;})
        };

        const wrapper = mount(<NavigationMenu {...moduleProps}  />);
        expect(moduleProps.renderView).toBeCalled();
        const viewProps: INavigationMenuViewProps = wrapper.childAt(0).props().props;
        expect(viewProps.menuItemData).toBeDefined();
        expect(viewProps.menuItemData).toMatchSnapshot();
    });

});
