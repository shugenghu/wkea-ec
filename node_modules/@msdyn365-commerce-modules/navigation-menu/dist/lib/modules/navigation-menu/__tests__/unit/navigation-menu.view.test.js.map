{"version":3,"file":"navigation-menu.view.test.js","sourceRoot":"./src/","sources":["modules/navigation-menu/__tests__/unit/navigation-menu.view.test.tsx"],"names":[],"mappings":"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","sourcesContent":["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nimport * as React from 'react';\n\nimport { buildMockModuleProps } from '@msdyn365-commerce/core';\nimport { mount } from 'enzyme';\nimport { IMenuItemData } from '../../navigation-menu.data';\nimport { INavigationMenuConfig} from '../../navigation-menu.props.autogenerated';\n\nimport {INavigationMenuViewProps} from '../../navigation-menu';\nimport NavigationMenuView from '../../navigation-menu.view';\n\nconst mockConfig: INavigationMenuConfig = {\n   className: 'Mock-class2',\n};\n\nconst mockFn  = jest.fn();\n\nconst moduleProps = buildMockModuleProps({},{}, mockConfig) as INavigationMenuViewProps;\nconst menuData:IMenuItemData = {\n      id:1,\n      linkText:'main-menu-mock',\n      linkURL:'https://xyz.com',\n      imageSource:'abc/xyz.png',\n      subMenu:[{\n         id:1,\n         linkText:'sub-menu-mock',\n         linkURL:'https://xyz.com',\n         imageSource:'abc/xyz.png',\n         subMenu:[{\n            id:1,\n            linkText:'sub-menu-mock',\n            linkURL:'https://xyz.com',\n            imageSource:'abc/xyz.png',\n         }]\n      }],\n};\n\nconst mockProps: INavigationMenuViewProps = {\n   ...moduleProps,\n   className: 'Mock-class',\n   id:'mock-test',\n   menuItemData:[menuData,menuData],\n   isMobileView:true,\n   showCategoryImage:true,\n   Navigation: {\n         moduleProps:moduleProps,\n         className: 'ms-nav',\n         tag:'nav',\n         role:'navigation',\n         'aria-label': 'Menu'\n         },\n   MenuList: {\n         className: 'ms-nav__list',\n         tag:'ul'\n   },\n   ListItem: {\n         className: 'ms-nav__list__item',\n         tag:'li'\n   },\n   DivContainer:\n            {\n                tag: 'div',\n                className:'ms-nav__feature',\n                role:'menu'\n            },\n   ImageDivContainer:\n            {\n                tag:'div',\n                className:'category-image',\n                role:'menu'\n            },\n   Link: {\n         tag: 'a',\n         className: 'ms-nav__list__item__link',\n         onMouseEnter:mockFn,\n         onMouseLeave:mockFn\n   },\n   Button: {\n         className: 'ms-nav__list__item__button',\n         tag:'button',\n         onClick:mockFn\n   },\n   ImageContainer: {\n         className: 'ms-nav__list__item__image'\n   },\n   Span: {\n         className: 'ms-nav__list__item__span',\n         tag:'span'\n   },\n   MobileDescriptionContainer: {\n         className: 'ms-nav__list__mobile__container'\n   },\n   MobileBackButton: {\n         className: 'ms-nav__list__mobile__container__button',\n         tag:'button',\n         onClick:mockFn\n   },\n   MobileDescriptionLabel: {\n         className: 'ms-nav__list__mobile__container__span',\n         tag:'span'\n   }\n   };\ndescribe('Navigation Menu Unit Test', () => {\n   it('View renders correctly', () => {\n      const wrapper= mount(<NavigationMenuView  {...mockProps}/>);\n\n      const button = wrapper.find('button');\n      expect(button).toBeDefined();\n      button.at(0).simulate('click');\n      button.at(1).simulate('click');\n      wrapper.setProps({isMobileView:false});\n      expect(button).toBeDefined();\n      button.at(0).simulate('click');\n      button.at(1).simulate('click');\n      wrapper.unmount();\n   });\n\n   it('View renders correctly with menu data', () => {\n      const menuDatawithlink:IMenuItemData = {\n         id:2,\n         linkText:'main-menu-mock',\n         linkURL:'https://xyz.com',\n         subMenu:[{\n            id:1,\n            linkText:'sub-menu-mock',\n            linkURL:'https://xyz.com'\n         }],\n      };\n      const menuDatawithoutlink:IMenuItemData = {\n         id:2,\n         linkText:'main-menu-mock',\n         subMenu:[{\n            id:1,\n            linkText:'sub-menu-mock',\n         }],\n      };\n      const menuDatawithsubMenu:IMenuItemData = {\n         id:2,\n         linkText:'main-menu-mock',\n         linkURL:'https://xyz.com',\n      };\n      const wrapper= mount(<NavigationMenuView  {...mockProps} isMobileView={false}/>);\n\n      const button = wrapper.find('button');\n      wrapper.setState(\n            {showImage:true,activeMenu:1}\n         );\n      button.at(0).simulate('click');\n      wrapper.setProps({isMobileView:true});\n\n      button.at(0).simulate('click');\n      button.at(1).simulate('click');\n      wrapper.setState({activeMenu:10});\n\n      wrapper.setProps({menuItemData:[menuDatawithlink,menuDatawithlink]});\n      wrapper.setProps({menuItemData:[menuDatawithoutlink,menuDatawithoutlink]});\n      button.at(0).simulate('click');\n      button.at(1).simulate('click');\n\n      wrapper.setProps({menuItemData:[]});\n      wrapper.find('ForwardRef.ms-nav__list__mobile__container__button').simulate('click');\n\n      expect(wrapper.state('activeMenu')).toBe(2);\n      wrapper.setProps({menuItemData:[menuDatawithsubMenu,menuDatawithsubMenu]});\n      wrapper.setProps({isMobileView:false});\n    });\n\n   it('View renders correctly with menu data and category image', () => {\n      const menuDatawithimage:IMenuItemData = {\n         id:2,\n         linkText:'main-menu-mock',\n         linkURL:'https://xyz.com',\n         imageSource:'abc/xyz.png',\n         subMenu:[{\n            id:1,\n            linkText:'sub-menu-mock',\n            linkURL:'https://xyz.com',\n            imageSource:'abc/xyz.png',\n         }],\n      };\n      const menuDatawithoutlink:IMenuItemData = {\n         id:2,\n         linkText:'main-menu-mock',\n         imageSource:'abc/xyz.png',\n         subMenu:[{\n            id:1,\n            linkText:'sub-menu-mock',\n            imageSource:'abc/xyz.png',\n         }],\n      };\n      const menuDatawithsubMenu:IMenuItemData = {\n         id:2,\n         linkText:'main-menu-mock',\n         linkURL:'https://xyz.com',\n         imageSource:'abc/xyz.png',\n      };\n      const wrapper= mount(<NavigationMenuView  {...mockProps} isMobileView={false}/>);\n\n      const button = wrapper.find('button');\n      wrapper.setState(\n            {showImage:true,activeMenu:1}\n         );\n      button.at(0).simulate('click');\n      wrapper.setProps({isMobileView:true});\n\n      button.at(0).simulate('click');\n      button.at(1).simulate('click');\n      wrapper.setState({activeMenu:10});\n\n      wrapper.setProps({menuItemData:[menuDatawithimage,menuDatawithimage]});\n      wrapper.setProps({menuItemData:[menuDatawithoutlink,menuDatawithoutlink]});\n      button.at(0).simulate('click');\n      button.at(1).simulate('click');\n\n      wrapper.setProps({menuItemData:[]});\n      wrapper.find('ForwardRef.ms-nav__list__mobile__container__button').simulate('click');\n\n      expect(wrapper.state('activeMenu')).toBe(2);\n      wrapper.setProps({menuItemData:[menuDatawithsubMenu,menuDatawithsubMenu]});\n      wrapper.setProps({isMobileView:false});\n    });\n\n });"]}