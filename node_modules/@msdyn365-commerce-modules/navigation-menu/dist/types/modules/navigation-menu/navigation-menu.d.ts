import { IModuleProps, INodeProps } from '@msdyn365-commerce-modules/utilities';
import { IGridSettings, IImageSettings } from '@msdyn365-commerce/core';
import { TextValueTranslation } from '@msdyn365-commerce/retail-proxy';
import * as React from 'react';
import { IMenuItemData, INavigationMenuData } from './navigation-menu.data';
import { INavigationMenuProps } from './navigation-menu.props.autogenerated';
export interface INavigationMenuViewProps extends INavigationMenuProps<INavigationMenuData> {
    className: string;
    menuItemData: IMenuItemData[];
    Navigation: IModuleProps;
    MenuList: INodeProps;
    ListItem: INodeProps;
    Link: INodeProps;
    Button: INodeProps;
    Span: INodeProps;
    ImageContainer: INodeProps;
    MobileDescriptionContainer: INodeProps;
    MobileBackButton: INodeProps;
    MobileDescriptionLabel: INodeProps;
    imageSettings: IImageSettings;
    gridSettings: IGridSettings;
    isMobileView: boolean;
    DivContainer?: INodeProps;
    ImageDivContainer?: INodeProps;
    showCategoryImage?: boolean;
}
export declare type GridSize = 'xs' | 'sm' | 'md' | 'lg' | 'xl';
export interface INavigationMenuState {
    isMobile: boolean;
}
declare class NavigationMenu extends React.PureComponent<INavigationMenuProps<INavigationMenuData>, INavigationMenuState> {
    private static CMSItemIdInit;
    private static RSItemIdInit;
    private resizeThrottledEventHandler?;
    private menuItemList;
    private isRetail;
    private isCMS;
    private viewport;
    static getFriendlyName(locale: string, nameTranslations?: TextValueTranslation[]): string | undefined;
    constructor(props: INavigationMenuProps<INavigationMenuData>);
    get isMobile(): boolean;
    componentDidMount(): void;
    componentWillUnmount(): void;
    render(): JSX.Element | null;
    private _mapData;
    private _constructMenuItemData;
    private _getNestedChildren;
    private _getCMSNestedChildren;
    private _setNavigationSource;
    private _updateViewport;
    private _getViewport;
}
export default NavigationMenu;
