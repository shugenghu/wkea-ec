{"version":3,"file":"site-picker.view.js","sourceRoot":"./src/","sources":["modules/site-picker/site-picker.view.tsx"],"names":[],"mappings":"AAIA,OAAO,EAAE,MAAM,EAAE,IAAI,EAAE,MAAM,sCAAsC,CAAC;AACpE,OAAO,KAAK,KAAK,MAAM,OAAO,CAAC;AAG/B,eAAe,CAAC,KAA2B,EAAE,EAAE;IACvC,MAAM,EAAC,UAAU,EAAC,cAAc,EAAC,kBAAkB,EAAC,GAAG,KAAK,CAAC;IAC7D,OAAM,CACF,oBAAC,MAAM,oBAAK,UAAU;QAClB,oBAAC,IAAI,oBAAK,cAAc,IAAE,OAAO,EAAE,KAAK,CAAC,iBAAiB;YACrD,KAAK,CAAC,MAAM,CAAC,OAAO,EAAE,IAAI;YAC3B,oBAAC,IAAI,oBAAK,kBAAkB,EAAG,CAC5B;QACN,KAAK,CAAC,gBAAgB,CAAA,CAAC,CAAA,sBAAsB,CAAC,KAAK,CAAC,CAAA,CAAC,CAAA,IAAI,CACrD,CAChB,CAAC;AACF,CAAC,CAAC;AACN,MAAM,sBAAsB,GAAG,CAAC,KAA2B,EAAmB,EAAE;IACxE,MAAK,EAAC,kBAAkB,EACpB,sBAAsB,EACtB,2BAA2B,GAC1B,GAAC,KAAK,CAAC;IACZ,MAAM,OAAO,GAAG,2BAA4B,CAAC,GAAG,CAAC,CAAC,IAAI,EAAE,KAAK,EAAE,EAAE;QACjE,OAAO,CACH,oBAAC,IAAI,oBAAK,sBAAsB,IAAE,GAAG,EAAE,KAAK,KACvC,IAAI,CACF,CACL,CAAC;IACH,CAAC,CACJ,CAAC;IACF,OAAM,CACF,oBAAC,IAAI,oBAAK,kBAAkB,IAAE,YAAY,EAAE,KAAK,CAAC,qBAAqB,KAClE,OAAO,CACL,CACV,CAAC;AACN,CAAC,CAAC","sourcesContent":["/*!\n * Copyright (c) Microsoft Corporation.\n * All rights reserved. See LICENSE in the project root for license information.\n */\nimport { Module, Node } from '@msdyn365-commerce-modules/utilities';\nimport * as React from 'react';\nimport { ISitePickerViewProps } from './site-picker';\n\nexport default (props: ISitePickerViewProps) => {\n        const {SitePicker,SitePickerMenu,SitePickerMenuSpan} = props;\n        return(\n            <Module {...SitePicker}>\n                <Node {...SitePickerMenu} onClick={props.renderSiteOptions}>\n                    {props.config.heading?.text}\n                    <Node {...SitePickerMenuSpan}/>\n                </Node>\n                {props.siteOptionsState?_renderSiteOptionsList(props):null}\n            </Module>\n    );\n    };\nconst _renderSiteOptionsList = (props: ISitePickerViewProps): React.ReactNode => {\n        const{SitePickerMenuList,\n            SitePickerMenuListItem,\n            SitePickerMenuListItemArray,\n            }=props;\n        const options = SitePickerMenuListItemArray!.map((item, index) => {\n        return (\n            <Node {...SitePickerMenuListItem} key={index}>\n                {item}\n            </Node>\n             );\n            }\n        );\n        return(\n            <Node {...SitePickerMenuList} onMouseLeave={props.resetSiteOptionsState}>\n                {options}\n            </Node>\n        );\n    };\n"]}