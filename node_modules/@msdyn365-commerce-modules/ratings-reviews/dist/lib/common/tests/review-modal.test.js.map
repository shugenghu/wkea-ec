{"version":3,"file":"review-modal.test.js","sourceRoot":"./src/","sources":["common/tests/review-modal.test.tsx"],"names":[],"mappings":"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","sourcesContent":["\nconst mockSubmit = jest.fn().mockImplementation((input) => {\n    return  input.productId !== '111' ? Promise.resolve('myReviewId') : Promise.reject('myReviewId');\n});\n\njest.mock('../../actions/submit-user-review', () => ({\n    __esModule: true, // this property makes it work\n    default: mockSubmit\n}));\nimport { buildMockCoreContext, ICoreContext } from '@msdyn365-commerce/core';\nimport { SimpleProduct } from '@msdyn365-commerce/retail-proxy';\nimport { mount, render} from 'enzyme';\nimport * as React from 'react';\nimport {IReviewModalProps, ReviewModal } from '../review-modal';\n\ndescribe('Review modal', () => {\n    let mockCoreContext: ICoreContext;\n    const modalToggleRef = React.createRef<HTMLButtonElement>();\n    const flushPromises = () => new Promise(setImmediate);\n\n    let onToggle: () => void;\n    let onRatingChange: () => void;\n    let onTitleChange: () => void;\n    let onTextChange: () => void;\n    let onReviewComplete: () => void;\n\n    const resources = {\n        privacyPolicyTextFormat: 'By clicking submit, you accept our {0}.',\n        privacyPolicyTitle: 'Privacy Policy',\n        reviewTextLabel: 'Review',\n        reviewTitleLabel: 'Title',\n        selectRatingAriaLabel: 'Set ratings as {0} out of {1} stars',\n        selectRatingLabel: 'Choose a rating',\n        writeReviewModalTitle: 'Write a review',\n        editReviewModalTitle: 'Edit your review',\n        discardReviewButtonText: 'Discard',\n        errorMessageText: 'Something went wrong, please try again',\n        submitReviewButtonText: 'Submit'\n    };\n\n    let props: IReviewModalProps;\n\n    beforeEach(() => {\n        mockCoreContext = buildMockCoreContext({});\n        mockCoreContext.app = {config: {reviewTextMaxLength: 500, reviewTitleMaxLength: 50}};\n        mockCoreContext.actionContext.requestContext.apiSettings.rnr = {id: 'rnrId', url: 'rnrUrl', proxyUrl: ''};\n        onToggle = jest.fn();\n        onRatingChange = jest.fn();\n        onTitleChange = jest.fn();\n        onTextChange = jest.fn();\n        onReviewComplete = jest.fn();\n\n        props =  {\n            userReview: undefined,\n            product: {RecordId: 333} as SimpleProduct,\n            renderContextId: 'mycontext',\n            resources: resources,\n            context:  mockCoreContext,\n            parentId: 'foo',\n            parentType: 'fooType',\n            isOpen: true,\n            rating: 4,\n            reviewTitle: 'foo',\n            reviewText: 'troo',\n            returnRef: modalToggleRef,\n            onModalToggle: onToggle,\n            onTitleChange: onTitleChange,\n            onTextChange: onTextChange,\n            onRatingChange: onRatingChange,\n            onReviewComplete: onReviewComplete,\n            hasError: false\n        };\n    });\n\n    it('The review modal snapshots return as expected', () => {\n        const modal = ReviewModal(props);\n        expect(modal.modal).toMatchSnapshot();\n        expect(render(modal.modalHeader)).toMatchSnapshot();\n        expect(modal.modalFooter).toMatchSnapshot();\n        expect(modal.modalBody).toMatchSnapshot();\n        expect(render(modal.cancelButton)).toMatchSnapshot();\n        expect(render(modal.submitButton)).toMatchSnapshot();\n        expect(render(modal.rating)).toMatchSnapshot();\n        expect(render(modal.ratingLabel)).toMatchSnapshot();\n        expect(render(modal.titleInput)).toMatchSnapshot();\n        expect(render(modal.titleLabel)).toMatchSnapshot();\n        expect(render(modal.textInput)).toMatchSnapshot();\n        expect(render(modal.textLabel)).toMatchSnapshot();\n        expect(render(modal.privacyPolicyUrl)).toMatchSnapshot();\n        expect(modal.form).toMatchSnapshot();\n        expect(modal.inputRow).toMatchSnapshot();\n    });\n\n    it('Changing the title input calls the onTitleChange callback', () => {\n        const modal = ReviewModal(props);\n        const title = mount(modal.titleInput);\n        title.simulate('change');\n        expect(onTitleChange).toHaveBeenCalled();\n    });\n\n    it('Changing the text input calls the onTextChange callback', () => {\n        const modal = ReviewModal(props);\n        const title = mount(modal.textInput);\n        title.simulate('change');\n        expect(onTextChange).toHaveBeenCalled();\n    });\n\n    it('clicking the submit button submits the review', async () => {\n        const modal = ReviewModal(props);\n        const submit = mount(modal.submitButton);\n        submit.simulate('click');\n        await flushPromises();\n        expect(onReviewComplete).toHaveBeenCalledWith(true);\n    });\n\n    it('clicking the submit doesn ot throw when onReviewComplete is not provided', async () => {\n        props.onReviewComplete = undefined;\n        const modal = ReviewModal(props);\n        const submit = mount(modal.submitButton);\n        submit.simulate('click');\n        await flushPromises();\n        expect(onReviewComplete).not.toHaveBeenCalled();\n    });\n\n    it('clicking the submit button calls onReviewComplete when it fails', async () => {\n        props.product!.RecordId = 111;\n        const modal = ReviewModal(props);\n        const submit = mount(modal.submitButton);\n        submit.simulate('click');\n        await flushPromises();\n        expect(onReviewComplete).toHaveBeenCalledWith(false);\n    });\n\n    it('clicking the submit doesn ot throw when onReviewComplete is not provided', async () => {\n        props.product!.RecordId = 111;\n        props.onReviewComplete = undefined;\n        const modal = ReviewModal(props);\n        const submit = mount(modal.submitButton);\n        submit.simulate('click');\n        await flushPromises();\n        expect(onReviewComplete).not.toHaveBeenCalled();\n    });\n});"]}