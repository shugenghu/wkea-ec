import { getRnrAuthEndpointId, getRnrPartnerId, getSelectedProductIdFromActionInput } from '@msdyn365-commerce-modules/retail-actions';
import { createObservableDataAction, sendRequest } from '@msdyn365-commerce/core';
import { GetUserReviewInput } from './inputs/get-user-review-input';
const createInput = (input) => {
    const productId = getSelectedProductIdFromActionInput(input);
    const userInfo = input.requestContext.user;
    if (productId && userInfo && userInfo.isAuthenticated) {
        return new GetUserReviewInput(productId, getRnrPartnerId(input), userInfo.token, getRnrAuthEndpointId(input));
    }
    throw new Error('[GetUserReview] Not all necessary parameters found while creating Input for GetUserReviewAPI');
};
async function getUserReview(input, ctx) {
    if (!inputIsValid(input)) {
        const errorMessage = `[GettUserReview] Failed to get user's review due to bad input ${input}`;
        ctx.trace(errorMessage);
        throw new Error(errorMessage);
    }
    const requestUrl = `${input.serviceEndpoint}/v2.0/reviews/product/${input.productId}/user?tenantId=${input.tenantId}`;
    return sendRequest(requestUrl, 'get', null, { headers: { Authorization: `id_token ${input.authorization}` } }).then((response) => {
        return response.data;
    }).catch((error) => {
        ctx.trace(`[GettUserReview] Failed to get user's review for product`);
        ctx.telemetry.exception(error);
        ctx.telemetry.debug(`[GettUserReview] Failed to get user's review for product`);
        ctx.trace(error);
        throw (error);
    });
}
function inputIsValid(input) {
    return input.productId.length > 0 && input.authorization.length > 0 && input.tenantId.length > 0;
}
export default createObservableDataAction({
    id: '@msdyn365-commerce-modules/ratings-reviews/get-user-review',
    action: getUserReview,
    input: createInput
});
//# sourceMappingURL=get-user-review.js.map