{"version":3,"file":"get-user-review.js","sourceRoot":"./src/","sources":["actions/get-user-review.ts"],"names":[],"mappings":"AAKA,OAAO,EAAE,oBAAoB,EAAE,eAAe,EAAE,mCAAmC,EAAE,MAAM,2CAA2C,CAAC;AAEvI,OAAO,EAAE,0BAA0B,EAA+D,WAAW,EAAE,MAAM,yBAAyB,CAAC;AAC/I,OAAO,EAAE,kBAAkB,EAAE,MAAM,gCAAgC,CAAC;AAKpE,MAAM,WAAW,GAAG,CAAC,KAA2B,EAAgB,EAAE;IAC9D,MAAM,SAAS,GAAG,mCAAmC,CAAC,KAAK,CAAC,CAAC;IAC7D,MAAM,QAAQ,GAAG,KAAK,CAAC,cAAc,CAAC,IAAI,CAAC;IAC3C,IAAI,SAAS,IAAI,QAAQ,IAAI,QAAQ,CAAC,eAAe,EAAE;QAEnD,OAAO,IAAI,kBAAkB,CAAC,SAAS,EAAE,eAAe,CAAC,KAAK,CAAC,EAAE,QAAQ,CAAC,KAAK,EAAE,oBAAoB,CAAC,KAAK,CAAC,CAAC,CAAC;KACjH;IACD,MAAM,IAAI,KAAK,CAAC,8FAA8F,CAAC,CAAC;AACpH,CAAC,CAAC;AAKF,KAAK,UAAU,aAAa,CAAC,KAAwB,EAAE,GAAmB;IACtE,IAAI,CAAC,YAAY,CAAC,KAAK,CAAC,EAAE;QACtB,MAAM,YAAY,GAAG,iEAAiE,KAAK,EAAE,CAAC;QAC9F,GAAG,CAAC,KAAK,CAAC,YAAY,CAAC,CAAC;QACxB,MAAM,IAAI,KAAK,CAAC,YAAY,CAAC,CAAC;KACjC;IAED,MAAM,UAAU,GAAG,GAAG,KAAK,CAAC,eAAe,yBAAyB,KAAK,CAAC,SAAS,kBAAkB,KAAK,CAAC,QAAQ,EAAE,CAAC;IAEtH,OAAO,WAAW,CAAS,UAAU,EAAE,KAAK,EAAE,IAAI,EAAE,EAAC,OAAO,EAAE,EAAC,aAAa,EAAE,YAAY,KAAK,CAAC,aAAa,EAAE,EAAC,EAAC,CAAC,CAAC,IAAI,CAAC,CAAC,QAAQ,EAAE,EAAE;QACjI,OAAO,QAAQ,CAAC,IAAI,CAAC;IACzB,CAAC,CAAC,CAAC,KAAK,CAAC,CAAC,KAAK,EAAE,EAAE;QACf,GAAG,CAAC,KAAK,CAAC,0DAA0D,CAAC,CAAC;QACtE,GAAG,CAAC,SAAS,CAAC,SAAS,CAAC,KAAK,CAAC,CAAC;QAC/B,GAAG,CAAC,SAAS,CAAC,KAAK,CAAC,0DAA0D,CAAC,CAAC;QAChF,GAAG,CAAC,KAAK,CAAC,KAAK,CAAC,CAAC;QACjB,MAAM,CAAC,KAAK,CAAC,CAAC;IAClB,CAAC,CAAC,CAAC;AACP,CAAC;AAED,SAAS,YAAY,CAAC,KAAwB;IAC1C,OAAO,KAAK,CAAC,SAAS,CAAC,MAAM,GAAG,CAAC,IAAI,KAAK,CAAC,aAAa,CAAC,MAAM,GAAG,CAAC,IAAI,KAAK,CAAC,QAAQ,CAAC,MAAM,GAAG,CAAC,CAAC;AACrG,CAAC;AAED,eAAe,0BAA0B,CAAC;IACtC,EAAE,EAAE,4DAA4D;IAChE,MAAM,EAAmB,aAAa;IACtC,KAAK,EAAE,WAAW;CACrB,CAAC,CAAC","sourcesContent":["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { getRnrAuthEndpointId, getRnrPartnerId, getSelectedProductIdFromActionInput } from '@msdyn365-commerce-modules/retail-actions';\nimport { Review } from '@msdyn365-commerce/commerce-entities';\nimport { createObservableDataAction, IAction, IActionContext, IActionInput, ICreateActionContext, sendRequest } from '@msdyn365-commerce/core';\nimport { GetUserReviewInput } from './inputs/get-user-review-input';\n\n/**\n * This method builds the input for the getUserReviewApi call\n */\nconst createInput = (input: ICreateActionContext): IActionInput => {\n    const productId = getSelectedProductIdFromActionInput(input);\n    const userInfo = input.requestContext.user;\n    if (productId && userInfo && userInfo.isAuthenticated) {\n        // Task #211227597 Remove these hardcoded values.\n        return new GetUserReviewInput(productId, getRnrPartnerId(input), userInfo.token, getRnrAuthEndpointId(input));\n    }\n    throw new Error('[GetUserReview] Not all necessary parameters found while creating Input for GetUserReviewAPI');\n};\n\n/**\n * This method gets the user's review from the RnR service endpoint\n */\nasync function getUserReview(input:GetUserReviewInput, ctx: IActionContext):Promise<Review> {\n    if (!inputIsValid(input)) {\n        const errorMessage = `[GettUserReview] Failed to get user's review due to bad input ${input}`;\n        ctx.trace(errorMessage);\n        throw new Error(errorMessage);\n    }\n\n    const requestUrl = `${input.serviceEndpoint}/v2.0/reviews/product/${input.productId}/user?tenantId=${input.tenantId}`;\n\n    return sendRequest<Review>(requestUrl, 'get', null, {headers: {Authorization: `id_token ${input.authorization}`}}).then((response) => {\n        return response.data;\n    }).catch((error) => {\n        ctx.trace(`[GettUserReview] Failed to get user's review for product`);\n        ctx.telemetry.exception(error);\n        ctx.telemetry.debug(`[GettUserReview] Failed to get user's review for product`);\n        ctx.trace(error);\n        throw (error);\n    });\n}\n\nfunction inputIsValid(input:GetUserReviewInput): boolean {\n    return input.productId.length > 0 && input.authorization.length > 0 && input.tenantId.length > 0;\n}\n\nexport default createObservableDataAction({\n    id: '@msdyn365-commerce-modules/ratings-reviews/get-user-review',\n    action: <IAction<Review>>getUserReview,\n    input: createInput\n});\n"]}