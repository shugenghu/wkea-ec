import { wrapInResolvedAsyncResult } from '@msdyn365-commerce-modules/retail-actions';
import { buildMockModuleProps } from '@msdyn365-commerce/core';
import { render } from 'enzyme';
import * as React from 'react';
import RatingsHistogramView from '../ratings-histogram.view';
const mockData = {
    ratingsSummary: wrapInResolvedAsyncResult({}),
    ratingsReviewsState: wrapInResolvedAsyncResult({})
};
const createItem = (stars) => {
    return {
        starLabel: React.createElement("div", null,
            stars,
            " stars"),
        bar: React.createElement("div", null,
            stars,
            " stars"),
        percentage: React.createElement("div", null,
            stars,
            " stars"),
        buttonProps: { className: 'foo' }
    };
};
const items = [
    createItem(5),
    createItem(4),
    createItem(3),
    createItem(2),
    createItem(1)
];
let mockProps;
describe('Write Review unit tests - View', () => {
    it('renders correctly', () => {
        const moduleProps = buildMockModuleProps({}, {});
        const selectFilterBy = (stars) => {
            stars = stars + 1;
        };
        mockProps = {
            ...moduleProps,
            className: 'className',
            data: mockData,
            moduleProps: {
                moduleProps: moduleProps,
                className: 'className'
            },
            histogramItems: items,
            averageRating: React.createElement("div", null, "ratings"),
            heading: React.createElement("h2", null, "heading"),
            averageNumber: React.createElement("p", null, "3"),
            totalReviews: React.createElement("p", null, "30"),
            ratingsSummaryProps: { className: 'ms-ratings-histogram__summary' },
            histogramProps: { className: 'ms-ratings-histogram__histogram' },
            callbacks: {
                selectFilterBy: selectFilterBy
            }
        };
        const component = render(React.createElement(RatingsHistogramView, Object.assign({}, mockProps)));
        expect(component).toMatchSnapshot();
    });
});
//# sourceMappingURL=ratings-histogram.view.test.js.map