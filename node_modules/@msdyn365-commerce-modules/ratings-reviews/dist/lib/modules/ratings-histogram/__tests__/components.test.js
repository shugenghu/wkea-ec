import { Node } from '@msdyn365-commerce-modules/utilities';
import { mount, render } from 'enzyme';
import * as React from 'react';
import { HistogramItems } from '../component/components';
describe('Ratings histogram items', () => {
    let ratingsSummary;
    let props;
    const onClick = jest.fn();
    const locale = 'en-us';
    const resources = {
        barItemAriaLabel: '{0} stars, {1}% of users gave {0} stars'
    };
    beforeEach(() => {
        ratingsSummary = {
            tenantId: 'ATenant',
            productId: '1234',
            market: 'US',
            averageRating: 3.5,
            totalRatingsCount: 200,
            reviewsCount: 2,
            star5Count: 50,
            star4Count: 45,
            star3Count: 5,
            star2Count: 10,
            star1Count: 90,
            star5ReviewCount: 1,
            star4ReviewCount: 0,
            star3ReviewCount: 0,
            star2ReviewCount: 0,
            star1ReviewCount: 1
        };
        props = {
            ratingsSummary: ratingsSummary,
            locale: locale,
            resources: resources,
            onClick: onClick
        };
    });
    it('Standard histogram', () => {
        const items = HistogramItems(props);
        for (const item of items) {
            expect(render(item.starLabel)).toMatchSnapshot();
            expect(render(item.bar)).toMatchSnapshot();
            expect(render(item.percentage)).toMatchSnapshot();
            expect(item.buttonProps.className).toBe('ms-ratings-histogram__item');
        }
    });
    it('Empty histogram', () => {
        ratingsSummary = {
            tenantId: 'ATenant',
            productId: '1234',
            market: 'US',
            averageRating: 0,
            totalRatingsCount: 0,
            reviewsCount: 0,
            star5Count: 0,
            star4Count: 0,
            star3Count: 0,
            star2Count: 0,
            star1Count: 0,
            star5ReviewCount: 0,
            star4ReviewCount: 0,
            star3ReviewCount: 0,
            star2ReviewCount: 0,
            star1ReviewCount: 0
        };
        props = {
            ratingsSummary: ratingsSummary,
            locale: locale,
            resources: resources,
            onClick: onClick
        };
        const items = HistogramItems(props);
        for (const item of items) {
            expect(render(item.starLabel)).toMatchSnapshot();
            expect(render(item.bar)).toMatchSnapshot();
            expect(render(item.percentage)).toMatchSnapshot();
            expect(item.buttonProps.className).toBe('ms-ratings-histogram__item');
        }
    });
    it('calls the onclick when the button is clicked', () => {
        const items = HistogramItems(props);
        const item = items[1];
        const button = mount(React.createElement(Node, Object.assign({}, item.buttonProps)));
        button.simulate('click');
        expect(onClick).toHaveBeenCalledWith(4);
    });
});
//# sourceMappingURL=components.test.js.map