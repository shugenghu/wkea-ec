{"version":3,"file":"ratings-histogram.view.test.js","sourceRoot":"./src/","sources":["modules/ratings-histogram/__tests__/ratings-histogram.view.test.tsx"],"names":[],"mappings":"AAIA,OAAO,EAAE,yBAAyB,EAAE,MAAM,2CAA2C,CAAC;AAEtF,OAAO,EAAE,oBAAoB,EAAE,MAAM,yBAAyB,CAAC;AAE/D,OAAO,EAAE,MAAM,EAAE,MAAM,QAAQ,CAAC;AAChC,OAAO,KAAK,KAAK,MAAM,OAAO,CAAC;AAK/B,OAAO,oBAAoB,MAAM,2BAA2B,CAAC;AAE7D,MAAM,QAAQ,GAA0B;IACpC,cAAc,EAAE,yBAAyB,CAAiB,EAAoB,CAAC;IAC/E,mBAAmB,EAAE,yBAAyB,CAAuB,EAA0B,CAAC;CACnG,CAAC;AAEF,MAAM,UAAU,GAAG,CAAC,KAAa,EAAE,EAAE;IACjC,OAAO;QACP,SAAS,EAAE;YAAM,KAAK;qBAAa;QAC/B,GAAG,EAAE;YAAM,KAAK;qBAAa;QAC7B,UAAU,EAAE;YAAM,KAAK;qBAAa;QACpC,WAAW,EAAE,EAAC,SAAS,EAAE,KAAK,EAAC;KAClC,CAAC;AACN,CAAC,CAAC;AAEF,MAAM,KAAK,GAAG;IACV,UAAU,CAAC,CAAC,CAAC;IACb,UAAU,CAAC,CAAC,CAAC;IACb,UAAU,CAAC,CAAC,CAAC;IACb,UAAU,CAAC,CAAC,CAAC;IACb,UAAU,CAAC,CAAC,CAAC;CAChB,CAAC;AAEF,IAAI,SAAqC,CAAC;AAE1C,QAAQ,CAAC,gCAAgC,EAAE,GAAG,EAAE;IAC5C,EAAE,CAAC,mBAAmB,EAAE,GAAG,EAAE;QACzB,MAAM,WAAW,GAAgC,oBAAoB,CAAC,EAAE,EAAE,EAAE,CAA+B,CAAC;QAC5G,MAAM,cAAc,GAAG,CAAC,KAAa,EAAO,EAAE;YAC1C,KAAK,GAAG,KAAK,GAAG,CAAC,CAAC;QACtB,CAAC,CAAC;QACF,SAAS,GAAG;YACR,GAAG,WAAW;YACd,SAAS,EAAE,WAAW;YACtB,IAAI,EAAE,QAAQ;YACd,WAAW,EAAE;gBACT,WAAW,EAAE,WAAW;gBACxB,SAAS,EAAE,WAAW;aACzB;YACD,cAAc,EAAE,KAAK;YACrB,aAAa,EAAE,2CAAkB;YACjC,OAAO,EAAE,0CAAgB;YACzB,aAAa,EAAE,mCAAQ;YACvB,YAAY,EAAE,oCAAS;YACvB,mBAAmB,EAAE,EAAC,SAAS,EAAE,+BAA+B,EAAC;YACjE,cAAc,EAAE,EAAC,SAAS,EAAE,iCAAiC,EAAC;YAC9D,SAAS,EAAE;gBACP,cAAc,EAAE,cAAc;aACjC;SACJ,CAAC;QACF,MAAM,SAAS,GAAG,MAAM,CAAC,oBAAC,oBAAoB,oBAAK,SAAS,EAAI,CAAC,CAAC;QAClE,MAAM,CAAC,SAAS,CAAC,CAAC,eAAe,EAAE,CAAC;IACxC,CAAC,CAAC,CAAC;AACP,CAAC,CAAC,CAAC","sourcesContent":["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nimport { wrapInResolvedAsyncResult } from '@msdyn365-commerce-modules/retail-actions';\nimport { RatingsSummary } from '@msdyn365-commerce/commerce-entities';\nimport { buildMockModuleProps } from '@msdyn365-commerce/core';\n\nimport { render } from 'enzyme';\nimport * as React from 'react';\nimport { IRatingsReviewsState } from '../../../actions/ratings-reviews-state-data-action';\nimport { IRatingsHistogramViewProps } from '../ratings-histogram';\nimport {IRatingsHistogramData} from '../ratings-histogram.data';\nimport { IRatingsHistogramProps } from '../ratings-histogram.props.autogenerated';\nimport RatingsHistogramView from '../ratings-histogram.view';\n\nconst mockData: IRatingsHistogramData = {\n    ratingsSummary: wrapInResolvedAsyncResult<RatingsSummary>({} as RatingsSummary),\n    ratingsReviewsState: wrapInResolvedAsyncResult<IRatingsReviewsState>({} as IRatingsReviewsState)\n};\n\nconst createItem = (stars: number) => {\n    return {\n    starLabel: <div>{stars} stars</div>,\n        bar: <div>{stars} stars</div>,\n        percentage: <div>{stars} stars</div>,\n        buttonProps: {className: 'foo'}\n    };\n};\n\nconst items = [\n    createItem(5),\n    createItem(4),\n    createItem(3),\n    createItem(2),\n    createItem(1)\n];\n\nlet mockProps: IRatingsHistogramViewProps;\n\ndescribe('Write Review unit tests - View', () => {\n    it('renders correctly', () => {\n        const moduleProps: IRatingsHistogramProps<{}>  = buildMockModuleProps({}, {}) as IRatingsHistogramProps<{}>;\n        const selectFilterBy = (stars: number):void => {\n            stars = stars + 1;\n        };\n        mockProps = {\n            ...moduleProps,\n            className: 'className',\n            data: mockData,\n            moduleProps: {\n                moduleProps: moduleProps,\n                className: 'className'\n            },\n            histogramItems: items,\n            averageRating: <div>ratings</div>,\n            heading: <h2>heading</h2>,\n            averageNumber: <p>3</p>,\n            totalReviews: <p>30</p>,\n            ratingsSummaryProps: {className: 'ms-ratings-histogram__summary'},\n            histogramProps: {className: 'ms-ratings-histogram__histogram'},\n            callbacks: {\n                selectFilterBy: selectFilterBy\n            }\n        };\n        const component = render(<RatingsHistogramView {...mockProps} />);\n        expect(component).toMatchSnapshot();\n    });\n});"]}