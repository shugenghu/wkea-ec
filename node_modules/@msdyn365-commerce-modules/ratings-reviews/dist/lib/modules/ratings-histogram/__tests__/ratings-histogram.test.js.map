{"version":3,"file":"ratings-histogram.test.js","sourceRoot":"./src/","sources":["modules/ratings-histogram/__tests__/ratings-histogram.test.tsx"],"names":[],"mappings":"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","sourcesContent":["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { wrapInResolvedAsyncResult } from '@msdyn365-commerce-modules/retail-actions';\nimport { RatingsSummary } from '@msdyn365-commerce/commerce-entities';\nimport { buildMockCoreContext, buildMockModuleProps} from '@msdyn365-commerce/core';\nimport { mount } from 'enzyme';\nimport * as React from 'react';\nimport RatingsHistogram, {IRatingsHistogramViewProps} from '../ratings-histogram';\nimport { IRatingsHistogramData } from '../ratings-histogram.data';\nimport {\n  IRatingsHistogramProps,\n  IRatingsHistogramResources\n} from '../ratings-histogram.props.autogenerated';\n\nconst emptyMockData: Partial<IRatingsHistogramData> = {\n  ratingsSummary: wrapInResolvedAsyncResult<RatingsSummary>(undefined)\n};\n\nconst mockData: Partial<IRatingsHistogramData> = {\n  ratingsSummary: wrapInResolvedAsyncResult({\n    tenantId: 'ATenant',\n    productId: '1234',\n    market: 'US',\n    averageRating: 3.5,\n    totalRatingsCount: 200,\n    reviewsCount: 2,\n    star5Count: 50,\n    star4Count: 45,\n    star3Count: 5,\n    star2Count: 10,\n    star1Count: 90,\n    star5ReviewCount: 1,\n    star4ReviewCount: 0,\n    star3ReviewCount: 0,\n    star2ReviewCount: 0,\n    star1ReviewCount: 1\n  } as RatingsSummary)\n};\n\nconst mockResources: IRatingsHistogramResources = {\n  barItemAriaLabel: '{0} stars, {1}%',\n  averageRatingAriaLabel: '{0} stars, {1}',\n  ratingCountAriaLabel: '{0} users rated this product.',\n  ratingReviewText: 'review',\n  ratingReviewsText: 'reviews'\n};\n\n// @ts-ignore\nconst mockContext: ICoreContext<{}> = {\n  request: {\n    market: 'en-us'\n  }\n};\n\nconst mockActions = {};\n\ndescribe('EmptyRatingsHistogram', () => {\n  let moduleProps: IRatingsHistogramProps<IRatingsHistogramData>;\n  beforeAll(() => {\n      // @ts-ignore\n    moduleProps = {...buildMockModuleProps(emptyMockData, mockActions, {}, mockContext) as IRatingsHistogramProps<IRatingsHistogramData>,resources:mockResources, renderView: jest.fn(props => { return <div props={props} />;})};\n  });\n\n  it('renders correctly', () => {\n    const component = mount(<RatingsHistogram {...moduleProps} />);\n    expect(moduleProps.renderView).toBeCalled();\n    const viewProps: IRatingsHistogramViewProps = component.childAt(0).props().props;\n    expect(viewProps).toBeDefined();\n    expect(viewProps.histogramItems).toEqual([]);\n    expect(viewProps.heading).not.toBeTruthy();\n    expect(viewProps.averageRating).not.toBeTruthy();\n    expect(viewProps.histogramProps).toEqual({className: 'ms-ratings-histogram__histogram'});\n    component.unmount();\n  });\n});\n\ndescribe('RatingsHistogram', () => {\n  let moduleProps: IRatingsHistogramProps<IRatingsHistogramData>;\n  const context = buildMockCoreContext({});\n\n  beforeAll(() => {\n    // @ts-ignore\n    moduleProps = {...buildMockModuleProps(mockData, mockActions, {heading: {tag: '<h2>', text: 'heading'}}), context: context, resources:mockResources, renderView: jest.fn(props => { return <div props={props} />;})};\n  });\n  it('renders correctly', () => {\n    const component = mount(<RatingsHistogram {...moduleProps} />);\n    expect(moduleProps.renderView).toBeCalled();\n    const viewProps: IRatingsHistogramViewProps = component.childAt(0).props().props;\n    expect(viewProps).toBeDefined();\n    expect(viewProps.histogramItems).toBeTruthy();\n    expect(viewProps.histogramItems).not.toEqual([]);\n    expect(viewProps.heading).toBeTruthy();\n    expect(viewProps.averageRating).toBeTruthy();\n    expect(viewProps.histogramProps).toEqual({className: 'ms-ratings-histogram__histogram'});\n    component.unmount();\n  });\n\n  it('Calls actionContext update', async () => {\n    const flushPromises = () => new Promise(setImmediate);\n    spyOn(context.actionContext, 'update');\n    const component = mount(<RatingsHistogram {...moduleProps} />);\n    expect(moduleProps.renderView).toBeCalled();\n    const viewProps: IRatingsHistogramViewProps = component.childAt(0).props().props;\n    const button = <button {...viewProps.histogramItems[1].buttonProps}/>;\n    const mountedButton = mount(button);\n    mountedButton.simulate('click');\n    await flushPromises();\n    expect(context.actionContext.update).toHaveBeenCalled();\n  });\n});"]}