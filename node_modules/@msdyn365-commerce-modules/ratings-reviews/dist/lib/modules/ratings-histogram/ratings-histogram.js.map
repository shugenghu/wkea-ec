{"version":3,"file":"ratings-histogram.js","sourceRoot":"./src/","sources":["modules/ratings-histogram/ratings-histogram.tsx"],"names":[],"mappings":"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","sourcesContent":["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nimport { format, IModuleProps, INodeProps } from '@msdyn365-commerce-modules/utilities';\nimport { RatingComponent } from '@msdyn365-commerce/components';\nimport * as Msdyn365 from '@msdyn365-commerce/core';\nimport classname from 'classnames';\nimport { observer } from 'mobx-react';\nimport * as React from 'react';\nimport { createRatingsReviewsStateInput } from '../../actions/ratings-reviews-state-data-action';\nimport { AverageRatingNumber, HistogramItems, IHistogramItemViewProps, TotalReviews } from './component/components';\nimport { IRatingsHistogramData } from './ratings-histogram.data';\nimport { IRatingsHistogramProps } from './ratings-histogram.props.autogenerated';\n\nexport interface IRatingsHistogramViewProps extends IRatingsHistogramProps<IRatingsHistogramData> {\n    className: string;\n    histogramItems: IHistogramItemViewProps[];\n    moduleProps: IModuleProps;\n    heading: React.ReactNode;\n    averageRating: React.ReactNode;\n    averageNumber: React.ReactNode;\n    totalReviews: React.ReactNode;\n    histogramProps: INodeProps;\n    ratingsSummaryProps: INodeProps;\n    callbacks: IRatingsHistogramCallbacks;\n}\n\nexport interface IRatingsHistogramCallbacks {\n    selectFilterBy(stars: number): void;\n}\n\n/**\n * RatingsHistogram component\n * @extends {React.Component<IRatingsHistogramProps<IRatingsHistogramData>>}\n */\n@observer\nclass RatingsHistogram extends React.Component<IRatingsHistogramProps<IRatingsHistogramData>> {\n\n    constructor(props: IRatingsHistogramProps<IRatingsHistogramData>) {\n        super(props);\n        this.selectFilterBy = this.selectFilterBy.bind(this);\n    }\n\n    public render(): JSX.Element | null {\n        const { resources } = this.props;\n        const { className, heading  } = this.props.config;\n        const {ratingsSummary: {result: ratingsSummary}} = this.props.data;\n        const ratingCount = ratingsSummary && ratingsSummary.totalRatingsCount  ? `${ratingsSummary.totalRatingsCount}` : '0';\n\n        const completeClass = classname('ms-ratings-histogram', className);\n        const viewProps: IRatingsHistogramViewProps = {\n            ...this.props,\n            className: completeClass,\n            callbacks: {\n                selectFilterBy: this.selectFilterBy\n            },\n            moduleProps: {\n                moduleProps: this.props,\n                className: completeClass\n            },\n            histogramItems: ratingsSummary ? HistogramItems({ratingsSummary: ratingsSummary, resources: {...resources}, locale: this.props.context.request.locale, onClick: this.selectFilterBy}) : [],\n            averageRating: ratingsSummary && (\n                            <RatingComponent\n                                avgRating={ratingsSummary.averageRating!}\n                                ratingCount={ratingCount}\n                                ariaLabel={format(this.props.resources.averageRatingAriaLabel, ratingsSummary.averageRating, '5')}\n                                readOnly={true}\n                                context={this.props.context}\n                                hideCount={true}\n                                id={this.props.id}\n                                typeName={this.props.typeName}\n                                data={{}}\n                            />\n            ),\n            averageNumber: ratingsSummary && <AverageRatingNumber summary={ratingsSummary}/>,\n            totalReviews: ratingsSummary && <TotalReviews summary={ratingsSummary}/>,\n            ratingsSummaryProps: {className: 'ms-ratings-histogram__summary'},\n            heading: heading && (\n                <Msdyn365.Text\n                    className='ms-ratings-histogram__heading'\n                    tag={heading.tag || 'h2'}\n                    text={heading.text}\n                    editProps={{onEdit:this.handleHeadingChange, requestContext: this.props.context.request}}\n                />\n            ),\n            histogramProps: {className: 'ms-ratings-histogram__histogram'}\n        };\n\n        return this.props.renderView(viewProps) as React.ReactElement;\n    }\n\n    public handleHeadingChange = (event: Msdyn365.ContentEditableEvent) => this.props.config.heading!.text = event.target.value;\n\n    public selectFilterBy(stars: number): void {\n        const filterKey = `${stars}`;\n        this.props.context.actionContext.update(createRatingsReviewsStateInput({filterKey}), {filterKey});\n    }\n}\n\nexport default RatingsHistogram;\n"]}