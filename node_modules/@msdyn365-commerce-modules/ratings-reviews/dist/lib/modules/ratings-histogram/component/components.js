import { format, Progress } from '@msdyn365-commerce-modules/utilities';
import React from 'react';
export const HistogramItems = (props) => {
    const { ratingsSummary } = props;
    const totalRatingsCount = ratingsSummary.totalRatingsCount || 0;
    return [
        renderItem(props, 5, ratingsSummary.star5Count, totalRatingsCount),
        renderItem(props, 4, ratingsSummary.star4Count, totalRatingsCount),
        renderItem(props, 3, ratingsSummary.star3Count, totalRatingsCount),
        renderItem(props, 2, ratingsSummary.star2Count, totalRatingsCount),
        renderItem(props, 1, ratingsSummary.star1Count, totalRatingsCount),
    ];
};
const renderItem = (props, stars, count, totalCount) => {
    count = count || 0;
    totalCount = totalCount || 0;
    const percentage = totalCount === 0 ? 0 : count / totalCount;
    const formattedPercent = new Intl.NumberFormat(props.locale, { style: 'percent' }).format(percentage);
    const ariaLabel = format(props.resources.barItemAriaLabel, stars, formattedPercent);
    return {
        starLabel: React.createElement("span", { className: 'ms-ratings-histogram__star' }, stars),
        percentage: React.createElement("span", { className: 'ms-ratings-histogram__percentage' }, formattedPercent),
        bar: React.createElement(Progress, { value: percentage * 100, max: 100, ariaLabel: ariaLabel, className: 'ms-ratings-histogram__bar' }),
        buttonProps: { tag: 'button', className: 'ms-ratings-histogram__item', onClick: () => { props.onClick(stars); } }
    };
};
export const AverageRatingNumber = (props) => {
    return React.createElement("p", { className: 'ms-ratings-histogram__average' },
        props.summary.averageRating,
        " / 5");
};
export const TotalReviews = (props) => {
    return React.createElement("p", { className: 'ms-ratings-histogram__total' }, props.summary.totalRatingsCount);
};
//# sourceMappingURL=components.js.map