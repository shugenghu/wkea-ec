import { __decorate } from "tslib";
import { format } from '@msdyn365-commerce-modules/utilities';
import { RatingComponent } from '@msdyn365-commerce/components';
import * as Msdyn365 from '@msdyn365-commerce/core';
import classname from 'classnames';
import { observer } from 'mobx-react';
import * as React from 'react';
import { createRatingsReviewsStateInput } from '../../actions/ratings-reviews-state-data-action';
import { AverageRatingNumber, HistogramItems, TotalReviews } from './component/components';
let RatingsHistogram = class RatingsHistogram extends React.Component {
    constructor(props) {
        super(props);
        this.handleHeadingChange = (event) => this.props.config.heading.text = event.target.value;
        this.selectFilterBy = this.selectFilterBy.bind(this);
    }
    render() {
        const { resources } = this.props;
        const { className, heading } = this.props.config;
        const { ratingsSummary: { result: ratingsSummary } } = this.props.data;
        const ratingCount = ratingsSummary && ratingsSummary.totalRatingsCount ? `${ratingsSummary.totalRatingsCount}` : '0';
        const completeClass = classname('ms-ratings-histogram', className);
        const viewProps = {
            ...this.props,
            className: completeClass,
            callbacks: {
                selectFilterBy: this.selectFilterBy
            },
            moduleProps: {
                moduleProps: this.props,
                className: completeClass
            },
            histogramItems: ratingsSummary ? HistogramItems({ ratingsSummary: ratingsSummary, resources: { ...resources }, locale: this.props.context.request.locale, onClick: this.selectFilterBy }) : [],
            averageRating: ratingsSummary && (React.createElement(RatingComponent, { avgRating: ratingsSummary.averageRating, ratingCount: ratingCount, ariaLabel: format(this.props.resources.averageRatingAriaLabel, ratingsSummary.averageRating, '5'), readOnly: true, context: this.props.context, hideCount: true, id: this.props.id, typeName: this.props.typeName, data: {} })),
            averageNumber: ratingsSummary && React.createElement(AverageRatingNumber, { summary: ratingsSummary }),
            totalReviews: ratingsSummary && React.createElement(TotalReviews, { summary: ratingsSummary }),
            ratingsSummaryProps: { className: 'ms-ratings-histogram__summary' },
            heading: heading && (React.createElement(Msdyn365.Text, { className: 'ms-ratings-histogram__heading', tag: heading.tag || 'h2', text: heading.text, editProps: { onEdit: this.handleHeadingChange, requestContext: this.props.context.request } })),
            histogramProps: { className: 'ms-ratings-histogram__histogram' }
        };
        return this.props.renderView(viewProps);
    }
    selectFilterBy(stars) {
        const filterKey = `${stars}`;
        this.props.context.actionContext.update(createRatingsReviewsStateInput({ filterKey }), { filterKey });
    }
};
RatingsHistogram = __decorate([
    observer
], RatingsHistogram);
export default RatingsHistogram;
//# sourceMappingURL=ratings-histogram.js.map