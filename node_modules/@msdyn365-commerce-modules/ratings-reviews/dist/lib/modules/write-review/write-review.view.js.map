{"version":3,"file":"write-review.view.js","sourceRoot":"./src/","sources":["modules/write-review/write-review.view.tsx"],"names":[],"mappings":"AAIA,OAAO,EAAiB,MAAM,EAAE,IAAI,EAAE,MAAM,sCAAsC,CAAC;AACnF,OAAO,KAAK,KAAK,MAAM,OAAO,CAAC;AAI/B,MAAM,eAAe,GAAoC,KAAK,CAAC,EAAE;IAC7D,MAAM,EAAE,OAAO,EAAE,aAAa,EAAE,YAAY,EAAG,WAAW,EAAE,WAAW,EAAE,WAAW,EAAE,GAAG,KAAK,CAAC;IAC/F,MAAM,eAAe,GAAI,KAAK,CAAC,OAAO,CAAC,OAAO,CAAC,IAAI,CAAC,eAAe,CAAC;IACpE,OAAO,CACH,oBAAC,MAAM,oBAAK,WAAW;QAClB,OAAO;QACP,CAAC,eAAe,CAAC,CAAC;YACnB;gBACK,aAAa;gBACb,YAAY,CACd;YACH,CAAC;gBACD;oBACK,WAAW;oBACX,iBAAiB,CAAC,WAAW,EAAE,WAAW,CAAC,CAC7C,CAEE,CACZ,CAAC;AACN,CAAC,CAAC;AAEF,MAAM,iBAAiB,GAAG,CAAC,KAA4B,EAAE,WAAyB,EAAe,EAAE;IAC/F,OAAO,CACH,oBAAC,MAAM,oBAAK,KAAK,CAAC,KAAK,EAAM,WAAW;QACnC,KAAK,CAAC,WAAW;QAClB,oBAAC,IAAI,oBAAK,KAAK,CAAC,SAAS;YACrB,oBAAC,IAAI,oBAAK,KAAK,CAAC,IAAI;gBAChB,oBAAC,IAAI,oBAAK,KAAK,CAAC,QAAQ;oBACnB,KAAK,CAAC,MAAM;oBACZ,KAAK,CAAC,WAAW,CACf;gBACP,oBAAC,IAAI,oBAAK,KAAK,CAAC,QAAQ;oBACnB,KAAK,CAAC,UAAU;oBAChB,KAAK,CAAC,UAAU,CACd;gBACP,oBAAC,IAAI,oBAAK,KAAK,CAAC,QAAQ;oBACnB,KAAK,CAAC,SAAS;oBACf,KAAK,CAAC,SAAS,CACb;gBACN,KAAK,CAAC,gBAAgB;gBACtB,KAAK,CAAC,KAAK,CACT,CACJ;QACP,oBAAC,IAAI,oBAAK,KAAK,CAAC,WAAW;YACtB,KAAK,CAAC,YAAY;YAClB,KAAK,CAAC,YAAY,CAChB,CACF,CACZ,CAAC;AACN,CAAC,CAAC;AAEF,eAAe,eAAe,CAAC","sourcesContent":["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nimport {  IModuleProps, Module, Node } from '@msdyn365-commerce-modules/utilities';\nimport * as React from 'react';\nimport {IReviewModalViewProps} from '../../common/review-modal';\nimport { IWriteReviewViewProps } from './';\n\nconst WriteReviewView: React.FC<IWriteReviewViewProps> = props => {\n    const { heading, signInMessage, signInButton,  modalToggle, reviewModal, moduleProps } = props;\n    const isAuthenticated =  props.context.request.user.isAuthenticated;\n    return (\n        <Module {...moduleProps}>\n            {heading}\n            {!isAuthenticated ?\n            <>\n                {signInMessage}\n                {signInButton}\n            </>\n            :\n            <>\n                {modalToggle}\n                {createReviewModal(reviewModal, moduleProps)}\n            </>\n        }\n        </Module>\n    );\n};\n\nconst createReviewModal = (props: IReviewModalViewProps, moduleProps: IModuleProps): JSX.Element => {\n    return (\n        <Module {...props.modal} {...moduleProps}>\n            {props.modalHeader}\n            <Node {...props.modalBody}>\n                <Node {...props.form}>\n                    <Node {...props.inputRow}>\n                        {props.rating}\n                        {props.ratingLabel}\n                    </Node>\n                    <Node {...props.inputRow}>\n                        {props.titleLabel}\n                        {props.titleInput}\n                    </Node>\n                    <Node {...props.inputRow}>\n                        {props.textLabel}\n                        {props.textInput}\n                    </Node>\n                    {props.privacyPolicyUrl}\n                    {props.error}\n                </Node>\n            </Node>\n            <Node {...props.modalFooter}>\n                {props.submitButton}\n                {props.cancelButton}\n            </Node>\n        </Module>\n    );\n};\n\nexport default WriteReviewView;"]}