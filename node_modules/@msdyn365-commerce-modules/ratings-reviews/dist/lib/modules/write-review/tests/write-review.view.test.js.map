{"version":3,"file":"write-review.view.test.js","sourceRoot":"./src/","sources":["modules/write-review/tests/write-review.view.test.tsx"],"names":[],"mappings":"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","sourcesContent":["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nimport { wrapInResolvedAsyncResult } from '@msdyn365-commerce-modules/retail-actions';\nimport { Review } from '@msdyn365-commerce/commerce-entities';\nimport { buildMockCoreContext, buildMockModuleProps } from '@msdyn365-commerce/core';\n\nimport {  SimpleProduct } from '@msdyn365-commerce/retail-proxy';\nimport { render } from 'enzyme';\nimport * as React from 'react';\nimport { IWriteReviewCallbacks, IWriteReviewData, IWriteReviewProps, IWriteReviewState, IWriteReviewViewProps, WriteReviewView } from '../';\n\nconst emptyMockData: IWriteReviewData = {\n    product: wrapInResolvedAsyncResult<SimpleProduct>({RecordId: 44} as SimpleProduct),\n    userReview: wrapInResolvedAsyncResult<Review>(undefined)\n};\n\nconst reviewModal = {\n    modal: { className: 'modal'},\n    modalHeader: <div className='modalHeader'/>,\n    modalFooter: { className: 'modalFooter'},\n    modalBody: { className: 'modalBody'},\n    cancelButton: <button>cancelButton</button>,\n    submitButton: <button>submitButton</button>,\n    rating: <div>rating</div>,\n    ratingLabel: <div>ratingLabel</div>,\n    titleInput: <input className='titleInput'/>,\n    titleLabel: <div>titleLabel</div>,\n    textInput: <input className='textInput'/>,\n    textLabel: <div>textLabel</div>,\n    privacyPolicyUrl: <div>privacyPolicyUrl</div>,\n    form: { className: 'modalForm'},\n    inputRow: { className: 'inputRow'},\n    error: <div>error</div>\n};\n\nconst callBacks: IWriteReviewCallbacks = {\n    updateReviewTitle: jest.fn(),\n    updateReviewText: jest.fn(),\n    updateRating: jest.fn(),\n    onReviewSubmitted: jest.fn(),\n    submitReview: jest.fn(),\n    toggleModal: jest.fn()\n};\n\nlet mockProps: IWriteReviewViewProps;\n\ndescribe('Write Review unit tests - View', () => {\n    it('renders correctly', () => {\n        const moduleProps: IWriteReviewProps<IWriteReviewState> = buildMockModuleProps({}, {}) as IWriteReviewProps<IWriteReviewState>;\n        mockProps = {\n            ...moduleProps,\n            className: 'className',\n            state: {\n                rating: 4,\n                reviewTitle: 'ffff',\n                reviewText: 'wwwwwwwwwwwwwwwwwwwwwww',\n                isReviewModalOpen: false,hasReviewError: false\n            },\n            callbacks: callBacks,\n            data: emptyMockData,\n            moduleProps: {\n                moduleProps: moduleProps,\n                className: 'className'\n            },\n            signInMessage: <div>signInMessage</div>,\n            signInButton: <div>signInButton</div>,\n            modalToggle: <div>modalToggle</div>,\n            reviewModal: reviewModal,\n            heading: <h1>Heading</h1>\n        };\n        const component = render(<WriteReviewView {...mockProps} />);\n        expect(component).toMatchSnapshot();\n    });\n\n    it('renders correctly for authenticated users', () => {\n        const mockContext = buildMockCoreContext({});\n        mockContext.request.user.isAuthenticated = true;\n        const moduleProps: IWriteReviewProps<IWriteReviewState> = buildMockModuleProps({}, {}, {}, mockContext) as IWriteReviewProps<IWriteReviewState>;\n        mockProps = {\n            ...moduleProps,\n            className: 'className',\n            state: {\n                rating: 4,\n                reviewTitle: 'ffff',\n                reviewText: 'wwwwwwwwwwwwwwwwwwwwwww',\n                isReviewModalOpen: false,\n                hasReviewError: false\n            },\n            callbacks: callBacks,\n            data: emptyMockData,\n            moduleProps: {\n                moduleProps: moduleProps,\n                className: 'className'\n            },\n            signInMessage: <div>signInMessage</div>,\n            signInButton: <div>signInButton</div>,\n            modalToggle: <div>modalToggle</div>,\n            reviewModal: reviewModal,\n            heading: <h1>Heading</h1>\n        };\n        const component = render(<WriteReviewView {...mockProps} />);\n        expect(component).toMatchSnapshot();\n    });\n\n    it('renders correctly for successfully submitted reviews', () => {\n        const mockContext = buildMockCoreContext({});\n        mockContext.request.user.isAuthenticated = true;\n        const moduleProps: IWriteReviewProps<IWriteReviewState> = buildMockModuleProps({}, {}, {}, mockContext) as IWriteReviewProps<IWriteReviewState>;\n        mockProps = {\n            ...moduleProps,\n            className: 'className',\n            state: {\n                rating: 4,\n                reviewTitle: 'ffff',\n                reviewText: 'wwwwwwwwwwwwwwwwwwwwwww',\n                isReviewModalOpen: false,\n                hasReviewError: false\n            },\n            callbacks: callBacks,\n            data: emptyMockData,\n            moduleProps: {\n                moduleProps: moduleProps,\n                className: 'className'\n            },\n            signInMessage: <div>signInMessage</div>,\n            signInButton: <div>signInButton</div>,\n            modalToggle: <div>modalToggle</div>,\n            reviewModal: reviewModal,\n            heading: <h1>Heading</h1>\n        };\n        const component = render(<WriteReviewView {...mockProps} />);\n        expect(component).toMatchSnapshot();\n    });\n});"]}