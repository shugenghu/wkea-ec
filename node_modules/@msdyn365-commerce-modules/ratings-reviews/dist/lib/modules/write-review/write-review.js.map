{"version":3,"file":"write-review.js","sourceRoot":"./src/","sources":["modules/write-review/write-review.tsx"],"names":[],"mappings":"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","sourcesContent":["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nimport { getTelemetryObject, IModuleProps, ITelemetryContent } from '@msdyn365-commerce-modules/utilities';\nimport { Review } from '@msdyn365-commerce/commerce-entities';\nimport * as Msdyn365 from '@msdyn365-commerce/core';\nimport { SimpleProduct } from '@msdyn365-commerce/retail-proxy';\nimport classnames from 'classnames';\nimport React from 'react';\nimport { IReviewModalViewProps, ReviewModal, submitReview } from '../../common/review-modal';\nimport { TOGGLE_REVIEW_MODAL_BUTTON_ID } from '../../common/rnrInterface';\nimport { ModalToggle, SignInButton, SignInMessage } from './components/components';\nimport { IWriteReviewData } from './write-review.data';\nimport { IWriteReviewProps } from './write-review.props.autogenerated';\n\nexport interface IWriteReviewCallbacks {\n    toggleModal(): void;\n    updateReviewTitle(title: string): void;\n    updateReviewText(text: string): void;\n    updateRating(rating: number): void;\n    onReviewSubmitted(isSuccessful: boolean): void;\n    submitReview(product: SimpleProduct, title: string, text: string, rating: number, context: Msdyn365.ICoreContext, userReview?: Review, onReviewSubmission?: (isSuccessful: boolean) => void): void;\n}\n\nexport interface IWriteReviewState {\n    rating: number;\n    reviewTitle: string;\n    reviewText: string;\n    isReviewModalOpen: boolean;\n    hasReviewError: boolean;\n}\n\nexport interface IWriteReviewViewProps extends IWriteReviewProps<IWriteReviewData> {\n    state: IWriteReviewState;\n    className: string;\n    callbacks: IWriteReviewCallbacks;\n    signInMessage: React.ReactNode;\n    signInButton: React.ReactNode;\n    modalToggle: React.ReactNode;\n    reviewModal: IReviewModalViewProps;\n    moduleProps: IModuleProps;\n    heading: React.ReactNode;\n}\n\n/**\n * This module is enables user's to leave ratings and reviews on a specific product\n * WriteReview module\n * @extends {React.PureComponent<IWriteReviewProps<IWriteReviewData>>}\n */\nclass WriteReview extends React.PureComponent<IWriteReviewProps<IWriteReviewData>, IWriteReviewState> {\n    private _modalToggleRef: React.RefObject<HTMLButtonElement> | undefined;\n    private telemetryContent: ITelemetryContent;\n\n    public constructor(props: IWriteReviewProps<IWriteReviewData>) {\n        super(props);\n        const {userReview: {result: userReview}} = this.props.data;\n        this._toggleReviewModal = this._toggleReviewModal.bind(this);\n        this._modalToggleRef = React.createRef<HTMLButtonElement>();\n        const rating = userReview ? userReview.rating : 0;\n        const reviewTitle = userReview ? userReview.title : '';\n        const reviewText = userReview ? userReview.reviewText : '';\n\n        this.state = {\n            isReviewModalOpen: false,\n            rating: rating,\n            reviewTitle: reviewTitle,\n            reviewText: reviewText,\n            hasReviewError: false\n        };\n        this.telemetryContent = getTelemetryObject(this.props.context.request.telemetryPageName!, this.props.friendlyName, this.props.telemetry);\n    }\n\n    public render(): JSX.Element {\n        const { resources } = this.props;\n        const { className, heading } = this.props.config;\n        const {product: {result: product}, userReview: {result: userReview}} = this.props.data;\n\n        const userInfo = this.props.context && this.props.context.request && this.props.context.request.user;\n        const completeClass = classnames('ms-write-review', className);\n        const viewProps = {\n            ...this.props,\n            state: this.state,\n            className: completeClass,\n            moduleProps: {\n                moduleProps: this.props,\n                className: completeClass,\n                id: null\n            },\n            callbacks: this.writeReviewCallbacks,\n            signInMessage: <SignInMessage text={resources.signInMessage}/>,\n            signInButton: <SignInButton text={resources.signInLabel} ariaLabel={resources.signInAriaLabel} href={userInfo.signInUrl!} telemetryContent={this.telemetryContent}/>,\n            modalToggle: product && (\n                        <ModalToggle\n                            text={userReview? resources.editReviewButtonText : resources.reviewButtonLabel}\n                            ariaLabel={resources.reviewButtonLabel}\n                            innerRef={this._modalToggleRef}\n                            onClick={this._toggleReviewModal}\n                            id={TOGGLE_REVIEW_MODAL_BUTTON_ID}\n                            telemetryContent={this.telemetryContent}\n                        />\n            ),\n            reviewModal: this._buildUserReviewModal(),\n            heading: heading && heading.text && (\n                <Msdyn365.Text\n                    className='ms-write-review__heading'\n                    tag={heading.tag || 'h2'}\n                    text={heading.text}\n                    editProps={{onEdit:this.handleHeadingChange, requestContext: this.props.context.request}}\n                />\n            )\n        } as IWriteReviewViewProps;\n\n        return this.props.renderView(viewProps) as React.ReactElement;\n    }\n    public handleHeadingChange = (event: Msdyn365.ContentEditableEvent) => this.props.config.heading!.text = event.target.value;\n\n    private _onTitleChange = (event: React.ChangeEvent<HTMLInputElement>): void => {\n        this.writeReviewCallbacks.updateReviewTitle(event.target.value);\n    }\n\n    private _onTextChange = (event: React.ChangeEvent<HTMLTextAreaElement>): void => {\n        this.writeReviewCallbacks.updateReviewText(event.target.value);\n    }\n\n    private _onRatingChange = (value: number): void => {\n        this.writeReviewCallbacks.updateRating(value);\n    }\n\n    private _toggleReviewModal  = (): void => {\n        const userReview = this.props.data.userReview.result;\n        if (this.state.isReviewModalOpen) {\n            this.setState({isReviewModalOpen: false, hasReviewError: false});\n        } else {\n            if(userReview) {\n                this.setState({\n                    isReviewModalOpen: true,\n                    reviewText: userReview.reviewText,\n                    reviewTitle: userReview.title,\n                    rating: userReview.rating\n                });\n            } else {\n                this.setState({\n                    isReviewModalOpen: true,\n                    reviewText:  '',\n                    reviewTitle:  '',\n                    rating:  0\n                });\n            }\n        }\n    }\n\n    /**\n     * This method builds the user review modal\n     * @param config The module config\n     */\n    private _buildUserReviewModal(): IReviewModalViewProps {\n        return ReviewModal({\n            userReview: this.props.data.userReview.result,\n            product: this.props.data.product.result,\n            resources: {...this.props.resources},\n            context: this.props.context,\n            parentId: this.props.id,\n            parentType: this.props.typeName,\n            isOpen: this.state.isReviewModalOpen,\n            rating: this.state.rating,\n            reviewTitle: this.state.reviewTitle,\n            reviewText: this.state.reviewText,\n            onModalToggle: this._toggleReviewModal,\n            onTitleChange: this._onTitleChange,\n            onTextChange: this._onTextChange,\n            onRatingChange: this._onRatingChange,\n            onReviewComplete: this.writeReviewCallbacks.onReviewSubmitted,\n            renderContextId: 'writeReview',\n            returnRef: this._modalToggleRef,\n            hasError: this.state.hasReviewError,\n            telemetryContent: this.telemetryContent\n        });\n    }\n\n    // tslint:disable-next-line\n    private writeReviewCallbacks: IWriteReviewCallbacks = {\n        toggleModal: this._toggleReviewModal,\n        updateReviewTitle: (title: string): void => {\n            this.setState({reviewTitle: title});\n        },\n        updateReviewText: (text: string): void => {\n            this.setState({reviewText: text});\n        },\n        updateRating: (rating: number): void => {\n            this.setState({rating: rating});\n        },\n        onReviewSubmitted: (isSuccessful: boolean): void => {\n            if (isSuccessful) {\n                this.setState({isReviewModalOpen: false, hasReviewError: false});\n            } else {\n                this.setState({hasReviewError: true});\n            }\n        },\n        submitReview: submitReview\n    };\n}\n\nexport default WriteReview;\n"]}