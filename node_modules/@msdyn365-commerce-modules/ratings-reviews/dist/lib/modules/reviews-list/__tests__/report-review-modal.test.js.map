{"version":3,"file":"report-review-modal.test.js","sourceRoot":"./src/","sources":["modules/reviews-list/__tests__/report-review-modal.test.tsx"],"names":[],"mappings":"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","sourcesContent":["import { buildMockCoreContext, ICoreContext } from '@msdyn365-commerce/core';\nimport { mount, render} from 'enzyme';\nimport * as React from 'react';\nimport { ReviewConcernCategory } from '../../../actions/inputs/report-review-concern-input';\nimport {IReportReviewModalProps, IReportReviewModalResources, ReportReviewModal } from '../components/report-review-modal';\n\ndescribe('Report review modal', () => {\n    let mockCoreContext: ICoreContext;\n\n    let onRadioChange: () => void;\n    let onReportToggle: () => void;\n    let reportReview: () => void;\n    const buttonRef = React.createRef<HTMLButtonElement>();\n\n    const resources: IReportReviewModalResources = {\n        reportConcernText: 'Report',\n        feedbackThankYouText: 'Thanks for your feedback',\n        reportModalMessage: '',\n        reportSubmittedMessage: 'We have received your feedback. One of our staff members will look into this review soon.',\n        reportSpamText: 'Contains spam or advertising',\n        offensiveContentText: 'Contains offensive content',\n        profanityContentText: 'Contains profanity',\n        okReportReviewText: 'Ok',\n        cancelReportReviewText: 'Cancel',\n        reportReviewButtonText: 'Report',\n        errorMessageText: 'Something went wrong, please try again',\n    };\n\n    let props: IReportReviewModalProps;\n\n    beforeEach(() => {\n        mockCoreContext = buildMockCoreContext({});\n        //   mockCoreContext.actionContext.requestContext.apiSettings.rnr = {id: 'rnrId', url: 'rnrUrl'};\n        onRadioChange = jest.fn();\n        onReportToggle = jest.fn();\n        reportReview = jest.fn();\n\n        props = {\n            isOpen: true,\n            returnRef: buttonRef,\n            reportedKey: ReviewConcernCategory.SpamAdvertising,\n            resources: resources,\n            context:  mockCoreContext,\n            onRadioChange: onRadioChange,\n            onModalToggle: onReportToggle,\n            reportReview: reportReview,\n            hasError: false\n        };\n    });\n\n    it('Renders the report modal as expected when modal toggle is open', () => {\n        const reportModal = ReportReviewModal(props);\n        expect(reportModal.modal).toMatchSnapshot();\n        expect(reportModal.modalHeader).toMatchSnapshot();\n        expect(reportModal.modalBody).toMatchSnapshot();\n        expect(reportModal.modalFooter).toMatchSnapshot();\n        expect(render(reportModal.header)).toMatchSnapshot();\n        expect(render(reportModal.headerSubmitted)).toMatchSnapshot();\n        expect(render(reportModal.cancelButton)).toMatchSnapshot();\n        expect(render(reportModal.submitButton)).toMatchSnapshot();\n        expect(render(reportModal.succesfulButton)).toMatchSnapshot();\n        expect(render(reportModal.reportMessage)).toMatchSnapshot();\n        expect(render(reportModal.reportSubmittedMessage)).toMatchSnapshot();\n        expect(render(reportModal.radioButtons)).toMatchSnapshot();\n    });\n\n    it('Renders the report modal as expected when modal is closed', () => {\n        props.isOpen = false;\n        const reportModal = ReportReviewModal(props);\n        expect(reportModal.modal).toMatchSnapshot();\n        expect(reportModal.modalHeader).toMatchSnapshot();\n        expect(reportModal.modalBody).toMatchSnapshot();\n        expect(reportModal.modalFooter).toMatchSnapshot();\n        expect(render(reportModal.header)).toMatchSnapshot();\n        expect(render(reportModal.headerSubmitted)).toMatchSnapshot();\n        expect(render(reportModal.cancelButton)).toMatchSnapshot();\n        expect(render(reportModal.submitButton)).toMatchSnapshot();\n        expect(render(reportModal.succesfulButton)).toMatchSnapshot();\n        expect(render(reportModal.reportMessage)).toMatchSnapshot();\n        expect(render(reportModal.reportSubmittedMessage)).toMatchSnapshot();\n        expect(render(reportModal.radioButtons)).toMatchSnapshot();\n    });\n\n    it('calls the report action', () => {\n        const reportModal = ReportReviewModal(props);\n        const wrapper = mount(reportModal.submitButton);\n        wrapper.simulate('click');\n        expect(reportReview).toHaveBeenCalled();\n    });\n\n    it('calls the on radio change action', () => {\n        const reportModal = ReportReviewModal(props);\n        const wrapper = mount(reportModal.radioButtons);\n        const radio = wrapper.find('input').at(1);\n        radio.simulate('change');\n        expect(onRadioChange).toHaveBeenCalled();\n    });\n\n    it('calls the onModalToggle', () => {\n        const reportModal = ReportReviewModal(props);\n        const wrapper = mount(reportModal.cancelButton);\n        wrapper.simulate('click');\n        expect(onReportToggle).toHaveBeenCalled();\n    });\n});"]}