{"version":3,"file":"review-card.test.js","sourceRoot":"./src/","sources":["modules/reviews-list/__tests__/review-card.test.tsx"],"names":[],"mappings":"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","sourcesContent":["import { Review } from '@msdyn365-commerce/commerce-entities';\nimport { buildMockCoreContext, ICoreContext } from '@msdyn365-commerce/core';\nimport { mount, render} from 'enzyme';\nimport * as React from 'react';\nimport {IReviewCardProps, IReviewCardResources, ReviewCard } from '../components/review-card';\n\ndescribe('Review card', () => {\n    let mockCoreContext: ICoreContext;\n    // const modalToggleRef = React.createRef<HTMLButtonElement>();\n    // const flushPromises = () => new Promise(setImmediate);\n\n    let onEditToggle: () => void;\n    let onReportToggle: () => void;\n    let updateHelpfullness: (reviewId: string, isHelpful: boolean) => void;\n\n    const resources: IReviewCardResources = {\n        wasReviewHelpfulText: 'Was this review helpful?',\n        yesButtonText: 'Like this review',\n        noButtonText: 'DislikeThisReview',\n        editReviewCardText: 'Edit',\n        reportedText: 'Reported',\n        reportConcernText: 'Report',\n        reviewRatingNarratorText: 'User Rating: {0} out of 5',\n    };\n\n    const review: Review =  {\n        reviewId: 'Review-1',\n        productId: 'product1',\n        userName: 'user1',\n        rating: 3.5,\n        market: 'US',\n        locale: 'en',\n        thoughtfulnessScore: 0,\n        helpfulPositive: 50,\n        helpfulNegative: 10,\n        reviewText:\n            'Lorem ipsum dolor sit amet, cu fugit copiosae quo, nam illud docendi iudicabit ex. ' +\n            'Menandri expetendis dissentiunt ut per, mea cu error adipiscing. At solum causae bonorum vis, pri dictas praesent ut, inermis suavitate expetendis quo at. ' +\n            'Per ea eruditi indoctum omittantur, sea ad exerci salutandi laboramus. Dico noluisse maiestatis in vel.',\n        title: 'Some title to test reviews card layout',\n        submittedDateTime: new Date('2019-03-04T19:52:10.044Z'),\n        isTakenDown: false,\n        violationsFound: false,\n        isPublished: true,\n        isRevised: false,\n        updatedSinceResponse: false\n    };\n\n    const reviewWithResponder: Review =  {\n        reviewId: 'Review-1',\n        productId: 'product1',\n        userName: 'user1',\n        rating: 3.5,\n        market: 'US',\n        locale: 'en',\n        thoughtfulnessScore: 0,\n        helpfulPositive: 50,\n        helpfulNegative: 10,\n        reviewText:\n            'Lorem ipsum dolor sit amet, cu fugit copiosae quo, nam illud docendi iudicabit ex. ' +\n            'Menandri expetendis dissentiunt ut per, mea cu error adipiscing. At solum causae bonorum vis, pri dictas praesent ut, inermis suavitate expetendis quo at. ' +\n            'Per ea eruditi indoctum omittantur, sea ad exerci salutandi laboramus. Dico noluisse maiestatis in vel.',\n        title: 'Some title to test reviews card layout',\n        submittedDateTime: new Date('2019-03-04T19:52:10.044Z'),\n        isTakenDown: false,\n        violationsFound: false,\n        userResponse: {\n            responseId: 'Response-1',\n            reviewId: 'Review-1',\n            responderName: 'Microsoft Store',\n            responseText:\n                'Hi there, Thanks you for taking the time to leave a review. Let us know how your experience at the Microsoft Store goes. If you have any other questions feel free to reach out to us on Twitter @Surface.',\n            isTakenDown: false,\n            violationsFound: false,\n            market: 'US',\n            locale: 'en',\n            submittedDateTime: new Date('2019-03-05T14:02:55.070Z'),\n            isPublic: true\n        },\n        isPublished: true,\n        isRevised: false,\n        updatedSinceResponse: false\n    };\n\n    let props: IReviewCardProps;\n\n    beforeEach(() => {\n        mockCoreContext = buildMockCoreContext({});\n        //   mockCoreContext.actionContext.requestContext.apiSettings.rnr = {id: 'rnrId', url: 'rnrUrl'};\n        onEditToggle = jest.fn();\n        onReportToggle = jest.fn();\n        updateHelpfullness = jest.fn();\n\n        props =  {\n            review: review,\n            resources: resources,\n            context:  mockCoreContext,\n            isUserReview: false,\n            parentId: 'foo',\n            parentType: 'bar',\n            toggleWriteReviewModal: onEditToggle,\n            toggleReportReviewModal: onReportToggle,\n            updateReviewHelpfulness: updateHelpfullness,\n            reportedReviewId: 'foo',\n            returnRef: React.createRef<HTMLButtonElement>(),\n            reportedReviews: [],\n            votedReviews: []\n        };\n    });\n\n    it('Returns the review card for unAuthenticated users correctly', () => {\n        const card = ReviewCard(props);\n        expect(card.cardProps).toMatchSnapshot();\n        expect(render(card.name)).toMatchSnapshot();\n        expect(render(card.rating)).toMatchSnapshot();\n        expect(render(card.date)).toMatchSnapshot();\n        expect(render(card.reviewTitle)).toMatchSnapshot();\n        expect(render(card.reviewText)).toMatchSnapshot();\n        expect(render(card.ratingHelpfulLabel)).toMatchSnapshot();\n        expect(render(card.like)).toMatchSnapshot();\n        expect(render(card.dislike)).toMatchSnapshot();\n        expect(card.edit).not.toBeDefined();\n        expect(render((card.report as React.ReactElement))).toMatchSnapshot();\n        expect(card.responseName).not.toBeDefined();\n        expect(card.responseText).not.toBeDefined();\n        expect(card.cardBodyProps).toMatchSnapshot();\n        expect(card.responseProps).toMatchSnapshot();\n        expect(card.reviewProps).toMatchSnapshot();\n        expect(card.controlsProps).toMatchSnapshot();\n    });\n\n    it('Returns the review card for authenticated users correctly', () => {\n        props.context.request.user.isAuthenticated = true;\n        const card = ReviewCard(props);\n        expect(card.cardProps).toMatchSnapshot();\n        expect(render(card.name)).toMatchSnapshot();\n        expect(render(card.rating)).toMatchSnapshot();\n        expect(render(card.date)).toMatchSnapshot();\n        expect(render(card.reviewTitle)).toMatchSnapshot();\n        expect(render(card.reviewText)).toMatchSnapshot();\n        expect(render(card.ratingHelpfulLabel)).toMatchSnapshot();\n        expect(render(card.like)).toMatchSnapshot();\n        expect(render(card.dislike)).toMatchSnapshot();\n        expect(card.edit).not.toBeDefined();\n        expect(render((card.report as React.ReactElement))).toMatchSnapshot();\n        expect(card.responseName).not.toBeDefined();\n        expect(card.responseText).not.toBeDefined();\n        expect(card.cardBodyProps).toMatchSnapshot();\n        expect(card.responseProps).toMatchSnapshot();\n        expect(card.reviewProps).toMatchSnapshot();\n        expect(card.controlsProps).toMatchSnapshot();\n    });\n\n    it('Returns the review card for user reviews correctly', () => {\n        props.context.request.user.isAuthenticated = true;\n        props.isUserReview = true;\n        const card = ReviewCard(props);\n        expect(card.cardProps).toMatchSnapshot();\n        expect(render(card.name)).toMatchSnapshot();\n        expect(render(card.rating)).toMatchSnapshot();\n        expect(render(card.date)).toMatchSnapshot();\n        expect(render(card.reviewTitle)).toMatchSnapshot();\n        expect(render(card.reviewText)).toMatchSnapshot();\n        expect(render(card.ratingHelpfulLabel)).toMatchSnapshot();\n        expect(render(card.like)).toMatchSnapshot();\n        expect(render(card.dislike)).toMatchSnapshot();\n        expect(card.report).not.toBeDefined();\n        expect(render((card.edit as React.ReactElement))).toMatchSnapshot();\n        expect(card.responseName).not.toBeDefined();\n        expect(card.responseText).not.toBeDefined();\n        expect(card.cardBodyProps).toMatchSnapshot();\n        expect(card.responseProps).toMatchSnapshot();\n        expect(card.reviewProps).toMatchSnapshot();\n        expect(card.controlsProps).toMatchSnapshot();\n    });\n\n    it('Returns the review card with responses correctly', () => {\n        props.review = reviewWithResponder;\n        const card = ReviewCard(props);\n        expect(card.cardProps).toMatchSnapshot();\n        expect(render(card.name)).toMatchSnapshot();\n        expect(render(card.rating)).toMatchSnapshot();\n        expect(render(card.date)).toMatchSnapshot();\n        expect(render(card.reviewTitle)).toMatchSnapshot();\n        expect(render(card.reviewText)).toMatchSnapshot();\n        expect(render(card.ratingHelpfulLabel)).toMatchSnapshot();\n        expect(render(card.like)).toMatchSnapshot();\n        expect(render(card.dislike)).toMatchSnapshot();\n        expect(card.edit).not.toBeDefined();\n        expect(render((card.report as React.ReactElement))).toMatchSnapshot();\n        expect(render((card.responseName as React.ReactElement))).toMatchSnapshot();\n        expect(render((card.responseText as React.ReactElement))).toMatchSnapshot();\n        expect(card.cardBodyProps).toMatchSnapshot();\n        expect(card.responseProps).toMatchSnapshot();\n        expect(card.reviewProps).toMatchSnapshot();\n        expect(card.controlsProps).toMatchSnapshot();\n    });\n\n    it('handles imprpoper dates', () => {\n        props.review = reviewWithResponder;\n        // @ts-ignore\n        props.review.submittedDateTime = 'foo';\n        let card = ReviewCard(props);\n        let date = mount(card.date);\n        expect(date.getDOMNode().textContent).toBe('foo');\n        date.unmount();\n\n        props.review.submittedDateTime = undefined;\n        card = ReviewCard(props);\n        date = mount(card.date);\n        expect(date.getDOMNode().textContent).toBe('');\n        date.unmount();\n    });\n});"]}