{"version":3,"file":"components.test.js","sourceRoot":"./src/","sources":["modules/reviews-list/__tests__/components.test.tsx"],"names":[],"mappings":"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","sourcesContent":["import { mount, render} from 'enzyme';\nimport * as React from 'react';\nimport { PageControls, ReviewCount } from '../components/components';\n\ndescribe('reviews list components', () => {\n    it('ReviewCount', () => {\n        const resources = {pageReviewCountText: 'Showing {0}-{1} out of {2} reviews'};\n        const component = render(<ReviewCount resources={resources} currentPage={2} reviewsCount={130} reviewsShownOnEachPage={10}/>);\n        expect(component).toMatchSnapshot();\n    });\n    describe('PageControls', () => {\n        const resources = {previousButtonText: 'Previous', nextButtonText: 'Next', pageReviewAriaLabel: 'Show {0}-{1} out of {2} reviews'};\n        const sortBy = {key: 'foo', value: 'bar'};\n        const filterBy = {key: 'troo', value: 'moo'};\n        let update = jest.fn();\n        const flushPromises = () => new Promise(setImmediate);\n\n        it('When there is a next and previos page', () => {\n            const component = render(<PageControls resources={resources} currentPage={2} reviewsCount={130} reviewsShownOnEachPage={10} selectedSortByOption={sortBy} selectedFilterByOption={filterBy} updateReviews={update}/>);\n            expect(component).toMatchSnapshot();\n        });\n\n        it('When there is no prevous page', () => {\n            const component = render(<PageControls resources={resources} currentPage={1} reviewsCount={130} reviewsShownOnEachPage={10} selectedSortByOption={sortBy} selectedFilterByOption={filterBy} updateReviews={update}/>);\n            expect(component).toMatchSnapshot();\n        });\n\n        it('When there is no next page', () => {\n            const component = render(<PageControls resources={resources} currentPage={3} reviewsCount={30} reviewsShownOnEachPage={10} selectedSortByOption={sortBy} selectedFilterByOption={filterBy} updateReviews={update}/>);\n            expect(component).toMatchSnapshot();\n        });\n\n        it('When there is one page', () => {\n            const component = render(<PageControls resources={resources} currentPage={1} reviewsCount={5} reviewsShownOnEachPage={10} selectedSortByOption={sortBy} selectedFilterByOption={filterBy} updateReviews={update}/>);\n            expect(component).toMatchSnapshot();\n        });\n\n        it('Calls update reviews when previous page is clicked', async () => {\n            update = jest.fn();\n            const component = mount(<PageControls resources={resources} currentPage={2} reviewsCount={125} reviewsShownOnEachPage={10} selectedSortByOption={sortBy} selectedFilterByOption={filterBy} updateReviews={update}/>);\n            const prev = component.find('button').at(0);\n            prev.simulate('click');\n            await flushPromises();\n            component.unmount();\n        });\n\n        it('Calls update reviews when next page is clicked', async () => {\n            update = jest.fn();\n            const component = mount(<PageControls resources={resources} currentPage={2} reviewsCount={130} reviewsShownOnEachPage={10} selectedSortByOption={sortBy} selectedFilterByOption={filterBy} updateReviews={update}/>);\n            const prev = component.find('button').at(1);\n            prev.simulate('click');\n            await flushPromises();\n            component.unmount();\n        });\n    });\n});"]}