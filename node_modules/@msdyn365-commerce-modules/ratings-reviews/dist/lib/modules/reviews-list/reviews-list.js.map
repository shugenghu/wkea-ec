{"version":3,"file":"reviews-list.js","sourceRoot":"./src/","sources":["modules/reviews-list/reviews-list.tsx"],"names":[],"mappings":"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","sourcesContent":["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nimport { getRnrAuthEndpointId, getRnrEndpointId, getRnrPartnerId, getSelectedProductIdFromActionInput } from '@msdyn365-commerce-modules/retail-actions';\nimport { format, getTelemetryObject, ILabeledDropdownOnChangeNotification, ILabeledDropdownOption, IModuleProps, INodeProps, ITelemetryContent, LabeledDropdown } from '@msdyn365-commerce-modules/utilities';\nimport { Review } from '@msdyn365-commerce/commerce-entities';\nimport { RatingComponent } from '@msdyn365-commerce/components';\nimport * as Msdyn365 from '@msdyn365-commerce/core';\nimport { SimpleProduct } from '@msdyn365-commerce/retail-proxy';\nimport classname from 'classnames';\nimport { reaction } from 'mobx';\nimport { observer } from 'mobx-react';\nimport * as React from 'react';\nimport { getReviewsForGivenProduct } from '../../actions/get-product-reviews';\nimport { GetProductReviewsInput } from '../../actions/inputs/get-product-reviews-input';\nimport { ReportReviewConcernInput, ReviewConcernCategory } from '../../actions/inputs/report-review-concern-input';\nimport { SubmitHelpfulnessVoteInput } from '../../actions/inputs/submit-helpfulness-vote-input';\nimport reportReviewConcern from '../../actions/report-review-concern';\nimport submitHelpfulnessVote from '../../actions/submit-helpfulness-vote';\nimport { IReviewModalViewProps, ReviewModal, submitReview } from '../../common/review-modal';\nimport { IRnrKeyValuePair, IRnrOrderByKeyValuePair } from '../../common/rnrInterface';\nimport { PageControls, ReviewCount } from './components/components';\nimport { IReportReviewModalViewProps, ReportReviewModal } from './components/report-review-modal';\nimport { IReviewCardViewProps, ReviewCard } from './components/review-card';\nimport { IReviewsListData } from './reviews-list.data';\nimport { IReviewsListProps } from './reviews-list.props.autogenerated';\n\nexport interface IReviewsListState {\n    skipItems: number;\n    listOfReviews: Review[];\n    currentPage: number;\n    reviewsCount: number;\n    showSpinner: boolean;\n    isFilterApplied: boolean;\n    selectedSortByOption: ILabeledDropdownOption;\n    selectedFilterByOption: ILabeledDropdownOption;\n    userReviewRating: number;\n    userReviewTitle: string;\n    userReviewText: string;\n    isReviewModalOpen: boolean;\n    hasReviewError: boolean;\n    isReportModalOpen: boolean;\n    hasReportError: boolean;\n    reportingReviewId: string;\n    reportedKey: string;\n    reported: boolean;\n    reportedReviews: string[];\n    votedReviews: {reviewId: string; approved: boolean}[];\n}\n\nexport interface IReviewsListCallbacks {\n    toggleModal(): void;\n    updateReviewTitle(title: string): void;\n    updateReviewText(text: string): void;\n    updateRating(rating: number): void;\n    onReviewSubmitted(isSuccessful: boolean): void;\n    submitReview(product: SimpleProduct, title: string, text: string, rating: number, context: Msdyn365.ICoreContext, userReview?: Review, onReviewSubmission?: (isSuccessful: boolean) => void): void;\n    updateReviewHelpfulnessVote(reviewId: string, isHelpful: boolean): void;\n    toggleReportModal(reviewId: string): void;\n    reportReview(reviewId: string, reportedKey: string): void;\n    updateSortByDropdown(notification: ILabeledDropdownOnChangeNotification): void;\n    updateFilterByDropdown(notification: ILabeledDropdownOnChangeNotification): void;\n    updateReviews(skipItems: number, selectedSortByOption: ILabeledDropdownOption, selectedFilterByOption: ILabeledDropdownOption, currentPage: number, isFilterApplied: boolean): void;\n}\n\nexport interface IReviewsListViewProps extends IReviewsListProps<IReviewsListData> {\n    state: IReviewsListState;\n    className: string;\n    callbacks: IReviewsListCallbacks;\n    moduleProps: IModuleProps;\n    reviewModal: IReviewModalViewProps;\n    reportReviewModal: IReportReviewModalViewProps;\n    sortByDropdown: React.ReactNode;\n    filterByDropdown: React.ReactNode;\n    averageRating: React.ReactNode;\n    reviewCount: React.ReactElement;\n    refineReviewsProps: INodeProps;\n    reviewsListProps: INodeProps;\n    reviewCards: IReviewCardViewProps[];\n    userReview?: IReviewCardViewProps;\n    pageControls: React.ReactNode;\n    noReviewsMessage: React.ReactElement;\n    noReviewsWithFilterMessage: React.ReactElement;\n    heading: React.ReactNode;\n    sortByOptions: IRnrOrderByKeyValuePair[];\n    filterByOptions: IRnrOrderByKeyValuePair[];\n}\n\n/**\n *\n * ReviewsList component\n * @extends {React.Component<IReviewsListProps<IReviewsListData>, IReviewsListState>}\n */\n@observer\nclass ReviewsList extends React.Component<IReviewsListProps<IReviewsListData>, IReviewsListState> {\n    public sortByDropdownOptions: IRnrOrderByKeyValuePair[] = [\n        { key: 'MostHelpful', value: this.props.resources.mostHelpfulSortOptionText },\n        { key: 'MostRecent', value: this.props.resources.mostRecentSortOptionText },\n        { key: 'HighestRating', value: this.props.resources.highestRatedSortOptionText },\n        { key: 'LowestRating', value: this.props.resources.lowestRatedSortOptionText }\n    ];\n\n    public filterByDropdownOptions: IRnrKeyValuePair[] = [\n        { key: '1;2;3;4;5', value: this.props.resources.allRatinsFilterByOptionText },\n        { key: '5', value: this.props.resources.fiveStarFilterByOptionText },\n        { key: '4', value: this.props.resources.fourStarFilterByOptionText },\n        { key: '3', value: this.props.resources.threeStarFilterByOptionText },\n        { key: '2', value: this.props.resources.twoStarFilterByOptionText },\n        { key: '1', value: this.props.resources.oneStarFilterByOptionText }\n    ];\n\n    private _userReviewModalToggle: React.RefObject<HTMLButtonElement>;\n    private _userReportModalToggle: React.RefObject<HTMLButtonElement>;\n    private telemetryContent?: ITelemetryContent;\n\n    constructor(props: IReviewsListProps<IReviewsListData>) {\n        super(props);\n        const {userReview: {result: userReview}} = this.props.data;\n\n        this.state = {\n            skipItems: 0,\n            reviewsCount: 0,\n            listOfReviews: [],\n            currentPage: 1,\n            showSpinner: false,\n            isFilterApplied: false,\n            selectedSortByOption: this.sortByDropdownOptions[0],\n            selectedFilterByOption: this.filterByDropdownOptions[0],\n            userReviewRating: userReview ? userReview.rating : 0,\n            userReviewText: userReview ? userReview.reviewText : '',\n            userReviewTitle: userReview ? userReview.title : '',\n            isReviewModalOpen: false,\n            hasReviewError: false,\n            isReportModalOpen: false,\n            hasReportError: false,\n            reported: false,\n            reportedKey: ReviewConcernCategory.SpamAdvertising,\n            reportingReviewId: '',\n            reportedReviews: [],\n            votedReviews: []\n        };\n\n        this._userReviewModalToggle = React.createRef<HTMLButtonElement>();\n        this._userReportModalToggle = React.createRef<HTMLButtonElement>();\n        this.telemetryContent = getTelemetryObject(this.props.context.request.telemetryPageName!, this.props.friendlyName, this.props.telemetry);\n    }\n\n    public componentDidMount(): void {\n        this.props.data.reviewsList.then((reviewsList) => {\n            if (\n                reviewsList &&\n                reviewsList.pagingInfo &&\n                reviewsList.pagingInfo.totalItems &&\n                reviewsList.items &&\n                reviewsList.items.length > 0\n            ) {\n                this.setState({\n                    listOfReviews: reviewsList.items,\n                    reviewsCount: reviewsList.pagingInfo.totalItems,\n                });\n            }\n        });\n\n        reaction(\n            () => this.props.data.ratingsReviewsState.result && this.props.data.ratingsReviewsState.result.filterKey,\n            async (filterKey: string | undefined) => {\n                const filterKeyValue = Number(filterKey);\n                const dropdownItemsCount = this.filterByDropdownOptions.length;\n                if (\n                    !!filterKey &&\n                    !isNaN(filterKeyValue) &&\n                    filterKeyValue < dropdownItemsCount\n                ) {\n                    const filterByOption = this.filterByDropdownOptions.find((option: IRnrKeyValuePair) => option.key === filterKey);\n                    if (!filterByOption) {\n                        this.props.telemetry.warning(`[reviews-list] cannot find filter with key ${filterKey}`);\n                    } else {\n                        await this.updateReviews(0, this.state.selectedSortByOption, filterByOption, 1, true);\n                        const selectedIndex = dropdownItemsCount - filterKeyValue;\n                        this.setState({\n                            selectedFilterByOption: this.filterByDropdownOptions[selectedIndex]\n                        });\n                    }\n                }\n            }\n        );\n    }\n\n    public render(): JSX.Element | null {\n        const {className, heading, reviewsShownOnEachPage} = this.props.config;\n        const {currentPage, reviewsCount, selectedFilterByOption, selectedSortByOption } = this.state;\n        const { ratingsSummary: { result: ratingsSummary } } = this.props.data;\n        const resources = this.props.resources;\n        const completeClass = classname('ms-reviews-list', className);\n        const viewProps: IReviewsListViewProps = {\n            ...this.props,\n            state: this.state,\n            className: completeClass,\n            moduleProps: {\n                moduleProps: this.props,\n                className: completeClass\n            },\n            callbacks: this.reviewsListCallbacks,\n            reviewModal: this._userReviewModal(),\n            reportReviewModal: this._reportReviewModal(),\n            filterByDropdown: (\n                                <LabeledDropdown\n                                    labelText={resources.filterByDropdownText}\n                                    dropdownId='reviewsListFilterBy'\n                                    dropdownOptions={this.filterByDropdownOptions}\n                                    selectedOption={selectedFilterByOption}\n                                    onSelectOption={this.updateFilterByDropdown}\n                                    controlledByParent={true}\n                                />\n            ),\n            sortByDropdown: <LabeledDropdown labelText={resources.sortByDropdownText} dropdownId='reviewsListSortBy' dropdownOptions={this.sortByDropdownOptions} selectedOption={selectedSortByOption} onSelectOption={this.updateSortByDropdown}/>,\n            averageRating: ratingsSummary && (\n                <RatingComponent\n                    avgRating={ratingsSummary.averageRating || 0}\n                    readOnly={true}\n                    ariaLabel={format(resources.averageRatingAriaLabel, ratingsSummary.averageRating, '5')}\n                    ratingCount={`${ratingsSummary.reviewsCount}`}\n                    data={{}}\n                    context={this.props.context}\n                    id={this.props.id}\n                    typeName={this.props.typeName}\n                />\n            ),\n            reviewCount: <ReviewCount resources={{...this.props.resources}} currentPage={currentPage} reviewsCount={reviewsCount} reviewsShownOnEachPage={reviewsShownOnEachPage}/>,\n            refineReviewsProps: {className: 'ms-reviews-list__refiners'},\n            reviewsListProps: {className: 'ms-reviews-list__reviews'},\n            reviewCards: this._reviewCards(this.state.listOfReviews),\n            userReview: this._userReview(),\n            pageControls: (\n                        <PageControls\n                            resources={{...this.props.resources}}\n                            currentPage={currentPage}\n                            reviewsShownOnEachPage={reviewsShownOnEachPage}\n                            selectedSortByOption={selectedSortByOption}\n                            selectedFilterByOption={selectedFilterByOption}\n                            updateReviews={this.updateReviews}\n                            reviewsCount={reviewsCount}\n                            telemetryContent={this.telemetryContent}\n                        />),\n            noReviewsMessage: <span className='ms-reviews-list__empty-message' aria-live='polite'>{resources.noReviewsMessage}</span>,\n            noReviewsWithFilterMessage: <span className='ms-reviews-list__filter-message' aria-live='polite'>{resources.noReviewsWithSelectedFilterMessage}</span>,\n            heading: heading && (\n                <Msdyn365.Text\n                    className='ms-reviews-list__heading'\n                    tag={heading.tag || 'h2'}\n                    text={heading.text}\n                    editProps={{onEdit:this.handleHeadingChange, requestContext: this.props.context.request}}\n                />\n            ),\n            sortByOptions: this.sortByDropdownOptions,\n            filterByOptions: this.filterByDropdownOptions\n        } as IReviewsListViewProps;\n\n        return this.props.renderView(viewProps) as React.ReactElement;\n    }\n\n    public handleHeadingChange = (event: Msdyn365.ContentEditableEvent) => this.props.config.heading!.text = event.target.value;\n\n    private _userReview = () => {\n        const userReview = this.props.data.userReview.result;\n\n        return userReview && this._reviewCard(userReview, true);\n    }\n\n    private _reviewCards = (reviewList: Review[]) => {\n        const userReview = this.props.data.userReview.result;\n        const reviewElements: IReviewCardViewProps[] = [];\n\n        for (const review of reviewList) {\n            if (!review.isTakenDown && review.isPublished && userReview ? review.reviewId !== userReview.reviewId : true) {\n                reviewElements.push(this._reviewCard(review, false));\n            }\n        }\n        return reviewElements;\n    };\n\n    private _reviewCard = (review: Review, userReview: boolean): IReviewCardViewProps => {\n        return ReviewCard({\n            review: review,\n            resources: {...this.props.resources},\n            context:  this.props.context,\n            isUserReview: userReview,\n            parentId: this.props.id,\n            parentType: this.props.typeName,\n            reportedReviews: this.state.reportedReviews,\n            returnRef: this._userReportModalToggle,\n            reportedReviewId: this.state.reportingReviewId,\n            toggleWriteReviewModal: this._toggleReviewModal,\n            toggleReportReviewModal: this._onReportModalOpen,\n            updateReviewHelpfulness: this.updateReviewHelpfulnessVote,\n            votedReviews: this.state.votedReviews\n        });\n    }\n\n    private _userReviewModal = (): IReviewModalViewProps => {\n        return ReviewModal({\n            userReview: this.props.data.userReview.result,\n            product: this.props.data.product.result,\n            resources: {...this.props.resources},\n            context: this.props.context,\n            parentId: this.props.id,\n            parentType: this.props.typeName,\n            isOpen: this.state.isReviewModalOpen,\n            rating: this.state.userReviewRating,\n            reviewTitle: this.state.userReviewTitle,\n            reviewText: this.state.userReviewText,\n            onModalToggle: this._toggleReviewModal,\n            onTitleChange: this._onTitleChange,\n            onTextChange: this._onTextChange,\n            onRatingChange: this._onRatingChange,\n            onReviewComplete: this._onReviewComplete,\n            renderContextId: 'writeReview-list',\n            returnRef: this._userReviewModalToggle,\n            hasError: this.state.hasReviewError\n        });\n    }\n\n    private _onTitleChange = (event: React.ChangeEvent<HTMLInputElement>): void => {\n        this.reviewsListCallbacks.updateReviewTitle(event.target.value);\n    }\n\n    private _onTextChange = (event: React.ChangeEvent<HTMLTextAreaElement>): void => {\n        this.reviewsListCallbacks.updateReviewText(event.target.value);\n    }\n\n    private _onRatingChange = (value: number): void => {\n        this.reviewsListCallbacks.updateRating(value);\n    }\n\n    private _toggleReviewModal = (): void => {\n        const userReview = this.props.data.userReview.result;\n        if (this.state.isReviewModalOpen) {\n            this.setState({isReviewModalOpen: false, hasReviewError: false});\n\n        } else {\n            this.setState({\n                isReviewModalOpen: true,\n                userReviewText: userReview!.reviewText,\n                userReviewTitle: userReview!.title,\n                userReviewRating: userReview!.rating\n            });\n        }\n    }\n\n    private _onReviewComplete = (isSuccess: boolean): void => {\n        if (isSuccess) {\n            this.setState({isReviewModalOpen: false, hasReviewError: false});\n        } else {\n            this.setState({hasReviewError: true});\n        }\n    }\n\n    private _reportReviewModal = () => {\n        return ReportReviewModal({\n            resources: {...this.props.resources},\n            context:  this.props.context,\n            isOpen: this.state.isReportModalOpen,\n            returnRef: this._userReportModalToggle,\n            reportedKey: this.state.reportedKey,\n            onModalToggle: this._onReportModalClose,\n            onRadioChange: this._onRadioChange,\n            reportReview: this._reportReview,\n            hasError: this.state.hasReportError,\n            telemetryContent: this.telemetryContent\n        });\n    }\n\n    private _onReportModalOpen = (reviewId: string) => {\n        this.setState({isReportModalOpen: true, reportingReviewId: reviewId, reported: false, reportedKey: ReviewConcernCategory.SpamAdvertising});\n    }\n\n    private _onReportModalClose = () => {\n        this.setState({isReportModalOpen: false, hasReportError: false});\n    }\n\n    private _onRadioChange = (event: React.ChangeEvent<HTMLInputElement>) => {\n        this.setState({reportedKey: event.currentTarget.getAttribute('data-key') || ''});\n    }\n\n    private _reportReviewCallback = (reviewId: string, reportedKey: string) => {\n        reportReviewConcern(\n            new ReportReviewConcernInput(\n                reviewId,\n                getRnrPartnerId(this.props.context.actionContext),\n                this.props.context.request.locale,\n                reportedKey,\n                this.getUserToken(this.props.context.request),\n                getRnrAuthEndpointId(this.props.context.actionContext)\n            ),\n            this.props.context.actionContext\n        ).then(_value => {\n            const reportedReview = this.state.reportedReviews;\n            reportedReview.push(reviewId);\n            this.setState({reported: true, reportedReviews: reportedReview, hasReportError: false});\n        }).catch(_value => {\n            this.setState({hasReportError: true});\n        });\n    }\n\n    private _reportReview = () => {\n        this._reportReviewCallback(this.state.reportingReviewId, this.state.reportedKey);\n    }\n\n    private updateSortByDropdown = async (notification: ILabeledDropdownOnChangeNotification) => {\n        await this.updateReviews(0, notification.selectedOption, this.state.selectedFilterByOption, 1, this.state.isFilterApplied);\n    };\n\n    private updateFilterByDropdown = async (notification: ILabeledDropdownOnChangeNotification) => {\n        await this.updateReviews(0, this.state.selectedSortByOption, notification.selectedOption, 1, true);\n    };\n\n    private updateReviews = async (\n        skipItems: number | 0,\n        selectedSortByOption: ILabeledDropdownOption,\n        selectedFilterByOption: ILabeledDropdownOption,\n        currentPage: number,\n        isFilterApplied: boolean\n    ) => {\n        // @ts-ignore\n        const productId = getSelectedProductIdFromActionInput(this.props.context.actionContext);\n        if (productId === undefined) {\n            return;\n        }\n        const result = await getReviewsForGivenProduct(\n            // Task #211227597 Remove this hardcoded values.\n            new GetProductReviewsInput(\n                productId,\n                getRnrPartnerId(this.props.context.actionContext),\n                this.props.context.request.locale,\n                getRnrEndpointId(this.props.context.actionContext),\n                selectedSortByOption.key,\n                selectedFilterByOption.key,\n                skipItems < 0 ? 0 : skipItems\n            ),\n            this.props.context.actionContext\n        );\n        if (result && result.items && result.pagingInfo && result.pagingInfo.totalItems !== undefined) {\n            this.setState({\n                currentPage: currentPage,\n                listOfReviews: result.items,\n                selectedSortByOption,\n                selectedFilterByOption,\n                reviewsCount: result.pagingInfo.totalItems,\n                isFilterApplied: isFilterApplied\n            });\n        }\n    };\n\n    private _updateVoteUi = (reviewId: string, isHelpful: boolean): void => {\n        let alreadyExists = false;\n        let list = this.state.votedReviews.map((review) => {\n            if(review.reviewId === reviewId) {\n                review.approved = isHelpful;\n                alreadyExists = true;\n            }\n            return review;\n        });\n\n        if (!alreadyExists) {\n            list = list.concat({reviewId: reviewId, approved: isHelpful});\n        }\n\n        this.setState({votedReviews: list});\n    }\n\n    private updateReviewHelpfulnessVote = (reviewId: string, isHelpful: boolean): void => {\n        submitHelpfulnessVote(\n            new SubmitHelpfulnessVoteInput(\n                reviewId,\n                getRnrPartnerId(this.props.context.actionContext),\n                this.props.context.request.locale,\n                isHelpful,\n                this.getUserToken(this.props.context.request),\n                getRnrAuthEndpointId(this.props.context.actionContext)\n            ),\n            this.props.context.actionContext\n        ).then(() => {\n            this._updateVoteUi(reviewId, isHelpful);\n        });\n    };\n\n    private getUserToken = (context: Msdyn365.IRequestContext): string => {\n        return context && context.user && context.user.token;\n    };\n\n    // tslint:disable-next-line\n    private reviewsListCallbacks: IReviewsListCallbacks = {\n        updateReviewTitle: (title: string): void => {\n            this.setState({userReviewTitle: title});\n        },\n        updateReviewText: (text: string): void => {\n            this.setState({userReviewText: text});\n        },\n        updateRating: (rating: number): void => {\n            this.setState({userReviewRating: rating});\n        },\n        onReviewSubmitted: (isSuccessful: boolean): void => {\n            if (isSuccessful) {\n                this.setState({isReviewModalOpen: false, hasReviewError: false});\n            } else {\n                this.setState({hasReviewError: true});\n            }\n        },\n        submitReview: submitReview,\n        toggleModal: this._toggleReviewModal,\n        updateReviewHelpfulnessVote: this.updateReviewHelpfulnessVote,\n        toggleReportModal: (reviewId: string): void => {\n            this.state.isReportModalOpen? this._onReportModalOpen(reviewId) : this._onReportModalClose();\n        },\n        reportReview: this._reportReviewCallback,\n        updateFilterByDropdown: this.updateFilterByDropdown,\n        updateSortByDropdown: this.updateSortByDropdown,\n        updateReviews: this.updateReviews\n    };\n}\n\nexport default ReviewsList;\n"]}