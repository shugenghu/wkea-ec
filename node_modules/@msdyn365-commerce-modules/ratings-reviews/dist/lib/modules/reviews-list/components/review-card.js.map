{"version":3,"file":"review-card.js","sourceRoot":"./src/","sources":["modules/reviews-list/components/review-card.tsx"],"names":[],"mappings":"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","sourcesContent":["import { Button, format, INodeProps } from '@msdyn365-commerce-modules/utilities';\nimport { Review } from '@msdyn365-commerce/commerce-entities';\nimport {RatingComponent} from '@msdyn365-commerce/components';\nimport { IAny, ICoreContext, IGeneric} from '@msdyn365-commerce/core';\nimport React from 'react';\nimport { TOGGLE_EDIT_MODAL_BUTTON_CARD_ID } from '../../../common/rnrInterface';\n\nexport interface IReviewCardResources {\n    wasReviewHelpfulText: string;\n    yesButtonText: string;\n    noButtonText: string;\n    editReviewCardText: string;\n    reportedText: string;\n    reportConcernText: string;\n    reviewRatingNarratorText: string;\n}\n\nexport interface IReviewCardProps {\n    review: Review;\n    resources: IReviewCardResources;\n    context:  ICoreContext<IGeneric<IAny>>;\n    isUserReview?: boolean;\n    parentId: string;\n    parentType: string;\n    reportedReviews: string[];\n    returnRef: React.RefObject<HTMLButtonElement> | undefined;\n    reportedReviewId: string;\n    votedReviews: {reviewId: string; approved: boolean}[];\n    toggleWriteReviewModal?(): void;\n    toggleReportReviewModal(reviewId: string): void;\n    updateReviewHelpfulness(reviewId: string, isHelpful: boolean): void;\n}\n\nexport interface IReviewCardViewProps {\n    cardProps: INodeProps;\n    name: React.ReactElement;\n    rating: React.ReactElement;\n    date: React.ReactElement;\n    reviewTitle: React.ReactElement;\n    reviewText: React.ReactElement;\n    ratingHelpfulLabel: React.ReactElement;\n    like: React.ReactElement;\n    dislike: React.ReactElement;\n    edit: React.ReactNode;\n    report: React.ReactNode;\n    responseName: React.ReactNode;\n    responseDate: React.ReactNode;\n    responseText: React.ReactNode;\n    cardBodyProps: INodeProps;\n    responseProps: INodeProps;\n    reviewProps: INodeProps;\n    controlsProps: INodeProps;\n    headerProps: INodeProps;\n}\n\n/**\n * Review card component\n */\n\nexport const ReviewCard = (props: IReviewCardProps):IReviewCardViewProps  => {\n    const className = props.isUserReview ? 'ms-reviews-list__card ms-reviews-list__user-review' : 'ms-reviews-list__card';\n    return {\n        cardProps: { className: className, key: props.review.reviewId },\n        name: <p className='ms-reviews-list__name'>{props.review.userName}</p>,\n        rating: rating(props),\n        date: <p className='ms-reviews-list__date'>{renderDate(props, props.review.submittedDateTime)}</p>,\n        reviewTitle: <h4 className='ms-reviews-list__title'>{props.review.title}</h4>,\n        reviewText: <p className='ms-reviews-list__text'>{props.review.reviewText}</p>,\n        ratingHelpfulLabel: <p className='ms-reviews-list__helpful'>{props.resources.wasReviewHelpfulText}</p>,\n        like: voteHelpfulButton(props, true),\n        dislike: voteHelpfulButton(props, false),\n        edit: editButton(props),\n        report: reportToggle(props),\n        responseName: props.review.userResponse ? <p className='ms-reviews-list__response-name'>{props.review.userResponse.responderName}</p> : undefined,\n        responseText: props.review.userResponse ? <p className='ms-reviews-list__response-text'>{props.review.userResponse.responseText}</p> : undefined,\n        responseDate: props.review.userResponse ? <p className='ms-reviews-list__response-date'>{renderDate(props, props.review.userResponse.submittedDateTime)}</p> : undefined,\n        cardBodyProps: { className: 'ms-reviews-list__card-body' },\n        responseProps: { className: 'ms-reviews-list__response' },\n        reviewProps: { className: 'ms-reviews-list__review' },\n        controlsProps: { className: 'ms-reviews-list__card-controls' },\n        headerProps: { className: 'ms-reviews-list__card-header' }\n    };\n};\n\nconst rating = (props: IReviewCardProps) => {\n    return(\n        <RatingComponent\n            readOnly={true}\n            avgRating={props.review.rating}\n            ariaLabel={format(props.resources.reviewRatingNarratorText || '', props.review.rating, '5')}\n            context={props.context}\n            className='ms-reviews-list__rating'\n            id={props.parentId}\n            typeName={props.parentType}\n            data={{}}\n        />\n    );\n};\n\nconst isVotedFor = (props: IReviewCardProps, isHelpful: boolean): boolean => {\n    for (let i = 0; i < props.votedReviews.length; i++) {\n        if(props.votedReviews[i].reviewId === props.review.reviewId) {\n            return props.votedReviews[i].approved === isHelpful;\n        }\n    }\n\n    return false;\n};\n\nconst voteHelpfulButton = (props: IReviewCardProps, isHelpful: boolean) => {\n    const isVoted = isVotedFor(props, isHelpful);\n    const isDisabled = props.isUserReview || isVoted ? 'disabled' : '';\n    let className = isHelpful ? 'ms-reviews-list__like' : 'ms-reviews-list__dislike';\n    className = `${className} ${isDisabled}`;\n    const label = isHelpful ? props.resources.yesButtonText : props.resources.noButtonText;\n    let voteCount = (isHelpful ? props.review.helpfulPositive : props.review.helpfulNegative) || 0;\n    voteCount = isVoted ? voteCount + 1 : voteCount;\n    const title = `(${voteCount})`;\n    const user = props.context.request.user;\n    const onClickMethod = () => {props.updateReviewHelpfulness(props.review.reviewId!, isHelpful);};\n    const onClick= isDisabled  ? undefined : onClickMethod;\n\n    if (user.isAuthenticated) {\n        return <Button aria-label={label} className={className} title={title} onClick={onClick}>{title}</Button>;\n    }\n    return <Button href={user.signInUrl} aria-label={label} className={className} title={title} tag='a'>{title}</Button>;\n};\n\nconst editButton = (props: IReviewCardProps) => {\n    if (props.isUserReview) {\n        return <Button id={TOGGLE_EDIT_MODAL_BUTTON_CARD_ID} className='ms-reviews-list__edit' onClick={props.toggleWriteReviewModal}>{props.resources.editReviewCardText}</Button>;\n    }\n\n    return undefined;\n};\n\nconst renderDate = (props: IReviewCardProps, date?: Date): string | Date => {\n    if (!date) {\n        return '';\n    }\n\n    try {\n        return new Intl.DateTimeFormat(props.context.request.locale, {month: 'long', day: 'numeric', year: 'numeric'}).format(new Date(date));\n    } catch {\n        return date;\n    }\n};\n\nconst reportToggle = (props: IReviewCardProps) => {\n    const user = props.context.request.user;\n    if (props.isUserReview) {\n        return undefined;\n    } else if (!user.isAuthenticated) {\n        return <Button href={user.signInUrl} className='ms-reviews-list__report' tag='a'> {props.resources.reportConcernText}</Button>;\n    }\n\n    if (props.reportedReviews.indexOf(props.review.reviewId!) > -1) {\n        return <p className='ms-reviews-list__reported'>{props.resources.reportedText}</p>;\n    }\n\n    const ref = props.review.reviewId === props.reportedReviewId ? props.returnRef : undefined;\n    const onClick = () => {props.toggleReportReviewModal(props.review.reviewId!);};\n    return <Button className='ms-reviews-list__report' onClick={onClick} innerRef={ref}>{props.resources.reportConcernText}</Button>;\n\n};"]}