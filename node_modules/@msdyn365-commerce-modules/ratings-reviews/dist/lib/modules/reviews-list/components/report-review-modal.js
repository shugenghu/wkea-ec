import { Alert, getPayloadObject, getTelemetryAttributes, Modal, ModalBody, ModalFooter, ModalHeader, TelemetryConstant } from '@msdyn365-commerce-modules/utilities';
import React from 'react';
let reportConcernDropdownOptions;
export const ReportReviewModal = (props) => {
    const payLoad = getPayloadObject('click', props.telemetryContent, TelemetryConstant.SubmitReview);
    const submitReviewAttribute = getTelemetryAttributes(props.telemetryContent, payLoad);
    payLoad.contentAction.etext = TelemetryConstant.SuccessButton;
    const successAttribute = getTelemetryAttributes(props.telemetryContent, payLoad);
    payLoad.contentAction.etext = TelemetryConstant.Cancel;
    const cancelAttribute = getTelemetryAttributes(props.telemetryContent, payLoad);
    reportConcernDropdownOptions = [
        { key: "8", value: props.resources.reportSpamText },
        { key: "1", value: props.resources.offensiveContentText },
        { key: "9", value: props.resources.profanityContentText }
    ];
    return {
        modal: { tag: Modal, className: 'ms-report-review-modal', toggle: props.onModalToggle, applicationNode: 'renderPage', isOpen: props.isOpen, returnFocusRef: props.returnRef },
        modalHeader: { tag: ModalHeader, toggle: props.onModalToggle, className: 'ms-report-review-modal-header' },
        modalFooter: { tag: ModalFooter, className: 'ms-report-review-modal-footer' },
        modalBody: { tag: ModalBody, className: 'ms-report-review-modal-body' },
        header: React.createElement("p", { className: 'ms-reviews-list__report-header' }, props.resources.reportConcernText),
        headerSubmitted: React.createElement("p", { className: 'ms-reviews-list__report-header' }, props.resources.feedbackThankYouText),
        cancelButton: React.createElement("button", Object.assign({ className: 'msc-btn ms-reviews-list__cancel', onClick: props.onModalToggle }, cancelAttribute), props.resources.cancelReportReviewText),
        submitButton: React.createElement("button", Object.assign({ className: 'msc-btn ms-reviews-list__submit', onClick: props.reportReview }, submitReviewAttribute),
            " ",
            props.resources.reportReviewButtonText || 'Report'),
        succesfulButton: React.createElement("button", Object.assign({ className: 'msc-btn ms-reviews-list__success', onClick: props.onModalToggle }, successAttribute), props.resources.okReportReviewText),
        reportMessage: React.createElement("p", { className: 'ms-reviews-list__report-message' }, props.resources.reportModalMessage),
        reportSubmittedMessage: React.createElement("p", { className: 'ms-reviews-list__report-message' }, props.resources.reportSubmittedMessage),
        radioButtons: radioPairs(props),
        error: React.createElement(Alert, { className: 'ms-reviews-list__report-error', isOpen: props.hasError, color: 'danger' }, props.resources.errorMessageText)
    };
};
const radioPairs = (props) => {
    const pairs = [];
    for (const option of reportConcernDropdownOptions) {
        const inputId = `report-review-${option.key}`;
        const checked = option.key === props.reportedKey;
        pairs.push(React.createElement("div", { className: 'ms-report-review-modal-pair', key: option.key },
            React.createElement("input", { className: 'msc-radio-input', type: 'radio', name: 'report-error', id: inputId, "data-key": option.key, value: option.value, checked: checked, "aria-checked": checked, onChange: props.onRadioChange }),
            React.createElement("label", { className: 'msc-radio-label', htmlFor: inputId }, option.value)));
    }
    return (React.createElement("fieldset", null, pairs));
};
//# sourceMappingURL=report-review-modal.js.map