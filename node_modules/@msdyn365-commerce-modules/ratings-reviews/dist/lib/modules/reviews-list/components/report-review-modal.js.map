{"version":3,"file":"report-review-modal.js","sourceRoot":"./src/","sources":["modules/reviews-list/components/report-review-modal.tsx"],"names":[],"mappings":"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","sourcesContent":["import {\n    Alert,\n    getPayloadObject,\n    getTelemetryAttributes,\n    INodeProps,\n    ITelemetryContent,\n    Modal,\n    ModalBody,\n    ModalFooter,\n    ModalHeader,\n    TelemetryConstant\n} from '@msdyn365-commerce-modules/utilities';\nimport { IAny, ICoreContext, IGeneric} from '@msdyn365-commerce/core';\nimport React from 'react';\nimport { ReviewConcernCategory } from '../../../actions/inputs/report-review-concern-input';\nimport { IRnrKeyValuePair } from '../../../common/rnrInterface';\n\nexport interface IReportReviewModalProps {\n    resources: IReportReviewModalResources;\n    context:  ICoreContext<IGeneric<IAny>>;\n    isOpen: boolean;\n    returnRef: React.RefObject<HTMLButtonElement> | undefined;\n    reportedKey: string;\n    hasError: boolean;\n    telemetryContent?: ITelemetryContent;\n    onModalToggle():void;\n    onRadioChange(event: React.ChangeEvent<HTMLInputElement>): void;\n    reportReview(): void;\n}\n\nexport interface IReportReviewModalResources {\n    reportConcernText: string;\n    feedbackThankYouText: string;\n    reportModalMessage: string;\n    reportSubmittedMessage: string;\n    reportSpamText: string;\n    offensiveContentText: string;\n    profanityContentText: string;\n    okReportReviewText: string;\n    cancelReportReviewText: string;\n    reportReviewButtonText: string;\n    errorMessageText: string;\n}\n\nexport interface IReportReviewModalViewProps {\n    modal: INodeProps;\n    modalHeader: INodeProps;\n    modalFooter: INodeProps;\n    modalBody: INodeProps;\n    header: React.ReactElement;\n    headerSubmitted: React.ReactElement;\n    cancelButton: React.ReactElement;\n    submitButton: React.ReactElement;\n    succesfulButton: React.ReactElement;\n    reportMessage: React.ReactElement;\n    reportSubmittedMessage: React.ReactElement;\n    radioButtons: React.ReactElement;\n    error: React.ReactElement;\n}\n\nlet reportConcernDropdownOptions: IRnrKeyValuePair[];\n\n/**\n * CartLineItems component\n */\n\nexport const ReportReviewModal = (props: IReportReviewModalProps):IReportReviewModalViewProps  => {\n\n    const payLoad = getPayloadObject('click', props.telemetryContent!, TelemetryConstant.SubmitReview);\n    const submitReviewAttribute = getTelemetryAttributes(props.telemetryContent!, payLoad);\n    payLoad.contentAction.etext = TelemetryConstant.SuccessButton;\n    const successAttribute = getTelemetryAttributes(props.telemetryContent!, payLoad);\n    payLoad.contentAction.etext = TelemetryConstant.Cancel;\n    const cancelAttribute = getTelemetryAttributes(props.telemetryContent!, payLoad);\n\n    reportConcernDropdownOptions = [\n        { key: ReviewConcernCategory.SpamAdvertising, value: props.resources.reportSpamText },\n        { key: ReviewConcernCategory.OffensiveContent, value: props.resources.offensiveContentText },\n        { key: ReviewConcernCategory.Profanity, value: props.resources.profanityContentText }\n    ];\n\n    return {\n        modal: {tag: Modal, className: 'ms-report-review-modal', toggle: props.onModalToggle, applicationNode: 'renderPage', isOpen: props.isOpen, returnFocusRef: props.returnRef},\n        modalHeader: {tag: ModalHeader, toggle: props.onModalToggle, className: 'ms-report-review-modal-header'},\n        modalFooter: {tag: ModalFooter, className: 'ms-report-review-modal-footer'},\n        modalBody: {tag: ModalBody, className: 'ms-report-review-modal-body'},\n        header: <p className='ms-reviews-list__report-header'>{props.resources.reportConcernText}</p>,\n        headerSubmitted: <p className='ms-reviews-list__report-header'>{props.resources.feedbackThankYouText}</p>,\n        cancelButton: <button className='msc-btn ms-reviews-list__cancel' onClick={props.onModalToggle} {...cancelAttribute}>{props.resources.cancelReportReviewText}</button>,\n        submitButton: <button className='msc-btn ms-reviews-list__submit' onClick={props.reportReview} {...submitReviewAttribute}> {props.resources.reportReviewButtonText || 'Report'}</button>,\n        succesfulButton: <button className='msc-btn ms-reviews-list__success' onClick={props.onModalToggle} {...successAttribute}>{props.resources.okReportReviewText}</button>,\n        reportMessage: <p className='ms-reviews-list__report-message'>{props.resources.reportModalMessage}</p>,\n        reportSubmittedMessage: <p className='ms-reviews-list__report-message'>{props.resources.reportSubmittedMessage}</p>,\n        radioButtons: radioPairs(props),\n        error: <Alert className='ms-reviews-list__report-error' isOpen={props.hasError} color='danger'>{props.resources.errorMessageText}</Alert>\n    };\n};\n\nconst radioPairs = (props: IReportReviewModalProps) => {\n    const pairs = [];\n    for (const option of reportConcernDropdownOptions) {\n        const inputId = `report-review-${option.key}`;\n        const checked = option.key === props.reportedKey;\n        pairs.push(\n            <div className='ms-report-review-modal-pair' key={option.key}>\n                <input\n                    className='msc-radio-input'\n                    type='radio'\n                    name='report-error'\n                    id={inputId}\n                    data-key={option.key}\n                    value={option.value}\n                    checked={checked}\n                    aria-checked={checked}\n                    onChange={props.onRadioChange}\n                />\n                <label className='msc-radio-label' htmlFor={inputId}>{option.value}</label>\n            </div>\n        );\n    }\n\n    return (\n        <fieldset>\n            {pairs}\n        </fieldset>\n    );\n};"]}