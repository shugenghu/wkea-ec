{"version":3,"file":"components.js","sourceRoot":"./src/","sources":["modules/reviews-list/components/components.tsx"],"names":[],"mappings":"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","sourcesContent":["import { format, getPayloadObject, getTelemetryAttributes, ILabeledDropdownOption, ITelemetryContent, TelemetryConstant } from '@msdyn365-commerce-modules/utilities';\nimport * as React from 'react';\n\nexport interface IReviewCountResources {\n    pageReviewCountText: string;\n}\n\nexport interface IReviewCountProps {\n    resources: IReviewCountResources;\n    currentPage: number;\n    reviewsCount: number;\n    reviewsShownOnEachPage: number;\n}\n\nexport const ReviewCount: React.FC<IReviewCountProps> = (props: IReviewCountProps) => {\n    const {currentPage, resources, reviewsCount, reviewsShownOnEachPage} = props;\n\n    return (\n        <span aria-live='polite' className='sr-only'>\n            {format(\n                resources.pageReviewCountText,\n                _getReviewStartNumber(currentPage, reviewsShownOnEachPage),\n                _getReviewEndNumber(currentPage, reviewsCount, reviewsShownOnEachPage),\n                reviewsCount\n            )}\n        </span>\n    );\n};\n\nexport interface IPageControlResources {\n    previousButtonText: string;\n    nextButtonText: string;\n    pageReviewAriaLabel: string;\n}\n\nexport interface IPageControlsProps {\n    resources: IPageControlResources;\n    currentPage: number;\n    reviewsCount: number;\n    reviewsShownOnEachPage: number;\n    selectedSortByOption: ILabeledDropdownOption;\n    selectedFilterByOption: ILabeledDropdownOption;\n    telemetryContent?: ITelemetryContent;\n    updateReviews(skipItems: number, selectedSortByOption: ILabeledDropdownOption, selectedFilterByOption: ILabeledDropdownOption, currentPage: number, isFilterApplied: boolean): Promise<void>;\n}\n\nexport const PageControls: React.FC<IPageControlsProps> = (props: IPageControlsProps) => {\n    const {currentPage, resources, reviewsCount, reviewsShownOnEachPage} = props;\n    const previousPageClick = () => {return _getPreviousPageData(props); };\n    const nextPageClick = () => {return _getNextPageData(props); };\n    const payLoad = getPayloadObject('click', props.telemetryContent!, TelemetryConstant.Next);\n    const nextAttribute = getTelemetryAttributes(props.telemetryContent!, payLoad);\n    payLoad.contentAction.etext = TelemetryConstant.Previous;\n    const previousAttribute = getTelemetryAttributes(props.telemetryContent!, payLoad);\n\n    return (\n        <div className='ms-reviews-list__page-controls'>\n            {_hasPreviousPage(currentPage) && (\n                <button\n                    onClick={previousPageClick}\n                    className={'ms-reviews-list__previous'}\n                    aria-label={_paginationAriaLabel(resources.pageReviewAriaLabel, currentPage, reviewsCount, reviewsShownOnEachPage,  false)}\n                    {...previousAttribute}\n                >\n                    {resources.previousButtonText}\n                </button>\n            )}\n            {_hasNextPage(currentPage, reviewsCount, reviewsShownOnEachPage) && (\n                <button\n                    onClick={nextPageClick}\n                    className={'ms-reviews-list__next'}\n                    aria-label={_paginationAriaLabel(resources.pageReviewAriaLabel, currentPage, reviewsCount, reviewsShownOnEachPage,  true)}\n                    {...nextAttribute}\n                >\n                    {resources.nextButtonText}\n                </button>\n            )}\n        </div>\n    );\n};\n\nconst _hasPreviousPage = (currentPage: number): boolean => {\n    return currentPage > 1;\n};\n\nconst _hasNextPage = (currentPage: number, reviewsCount: number, reviewsShownOnEachPage: number): boolean => {\n    return _getPagesCount(reviewsCount, reviewsShownOnEachPage) > currentPage;\n};\n\nconst _getReviewsShown = (reviewsShownOnEachPage: number) => {\n    return Math.min(25, reviewsShownOnEachPage);\n};\n\nconst _getPagesCount = (reviewsCount: number, reviewsShownOnEachPage: number): number => {\n    return Math.ceil(reviewsCount / _getReviewsShown(reviewsShownOnEachPage));\n};\n\nconst _paginationAriaLabel = (pageReviewAriaLabel: string, currentPage: number, reviewsCount: number, reviewsShownOnEachPage: number, isNextPage: boolean, page?: number): string => {\n    const pageModifier = isNextPage ? 1: -1;\n    return format(\n                pageReviewAriaLabel,\n                _getReviewStartNumber(currentPage, reviewsShownOnEachPage, currentPage + pageModifier),\n                _getReviewEndNumber(currentPage, reviewsCount, reviewsShownOnEachPage, currentPage + pageModifier),\n                reviewsCount\n            );\n};\n\nconst _getReviewStartNumber = (currentPage: number,  reviewsShownOnEachPage: number, page?: number): number => {\n    return ((page || currentPage) - 1) * _getReviewsShown(reviewsShownOnEachPage) + 1;\n};\n\nconst _getReviewEndNumber = (currentPage: number, reviewsCount: number, reviewsShownOnEachPage: number, page?: number): number => {\n    const pageUsed = page || currentPage;\n    const pageReviewCount = pageUsed * _getReviewsShown(reviewsShownOnEachPage);\n    return pageReviewCount < reviewsCount ? pageReviewCount : reviewsCount;\n};\n\nconst _getPreviousPageData = async (props: IPageControlsProps) => {\n    await props.updateReviews(\n        _getReviewStartNumber(props.currentPage, props.reviewsShownOnEachPage) - 1 - _getReviewsShown(props.reviewsShownOnEachPage),\n        props.selectedSortByOption,\n        props.selectedFilterByOption,\n        props.currentPage - 1,\n        false\n    );\n};\n\nconst _getNextPageData = async (props: IPageControlsProps) => {\n\n    await props.updateReviews(\n        _getReviewEndNumber(props.currentPage, props.reviewsCount, props.reviewsShownOnEachPage),\n        props.selectedSortByOption,\n        props.selectedFilterByOption,\n        props.currentPage + 1,\n        false\n    );\n};"]}