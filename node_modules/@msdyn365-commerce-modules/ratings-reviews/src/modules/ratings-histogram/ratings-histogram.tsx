/*---------------------------------------------------------------------------------------------
 *  Copyright (c) Microsoft Corporation. All rights reserved.
 *  Licensed under the MIT License. See License.txt in the project root for license information.
 *--------------------------------------------------------------------------------------------*/
import { format, IModuleProps, INodeProps } from '@msdyn365-commerce-modules/utilities';
import { RatingComponent } from '@msdyn365-commerce/components';
import * as Msdyn365 from '@msdyn365-commerce/core';
import classname from 'classnames';
import { observer } from 'mobx-react';
import * as React from 'react';
import { createRatingsReviewsStateInput } from '../../actions/ratings-reviews-state-data-action';
import { AverageRatingNumber, HistogramItems, IHistogramItemViewProps, TotalReviews } from './component/components';
import { IRatingsHistogramData } from './ratings-histogram.data';
import { IRatingsHistogramProps } from './ratings-histogram.props.autogenerated';

export interface IRatingsHistogramViewProps extends IRatingsHistogramProps<IRatingsHistogramData> {
    className: string;
    histogramItems: IHistogramItemViewProps[];
    moduleProps: IModuleProps;
    heading: React.ReactNode;
    averageRating: React.ReactNode;
    averageNumber: React.ReactNode;
    totalReviews: React.ReactNode;
    histogramProps: INodeProps;
    ratingsSummaryProps: INodeProps;
    callbacks: IRatingsHistogramCallbacks;
}

export interface IRatingsHistogramCallbacks {
    selectFilterBy(stars: number): void;
}

/**
 * RatingsHistogram component
 * @extends {React.Component<IRatingsHistogramProps<IRatingsHistogramData>>}
 */
@observer
class RatingsHistogram extends React.Component<IRatingsHistogramProps<IRatingsHistogramData>> {

    constructor(props: IRatingsHistogramProps<IRatingsHistogramData>) {
        super(props);
        this.selectFilterBy = this.selectFilterBy.bind(this);
    }

    public render(): JSX.Element | null {
        const { resources } = this.props;
        const { className, heading  } = this.props.config;
        const {ratingsSummary: {result: ratingsSummary}} = this.props.data;
        const ratingCount = ratingsSummary && ratingsSummary.totalRatingsCount  ? `${ratingsSummary.totalRatingsCount}` : '0';

        const completeClass = classname('ms-ratings-histogram', className);
        const viewProps: IRatingsHistogramViewProps = {
            ...this.props,
            className: completeClass,
            callbacks: {
                selectFilterBy: this.selectFilterBy
            },
            moduleProps: {
                moduleProps: this.props,
                className: completeClass
            },
            histogramItems: ratingsSummary ? HistogramItems({ratingsSummary: ratingsSummary, resources: {...resources}, locale: this.props.context.request.locale, onClick: this.selectFilterBy}) : [],
            averageRating: ratingsSummary && (
                            <RatingComponent
                                avgRating={ratingsSummary.averageRating!}
                                ratingCount={ratingCount}
                                ariaLabel={format(this.props.resources.averageRatingAriaLabel, ratingsSummary.averageRating, '5')}
                                readOnly={true}
                                context={this.props.context}
                                hideCount={true}
                                id={this.props.id}
                                typeName={this.props.typeName}
                                data={{}}
                            />
            ),
            averageNumber: ratingsSummary && <AverageRatingNumber summary={ratingsSummary}/>,
            totalReviews: ratingsSummary && <TotalReviews summary={ratingsSummary}/>,
            ratingsSummaryProps: {className: 'ms-ratings-histogram__summary'},
            heading: heading && (
                <Msdyn365.Text
                    className='ms-ratings-histogram__heading'
                    tag={heading.tag || 'h2'}
                    text={heading.text}
                    editProps={{onEdit:this.handleHeadingChange, requestContext: this.props.context.request}}
                />
            ),
            histogramProps: {className: 'ms-ratings-histogram__histogram'}
        };

        return this.props.renderView(viewProps) as React.ReactElement;
    }

    public handleHeadingChange = (event: Msdyn365.ContentEditableEvent) => this.props.config.heading!.text = event.target.value;

    public selectFilterBy(stars: number): void {
        const filterKey = `${stars}`;
        this.props.context.actionContext.update(createRatingsReviewsStateInput({filterKey}), {filterKey});
    }
}

export default RatingsHistogram;
