/*---------------------------------------------------------------------------------------------
 *  Copyright (c) Microsoft Corporation. All rights reserved.
 *  Licensed under the MIT License. See License.txt in the project root for license information.
 *--------------------------------------------------------------------------------------------*/

import { getRnrAuthEndpointId, getRnrPartnerId, getSelectedProductIdFromActionInput } from '@msdyn365-commerce-modules/retail-actions';
import { Review } from '@msdyn365-commerce/commerce-entities';
import { createObservableDataAction, IAction, IActionContext, IActionInput, ICreateActionContext, sendRequest } from '@msdyn365-commerce/core';
import { GetUserReviewInput } from './inputs/get-user-review-input';

/**
 * This method builds the input for the getUserReviewApi call
 */
const createInput = (input: ICreateActionContext): IActionInput => {
    const productId = getSelectedProductIdFromActionInput(input);
    const userInfo = input.requestContext.user;
    if (productId && userInfo && userInfo.isAuthenticated) {
        // Task #211227597 Remove these hardcoded values.
        return new GetUserReviewInput(productId, getRnrPartnerId(input), userInfo.token, getRnrAuthEndpointId(input));
    }
    throw new Error('[GetUserReview] Not all necessary parameters found while creating Input for GetUserReviewAPI');
};

/**
 * This method gets the user's review from the RnR service endpoint
 */
async function getUserReview(input:GetUserReviewInput, ctx: IActionContext):Promise<Review> {
    if (!inputIsValid(input)) {
        const errorMessage = `[GettUserReview] Failed to get user's review due to bad input ${input}`;
        ctx.trace(errorMessage);
        throw new Error(errorMessage);
    }

    const requestUrl = `${input.serviceEndpoint}/v2.0/reviews/product/${input.productId}/user?tenantId=${input.tenantId}`;

    return sendRequest<Review>(requestUrl, 'get', null, {headers: {Authorization: `id_token ${input.authorization}`}}).then((response) => {
        return response.data;
    }).catch((error) => {
        ctx.trace(`[GettUserReview] Failed to get user's review for product`);
        ctx.telemetry.exception(error);
        ctx.telemetry.debug(`[GettUserReview] Failed to get user's review for product`);
        ctx.trace(error);
        throw (error);
    });
}

function inputIsValid(input:GetUserReviewInput): boolean {
    return input.productId.length > 0 && input.authorization.length > 0 && input.tenantId.length > 0;
}

export default createObservableDataAction({
    id: '@msdyn365-commerce-modules/ratings-reviews/get-user-review',
    action: <IAction<Review>>getUserReview,
    input: createInput
});
