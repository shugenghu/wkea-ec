/*---------------------------------------------------------------------------------------------
 *  Copyright (c) Microsoft Corporation. All rights reserved.
 *  Licensed under the MIT License. See License.txt in the project root for license information.
 *--------------------------------------------------------------------------------------------*/

import { getRnrEndpointId, getRnrPartnerId, getSelectedProductIdFromActionInput } from '@msdyn365-commerce-modules/retail-actions';
import { Reviews } from '@msdyn365-commerce/commerce-entities';
import { createObservableDataAction, IAction, IActionContext, IActionInput, IAny, ICreateActionContext, IGeneric, sendRequest } from '@msdyn365-commerce/core';
import { GetProductReviewsInput } from './inputs/get-product-reviews-input';

/**
 * TODO: Use this function to create the input required to make the API call
 */
export const createInputForProductReviews = (input: ICreateActionContext<IGeneric<IAny>>): IActionInput => {
    const productId = getSelectedProductIdFromActionInput(input);
    if (productId) {
        // Task #211227597 Remove these hardcoded values.
        return new GetProductReviewsInput(productId, getRnrPartnerId(input), input.requestContext.locale, getRnrEndpointId(input));
    }
    throw new Error('[GetProductReviews] Not all necessary parameters found while creating Input for GetProductReviewsApi');
};

export async function getReviewsForGivenProduct(input: GetProductReviewsInput, ctx: IActionContext): Promise<Reviews> {
    if (!inputIsValid(input)) {
        throw new Error(
            `[GetProductReviews] Invalid input. ProductId = ${input.productId}, TenantId = ${input.tenantId}, localeListFilter = ${input.localeListFilter}`
        );
    }
    let requestUrl =
        `${input.serviceEndpoint}/v2.0/reviews/product/${input.productId}` +
        `?tenantId=${input.tenantId}` +
        `&localeListFilter=${input.localeListFilter}` +
        `&pageSize=${input.pageSize}` +
        `&orderBy=${input.orderBy}` +
        `&skipItems=${input.skipItems}`;

    if (input.starFilters !== undefined && input.starFilters.length > 0) {
        requestUrl = `${requestUrl}&starFilters=${input.starFilters}`;
    }

    if (input.pageToken !== null) {
        requestUrl = `${requestUrl}&pageToken=${input.pageToken}`;
    }
    return sendRequest<Reviews>(requestUrl, 'get')
        .then(response => {
            if (response.data && response.data.items && response.data.items.length > 0) {
                return {
                    items: response.data.items.filter(i => !i.isTakenDown),
                    pagingInfo: response.data.pagingInfo
                };
            }
            ctx.trace(`[GetProductReviews] No reviews found for this product.`);
            return response.data;
        })
        .catch(error => {
            ctx.trace(`[GetProductReviews] Failed to get reviews for product`);
            ctx.telemetry.exception(error);
            ctx.telemetry.debug(`[GetProductReviews] Failed to get reviews for product`);
            throw error;
        });
}

function inputIsValid(input: GetProductReviewsInput): boolean {
    return input && input.productId.length > 0 && input.tenantId.length > 0 && input.localeListFilter.length > 0 && input.pageSize > 0;
}

export default createObservableDataAction({
    id: '@msdyn365-commerce-modules/ratings-reviews/get-product-reviews',
    action: <IAction<Reviews>>getReviewsForGivenProduct,
    input: createInputForProductReviews
});
