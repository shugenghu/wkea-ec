{"version":3,"file":"social-share.view.test.js","sourceRoot":"./src/","sources":["modules/social-share/__tests__/unit/social-share.view.test.tsx"],"names":[],"mappings":"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","sourcesContent":["import { buildMockModuleProps } from '@msdyn365-commerce/core';\nimport { render } from 'enzyme';\nimport * as React from 'react';\nimport { ISocialShareViewProps } from '../../social-share';\nimport { ISocialShareConfig, ISocialShareProps } from '../../social-share.props.autogenerated';\nimport SocialShareView from '../../social-share.view';\n\ndescribe('tab unit tests - View', () => {\n  it('renders correctly', () => {\n    const moduleProps: ISocialShareProps<{}> = buildMockModuleProps({}, {}) as ISocialShareProps<{}>;\n    const myReactNodeChild1: React.ReactNode = `whatever child module 1`;\n    const myReactNodeChild2: React.ReactNode = `whatever child module 2`;\n    moduleProps.slots = {\n      socialShareItems: [myReactNodeChild1, myReactNodeChild2],\n    };\n    const mockProps: ISocialShareViewProps = {\n      ...moduleProps,\n      isConsentGiven: true,\n      SocialShareItemElements: moduleProps.slots.socialShareItems,\n      SocialShare: {\n        moduleProps,\n        className: 'ms-social-share'\n      },\n      SocialShareList: { className: 'ms-social-share-list' },\n      SocialShareItem: { className: 'ms-social-share-Item' },\n      SocialShareItemCustomization: {className: 'ms-social-share-Item'}\n    };\n    const component = render(<SocialShareView {...mockProps} />);\n    expect(component).toMatchSnapshot();\n  });\n  it('render null', () => {\n    const moduleProps: ISocialShareProps<ISocialShareConfig> = buildMockModuleProps({}, {}) as ISocialShareProps<ISocialShareConfig>;\n    const myReactNodeChild1: React.ReactNode = `whatever child module 1`;\n    const myReactNodeChild2: React.ReactNode = `whatever child module 1`;\n    moduleProps.slots = {\n      socialShareItems: [myReactNodeChild1, myReactNodeChild2]\n    };\n    const mockProps: ISocialShareViewProps = {\n      ...moduleProps,\n      isConsentGiven: true,\n      SocialShareItemElements: [],\n      SocialShare: {\n        moduleProps,\n        className: 'ms-social-share'\n      },\n      SocialShareList: { className: 'ms-social-share-list' },\n      SocialShareItem: { className: 'ms-social-share-Item' },\n      SocialShareItemCustomization: { className: 'ms-social-share-Item' },\n    };\n    const component = render(<SocialShareView {...mockProps} />);\n    expect(component).toMatchSnapshot();\n  });\n  it('renders null if consent set false', () => {\n    const moduleProps: ISocialShareProps<{}> = buildMockModuleProps({}, {}) as ISocialShareProps<{}>;\n    const myReactNodeChild1: React.ReactNode = `whatever child module 1`;\n    const myReactNodeChild2: React.ReactNode = `whatever child module 2`;\n    moduleProps.slots = {\n      socialShareItems: [myReactNodeChild1, myReactNodeChild2]\n    };\n    const mockProps: ISocialShareViewProps = {\n      ...moduleProps,\n      isConsentGiven: false,\n      SocialShareItemElements: moduleProps.slots.socialShareItems,\n      SocialShare: {\n        moduleProps,\n        className: 'ms-social-share'\n      },\n      SocialShareList: { className: 'ms-social-share-list' },\n      SocialShareItem: { className: 'ms-social-share-Item' },\n      SocialShareItemCustomization: {className: 'ms-social-share-Item'}\n    };\n    const component = render(<SocialShareView {...mockProps} />);\n    expect(component).toMatchSnapshot();\n  });\n});"]}