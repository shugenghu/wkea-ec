{"version":3,"file":"integration.test.js","sourceRoot":"./src/","sources":["modules/social-share/__tests__/integration.test.tsx"],"names":[],"mappings":"AACA,OAAO,EAAE,oBAAoB,EAAE,MAAM,yBAAyB,CAAC;AAC/D,OAAO,EAAE,MAAM,EAAE,MAAM,QAAQ,CAAC;AAChC,OAAO,KAAK,KAAK,MAAM,OAAO,CAAC;AAC/B,OAAO,WAAW,MAAM,iBAAiB,CAAC;AAM1C,OAAO,eAAe,MAAM,sBAAsB,CAAC;AAEnD,MAAM,iBAAiB,GAAG,EACzB,CAAC;AAEF,MAAM,qBAAqB,GAAuB;IAC9C,SAAS,EAAE,WAAW;IACtB,WAAW,cAAwB;CACtC,CAAC;AAEF,MAAM,WAAW,GAAuB;IACpC,OAAO,EAAE,QAAQ;IACjB,SAAS,EAAE,WAAW;IACtB,WAAW,cAAwB;CACtC,CAAC;AAEF,MAAM,iBAAiB,GAAoB,yBAAyB,CAAC;AACrE,MAAM,iBAAiB,GAAoB,yBAAyB,CAAC;AACrE,MAAM,iBAAiB,GAAoB,yBAAyB,CAAC;AACrE,MAAM,iBAAiB,GAAoB,yBAAyB,CAAC;AAErE,MAAM,KAAK,GAAG;IACV,gBAAgB,EAAE,CAAC,iBAAiB,EAAE,iBAAiB,CAAC;IACxD,6BAA6B,EAAE,CAAC,iBAAiB,EAAE,iBAAiB,CAAC;CACxE,CAAC;AAEF,QAAQ,CAAC,gCAAgC,EAAE,GAAG,EAAE;IAC5C,EAAE,CAAC,mBAAmB,EAAE,GAAG,EAAE;QACzB,MAAM,WAAW,GAA0C;YACvD,GAAG,oBAAoB,CAAC,iBAAiB,EAAE,qBAAqB,CAA0C;YAC1G,KAAK,EAAE,KAAK;YAEZ,UAAU,EAAE,eAAe;SAC9B,CAAC;QAEF,MAAM,SAAS,GAAG,MAAM,CAAC,oBAAC,WAAW,oBAAK,WAAW,EAAI,CAAC,CAAC;QAC3D,MAAM,CAAC,SAAS,CAAC,CAAC,eAAe,EAAE,CAAC;IACxC,CAAC,CAAC,CAAC;IAEH,EAAE,CAAC,mBAAmB,EAAE,GAAG,EAAE;QACzB,MAAM,WAAW,GAA0C;YACvD,GAAG,oBAAoB,CAAC,iBAAiB,EAAE,WAAW,CAA0C;YAChG,KAAK,EAAE,KAAK;YAEZ,UAAU,EAAE,eAAe;SAC9B,CAAC;QAEF,MAAM,SAAS,GAAG,MAAM,CAAC,oBAAC,WAAW,oBAAK,WAAW,EAAI,CAAC,CAAC;QAC3D,MAAM,CAAC,SAAS,CAAC,CAAC,eAAe,EAAE,CAAC;IACxC,CAAC,CAAC,CAAC;AACP,CAAC,CAAC,CAAC","sourcesContent":["\nimport { buildMockModuleProps } from '@msdyn365-commerce/core';\nimport { render } from 'enzyme';\nimport * as React from 'react';\nimport SocialShare from '../social-share';\nimport {\n    ISocialShareConfig,\n    ISocialShareProps,\n    orientation,\n} from '../social-share.props.autogenerated';\nimport SocialShareView from '../social-share.view';\n\nconst mockAccordionData = {\n};\n\nconst mockConfigWithFlipper: ISocialShareConfig = {\n    className: 'className',\n    orientation: orientation.horizontal\n};\n\nconst mockConfig2: ISocialShareConfig = {\n    caption: 'Share:',\n    className: 'className',\n    orientation: orientation.horizontal\n};\n\nconst myReactNodeChild1: React.ReactNode = 'whatever child module 1';\nconst myReactNodeChild2: React.ReactNode = 'whatever child module 2';\nconst myReactNodeChild3: React.ReactNode = 'whatever child module 3';\nconst myReactNodeChild4: React.ReactNode = 'whatever child module 4';\n\nconst slots = {\n    socialShareItems: [myReactNodeChild1, myReactNodeChild2],\n    socialShareCustomizationItems: [myReactNodeChild3, myReactNodeChild4]\n};\n\ndescribe('Social Share integration tests', () => {\n    it('renders correctly', () => {\n        const moduleProps: ISocialShareProps<ISocialShareConfig> = {\n            ...buildMockModuleProps(mockAccordionData, mockConfigWithFlipper) as ISocialShareProps<ISocialShareConfig>,\n            slots: slots,\n            // @ts-ignore\n            renderView: SocialShareView\n        };\n        // @ts-ignore mock partial data\n        const component = render(<SocialShare {...moduleProps} />);\n        expect(component).toMatchSnapshot();\n    });\n\n    it('renders correctly', () => {\n        const moduleProps: ISocialShareProps<ISocialShareConfig> = {\n            ...buildMockModuleProps(mockAccordionData, mockConfig2) as ISocialShareProps<ISocialShareConfig>,\n            slots: slots,\n            // @ts-ignore\n            renderView: SocialShareView\n        };\n\n        const component = render(<SocialShare {...moduleProps} />);\n        expect(component).toMatchSnapshot();\n    });\n});"]}