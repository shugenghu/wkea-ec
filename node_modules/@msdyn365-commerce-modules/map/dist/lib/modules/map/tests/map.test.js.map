{"version":3,"file":"map.test.js","sourceRoot":"./src/","sources":["modules/map/tests/map.test.tsx"],"names":[],"mappings":"AAKA,OAAO,EAAE,oBAAoB,EAAE,MAAM,kCAAkC,CAAC;AAIxE,OAAO,KAAK,KAAK,MAAM,OAAO,CAAC;AAC/B,OAAO,KAAK,QAAQ,MAAM,qBAAqB,CAAC;AAIhD,OAAO,GAAG,MAAM,QAAQ,CAAC;AAOzB,MAAM,QAAQ,GAAa;IACzB,cAAc,EAAE;QACd,IAAI,EAAE,sBAAsB;KAC7B;IACD,yBAAyB,EAAE;QACzB,MAAM,EAAE,SAAS;QACjB,MAAM,EAAE,EAAE;KACgC;CAC7C,CAAC;AAEF,MAAM,UAAU,GAAe;IAC7B,OAAO,EAAE;QACP,IAAI,EAAE,KAAK;KACZ;IACD,SAAS,EAAE,eAAe;CAC3B,CAAC;AAEF,MAAM,WAAW,GAAG,EAAE,CAAC;AAEvB,QAAQ,CAAC,cAAc,EAAE,GAAG,EAAE;IAC5B,IAAI,WAAgC,CAAC;IACrC,SAAS,CAAC,GAAG,EAAE;QACb,WAAW,GAAG,oBAAoB,CAAC,QAAQ,EAAE,WAAW,EAAE,UAAU,CAAwB,CAAC;IAC/F,CAAC,CAAC,CAAC;IACH,EAAE,CAAC,mBAAmB,EAAE,GAAG,EAAE;QAC3B,MAAM,SAAS,GAA+B,QAAQ,CAAC,MAAM,CAC3D,oBAAC,GAAG,oBAAK,WAAW,EAAI,CACzB,CAAC;QACF,MAAM,IAAI,GAAG,SAAS,CAAC,MAAM,EAAE,CAAC;QAChC,MAAM,CAAC,IAAI,CAAC,CAAC,eAAe,EAAE,CAAC;IACjC,CAAC,CAAC,CAAC;AACL,CAAC,CAAC,CAAC","sourcesContent":["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { buildMockModuleProps } from '@msdyn365-commerce/core-internal';\n/// <reference types=\"jest\" />\n\n// tslint:disable-next-line:no-unused-variable\nimport * as React from 'react';\nimport * as renderer from 'react-test-renderer';\n\nimport { IStoreSelectorStateManager } from '@msdyn365-commerce-modules/bopis-utilities';\nimport { AsyncResult } from '@msdyn365-commerce/core';\nimport Map from '../map';\nimport { IMapData } from '../map.data';\nimport {\n  IMapConfig,\n  IMapProps\n} from '../map.props.autogenerated';\n\nconst mockData: IMapData = {\n  actionResponse: {\n    text: 'Sample Response Data'\n  },\n  storeSelectorStateManager: {\n    status: 'SUCCESS',\n    result: {}\n  } as AsyncResult<IStoreSelectorStateManager>,\n};\n\nconst mockConfig: IMapConfig = {\n  heading: {\n    text: 'Map'\n  },\n  className: 'testClassName'\n};\n\nconst mockActions = {};\n\ndescribe('StoreLocator', () => {\n  let moduleProps: IMapProps<IMapData>;\n  beforeAll(() => {\n    moduleProps = buildMockModuleProps(mockData, mockActions, mockConfig) as IMapProps<IMapData>;\n  });\n  it('renders correctly', () => {\n    const component: renderer.ReactTestRenderer = renderer.create(\n      <Map {...moduleProps} />\n    );\n    const tree = component.toJSON();\n    expect(tree).toMatchSnapshot();\n  });\n});\n"]}