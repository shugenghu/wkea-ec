{"version":3,"file":"links.test.js","sourceRoot":"./src/","sources":["modules/content-block/tests/unit/links.test.tsx"],"names":[],"mappings":"AAOA,OAAO,EAAE,gBAAgB,EAAE,MAAM,yBAAyB,CAAC;AAC3D,OAAO,EAAE,MAAM,EAAE,MAAM,QAAQ,CAAC;AAChC,OAAO,KAAK,KAAK,MAAM,OAAO,CAAC;AAC/B,OAAO,cAAc,MAAM,wBAAwB,CAAC;AAEpD,QAAQ,CAAC,gCAAgC,EAAE,GAAG,EAAE;IAC5C,EAAE,CAAC,iCAAiC,EAAE,GAAG,EAAE;QACvC,MAAM,SAAS,GAAG;YACd,KAAK,EAAE;gBACH;oBACI,QAAQ,EAAE,UAAU;oBACpB,OAAO,EAAE;wBACL,cAAc,EAAE,GAAG;qBACtB;oBACD,SAAS,EAAE,UAAU;oBACrB,YAAY,EAAE,KAAK;iBACtB;aACJ;YACD,cAAc,EAAE,gBAAgB,EAAE;YAClC,gBAAgB,EAAC,EAAuB;SAC3C,CAAC;QACF,MAAM,SAAS,GAAG,MAAM,CAAC,oBAAC,cAAc,oBAAK,SAAS,EAAI,CAAC,CAAC;QAC5D,MAAM,CAAC,SAAS,CAAC,CAAC,eAAe,EAAE,CAAC;IACxC,CAAC,CAAC,CAAC;IAEH,EAAE,CAAC,uCAAuC,EAAE,GAAG,EAAE;QAC7C,MAAM,SAAS,GAAG;YACd,KAAK,EAAE;gBACH;oBACI,QAAQ,EAAE,UAAU;oBACpB,OAAO,EAAE;wBACL,cAAc,EAAE,GAAG;qBACtB;oBACD,SAAS,EAAE,UAAU;oBACrB,YAAY,EAAE,KAAK;iBACtB;gBACD;oBACI,QAAQ,EAAE,YAAY;oBACtB,OAAO,EAAE;wBACL,cAAc,EAAE,GAAG;qBACtB;oBACD,SAAS,EAAE,YAAY;oBACvB,YAAY,EAAE,IAAI;iBACrB;aACJ;YACD,cAAc,EAAE,gBAAgB,EAAE;YAClC,gBAAgB,EAAC,EAAuB;SAC3C,CAAC;QACF,MAAM,SAAS,GAAG,MAAM,CAAC,oBAAC,cAAc,oBAAK,SAAS,EAAI,CAAC,CAAC;QAC5D,MAAM,CAAC,SAAS,CAAC,CAAC,eAAe,EAAE,CAAC;IACxC,CAAC,CAAC,CAAC;AACP,CAAC,CAAC,CAAC","sourcesContent":["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\n// tslint:disable-next-line:no-unused-variable\nimport { ITelemetryContent } from '@msdyn365-commerce-modules/utilities';\nimport { buildMockRequest } from '@msdyn365-commerce/core';\nimport { render } from 'enzyme';\nimport * as React from 'react';\nimport LinksComponent from '../../components/links';\n\ndescribe('Content card unit tests - Link', () => {\n    it('renders correctly with one link', () => {\n        const mockProps = {\n            links: [\n                {\n                    linkText: 'Shop now',\n                    linkUrl: {\n                        destinationUrl: '#'\n                    },\n                    ariaLabel: 'shop now',\n                    openInNewTab: false\n                }\n            ],\n            requestContext: buildMockRequest(),\n            telemetryContent:{} as ITelemetryContent,\n        };\n        const component = render(<LinksComponent {...mockProps} />);\n        expect(component).toMatchSnapshot();\n    });\n\n    it('renders correctly with multiple links', () => {\n        const mockProps = {\n            links: [\n                {\n                    linkText: 'Shop now',\n                    linkUrl: {\n                        destinationUrl: '#'\n                    },\n                    ariaLabel: 'shop now',\n                    openInNewTab: false\n                },\n                {\n                    linkText: 'Learn more',\n                    linkUrl: {\n                        destinationUrl: '#'\n                    },\n                    ariaLabel: 'Learn more',\n                    openInNewTab: true\n                }\n            ],\n            requestContext: buildMockRequest(),\n            telemetryContent:{} as ITelemetryContent,\n        };\n        const component = render(<LinksComponent {...mockProps} />);\n        expect(component).toMatchSnapshot();\n    });\n});\n"]}