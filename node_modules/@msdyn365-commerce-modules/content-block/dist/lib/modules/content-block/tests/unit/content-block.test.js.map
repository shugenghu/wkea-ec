{"version":3,"file":"content-block.test.js","sourceRoot":"./src/","sources":["modules/content-block/tests/unit/content-block.test.tsx"],"names":[],"mappings":"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","sourcesContent":["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nimport { buildMockModuleProps, buildMockRequest } from '@msdyn365-commerce/core';\nimport { mount } from 'enzyme';\n// tslint:disable-next-line:no-unused-variable\nimport * as React from 'react';\nimport { actionableRegion, ContentBlockModule, HeadingTag, IContentBlockConfig, IContentBlockProps } from '../../../..';\n\nconst mockConfig: IContentBlockConfig = {\n    heading:{\n        text:'Micheal Hill',\n        tag: HeadingTag.h2\n      },\n      paragraph:'We think about you and the reasons behind your purchase – designing timeless pieces that bring out your best.',\n      image:{\n        src: 'https://img-prod-cms-mr-microsoft-com.akamaized.net/cms/api/fabrikam/imageFileData/MA1QsS'\n      },\n      links:[\n        {\n        linkText: 'Shop now',\n        linkUrl:\n        {\n            destinationUrl: 'https://mocktest'\n        },\n        ariaLabel: 'Mock aria label'\n      }\n      ],\n      className:'',\n      imageLink:\n      {\n        destinationUrl: '/modern/storefaq'\n      },\n      actionableRegion:actionableRegion.imageAndLinks,\n      imageAriaLabel:'image aria label'\n};\n\nconst mockConfig2: IContentBlockConfig = {\n    heading:{\n        text:'Micheal Hill',\n        tag: HeadingTag.h2\n      },\n      paragraph:'We think about you and the reasons behind your purchase – designing timeless pieces that bring out your best.',\n      image:{\n        src: 'https://img-prod-cms-mr-microsoft-com.akamaized.net/cms/api/fabrikam/imageFileData/MA1QsS'\n      },\n      links:[\n        {\n        linkText: 'Shop now',\n        linkUrl:\n        {\n            destinationUrl: 'https://mocktest'\n        },\n        ariaLabel: 'Mock aria label'\n      }\n      ],\n      className:'',\n      actionableRegion:actionableRegion.linksOnly,\n      imageAriaLabel:'image aria label'\n};\n\n// @ts-ignore\nconst mockRequest: IRequestContext = buildMockRequest();\n// @ts-ignore\nconst mockContext: ICoreContext = {\n    request: mockRequest\n};\n\ndescribe('Content block unit tests - Container', () => {\n    let moduleProps: IContentBlockProps<{}>;\n    it('renders correctly with anchor', () => {\n        // @ts-ignore\n        moduleProps = {\n            ...buildMockModuleProps({}, {}, mockConfig, mockContext) as IContentBlockProps<{}>,\n            // @ts-ignore\n            renderView: jest.fn(props => { return <div props={props} />;}),\n        };\n\n        const result = mount(<ContentBlockModule {...moduleProps} />);\n        expect(moduleProps.renderView).toBeCalled();\n        const viewProps = result.childAt(0).props().props;\n        expect(viewProps).toBeDefined();\n        expect (viewProps.image).toBeTruthy();\n        expect (viewProps.text).toBeTruthy();\n        expect (viewProps.title).toBeTruthy();\n        expect (viewProps.links).toBeTruthy();\n    });\n});\n\ndescribe('Content block unit tests - Container', () => {\n    let moduleProps: IContentBlockProps<{}>;\n    it('renders correctly without anchor', () => {\n        // @ts-ignore\n        moduleProps = {\n            ...buildMockModuleProps({}, {}, mockConfig2, mockContext) as IContentBlockProps<{}>,\n            // @ts-ignore\n            renderView: jest.fn(props => { return <div props={props} />;}),\n        };\n\n        const result = mount(<ContentBlockModule {...moduleProps} />);\n        expect(moduleProps.renderView).toBeCalled();\n        const viewProps = result.childAt(0).props().props;\n        expect(viewProps).toBeDefined();\n        expect (viewProps.image).toBeTruthy();\n        expect (viewProps.text).toBeTruthy();\n        expect (viewProps.title).toBeTruthy();\n        expect (viewProps.links).toBeTruthy();\n    });\n});"]}