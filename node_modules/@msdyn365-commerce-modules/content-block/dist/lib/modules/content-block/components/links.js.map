{"version":3,"file":"links.js","sourceRoot":"./src/","sources":["modules/content-block/components/links.tsx"],"names":[],"mappings":"AAAA,OAAO,EAAE,gBAAgB,EAAE,sBAAsB,EAAqB,gBAAgB,EAAE,MAAM,sCAAsC,CAAC;AACrI,OAAO,KAAK,QAAQ,MAAM,yBAAyB,CAAC;AACpD,OAAO,KAAK,KAAK,MAAM,OAAO,CAAC;AAe/B,MAAM,OAAO,gBAAiB,SAAQ,KAAK,CAAC,aAAgC;IAA5E;;QAgBY,sBAAiB,GAAG,CAAC,QAAsB,EAAgC,EAAE;YACjF,IAAG,CAAC,QAAQ,IAAI,QAAQ,CAAC,MAAM,KAAK,CAAC,EAAE;gBACnC,OAAO,IAAI,CAAC;aACf;YACD,MAAM,aAAa,GAA0B,EAAE,CAAC;YAChD,QAAQ,CAAC,OAAO,CAAC,CAAC,IAAI,EAAC,KAAK,EAAE,EAAE;gBAE5B,MAAM,OAAO,GAAG,gBAAgB,CAAC,OAAO,EAAE,IAAI,CAAC,KAAK,CAAC,gBAAgB,EAAE,EAAE,EAAE,EAAE,CAAC,CAAC;gBAC/E,MAAM,QAAQ,GAAG,IAAI,CAAC,QAAQ,CAAC,CAAC,CAAC,IAAI,CAAC,QAAQ,CAAC,CAAC,CAAC,EAAE,CAAC;gBACpD,OAAO,CAAC,aAAa,CAAC,KAAK,GAAG,QAAQ,CAAC;gBACvC,MAAM,UAAU,GAAG,sBAAsB,CAAC,IAAI,CAAC,KAAK,CAAC,gBAAgB,EAAE,OAAO,CAAC,CAAC;gBAChF,MAAM,QAAQ,GAAG,KAAK,KAAK,CAAC,CAAC,CAAC,CAAC,kBAAkB,CAAC,CAAC,CAAC,oBAAoB,CAAC;gBACzE,MAAM,YAAY,GAAwB;oBACtC,SAAS,EAAE,IAAI,CAAC,SAAS;oBACzB,SAAS,EAAE,QAAQ;oBACnB,QAAQ,EAAE,IAAI,CAAC,QAAQ;oBACvB,OAAO,EAAE,IAAI,CAAC,OAAO,CAAC,cAAc;oBACpC,YAAY,EAAE,IAAI,CAAC,YAAY;oBAC/B,IAAI,EAAE,QAAQ;oBACd,oBAAoB,EAAE,UAAU;oBAChC,OAAO,EAAE,gBAAgB,CAAC,IAAI,CAAC,KAAK,CAAC,gBAAgB,EAAE,OAAO,EAAE,QAAQ,CAAC;iBAC5E,CAAC;gBACF,aAAa,CAAC,IAAI,CAAC,YAAY,CAAC,CAAC;YACrC,CAAC,CAAC,CAAC;YAEH,OAAO,aAAa,CAAC;QACzB,CAAC,CAAC;IACN,CAAC;IA1CU,MAAM;QACT,MAAM,aAAa,GAAG,IAAI,CAAC,iBAAiB,CAAC,IAAI,CAAC,KAAK,CAAC,KAAK,CAAC,CAAC;QAC/D,OAAM,CACF,6BAAK,SAAS,EAAC,uBAAuB,IAChC,aAAa,IAAI,aAAa,CAAC,MAAM,CAAC,CAAC;YACrC,oBAAC,QAAQ,CAAC,KAAK,IACX,KAAK,EAAG,aAAa,EACrB,SAAS,EAAE,EAAC,YAAY,EAAE,IAAI,CAAC,KAAK,CAAC,YAAY,EAAE,cAAc,EAAE,IAAI,CAAC,KAAK,CAAC,cAAc,EAAC,GAC/F;YACF,CAAC,CAAC,IAAI,CAER,CACT,CAAC;IACN,CAAC;CA6BJ;AACD,eAAe,gBAAgB,CAAC","sourcesContent":["import { getPayloadObject, getTelemetryAttributes, ITelemetryContent, onTelemetryClick } from '@msdyn365-commerce-modules/utilities';\nimport * as Msdyn365 from '@msdyn365-commerce/core';\nimport * as React from 'react';\nimport { ILinksData } from '../content-block.props.autogenerated';\n\nexport interface IContentCardLinks {\n    links: ILinksData[];\n    requestContext: Msdyn365.IRequestContext;\n    telemetryContent: ITelemetryContent;\n    onTextChange?(index: number): (event: Msdyn365.ContentEditableEvent) => void;\n}\n\n/**\n *\n * ContentCardLinks component\n * @extends {React.PureComponent<IContentCardLinks>}\n */\nexport class ContentCardLinks extends React.PureComponent<IContentCardLinks> {\n    public render(): JSX.Element {\n        const editableLinks = this._mapEditableLinks(this.props.links);\n        return(\n            <div className='ms-content-block__cta'>\n                { editableLinks && editableLinks.length ?\n                    <Msdyn365.Links\n                        links= {editableLinks}\n                        editProps={{onTextChange: this.props.onTextChange, requestContext: this.props.requestContext}}\n                    />\n                    : null\n                }\n            </div>\n        );\n    }\n\n    private _mapEditableLinks = (linkdata: ILinksData[]): Msdyn365.ILinksData[] | null => {\n        if(!linkdata || linkdata.length === 0) {\n            return null;\n        }\n        const editableLinks: Msdyn365.ILinksData[] = [];\n        linkdata.forEach((link,index) => {\n            // Construct telemetry attribute to render\n            const payLoad = getPayloadObject('click', this.props.telemetryContent, '', '');\n            const linkText = link.linkText ? link.linkText : '';\n            payLoad.contentAction.etext = linkText;\n            const attributes = getTelemetryAttributes(this.props.telemetryContent, payLoad);\n            const btnClass = index === 0 ? 'msc-cta__primary' : 'msc-cta__secondary';\n            const editableLink: Msdyn365.ILinksData = {\n                ariaLabel: link.ariaLabel,\n                className: btnClass,\n                linkText: link.linkText,\n                linkUrl: link.linkUrl.destinationUrl,\n                openInNewTab: link.openInNewTab,\n                role: 'button',\n                additionalProperties: attributes,\n                onClick: onTelemetryClick(this.props.telemetryContent, payLoad, linkText)\n            };\n            editableLinks.push(editableLink);\n        });\n\n        return editableLinks;\n    };\n}\nexport default ContentCardLinks;\n"]}