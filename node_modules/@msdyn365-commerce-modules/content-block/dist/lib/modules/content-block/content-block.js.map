{"version":3,"file":"content-block.js","sourceRoot":"./src/","sources":["modules/content-block/content-block.tsx"],"names":[],"mappings":"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","sourcesContent":["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nimport { getTelemetryObject, IModuleProps, INodeProps, ITelemetryContent } from '@msdyn365-commerce-modules/utilities';\nimport * as Msdyn365 from '@msdyn365-commerce/core';\nimport classnames from 'classnames';\nimport * as React from 'react';\nimport LinksComponent from './components/links';\nimport { actionableRegion as region, IContentBlockProps } from './content-block.props.autogenerated';\n\nexport interface IContentBlockViewProps extends IContentBlockProps<{}> {\n  title?: React.ReactNode;\n  text?: React.ReactNode;\n  image?: React.ReactNode;\n  links?: React.ReactNode;\n  className?: string;\n  contentBlockContainer: IModuleProps;\n  imageContainer: INodeProps;\n  detailsContainer: INodeProps;\n  contentBlockAnchorTag?: INodeProps;\n  imageLink?: string;\n  imageAriaLabel?: string;\n}\n/**\n *\n * ContentCard component\n * @extends {React.PureComponent<IContentBlockProps{}>}\n */\n\nclass ContentBlock extends React.PureComponent<IContentBlockProps<{}>> {\n private telemetryContent: ITelemetryContent = getTelemetryObject(this.props.context.request.telemetryPageName!,\n                                                                  this.props.friendlyName,\n                                                                  this.props.telemetry);\n public render(): JSX.Element | null {\n    const {\n      heading,\n      paragraph,\n      image,\n      links,\n      className,\n      imageAriaLabel\n    } = this.props.config;\n    const contentBlockTitle = heading && (\n      <Msdyn365.Text\n        className='ms-content-block__title'\n        tag={heading.tag || 'h1'}\n        text={heading.text}\n        editProps={{onEdit: this.handleTextChange, requestContext:this.props.context.request}}\n      />\n    );\n    const imageProps = {\n      gridSettings: this.props.context.request.gridSettings || {},\n      imageSettings: image && image.imageSettings,\n    };\n    const contentBlockLinks = links && links.length > 0 && (\n      <LinksComponent {...{ links: links, onTextChange: this.handleLinkTextChange, requestContext: this.props.context.request, telemetryContent: this.telemetryContent }} />\n    );\n    const contentBlockText = paragraph && (\n      <Msdyn365.RichTextComponent\n        text={paragraph}\n        className='ms-content-block__text'\n        editProps={{onEdit: this.handleParagraphChange, requestContext: this.props.context.request}}\n      />\n    );\n    const contentBlockImage = image && (\n      <Msdyn365.Image {...image} {...imageProps} editProps ={{key:this.props.config.image || {}, requestContext: this.props.context.request}}/>\n    );\n\n    if (\n      !contentBlockTitle &&\n      !contentBlockText &&\n      !contentBlockImage &&\n      !contentBlockLinks\n    ) {\n      this.props.context.telemetry.error(\n        'Content block content is empty, module wont render.'\n      );\n      return null;\n    }\n\n    const contentBlockviewProps = {\n      ...this.props,\n      title: contentBlockTitle,\n      text: contentBlockText,\n      image: contentBlockImage,\n      links: contentBlockLinks,\n      moduleClass: this.props.config.className,\n      contentBlockContainer: {\n        moduleProps: this.props,\n        className: classnames('ms-content-block', className),\n      },\n      imageContainer: { className: 'ms-content-block__image' },\n      detailsContainer: { className: 'ms-content-block__details' },\n      contentBlockAnchorTag: {\n        tag: 'a',\n        className: 'ms-content-block__link',\n        role: 'link',\n      },\n      imageLink: this._getImageLink(),\n      imageAriaLabel\n    };\n\n    return this.props.renderView(contentBlockviewProps) as React.ReactElement;\n  }\n  public handleTextChange = (event: Msdyn365.ContentEditableEvent) => this.props.config.heading!.text = event.target.value;\n  public handleParagraphChange = (event: Msdyn365.ContentEditableEvent) => this.props.config.paragraph = event.target.value;\n  /* Handle link text change*/\n  public handleLinkTextChange = (linkIndex: number) => (event: Msdyn365.ContentEditableEvent) => {\n    if(this.props.config.links && this.props.config.links[linkIndex]) {\n      this.props.config.links[linkIndex].linkText = event.target.value;\n    }\n  };\n  private _getImageLink(): string | null {\n    const { imageLink, links, actionableRegion } = this.props.config;\n    if (actionableRegion === region.imageAndLinks) {\n      if (imageLink && imageLink.destinationUrl) {\n        return imageLink.destinationUrl;\n      } else if (links && links.length && links[0].linkUrl) {\n        return links[0].linkUrl.destinationUrl;\n      } else {\n        return null;\n      }\n    } else {\n        return null;\n    }\n  }\n}\n\nexport default ContentBlock;\n"]}