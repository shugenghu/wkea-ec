{"version":3,"file":"wishlist-items.view.js","sourceRoot":"./src/","sources":["modules/wishlist-items/wishlist-items.view.tsx"],"names":[],"mappings":"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","sourcesContent":["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nimport * as React from 'react';\n\nimport {getPayloadObject, getTelemetryAttributes, INodeProps, ITelemetryContent, Module, Node } from '@msdyn365-commerce-modules/utilities';\nimport classnames from 'classnames';\nimport { IWishlistItemViewProps } from '../..';\nimport { IWishlistItemsViewProps } from './wishlist-items';\n\nconst WishlistItemsView: React.FC<IWishlistItemsViewProps> = props => {\n    const { WishlistItems, status, statusMessage, heading, Products, products, Product, ProductDetails, ProductDimensions, telemetryContent } = props;\n\n    return (\n        <Module {...WishlistItems}>\n            {heading}\n            {status !== 'SUCCESS' && statusMessage}\n            { Products && products && products.length > 0 &&\n                <Node className={ Products.className } {...Products}>\n                    {products && products.map((product) => {\n                        return _renderItem(product, Product, ProductDimensions, ProductDetails, telemetryContent);\n                    })}\n                </Node>\n            }\n        </Module>\n    );\n};\n\nconst _renderItem = (product: IWishlistItemViewProps, Product?: INodeProps, ProductDimensions?: INodeProps, ProductDetails?: INodeProps, telemetryContent?: ITelemetryContent): JSX.Element | null => {\n\n    const { key, productImage, productLink, productPrice, productDimensions, addToCartButton, removeButton, productStatusMessage, entireProductLink, productName, productAriaLabel, inventoryInformation } = product;\n    const payLoad = getPayloadObject('click', telemetryContent!, '', key);\n    const productAttributes = getTelemetryAttributes(telemetryContent!, payLoad);\n    if (entireProductLink) {\n        return (\n            <Node key={key} className={Product!.className} {...Product}>\n                <Node href={entireProductLink} className={classnames('entire-product-link ', ProductDetails!.className)} {...productAttributes} aria-label={productAriaLabel} tag={ProductDetails!.tag}>\n                    {productImage}\n                    {productName}\n                    {productDimensions && ProductDimensions &&\n                        <Node className={ProductDimensions.className} {...ProductDimensions}>\n                            {\n                                productDimensions.map((dimension) => {\n                                    return dimension;\n                                })\n                            }\n                        </Node>\n                    }\n                    {productPrice}\n                </Node>\n                {inventoryInformation}\n                {addToCartButton}\n                {removeButton}\n                {productStatusMessage}\n            </Node>\n        );\n    } else {\n        return (\n            <Node key={ key } className={Product!.className} {...Product}>\n                { productImage }\n                { productLink }\n                { productDimensions && ProductDimensions &&\n                    <Node className={ProductDimensions.className} {...ProductDimensions}>\n                        {\n                            productDimensions.map((dimension) => {\n                                return dimension;\n                            })\n                        }\n                    </Node>\n                }\n                { productPrice }\n                { addToCartButton }\n                { removeButton }\n                { productStatusMessage }\n            </Node>\n        );\n    }\n};\n\nexport default WishlistItemsView;"]}