{"version":3,"file":"wishlist-items.js","sourceRoot":"./src/","sources":["modules/wishlist-items/wishlist-items.tsx"],"names":[],"mappings":"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","sourcesContent":["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { getProductUrlSync, IProductInventoryInformation } from '@msdyn365-commerce-modules/retail-actions';\nimport { getTelemetryObject, IModuleProps, INodeProps, ITelemetryContent } from '@msdyn365-commerce-modules/utilities';\nimport { FullProduct } from '@msdyn365-commerce/commerce-entities';\nimport * as MsDyn365 from '@msdyn365-commerce/core';\nimport { AsyncResult, CommerceList, SimpleProduct } from '@msdyn365-commerce/retail-proxy';\nimport { createGetByCustomerInput, removeLinesAsync } from '@msdyn365-commerce/retail-proxy/dist/DataActions/CommerceListsDataActions.g';\nimport classnames from 'classnames';\nimport { observer } from 'mobx-react';\nimport * as React from 'react';\nimport getItemsInWishlists, { ActiveWishlistInput } from './actions/get-items-in-wishlists';\nimport { IWishlistItemViewProps, WishlistItem, WishlistItemsStatusMessage } from './components/';\nimport { IWishlistItemsData } from './wishlist-items.data';\nimport { IHeadingData, IWishlistItemsProps } from './wishlist-items.props.autogenerated';\n\nexport interface IWishlistItemActionMessageState {\n    productId: number;\n    itemKey: string;\n    userMessage: string;\n    statusCssString: string;\n    messageGlyph: string;\n    isOpen: boolean;\n}\n\nexport type wishlistStatus = 'LOADING' | 'SUCCESS' | 'FAILED' | 'EMPTY';\n\nexport interface IWishlistItemsViewProps extends IWishlistItemsProps<IWishlistItemsData> {\n    WishlistItems: IModuleProps;\n    status?: wishlistStatus;\n    statusMessage?: React.ReactNode;\n    heading?: React.ReactNode;\n    Products?: INodeProps;\n    Product?: INodeProps;\n    ProductDetails?: INodeProps;\n    ProductDimensions?: INodeProps;\n    products?: IWishlistItemViewProps[];\n    telemetryContent?: ITelemetryContent;\n}\n\n/**\n *\n * WishlistItems component\n * @extends {React.PureComponent<IWishlistItemsProps<IWishlistItemsData>, IWishlistItemActionMessageState>}\n */\n@observer\nclass WishlistItems extends React.Component<IWishlistItemsProps<IWishlistItemsData>, IWishlistItemActionMessageState> {\n\n    private telemetryContent: ITelemetryContent;\n\n    constructor(props: IWishlistItemsProps<IWishlistItemsData>) {\n        super(props);\n        this.telemetryContent = getTelemetryObject(this.props.context.request.telemetryPageName!,  this.props.friendlyName, this.props.telemetry);\n    }\n\n    public async componentDidMount(): Promise<void> {\n        this.setState({});\n    }\n\n    public render(): JSX.Element | null {\n        const { heading, className } = this.props.config;\n        const { emptyWishlistText, wishlistErrorGettingWishlist } = this.props.resources;\n        const { cart, productAvailability, wishlists, products } = this.props.data;\n\n        if (cart.status === 'LOADING' || productAvailability.status === 'LOADING' || wishlists.status === 'LOADING') {\n            const errorProps: IWishlistItemsViewProps = {\n                ...(this.props as IWishlistItemsProps<IWishlistItemsData>),\n                WishlistItems: {\n                    moduleProps: this.props,\n                    className: classnames('ms-wishlist-items', className),\n                },\n                status: 'LOADING',\n                // statusMessage: <Waiting className={ waitingClass || 'ms-wishlist-items__message-loading'} />\n                statusMessage: <WishlistItemsStatusMessage errorType='LOADING' text='Loading...'/>,\n                heading: this._renderHeading(heading)\n            };\n            return this.props.renderView(errorProps);\n        }\n\n        if (cart.status === 'FAILED' || productAvailability.status === 'FAILED' || wishlists.status === 'FAILED') {\n            const errorProps: IWishlistItemsViewProps = {\n                ...(this.props as IWishlistItemsProps<IWishlistItemsData>),\n                WishlistItems: {\n                    moduleProps: this.props,\n                    className: classnames('ms-wishlist-items', className),\n                },\n                status: 'FAILED',\n                statusMessage: <WishlistItemsStatusMessage errorType='FAILED' text={ wishlistErrorGettingWishlist }/>,\n                heading: this._renderHeading(heading)\n            };\n\n            return this.props.renderView(errorProps);\n        }\n\n        const productsList = products && (products as AsyncResult<FullProduct[]>).result;\n\n        if (!!productsList && productsList.length === 0) {\n            const emptyViewProps: IWishlistItemsViewProps = {\n                ...(this.props as IWishlistItemsProps<IWishlistItemsData>),\n                WishlistItems: {\n                    moduleProps: this.props,\n                    className: classnames('ms-wishlist-items', className),\n                },\n                status: 'EMPTY',\n                statusMessage: <WishlistItemsStatusMessage errorType='EMPTY' text={ emptyWishlistText }/>,\n                heading: this._renderHeading(heading)\n            };\n\n            return this.props.renderView(emptyViewProps);\n        }\n\n        const viewProps: IWishlistItemsViewProps = {\n            ...(this.props as IWishlistItemsProps<IWishlistItemsData>),\n            WishlistItems: {\n                moduleProps: this.props,\n                className: classnames('ms-wishlist-items', className),\n            },\n            status: 'SUCCESS',\n            heading: this._renderHeading(heading),\n            Products: {\n                className: 'ms-wishlist-items__products',\n                tag: 'ul',\n            },\n            Product: {\n                className: 'ms-wishlist-items__product',\n                tag: 'li',\n            },\n            ProductDetails: {\n                className: 'ms-wishlist-items__product-link',\n                tag: 'a',\n            },\n            telemetryContent: this.telemetryContent,\n            ProductDimensions: {\n                className: 'ms-wishlist-items__product-dimensions',\n            },\n            products: productsList && this._renderProductList(productsList),\n        };\n\n        return this.props.renderView(viewProps) as React.ReactElement;\n    }\n\n    public handleHeadingChange = (event: MsDyn365.ContentEditableEvent) => this.props.config.heading!.text = event.target.value;\n\n    private _renderProductList(products: FullProduct[]): IWishlistItemViewProps[] {\n\n        const { priceFree, originalPriceText, currentPriceText, addToCartButtonText, outOfStockText, removeButtonText, productDimensionTypeColor, productDimensionTypeSize, productDimensionTypeStyle} = this.props.resources;\n        const { context, telemetry } = this.props;\n        const { imageSettings, enableImageProductLink } = this.props.config;\n\n        return products.map((product: FullProduct, index) => {\n            const currentProductProps = {\n                product: product.ProductDetails,\n                price: product.ProductPrice,\n                context: context,\n                wishlistState: this.state,\n                productUrl: getProductUrlSync(product.ProductDetails, context.actionContext, undefined),\n                imageSettings: imageSettings,\n                removeFromWishlistText: removeButtonText,\n                isInStock: this._isProductInStock(product),\n                addToCartText: addToCartButtonText,\n                outOfStockText: outOfStockText,\n                index: index,\n                itemKey: `${product.ProductDetails.RecordId}-${product.ProductDetails.ItemId}-${index}`,\n                telemetry: telemetry,\n                moduleId: this.props.id,\n                moduleTypeName: this.props.typeName,\n                enableImageProductLink: enableImageProductLink,\n                inventoryInformationLabel: this._inventoryLabel(product),\n                inventoryLabelClassName: this._inventoryClassName(product),\n                telemetryContent: this.telemetryContent,\n                handlers: {\n                    onAddToCart: this._addItemToCart,\n                    onRemoveItem: this._removeItemFromWishlist,\n                    onDismiss: this._onDismiss\n                },\n                resources: {\n                    productDimensionTypeColor: productDimensionTypeColor,\n                    productDimensionTypeSize: productDimensionTypeSize,\n                    productDimensionTypeStyle: productDimensionTypeStyle,\n                    freePriceText: priceFree,\n                    originalPriceText: originalPriceText,\n                    currentPriceText: currentPriceText\n                }\n            };\n\n            return (\n                WishlistItem(currentProductProps)!\n            );\n        });\n    }\n\n    // dismiss alert when addingToCart/removeItem\n    private _onDismiss = () => {\n        this.setState({\n            isOpen: false\n        });\n    }\n\n    private _renderHeading = (heading?: IHeadingData): JSX.Element | undefined => {\n        if(!heading) {\n            return undefined;\n        }\n        return(\n            <MsDyn365.Text\n                className={'ms-wishlist-items__heading'}\n                tag={heading.tag || 'h2'}\n                text= {heading.text}\n                editProps={{onEdit:this.handleHeadingChange, requestContext: this.props.context.request}}\n            />\n        );\n    }\n\n    private _addItemToCart = async (product: SimpleProduct, itemKey: string): Promise<void> => {\n        const { context, data, resources, telemetry } = this.props;\n        const { cart, productAvailability } = data;\n        const { addedToCartSuccessMessage, addedToCartFailureMessage } = resources;\n\n        const productInventoryInformation = this._getProductInventory({ProductDetails:product}, productAvailability.result);\n\n        if (context) {\n            if (cart.result) {\n                const addProductToCartInput = {\n                    product: product,\n                    quantity: 1,\n                    enableStockCheck: context.app.config.enableStockCheck,\n                    availableQuantity: productInventoryInformation?productInventoryInformation.ProductAvailableQuantity.AvailableQuantity : 0\n                };\n\n                cart.result.addProductToCart(addProductToCartInput)\n                        .then(async result => {\n                            if (result.status === 'SUCCESS') {\n                                this.setState({\n                                    productId: product.RecordId,\n                                    itemKey: itemKey,\n                                    userMessage: addedToCartSuccessMessage,\n                                    statusCssString: 'success',\n                                    messageGlyph: 'fas fa-check',\n                                    isOpen: true\n                                });\n                            } else if (result.substatus === 'MAXQUANTITY') {\n                                const curQuantity = (await cart).cart?.CartLines?.find(item => item.ProductId === product.RecordId)?.Quantity || 0;\n                                const maxQtyLimitReachedMessage =  this._getInventoryValueMessage(productInventoryInformation, curQuantity);\n\n                                this.setState({\n                                    productId: product.RecordId,\n                                    itemKey: itemKey,\n                                    userMessage: maxQtyLimitReachedMessage,\n                                    statusCssString: 'danger',\n                                    messageGlyph: 'fas fa-exclamation-triangle',\n                                    isOpen: true\n                                });\n                            } else {\n                                this.props.telemetry.debug('[wishlist-items] Unable to Update Cart Line from the wishlist');\n                                this.setState({\n                                    productId: product.RecordId,\n                                    itemKey: itemKey,\n                                    userMessage: addedToCartFailureMessage,\n                                    statusCssString: 'danger',\n                                    messageGlyph: 'fas fa-exclamation-triangle',\n                                    isOpen: true\n                                });\n                            }\n                        })\n                        .catch(error => {\n                            telemetry.warning(error);\n                            telemetry.debug('[wishlist-items] Error trying to Update Cart Line from the wishlist');\n                            this.setState({\n                                productId: product.RecordId,\n                                itemKey: itemKey,\n                                userMessage: addedToCartFailureMessage,\n                                statusCssString: 'danger',\n                                messageGlyph: 'fas fa-exclamation-triangle',\n                                isOpen: true\n                            });\n                        });\n            }\n        }\n    };\n\n    private _removeItemFromWishlist = (productId: number): void => {\n        const { context, data, telemetry } = this.props;\n        const { wishlists } = data;\n\n        if (context && context.actionContext) {\n            const userToken = context.request.user.isAuthenticated && context.request.user.token;\n            const wishlistLineId = this._getWishlistLineIdFromProductId(productId);\n            if (userToken && wishlists.result && wishlists.result[0] && wishlistLineId) {\n                removeLinesAsync({ callerContext: context.actionContext }, wishlists.result[0].Id, [{ LineId: wishlistLineId }])\n                    .then(commerceList => {\n                        const castCommerceList: CommerceList | null = commerceList as (CommerceList | null);\n\n                        if (castCommerceList && castCommerceList.Id && context.request.user.isAuthenticated) {\n                            context.actionContext.update(createGetByCustomerInput({}, null), [castCommerceList]);\n                            getItemsInWishlists(new ActiveWishlistInput(), context.actionContext)\n                                .then((products) => {\n                                    const castSimpleProducts: FullProduct[] | null = products as (FullProduct[] | null);\n                                    if (castSimpleProducts && castSimpleProducts.length > 0) {\n                                        context.actionContext.update(new ActiveWishlistInput(), castSimpleProducts);\n                                    }\n                                })\n                                .catch(error => {\n                                    telemetry.warning('[wishlist-items] Unable to hyderate the wishlist with product information');\n                                    telemetry.error(error);\n                                });\n                        }\n                    })\n                    .catch(error => {\n                        telemetry.warning('[wishlist-items] Unable remove items from the wishlist');\n                        telemetry.error(error);\n                    });\n            } else {\n                telemetry.warning('[wishlist-items] Unable remove items from the wishlist user token or lineItemID wasn\\'t found');\n            }\n        }\n    }\n\n    private _getInventoryValueMessage(product: IProductInventoryInformation | undefined, curQuantity: number):string {\n        const { context, resources } = this.props;\n        const { maxQuantityLimitText } = resources;\n\n        const maxQuantityForLineItem = context.app.config.maxQuantityForCartLineItem || 10;\n\n        if(!product || !product.ProductAvailableQuantity.AvailableQuantity || !context.app.config.enableStockCheck) {\n            return maxQuantityLimitText.replace('{maxQuantity}', maxQuantityForLineItem.toString()).replace('{curQuantity}', curQuantity.toString());\n        }\n\n        const minInventory = Math.min(maxQuantityForLineItem, product.ProductAvailableQuantity.AvailableQuantity);\n\n        return maxQuantityLimitText.replace('{maxQuantity}', minInventory.toString()).replace('{curQuantity}', curQuantity.toString());\n    }\n\n    private _getProductInventory(product: FullProduct, productInventoryCollection: IProductInventoryInformation[] | undefined): IProductInventoryInformation | undefined {\n        if(productInventoryCollection && productInventoryCollection.length) {\n            for (const productResult of productInventoryCollection) {\n                if(product.ProductDetails.RecordId === productResult.ProductAvailableQuantity.ProductId) {\n                    return productResult;\n                }\n            }\n        }\n        return undefined;\n    }\n\n    private _inventoryLabel = (product: FullProduct):string | undefined => {\n        const { productAvailability } = this.props.data;\n        if(productAvailability && productAvailability.result) {\n            const productInventoryInformation = this._getProductInventory(product, productAvailability.result);\n            if(productInventoryInformation) {\n                return productInventoryInformation.StockLevelLabel;\n            }\n        }\n\n        return undefined;\n    }\n\n    private _inventoryClassName = (product: FullProduct):string | undefined => {\n        const { productAvailability } = this.props.data;\n        if(productAvailability && productAvailability.result) {\n            const productInventoryInformation = this._getProductInventory(product, productAvailability.result);\n            if(productInventoryInformation && productInventoryInformation.StockLevelCode) {\n                return `ms-wishlist-items__${productInventoryInformation.StockLevelCode.toLowerCase()}`;\n            }\n        }\n\n        return undefined;\n    }\n\n    private _isProductInStock = (product: FullProduct): boolean => {\n        const { data, context } = this.props;\n        const { productAvailability } = data;\n\n        if (!context.app.config.enableStockCheck) {\n            return true;\n        }\n\n        if (!productAvailability.result || !product.ProductDetails) {\n            return false;\n        }\n\n        for (const productResult of productAvailability.result) {\n            if (productResult.ProductAvailableQuantity &&\n                productResult.ProductAvailableQuantity.ProductId &&\n                productResult.ProductAvailableQuantity.ProductId === product.ProductDetails.RecordId) {\n                return productResult.IsProductAvailable;\n            }\n        }\n\n        return false;\n    }\n\n    private _getWishlistLineIdFromProductId = (productId: number): number | null => {\n        const { wishlists } = this.props.data;\n\n        if (!wishlists.result || !(wishlists.result.length > 0) || !wishlists.result[0].CommerceListLines || !(wishlists.result[0].CommerceListLines.length > 0)) {\n            this.props.telemetry.error('Wishlist content is empty, module wont render.');\n            return null;\n        }\n\n        const foundWishlistItem = wishlists.result[0].CommerceListLines.filter((commerceListLine) => {\n            return commerceListLine.ProductId === productId;\n        });\n\n        if (foundWishlistItem && foundWishlistItem[0].LineId) {\n            return foundWishlistItem[0].LineId;\n        } else {\n            return null;\n        }\n    }\n}\n\nexport default WishlistItems;\n"]}