{"version":3,"file":"wishlist-items.view.test.js","sourceRoot":"./src/","sources":["modules/wishlist-items/tests/wishlist-items.view.test.tsx"],"names":[],"mappings":"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","sourcesContent":["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { buildHydratedMockActionContext, buildMockModuleProps } from '@msdyn365-commerce/core';\nimport { render,shallow } from 'enzyme';\nimport * as React from 'react';\nimport { IWishlistItemViewProps } from '../components';\nimport { IWishlistItemsViewProps } from '../wishlist-items';\nimport { IWishlistItemsResources } from '../wishlist-items.props.autogenerated';\nimport WishlistItemsView from '../wishlist-items.view';\n\nconst mockActionContext = buildHydratedMockActionContext();\n  // @ts-ignore partial mock\nconst mockContext: ICoreContext<{}> = {\n    actionContext: mockActionContext,\n    request: {},\n    app: {\n      config: {\n        maxQuantityForCartLineItem: 10,\n        outOfStockThreshold: 2,\n        enableStockCheck: false\n      }\n    }\n};\n\nconst mockProducts: IWishlistItemViewProps[] = [\n    {\n        key: 'index1',\n        productImage: <div>Product Image</div>,\n        productLink: <div>Product Link</div>,\n        productPrice: <div>Product Price</div>,\n        entireProductLink:'https//pexample.com',\n        productDimensions: [\n            {\n                className:'productDimensions1'\n            },\n        ],\n        addToCartButton: <div>Add to Cart Button</div>,\n        removeButton: <div>Remove Button</div>\n    },\n    {\n        key: 'index2',\n        productImage: <div>Product Image</div>,\n        productLink: <div>Product Link</div>,\n        productPrice: <div>Product Price</div>,\n        entireProductLink:'https//pexample.com',\n        productDimensions: [\n            {\n                className:'productDimensions1'\n            }\n        ],\n        addToCartButton: <div>Add to Cart Button</div>,\n        removeButton: <div>Remove Button</div>\n    }\n];\nconst mockProducts2: IWishlistItemViewProps[] = [\n    {\n        key: 'index1',\n        productImage: <div>Product Image</div>,\n        productLink: <div>Product Link</div>,\n        productPrice: <div>Product Price</div>,\n        productDimensions: [\n            <div key='1'>Dimensions</div>\n        ],\n        addToCartButton: <div>Add to Cart Button</div>,\n        removeButton: <div>Remove Button</div>\n    },\n    {\n        key: 'index2',\n        productImage: <div>Product Image</div>,\n        productLink: <div>Product Link</div>,\n        productPrice: <div>Product Price</div>,\n        productDimensions: [\n            <div key='1'>Dimensions</div>,\n        ],\n        addToCartButton: <div>Add to Cart Button</div>,\n        removeButton: <div>Remove Button</div>\n    }\n];\n\nconst mockResources: IWishlistItemsResources = {\n    emptyWishlistText: 'Your wishlist is empty',\n    removeButtonText: 'Remove from wishlist',\n    removeButtonAriaLabel: 'Remove from wishlist',\n    waitingClass: 'waiting',\n    unableToGetWishlist: 'Unable to get your wishlists!',\n    addToCartButtonText: 'add to cart',\n    outOfStockText: 'This item is out of stock',\n    addedToCartSuccessMessage: 'Added to your cart',\n    addedToCartFailureMessage: 'Add to cart failed',\n    maxQuantityLimitText: 'You can only add 5 of these to your cart',\n    priceFree: 'Free',\n    originalPriceText: 'Original price',\n    currentPriceText: 'Current price',\n    productDimensionTypeColor: 'Color',\n    productDimensionTypeSize: 'Size',\n    productDimensionTypeStyle: 'Style',\n    wishlistErrorGettingWishlist: 'Sorry we are unable to load your wishlist at this moment, please try again later.'\n  };\n\ndescribe('WishlistItems unit tests -', () => {\n    it('View renders correctly', () => {\n        const moduleProps: IWishlistItemsViewProps = buildMockModuleProps({}, {}) as IWishlistItemsViewProps;\n\n        const mockProps: IWishlistItemsViewProps = {\n            ...moduleProps,\n            WishlistItems: {\n                moduleProps: moduleProps,\n                className: 'ms-wishlist-items'\n            },\n            status: 'SUCCESS',\n            heading: <div className={'ms-wishlist-items__heading'}>Heading</div>,\n            Product: {\n                className: 'ms-wishlist-items__product',\n                tag: 'li',\n                productDimensions:{\n                    className:'__ProductDimensions'\n                }\n            },\n            Products: {\n                className: 'ms-wishlist-items__products',\n                tag: 'ul',\n                key:'ul-2',\n                entireProductLink:'https//pexample.com'\n            },\n            ProductDetails:{\n                className:'__ProductDimensions',\n                tag: 'aside',\n                key:'ul-1'\n            },\n            ProductDimensions:{\n                className:'__ProductDimensions'\n            },\n            products: mockProducts,\n            resources: mockResources\n        };\n\n        const component = shallow(<WishlistItemsView {...mockProps} />);\n        expect(component).toMatchSnapshot();\n    });\n    it('View renders status message correctly', () => {\n        const moduleProps: IWishlistItemsViewProps = buildMockModuleProps({}, {}) as IWishlistItemsViewProps;\n\n        const mockProps: IWishlistItemsViewProps = {\n            ...moduleProps,\n            WishlistItems: {\n                moduleProps: moduleProps,\n                className: 'ms-wishlist-items'\n            },\n            status: 'LOADING',\n            statusMessage: <p>Waiting</p>,\n            heading: <div className={'ms-wishlist-items__heading'}>Heading</div>,\n            Products:{\n                className: 'ms-wishlist-items__products',\n                tag: 'ul',\n            },\n            Product: {\n                className: 'ms-wishlist-items__product',\n                tag: 'li',\n            },\n            products: mockProducts2,\n            resources: mockResources\n        };\n\n        const component = render(<WishlistItemsView {...mockProps} />);\n        expect(component).toMatchSnapshot();\n    });\n});"]}