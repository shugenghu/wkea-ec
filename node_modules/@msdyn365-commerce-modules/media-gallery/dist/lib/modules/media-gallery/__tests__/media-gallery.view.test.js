import { buildMockModuleProps } from '@msdyn365-commerce/core';
import { render } from 'enzyme';
import * as React from 'react';
import { MediaGalleryView } from '../../..';
describe('Meida gallery view tests', () => {
    const mockState = {
        animating: false,
        activeIndex: -1,
        mediaGalleryItems: undefined,
        isImageZoomed: false,
        modalIsOpen: false
    };
    const modalContent = React.createElement("div", null, "Modal");
    it('renders correctly with no items', () => {
        const moduleProps = buildMockModuleProps({}, {});
        const mockProps = {
            ...moduleProps,
            Modal: modalContent,
            state: mockState,
            MediaGallery: { moduleProps, className: 'module-class-MediaGallery' },
            CarouselProps: { moduleProps, className: 'module-class-carousel' },
            Thumbnails: {
                ThumbnailsContainerProps: { className: 'node-class-ThumbnailsContainer' },
                SingleSlideCarouselComponentProps: { className: 'node-class-SingleSlideCarouselComponent' },
            },
        };
        const component = render(React.createElement(MediaGalleryView, Object.assign({}, mockProps)));
        expect(component).toMatchSnapshot();
    });
    it('renders correctly with 1 item', () => {
        const moduleProps = buildMockModuleProps({}, {});
        const mockProps = {
            ...moduleProps,
            Modal: modalContent,
            state: mockState,
            MediaGallery: { moduleProps, className: 'module-class-MediaGallery' },
            CarouselProps: { moduleProps, className: 'module-class-carousel' },
            Thumbnails: {
                ThumbnailsContainerProps: { className: 'node-class-ThumbnailsContainer' },
                SingleSlideCarouselComponentProps: { className: 'node-class-SingleSlideCarouselComponent' },
                items: [
                    {
                        ThumbnailItemContainerProps: { className: 'node-class-ThumbnailItemContainer' },
                        Picture: React.createElement("span", null, "Picture")
                    }
                ]
            },
        };
        const component = render(React.createElement(MediaGalleryView, Object.assign({}, mockProps)));
        expect(component).toMatchSnapshot();
    });
    it('renders correctly with more than 1 item', () => {
        const moduleProps = buildMockModuleProps({}, {});
        const mockProps = {
            ...moduleProps,
            Modal: modalContent,
            state: mockState,
            MediaGallery: { moduleProps, className: 'module-class-MediaGallery' },
            CarouselProps: { moduleProps, className: 'module-class-carousel' },
            Thumbnails: {
                ThumbnailsContainerProps: { className: 'node-class-ThumbnailsContainer' },
                SingleSlideCarouselComponentProps: { className: 'node-class-SingleSlideCarouselComponent' },
                items: [
                    {
                        ThumbnailItemContainerProps: { className: 'node-class-ThumbnailItemContainer' },
                        Picture: React.createElement("span", null, "Picture 1")
                    },
                    {
                        ThumbnailItemContainerProps: { className: 'node-class-ThumbnailItemContainer' },
                        Picture: React.createElement("span", null, "Picture 2")
                    },
                    {
                        ThumbnailItemContainerProps: { className: 'node-class-ThumbnailItemContainer' },
                        Picture: React.createElement("span", null, "Picture 3")
                    }
                ]
            },
        };
        const component = render(React.createElement(MediaGalleryView, Object.assign({}, mockProps)));
        expect(component).toMatchSnapshot();
    });
});
//# sourceMappingURL=media-gallery.view.test.js.map