{"version":3,"file":"media-gallery.view.test.js","sourceRoot":"./src/","sources":["modules/media-gallery/__tests__/media-gallery.view.test.tsx"],"names":[],"mappings":"AAKA,OAAO,EAAE,oBAAoB,EAAE,MAAM,yBAAyB,CAAC;AAC/D,OAAO,EAAE,MAAM,EAAE,MAAM,QAAQ,CAAC;AAChC,OAAO,KAAK,KAAK,MAAM,OAAO,CAAC;AAC/B,OAAO,EAA8C,gBAAgB,EAAE,MAAM,UAAU,CAAC;AAIxF,QAAQ,CAAC,0BAA0B,EAAE,GAAG,EAAE;IACtC,MAAM,SAAS,GAAuB;QAClC,SAAS,EAAE,KAAK;QAChB,WAAW,EAAE,CAAC,CAAC;QACf,iBAAiB,EAAE,SAAS;QAC5B,aAAa,EAAE,KAAK;QACpB,WAAW,EAAC,KAAK;KACpB,CAAC;IAEF,MAAM,YAAY,GAAG,yCAAgB,CAAC;IACtC,EAAE,CAAC,iCAAiC,EAAE,GAAG,EAAE;QACvC,MAAM,WAAW,GAA0C,oBAAoB,CAAC,EAAE,EAAE,EAAE,CAA0C,CAAC;QACjI,MAAM,SAAS,GAA2B;YACtC,GAAG,WAAW;YACd,KAAK,EAAC,YAAY;YAClB,KAAK,EAAE,SAAS;YAChB,YAAY,EAAE,EAAE,WAAW,EAAE,SAAS,EAAE,2BAA2B,EAAE;YACrE,aAAa,EAAE,EAAE,WAAW,EAAE,SAAS,EAAE,uBAAuB,EAAE;YAClE,UAAU,EAAE;gBACR,wBAAwB,EAAE,EAAE,SAAS,EAAE,gCAAgC,EAAE;gBACzE,iCAAiC,EAAE,EAAE,SAAS,EAAE,yCAAyC,EAAE;aAC9F;SACJ,CAAC;QACF,MAAM,SAAS,GAAG,MAAM,CAAC,oBAAC,gBAAgB,oBAAK,SAAS,EAAI,CAAC,CAAC;QAC9D,MAAM,CAAC,SAAS,CAAC,CAAC,eAAe,EAAE,CAAC;IACxC,CAAC,CAAC,CAAC;IAEH,EAAE,CAAC,+BAA+B,EAAE,GAAG,EAAE;QACrC,MAAM,WAAW,GAA0C,oBAAoB,CAAC,EAAE,EAAE,EAAE,CAA0C,CAAC;QACjI,MAAM,SAAS,GAA2B;YACtC,GAAG,WAAW;YACd,KAAK,EAAC,YAAY;YAClB,KAAK,EAAE,SAAS;YAChB,YAAY,EAAE,EAAE,WAAW,EAAE,SAAS,EAAE,2BAA2B,EAAE;YACrE,aAAa,EAAE,EAAE,WAAW,EAAE,SAAS,EAAE,uBAAuB,EAAE;YAClE,UAAU,EAAE;gBACR,wBAAwB,EAAE,EAAE,SAAS,EAAE,gCAAgC,EAAE;gBACzE,iCAAiC,EAAE,EAAE,SAAS,EAAE,yCAAyC,EAAE;gBAC3F,KAAK,EAAE;oBACH;wBACI,2BAA2B,EAAE,EAAE,SAAS,EAAE,mCAAmC,EAAE;wBAC/E,OAAO,EAAE,4CAAoB;qBAChC;iBACJ;aACJ;SACJ,CAAC;QACF,MAAM,SAAS,GAAG,MAAM,CAAC,oBAAC,gBAAgB,oBAAK,SAAS,EAAI,CAAC,CAAC;QAC9D,MAAM,CAAC,SAAS,CAAC,CAAC,eAAe,EAAE,CAAC;IACxC,CAAC,CAAC,CAAC;IAEH,EAAE,CAAC,yCAAyC,EAAE,GAAG,EAAE;QAC/C,MAAM,WAAW,GAA0C,oBAAoB,CAAC,EAAE,EAAE,EAAE,CAA0C,CAAC;QACjI,MAAM,SAAS,GAA2B;YACtC,GAAG,WAAW;YACd,KAAK,EAAC,YAAY;YAClB,KAAK,EAAE,SAAS;YAChB,YAAY,EAAE,EAAE,WAAW,EAAE,SAAS,EAAE,2BAA2B,EAAE;YACrE,aAAa,EAAE,EAAE,WAAW,EAAE,SAAS,EAAE,uBAAuB,EAAE;YAClE,UAAU,EAAE;gBACR,wBAAwB,EAAE,EAAE,SAAS,EAAE,gCAAgC,EAAE;gBACzE,iCAAiC,EAAE,EAAE,SAAS,EAAE,yCAAyC,EAAE;gBAC3F,KAAK,EAAE;oBACH;wBACI,2BAA2B,EAAE,EAAE,SAAS,EAAE,mCAAmC,EAAE;wBAC/E,OAAO,EAAE,8CAAsB;qBAClC;oBACD;wBACI,2BAA2B,EAAE,EAAE,SAAS,EAAE,mCAAmC,EAAE;wBAC/E,OAAO,EAAE,8CAAsB;qBAClC;oBACD;wBACI,2BAA2B,EAAE,EAAE,SAAS,EAAE,mCAAmC,EAAE;wBAC/E,OAAO,EAAE,8CAAsB;qBAClC;iBACJ;aACJ;SACJ,CAAC;QACF,MAAM,SAAS,GAAG,MAAM,CAAC,oBAAC,gBAAgB,oBAAK,SAAS,EAAI,CAAC,CAAC;QAC9D,MAAM,CAAC,SAAS,CAAC,CAAC,eAAe,EAAE,CAAC;IACxC,CAAC,CAAC,CAAC;AAEP,CAAC,CAAC,CAAC","sourcesContent":["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { buildMockModuleProps } from '@msdyn365-commerce/core';\nimport { render } from 'enzyme';\nimport * as React from 'react';\nimport { IMediaGalleryProps, IMediaGalleryViewProps, MediaGalleryView } from '../../..';\nimport { IMediaGalleryState } from '../media-gallery';\nimport { IMediaGalleryData } from '../media-gallery.data';\n\ndescribe('Meida gallery view tests', () => {\n    const mockState: IMediaGalleryState = {\n        animating: false,\n        activeIndex: -1,\n        mediaGalleryItems: undefined,\n        isImageZoomed: false,\n        modalIsOpen:false\n    };\n\n    const modalContent = <div>Modal</div>;\n    it('renders correctly with no items', () => {\n        const moduleProps: IMediaGalleryProps<IMediaGalleryData> = buildMockModuleProps({}, {}) as IMediaGalleryProps<IMediaGalleryData>;\n        const mockProps: IMediaGalleryViewProps = {\n            ...moduleProps,\n            Modal:modalContent,\n            state: mockState,\n            MediaGallery: { moduleProps, className: 'module-class-MediaGallery' },\n            CarouselProps: { moduleProps, className: 'module-class-carousel' },\n            Thumbnails: {\n                ThumbnailsContainerProps: { className: 'node-class-ThumbnailsContainer' },\n                SingleSlideCarouselComponentProps: { className: 'node-class-SingleSlideCarouselComponent' },\n            },\n        };\n        const component = render(<MediaGalleryView {...mockProps} />);\n        expect(component).toMatchSnapshot();\n    });\n\n    it('renders correctly with 1 item', () => {\n        const moduleProps: IMediaGalleryProps<IMediaGalleryData> = buildMockModuleProps({}, {}) as IMediaGalleryProps<IMediaGalleryData>;\n        const mockProps: IMediaGalleryViewProps = {\n            ...moduleProps,\n            Modal:modalContent,\n            state: mockState,\n            MediaGallery: { moduleProps, className: 'module-class-MediaGallery' },\n            CarouselProps: { moduleProps, className: 'module-class-carousel' },\n            Thumbnails: {\n                ThumbnailsContainerProps: { className: 'node-class-ThumbnailsContainer' },\n                SingleSlideCarouselComponentProps: { className: 'node-class-SingleSlideCarouselComponent' },\n                items: [\n                    {\n                        ThumbnailItemContainerProps: { className: 'node-class-ThumbnailItemContainer' },\n                        Picture: <span>Picture</span>\n                    }\n                ]\n            },\n        };\n        const component = render(<MediaGalleryView {...mockProps} />);\n        expect(component).toMatchSnapshot();\n    });\n\n    it('renders correctly with more than 1 item', () => {\n        const moduleProps: IMediaGalleryProps<IMediaGalleryData> = buildMockModuleProps({}, {}) as IMediaGalleryProps<IMediaGalleryData>;\n        const mockProps: IMediaGalleryViewProps = {\n            ...moduleProps,\n            Modal:modalContent,\n            state: mockState,\n            MediaGallery: { moduleProps, className: 'module-class-MediaGallery' },\n            CarouselProps: { moduleProps, className: 'module-class-carousel' },\n            Thumbnails: {\n                ThumbnailsContainerProps: { className: 'node-class-ThumbnailsContainer' },\n                SingleSlideCarouselComponentProps: { className: 'node-class-SingleSlideCarouselComponent' },\n                items: [\n                    {\n                        ThumbnailItemContainerProps: { className: 'node-class-ThumbnailItemContainer' },\n                        Picture: <span>Picture 1</span>\n                    },\n                    {\n                        ThumbnailItemContainerProps: { className: 'node-class-ThumbnailItemContainer' },\n                        Picture: <span>Picture 2</span>\n                    },\n                    {\n                        ThumbnailItemContainerProps: { className: 'node-class-ThumbnailItemContainer' },\n                        Picture: <span>Picture 3</span>\n                    }\n                ]\n            },\n        };\n        const component = render(<MediaGalleryView {...mockProps} />);\n        expect(component).toMatchSnapshot();\n    });\n\n});"]}