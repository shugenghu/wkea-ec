/*---------------------------------------------------------------------------------------------
 *  Copyright (c) Microsoft Corporation. All rights reserved.
 *  Licensed under the MIT License. See License.txt in the project root for license information.
 *--------------------------------------------------------------------------------------------*/

import { buildMockModuleProps } from '@msdyn365-commerce/core';
import { render } from 'enzyme';
import * as React from 'react';
import { IMediaGalleryProps, IMediaGalleryViewProps, MediaGalleryView } from '../../..';
import { IMediaGalleryState } from '../media-gallery';
import { IMediaGalleryData } from '../media-gallery.data';

describe('Meida gallery view tests', () => {
    const mockState: IMediaGalleryState = {
        animating: false,
        activeIndex: -1,
        mediaGalleryItems: undefined,
        isImageZoomed: false,
        modalIsOpen:false
    };

    const modalContent = <div>Modal</div>;
    it('renders correctly with no items', () => {
        const moduleProps: IMediaGalleryProps<IMediaGalleryData> = buildMockModuleProps({}, {}) as IMediaGalleryProps<IMediaGalleryData>;
        const mockProps: IMediaGalleryViewProps = {
            ...moduleProps,
            Modal:modalContent,
            state: mockState,
            MediaGallery: { moduleProps, className: 'module-class-MediaGallery' },
            CarouselProps: { moduleProps, className: 'module-class-carousel' },
            Thumbnails: {
                ThumbnailsContainerProps: { className: 'node-class-ThumbnailsContainer' },
                SingleSlideCarouselComponentProps: { className: 'node-class-SingleSlideCarouselComponent' },
            },
        };
        const component = render(<MediaGalleryView {...mockProps} />);
        expect(component).toMatchSnapshot();
    });

    it('renders correctly with 1 item', () => {
        const moduleProps: IMediaGalleryProps<IMediaGalleryData> = buildMockModuleProps({}, {}) as IMediaGalleryProps<IMediaGalleryData>;
        const mockProps: IMediaGalleryViewProps = {
            ...moduleProps,
            Modal:modalContent,
            state: mockState,
            MediaGallery: { moduleProps, className: 'module-class-MediaGallery' },
            CarouselProps: { moduleProps, className: 'module-class-carousel' },
            Thumbnails: {
                ThumbnailsContainerProps: { className: 'node-class-ThumbnailsContainer' },
                SingleSlideCarouselComponentProps: { className: 'node-class-SingleSlideCarouselComponent' },
                items: [
                    {
                        ThumbnailItemContainerProps: { className: 'node-class-ThumbnailItemContainer' },
                        Picture: <span>Picture</span>
                    }
                ]
            },
        };
        const component = render(<MediaGalleryView {...mockProps} />);
        expect(component).toMatchSnapshot();
    });

    it('renders correctly with more than 1 item', () => {
        const moduleProps: IMediaGalleryProps<IMediaGalleryData> = buildMockModuleProps({}, {}) as IMediaGalleryProps<IMediaGalleryData>;
        const mockProps: IMediaGalleryViewProps = {
            ...moduleProps,
            Modal:modalContent,
            state: mockState,
            MediaGallery: { moduleProps, className: 'module-class-MediaGallery' },
            CarouselProps: { moduleProps, className: 'module-class-carousel' },
            Thumbnails: {
                ThumbnailsContainerProps: { className: 'node-class-ThumbnailsContainer' },
                SingleSlideCarouselComponentProps: { className: 'node-class-SingleSlideCarouselComponent' },
                items: [
                    {
                        ThumbnailItemContainerProps: { className: 'node-class-ThumbnailItemContainer' },
                        Picture: <span>Picture 1</span>
                    },
                    {
                        ThumbnailItemContainerProps: { className: 'node-class-ThumbnailItemContainer' },
                        Picture: <span>Picture 2</span>
                    },
                    {
                        ThumbnailItemContainerProps: { className: 'node-class-ThumbnailItemContainer' },
                        Picture: <span>Picture 3</span>
                    }
                ]
            },
        };
        const component = render(<MediaGalleryView {...mockProps} />);
        expect(component).toMatchSnapshot();
    });

});