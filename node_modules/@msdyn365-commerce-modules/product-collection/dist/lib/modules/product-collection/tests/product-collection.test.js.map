{"version":3,"file":"product-collection.test.js","sourceRoot":"./src/","sources":["modules/product-collection/tests/product-collection.test.tsx"],"names":[],"mappings":"AAAA,OAAO,KAAK,KAAK,MAAM,OAAO,CAAC;AAE/B,OAAO,EAAE,oBAAoB,EAAE,gBAAgB,EAAE,kBAAkB,EAAkB,MAAM,yBAAyB,CAAC;AAErH,OAAO,EAAG,KAAK,EAAE,MAAM,QAAQ,CAAC;AAChC,OAAO,EAA+G,uBAAuB,EAAE,MAAM,UAAU,CAAC;AAEhK,MAAM,WAAW,GAAwB;IACrC,QAAQ,EAAE,WAAW;IACrB,MAAM,EAAE,OAAO;IACf,IAAI,EAAE,aAAa;IACnB,WAAW,EAAE,+IAA+I;IAC5J,SAAS,EAAE,KAAK;IAChB,KAAK,EAAE,KAAK;IACZ,YAAY,EAAE,GAAG;IACjB,aAAa,EAAE,gBAAgB;IAC/B,eAAe,EAAC,mIAAmI;CACtJ,CAAC;AAEF,MAAM,qBAAqB,GAA0B,EAAE,CAAC;AACxD,qBAAqB,CAAC,IAAI,CAAC,WAAW,CAAC,CAAC;AAExC,MAAM,eAAe,GAAiB;IAClC,QAAQ,EAAE,qBAAqB;IAC/B,YAAY,EAAE,EAAE;CACnB,CAAC;AAEF,MAAM,aAAa,GAAgC;IAC/C,SAAS,EAAE,MAAM;IACjB,iBAAiB,EAAE,gBAAgB;IACnC,gBAAgB,EAAE,eAAe;IACjC,eAAe,EAAE,gBAAgB;IACjC,WAAW,EAAE,MAAM;IACnB,eAAe,EAAE,UAAU;CAC9B,CAAC;AAGF,MAAM,WAAW,GAAoB,gBAAgB,EAAE,CAAC;AAExD,MAAM,WAAW,GAAiB;IAC9B,OAAO,EAAE,WAAW;IACpB,GAAG,EAAE;QACD,MAAM,EAAE;YACN,UAAU,EAAE,KAAK;SAClB;KACJ;IAEA,gBAAgB,EAAE;QACf,cAAc,EAAE,IAAI,CAAC,EAAE,CAAC,KAAK,CAAC,EAAE,CAAC,IAAI,KAAK,EAAE,CAAC;KAChD;CACJ,CAAC;AAEF,MAAM,WAAW,GAA6B;IAC1C,iBAAiB,EAAE,eAAe;CACrC,CAAC;AAEF,QAAQ,CAAC,iCAAiC,EAAE,GAAG,EAAE;IAC7C,IAAI,WAAwC,CAAC;IAC7C,MAAM,SAAS,GAAG,kBAAkB,EAAE,CAAC;IAEvC,EAAE,CAAC,6CAA6C,EAAE,GAAG,EAAE;QACnD,WAAW,GAAG;YACV,GAAG,oBAAoB,CAAC,EAAE,EAAE,WAAW,EAAE,WAAW,CAAgC;YACpF,SAAS,EAAE,aAAa;YAExB,UAAU,EAAE,IAAI,CAAC,EAAE,CAAC,KAAK,CAAC,EAAE,GAAG,OAAO,6BAAK,KAAK,EAAE,KAAK,GAAI,CAAC,CAAA,CAAC,CAAC;SACjE,CAAC;QAEF,WAAW,CAAC,SAAS,GAAG,SAAS,CAAC;QAClC,MAAM,MAAM,GAAG,KAAK,CAAC,oBAAC,uBAAuB,oBAAK,WAAW,EAAI,CAAC,CAAC;QAEnE,MAAM,CAAC,WAAW,CAAC,UAAU,CAAC,CAAC,UAAU,EAAE,CAAC;QAE5C,MAAM,SAAS,GAAgC,MAAM,CAAC,OAAO,CAAC,CAAC,CAAC,CAAC,KAAK,EAAE,CAAC,KAAK,CAAC;QAC/E,MAAM,CAAC,SAAS,CAAC,CAAC,WAAW,EAAE,CAAC;QAEhC,MAAM,CAAC,SAAS,CAAC,OAAO,CAAC,CAAC,GAAG,CAAC,UAAU,EAAE,CAAC;QAC3C,MAAM,CAAC,SAAS,CAAC,QAAQ,CAAC,CAAC,GAAG,CAAC,UAAU,EAAE,CAAC;QAC5C,MAAM,CAAC,OAAO,EAAE,CAAC;IACrB,CAAC,CAAC,CAAC;AACP,CAAC,CAAC,CAAC","sourcesContent":["import * as React from 'react';\n\nimport { buildMockModuleProps, buildMockRequest, buildMockTelemetry, IRequestContext} from '@msdyn365-commerce/core';\nimport { IProductList, ProductSearchResult } from '@msdyn365-commerce/retail-proxy';\nimport {  mount } from 'enzyme';\nimport { IProductCollectionConfig, IProductCollectionProps, IProductCollectionResources, IProductCollectionViewProps, ProductCollectionModule } from '../../..';\n\nconst mockProduct: ProductSearchResult = {\n    RecordId: 22565429819,\n    ItemId: '81120',\n    Name: 'Cotton Polo',\n    Description: 'Casual shirts are made for the \\u201cgood times\\u201d.  Our custom fitting shirts are relaxed enough to be comfortable without looking baggy.',\n    BasePrice: 59.99,\n    Price: 59.99,\n    TotalRatings: 182,\n    AverageRating: 3.71428571428571,\n    PrimaryImageUrl:'https://cms-ppe-imageresizer-mr.trafficmanager.net/cms/api/fabrikamsb/imageFileData/search?fileName=/Products%2F91032_000_001.png'\n};\n\nconst mockProductCollection: ProductSearchResult[] = [];\nmockProductCollection.push(mockProduct);\n\nconst mockProductList: IProductList = {\n    products: mockProductCollection,\n    listMetadata: {}\n};\n\nconst mockResources: IProductCollectionResources = {\n    priceFree: 'Free',\n    originalPriceText: 'Original price',\n    currentPriceText: 'Current price',\n    ratingAriaLabel: 'average rating',\n    flipperNext: 'next',\n    flipperPrevious: 'previous'\n};\n\n// @ts-ignore\nconst mockRequest: IRequestContext = buildMockRequest();\n// @ts-ignore\nconst mockContext: ICoreContext = {\n    request: mockRequest,\n    app: {\n        config: {\n          hideRating: false\n        },\n    },\n     // @ts-ignore: Using partial for testing\n     cultureFormatter: {\n        formatCurrency: jest.fn(price => `$${price}`)\n    }\n};\n\nconst mockConfigs: IProductCollectionConfig = {\n    productCollection: mockProductList,\n};\n\ndescribe('Product collection Module tests', () => {\n    let moduleProps: IProductCollectionProps<{}>;\n    const telemetry = buildMockTelemetry();\n\n    it('Renders as expected when no product defined', () => {\n        moduleProps = {\n            ...buildMockModuleProps({}, mockConfigs, mockContext) as IProductCollectionProps<{}>,\n            resources: mockResources,\n            // @ts-ignore\n            renderView: jest.fn(props => { return <div props={props} />;}),\n        };\n\n        moduleProps.telemetry = telemetry;\n        const result = mount(<ProductCollectionModule {...moduleProps} />);\n\n        expect(moduleProps.renderView).toBeCalled();\n\n        const viewProps: IProductCollectionViewProps = result.childAt(0).props().props;\n        expect(viewProps).toBeDefined();\n\n        expect(viewProps.heading).not.toBeTruthy();\n        expect(viewProps.products).not.toBeTruthy();\n        result.unmount();\n    });\n});"]}