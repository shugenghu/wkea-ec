{"version":3,"file":"search.js","sourceRoot":"./src/","sources":["modules/search/search.tsx"],"names":[],"mappings":"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","sourcesContent":["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { createSearchStateInput } from '@msdyn365-commerce-modules/search-utilities';\nimport { getTelemetryObject, IModuleProps, INodeProps, ITelemetryContent, KeyCodes } from '@msdyn365-commerce-modules/utilities';\nimport { Autosuggestions } from '@msdyn365-commerce/commerce-entities';\nimport { getUrlSync } from '@msdyn365-commerce/core';\nimport { ProductRefiner } from '@msdyn365-commerce/retail-proxy';\nimport { getProductSearchRefinersAsync } from '@msdyn365-commerce/retail-proxy/dist/DataActions/ProductsDataActions.g';\nimport classnames from 'classnames';\nimport { debounce } from 'lodash';\nimport * as React from 'react';\n\nimport getSearchSuggestionsAction, { AutoSuggestInput, SuggestionType } from './actions/get-auto-suggest-suggestions';\nimport {\n    CategorySuggestionsComponent,\n    FormComponent,\n    ISearchCategoryViewProps,\n    ISearchKeywordViewProps,\n    ISearchProductViewProps,\n    KeywordSuggestionsComponent,\n    LabelComponent,\n    ProductSuggestionsComponent\n} from './components';\nimport { ISearchData } from './search.data';\nimport { ISearchProps, ISuggestionTypeCriterionData } from './search.props.autogenerated';\n\nexport interface ISearchState {\n    isSearchFormExpanded: boolean;\n    searchText: string;\n    searchKeywordSuggestClass: string;\n    searchProductSuggestClass: string;\n    searchCategorySuggestClass: string;\n    suggestions: Autosuggestions | undefined;\n    searchRefiners?: ProductRefiner[] | undefined;\n    autoSuggestAriaLabel: string;\n    isInitialState: boolean;\n}\n\nexport interface ISearchViewProps extends ISearchProps<ISearchData> {\n    Search: IModuleProps;\n    AutoSuggestAriaLabel: INodeProps;\n    AutoSuggestAriaLabelText: string;\n    searchText: string;\n    AutoSuggest: INodeProps;\n    KeywordSuggest: INodeProps;\n    ProductSuggest: INodeProps;\n    CategorySuggest: INodeProps;\n    SearchForm: INodeProps;\n    FormWrapper: INodeProps;\n    UlKeyword: INodeProps;\n    UlProduct: INodeProps;\n    UlCategory: INodeProps;\n    label: React.ReactNode;\n    form: React.ReactNode;\n    autosuggestKeyword?: ISearchKeywordViewProps;\n    autosuggestProduct?: ISearchProductViewProps;\n    autosuggestCategory?: ISearchCategoryViewProps;\n    callbacks: {\n        handleCancelSearchChange(): void;\n    };\n    isSearchFormExpanded: boolean;\n}\n\n/**\n *\n * Search module\n * @extends {React.Component<ISearchProps<ISearchData>, ISearchState>}\n */\nclass Search extends React.Component<ISearchProps<ISearchData>, ISearchState> {\n    private searchTextInput: React.RefObject<HTMLInputElement>;\n    private searchCollapsedLabel: React.RefObject<HTMLButtonElement>;\n    private formReference: React.RefObject<HTMLButtonElement>;\n    private maxChars: number;\n    private inputSuggestionType?: ISuggestionTypeCriterionData[];\n    private topResultsCount?: number;\n    private hitPrefix: string = '{';\n    private hitSuffix: string = '}';\n    private waitTime: number = 500;\n    private autoSuggestResultScreenReaderDiv: React.RefObject<HTMLDivElement>;\n    private autoSuggestResultDiv: React.RefObject<HTMLDivElement>;\n    private searchFormClass: string;\n    private searchLabelClass: string;\n    private telemetryContent: ITelemetryContent;\n    // @ts-ignore\n    private cancellabelDebounce: debounce;\n\n    constructor(props: ISearchProps<ISearchData>) {\n        super(props);\n        this.searchTextInput = React.createRef();\n        this.searchCollapsedLabel = React.createRef();\n        this.autoSuggestResultScreenReaderDiv = React.createRef();\n        this.autoSuggestResultDiv = React.createRef();\n        this.formReference = React.createRef();\n        this.state = {\n            isSearchFormExpanded: false,\n            searchText: '',\n            searchKeywordSuggestClass: 'ms-search__autoSuggest__keyword',\n            searchProductSuggestClass: 'ms-search__autoSuggest__product',\n            searchCategorySuggestClass: 'ms-search__autoSuggest__category',\n            suggestions: undefined,\n            searchRefiners: undefined,\n            autoSuggestAriaLabel: '',\n            isInitialState: true\n        };\n        this.maxChars =\n            (this.props.context &&\n                this.props.context.app &&\n                this.props.context.app.config &&\n                this.props.context.app.config.searchInputMaxLength) ||\n            50;\n        this.inputSuggestionType = this.props.config && this.props.config.suggestionTypeCriterion;\n        this.topResultsCount = this.props.config && this.props.config.topResultsCount ? this.props.config.topResultsCount : 5;\n        this.searchFormClass = 'ms-search__form';\n        this.searchLabelClass = 'ms-search__label';\n        this.telemetryContent = getTelemetryObject(this.props.context.request.telemetryPageName!, this.props.friendlyName, this.props.telemetry);\n    }\n\n    public async componentDidMount(): Promise<void> {\n        document.body && document.body.addEventListener('mousedown', this._focusOutTarget);\n        window && window.addEventListener('keyup', this._keyup);\n    }\n\n    public componentWillUnmount(): void {\n        document.body && document.body.removeEventListener('mousedown', this._focusOutTarget, false);\n        window && window.removeEventListener('keyup', this._keyup, false);\n    }\n\n    public componentDidUpdate(): void {\n        const {\n            config: { hideSearchLabel }\n        } = this.props;\n        const { isSearchFormExpanded, isInitialState } = this.state;\n\n        if (!this.props.context.request.params.isEditor) {\n            if (!hideSearchLabel && isSearchFormExpanded) {\n                this.searchTextInput && this.searchTextInput.current && this.searchTextInput.current.focus();\n            } else if (!isInitialState) {\n                this.searchCollapsedLabel && this.searchCollapsedLabel.current && this.searchCollapsedLabel.current.focus();\n            }\n        }\n    }\n\n    // tslint:disable-next-line: cyclomatic-complexity max-func-body-length\n    public render(): JSX.Element {\n        const {\n            context,\n            resources: { searchtext, searchLabelArialLabel, cancelBtnAriaLabel, searchBtnAriaLabel, submitBtnAriaLabel},\n            config: { hideSearchLabel, disableSubmitSearch, searchplaceholderText, className = '' }\n        } = this.props;\n\n        const {\n            isSearchFormExpanded,\n            searchText,\n            searchKeywordSuggestClass,\n            searchProductSuggestClass,\n            searchCategorySuggestClass,\n            suggestions,\n            searchRefiners\n        } = this.state;\n\n        const searchQsp = (context && context.app && context.app.config && context.app.config.searchQueryStringParameter) || 'q';\n        const searchPageURL = getUrlSync('search', context && context.actionContext) || '';\n        const searchURL = this._appendQueryParams(searchPageURL, searchText, searchQsp);\n        const searchPlaceholder = searchplaceholderText && searchplaceholderText.length > 0 ? searchplaceholderText : 'Search in Fabrikam';\n\n        const keywordSuggestions =\n            suggestions &&\n            suggestions.AllSearchResults &&\n            suggestions.AllSearchResults.filter(\n                i => i.SuggestionType === SuggestionType.Keyword || i.SuggestionType === SuggestionType.None\n            );\n        const productSuggestions =\n            suggestions &&\n            suggestions.AllSearchResults &&\n            suggestions.AllSearchResults.filter(i => i.SuggestionType === SuggestionType.Product);\n        const categorySuggestions =\n            suggestions &&\n            suggestions.AllSearchResults &&\n            suggestions.AllSearchResults.filter(i => i.SuggestionType === SuggestionType.Category);\n\n        const viewProps: ISearchViewProps = {\n            ...(this.props as ISearchProps<ISearchData>),\n\n            Search: {\n                moduleProps: this.props,\n                className: `${classnames('ms-search', className)} ${disableSubmitSearch ? 'no-submit' : 'with-submit'}`,\n            },\n            AutoSuggestAriaLabel: {\n                tag: 'div',\n                className: 'msc-autoSuggest__screen-reader',\n                'aria-live': 'assertive',\n                ref: this.autoSuggestResultScreenReaderDiv\n            },\n            AutoSuggestAriaLabelText: this.state.autoSuggestAriaLabel,\n            searchText: this.state.searchText,\n            AutoSuggest: {\n                ref: this.autoSuggestResultDiv,\n                className: 'ms-search__autoSuggest'\n            },\n            KeywordSuggest: {\n                className: searchKeywordSuggestClass\n            },\n            ProductSuggest: {\n                className: searchProductSuggestClass\n            },\n            CategorySuggest: {\n                className: searchCategorySuggestClass\n            },\n            SearchForm: {\n                className: `${this.searchFormClass} ${isSearchFormExpanded ? 'bx-show' : 'bx-hide'}`\n            },\n            FormWrapper: {\n                tag: 'form',\n                ref: this.formReference,\n                className: 'ms-search__searchForm',\n                'aria-label': 'Search',\n                name: 'searchForm',\n                role: 'Search',\n                action: searchURL,\n                autoComplete: 'off',\n                onSubmit: this._handleSubmit\n            },\n            UlKeyword: {\n                tag: 'ul',\n                className: classnames('msc-autoSuggest__keywordResults-items', className)\n            },\n            UlProduct: {\n                tag: 'ul',\n                className: classnames('msc-autoSuggest__productResults-items', className)\n            },\n            UlCategory: {\n                tag: 'ul',\n                className: classnames('msc-autoSuggest__categoryResults-items', className)\n            },\n            label:LabelComponent({\n                isSearchFormExpanded: isSearchFormExpanded,\n                searchLabelClass: `${this.searchLabelClass} ${isSearchFormExpanded ? 'bx-hide' : 'bx-show'}`,\n                searchtext: searchtext,\n                searchLabelArialLabel: searchLabelArialLabel,\n                searchCollapsedLabel: this.searchCollapsedLabel,\n                hideSearchLabel: hideSearchLabel,\n                handleCancelSearchChange: this._handleCancelSearchChange,\n                telemetryContent: this.telemetryContent\n            }),\n            form: FormComponent({\n                ariaLabelCancel: cancelBtnAriaLabel,\n                ariaLabelSearch: searchBtnAriaLabel,\n                ariaLabelSubmit: submitBtnAriaLabel,\n                hideSearchLabel: hideSearchLabel,\n                searchTextInput: this.searchTextInput,\n                isSearchFormExpanded: isSearchFormExpanded,\n                disableSubmitSearch: disableSubmitSearch,\n                handleInputChange: this._handleInputChange,\n                handleCancelSearchChange: this._handleCancelSearchChange,\n                maxChars: this.maxChars,\n                searchQsp: searchQsp,\n                searchPlaceholder: searchPlaceholder,\n                query: searchText\n            }),\n            autosuggestKeyword:\n                searchText && searchText.length > 0 && keywordSuggestions && keywordSuggestions.length > 0\n                    ? KeywordSuggestionsComponent({\n                          searchKeywordSuggestClass: searchKeywordSuggestClass,\n                          searchPageURL: searchPageURL,\n                          searchQsp: searchQsp,\n                          hitPrefix: this.hitPrefix,\n                          hitSuffix: this.hitSuffix,\n                          autoSuggestProps: this.props,\n                          searchText: searchText,\n                          suggestions: keywordSuggestions,\n                          telemetryContent: this.telemetryContent\n                      })\n                    : undefined,\n            autosuggestProduct:\n                searchText && searchText.length > 0 && productSuggestions && productSuggestions.length > 0\n                    ? ProductSuggestionsComponent({\n                          searchProductSuggestClass: searchProductSuggestClass,\n                          searchPageURL: searchPageURL,\n                          searchQsp: searchQsp,\n                          hitPrefix: this.hitPrefix,\n                          hitSuffix: this.hitSuffix,\n                          autoSuggestProps: this.props,\n                          searchText: searchText,\n                          suggestions: productSuggestions,\n                          telemetry: this.props.telemetry,\n                          moduleType: this.props.typeName,\n                          moduleId: this.props.id,\n                          telemetryContent: this.telemetryContent\n                      })\n                    : undefined,\n            autosuggestCategory:\n                searchText && searchText.length > 0 && categorySuggestions && categorySuggestions.length > 0\n                    ? CategorySuggestionsComponent({\n                          searchCategorySuggestClass: searchCategorySuggestClass,\n                          searchPageURL: searchPageURL,\n                          searchQsp: searchQsp,\n                          hitPrefix: this.hitPrefix,\n                          hitSuffix: this.hitSuffix,\n                          autoSuggestProps: this.props,\n                          searchText: searchText,\n                          suggestions: categorySuggestions,\n                          searchRefiners: searchRefiners,\n                          telemetryContent: this.telemetryContent\n                      })\n                    : undefined,\n            callbacks: {\n                handleCancelSearchChange: this._handleCancelSearchChange\n            },\n            isSearchFormExpanded: this.state.isSearchFormExpanded\n        };\n\n        return this.props.renderView(viewProps) as React.ReactElement;\n    }\n\n    // tslint:disable-next-line:no-any\n    private _focusOutTarget = (e: any): void => {\n        const { suggestions } = this.state;\n\n        if (\n            suggestions &&\n            suggestions.AllSearchResults &&\n            e.target.closest('.ms-search') === null\n        ) {\n            this._clearAutoSuggestState();\n        }\n    };\n\n    private _keyup = (e: KeyboardEvent): void => {\n        const { suggestions } = this.state;\n\n        if (suggestions && suggestions.AllSearchResults && e.keyCode === KeyCodes.Escape) {\n            this._clearAutoSuggestState();\n        } else if(this.state.isSearchFormExpanded && e.keyCode === KeyCodes.Escape) {\n            if(this.state.isSearchFormExpanded) {\n                this.setState({ isSearchFormExpanded: false });\n            }\n        }\n\n        if (!((this.formReference.current && this.formReference.current.contains(e.target as unknown as Node)) ||\n        (this.autoSuggestResultDiv.current && this.autoSuggestResultDiv.current.contains(e.target as unknown as Node)))) {\n            if (suggestions && suggestions.AllSearchResults) {\n                this._clearAutoSuggestState();\n            }\n\n            if(this.state.isSearchFormExpanded) {\n                this.setState({ isSearchFormExpanded: false });\n            }\n        }\n    };\n\n    private _clearAutoSuggestState = (): void => {\n        const {\n            context: { actionContext },\n            data: { searchState }\n        } = this.props;\n\n        if (this.searchTextInput.current && this.searchTextInput.current.value.length > 0) {\n            searchState.searchText = '';\n            searchState.defaultBasicSearchUrl = '';\n            searchState.searchQueryStringParameter = '';\n            actionContext ? actionContext.update(createSearchStateInput(searchState), searchState) : null;\n            this.searchTextInput.current.value = '';\n        }\n\n        this.setState({ searchText: '', suggestions: undefined, searchRefiners: undefined });\n    };\n\n    private _handleInputChange = (query: string): void => {\n        if (!query || query.length < this.maxChars) {\n            this.setState({ searchText: query });\n        }\n\n        if (this.cancellabelDebounce) {\n            this.cancellabelDebounce.cancel();\n        }\n\n        const {\n            telemetry,\n            context,\n            data: { searchState }\n        } = this.props;\n\n        if (context) {\n            if (query && query.length > 0) {\n                if (query.length > this.maxChars) {\n                    return;\n                }\n\n                this.cancellabelDebounce = debounce(() => {\n                    getSearchSuggestionsAction(\n                        new AutoSuggestInput(\n                            query,\n                            this.topResultsCount,\n                            this._getSuggestionType(this.inputSuggestionType),\n                            this.hitPrefix,\n                            this.hitSuffix\n                        ),\n                        context.actionContext\n                    )\n                        .then(results => {\n                            this._getSearchRefiners(query)\n                                .then(refiners => {\n                                    this.setState({ suggestions: results, searchRefiners: refiners,\n                                        autoSuggestAriaLabel: this._setAutoSuggestResultCount(results) });\n                                })\n                                .catch(error => {\n                                    this.setState({ suggestions: results, searchRefiners: undefined,\n                                        autoSuggestAriaLabel: this._setAutoSuggestResultCount(results) });\n                                    telemetry.exception(error);\n                                    telemetry.debug('Unable to get refiners results');\n                                });\n                        })\n                        .catch(error => {\n                            this.setState({ suggestions: undefined, searchRefiners: undefined,\n                                autoSuggestAriaLabel: this._setAutoSuggestResultCount() });\n                            telemetry.exception(error);\n                            telemetry.debug('Unable to get auto suggest results');\n                        });\n                },                                  this.waitTime);\n\n                setTimeout(() => {\n                    this.cancellabelDebounce();\n                },         0);\n\n                searchState.searchText = query;\n            } else {\n                this.setState({ suggestions: undefined, searchRefiners: undefined });\n                searchState.searchText = '';\n            }\n            context.actionContext.update(createSearchStateInput(searchState), searchState);\n        }\n    };\n\n    private _getSuggestionType = (suggestionTypes?: ISuggestionTypeCriterionData[]): string => {\n        if (suggestionTypes && suggestionTypes.length > 0) {\n            const distinctSuggestionTypes: string[] = [];\n            suggestionTypes && suggestionTypes.forEach((suggestionTypeItem, index) => {\n                suggestionTypeItem.SuggestionType && distinctSuggestionTypes.push(suggestionTypeItem.SuggestionType.charAt(0).toUpperCase() + suggestionTypeItem.SuggestionType.slice(1));\n            });\n            return distinctSuggestionTypes.join(',');\n        }\n        return 'Keyword, Product, ScopedCategory';\n    };\n\n    private async _getSearchRefiners(searchText: string): Promise<ProductRefiner[]> {\n        const { actionContext: ctx } = this.props.context;\n        return getProductSearchRefinersAsync(\n            { callerContext: ctx },\n            {\n                SearchCondition: searchText,\n                Context: {\n                    ChannelId: +ctx.requestContext.apiSettings.channelId,\n                    CatalogId: +ctx.requestContext.apiSettings.catalogId\n                }\n            }\n        );\n    }\n\n    private _handleSubmit = (\n        e: React.MouseEvent<HTMLElement> | React.KeyboardEvent<HTMLElement> | React.FormEvent<HTMLFormElement>\n    ): void => {\n        const {\n            config: { disableSubmitSearch },\n            context: {\n                actionContext,\n                app: {\n                    config: { searchQueryStringParameter }\n                }\n            }\n        } = this.props;\n\n        const query = this.searchTextInput.current && this.searchTextInput.current.value;\n        e.preventDefault();\n\n        if (!query || (query && query.length === 0) || disableSubmitSearch) {\n            this.searchTextInput && this.searchTextInput.current && this.searchTextInput.current.focus();\n        } else {\n            const searchQsp = searchQueryStringParameter || 'q';\n            const searchURL = this._appendQueryParams(getUrlSync('search', actionContext) || '', query, searchQsp);\n            document.location.href = searchURL;\n        }\n    };\n\n    private _handleCancelSearchChange = (): void => {\n        const { isSearchFormExpanded, suggestions } = this.state;\n\n        if (!isSearchFormExpanded) {\n            this.setState({\n                isSearchFormExpanded: true,\n                searchText: '',\n                isInitialState: false\n            });\n        } else {\n            if (suggestions && suggestions.AllSearchResults) {\n                this._clearAutoSuggestState();\n            }\n\n            this.setState({ isSearchFormExpanded: false });\n        }\n    };\n\n    private _appendQueryParams = (route: string, query: string, qsp: string): string => {\n        if (route && route.length > 0) {\n            return query && query.length > 0 ? `${route}${route.indexOf('?') === -1 ? '?' : '&'}${qsp}=${query}` : route;\n        }\n        return '';\n    };\n\n    private _setAutoSuggestResultCount = (result?: Autosuggestions) => {\n        if (this.autoSuggestResultScreenReaderDiv.current !== null) {\n            const ariaLiveRegion = this.autoSuggestResultScreenReaderDiv.current;\n            const suggestResultString = this.props.resources.autoSuggestFoundMessage;\n            const emptyResultString = this.props.resources.noAutoSuggestionMessage;\n            ariaLiveRegion.innerText = result && (result.AllSearchResults && result.AllSearchResults.length > 0) ? suggestResultString : emptyResultString;\n            ariaLiveRegion.setAttribute('aria-live','assertive');\n            return ariaLiveRegion.innerText;\n        } else {\n            return '';\n        }\n    };\n}\n\nexport default Search;\n"]}