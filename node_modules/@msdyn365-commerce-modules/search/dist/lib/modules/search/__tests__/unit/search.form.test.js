import * as React from 'react';
import { FormComponent } from '../../components';
describe('Search unit tests - Form Component', () => {
    it('renders correctly when hideSearchLabel is false', () => {
        const mockProps = {
            ariaLabelCancel: 'Cancel',
            ariaLabelSearch: 'Search',
            ariaLabelSubmit: 'Submit search',
            hideSearchLabel: false,
            isSearchFormExpanded: false,
            disableSubmitSearch: false,
            searchTextInput: React.createRef(),
            maxChars: 50,
            searchQsp: 'q',
            searchPlaceholder: 'searchPlaceholder',
            query: 'query',
            handleCancelSearchChange: jest.fn(),
            handleInputChange: jest.fn(),
        };
        const component = FormComponent({ ...mockProps });
        const res = (React.createElement("div", { className: 'ms-search__form bx-hide' },
            React.createElement("div", { className: 'ms-search__searchform' },
                component.input,
                component.submitBtn),
            component.cancelBtn));
        expect(res).toMatchSnapshot();
    });
    it('renders correctly when hideSearchLabel is true', () => {
        const mockProps = {
            ariaLabelCancel: 'Cancel',
            ariaLabelSearch: 'Search',
            ariaLabelSubmit: 'Submit search',
            hideSearchLabel: true,
            isSearchFormExpanded: false,
            disableSubmitSearch: false,
            searchTextInput: React.createRef(),
            maxChars: 50,
            searchQsp: 'q',
            searchPlaceholder: 'searchPlaceholder',
            query: 'query',
            handleCancelSearchChange: jest.fn(),
            handleInputChange: jest.fn()
        };
        const component = FormComponent({ ...mockProps });
        const res = (React.createElement("div", { className: 'ms-search__form bx-hide' },
            React.createElement("div", { className: 'ms-search__searchform' },
                component.input,
                component.submitBtn),
            component.cancelBtn));
        expect(res).toMatchSnapshot();
    });
    it('renders correctly when hide search label and isSearchFormExpanded is true', () => {
        const mockProps = {
            ariaLabelCancel: 'Cancel',
            ariaLabelSearch: 'Search',
            ariaLabelSubmit: 'Submit search',
            hideSearchLabel: true,
            isSearchFormExpanded: true,
            disableSubmitSearch: false,
            searchTextInput: React.createRef(),
            maxChars: 50,
            searchQsp: 'q',
            searchPlaceholder: 'searchPlaceholder',
            query: 'query',
            handleCancelSearchChange: jest.fn(),
            handleInputChange: jest.fn()
        };
        const component = FormComponent({ ...mockProps });
        const res = (React.createElement("div", { className: 'ms-search__form bx-hide' },
            React.createElement("div", { className: 'ms-search__searchform' },
                component.input,
                component.submitBtn),
            component.cancelBtn));
        expect(res).toMatchSnapshot();
    });
    it('renders correctly when hide search label and disableSubmitSearch is true', () => {
        const mockProps = {
            ariaLabelCancel: 'Cancel',
            ariaLabelSearch: 'Search',
            ariaLabelSubmit: 'Submit search',
            hideSearchLabel: true,
            isSearchFormExpanded: false,
            disableSubmitSearch: true,
            searchTextInput: React.createRef(),
            maxChars: 50,
            searchQsp: 'q',
            searchPlaceholder: 'searchPlaceholder',
            query: 'query',
            handleCancelSearchChange: jest.fn(),
            handleInputChange: jest.fn()
        };
        const component = FormComponent({ ...mockProps });
        const res = (React.createElement("div", { className: 'ms-search__form bx-hide' },
            React.createElement("div", { className: 'ms-search__searchform' },
                component.input,
                component.submitBtn),
            component.cancelBtn));
        expect(res).toMatchSnapshot();
    });
    it('renders correctly when isSearchFormExpanded is true', () => {
        const mockProps = {
            ariaLabelCancel: 'Cancel',
            ariaLabelSearch: 'Search',
            ariaLabelSubmit: 'Submit search',
            hideSearchLabel: false,
            isSearchFormExpanded: true,
            disableSubmitSearch: false,
            searchTextInput: React.createRef(),
            maxChars: 50,
            searchQsp: 'q',
            searchPlaceholder: 'searchPlaceholder',
            query: 'query',
            handleCancelSearchChange: jest.fn(),
            handleInputChange: jest.fn()
        };
        const component = FormComponent({ ...mockProps });
        const res = (React.createElement("div", { className: 'ms-search__form bx-hide' },
            React.createElement("div", { className: 'ms-search__searchform' },
                component.input,
                component.submitBtn),
            component.cancelBtn));
        expect(res).toMatchSnapshot();
    });
    it('renders correctly when disableSubmitSearch is true', () => {
        const mockProps = {
            ariaLabelCancel: 'Cancel',
            ariaLabelSearch: 'Search',
            ariaLabelSubmit: 'Submit search',
            hideSearchLabel: false,
            isSearchFormExpanded: false,
            disableSubmitSearch: true,
            searchTextInput: React.createRef(),
            maxChars: 50,
            searchQsp: 'q',
            searchPlaceholder: 'searchPlaceholder',
            query: 'query',
            handleCancelSearchChange: jest.fn(),
            handleInputChange: jest.fn()
        };
        const component = FormComponent({ ...mockProps });
        const res = (React.createElement("div", { className: 'ms-search__form bx-hide' },
            React.createElement("div", { className: 'ms-search__searchform' },
                component.input,
                component.submitBtn),
            component.cancelBtn));
        expect(res).toMatchSnapshot();
    });
});
//# sourceMappingURL=search.form.test.js.map