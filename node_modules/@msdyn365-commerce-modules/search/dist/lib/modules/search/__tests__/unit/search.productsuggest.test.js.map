{"version":3,"file":"search.productsuggest.test.js","sourceRoot":"./src/","sources":["modules/search/__tests__/unit/search.productsuggest.test.tsx"],"names":[],"mappings":"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","sourcesContent":["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { Node } from '@msdyn365-commerce-modules/utilities';\nimport { buildMockModuleProps } from '@msdyn365-commerce/core';\nimport { render } from 'enzyme';\nimport React from 'react';\nimport { SuggestionType } from '../../actions/get-auto-suggest-suggestions';\nimport { ISearchProductSuggestProps, ProductSuggestionsComponent } from '../../components';\nimport { ISearchData } from '../../search.data';\nimport { ISearchConfig } from '../../search.props.autogenerated';\n\nconst mockData: ISearchData = {\n    searchState: {}\n};\n\nconst mockConfig: ISearchConfig = {\n    topResultsCount: 5\n};\n\nconst mockResources = {\n    suggestFoundMessage: '',\n    noSuggestionMessage: '',\n    productSuggestionHeading: '',\n    categorySuggestionHeading: ''\n};\n\ndescribe('Search unit tests - ProductSuggestions Component', () => {\n    it('renders correctly with autosuggest', () => {\n        const moduleProps: ISearchProductSuggestProps = {\n            searchPageURL: '',\n            searchQsp: 'q',\n            hitPrefix: '{',\n            hitSuffix: '}',\n            // @ts-ignore\n            autoSuggestProps: { ...buildMockModuleProps(mockData, {}), resources: mockResources, config: mockConfig },\n            searchText: 'res',\n            suggestions: [\n                {\n                    Value: 'product result 1',\n                    Id: '1',\n                    Value3: { Value: { DecimalValue: 1.1 } },\n                    ImageUrl: '/imageurl1/',\n                    SuggestionType: SuggestionType.Product\n                },\n                {\n                    Value: 'product result 2',\n                    Id: '2',\n                    Value3: { Value: { DecimalValue: 1.1 } },\n                    ImageUrl: '/imageurl2/',\n                    SuggestionType: SuggestionType.Product\n                }\n            ],\n            searchProductSuggestClass: 'search__auto-suggest'\n        };\n\n        const component = ProductSuggestionsComponent({ ...moduleProps });\n        const res = component && (\n            <div>\n                {\n                    <ul>\n                        {component.title}\n                        {component.items.map((item, index) => {\n                            return (\n                                <Node {...item.LiProduct} key={item.id || index}>\n                                    <Node {...item.AProduct}>\n                                        {item.text}\n                                        {item.price}\n                                        {item.thumbnail}\n                                    </Node>\n                                </Node>\n                            );\n                        })}\n                    </ul>\n                }\n            </div>\n        );\n        if (res) {\n            const wrapper = render(res);\n            expect(wrapper).toMatchSnapshot();\n        }\n    });\n\n    it('renders correctly with no autosuggest', () => {\n        const moduleProps: ISearchProductSuggestProps = {\n            searchPageURL: '',\n            searchQsp: 'q',\n            hitPrefix: '{',\n            hitSuffix: '}',\n            // @ts-ignore\n            autoSuggestProps: { ...buildMockModuleProps(mockData, {}), resources: mockResources, config: mockConfig },\n            searchText: 'res',\n            suggestions: undefined,\n            searchProductSuggestClass: 'search__auto-suggest'\n        };\n\n        const component = ProductSuggestionsComponent({ ...moduleProps });\n        const res = component && (\n            <div>\n                {\n                    <ul>\n                        {component.title}\n                        {component.items.map((item, index) => {\n                            return (\n                                <Node {...item.LiProduct} key={item.id || index}>\n                                    <Node {...item.AProduct}>\n                                        {item.text}\n                                        {item.price}\n                                        {item.thumbnail}\n                                    </Node>\n                                </Node>\n                            );\n                        })}\n                    </ul>\n                }\n            </div>\n        );\n        if (res) {\n            const wrapper = render(res);\n            expect(wrapper).toMatchSnapshot();\n        }\n    });\n});\n"]}