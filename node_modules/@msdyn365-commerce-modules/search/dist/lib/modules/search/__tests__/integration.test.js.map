{"version":3,"file":"integration.test.js","sourceRoot":"./src/","sources":["modules/search/__tests__/integration.test.tsx"],"names":[],"mappings":"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","sourcesContent":["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { mount, render } from 'enzyme';\nimport * as React from 'react';\n\n// tslint:disable-next-line:no-unused-variable\nimport { buildMockModuleProps, ICoreContext } from '@msdyn365-commerce/core';\n\nimport { SuggestionType } from '../actions/get-auto-suggest-suggestions';\nimport Search from '../search';\nimport { ISearchData } from '../search.data';\nimport { ISearchConfig, ISearchProps, ISearchResources } from '../search.props.autogenerated';\nimport SearchView from '../search.view';\n\nconst mockData: ISearchData = {\n    searchState: {}\n};\n\nconst actionContext = {\n    requestCache: {\n        put: jest.fn()\n    }\n};\n// @ts-ignore\nconst mockContext: ICoreContext = {\n    // @ts-ignore\n    actionContext: actionContext,\n    app: {\n        config: {\n            searchQueryStringParameter: 'q'\n        }\n    }\n};\n\n// @ts-ignore\nconst mockResources: ISearchResources = {\n    searchtext: 'searchtext',\n    searchLabelArialLabel: 'Search collapsed',\n    cancelBtnAriaLabel: 'Cancel',\n    searchBtnAriaLabel: 'Search',\n    submitBtnAriaLabel: 'Submit search'\n};\n\nconst mockConfig: ISearchConfig = {\n    hideSearchLabel: false,\n    className: '',\n    disableSubmitSearch: false,\n    searchplaceholderText:''\n};\n\nconst mockConfigDisableSubmit: ISearchConfig = {\n    hideSearchLabel: false,\n    className: '',\n    disableSubmitSearch: true\n};\n\ndescribe('Search integration tests', () => {\n    it('renders correctly with no suggest', () => {\n        const moduleProps: ISearchProps<ISearchData> = {\n            ...(buildMockModuleProps(mockData, {}, mockConfig, mockContext) as ISearchProps<ISearchData>),\n            resources: mockResources,\n            // @ts-ignore\n            renderView: SearchView\n        };\n\n        const component = render(<Search {...moduleProps} />);\n        expect(component).toMatchSnapshot();\n    });\n\n    it('renders correctly click label', () => {\n        const moduleProps: ISearchProps<ISearchData> = {\n            ...(buildMockModuleProps(mockData, {}, mockConfig, mockContext) as ISearchProps<ISearchData>),\n            resources: mockResources,\n            // @ts-ignore\n            renderView: SearchView\n        };\n\n        const wrapper = mount(<Search {...moduleProps} />);\n        const clickLabel = wrapper.find('.ms-search__icon').at(0);\n        clickLabel.simulate('click');\n        expect(wrapper.state('isSearchFormExpanded')).toBe(true);\n    });\n\n    it('renders correctly input change', () => {\n        const moduleProps: ISearchProps<ISearchData> = {\n            ...(buildMockModuleProps(mockData, {}, mockConfig, mockContext) as ISearchProps<ISearchData>),\n            resources: mockResources,\n            // @ts-ignore\n            renderView: SearchView\n        };\n\n        const wrapper = mount(<Search {...moduleProps} />);\n        const input = wrapper.find('input').at(0);\n\n        // @ts-ignore\n        input.instance().value = 'mockinput';\n        input.simulate('change');\n        expect(moduleProps.data.searchState.searchText).toBe('mockinput');\n    });\n\n    it('renders correctly query too long', () => {\n        const moduleProps: ISearchProps<ISearchData> = {\n            ...(buildMockModuleProps(mockData, {}, mockConfig, mockContext) as ISearchProps<ISearchData>),\n            resources: mockResources,\n            // @ts-ignore\n            renderView: SearchView\n        };\n\n        const wrapper = mount(<Search {...moduleProps} />);\n        const input = wrapper.find('input').at(0);\n        // @ts-ignore\n        input.instance().value = 'searchinputsearchinputsearchinputsearchinputsearchinputsearchinputsearchinputsearchinput';\n        input.simulate('change');\n        expect(wrapper.state('searchText')).toBe('');\n    });\n\n    it('renders correctly query empty', () => {\n        const moduleProps: ISearchProps<ISearchData> = {\n            ...(buildMockModuleProps(mockData, {}, mockConfig, mockContext) as ISearchProps<ISearchData>),\n            resources: mockResources,\n            // @ts-ignore\n            renderView: SearchView\n        };\n\n        const wrapper = mount(<Search {...moduleProps} />);\n        const input = wrapper.find('input').at(0);\n        // @ts-ignore\n        input.instance().value = '';\n        input.simulate('change');\n        expect(wrapper.state('searchText')).toBe('');\n    });\n\n    it('renders correctly disable submit', () => {\n        const moduleProps: ISearchProps<ISearchData> = {\n            ...(buildMockModuleProps(mockData, {}, mockConfigDisableSubmit, mockContext) as ISearchProps<ISearchData>),\n            resources: mockResources,\n            // @ts-ignore\n            renderView: SearchView\n        };\n\n        const wrapper = mount(<Search {...moduleProps} />);\n        const form = wrapper.find('form').at(0);\n        const clickLabel = form.find('input').at(0);\n        // @ts-ignore\n        clickLabel.instance().value = 'searchinput';\n        form.simulate('submit');\n        expect(document.location.href).toBe('http://localhost/');\n    });\n\n    it('renders correctly keydown', () => {\n        const moduleProps: ISearchProps<ISearchData> = {\n            ...(buildMockModuleProps(mockData, {}, mockConfig, mockContext) as ISearchProps<ISearchData>),\n            resources: mockResources,\n            // @ts-ignore\n            renderView: SearchView\n        };\n\n        const wrapper = mount(<Search {...moduleProps} />);\n\n        wrapper.setState({\n            searchText: 'mockSearchText',\n            suggestions: {\n              AllSearchResults: [\n                {Value: 'keyword result 1', Id: '1', SuggestionType: SuggestionType.Keyword},\n                {Value: 'keyword result 2', Id: '2', SuggestionType: SuggestionType.Keyword},\n                {Value: 'product result 3', Id: '3', Value3: {Value: {DecimalValue: 1.1}}, ImageUrl: '/imageurl/', SuggestionType: SuggestionType.Product},\n                {Value: 'product result 4', Id: '4', Value3: {Value: {DecimalValue: 1.1}}, ImageUrl: '/imageurl/', SuggestionType: SuggestionType.Product},\n                {Value: 'category result 5', Id: '5', SuggestionType: SuggestionType.Category},\n                {Value: 'category result 6', Id: '6', SuggestionType: SuggestionType.Category}\n              ]\n            },\n            searchRefiners: [{KeyName: 'Category', Values: [{RefinerRecordId: 1}]}]\n          });\n\n        const clickLabel = wrapper.find('input').at(0);\n        // @ts-ignore\n        clickLabel.instance().value = 'searchinput';\n\n        const instance = wrapper.instance();\n        // @ts-ignore\n        const event = new KeyboardEvent('keyup', { keyCode: 27 });\n        // @ts-ignore ignore private method\n        instance._keyup(event);\n        expect(wrapper.state('searchText')).toBe('');\n    });\n\n    it('renders correctly _focusOutTarget', () => {\n        const moduleProps: ISearchProps<ISearchData> = {\n            ...(buildMockModuleProps(mockData, {}, mockConfig, mockContext) as ISearchProps<ISearchData>),\n            resources: mockResources,\n            // @ts-ignore\n            renderView: SearchView\n        };\n\n        const wrapper = mount(<Search {...moduleProps} />);\n        const instance = wrapper.instance();\n\n        // @ts-ignore\n        instance._focusOutTarget({ target: document.createElement('div') });\n        expect(wrapper.state('searchText')).toBe('');\n    });\n\n});\n"]}