{"version":3,"file":"search.view.test.js","sourceRoot":"./src/","sources":["modules/search/__tests__/unit/search.view.test.tsx"],"names":[],"mappings":"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","sourcesContent":["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { render } from 'enzyme';\nimport * as React from 'react';\n\nimport { buildMockModuleProps } from '@msdyn365-commerce/core';\nimport { ISearchData } from '../../search.data';\nimport { ISearchProps } from '../../search.props.autogenerated';\nimport SearchView from '../../search.view';\n\nconst moduleProps: ISearchProps<ISearchData> = buildMockModuleProps({}, {}) as ISearchProps<ISearchData>;\n\ndescribe('Search unit tests - View', () => {\n    it('renders correctly', () => {\n        const mockProps = {\n            ...moduleProps,\n            Search: { moduleProps, className: 'module-class-Search' },\n            AutoSuggestAriaLabel: { className: 'node-class-AutoSuggestAriaLable'},\n            AutoSuggestAriaLabelText: '',\n            searchText: '',\n            AutoSuggest: { className: 'node-class-AutoSuggest' },\n            KeywordSuggest: { className: 'node-class-KeywordSuggest' },\n            ProductSuggest: { className: 'node-class-ProductSuggest' },\n            CategorySuggest: { className: 'node-class-CategorySuggest' },\n            SearchForm: { className: 'node-class-SearchForm' },\n            FormWrapper: { className: 'node-class-FormWrapper' },\n            className: 'ms-search',\n            autoSuggestClassName: 'ms-search__autoSuggest',\n            search: React.createRef(),\n            disableSubmitSearch: false,\n            label: '{LabelComponent}',\n            form: '{FormComponent}',\n            autosuggestKeyword: { screenReader: '{screenReader}', text: ['{keywordText}'] },\n            autosuggestProduct: {\n                screenReader: '{screenReader}',\n                title: '{productTitle}',\n                items: [\n                    {\n                        text: '{productText}',\n                        price: '{productPrice}',\n                        thumbnail: '{productThumbnail}',\n                        LiProduct: { className: 'node-class-LiProduct' },\n                        AProduct: { className: 'node-class-AProduct' },\n                        id: 'id'\n                    }\n                ]\n            },\n            autosuggestCategory: { screenReader: '{screenReader}', title: '{categoryTitle}', text: ['{categoryText}'] },\n            UlKeyword: { className: 'node-class-UlKeyword' },\n            UlProduct: { className: 'node-class-UlProduct' },\n            UlCategory: { className: 'node-class-UlCategory' },\n            callbacks: {handleCancelSearchChange: jest.fn()},\n            isSearchFormExpanded: false\n        };\n        const component = render(<SearchView {...mockProps} />);\n        expect(component).toMatchSnapshot();\n    });\n\n    it('renders correctly with no search results', () => {\n        const mockProps = {\n            ...moduleProps,\n            Search: { moduleProps, className: 'module-class-Search' },\n            AutoSuggestAriaLabel: { className: 'node-class-AutoSuggestAriaLable'},\n            AutoSuggestAriaLabelText: '',\n            searchText: '',\n            AutoSuggest: { className: 'node-class-AutoSuggest' },\n            KeywordSuggest: { className: 'node-class-KeywordSuggest' },\n            ProductSuggest: { className: 'node-class-ProductSuggest' },\n            CategorySuggest: { className: 'node-class-CategorySuggest' },\n            SearchForm: { className: 'node-class-SearchForm' },\n            FormWrapper: { className: 'node-class-FormWrapper' },\n            className: 'ms-search',\n            autoSuggestClassName: 'ms-search__autoSuggest',\n            search: React.createRef(),\n            disableSubmitSearch: false,\n            label: '{LabelComponent}',\n            form: '{FormComponent}',\n            autosuggestKeyword: undefined,\n            autosuggestProduct: undefined,\n            autosuggestCategory: undefined,\n            UlKeyword: { className: 'node-class-UlKeyword' },\n            UlProduct: { className: 'node-class-UlProduct' },\n            UlCategory: { className: 'node-class-UlCategory' },\n            callbacks: {handleCancelSearchChange: jest.fn()},\n            isSearchFormExpanded: false\n        };\n        const component = render(<SearchView {...mockProps} />);\n        expect(component).toMatchSnapshot();\n    });\n\n    it('renders correctly when disable submit search', () => {\n        const mockProps = {\n            ...moduleProps,\n            Search: { moduleProps, className: 'module-class-Search' },\n            AutoSuggestAriaLabel: { className: 'node-class-AutoSuggestAriaLable'},\n            AutoSuggestAriaLabelText: '',\n            searchText: '',\n            AutoSuggest: { className: 'node-class-AutoSuggest' },\n            KeywordSuggest: { className: 'node-class-KeywordSuggest' },\n            ProductSuggest: { className: 'node-class-ProductSuggest' },\n            CategorySuggest: { className: 'node-class-CategorySuggest' },\n            SearchForm: { className: 'node-class-SearchForm' },\n            FormWrapper: { className: 'node-class-FormWrapper' },\n            className: 'ms-search',\n            autoSuggestClassName: 'ms-search__autoSuggest',\n            search: React.createRef(),\n            disableSubmitSearch: true,\n            label: '{LabelComponent}',\n            form: '{FormComponent}',\n            autosuggestKeyword: { screenReader: '{screenReader}', text: ['{keywordText}'] },\n            autosuggestProduct: {\n                screenReader: '{screenReader}',\n                title: '{productTitle}',\n                items: [\n                    {\n                        text: '{productText}',\n                        price: '{productPrice}',\n                        thumbnail: '{productThumbnail}',\n                        LiProduct: { className: 'node-class-LiProduct' },\n                        AProduct: { className: 'node-class-AProduct' },\n                        id: 'id'\n                    }\n                ]\n            },\n            autosuggestCategory: { screenReader: '{screenReader}', title: '{categoryTitle}', text: ['{categoryText}'] },\n            UlKeyword: { className: 'node-class-UlKeyword' },\n            UlProduct: { className: 'node-class-UlProduct' },\n            UlCategory: { className: 'node-class-UlCategory' },\n            callbacks: {handleCancelSearchChange: jest.fn()},\n            isSearchFormExpanded: false\n        };\n        const component = render(<SearchView {...mockProps} />);\n        expect(component).toMatchSnapshot();\n    });\n});\n"]}