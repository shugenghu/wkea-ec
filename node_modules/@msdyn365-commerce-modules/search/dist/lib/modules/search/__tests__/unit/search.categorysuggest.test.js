import * as React from 'react';
import { buildMockModuleProps } from '@msdyn365-commerce/core';
import { CategorySuggestionsComponent } from '../../components';
const mockData = {
    searchState: {}
};
const mockConfig = {
    topResultsCount: 5
};
const mockResources = {
    categorySuggestFoundMessage: 'suggestions are available',
    noCategorySuggestionMessage: 'suggestions are not available',
    productSuggestionHeading: '',
    categorySuggestionHeading: 'heading'
};
describe('Search unit tests - CategorySuggestions Component', () => {
    it('renders correctly with suggestions and refiners', () => {
        const moduleProps = {
            searchPageURL: '',
            searchQsp: 'q',
            hitPrefix: '{',
            hitSuffix: '}',
            autoSuggestProps: { ...buildMockModuleProps(mockData, {}), resources: mockResources, config: mockConfig },
            searchText: 'res',
            suggestions: [
                { Value: 'category result 1', SuggestionType: "ScopedCategory", Id: '1' },
                { Value: 'category result 2', SuggestionType: "ScopedCategory", Id: '2' },
                { Value: '{res}ult', SuggestionType: "ScopedCategory", Id: '3' },
                { Value: '', SuggestionType: "ScopedCategory", Id: '4' }
            ],
            searchRefiners: [{ KeyName: 'Category', Values: [{ RefinerRecordId: 1 }] }],
            searchCategorySuggestClass: 'search__auto-suggest'
        };
        const component = CategorySuggestionsComponent({ ...moduleProps });
        const res = component && (React.createElement("div", null,
            React.createElement("ul", null,
                component.title,
                component.text.map((item, index) => {
                    return (item);
                }))));
        expect(res).toMatchSnapshot();
    });
    it('renders correctly without suggestions and refiners', () => {
        const moduleProps = {
            searchPageURL: '',
            searchQsp: 'q',
            hitPrefix: '{',
            hitSuffix: '}',
            autoSuggestProps: { ...buildMockModuleProps(mockData, {}), resources: mockResources, config: mockConfig },
            searchText: 'res',
            suggestions: [],
            searchRefiners: [],
            searchCategorySuggestClass: 'search__auto-suggest'
        };
        const component = CategorySuggestionsComponent({ ...moduleProps });
        const res = component && (React.createElement("div", null,
            React.createElement("ul", null,
                component.title,
                component.text.map((item) => {
                    return (item);
                }))));
        expect(res).toMatchSnapshot();
    });
});
//# sourceMappingURL=search.categorysuggest.test.js.map