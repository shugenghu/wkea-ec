import { Module, Node } from '@msdyn365-commerce-modules/utilities';
import * as React from 'react';
const SearchView = props => {
    const { Search, AutoSuggestAriaLabel, AutoSuggestAriaLabelText, searchText, AutoSuggest, KeywordSuggest, ProductSuggest, CategorySuggest, UlKeyword, UlProduct, UlCategory, form, autosuggestCategory, autosuggestKeyword, autosuggestProduct, SearchForm, FormWrapper, label } = props;
    return (React.createElement(Module, Object.assign({}, Search),
        label,
        _renderForm(form, SearchForm, FormWrapper),
        React.createElement(Node, Object.assign({}, AutoSuggest),
            searchText && searchText.length > 0 ?
                React.createElement(Node, Object.assign({}, AutoSuggestAriaLabel), AutoSuggestAriaLabelText) : '',
            _renderKeywordSuggestions(KeywordSuggest, UlKeyword, autosuggestKeyword),
            _renderProductSuggestions(ProductSuggest, UlProduct, autosuggestProduct),
            _renderCategorySuggestions(CategorySuggest, UlCategory, autosuggestCategory))));
};
const _renderForm = (form, SearchForm, FormWrapper) => {
    return (React.createElement(Node, Object.assign({}, SearchForm),
        React.createElement(Node, Object.assign({}, FormWrapper),
            form.submitBtn,
            form.input,
            form.cancelBtn)));
};
const _renderKeywordSuggestions = (KeywordSuggest, UlKeyword, keywordSuggestions) => {
    return (keywordSuggestions && (React.createElement(Node, Object.assign({}, KeywordSuggest),
        React.createElement(Node, Object.assign({}, UlKeyword), keywordSuggestions.text.map(text => {
            return text;
        })))));
};
const _renderProductSuggestions = (ProductSuggest, UlProduct, productSuggestions) => {
    return (productSuggestions && (React.createElement(Node, Object.assign({}, ProductSuggest),
        React.createElement(Node, Object.assign({}, UlProduct),
            productSuggestions.title,
            productSuggestions.items.map((item, index) => {
                return (React.createElement(Node, Object.assign({}, item.LiProduct, { key: item.id || index }),
                    React.createElement(Node, Object.assign({}, item.AProduct),
                        item.thumbnail,
                        item.text,
                        item.price)));
            })))));
};
const _renderCategorySuggestions = (CategorySuggest, UlCategory, categorySuggestions) => {
    return (categorySuggestions && (React.createElement(Node, Object.assign({}, CategorySuggest),
        React.createElement(Node, Object.assign({}, UlCategory),
            categorySuggestions.title,
            categorySuggestions.text.map(text => {
                return text;
            })))));
};
export default SearchView;
//# sourceMappingURL=search.view.js.map