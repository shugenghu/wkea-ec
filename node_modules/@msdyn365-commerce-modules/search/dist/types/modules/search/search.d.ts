import { IModuleProps, INodeProps } from '@msdyn365-commerce-modules/utilities';
import { Autosuggestions } from '@msdyn365-commerce/commerce-entities';
import { ProductRefiner } from '@msdyn365-commerce/retail-proxy';
import * as React from 'react';
import { ISearchCategoryViewProps, ISearchKeywordViewProps, ISearchProductViewProps } from './components';
import { ISearchData } from './search.data';
import { ISearchProps } from './search.props.autogenerated';
export interface ISearchState {
    isSearchFormExpanded: boolean;
    searchText: string;
    searchKeywordSuggestClass: string;
    searchProductSuggestClass: string;
    searchCategorySuggestClass: string;
    suggestions: Autosuggestions | undefined;
    searchRefiners?: ProductRefiner[] | undefined;
    autoSuggestAriaLabel: string;
    isInitialState: boolean;
}
export interface ISearchViewProps extends ISearchProps<ISearchData> {
    Search: IModuleProps;
    AutoSuggestAriaLabel: INodeProps;
    AutoSuggestAriaLabelText: string;
    searchText: string;
    AutoSuggest: INodeProps;
    KeywordSuggest: INodeProps;
    ProductSuggest: INodeProps;
    CategorySuggest: INodeProps;
    SearchForm: INodeProps;
    FormWrapper: INodeProps;
    UlKeyword: INodeProps;
    UlProduct: INodeProps;
    UlCategory: INodeProps;
    label: React.ReactNode;
    form: React.ReactNode;
    autosuggestKeyword?: ISearchKeywordViewProps;
    autosuggestProduct?: ISearchProductViewProps;
    autosuggestCategory?: ISearchCategoryViewProps;
    callbacks: {
        handleCancelSearchChange(): void;
    };
    isSearchFormExpanded: boolean;
}
declare class Search extends React.Component<ISearchProps<ISearchData>, ISearchState> {
    private searchTextInput;
    private searchCollapsedLabel;
    private formReference;
    private maxChars;
    private inputSuggestionType?;
    private topResultsCount?;
    private hitPrefix;
    private hitSuffix;
    private waitTime;
    private autoSuggestResultScreenReaderDiv;
    private autoSuggestResultDiv;
    private searchFormClass;
    private searchLabelClass;
    private telemetryContent;
    private cancellabelDebounce;
    constructor(props: ISearchProps<ISearchData>);
    componentDidMount(): Promise<void>;
    componentWillUnmount(): void;
    componentDidUpdate(): void;
    render(): JSX.Element;
    private _focusOutTarget;
    private _keyup;
    private _clearAutoSuggestState;
    private _handleInputChange;
    private _getSuggestionType;
    private _getSearchRefiners;
    private _handleSubmit;
    private _handleCancelSearchChange;
    private _appendQueryParams;
    private _setAutoSuggestResultCount;
}
export default Search;
