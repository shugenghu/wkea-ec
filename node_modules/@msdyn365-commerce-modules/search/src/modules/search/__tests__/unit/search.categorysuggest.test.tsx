/*---------------------------------------------------------------------------------------------
 *  Copyright (c) Microsoft Corporation. All rights reserved.
 *  Licensed under the MIT License. See License.txt in the project root for license information.
 *--------------------------------------------------------------------------------------------*/

import * as React from 'react';

import { buildMockModuleProps } from '@msdyn365-commerce/core';
import { SuggestionType } from '../../actions/get-auto-suggest-suggestions';
import { CategorySuggestionsComponent, ISearchCategorySuggestProps } from '../../components';
import { ISearchData } from '../../search.data';
import { ISearchConfig } from '../../search.props.autogenerated';

const mockData: ISearchData = {
    searchState: {}
  };

const mockConfig: ISearchConfig = {
    topResultsCount: 5
};

const mockResources = {
  categorySuggestFoundMessage: 'suggestions are available',
  noCategorySuggestionMessage: 'suggestions are not available',
  productSuggestionHeading: '',
  categorySuggestionHeading: 'heading'
};

describe('Search unit tests - CategorySuggestions Component', () => {
    it('renders correctly with suggestions and refiners', () => {
        const moduleProps: ISearchCategorySuggestProps = {
            searchPageURL: '',
            searchQsp: 'q',
            hitPrefix: '{',
            hitSuffix: '}',
            // @ts-ignore
            autoSuggestProps: { ...buildMockModuleProps(mockData, {}), resources: mockResources, config: mockConfig },
            searchText: 'res',
            suggestions: [
                {Value: 'category result 1', SuggestionType: SuggestionType.Category, Id: '1'},
                {Value: 'category result 2', SuggestionType: SuggestionType.Category, Id: '2'},
                {Value: '{res}ult', SuggestionType: SuggestionType.Category, Id: '3'},
                {Value: '', SuggestionType: SuggestionType.Category, Id: '4'}
              ],
              searchRefiners: [{KeyName: 'Category', Values: [{RefinerRecordId: 1}]}],
            searchCategorySuggestClass: 'search__auto-suggest'
        };

        const component = CategorySuggestionsComponent({...moduleProps});
        const res = component && (
          <div>
            <ul>
              {component.title}
              {component.text.map((item, index) => {
                return (item);
              })}
            </ul>
          </div>
        );
        expect(res).toMatchSnapshot();
    });

    it('renders correctly without suggestions and refiners', () => {
      const moduleProps: ISearchCategorySuggestProps = {
          searchPageURL: '',
          searchQsp: 'q',
          hitPrefix: '{',
          hitSuffix: '}',
          // @ts-ignore
          autoSuggestProps: { ...buildMockModuleProps(mockData, {}), resources: mockResources, config: mockConfig },
          searchText: 'res',
          suggestions: [],
          searchRefiners: [],
          searchCategorySuggestClass: 'search__auto-suggest'
      };

      const component = CategorySuggestionsComponent({...moduleProps});
      const res = component && (
        <div>
          <ul>
            {component.title}
            {component.text.map((item) => {
              return (item);
            })}
          </ul>
        </div>
      );
      expect(res).toMatchSnapshot();
  });
});
