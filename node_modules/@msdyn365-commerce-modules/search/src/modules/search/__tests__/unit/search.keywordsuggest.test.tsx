/*---------------------------------------------------------------------------------------------
 *  Copyright (c) Microsoft Corporation. All rights reserved.
 *  Licensed under the MIT License. See License.txt in the project root for license information.
 *--------------------------------------------------------------------------------------------*/

import * as React from 'react';

import { buildMockModuleProps } from '@msdyn365-commerce/core';
import { SuggestionType } from '../../actions/get-auto-suggest-suggestions';
import { ISearchKeywordSuggestProps, KeywordSuggestionsComponent } from '../../components';
import { ISearchConfig } from '../../search.props.autogenerated';

const mockConfig: ISearchConfig = {
    topResultsCount: 5
};

const mockResources = {
    suggestFoundMessage: '',
    noSuggestionMessage: '',
    productSuggestionHeading: '',
    categorySuggestionHeading: ''
};

describe('Search unit tests - KeywordSuggestions Component', () => {
    it('renders correctly with autosuggest', () => {
        const moduleProps: ISearchKeywordSuggestProps = {
            searchPageURL: '',
            searchQsp: 'q',
            hitPrefix: '{',
            hitSuffix: '}',
            // @ts-ignore
            autoSuggestProps: { ...buildMockModuleProps({}, {}), resources: mockResources, config: mockConfig },
            searchText: 'res',
            suggestions: [
                {Value: 'keyword {res}ult 1', Id: '1', SuggestionType: SuggestionType.Keyword},
                {Value: 'keyword {res}ult 2', Id: '2', SuggestionType: SuggestionType.Keyword}
            ],
            searchKeywordSuggestClass: 'search__auto-suggest'
        };

        const component = KeywordSuggestionsComponent({...moduleProps});
        const res = component && (
            <div>
                {<ul>
                    {component.text.map((item, index) => {
                        return (item);
                    })}
                </ul>}
            </div>
        );
        expect(res).toMatchSnapshot();
    });

    it('renders correctly with no autosuggest', () => {
        const moduleProps: ISearchKeywordSuggestProps = {
            searchPageURL: '',
            searchQsp: 'q',
            hitPrefix: '{',
            hitSuffix: '}',
            // @ts-ignore
            autoSuggestProps: { ...buildMockModuleProps({}, {}), resources: mockResources, config: mockConfig },
            searchText: 'res',
            suggestions: undefined,
            searchKeywordSuggestClass: 'search__auto-suggest'
        };

        const component = KeywordSuggestionsComponent({...moduleProps});
        const res = component && (
            <div>
                {<ul>
                    {component.text.map((item, index) => {
                        return (item);
                    })}
                </ul>}
            </div>
        );
        expect(res).toMatchSnapshot();
    });
});
