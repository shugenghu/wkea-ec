/*---------------------------------------------------------------------------------------------
 *  Copyright (c) Microsoft Corporation. All rights reserved.
 *  Licensed under the MIT License. See License.txt in the project root for license information.
 *--------------------------------------------------------------------------------------------*/

import { ITelemetryContent } from '@msdyn365-commerce-modules/utilities';
import { buildMockCoreContext, ICoreContext } from '@msdyn365-commerce/core';
import { render, shallow } from 'enzyme';
import * as React from 'react';
import { ISearchLabelProps, LabelComponent } from '../../components';

describe('Search unit tests - Label Component', () => {
    const mockCoreContext = buildMockCoreContext({app: {config: {hideRating: false}}}) as ICoreContext;
    const telemetryContent = {  pageName: 'Homepage', moduleName: 'Product Collection', telemetry: mockCoreContext.telemetry} as ITelemetryContent;
    it('renders correctly', () => {
        const mockProps: ISearchLabelProps = {
            isSearchFormExpanded: false,
            searchLabelClass: 'search__label',
            searchtext: 'searchText',
            searchLabelArialLabel: 'Search collapsed',
            searchCollapsedLabel: React.createRef(),
            handleCancelSearchChange: jest.fn(),
            telemetryContent: telemetryContent
        };

        const component = render(<LabelComponent {...mockProps} />);
        expect(component).toMatchSnapshot();
    });

    it('calls handleCancelSearchChange after clicking', () => {
        const mockProps: ISearchLabelProps = {
            isSearchFormExpanded: false,
            searchLabelClass: 'search__label',
            searchtext: 'searchText',
            searchLabelArialLabel: 'Search collapsed',
            searchCollapsedLabel: React.createRef(),
            handleCancelSearchChange: jest.fn(),
            telemetryContent: telemetryContent
        };

        const component = shallow(<LabelComponent {...mockProps} />);
        const clickLabel = component.find(`.ms-search__icon`).at(0);
        expect(component).toMatchSnapshot();
        clickLabel.simulate('click');
        expect(mockProps.handleCancelSearchChange).toBeCalled();
    });
});
