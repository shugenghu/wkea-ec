import { buildCacheKey, getProductUrlSync, getSelectedProductIdFromActionInput, getSelectedVariant, SelectedVariantInput } from '@msdyn365-commerce-modules/retail-actions';
import { createObservableDataAction } from '@msdyn365-commerce/core';
export class ProductPageSummaryInput {
    constructor(config, apiSettings) {
        this.getCacheObjectType = () => 'ProductPageSummary';
        this.getCacheKey = () => `${buildCacheKey('ProductPageSummary', this.apiSettings)}-${this.config.title}`;
        this.dataCacheType = () => 'request';
        this.config = config || {};
        this.apiSettings = apiSettings;
    }
}
const createGetSelectedVariantInput = (inputData) => {
    const productId = getSelectedProductIdFromActionInput(inputData);
    if (productId) {
        return new SelectedVariantInput(+productId, +inputData.requestContext.apiSettings.channelId, []);
    }
    else {
        throw new Error('Unable to create SelectedVariantInput, no productId found on module config or query');
    }
};
const action = async (input, context) => {
    const { config } = input;
    let simpleProductData;
    try {
        simpleProductData = await getSelectedVariant(createGetSelectedVariantInput(context), context);
    }
    catch (e) {
    }
    if (simpleProductData) {
        let productUrl;
        try {
            productUrl = getProductUrlSync(simpleProductData, context);
            const canonicalDomain = context.requestContext.canonicalDomain;
            if (productUrl && canonicalDomain) {
                productUrl = `https://${canonicalDomain}${productUrl}`;
            }
            else {
                productUrl = undefined;
            }
        }
        catch (e) {
            productUrl = undefined;
        }
        return {
            title: simpleProductData.Name,
            description: simpleProductData.Description,
            sharingImageUrl: simpleProductData.PrimaryImageUrl,
            canonicalUrl: productUrl,
            faviconUrl: config && config.faviconUrl
        };
    }
    else if (config) {
        return {
            title: config.title,
            description: config.description,
            sharingImageUrl: config.sharingImage && config.sharingImage.src,
            faviconUrl: config && config.faviconUrl
        };
    }
    else {
        return {};
    }
};
export default createObservableDataAction({
    id: '@msdyn365-commerce-modules/page-summary/product-page-summary',
    action: action,
    input: (args) => {
        return new ProductPageSummaryInput(args.config, args.requestContext.apiSettings);
    }
});
//# sourceMappingURL=product-page-summary.action.js.map