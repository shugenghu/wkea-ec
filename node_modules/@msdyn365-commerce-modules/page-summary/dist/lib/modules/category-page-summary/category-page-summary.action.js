import { buildCacheKeyWithUrlTokens, CurrentCategoryInput, getCategoryUrl, getCurrentCategory } from '@msdyn365-commerce-modules/retail-actions';
import { createObservableDataAction, getFriendlyName } from '@msdyn365-commerce/core';
export class CategoryPageSummaryInput {
    constructor(config, requestContext) {
        this.getCacheObjectType = () => 'CategoryPageSummary';
        this.getCacheKey = () => buildCacheKeyWithUrlTokens('CategoryPageSummary', this.requestContext);
        this.dataCacheType = () => 'request';
        this.config = config || {};
        this.requestContext = requestContext;
    }
}
const createGetCurrentCategoryInput = (inputData) => {
    if (inputData && inputData.requestContext) {
        return new CurrentCategoryInput(inputData.requestContext);
    }
    throw new Error('Please specify categoryId query string in request.');
};
const action = async (input, context) => {
    const { config } = input;
    let currentCategory;
    try {
        currentCategory = await getCurrentCategory(createGetCurrentCategoryInput(context), context);
    }
    catch (e) {
    }
    if (currentCategory) {
        let categoryUrl;
        try {
            const localName = getFriendlyName(context.requestContext.locale, currentCategory.NameTranslations);
            const neutralizedName = currentCategory.NeutralizedName || currentCategory.Name;
            currentCategory.Name = localName;
            currentCategory.NeutralizedName = neutralizedName;
            categoryUrl = getCategoryUrl(currentCategory);
            const canonicalDomain = context.requestContext.canonicalDomain;
            if (categoryUrl && canonicalDomain) {
                categoryUrl = `https://${canonicalDomain}${categoryUrl}`;
            }
            else {
                categoryUrl = undefined;
            }
        }
        catch (e) {
            categoryUrl = undefined;
        }
        return {
            title: currentCategory.Name,
            sharingImageUrl: currentCategory.OfflineImage,
            canonicalUrl: categoryUrl,
            faviconUrl: config && config.faviconUrl
        };
    }
    else if (config) {
        return {
            title: config.title,
            sharingImageUrl: config.sharingImage && config.sharingImage.src,
            faviconUrl: config && config.faviconUrl
        };
    }
    else {
        return {};
    }
};
export default createObservableDataAction({
    id: '@msdyn365-commerce-modules/page-summary/category-page-summary',
    action: action,
    input: (args) => {
        return new CategoryPageSummaryInput(args.config, args.requestContext);
    }
});
//# sourceMappingURL=category-page-summary.action.js.map