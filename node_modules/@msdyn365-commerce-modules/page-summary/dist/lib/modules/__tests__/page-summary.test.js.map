{"version":3,"file":"page-summary.test.js","sourceRoot":"./src/","sources":["modules/__tests__/page-summary.test.tsx"],"names":[],"mappings":"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","sourcesContent":["// tslint:disable: await-promise\n// @ts-ignore: compiler will complain that we aren't using these imports when in fact they are being used to mock return values\nimport { getCategoryUrl, getCurrentCategory, getList, getProductUrlSync, getSelectedVariant } from '@msdyn365-commerce-modules/retail-actions';\nimport { buildHydratedMockActionContext, buildMockRequest, IRequestContext } from '@msdyn365-commerce/core';\nimport categoryPageSummaryAction from '../category-page-summary/category-page-summary.action';\nimport listPageSummaryAction from '../list-page-summary/list-page-summary.action';\nimport productPageSummaryAction, { ProductPageSummaryInput } from '../product-page-summary/product-page-summary.action';\n\n// tslint:disable-next-line:max-func-body-length\ndescribe('PageSummaryTests Action Tests', () => {\n    const mockRequestContext = {\n        // @ts-ignore\n        locale: 'en-us',\n        apiSettings: {\n            baseUrl: 'https://renderingdynrush73-1e0adbc991eb8c2f0ret.cloud.retail.dynamics.com/',\n            baseImageUrl: 'https://renderingdynrush73-1e0adbc991eb8c2f0ret.cloud.retail.dynamics.com/media',\n            channelId: 5637144608,\n            catalogId: 1111111111,\n            oun: '068',\n            rnr: {\n                id: '',\n                url: ''\n            }\n        },\n        user: {\n            token: 'Dummy token',\n            isAuthenticated: true\n        },\n        urlTokens: {\n            locale: 'en-us',\n            categories: [\n              'fashion-sunglasses'\n            ]\n        },\n        query: {\n            productId: '000-000',\n            categoryId: '000000'\n        },\n        url: {\n            requestUrl: {\n                origin: 'https://www.example.org'\n            }\n        },\n        canonicalDomain: 'contoso.microsoft.com',\n        pageData: {\n            list: {\n                _id: 'MA8weY',\n                market: 'au',\n                content: {\n                    title: 'test_title',\n                    description: 'best laptops - hot list 2018',\n                    shortDescription: 'best laptops for holiday 2018',\n                    startDate: '2018-11-05T23:16:11.4406683Z',\n                    backgroundColor: '#AC6066',\n                    foregroundColor: '#541112',\n                    items: [\n                      {\n                        type: 'product',\n                        fields: {\n                          itemId: '22565429819',\n                          catalogId: '10',\n                          masterRecordId: '',\n                          recordId: '22565429819'\n                        }\n                      }\n                    ]\n                }\n            }\n        }\n    };\n\n    const mockApiSettings = buildMockRequest().apiSettings;\n\n    it('runs product-page-summary action correctly', async () => {\n\n        const mockInput = new ProductPageSummaryInput(\n            {},\n            { ...mockApiSettings, ...{ baseImageUrl: '', baseUrl: '', channelId: 0, catalogId: 0, oun: '0' }});\n\n        const simpleProductResult = {\n            Name: 'Test Product',\n            Description: 'Test Description',\n            PrimaryImageUrl: 'https://www.microsoft.com/image'\n        };\n\n        const actionContext = buildHydratedMockActionContext({requestContext: ((mockRequestContext as unknown) as IRequestContext)});\n\n        // @ts-ignore: Jest Mocking Confuses TS Complier\n        getSelectedVariant = jest.fn().mockResolvedValue(simpleProductResult);\n        // @ts-ignore: Jest Mocking Confuses TS Complier\n        getProductUrlSync = jest.fn().mockReturnValueOnce('/products/1234.p');\n\n        const result = await productPageSummaryAction(mockInput, actionContext);\n        expect(result.title).toBe(simpleProductResult.Name);\n        expect(result.description).toBe(simpleProductResult.Description);\n        expect(result.sharingImageUrl).toBe(simpleProductResult.PrimaryImageUrl);\n        expect(result.canonicalUrl).toBe('https://contoso.microsoft.com/products/1234.p');\n    });\n\n    it('runs category-page-summary action correctly', async () => {\n\n        const mockInput = new ProductPageSummaryInput(\n            {},\n            { ...mockApiSettings, ...{ baseImageUrl: '', baseUrl: '', channelId: 0, catalogId: 0, oun: '0' }});\n\n        const currentCategoryResult = {\n            Name: 'Test Product',\n            OfflineImage: 'https://www.microsoft.com/image'\n        };\n\n        const actionContext = buildHydratedMockActionContext({ requestContext: ((mockRequestContext as unknown) as IRequestContext) });\n\n        // @ts-ignore: Jest Mocking Confuses TS Complier\n        getCurrentCategory = jest.fn().mockResolvedValue(currentCategoryResult);\n        // @ts-ignore: Jest Mocking Confuses TS Complier\n        getCategoryUrl = jest.fn().mockReturnValueOnce('/categories/1234.c');\n\n        const result = await categoryPageSummaryAction(mockInput, actionContext);\n        expect(result.title).toBe(currentCategoryResult.Name);\n        expect(result.sharingImageUrl).toBe(currentCategoryResult.OfflineImage);\n        expect(result.canonicalUrl).toBe('https://contoso.microsoft.com/categories/1234.c');\n    });\n\n    it('runs list-page-summary action correctly', async () => {\n        const mockInput = new ProductPageSummaryInput(\n            {},\n            { ...mockApiSettings, ...{ baseImageUrl: '', baseUrl: '', channelId: 0, catalogId: 0, oun: '0' }});\n\n        const getListResult = {\n            Title: 'Test List',\n            Description: 'List Description',\n        };\n\n        const actionContext = buildHydratedMockActionContext({ requestContext: ((mockRequestContext as unknown) as IRequestContext) });\n\n        // @ts-ignore: Jest Mocking Confuses TS Complier\n        getList = jest.fn().mockResolvedValue(getListResult);\n\n        const result = await listPageSummaryAction(mockInput, actionContext);\n        expect(result.title).toBe(getListResult.Title);\n        expect(result.description).toBe(getListResult.Description);\n    });\n  });\n"]}