import { getCategoryUrl, getCurrentCategory, getList, getProductUrlSync, getSelectedVariant } from '@msdyn365-commerce-modules/retail-actions';
import { buildHydratedMockActionContext, buildMockRequest } from '@msdyn365-commerce/core';
import categoryPageSummaryAction from '../category-page-summary/category-page-summary.action';
import listPageSummaryAction from '../list-page-summary/list-page-summary.action';
import productPageSummaryAction, { ProductPageSummaryInput } from '../product-page-summary/product-page-summary.action';
describe('PageSummaryTests Action Tests', () => {
    const mockRequestContext = {
        locale: 'en-us',
        apiSettings: {
            baseUrl: 'https://renderingdynrush73-1e0adbc991eb8c2f0ret.cloud.retail.dynamics.com/',
            baseImageUrl: 'https://renderingdynrush73-1e0adbc991eb8c2f0ret.cloud.retail.dynamics.com/media',
            channelId: 5637144608,
            catalogId: 1111111111,
            oun: '068',
            rnr: {
                id: '',
                url: ''
            }
        },
        user: {
            token: 'Dummy token',
            isAuthenticated: true
        },
        urlTokens: {
            locale: 'en-us',
            categories: [
                'fashion-sunglasses'
            ]
        },
        query: {
            productId: '000-000',
            categoryId: '000000'
        },
        url: {
            requestUrl: {
                origin: 'https://www.example.org'
            }
        },
        canonicalDomain: 'contoso.microsoft.com',
        pageData: {
            list: {
                _id: 'MA8weY',
                market: 'au',
                content: {
                    title: 'test_title',
                    description: 'best laptops - hot list 2018',
                    shortDescription: 'best laptops for holiday 2018',
                    startDate: '2018-11-05T23:16:11.4406683Z',
                    backgroundColor: '#AC6066',
                    foregroundColor: '#541112',
                    items: [
                        {
                            type: 'product',
                            fields: {
                                itemId: '22565429819',
                                catalogId: '10',
                                masterRecordId: '',
                                recordId: '22565429819'
                            }
                        }
                    ]
                }
            }
        }
    };
    const mockApiSettings = buildMockRequest().apiSettings;
    it('runs product-page-summary action correctly', async () => {
        const mockInput = new ProductPageSummaryInput({}, { ...mockApiSettings, ...{ baseImageUrl: '', baseUrl: '', channelId: 0, catalogId: 0, oun: '0' } });
        const simpleProductResult = {
            Name: 'Test Product',
            Description: 'Test Description',
            PrimaryImageUrl: 'https://www.microsoft.com/image'
        };
        const actionContext = buildHydratedMockActionContext({ requestContext: mockRequestContext });
        getSelectedVariant = jest.fn().mockResolvedValue(simpleProductResult);
        getProductUrlSync = jest.fn().mockReturnValueOnce('/products/1234.p');
        const result = await productPageSummaryAction(mockInput, actionContext);
        expect(result.title).toBe(simpleProductResult.Name);
        expect(result.description).toBe(simpleProductResult.Description);
        expect(result.sharingImageUrl).toBe(simpleProductResult.PrimaryImageUrl);
        expect(result.canonicalUrl).toBe('https://contoso.microsoft.com/products/1234.p');
    });
    it('runs category-page-summary action correctly', async () => {
        const mockInput = new ProductPageSummaryInput({}, { ...mockApiSettings, ...{ baseImageUrl: '', baseUrl: '', channelId: 0, catalogId: 0, oun: '0' } });
        const currentCategoryResult = {
            Name: 'Test Product',
            OfflineImage: 'https://www.microsoft.com/image'
        };
        const actionContext = buildHydratedMockActionContext({ requestContext: mockRequestContext });
        getCurrentCategory = jest.fn().mockResolvedValue(currentCategoryResult);
        getCategoryUrl = jest.fn().mockReturnValueOnce('/categories/1234.c');
        const result = await categoryPageSummaryAction(mockInput, actionContext);
        expect(result.title).toBe(currentCategoryResult.Name);
        expect(result.sharingImageUrl).toBe(currentCategoryResult.OfflineImage);
        expect(result.canonicalUrl).toBe('https://contoso.microsoft.com/categories/1234.c');
    });
    it('runs list-page-summary action correctly', async () => {
        const mockInput = new ProductPageSummaryInput({}, { ...mockApiSettings, ...{ baseImageUrl: '', baseUrl: '', channelId: 0, catalogId: 0, oun: '0' } });
        const getListResult = {
            Title: 'Test List',
            Description: 'List Description',
        };
        const actionContext = buildHydratedMockActionContext({ requestContext: mockRequestContext });
        getList = jest.fn().mockResolvedValue(getListResult);
        const result = await listPageSummaryAction(mockInput, actionContext);
        expect(result.title).toBe(getListResult.Title);
        expect(result.description).toBe(getListResult.Description);
    });
});
//# sourceMappingURL=page-summary.test.js.map