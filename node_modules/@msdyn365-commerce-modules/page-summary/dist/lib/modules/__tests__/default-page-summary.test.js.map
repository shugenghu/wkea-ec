{"version":3,"file":"default-page-summary.test.js","sourceRoot":"./src/","sources":["modules/__tests__/default-page-summary.test.tsx"],"names":[],"mappings":"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","sourcesContent":["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { wrapInResolvedAsyncResult } from '@msdyn365-commerce-modules/retail-actions';\nimport { buildMockCoreContext, buildMockModuleProps, buildMockRequest, ICoreContext, msdyn365Commerce } from '@msdyn365-commerce/core';\n/// <reference types=\"jest\" />\n\n// tslint:disable-next-line:no-unused-variable\nimport * as React from 'react';\nimport ReactDOM from 'react-dom';\n\nimport DefaultPageSummary from '../default-page-summary/default-page-summary';\nimport { IDefaultPageSummaryData } from '../default-page-summary/default-page-summary.data';\nimport { IDefaultPageSummaryConfig, IDefaultPageSummaryProps } from '../default-page-summary/default-page-summary.props.autogenerated';\nimport { IPageSummaryData } from '../IPageSummaryData';\n\nconst mockConfig: IDefaultPageSummaryConfig = {\n    title: 'Page Title',\n    keywords: 'page, keywords, test',\n    faviconUrl: 'https://example.com/myicon.ico',\n    sharingImage: {src: 'www.example.com/test.jpg' }\n};\n\nconst mockConfigWithDescription: IDefaultPageSummaryConfig = {\n    title: 'Page Title',\n    description: 'Page Description',\n    keywords: 'page, keywords, test',\n    faviconUrl: 'https://example.com/myicon.ico',\n    sharingImage: {src: 'www.example.com/test.jpg' }\n};\n\nconst mockData: Partial<IDefaultPageSummaryData> = {};\n\nmockData.pageSummary = wrapInResolvedAsyncResult({\n    title: mockConfig.title,\n    description: 'data description',\n    keywords: mockConfig.keywords,\n    sharingImageUrl: mockConfig.sharingImage && mockConfig.sharingImage.src,\n    canonicalUrl: 'https://www.contoso.com/store',\n    faviconUrl: mockConfig.faviconUrl\n} as IPageSummaryData);\n\nconst mockDataWithoutDescription: Partial<IDefaultPageSummaryData> = {};\n\nmockDataWithoutDescription.pageSummary = wrapInResolvedAsyncResult({\n    title: mockConfig.title\n} as IPageSummaryData);\n\nconst mockActions = {};\n\nconst mockIsBrowser = jest.spyOn(msdyn365Commerce, 'isBrowser', 'get');\n\nbeforeEach(() => {\n    // set isBrower to false to render HtmlHeadInclude component on server side\n    mockIsBrowser.mockReturnValue(false);\n});\n\ndescribe('DefaultPageSummary', () => {\n    let moduleProps: IDefaultPageSummaryProps<IDefaultPageSummaryData>;\n    // tslint:disable-next-line: no-any\n    let mockCoreContext: ICoreContext<any>;\n    beforeAll(() => {\n        moduleProps = buildMockModuleProps(mockData, mockActions, mockConfig) as IDefaultPageSummaryProps<IDefaultPageSummaryData>;\n        mockCoreContext = buildMockCoreContext({\n            request:  buildMockRequest({\n                canonicalUrl: 'https://www.contoso.com/store',\n                app: {\n                    platform: {\n                        pageTitlePrefix: 'Fabrikam-'\n                    }\n                }\n            })\n        });\n    });\n    const container = document.createElement('div');\n\n    // tslint:disable-next-line:no-any\n    it('validates if default-page-summary renders properly', (done: any) => {\n        ReactDOM.render(<DefaultPageSummary {...moduleProps} />, container);\n\n        expect(document.getElementsByTagName('title')[0].innerHTML).toEqual('Page Title');\n        expect(document.getElementsByTagName('meta')[0].content).toEqual('data description');\n        expect(document.getElementsByTagName('meta')[1].content).toEqual('page, keywords, test');\n\n        expect(document.querySelector('link[rel=\\'shortcut icon\\']')).toBeTruthy();\n        // @ts-ignore: complains that the object might be null, if it is null then this test will throw and fail so its fine\n        expect(document.querySelector('link[rel=\\'shortcut icon\\']').getAttribute('href')).toEqual('https://example.com/myicon.ico');\n\n        expect(document.querySelector('link[rel=\\'canonical\\']')).toBeTruthy();\n        // @ts-ignore: complains that the object might be null, if it is null then this test will throw and fail so its fine\n        expect(document.querySelector('link[rel=\\'canonical\\']').getAttribute('href')).toEqual('https://www.contoso.com/store');\n        done();\n    });\n\n    // tslint:disable-next-line:no-any\n    it('validates if default-page-summary overrides with config property if provided', (done: any) => {\n        const modulePropsWithConfigDescription = buildMockModuleProps(\n            mockData,\n            mockActions,\n            mockConfigWithDescription,\n            mockCoreContext\n        ) as IDefaultPageSummaryProps<IDefaultPageSummaryData>;\n        ReactDOM.render(<DefaultPageSummary {...modulePropsWithConfigDescription} />, container);\n\n        expect(document.querySelectorAll('meta[name=\\'description\\']')[0].getAttribute('content')).toEqual('Page Description');\n        done();\n    });\n\n    // tslint:disable-next-line:no-any\n    it('validates if default-page-summary renders no description when not provided from data or config', (done: any) => {\n        const modulePropsWithoutDescription = buildMockModuleProps(\n            mockDataWithoutDescription,\n            mockActions,\n            mockConfig,\n            mockCoreContext\n        ) as IDefaultPageSummaryProps<IDefaultPageSummaryData>;\n\n        ReactDOM.render(<DefaultPageSummary {...modulePropsWithoutDescription} />, container);\n\n        expect(document.getElementsByTagName('title')[0].innerHTML).toEqual('Fabrikam-Page Title');\n        expect(document.querySelectorAll('meta[name=\\'description\\']').length).toEqual(0);\n        expect(document.querySelectorAll('meta[property=\\'og:title\\']')[0].getAttribute('content')).toEqual('Fabrikam-Page Title');\n        done();\n    });\n\n    // tslint:disable-next-line:no-any\n    it('validates if default-page-summary page title is not modified when disablePageTitlePrefixSuffix is enabled', (done: any) => {\n        const modulePropsWithoutDescription = buildMockModuleProps(\n            mockDataWithoutDescription,\n            mockActions,\n            {\n                ...mockConfig,\n                ignoreTitleSuffixPrefix: true\n            },\n            mockCoreContext\n        ) as IDefaultPageSummaryProps<IDefaultPageSummaryData>;\n\n        ReactDOM.render(<DefaultPageSummary {...modulePropsWithoutDescription} />, container);\n\n        expect(document.getElementsByTagName('title')[0].innerHTML).toEqual('Page Title');\n        done();\n    });\n});\n"]}