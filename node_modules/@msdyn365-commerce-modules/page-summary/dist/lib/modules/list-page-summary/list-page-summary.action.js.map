{"version":3,"file":"list-page-summary.action.js","sourceRoot":"./src/","sources":["modules/list-page-summary/list-page-summary.action.ts"],"names":[],"mappings":"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","sourcesContent":["import { Image, ISubList } from '@msdyn365-commerce-modules/data-types';\nimport { buildCacheKeyWithUrlTokens, getList, ListInput } from '@msdyn365-commerce-modules/retail-actions';\nimport { IProductItem } from '@msdyn365-commerce-modules/retail-actions/dist/types/get-list';\nimport {\n    CacheType,\n    createObservableDataAction,\n    IAction,\n    IActionContext,\n    IActionInput,\n    IAny,\n    ICreateActionContext,\n    IGeneric,\n    IRequestContext\n} from '@msdyn365-commerce/core';\nimport { IDefaultPageSummaryConfig } from '../default-page-summary/default-page-summary.props.autogenerated';\nimport { IPageSummaryData } from '../IPageSummaryData';\n\n/** List Page Summary Input */\nexport class ListPageSummaryInput implements IActionInput {\n    public requestContext: IRequestContext;\n    public config: IDefaultPageSummaryConfig;\n\n    constructor(config: IDefaultPageSummaryConfig, requestContext: IRequestContext) {\n        this.config = config || {};\n        this.requestContext = requestContext;\n    }\n\n    public getCacheObjectType = (): string => 'ListPageSummary';\n    public getCacheKey = (): string => buildCacheKeyWithUrlTokens('ListPageSummary', this.requestContext);\n    public dataCacheType = (): CacheType => 'request';\n}\n\n/**\n * List item type enum\n */\nconst enum ListItemType {\n    list = 'list',\n    product = 'product'\n}\n\n/**\n * Get the url of sub list.\n */\nfunction getSubListUrl(listName: string, sitePath: string): string {\n    if (!listName) {\n        return '';\n    }\n\n    if (!sitePath) {\n        return `/${listName}.l`;\n    }\n\n    // sitePath has a leading '/'\n    return `${sitePath}/${listName}.l`;\n}\n\n/**\n * Get sub list item.\n */\nfunction getSubListItem(item: IGeneric<IAny>, sitePathOfRequest: string): ISubList {\n    const imageList: Image[] = getImages(item.fields.content.images);\n\n    const sublistHref = getSubListUrl(item.fields._name, sitePathOfRequest);\n    return {\n        Title: item.fields.content.title,\n        Description: item.fields.content.description,\n        ShortDescription: item.fields.content.shortDescription,\n        BackgroundColor: item.fields.content.backgroundColor,\n        ForegroundColor: item.fields.content.foregroundColor,\n        Href: sublistHref,\n        Images: imageList\n    };\n}\n\n/**\n * Get site path\n */\nfunction getSitePath(inputData: ICreateActionContext<IGeneric<IAny>, IGeneric<IAny>>): string {\n    // @ts-ignore\n    return inputData && inputData.requestContext && inputData.requestContext.sitePath ? inputData.requestContext.sitePath : '';\n}\n\n/**\n * Get items per page\n */\nfunction getItemsPerPage(inputData: ICreateActionContext<IGeneric<IAny>, IGeneric<IAny>>): number {\n    if (!inputData || !inputData.config || !inputData.config.itemsPerPage) {\n        return 50;\n    }\n\n    const result = Number(inputData.config.itemsPerPage);\n    if (isNaN(result)) {\n        return 50;\n    }\n\n    return result;\n}\n\n/**\n * Get skip count\n */\nfunction getSkipCount(inputData: ICreateActionContext<IGeneric<IAny>, IGeneric<IAny>>): number {\n    return inputData && inputData.requestContext && inputData.requestContext.query && inputData.requestContext.query.skipCount\n        ? Number(inputData.requestContext.query.skipCount)\n        : 0;\n}\n\n/**\n * Get images.\n */\nfunction getImages(images: IGeneric<IAny>[]): Image[] {\n    const resultImageList: Image[] = [];\n\n    if (!images) {\n        return resultImageList;\n    }\n\n    images.forEach(item => {\n        if (item && item.image && item.image.href) {\n            // add image item\n            const imageItem: Image = {\n                href: item.image.href,\n                altText: item.image.altText,\n                title: item.image.title,\n                width: item.image.width,\n                height: item.image.height\n            };\n\n            resultImageList.push(imageItem);\n        }\n    });\n\n    return resultImageList;\n}\n\n/**\n * Get input list data.\n */\nfunction getInputListData(inputData: ICreateActionContext<IGeneric<IAny>, IGeneric<IAny>>): IGeneric<IAny> {\n    let listData =\n        !inputData || !inputData.requestContext || !inputData.requestContext.pageData ? null : inputData.requestContext.pageData.list;\n    if (\n        !inputData ||\n        !inputData.requestContext ||\n        !inputData.requestContext.pageData ||\n        !inputData.requestContext.pageData.list ||\n        !inputData.requestContext.pageData.list.content ||\n        !inputData.requestContext.pageData.list.content.items ||\n        !inputData.requestContext.pageData.list.content.title ||\n        !inputData.requestContext.pageData.list._id\n    ) {\n        if (\n            !inputData ||\n            !inputData.data ||\n            !inputData.data.list ||\n            !inputData.data.list.content ||\n            !inputData.data.list.content.items ||\n            !inputData.data.list.content.title ||\n            !inputData.data.list._id\n        ) {\n            console.error('data is not well defined for list action input');\n            throw new Error('data is not well defined for list action input');\n        }\n\n        listData = inputData.data.list;\n    }\n    return listData;\n}\n\nconst createGetListInput = (inputData: IActionContext): ListInput => {\n    const listData: IGeneric<IAny> = getInputListData(inputData);\n    const listItems: (IProductItem[] | ISubList)[] = [];\n    let productList: IProductItem[] = [];\n\n    const parentImageList: Image[] = getImages(listData.content.images);\n\n    const itemsPerPage = getItemsPerPage(inputData);\n    const skipCount = getSkipCount(inputData);\n\n    // This is the list contains all product and will be used to call getSimpleProducts data action.\n    const productItems: IProductItem[] = [];\n    const sum = skipCount + itemsPerPage;\n    for (let index = skipCount; index < listData.content.items.length && index < sum; index++) {\n        const item = listData.content.items[index];\n        if (item.type === ListItemType.list) {\n            if (!item.fields || !item.fields.content || !item.fields.content.title) {\n                console.error(`sublist item fields, content or title missing in list ${listData._id}`);\n                continue;\n            }\n\n            // if any elements in product list, then copy it and add to list items\n            if (!(productList.length === 0)) {\n                const clonedList = [...productList];\n                listItems.push(clonedList);\n                productList = [];\n            }\n\n            // build and add sublist item\n            listItems.push(getSubListItem(item, getSitePath(inputData)));\n        }\n\n        if (item.type === ListItemType.product) {\n            if (!item.fields || !item.fields.recordId) {\n                console.error(`product item missing recordId in list ${listData._id}`);\n                continue;\n            }\n\n            // add product item\n            const productItem: IProductItem = {\n                RecordId: item.fields.recordId,\n                CatalogId: item.fields.catalogId || '0'\n            };\n\n            productList.push(productItem);\n            productItems.push(productItem);\n        }\n    }\n\n    // save the last portion of product items.\n    if (!(productList.length === 0)) {\n        listItems.push(productList);\n    }\n\n    return new ListInput(\n        listData._id,\n        listData.content.title,\n        listData.content.description,\n        listData.content.shortDescription,\n        listData.content.backgroundColor,\n        listData.content.foregroundColor,\n        parentImageList,\n        listItems,\n        productItems,\n        listData.content.items.length,\n        itemsPerPage,\n        skipCount\n    );\n};\n\nconst action = async (input: ListPageSummaryInput, context: IActionContext): Promise<IPageSummaryData> => {\n    const { config } = input;\n    let listData;\n    try {\n        listData = await getList(createGetListInput(context), context);\n    } catch (e) {\n        // Do nothing, if there's an error running the action fall back to values defined from data\n    }\n    if (listData && listData.Title) {\n        return {\n            title: listData.Title,\n            description: listData.Description\n        };\n        // If the action fails fallback to values defined from data\n    } else if (config) {\n        return {\n            title: config.title,\n            description: config.description\n        };\n    } else {\n        return {};\n    }\n};\n\nexport default createObservableDataAction({\n    id: '@msdyn365-commerce-modules/page-summary/list-page-summary',\n    action: <IAction<IPageSummaryData>>action,\n    input: (args: ICreateActionContext) => {\n        return new ListPageSummaryInput(<IDefaultPageSummaryConfig>args.config, args.requestContext);\n    }\n});\n"]}