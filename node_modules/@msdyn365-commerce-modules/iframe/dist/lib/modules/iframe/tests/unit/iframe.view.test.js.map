{"version":3,"file":"iframe.view.test.js","sourceRoot":"./src/","sources":["modules/iframe/tests/unit/iframe.view.test.tsx"],"names":[],"mappings":"AAKA,OAAO,EAAE,oBAAoB,EAAE,MAAM,yBAAyB,CAAC;AAI/D,OAAO,EAAE,OAAO,EAAE,MAAM,sCAAsC,CAAC;AAC/D,OAAO,EAAE,MAAM,EAAE,MAAM,QAAQ,CAAC;AAChC,OAAO,KAAK,KAAK,MAAM,OAAO,CAAC;AAK/B,OAAO,UAAU,MAAM,mBAAmB,CAAC;AAE3C,QAAQ,CAAC,QAAQ,EAAE,GAAG,EAAE;IAEtB,EAAE,CAAC,oCAAoC,EAAE,GAAG,EAAE;QAC5C,MAAM,WAAW,GAAqB,oBAAoB,CAAC,EAAE,EAAE,EAAE,CAAqB,CAAC;QACvF,MAAM,OAAO,GAAiB;YAC5B,GAAG,MAAe;YAClB,IAAI,EAAE,cAAc;SACrB,CAAC;QACF,MAAM,UAAU,GAAG,CAAC,oBAAC,OAAO,oBAAK,OAAO,IAAE,SAAS,EAAC,2BAA2B,IAAG,CAAoB,CAAC;QACvG,MAAM,MAAM,GAAG,CAEb,gCACE,SAAS,EAAC,wBAAwB,EAClC,GAAG,EAAC,0IAA0I,EAC9I,MAAM,EAAC,OAAO,gBACH,QAAQ,GACnB,CACkB,CAAE;QAExB,MAAM,SAAS,GAAqB;YAClC,GAAG,WAA0C;YAC7C,OAAO,EAAE,UAAU;YACnB,eAAe,EAAE;gBACf,WAAW;gBACX,SAAS,EAAE,gBAAgB;aAC5B;YACD,MAAM,EAAE,MAAM;SACf,CAAC;QACF,MAAM,SAAS,GAAG,MAAM,CAAC,oBAAC,UAAU,oBAAK,SAAS,EAAI,CAAC,CAAC;QACxD,MAAM,CAAC,SAAS,CAAC,CAAC,eAAe,EAAE,CAAC;IACtC,CAAC,CAAC,CAAC;AACL,CAAC,CAAC,CAAC","sourcesContent":["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { buildMockModuleProps } from '@msdyn365-commerce/core';\n/// <reference types=\"jest\" />\n\n// tslint:disable-next-line:no-unused-variable\nimport { Heading } from '@msdyn365-commerce-modules/utilities';\nimport { render } from 'enzyme';\nimport * as React from 'react';\nimport { IIframeViewProps } from '../../iframe';\nimport {\n  HeadingTag, IHeadingData, IIframeConfig, IIframeProps\n} from '../../iframe.props.autogenerated';\nimport IFrameView from '../../iframe.view';\n\ndescribe('Iframe', () => {\n\n  it('renders correctly with full screen', () => {\n    const moduleProps: IIframeProps<{}> = buildMockModuleProps({}, {}) as IIframeProps<{}>;\n    const heading: IHeadingData = {\n      tag: HeadingTag.h2,\n      text: 'mock heading'\n    };\n    const headingtag = (<Heading {...heading} className='ms-iframe__heading__title' />) as React.ReactNode;\n    const iframe = (\n      // tslint:disable-next-line: react-iframe-missing-sandbox\n      <iframe\n        className='mock ms-iframe-content'\n        src='https://ppe-streaming-video-mr-microsoft-com.akamaized.net/5b4aaa0e-602a-4964-80d0-cdea46ec368f/1c372c3e-debb-42a3-a6db-58904cebdaad.mp4'\n        height='700px'\n        aria-label='iframe'\n      />\n      ) as React.ReactNode ;\n\n    const mockProps: IIframeViewProps = {\n      ...moduleProps as IIframeProps<IIframeConfig>,\n      Heading: headingtag,\n      IframeContainer: {\n        moduleProps,\n        className: 'mock ms-iframe',\n      },\n      IFrame: iframe,\n    };\n    const component = render(<IFrameView {...mockProps} />);\n    expect(component).toMatchSnapshot();\n  });\n});\n"]}