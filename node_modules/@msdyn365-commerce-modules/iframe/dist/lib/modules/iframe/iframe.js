import { Heading } from '@msdyn365-commerce-modules/utilities';
import classnames from 'classnames';
import * as React from 'react';
class Iframe extends React.PureComponent {
    constructor(props) {
        super(props);
        this.iframeRef = React.createRef();
    }
    render() {
        const { config, resources } = this.props;
        const isConsentGiven = this.props.context.request &&
            this.props.context.request.cookies &&
            this.props.context.request.cookies.isConsentGiven &&
            this.props.context.request.cookies.isConsentGiven();
        if (!(config && config.target && config.target.destinationUrl)) {
            return null;
        }
        let srcURL;
        try {
            srcURL = new URL(config.target.destinationUrl);
        }
        catch (error) {
            this.props.telemetry.exception(error);
            return null;
        }
        if (srcURL && srcURL.protocol && srcURL.protocol.toLocaleLowerCase() !== 'https:') {
            return null;
        }
        const iframeClassName = classnames('ms-iframe', config.className);
        let viewProps = {
            ...this.props,
            Heading: this._createHeading(config.heading),
            IframeContainer: {
                moduleProps: this.props,
                className: iframeClassName
            },
            IFrame: this._createIframe()
        };
        if (isConsentGiven === false) {
            viewProps = {
                ...viewProps,
                alert: this._renderAlert(resources.cookieConsentRequiredMessage)
            };
        }
        else {
            viewProps = {
                ...viewProps,
                cookieConsentAccepted: true
            };
        }
        return this.props.renderView(viewProps);
    }
    _createHeading(heading) {
        if (!heading || !heading.text || !heading.text.length) {
            return null;
        }
        return (React.createElement(Heading, Object.assign({}, heading, { className: 'ms-iframe__heading' })));
    }
    _renderAlert(message) {
        return (React.createElement("p", { className: 'ms-iframe__error-message', role: 'alert', "aria-live": 'assertive' }, message));
    }
    _createIframe() {
        const { config } = this.props;
        const targetURL = config.target.destinationUrl;
        return (React.createElement("iframe", { className: classnames('ms-iframe__content'), src: targetURL, height: config.height, "aria-label": config.iframeAriaLabel, ref: this.iframeRef }));
    }
}
export default Iframe;
//# sourceMappingURL=iframe.js.map