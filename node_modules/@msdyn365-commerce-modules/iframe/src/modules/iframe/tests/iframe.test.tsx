/*---------------------------------------------------------------------------------------------
 *  Copyright (c) Microsoft Corporation. All rights reserved.
 *  Licensed under the MIT License. See License.txt in the project root for license information.
 *--------------------------------------------------------------------------------------------*/

import { buildMockModuleProps } from '@msdyn365-commerce/core';
/// <reference types="jest" />
// tslint:disable-next-line:no-unused-variable
import { mount } from 'enzyme';
import * as React from 'react';
import Iframe, { IIframeViewProps } from '../iframe';
import {
  HeadingTag, IIframeConfig,
  IIframeProps
} from '../iframe.props.autogenerated';

const mockConfig: IIframeConfig = {
  target: {
    destinationUrl:'https://ppe-streaming-video-mr-microsoft-com.akamaized.net/5b4aaa0e-602a-4964-80d0-cdea46ec368f/1c372c3e-debb-42a3-a6db-58904cebdaad.mp4',
  },
  height: '100%',

};

const mockConfig1: IIframeConfig = {
  target: {
    destinationUrl:'https://ppe-streaming-video-mr-microsoft-com.akamaized.net/5b4aaa0e-602a-4964-80d0-cdea46ec368f/1c372c3e-debb-42a3-a6db-58904cebdaad.mp4',
  },
  height: '100%',
};

const mockConfig2: IIframeConfig = {
  target: {
    destinationUrl:'https://ppe-streaming-video-mr-microsoft-com.akamaized.net/5b4aaa0e-602a-4964-80d0-cdea46ec368f/1c372c3e-debb-42a3-a6db-58904cebdaad.mp4',
  },
  height: '',
};

const mockConfig3: IIframeConfig = {
  target: {
    destinationUrl:'https://ppe-streaming-video-mr-microsoft-com.akamaized.net/5b4aaa0e-602a-4964-80d0-cdea46ec368f/1c372c3e-debb-42a3-a6db-58904cebdaad.mp4',
  },
  height: '100%',
  heading: {
    text: 'Microsoft video',
    tag: HeadingTag.h2
  },
};

describe('Iframe', () => {
  it('renders correctly', () => {
    let moduleProps: IIframeProps<IIframeConfig>;
    moduleProps = {
      ...buildMockModuleProps({}, {}, mockConfig) as IIframeProps<IIframeConfig>,
      // @ts-ignore
      renderView: jest.fn(props => { return <div props={props} />; })
    };
    const wrapper = mount(<Iframe {...moduleProps} />);
    expect(moduleProps.renderView).toBeCalled();
    const viewProps: IIframeViewProps = wrapper.childAt(0).props().props;
    expect(viewProps).toBeDefined();
    expect(viewProps).toMatchSnapshot();
  });

  it('renders correctly without width', () => {
    let moduleProps: IIframeProps<IIframeConfig>;
    moduleProps = {
      ...buildMockModuleProps({}, {}, mockConfig1) as IIframeProps<IIframeConfig>,
      // @ts-ignore
      renderView: jest.fn(props => { return <div props={props} />; })
    };
    const wrapper = mount(<Iframe {...moduleProps} />);
    expect(moduleProps.renderView).toBeCalled();
    const viewProps: IIframeViewProps = wrapper.childAt(0).props().props;
    expect(viewProps).toBeDefined();
    expect(viewProps).toMatchSnapshot();
  });

  it('renders correctly without height', () => {
    let moduleProps: IIframeProps<IIframeConfig>;
    moduleProps = {
      ...buildMockModuleProps({}, {}, mockConfig2) as IIframeProps<IIframeConfig>,
      // @ts-ignore
      renderView: jest.fn(props => { return <div props={props} />; })
    };
    const wrapper = mount(<Iframe {...moduleProps} />);
    expect(moduleProps.renderView).toBeCalled();
    const viewProps: IIframeViewProps = wrapper.childAt(0).props().props;
    expect(viewProps).toBeDefined();
    expect(viewProps).toMatchSnapshot();
  });

  it('renders correctly with heading', () => {
    let moduleProps: IIframeProps<IIframeConfig>;
    moduleProps = {
      ...buildMockModuleProps({}, {}, mockConfig3) as IIframeProps<IIframeConfig>,
      // @ts-ignore
      renderView: jest.fn(props => { return <div props={props} />; })
    };
    const wrapper = mount(<Iframe {...moduleProps} />);
    expect(moduleProps.renderView).toBeCalled();
    const viewProps: IIframeViewProps = wrapper.childAt(0).props().props;
    expect(viewProps).toBeDefined();
    expect(viewProps).toMatchSnapshot();
  });
});
