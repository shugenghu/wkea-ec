import { createObservableDataAction } from '@msdyn365-commerce/core';
import { getSelectedProductIdFromActionInput, getSelectedVariant, SelectedVariantInput } from '@msdyn365-commerce-modules/retail-actions';
import { getAttributeValuesAsync } from '@msdyn365-commerce/retail-proxy/dist/DataActions/ProductsDataActions.g';
export class AttributesForSelectedVariantInput {
    constructor(productId, channelId, selectedProduct, catalogId) {
        this.getCacheKey = () => `AttributesForSelectedVariant`;
        this.getCacheObjectType = () => 'ProductAttributeValue';
        this.dataCacheType = () => 'none';
        this.productId = productId;
        this.channelId = channelId;
        this.selectedProduct = selectedProduct;
        this.catalogId = catalogId || 0;
    }
}
export const createAttributesForSelectedVariantInput = (inputData) => {
    const productId = getSelectedProductIdFromActionInput(inputData);
    if (productId) {
        return new AttributesForSelectedVariantInput(+productId, +inputData.requestContext.apiSettings.channelId);
    }
    else {
        throw new Error('Unable to create PriceForSelectedVariantInput, no productId found on module config or query');
    }
};
export async function getAttributesForSelectedVariantAction(input, ctx) {
    return Promise.resolve().then(() => {
        const activeProduct = input.selectedProduct;
        if (!activeProduct) {
            const selectedVariantInput = new SelectedVariantInput(input.productId, input.channelId);
            return getSelectedVariant(selectedVariantInput, ctx);
        }
        return activeProduct;
    }).then((productResult) => {
        const activeProduct = productResult;
        if (activeProduct) {
            return getAttributeValuesAsync({ callerContext: ctx, queryResultSettings: {} }, activeProduct.RecordId, input.channelId, input.catalogId);
        }
        return null;
    }).then((attributeValues) => {
        const resultArray = attributeValues;
        if (resultArray) {
            return resultArray;
        }
        return [];
    }).catch((error) => {
        ctx.trace(error.message);
        throw new Error('[getPriceForSelectedVariantAction]Error executing action');
    });
}
export default createObservableDataAction({
    id: '@msdyn365-commerce-modules/product-info/get-attributes-for-selected-variant',
    action: getAttributesForSelectedVariantAction,
    input: createAttributesForSelectedVariantInput
});
//# sourceMappingURL=get-attributes-for-selected-variant.js.map