{"version":3,"file":"product-specification.js","sourceRoot":"./src/","sources":["modules/product-specification/product-specification.tsx"],"names":[],"mappings":"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","sourcesContent":["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nimport { IModuleProps, INodeProps } from '@msdyn365-commerce-modules/utilities';\nimport * as Msdyn365 from '@msdyn365-commerce/core';\nimport { AttributeValue } from '@msdyn365-commerce/retail-proxy/dist/Entities/CommerceTypes.g';\nimport classnames from 'classnames';\nimport { reaction } from 'mobx';\nimport { observer } from 'mobx-react';\nimport * as React from 'react';\nimport getAttributesForSelectedVariant, { AttributesForSelectedVariantInput } from '../../dataActions/get-attributes-for-selected-variant';\nimport { ProductSpecificationTableRow } from './components/product-specification-table-stucture';\nimport { IProductSpecificationData } from './product-specification.data';\nimport { IProductSpecificationProps } from './product-specification.props.autogenerated';\n\nexport interface IProductSpecificationViewProps extends IProductSpecificationProps<{}> {\n    ProductSpecification: IModuleProps;\n    ProductSpecificationTableProps: INodeProps;\n    ProductSpecificationTableBodyProps: INodeProps;\n    productSpecificationResult?: (JSX.Element | null)[];\n    title?: React.ReactNode;\n}\n\n/**\n *\n * ProductSpecification component\n * @extends {React.Component<IProductSpecificationProps<IProductSpecificationData>>}\n */\n@observer\nclass ProductSpecification extends React.Component<IProductSpecificationProps<IProductSpecificationData>> {\n    public async componentDidMount(): Promise<void> {\n        const { context, data, telemetry } = this.props;\n\n        // @ts-ignore: Compiler not reconizing condition check for function params\n        reaction(\n            () => (data.product.result ? data.product.result.RecordId : null),\n            () => {\n                if (context && data.product.result) {\n                    const actionInput = new AttributesForSelectedVariantInput(\n                        data.product.result.RecordId,\n                        // @ts-ignore\n                        +context.actionContext.requestContext.apiSettings.channelId,\n                        data.product.result\n                    );\n\n                    getAttributesForSelectedVariant(actionInput, this.props.context.actionContext).catch(error => {\n                        telemetry.warning(error);\n                        telemetry.debug('Unable to update attributes for Product');\n                        telemetry.error(error);\n                    });\n                }\n            }\n        );\n    }\n\n    // tslint:disable-next-line:max-func-body-length\n    public render(): JSX.Element | null {\n        let data: IProductSpecificationData;\n\n        try {\n            data = this.props.data;\n        } catch (e) {\n            this.props.telemetry.error(`Something went wrong ------${e}`);\n            return <div>{e}</div>;\n        }\n\n        if (!data.productSpecificationData.result || data.productSpecificationData.result.length <= 0) {\n            this.props.telemetry.error('Product specification content is empty, module wont render.');\n            return null;\n        }\n\n        const { heading, className } = this.props.config;\n        const { productSpecificationData } = this.props.data;\n\n        const viewProps = {\n            ...this.props,\n            ProductSpecification: {\n                moduleProps: this.props,\n                className: classnames('ms-product-specification', className)\n            },\n            ProductSpecificationTableProps: {\n                className: classnames('ms-product-specification__table table-striped table-bordered'),\n                tag: 'table'\n            },\n            ProductSpecificationTableBodyProps: {\n                className: '',\n                tag: 'tbody'\n            },\n            title: heading && heading.text && (\n                <Msdyn365.Text\n                  className='ms-product-specification__heading'\n                  tag={heading.tag || 'h2'}\n                  text={heading.text}\n                  editProps = {{onEdit: this.handleHeadingChange, requestContext: this.props.context.request}}\n                />),\n            productSpecificationResult: productSpecificationData && this._createTableBody(data)\n        } as IProductSpecificationViewProps;\n\n        return this.props.renderView(viewProps) as React.ReactElement;\n    }\n    public handleHeadingChange = (event: Msdyn365.ContentEditableEvent) => this.props.config.heading!.text = event.target.value;\n    private _createTableBody(content: IProductSpecificationData): (JSX.Element | null)[] {\n        return content.productSpecificationData.result!.map((product, index) => {\n            const cellData: JSX.Element | null = this._renderProductCell(product);\n\n            if (!cellData) {\n                return null;\n            }\n\n            return (\n                <ProductSpecificationTableRow\n                    className='ms-product-specification__table-row'\n                    key={ index }\n                    productName={ product.Name }\n                    cellData={ cellData }\n                />\n            );\n        });\n    }\n\n    private _renderProductCell(product: AttributeValue): JSX.Element | null {\n        switch (product.DataTypeValue) {\n            case 0: // none\n                // Return span here instead of null so the row still shows\n                return <span />;\n            case 1: // Currency\n                return this._renderCurrencyCell(product);\n            case 2: // DateTime\n                return this._renderDateTimeCell(product);\n            case 3: // Decimal\n                return this._renderDecimalCell(product);\n            case 4: // Integer\n                return this._renderIntegerCell(product);\n            case 5: // Text\n                return this._renderTextCell(product);\n            case 6: // TrueFalse\n                return this._renderTrueFalseCell(product);\n            case 40: // Video\n                this.props.telemetry.warning('Got video specification type, not supported yet so skipping line');\n                return null;\n            case 41: // Image\n                this.props.telemetry.warning('Got image specification type, not supported yet so skipping line');\n                return null;\n            default:\n                this.props.telemetry.warning(`Got unknown specification type ${product.DataTypeValue} so skipping line`);\n                return null;\n        }\n    }\n\n    private _renderCurrencyCell(product: AttributeValue): JSX.Element | null {\n        if (product.CurrencyValue !== null && product.CurrencyValue !== undefined) {\n            return (\n                <span>\n                    {product.CurrencyCode}\n                    {product.CurrencyValue}\n                </span>\n            );\n        }\n\n        return null;\n    }\n\n    private _renderDateTimeCell(product: AttributeValue): JSX.Element | null {\n        if (product.DateTimeOffsetValue !== null && product.DateTimeOffsetValue !== undefined && product.DateTimeOffsetValue.toUTCString) {\n            return <span>{product.DateTimeOffsetValue.toUTCString()}</span>;\n        }\n\n        return null;\n    }\n\n    private _renderIntegerCell(product: AttributeValue): JSX.Element | null {\n        if (product.IntegerValue !== null && product.IntegerValue !== undefined) {\n            return <span>{product.IntegerValue}</span>;\n        }\n\n        return null;\n    }\n\n    private _renderDecimalCell(product: AttributeValue): JSX.Element | null {\n        if (product.FloatValue !== null && product.FloatValue !== undefined) {\n            return <span>{product.FloatValue}</span>;\n        }\n\n        return null;\n    }\n\n    private _renderTextCell(product: AttributeValue): JSX.Element | null {\n        if (product.TextValue !== null && product.TextValue !== undefined) {\n            // tslint:disable-next-line\n            return <span dangerouslySetInnerHTML={Msdyn365.getRichTextHtml(product.TextValue)}/>;\n        }\n\n        return null;\n    }\n\n    private _renderTrueFalseCell(product: AttributeValue): JSX.Element | null {\n        // TODO 20369885 setting to default value is needed to work around a platform bug where\n        // config string value does not get its default value.\n        if (product.BooleanValue) {\n            return <span>{this.props.resources.trueValueText ? this.props.resources.trueValueText : 'Yes'}</span>;\n        } else {\n            return <span>{this.props.resources.falseValueText ? this.props.resources.falseValueText : 'No'}</span>;\n        }\n    }\n}\n\nexport default ProductSpecification;\n"]}