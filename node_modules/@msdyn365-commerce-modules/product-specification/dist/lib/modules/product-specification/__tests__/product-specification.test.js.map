{"version":3,"file":"product-specification.test.js","sourceRoot":"./src/","sources":["modules/product-specification/__tests__/product-specification.test.tsx"],"names":[],"mappings":"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","sourcesContent":["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { wrapInResolvedAsyncResult } from '@msdyn365-commerce-modules/retail-actions';\nimport { buildMockModuleProps } from '@msdyn365-commerce/core';\nimport { AttributeValue, SimpleProduct } from '@msdyn365-commerce/retail-proxy';\nimport ProductSpecificationView from '../product-specification.view';\n\nimport * as React from 'react';\n// tslint:disable-next-line:ordered-imports\nimport { shallow, render } from 'enzyme';\n\n// @ts-ignore\nimport getAttributesForSelectedVariant from '../../../dataActions/get-attributes-for-selected-variant';\n\nimport ProductSpecification, { IProductSpecificationViewProps } from '../product-specification';\nimport { IProductSpecificationData } from '../product-specification.data';\nimport { IProductSpecificationConfig, IProductSpecificationProps, IProductSpecificationResources } from '../product-specification.props.autogenerated';\n\nconst mockResults: AttributeValue[] = [\n    {\n        Name: 'Empty Type YESSHOW',\n        DataTypeValue: 0\n    },\n    {\n        Name: 'Currency YESSHOW',\n        DataTypeValue: 1,\n        CurrencyCode: '$',\n        CurrencyValue: 10\n    },\n    {\n        Name: 'Currency No Value NOSHOW',\n        DataTypeValue: 1,\n        CurrencyCode: '$',\n    },\n    {\n        Name: 'Currency No Code YESSHOW',\n        DataTypeValue: 1,\n        CurrencyValue: 10\n    },\n    {\n        Name: 'DateTime Has Value YESSHOW',\n        DataTypeValue: 2,\n        DateTimeOffsetValue: new Date('2015-06-01T00:00:00Z'),\n    },\n    {\n        Name: 'DateTime No Value NOSHOW',\n        DataTypeValue: 2,\n        DateTimeOffsetValue: undefined\n    },\n    {\n        Name: 'Decimal Has Value YESSHOW',\n        DataTypeValue: 3,\n        FloatValue: 10.5\n    },\n    {\n        Name: 'Decimal No Value NOSHOW',\n        DataTypeValue: 3,\n        FloatValue: undefined\n    },\n    {\n        Name: 'Decimal Zero Value YESSHOW',\n        DataTypeValue: 3,\n        FloatValue: 0\n    },\n    {\n        Name: 'Integer has value YESSHOW',\n        DataTypeValue: 4,\n        IntegerValue: 10\n    },\n    {\n        Name: 'Integer No Value NOSHOW',\n        DataTypeValue: 4,\n        IntegerValue: undefined\n    },\n    {\n        Name: 'Integer Zero Value YESSHOW',\n        DataTypeValue: 4,\n        IntegerValue: 0\n    },\n    {\n        Name: 'Text YESSHOW',\n        DataTypeValue: 5,\n        TextValue: 'Apple Bottom Jeans'\n    },\n    {\n        Name: 'Text No Value NOSHOW',\n        DataTypeValue: 5,\n        TextValue: undefined,\n    },\n    {\n        Name: 'Text Empty Text YESSHOW',\n        DataTypeValue: 5,\n        TextValue: '',\n    },\n    {\n        Name: 'TrueFalse True Value YESSHOW',\n        DataTypeValue: 6,\n        BooleanValue: true\n    },\n    {\n        Name: 'TrueFalse False Value YESSHOW',\n        DataTypeValue: 6,\n        BooleanValue: false\n    },\n    {\n        Name: 'TrueFalse No Value YESSHOW',\n        DataTypeValue: 6,\n        BooleanValue: undefined\n    },\n    {\n        Name: 'Video NOSHOW',\n        DataTypeValue: 40\n    },\n    {\n        Name: 'Image NOSHOW',\n        DataTypeValue: 41\n    },\n    {\n        Name: 'Unknown NOSHOW',\n        DataTypeValue: 99\n    }\n];\n\nconst mockResultsOnlyBad: AttributeValue[] = [\n    {\n        Name: 'Currency No Value NOSHOW',\n        DataTypeValue: 1,\n        CurrencyCode: '$',\n    },\n    {\n        Name: 'Text No Value NOSHOW',\n        DataTypeValue: 5,\n        TextValue: undefined,\n    }\n];\n\nconst emptyResults: AttributeValue[] = [\n];\n\nconst mockDataNoResults: IProductSpecificationData = {\n    product: wrapInResolvedAsyncResult<SimpleProduct>(null),\n    productSpecificationData: wrapInResolvedAsyncResult(emptyResults)\n};\n\nconst mockDataWithOnlyBadResults: IProductSpecificationData = {\n    product: wrapInResolvedAsyncResult<SimpleProduct>(null),\n    productSpecificationData: wrapInResolvedAsyncResult(mockResultsOnlyBad)\n};\n\nconst mockDataWithResults: IProductSpecificationData = {\n    product: wrapInResolvedAsyncResult<SimpleProduct>(null),\n    productSpecificationData: wrapInResolvedAsyncResult(mockResults)\n};\n\nconst defaultMockConfig: IProductSpecificationConfig = {\n    heading:{\n        text:'Test Config'\n    }\n};\n\nconst defaultMockResources: IProductSpecificationResources = {\n    trueValueText: 'Yes',\n    falseValueText: 'No'\n};\n\ndescribe('Product Specifications', () => {\n    it('renders correctly with no specifications', () => {\n        let moduleProps: IProductSpecificationProps<IProductSpecificationData>;\n\n        moduleProps = {\n            ...buildMockModuleProps(mockDataNoResults, {}, defaultMockConfig) as IProductSpecificationProps<IProductSpecificationData>,\n            resources:defaultMockResources,\n            // @ts-ignore\n            renderView: ProductSpecificationView\n        };\n\n        const component = render(<ProductSpecification {...moduleProps} />);\n        expect(component).toMatchSnapshot('No Specifications');\n    });\n\n    it('renders correctly when all included specifications are filtered out', () => {\n        let moduleProps: IProductSpecificationProps<IProductSpecificationData>;\n\n        moduleProps = {\n            ...buildMockModuleProps(mockDataWithOnlyBadResults, {}, defaultMockConfig) as IProductSpecificationProps<IProductSpecificationData>,\n            resources:defaultMockResources,\n            // @ts-ignore\n            renderView: ProductSpecificationView\n        };\n\n        const component = render(<ProductSpecification {...moduleProps} />);\n        expect(component).toMatchSnapshot('No Specifications');\n    });\n\n    it('renders all specifications correctly', () => {\n        let moduleProps: IProductSpecificationProps<IProductSpecificationData>;\n\n        moduleProps = {\n            ...buildMockModuleProps(mockDataWithResults, {}, defaultMockConfig) as IProductSpecificationProps<IProductSpecificationData>,\n            resources:defaultMockResources,\n            // @ts-ignore\n            renderView: ProductSpecificationView\n        };\n\n        const component = render(<ProductSpecification {...moduleProps} />);\n        expect(component).toMatchSnapshot('With Specifications');\n    });\n    it('renders correctly in container', () => {\n        const moduleProps = {\n          ...buildMockModuleProps(mockDataWithResults, {}, defaultMockConfig) as IProductSpecificationProps<IProductSpecificationData>,\n          resources: defaultMockResources,\n          // @ts-ignore\n          renderView: jest.fn(props => {return <div props={props}/>;})\n        };\n        const productSpecification = shallow(<ProductSpecification {...moduleProps}/>);\n        expect(moduleProps.renderView).toBeCalled();\n        const viewProps: IProductSpecificationViewProps = productSpecification.props().props;\n        expect(viewProps).toBeDefined();\n        expect(viewProps.ProductSpecification.className).toEqual('ms-product-specification');\n    });\n});\n"]}