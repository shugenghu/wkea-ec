import { Button, getPayloadObject, getTelemetryAttributes, TelemetryConstant } from '@msdyn365-commerce-modules/utilities';
import { getUrlSync } from '@msdyn365-commerce/core';
import * as React from 'react';
import { getGroups } from '../../../common/get-groups';
import { getOrderInfomationInput, getOrderInformation } from '../../../common/get-order-information';
import { getSalesLines, getSalesLinesInput } from '../../../common/get-sales-lines';
export const getSalesOrder = (input) => {
    const { id, typeName, context, telemetry, products, salesOrder, showChannelInfo, channelIdentities, orgUnitLocations, telemetryContent, resources: { freePriceText, detailsAriaLabel, detailsLabel, orderItemLabel, orderItemsLabel }, context: { actionContext } } = input;
    const moduleName = 'ms-order-history';
    const priceContext = {
        id,
        typeName,
        context,
        telemetry,
        freePriceText
    };
    const _getorderDetailsPageUrl = () => {
        const url = getUrlSync('orderDetails', actionContext) || '';
        const separator = url.includes('?') ? '&' : '?';
        if (salesOrder.SalesId) {
            return `${url}${separator}salesId=${salesOrder.SalesId}`;
        }
        else {
            return `${url}${separator}transactionId=${salesOrder.TransactionId}`;
        }
    };
    const salesOrderProps = { className: 'ms-order-history__sales-order', key: salesOrder.SalesId || salesOrder.TransactionId };
    const orderInfomationInput = getOrderInfomationInput(input, moduleName, salesOrder, priceContext, channelIdentities, orgUnitLocations, showChannelInfo);
    const orderInfomation = getOrderInformation(orderInfomationInput);
    const salesLinesInput = products && getSalesLinesInput(input, moduleName, salesOrder, products, priceContext);
    const salesLines = salesLinesInput && getSalesLines({ ...salesLinesInput, imageOnly: true });
    const payLoad = getPayloadObject('click', telemetryContent, TelemetryConstant.OrderDetails);
    const orderDetailsAttributes = getTelemetryAttributes(telemetryContent, payLoad);
    const groups = salesLines &&
        getGroups({
            moduleName,
            salesLines,
            resources: { orderItemLabel, orderItemsLabel }
        });
    const orderDetailsLink = (React.createElement(Button, Object.assign({ href: _getorderDetailsPageUrl(), "aria-label": salesOrder.ChannelReferenceId && detailsAriaLabel
            ? detailsAriaLabel.replace('{orderId}', salesOrder.ChannelReferenceId)
            : '', className: 'ms-order-history__btn-order-details' }, orderDetailsAttributes), detailsLabel));
    return {
        salesOrderProps,
        orderInfomation,
        groups,
        orderDetailsLink
    };
};
//# sourceMappingURL=get-sales-order.js.map