{"version":3,"file":"get-order-shipment-history.test.js","sourceRoot":"./src/","sources":["modules/order-history/tests/get-order-shipment-history.test.ts"],"names":[],"mappings":"AAAA,OAAO,KAAK,WAAW,MAAM,2CAA2C,CAAC;AACzE,OAAO,EAAE,8BAA8B,EAAmB,MAAM,yBAAyB,CAAC;AAC1F,OAAO,KAAK,wBAAwB,MAAM,yEAAyE,CAAC;AACpH,OAAO,MAAM,CAAC;AACd,OAAO,EACH,wCAAwC,EACxC,uCAAuC,EAE1C,MAAM,uCAAuC,CAAC;AAC/C,OAAO,EAAE,kBAAkB,EAAE,YAAY,EAAE,sBAAsB,EAAE,MAAM,YAAY,CAAC;AAEtF,MAAM,UAAU,GAAY;IACxB,GAAG,EAAE,EAAE;IACP,IAAI,EAAE,CAAC;CACV,CAAC;AAEF,QAAQ,CAAC,0CAA0C,EAAE,GAAG,EAAE;IACtD,EAAE,CAAC,+BAA+B,EAAE,GAAG,EAAE;QACrC,MAAM,aAAa,GAAG,8BAA8B,CAAC,EAAE,cAAc,EAAmB,sBAAsB,EAAE,CAAC,CAAC;QAClH,IAAI,uCAAuC,CAAC,UAAU,EAAE,aAAa,CAAC,cAAc,CAAC,WAAW,CAAC,CAAC;IACtG,CAAC,CAAC,CAAC;AACP,CAAC,CAAC,CAAC;AAEH,QAAQ,CAAC,qDAAqD,EAAE,GAAG,EAAE;IAEjE,SAAS,CAAC,GAAG,EAAE;QACX,IAAI,CAAC,IAAI,CAAC,2CAA2C,CAAC,CAAC;QACvD,IAAI,CAAC,IAAI,CAAC,+DAA+D,CAAC,CAAC;QAG3E,wBAAwB,CAAC,6BAA6B,GAAG,IAAI,CAAC,EAAE,EAAE,CAAC;QAEnE,wBAAwB,CAAC,6BAA6B,GAAG,IAAI,CAAC,EAAE,EAAE,CAAC,iBAAiB,CAAC,kBAAkB,CAAC,CAAC;QAGzG,WAAW,CAAC,YAAY,GAAG,IAAI,CAAC,EAAE,EAAE,CAAC;QAErC,WAAW,CAAC,iBAAiB,GAAG,IAAI,CAAC,EAAE,EAAE,CAAC,iBAAiB,CAAC,YAAY,CAAC,CAAC;IAC9E,CAAC,CAAC,CAAC;IAEH,EAAE,CAAC,qCAAqC,EAAE,KAAK,IAAI,EAAE;QACjD,MAAM,aAAa,GAAG,8BAA8B,CAAC,EAAE,cAAc,EAAmB,sBAAsB,EAAE,CAAC,CAAC;QAElH,MAAM,wCAAwC,CAC1C,IAAI,uCAAuC,CAAC,UAAU,EAAE,aAAa,CAAC,cAAc,CAAC,WAAW,CAAC,EACjG,aAAa,CAChB;aACI,IAAI,CAAC,QAAQ,CAAC,EAAE;YACb,MAAM,CAAC,QAAQ,CAAC,QAAQ,CAAC,MAAM,CAAC,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC;YACzC,MAAM,CAAC,QAAQ,CAAC,QAAQ,CAAC,CAAC,CAAC,CAAC,QAAQ,CAAC,CAAC,IAAI,CAAC,WAAW,CAAC,CAAC;QAC5D,CAAC,CAAC;aACD,KAAK,CAAC,KAAK,CAAC,EAAE;YACX,OAAO,CAAC,KAAK,CAAC,KAAK,CAAC,CAAC;YACrB,MAAM,IAAI,KAAK,CAAC,8DAA8D,CAAC,CAAC;QACpF,CAAC,CAAC,CAAC;IACX,CAAC,CAAC,CAAC;IAEH,QAAQ,CAAC,GAAG,EAAE;QACV,IAAI,CAAC,MAAM,CAAC,2CAA2C,CAAC,CAAC;QACzD,IAAI,CAAC,MAAM,CAAC,+DAA+D,CAAC,CAAC;IACjF,CAAC,CAAC,CAAC;AACP,CAAC,CAAC,CAAC","sourcesContent":["import * as coreActions from '@msdyn365-commerce-modules/retail-actions';\nimport { buildHydratedMockActionContext, IRequestContext } from '@msdyn365-commerce/core';\nimport * as salesOrderHistoryActions from '@msdyn365-commerce/retail-proxy/dist/DataActions/CustomersDataActions.g';\nimport 'jest';\nimport {\n    getSalesOrderHistoryWithHydrationsAction,\n    GetSalesOrderHistoryWithHydrationsInput,\n    IPaging\n} from '../actions/get-order-shipment-history';\nimport { mockOrderShipments, mockProducts, mockRequestContextJson } from './__mock__';\n\nconst mockPaging: IPaging = {\n    top: 10,\n    skip: 0\n};\n\ndescribe('getSalesOrderHistoryWithHydrationsAction', () => {\n    it('Should Create Inputs Properly', () => {\n        const actionContext = buildHydratedMockActionContext({ requestContext: <IRequestContext>mockRequestContextJson });\n        new GetSalesOrderHistoryWithHydrationsInput(mockPaging, actionContext.requestContext.apiSettings);\n    });\n});\n\ndescribe('getSalesOrderHistoryWithHydrationsAction Unit Tests', () => {\n    // Setup necessary mocks\n    beforeAll(() => {\n        jest.mock('@msdyn365-commerce-modules/retail-actions');\n        jest.mock('@msdyn365-commerce/retail-proxy/dist/Entities/CommerceTypes.g');\n\n        // @ts-ignore: Jest Mocking Confuses TS Complier\n        salesOrderHistoryActions.getOrderShipmentsHistoryAsync = jest.fn();\n        // @ts-ignore: Jest Mocking Confuses TS Complier\n        salesOrderHistoryActions.getOrderShipmentsHistoryAsync = jest.fn().mockResolvedValue(mockOrderShipments);\n\n        // @ts-ignore: Jest Mocking Confuses TS Complier\n        coreActions.ProductInput = jest.fn();\n        // @ts-ignore: Jest Mocking Confuses TS Complier\n        coreActions.getSimpleProducts = jest.fn().mockResolvedValue(mockProducts);\n    });\n\n    it('Should fetch products by product id', async () => {\n        const actionContext = buildHydratedMockActionContext({ requestContext: <IRequestContext>mockRequestContextJson });\n\n        await getSalesOrderHistoryWithHydrationsAction(\n            new GetSalesOrderHistoryWithHydrationsInput(mockPaging, actionContext.requestContext.apiSettings),\n            actionContext\n        )\n            .then(response => {\n                expect(response.products.length).toBe(1);\n                expect(response.products[0].RecordId).toBe(22565430654);\n            })\n            .catch(error => {\n                console.error(error);\n                throw new Error('Unable to run GetSalesOrderHistoryWithHydrationsInput Action');\n            });\n    });\n\n    afterAll(() => {\n        jest.unmock('@msdyn365-commerce-modules/retail-actions');\n        jest.unmock('@msdyn365-commerce/retail-proxy/dist/Entities/CommerceTypes.g');\n    });\n});\n"]}