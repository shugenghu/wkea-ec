{"version":3,"file":"get-order-information.js","sourceRoot":"./src/","sources":["common/get-order-information.tsx"],"names":[],"mappings":"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","sourcesContent":["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nimport { INodeProps } from '@msdyn365-commerce-modules/utilities';\nimport { PriceComponent } from '@msdyn365-commerce/components';\nimport { ChannelIdentity, OrderShipments, OrgUnitLocation, SalesOrder } from '@msdyn365-commerce/retail-proxy';\nimport get from 'lodash/get';\nimport * as React from 'react';\nimport { countItems, IModuleComponentProps, IPriceContext } from './utilities';\n\nexport interface IOrderInformationInputResources {\n    receiptEmailMessage?: string;\n    orderItemLabel: string;\n    orderItemsLabel: string;\n    processingLabel: string;\n    orderIdLabel: string;\n    receiptIdLabel: string;\n    confirmationIdLabel: string;\n    trackingLabel: string;\n    trackingAriaLabel: string;\n    trackingComingSoonLabel: string;\n    posChannelNameText?: string;\n    onlineStoreChannelNameText?: string;\n    orderPlacedOnLabel?: string;\n}\nexport interface IOrderInformationInput {\n    moduleName: string;\n    channelReferenceId?: string;\n    channelName?: string;\n    channelAddress?: string;\n    showChannelInfo?: boolean;\n    receiptEmail?: string;\n    createdDate?: string;\n    amount?: number;\n    priceContext: IPriceContext;\n    salesId?: string;\n    receiptId?: string;\n    hasTrackingInfo?: boolean;\n    count?: number;\n    resources: IOrderInformationInputResources;\n}\n\nexport interface IOrderInformation {\n    orderInformationProps: INodeProps;\n    channelName: React.ReactNode;\n    channelAddress: React.ReactNode;\n    salesId: React.ReactNode;\n    receiptId: React.ReactNode;\n    receiptEmail: React.ReactNode;\n    createdDate: React.ReactNode;\n    count: React.ReactNode;\n    amount: React.ReactNode;\n    channelReferenceId: React.ReactNode;\n}\n\nexport const getOrderInformation = ({\n    moduleName,\n    channelReferenceId,\n    channelName,\n    channelAddress,\n    showChannelInfo,\n    receiptEmail,\n    createdDate,\n    amount,\n    priceContext,\n    salesId,\n    receiptId,\n    count,\n    resources: { receiptEmailMessage, orderItemLabel, orderItemsLabel, orderIdLabel, receiptIdLabel, confirmationIdLabel, posChannelNameText, onlineStoreChannelNameText, orderPlacedOnLabel }\n}: IOrderInformationInput): IOrderInformation => ({\n    orderInformationProps: { className: `${moduleName}__order-information` },\n    channelName: showChannelInfo && channelName && (\n        channelAddress ? <span className={`${moduleName}__order-information-channel-name`}>{`${posChannelNameText} ${channelName}`}</span>\n            : <span className={`${moduleName}__order-information-channel-name`}>{onlineStoreChannelNameText}</span>),\n    channelAddress: showChannelInfo && channelAddress && <span className={`${moduleName}__order-information-channel-address`}>{channelAddress}</span>,\n    salesId: salesId ? <span className={`${moduleName}__order-information-sales-id`}>{`${orderIdLabel} ${salesId}`}</span> : '',\n    receiptId: receiptId ? <span className={`${moduleName}__order-information-receipt-id`}>{`${receiptIdLabel} ${receiptId}`}</span> : '',\n    receiptEmail: receiptEmail && (\n        <span className={`${moduleName}__order-information-receipt-email`}>\n            {receiptEmailMessage}\n            <span>{receiptEmail}</span>\n        </span>\n    ),\n    createdDate: createdDate && <span className={`${moduleName}__order-information-created-date`}>{orderPlacedOnLabel} {createdDate}</span>,\n    count: count !== undefined && count > 0 && (\n        <span className={`${moduleName}__order-information-count`}>\n            {count === 1 ? `${count} ${orderItemLabel}` : `${count} ${orderItemsLabel}`}\n        </span>\n    ),\n    amount: (amount || amount === 0) && (\n        <PriceComponent\n            {...priceContext}\n            className={`${moduleName}__order-information-amount`}\n            data={{ price: { CustomerContextualPrice: amount } }}\n        />\n    ),\n    channelReferenceId: channelReferenceId && (\n        <span className={`${moduleName}__order-information-channel-reference-id`}>{`${confirmationIdLabel} `}<span>{channelReferenceId}</span></span>\n    )\n});\n\ninterface IProps extends IModuleComponentProps {\n    resources: IOrderInformationInputResources;\n}\n\nexport const getOrderInfomationInput = (\n    props: IProps,\n    moduleName: string,\n    order: SalesOrder | OrderShipments,\n    priceContext: IPriceContext,\n    channelIdentities?: ChannelIdentity[],\n    orgUnitLocations?: OrgUnitLocation[],\n    showChannelInfo?: boolean\n): IOrderInformationInput => {\n    const {\n        resources,\n        context: {\n            request: {\n                apiSettings: { channelId }\n            }\n        }\n    } = props;\n\n    // @ts-ignore OrderShipments doesnt has ChannelId\n    const showTrackingInfo = !!order.ChannelId && order.ChannelId === channelId;\n\n    const locale = get(props, 'context.request.locale') || 'en-US';\n    const count = order.SalesLines && order.SalesLines.length ? countItems(order.SalesLines) : 0;\n\n    const orderChannel = channelIdentities ? channelIdentities.filter(channel => { return channel.RecordId === order.ChannelId; }) : '';\n    const orderOrgUnitLocation = orgUnitLocations ? orgUnitLocations.filter(location => { return location.ChannelId === order.ChannelId; }) : '';\n\n    return {\n        moduleName: moduleName,\n        createdDate: (order.CreatedDateTime && new Date(order.CreatedDateTime).toLocaleDateString(locale)) || '',\n        salesId: order.SalesId,\n        receiptId: order.ReceiptId,\n        showChannelInfo: showChannelInfo,\n        // @ts-ignore OrderShipments doesnt has ReceiptEmail\n        receiptEmail: order.ReceiptEmail,\n        channelReferenceId: order.ChannelReferenceId,\n        channelName: orderChannel && orderChannel.length > 0 ? orderChannel[0].Name : '',\n        channelAddress: orderOrgUnitLocation && orderOrgUnitLocation.length > 0 ? orderOrgUnitLocation[0].Address : '',\n        amount: order.TotalAmount || 0,\n        priceContext: priceContext,\n        count,\n        resources\n    };\n};\n"]}