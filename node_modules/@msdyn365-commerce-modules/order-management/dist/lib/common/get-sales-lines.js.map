{"version":3,"file":"get-sales-lines.js","sourceRoot":"./src/","sources":["common/get-sales-lines.tsx"],"names":[],"mappings":"AAOA,OAAO,EAAE,YAAY,EAAmC,MAAM,kBAAkB,CAAC;AAqBjF,MAAM,CAAC,MAAM,aAAa,GAAG,CAAC,EAC1B,UAAU,EACV,oBAAoB,EACpB,UAAU,EACV,QAAQ,EACR,SAAS,EACT,SAAS,EACT,gBAAgB,EAChB,SAAS,EACT,mBAAmB,EACnB,gBAAgB,EACE,EAAgB,EAAE;IACpC,OAAO,UAAU,CAAC,GAAG,CAAC,SAAS,CAAC,EAAE;QAC9B,MAAM,OAAO,GAAG,QAAQ,CAAC,IAAI,CAAC,QAAQ,CAAC,EAAE,CAAC,QAAQ,CAAC,QAAQ,KAAK,SAAS,CAAC,SAAS,CAAC,IAAK,EAAoB,CAAC;QAC9G,MAAM,QAAQ,GAAG,SAAS,IAAI,SAAS,CAAC,IAAI,CAAC,SAAS,CAAC,EAAE,CAAC,SAAS,CAAC,aAAa,EAAE,IAAI,CAAC,aAAa,CAAC,EAAE,CAAC,aAAa,CAAC,MAAM,KAAK,OAAO,CAAC,MAAM,CAAC,CAAC,CAAC;QACnJ,OAAO,YAAY,CAAC;YAChB,UAAU;YACV,oBAAoB;YACpB,OAAO;YACP,QAAQ;YACR,SAAS;YACT,gBAAgB;YAChB,SAAS;YACT,SAAS;YACT,mBAAmB;YACnB,gBAAgB;SACnB,CAAC,CAAC;IACP,CAAC,CAAC,CAAC;AACP,CAAC,CAAC;AAMF,MAAM,CAAC,MAAM,kBAAkB,GAAG,CAC9B,KAAa,EACb,UAAkB,EAClB,KAAkC,EAClC,QAAyB,EACzB,YAA2B,EAC3B,mBAA6B,EAC7B,gBAAoC,EACL,EAAE;IACjC,IAAI,CAAC,KAAK,IAAI,CAAC,KAAK,CAAC,UAAU,IAAI,CAAC,KAAK,CAAC,UAAU,CAAC,MAAM,EAAE;QACzD,OAAO;KACV;IAED,MAAM,EACF,SAAS,EACT,MAAM,EAAE,EAAE,aAAa,EAAE,EACzB,OAAO,EAAE,EACL,aAAa,EACb,OAAO,EAAE,EACL,YAAY,EACZ,WAAW,EAAE,EAAE,SAAS,EAAE,EAC7B,EACJ,EACJ,GAAG,KAAK,CAAC;IAEV,MAAM,gBAAgB,GAAG,CAAC,KAAK,CAAC,SAAS,IAAI,KAAK,CAAC,SAAS,KAAK,SAAS,CAAC;IAE3E,OAAO;QACH,UAAU;QACV,oBAAoB,EAAE,KAAK;QAC3B,gBAAgB;QAChB,UAAU,EAAE,KAAK,CAAC,UAAU;QAC5B,QAAQ;QACR,SAAS,EAAE,KAAK,CAAC,SAAS;QAC1B,YAAY,EAAE,YAAY;QAC1B,SAAS;QACT,aAAa,EAAE,aAAa;QAC5B,YAAY,EAAE,YAAa;QAC3B,aAAa,EAAE,aAAa;QAC5B,mBAAmB,EAAE,mBAAmB;QACxC,gBAAgB,EAAE,gBAAgB;KACrC,CAAC;AACN,CAAC,CAAC","sourcesContent":["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nimport { ITelemetryContent } from '@msdyn365-commerce-modules/utilities';\nimport { IActionContext, IGridSettings, IImageSettings } from '@msdyn365-commerce/core';\nimport { OrderShipments, SalesLine, SalesOrder, Shipment, SimpleProduct } from '@msdyn365-commerce/retail-proxy';\nimport { getSalesLine, ISalesLine, ISalesLineResources } from './get-sales-line';\nimport { IModuleComponentProps, IPriceContext } from './utilities';\n\nexport interface IGetSalesLinesInput {\n    moduleName: string;\n    moduleComponentProps: IModuleComponentProps;\n    isCurrentChannel: boolean;\n\n    salesLines: SalesLine[];\n    products: SimpleProduct[];\n    shipments?: Shipment[];\n    priceContext: IPriceContext;\n    resources: ISalesLineResources;\n    actionContext: IActionContext;\n    gridSettings: IGridSettings;\n    imageSettings?: IImageSettings;\n    imageOnly?: boolean;\n    showCompleteAddress?: boolean;\n    telemetryContent?: ITelemetryContent;\n}\n\nexport const getSalesLines = ({\n    moduleName,\n    moduleComponentProps,\n    salesLines,\n    products,\n    shipments,\n    resources,\n    isCurrentChannel,\n    imageOnly,\n    showCompleteAddress,\n    telemetryContent\n}: IGetSalesLinesInput): ISalesLine[] => {\n    return salesLines.map(salesLine => {\n        const product = products.find(_product => _product.RecordId === salesLine.ProductId) || ({} as SimpleProduct);\n        const shipment = shipments && shipments.find(_shipment => _shipment.ShipmentLines?.find(_shipmentLine => _shipmentLine.ItemId === product.ItemId));\n        return getSalesLine({\n            moduleName,\n            moduleComponentProps,\n            product,\n            shipment,\n            salesLine,\n            isCurrentChannel,\n            resources,\n            imageOnly,\n            showCompleteAddress,\n            telemetryContent\n        });\n    });\n};\n\ninterface IProps extends IModuleComponentProps {\n    resources: ISalesLineResources;\n}\n\nexport const getSalesLinesInput = (\n    props: IProps,\n    moduleName: string,\n    order: SalesOrder | OrderShipments,\n    products: SimpleProduct[],\n    priceContext: IPriceContext,\n    showCompleteAddress?: boolean,\n    telemetryContent?: ITelemetryContent\n): IGetSalesLinesInput | undefined => {\n    if (!order || !order.SalesLines || !order.SalesLines.length) {\n        return;\n    }\n\n    const {\n        resources,\n        config: { imageSettings },\n        context: {\n            actionContext,\n            request: {\n                gridSettings,\n                apiSettings: { channelId }\n            }\n        }\n    } = props;\n\n    const isCurrentChannel = !order.ChannelId || order.ChannelId === channelId;\n\n    return {\n        moduleName,\n        moduleComponentProps: props,\n        isCurrentChannel,\n        salesLines: order.SalesLines,\n        products,\n        shipments: order.Shipments,\n        priceContext: priceContext,\n        resources,\n        actionContext: actionContext,\n        gridSettings: gridSettings!,\n        imageSettings: imageSettings,\n        showCompleteAddress: showCompleteAddress,\n        telemetryContent: telemetryContent\n    };\n};\n"]}