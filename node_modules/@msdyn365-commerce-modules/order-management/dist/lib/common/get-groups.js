import { format } from '@msdyn365-commerce-modules/utilities';
import * as React from 'react';
import { groupSalesLines } from './utilities';
export const getGroups = ({ moduleName, salesLines, resources: { orderItemLabel, orderItemsLabel, pickupItemsHeader, pickingItemsLabel, shippingAddressTitle, shippingItemToYouLabel }, showAddress, isConfirmationView }) => {
    const groups = groupSalesLines(salesLines).map(group => {
        const { deliveryType, salesStatus, count, salesLines: _salesLines } = group;
        const itemLabel = count === 1 ? orderItemLabel : orderItemsLabel;
        const pickingItemsLabelText = pickingItemsLabel && format(pickingItemsLabel, count, itemLabel);
        const shippingItemsToYouText = shippingItemToYouLabel && format(shippingItemToYouLabel, count, itemLabel);
        const groupProps = { className: `${moduleName}__group-deliveryType-${deliveryType} salesStatus-${salesStatus}` };
        const salesLinesProps = { className: `${moduleName}__sales-lines` };
        const address = _salesLines[0].address;
        const trackingInfo = _salesLines[0].trackingInfo;
        const isProcessing = _salesLines[0].data.salesStatus === 'processing';
        const delivery = {
            deliveryProps: { className: `${moduleName}__group-delivery` },
            heading: (React.createElement("span", { className: `${moduleName}__group-delivery-heading` }, isProcessing
                ? isConfirmationView
                    ? deliveryType === 'pickUp' ? pickupItemsHeader : shippingAddressTitle
                    : _salesLines[0].deliveryType
                : _salesLines[0].salesStatus)),
            processing: isProcessing ? (React.createElement("span", { className: `${moduleName}__group-delivery-processing-label` }, _salesLines[0].salesStatus)) : (undefined),
            count: !isConfirmationView && React.createElement("span", { className: `${moduleName}__group-delivery-total-items` }, `(${count} ${itemLabel})`),
            shippingItemsToYou: isConfirmationView && deliveryType === 'ship'
                ? React.createElement("span", { className: `${moduleName}__sales-lines-shipping-items-label` }, shippingItemsToYouText)
                : React.createElement("span", { className: `${moduleName}__sales-lines-picking-items-label` }, pickingItemsLabelText),
            trackingInfo,
            address
        };
        return {
            groupProps,
            salesLinesProps,
            delivery,
            salesLines: _salesLines,
            address: (showAddress) && address,
            data: {
                count,
                deliveryType,
                salesStatus
            }
        };
    });
    return {
        groupsProps: { className: `${moduleName}__groups` },
        groups
    };
};
//# sourceMappingURL=get-groups.js.map