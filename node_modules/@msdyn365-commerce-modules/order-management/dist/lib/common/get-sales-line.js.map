{"version":3,"file":"get-sales-line.js","sourceRoot":"./src/","sources":["common/get-sales-line.tsx"],"names":[],"mappings":"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","sourcesContent":["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nimport { getProductUrlSync } from '@msdyn365-commerce-modules/retail-actions';\nimport { Button, getPayloadObject, getTelemetryAttributes, INodeProps, ITelemetryContent, TelemetryConstant } from '@msdyn365-commerce-modules/utilities';\nimport { CartLineItemComponent } from '@msdyn365-commerce/components';\nimport { Image } from '@msdyn365-commerce/core';\nimport { SalesLine, Shipment, SimpleProduct } from '@msdyn365-commerce/retail-proxy';\nimport * as React from 'react';\nimport Address from './address';\nimport LabelComponent from './label';\nimport { defaultImageSettings, getSalesStatusCode, IDeliveryType, IModuleComponentProps, ISalesStatusCode } from './utilities';\n\nexport type ISalesStatusStringMap = {\n    [x in ISalesStatusCode]: string | undefined;\n};\n\nexport type IDeliveryTypeStringMap = {\n    [x in IDeliveryType]: string | undefined;\n};\n\nexport interface ISalesLineResources {\n    productDimensionTypeSize: string;\n    productDimensionTypeColor: string;\n    productDimensionTypeStyle: string;\n    salesLineQuantityText: string;\n    configString: string;\n    shipToLabel: string;\n    storeLabel: string;\n    phoneLabel: string;\n    phoneAriaLabel: string;\n    buyItAgainAriaLabel: string;\n    buyItAgainLabel: string;\n    orderStatusReadyForPickup: string;\n    orderStatusPickedUp: string;\n    orderStatusShipped: string;\n    orderStatusCanceled: string;\n    orderStatusProcessing: string;\n    pickedUpSalesLines: string;\n    deliveredSalesLines: string;\n    carryOutSalesLines: string;\n    trackingLabel: string;\n    trackingAriaLabel: string;\n    trackingComingSoonLabel: string;\n    discountStringText: string;\n}\n\nexport interface IGetSalesLineInput {\n    moduleName: string;\n    moduleComponentProps: IModuleComponentProps;\n    product: SimpleProduct;\n    shipment?: Shipment;\n    salesLine: SalesLine;\n    isCurrentChannel: boolean;\n    resources: ISalesLineResources;\n    imageOnly?: boolean;\n    showCompleteAddress?: boolean;\n    telemetryContent?: ITelemetryContent;\n}\n\nexport interface ISalesLine {\n    salesLineProps: INodeProps;\n    salesLine: React.ReactNode;\n    address?: React.ReactNode;\n    buyAgainButton?: React.ReactNode;\n    salesStatus: React.ReactNode;\n    deliveryType: React.ReactNode;\n    trackingInfo: React.ReactNode;\n\n    // row data\n    data: {\n        salesLine: SalesLine;\n        product: SimpleProduct;\n        shipment?: Shipment;\n        deliveryType: IDeliveryType;\n        productUrl: string;\n        salesStatus: ISalesStatusCode;\n    };\n}\n\n// tslint:disable-next-line:max-func-body-length\nexport const getSalesLine = ({\n    moduleName,\n    moduleComponentProps: {\n        id,\n        typeName,\n        context,\n        telemetry,\n        config: { imageSettings }\n    },\n    showCompleteAddress,\n    product,\n    shipment,\n    salesLine,\n    isCurrentChannel,\n    imageOnly,\n    resources: {\n        productDimensionTypeSize: sizeString,\n        productDimensionTypeColor: colorString,\n        productDimensionTypeStyle: styleString,\n        salesLineQuantityText: quantityDisplayString,\n        configString,\n        shipToLabel,\n        storeLabel,\n        phoneLabel,\n        phoneAriaLabel,\n        buyItAgainLabel,\n        buyItAgainAriaLabel,\n        orderStatusReadyForPickup,\n        orderStatusProcessing,\n        orderStatusShipped,\n        orderStatusPickedUp,\n        orderStatusCanceled,\n        pickedUpSalesLines,\n        deliveredSalesLines,\n        carryOutSalesLines,\n        trackingLabel,\n        trackingAriaLabel,\n        trackingComingSoonLabel,\n        discountStringText\n    },\n    telemetryContent\n}: IGetSalesLineInput): ISalesLine => {\n    const salesStatusStringMap: ISalesStatusStringMap = {\n        canceled: orderStatusCanceled,\n        readyForPickup: orderStatusReadyForPickup,\n        pickedUp: orderStatusPickedUp,\n        processing: orderStatusProcessing,\n        shipped: orderStatusShipped,\n        unknown: undefined\n    };\n\n    const deliveryTypeStringMap: IDeliveryTypeStringMap = {\n        pickUp: pickedUpSalesLines,\n        ship: deliveredSalesLines,\n        carryOut: carryOutSalesLines\n    };\n\n    const gridSettings = context.request.gridSettings;\n    const pickupDeliveryModeCode = context.request.channel && context.request.channel.PickupDeliveryModeCode;\n    const productUrl = getProductUrlSync(product, context.actionContext, undefined);\n    const deliveryType =\n        !!pickupDeliveryModeCode && pickupDeliveryModeCode !== '' && pickupDeliveryModeCode === salesLine.DeliveryMode\n            ? 'pickUp'\n            : !!salesLine.DeliveryMode\n            ? 'ship'\n            : 'carryOut';\n    const salesStatus = getSalesStatusCode(deliveryType, salesLine.SalesStatusValue);\n    const salesStatusString = salesStatusStringMap[salesStatus];\n    const salesStatusComp = salesStatusString && <LabelComponent className={`${moduleName}__sales-status`} label={salesStatusString} />;\n    const deliveryTypeString = deliveryTypeStringMap[deliveryType];\n    const deliveryTypeComp = deliveryTypeString && <LabelComponent className={`${moduleName}__devliery-type`} label={deliveryTypeString} />;\n    const trackingInfo = isCurrentChannel && deliveryType === 'ship' && (\n        <span className={`${moduleName}__tracking-info`}>\n            {trackingLabel}\n            {shipment ? (\n                <a className={`${moduleName}__tracking-link`} href={shipment.TrackingUrl} aria-label={trackingAriaLabel}>\n                    {shipment.TrackingNumber}\n                </a>\n            ) : (\n                <>{trackingComingSoonLabel}</>\n            )}\n        </span>\n    );\n    const payLoad = getPayloadObject('click', telemetryContent!, TelemetryConstant.BuyItAgain);\n    const buyItAgainAttributes = getTelemetryAttributes(telemetryContent!, payLoad);\n    return {\n        data: {\n            salesLine,\n            productUrl,\n            deliveryType,\n            salesStatus,\n            product,\n            shipment\n        },\n        salesLineProps: { className: `${moduleName}__sales-line` },\n        salesLine: imageOnly ? (\n            <div className={`${moduleName}__sales-line-picture`}>\n                <Image\n                    className={`${moduleName}__sales-line-image`}\n                    altText={product.Name}\n                    src={product.PrimaryImageUrl || ''}\n                    gridSettings={gridSettings!}\n                    imageSettings={imageSettings || defaultImageSettings}\n                    loadFailureBehavior='empty'\n                />\n            </div>\n        ) : (\n            <CartLineItemComponent\n                id={id}\n                typeName={typeName}\n                context={context}\n                resources={{\n                    sizeString,\n                    colorString,\n                    styleString,\n                    quantityDisplayString,\n                    configString,\n                    discountStringText,\n                    inputQuantityAriaLabel: '',\n                    originalPriceText:'',\n                    currentPriceText:'',\n                    shippingChargesText:''\n                }}\n                primaryImageUrl={product.PrimaryImageUrl}\n                productUrl={productUrl}\n                imageSettings={imageSettings || defaultImageSettings}\n                gridSettings={gridSettings!}\n                isSalesLine={true}\n                data={{cartLine: salesLine, product: product}}\n            />\n        ),\n        address: salesLine.ShippingAddress && (\n            <Address\n                moduleName={moduleName}\n                address={salesLine.ShippingAddress}\n                resource={{ shipToLabel, storeLabel, phoneLabel, phoneAriaLabel }}\n                deliveryType={deliveryType}\n                showCompleteAddress={showCompleteAddress}\n            />\n        ),\n        deliveryType: deliveryTypeComp,\n        salesStatus: salesStatusComp,\n        trackingInfo,\n        buyAgainButton: isCurrentChannel && (\n            <Button\n                href={productUrl}\n                aria-label={name && buyItAgainAriaLabel ? (buyItAgainAriaLabel || '').replace('{productName}', name) : ''}\n                className={`${moduleName}__sales-line-btn-buy-it-again`}\n                {...buyItAgainAttributes}\n            >\n                {buyItAgainLabel}\n            </Button>\n        )\n    };\n};\n"]}