{"version":3,"file":"get-groups.js","sourceRoot":"./src/","sources":["common/get-groups.tsx"],"names":[],"mappings":"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","sourcesContent":["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nimport { format, INodeProps } from '@msdyn365-commerce-modules/utilities';\nimport * as React from 'react';\nimport { ISalesLine } from './get-sales-line';\nimport { groupSalesLines, IDeliveryType, ISalesStatusCode } from './utilities';\n\nexport interface IGroupDelivery {\n    deliveryProps: INodeProps;\n    heading: React.ReactNode;\n    count: React.ReactNode;\n    processing: React.ReactNode;\n    trackingInfo: React.ReactNode;\n    address: React.ReactNode;\n    shippingItemsToYou?: React.ReactNode;\n}\n\nexport interface IGroup {\n    groupProps: INodeProps;\n    salesLinesProps: INodeProps;\n    delivery: IGroupDelivery;\n    salesLines: ISalesLine[];\n    address: React.ReactNode;\n    // row data\n    data: {\n        count: number;\n        deliveryType: IDeliveryType;\n        salesStatus: ISalesStatusCode;\n    };\n}\n\nexport interface IGroupsInput {\n    moduleName: string;\n    salesLines: ISalesLine[];\n    resources: {\n        orderItemLabel: string;\n        orderItemsLabel: string;\n        pickupItemsHeader?: string;\n        pickingItemsLabel?: string;\n        shippingAddressTitle?: string;\n        shippingItemToYouLabel?: string;\n    };\n    showAddress?: boolean;\n    isConfirmationView?: boolean;\n}\n\nexport interface IGroups {\n    groupsProps: INodeProps;\n    groups: IGroup[];\n}\n\nexport const getGroups = ({ moduleName, salesLines, resources: { orderItemLabel, orderItemsLabel, pickupItemsHeader, pickingItemsLabel, shippingAddressTitle, shippingItemToYouLabel }, showAddress, isConfirmationView }: IGroupsInput): IGroups => {\n    const groups = groupSalesLines(salesLines).map(group => {\n        const { deliveryType, salesStatus, count, salesLines: _salesLines } = group;\n        const itemLabel = count === 1 ? orderItemLabel : orderItemsLabel;\n        const pickingItemsLabelText = pickingItemsLabel && format(pickingItemsLabel, count, itemLabel);\n        const shippingItemsToYouText = shippingItemToYouLabel && format(shippingItemToYouLabel, count, itemLabel);\n        const groupProps = { className: `${moduleName}__group-deliveryType-${deliveryType} salesStatus-${salesStatus}` };\n        const salesLinesProps = { className: `${moduleName}__sales-lines` };\n        const address = _salesLines[0].address;\n        const trackingInfo = _salesLines[0].trackingInfo;\n        const isProcessing = _salesLines[0].data.salesStatus === 'processing';\n        const delivery = {\n            deliveryProps: { className: `${moduleName}__group-delivery` },\n            heading: (\n                <span className={`${moduleName}__group-delivery-heading`}>\n                    {isProcessing\n                        ? isConfirmationView\n                            ? deliveryType === 'pickUp' ? pickupItemsHeader : shippingAddressTitle\n                            : _salesLines[0].deliveryType\n                        : _salesLines[0].salesStatus}\n                </span>\n            ),\n            processing: isProcessing ? (\n                <span className={`${moduleName}__group-delivery-processing-label`}>{_salesLines[0].salesStatus}</span>\n            ) : (\n                    undefined\n                ),\n            count: !isConfirmationView && <span className={`${moduleName}__group-delivery-total-items`}>{`(${count} ${itemLabel})`}</span>,\n            shippingItemsToYou: isConfirmationView && deliveryType === 'ship'\n                ? <span className={`${moduleName}__sales-lines-shipping-items-label`}>{shippingItemsToYouText}</span>\n                : <span className={`${moduleName}__sales-lines-picking-items-label`}>{pickingItemsLabelText}</span>,\n            trackingInfo,\n            address\n        };\n        return {\n            groupProps,\n            salesLinesProps,\n            delivery,\n            salesLines: _salesLines,\n            address: (showAddress) && address,\n            data: {\n                count,\n                deliveryType,\n                salesStatus\n            }\n        };\n    });\n\n    return {\n        groupsProps: { className: `${moduleName}__groups` },\n        groups\n    };\n};\n"]}