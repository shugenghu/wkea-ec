import { buildCacheKey } from '@msdyn365-commerce-modules/retail-actions';
import { createObservableDataAction } from '@msdyn365-commerce/core';
import { getChannelsAsync } from '@msdyn365-commerce/retail-proxy/dist/DataActions/StoreOperationsDataActions.g';
const getChannels = () => async (ctx) => {
    return getChannelsAsync({
        callerContext: ctx
    });
};
export class GetChannelIdentitiesInput {
    constructor(apiSettings) {
        this.getCacheKey = () => buildCacheKey(`ChannelIdentities`, this.apiSettings);
        this.getCacheObjectType = () => `ChannelIdentities`;
        this.dataCacheType = () => 'request';
        this.apiSettings = apiSettings;
    }
}
const createChannelIdentitiesInput = (inputData) => {
    return new GetChannelIdentitiesInput(inputData.requestContext.apiSettings);
};
export async function getChannelsAction(input, ctx) {
    if (!ctx) {
        throw new Error(`getChannelsAction - Action context cannot be null/undefined`);
    }
    let channels = [];
    try {
        channels = await getChannels()(ctx);
    }
    catch (error) {
        throw error;
    }
    return { channelIdentities: channels };
}
export default createObservableDataAction({
    id: '@msdyn365-commerce-modules/order-management/get-channels',
    action: getChannelsAction,
    input: createChannelIdentitiesInput
});
//# sourceMappingURL=get-channels.js.map