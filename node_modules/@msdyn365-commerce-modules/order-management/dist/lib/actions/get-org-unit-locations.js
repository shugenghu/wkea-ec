import { buildCacheKey } from '@msdyn365-commerce-modules/retail-actions';
import { createObservableDataAction } from '@msdyn365-commerce/core';
import { getOrgUnitLocationsByAreaAsync } from '@msdyn365-commerce/retail-proxy/dist/DataActions/OrgUnitsDataActions.g';
const searchArea = {
    Radius: Math.max(),
    DistanceUnitValue: 0
};
const getOrgUnitLocations = () => async (ctx) => {
    return getOrgUnitLocationsByAreaAsync({
        callerContext: ctx,
        queryResultSettings: {}
    }, searchArea);
};
export class GetOrgUnitLocationsInput {
    constructor(apiSettings) {
        this.getCacheKey = () => buildCacheKey(`OrgUnitLocations`, this.apiSettings);
        this.getCacheObjectType = () => `OrgUnitLocations`;
        this.dataCacheType = () => 'request';
        this.apiSettings = apiSettings;
    }
}
const createOrgUnitLocationsInput = (inputData) => {
    return new GetOrgUnitLocationsInput(inputData.requestContext.apiSettings);
};
export async function getOrgUnitLocationsAction(input, ctx) {
    if (!ctx) {
        throw new Error(`getOrgUnitLocationsAction - Action context cannot be null/undefined`);
    }
    let orgUnitLocations = [];
    try {
        orgUnitLocations = await getOrgUnitLocations()(ctx);
    }
    catch (error) {
        throw error;
    }
    return { orgUnitLocations: orgUnitLocations };
}
export default createObservableDataAction({
    id: '@msdyn365-commerce-modules/order-management/get-org-unit-locations',
    action: getOrgUnitLocationsAction,
    input: createOrgUnitLocationsInput
});
//# sourceMappingURL=get-org-unit-locations.js.map