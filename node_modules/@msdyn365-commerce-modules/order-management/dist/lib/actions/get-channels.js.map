{"version":3,"file":"get-channels.js","sourceRoot":"./src/","sources":["actions/get-channels.ts"],"names":[],"mappings":"AAAA,OAAO,EAAE,aAAa,EAAE,MAAM,2CAA2C,CAAC;AAC1E,OAAO,EAEH,0BAA0B,EAQ7B,MAAM,yBAAyB,CAAC;AAEjC,OAAO,EAAE,gBAAgB,EAAE,MAAM,+EAA+E,CAAC;AASjH,MAAM,WAAW,GAAG,GAAG,EAAE,CAAC,KAAK,EAAE,GAAmB,EAA8B,EAAE;IAChF,OAAO,gBAAgB,CACnB;QACI,aAAa,EAAE,GAAG;KACrB,CACJ,CAAC;AACN,CAAC,CAAC;AAKF,MAAM,OAAO,yBAAyB;IAGlC,YAAY,WAAiC;QAItC,gBAAW,GAAG,GAAG,EAAE,CAAC,aAAa,CAAC,mBAAmB,EAAE,IAAI,CAAC,WAAW,CAAC,CAAC;QACzE,uBAAkB,GAAG,GAAG,EAAE,CAAC,mBAAmB,CAAC;QAC/C,kBAAa,GAAG,GAAc,EAAE,CAAC,SAAS,CAAC;QAL9C,IAAI,CAAC,WAAW,GAAG,WAAW,CAAC;IACnC,CAAC;CAKJ;AAKD,MAAM,4BAA4B,GAAG,CAAC,SAA+C,EAAE,EAAE;IACrF,OAAO,IAAI,yBAAyB,CAAC,SAAS,CAAC,cAAc,CAAC,WAAW,CAAC,CAAC;AAC/E,CAAC,CAAC;AAKF,MAAM,CAAC,KAAK,UAAU,iBAAiB,CACnC,KAAgC,EAChC,GAAmB;IAEnB,IAAI,CAAC,GAAG,EAAE;QACN,MAAM,IAAI,KAAK,CAAC,6DAA6D,CAAC,CAAC;KAClF;IAED,IAAI,QAAQ,GAAsB,EAAE,CAAC;IAErC,IAAI;QACA,QAAQ,GAAG,MAAM,WAAW,EAAE,CAAC,GAAG,CAAC,CAAC;KACvC;IAAC,OAAO,KAAK,EAAE;QACZ,MAAM,KAAK,CAAC;KACf;IAED,OAAO,EAAE,iBAAiB,EAAE,QAAQ,EAAE,CAAC;AAC3C,CAAC;AAED,eAAe,0BAA0B,CAAC;IACtC,EAAE,EAAE,0DAA0D;IAC9D,MAAM,EAA6B,iBAAiB;IACpD,KAAK,EAAE,4BAA4B;CACtC,CAAC,CAAC","sourcesContent":["import { buildCacheKey } from '@msdyn365-commerce-modules/retail-actions';\nimport {\n    CacheType,\n    createObservableDataAction,\n    IAction,\n    IActionContext,\n    IActionInput,\n    IAny,\n    ICommerceApiSettings,\n    ICreateActionContext,\n    IGeneric\n} from '@msdyn365-commerce/core';\nimport { ChannelIdentity } from '@msdyn365-commerce/retail-proxy';\nimport { getChannelsAsync } from '@msdyn365-commerce/retail-proxy/dist/DataActions/StoreOperationsDataActions.g';\n\ninterface IChannelIdentity {\n    channelIdentities: ChannelIdentity[];\n}\n\n/**\n * Calls the Retail API and returns the channels\n */\nconst getChannels = () => async (ctx: IActionContext): Promise<ChannelIdentity[]> => {\n    return getChannelsAsync(\n        {\n            callerContext: ctx\n        }\n    );\n};\n\n/**\n *  Action input\n */\nexport class GetChannelIdentitiesInput implements IActionInput {\n    private apiSettings: ICommerceApiSettings;\n\n    constructor(apiSettings: ICommerceApiSettings) {\n        this.apiSettings = apiSettings;\n    }\n\n    public getCacheKey = () => buildCacheKey(`ChannelIdentities`, this.apiSettings);\n    public getCacheObjectType = () => `ChannelIdentities`;\n    public dataCacheType = (): CacheType => 'request';\n}\n\n/**\n * Creates the input required to make the retail api call\n */\nconst createChannelIdentitiesInput = (inputData: ICreateActionContext<IGeneric<IAny>>) => {\n    return new GetChannelIdentitiesInput(inputData.requestContext.apiSettings);\n};\n\n/**\n * Get channels action\n */\nexport async function getChannelsAction(\n    input: GetChannelIdentitiesInput,\n    ctx: IActionContext\n): Promise<IChannelIdentity> {\n    if (!ctx) {\n        throw new Error(`getChannelsAction - Action context cannot be null/undefined`);\n    }\n\n    let channels: ChannelIdentity[] = [];\n\n    try {\n        channels = await getChannels()(ctx);\n    } catch (error) {\n        throw error;\n    }\n\n    return { channelIdentities: channels };\n}\n\nexport default createObservableDataAction({\n    id: '@msdyn365-commerce-modules/order-management/get-channels',\n    action: <IAction<IChannelIdentity>>getChannelsAction,\n    input: createChannelIdentitiesInput\n});\n"]}