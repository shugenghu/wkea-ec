import { IModuleProps, INodeProps } from '@msdyn365-commerce-modules/utilities';
import * as Msdyn365 from '@msdyn365-commerce/core';
import { SalesOrder, SimpleProduct } from '@msdyn365-commerce/retail-proxy/dist/Entities/CommerceTypes.g';
import * as React from 'react';
import { IGetOrderSummaryInput, IHelp, IOrderSummary, IPaymentMethods, IPaymentMethodsInput } from '../../common';
import { IGroups } from '../../common/get-groups';
import { IOrderInformation } from '../../common/get-order-information';
import { ISalesLine } from '../../common/get-sales-line';
import { IPriceContext } from '../../common/utilities';
import { IOrderConfirmationData } from './order-confirmation.data';
import { IOrderConfirmationProps } from './order-confirmation.props.autogenerated';
export * from '../../common/get-groups';
export * from '../../common/get-order-information';
export * from '../../common/get-sales-line';
export * from '../../common/get-sales-lines';
export * from '../../common/utilities';
export * from './components/get-help';
export * from './components/get-order-summary';
export * from './components/get-payment-methods';
export interface IOrderConfirmationViewProps extends IOrderConfirmationProps<IOrderConfirmationData> {
    moduleProps: IModuleProps;
    salesOrder?: SalesOrder;
    footerProps?: INodeProps;
    alert?: React.ReactNode;
    loading?: React.ReactNode;
    heading: React.ReactNode;
    backToShoppingLink?: React.ReactNode;
    orderInfomation?: IOrderInformation;
    salesLines?: ISalesLine[];
    groups?: IGroups;
    orderSummary?: IOrderSummary;
    payment?: IPaymentMethods;
    help?: IHelp;
}
declare class OrderConfirmation extends React.PureComponent<IOrderConfirmationProps<IOrderConfirmationData>> {
    private moduleName;
    private telemetryContent?;
    private backToShoppingAttributes?;
    constructor(props: IOrderConfirmationProps<IOrderConfirmationData>);
    get isCurrentChannel(): boolean;
    get isDataReady(): boolean;
    get hasError(): boolean;
    get order(): SalesOrder | undefined;
    get products(): SimpleProduct[];
    get priceContext(): IPriceContext;
    get earnedPoints(): number;
    get orderSummaryProps(): IGetOrderSummaryInput | undefined;
    get paymentMethodsProps(): IPaymentMethodsInput | undefined;
    render(): JSX.Element;
    handleOrderConfirmationHeadingChange: (event: Msdyn365.ContentEditableEvent) => string;
}
export default OrderConfirmation;
