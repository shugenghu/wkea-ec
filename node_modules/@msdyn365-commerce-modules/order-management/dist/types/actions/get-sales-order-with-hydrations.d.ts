import { CacheType, IActionContext, IActionInput, ICommerceApiSettings } from '@msdyn365-commerce/core';
import { SalesOrder, SimpleProduct } from '@msdyn365-commerce/retail-proxy';
interface ISalesOrderWithHydrations {
    salesOrder: SalesOrder;
    products: SimpleProduct[];
}
export declare const enum orderTypes {
    salesOrder = "salesOrder",
    transaction = "transaction"
}
export declare class GetSalesOrderWithHydrationsInput implements IActionInput {
    orderType: string;
    orderId: string;
    private apiSettings;
    constructor(orderType: string, orderId: string, apiSettings: ICommerceApiSettings);
    getCacheKey: () => string;
    getCacheObjectType: () => string;
    dataCacheType: () => CacheType;
}
export declare function getSalesOrderWithHydrationsAction(input: GetSalesOrderWithHydrationsInput, ctx: IActionContext): Promise<ISalesOrderWithHydrations>;
declare const _default: import("@msdyn365-commerce/core").IObservableAction<ISalesOrderWithHydrations>;
export default _default;
