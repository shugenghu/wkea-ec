import { INodeProps } from '@msdyn365-commerce-modules/utilities';
import { ChannelIdentity, OrderShipments, OrgUnitLocation, SalesOrder } from '@msdyn365-commerce/retail-proxy';
import * as React from 'react';
import { IModuleComponentProps, IPriceContext } from './utilities';
export interface IOrderInformationInputResources {
    receiptEmailMessage?: string;
    orderItemLabel: string;
    orderItemsLabel: string;
    processingLabel: string;
    orderIdLabel: string;
    receiptIdLabel: string;
    confirmationIdLabel: string;
    trackingLabel: string;
    trackingAriaLabel: string;
    trackingComingSoonLabel: string;
    posChannelNameText?: string;
    onlineStoreChannelNameText?: string;
    orderPlacedOnLabel?: string;
}
export interface IOrderInformationInput {
    moduleName: string;
    channelReferenceId?: string;
    channelName?: string;
    channelAddress?: string;
    showChannelInfo?: boolean;
    receiptEmail?: string;
    createdDate?: string;
    amount?: number;
    priceContext: IPriceContext;
    salesId?: string;
    receiptId?: string;
    hasTrackingInfo?: boolean;
    count?: number;
    resources: IOrderInformationInputResources;
}
export interface IOrderInformation {
    orderInformationProps: INodeProps;
    channelName: React.ReactNode;
    channelAddress: React.ReactNode;
    salesId: React.ReactNode;
    receiptId: React.ReactNode;
    receiptEmail: React.ReactNode;
    createdDate: React.ReactNode;
    count: React.ReactNode;
    amount: React.ReactNode;
    channelReferenceId: React.ReactNode;
}
export declare const getOrderInformation: ({ moduleName, channelReferenceId, channelName, channelAddress, showChannelInfo, receiptEmail, createdDate, amount, priceContext, salesId, receiptId, count, resources: { receiptEmailMessage, orderItemLabel, orderItemsLabel, orderIdLabel, receiptIdLabel, confirmationIdLabel, posChannelNameText, onlineStoreChannelNameText, orderPlacedOnLabel } }: IOrderInformationInput) => IOrderInformation;
interface IProps extends IModuleComponentProps {
    resources: IOrderInformationInputResources;
}
export declare const getOrderInfomationInput: (props: IProps, moduleName: string, order: SalesOrder | OrderShipments, priceContext: IPriceContext, channelIdentities?: ChannelIdentity[] | undefined, orgUnitLocations?: OrgUnitLocation[] | undefined, showChannelInfo?: boolean | undefined) => IOrderInformationInput;
export {};
