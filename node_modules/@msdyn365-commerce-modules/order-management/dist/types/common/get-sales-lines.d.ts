import { ITelemetryContent } from '@msdyn365-commerce-modules/utilities';
import { IActionContext, IGridSettings, IImageSettings } from '@msdyn365-commerce/core';
import { OrderShipments, SalesLine, SalesOrder, Shipment, SimpleProduct } from '@msdyn365-commerce/retail-proxy';
import { ISalesLine, ISalesLineResources } from './get-sales-line';
import { IModuleComponentProps, IPriceContext } from './utilities';
export interface IGetSalesLinesInput {
    moduleName: string;
    moduleComponentProps: IModuleComponentProps;
    isCurrentChannel: boolean;
    salesLines: SalesLine[];
    products: SimpleProduct[];
    shipments?: Shipment[];
    priceContext: IPriceContext;
    resources: ISalesLineResources;
    actionContext: IActionContext;
    gridSettings: IGridSettings;
    imageSettings?: IImageSettings;
    imageOnly?: boolean;
    showCompleteAddress?: boolean;
    telemetryContent?: ITelemetryContent;
}
export declare const getSalesLines: ({ moduleName, moduleComponentProps, salesLines, products, shipments, resources, isCurrentChannel, imageOnly, showCompleteAddress, telemetryContent }: IGetSalesLinesInput) => ISalesLine[];
interface IProps extends IModuleComponentProps {
    resources: ISalesLineResources;
}
export declare const getSalesLinesInput: (props: IProps, moduleName: string, order: SalesOrder | OrderShipments, products: SimpleProduct[], priceContext: IPriceContext, showCompleteAddress?: boolean | undefined, telemetryContent?: ITelemetryContent | undefined) => IGetSalesLinesInput | undefined;
export {};
