import { INodeProps, ITelemetryContent } from '@msdyn365-commerce-modules/utilities';
import { SalesLine, Shipment, SimpleProduct } from '@msdyn365-commerce/retail-proxy';
import * as React from 'react';
import { IDeliveryType, IModuleComponentProps, ISalesStatusCode } from './utilities';
export declare type ISalesStatusStringMap = {
    [x in ISalesStatusCode]: string | undefined;
};
export declare type IDeliveryTypeStringMap = {
    [x in IDeliveryType]: string | undefined;
};
export interface ISalesLineResources {
    productDimensionTypeSize: string;
    productDimensionTypeColor: string;
    productDimensionTypeStyle: string;
    salesLineQuantityText: string;
    configString: string;
    shipToLabel: string;
    storeLabel: string;
    phoneLabel: string;
    phoneAriaLabel: string;
    buyItAgainAriaLabel: string;
    buyItAgainLabel: string;
    orderStatusReadyForPickup: string;
    orderStatusPickedUp: string;
    orderStatusShipped: string;
    orderStatusCanceled: string;
    orderStatusProcessing: string;
    pickedUpSalesLines: string;
    deliveredSalesLines: string;
    carryOutSalesLines: string;
    trackingLabel: string;
    trackingAriaLabel: string;
    trackingComingSoonLabel: string;
    discountStringText: string;
}
export interface IGetSalesLineInput {
    moduleName: string;
    moduleComponentProps: IModuleComponentProps;
    product: SimpleProduct;
    shipment?: Shipment;
    salesLine: SalesLine;
    isCurrentChannel: boolean;
    resources: ISalesLineResources;
    imageOnly?: boolean;
    showCompleteAddress?: boolean;
    telemetryContent?: ITelemetryContent;
}
export interface ISalesLine {
    salesLineProps: INodeProps;
    salesLine: React.ReactNode;
    address?: React.ReactNode;
    buyAgainButton?: React.ReactNode;
    salesStatus: React.ReactNode;
    deliveryType: React.ReactNode;
    trackingInfo: React.ReactNode;
    data: {
        salesLine: SalesLine;
        product: SimpleProduct;
        shipment?: Shipment;
        deliveryType: IDeliveryType;
        productUrl: string;
        salesStatus: ISalesStatusCode;
    };
}
export declare const getSalesLine: ({ moduleName, moduleComponentProps: { id, typeName, context, telemetry, config: { imageSettings } }, showCompleteAddress, product, shipment, salesLine, isCurrentChannel, imageOnly, resources: { productDimensionTypeSize: sizeString, productDimensionTypeColor: colorString, productDimensionTypeStyle: styleString, salesLineQuantityText: quantityDisplayString, configString, shipToLabel, storeLabel, phoneLabel, phoneAriaLabel, buyItAgainLabel, buyItAgainAriaLabel, orderStatusReadyForPickup, orderStatusProcessing, orderStatusShipped, orderStatusPickedUp, orderStatusCanceled, pickedUpSalesLines, deliveredSalesLines, carryOutSalesLines, trackingLabel, trackingAriaLabel, trackingComingSoonLabel, discountStringText }, telemetryContent }: IGetSalesLineInput) => ISalesLine;
