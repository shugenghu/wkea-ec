import { IAny, ICoreContext, IGeneric, IImageSettings, IModule, ITelemetry } from '@msdyn365-commerce/core';
import { SalesLine, TenderType } from '@msdyn365-commerce/retail-proxy/dist/Entities/CommerceTypes.g';
import { ISalesLine } from './get-sales-line';
export interface IModuleComponentProps extends IModule {
    config: {
        imageSettings?: IImageSettings;
    };
}
export interface IPriceContext {
    id: string;
    typeName: string;
    context: ICoreContext<IGeneric<IAny>>;
    telemetry: ITelemetry;
    freePriceText: string;
}
export declare const getTenderIdOperationIdMap: (tenderTypes: TenderType[]) => object;
export declare const countItems: (salesLines: SalesLine[]) => number;
export declare const getSalesLinesByDelivery: (salesLines?: SalesLine[] | undefined, pickupDeliveryModeCode?: string | undefined) => SalesLine[];
export declare const defaultImageSettings: IImageSettings;
export declare type IDeliveryType = 'pickUp' | 'ship' | 'carryOut';
export declare type ISalesStatusCode = 'canceled' | 'readyForPickup' | 'pickedUp' | 'processing' | 'shipped' | 'unknown';
export declare const getSalesStatusCode: (deliveryType: IDeliveryType, statusValue?: number | undefined) => ISalesStatusCode;
export declare type ITrackingId = string | 'unknown';
export declare type IAddressId = string | 'unknown';
export interface IGroupData {
    deliveryType: IDeliveryType;
    salesStatus: ISalesStatusCode;
    addressId: IAddressId | 'unknown';
    trackingId: ITrackingId | 'unknown';
    count: number;
    salesLines: ISalesLine[];
}
export declare const groupSalesLines: (salesLines: ISalesLine[]) => IGroupData[];
