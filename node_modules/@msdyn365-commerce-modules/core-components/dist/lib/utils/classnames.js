/*!
 * Copyright (c) Microsoft Corporation.
 * All rights reserved. See LICENSE in the project root for license information.
 */
const sizePattern = /col(_(\d|auto){1,2}){2,}/;
const translatePrefix = (prefix) => {
    switch (prefix && prefix.toLowerCase()) {
        case 'large':
            return 'lg';
        case 'medium':
            return 'md';
        case 'small':
            return 'sm';
        case 'xsmall':
        default:
            return '';
    }
};
export const getColumnSizes = (config, size) => {
    if (!sizePattern.exec(config)) {
        return false;
    }
    const cols = config.split('_').slice(1);
    const translatedSize = translatePrefix(size);
    const sizePrefix = (translatedSize && `-${translatedSize}`) || '';
    return cols.map((colWidth) => `col${sizePrefix}-${colWidth}`);
};
export const showErrors = (context) => {
    const { isDebug, isEditor } = (context && context.request && context.request.params) || {};
    return !!isDebug || !!isEditor;
};
export const getColClassArray = (options) => ([
    options.xsmall && getColumnSizes(options.xsmall),
    options.small && getColumnSizes(options.small, 'small'),
    options.medium && getColumnSizes(options.medium, 'medium'),
    options.large && getColumnSizes(options.large, 'large')
].filter(Boolean));
export const colWidths = new Map([
    ['one', 'col-md-1'],
    ['two', 'col-md-2'],
    ['three', 'col-md-3'],
    ['four', 'col-md-4'],
    ['six', 'col-md-6'],
    ['twelve', 'col-md-12']
]);
//# sourceMappingURL=classnames.js.map