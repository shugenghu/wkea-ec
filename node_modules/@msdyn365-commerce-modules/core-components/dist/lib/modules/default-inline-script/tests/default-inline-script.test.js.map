{"version":3,"file":"default-inline-script.test.js","sourceRoot":"./src/","sources":["modules/default-inline-script/tests/default-inline-script.test.tsx"],"names":[],"mappings":"AAAA;;;GAGG;AAEH,OAAO,MAAM,CAAC;AACd,OAAO,KAAK,MAAM,OAAO,CAAC;AAC1B,OAAO,QAAQ,MAAM,WAAW,CAAC;AACjC,OAAO,mBAAmB,MAAM,0BAA0B,CAAC;AAG3D,QAAQ,CAAC,6BAA6B,EAAE,GAAG,EAAE;IACzC,MAAM,SAAS,GAAG,QAAQ,CAAC,aAAa,CAAC,KAAK,CAAC,CAAC;IAGhD,EAAE,CAAC,gDAAgD,EAAE,CAAC,IAAS,EAAE,EAAE;QAC/D,MAAM,WAAW,GAA4C;YACzD,MAAM,EAAE;gBACJ,YAAY,EAAE,kDAAkD;gBAEhE,EAAE,EAAE,OAAO;aACd;YACD,IAAI,EAAE,EAAE;YACR,WAAW,EAAE,EAAE;YACf,EAAE,EAAE,OAAO;YACX,QAAQ,EAAE,EAAE;YACZ,IAAI,EAAE,WAAW;SACpB,CAAC;QAEF,QAAQ,CAAC,MAAM,CAAC,oBAAC,mBAAmB,oBAAK,WAAW,EAAI,EAAE,SAAS,CAAC,CAAC;QAErE,MAAM,CAAC,SAAS,CAAC,oBAAoB,CAAC,QAAQ,CAAC,CAAC,MAAM,CAAC,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC;QAChE,IAAI,EAAE,CAAC;IACX,CAAC,CAAC,CAAC;IAGH,EAAE,CAAC,oDAAoD,EAAE,CAAC,IAAS,EAAE,EAAE;QACnE,MAAM,WAAW,GAA4C;YACzD,MAAM,EAAE;gBACJ,YAAY,EAAE,cAAc;gBAE5B,EAAE,EAAE,OAAO;aACd;YACD,IAAI,EAAE,EAAE;YACR,WAAW,EAAE,EAAE;YACf,EAAE,EAAE,OAAO;YACX,QAAQ,EAAE,EAAE;YACZ,IAAI,EAAE,WAAW;SACpB,CAAC;QAEF,QAAQ,CAAC,MAAM,CAAC,oBAAC,mBAAmB,oBAAK,WAAW,EAAI,EAAE,SAAS,CAAC,CAAC;QAErE,MAAM,CAAC,SAAS,CAAC,oBAAoB,CAAC,QAAQ,CAAC,CAAC,MAAM,CAAC,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC;QAChE,IAAI,EAAE,CAAC;IACX,CAAC,CAAC,CAAC;IAGH,EAAE,CAAC,kDAAkD,EAAE,CAAC,IAAS,EAAE,EAAE;QACjE,MAAM,WAAW,GAA4C;YACzD,MAAM,EAAE;gBACJ,YAAY,EAAE,EAAE;gBAEhB,EAAE,EAAE,OAAO;aACd;YACD,IAAI,EAAE,EAAE;YACR,WAAW,EAAE,EAAE;YACf,EAAE,EAAE,OAAO;YACX,QAAQ,EAAE,EAAE;YACZ,IAAI,EAAE,WAAW;SACpB,CAAC;QAEF,QAAQ,CAAC,MAAM,CAAC,oBAAC,mBAAmB,oBAAK,WAAW,EAAI,EAAE,SAAS,CAAC,CAAC;QAErE,MAAM,CAAC,SAAS,CAAC,oBAAoB,CAAC,QAAQ,CAAC,CAAC,MAAM,CAAC,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC;QAChE,IAAI,EAAE,CAAC;IACX,CAAC,CAAC,CAAC;IAGH,EAAE,CAAC,wDAAwD,EAAE,CAAC,IAAS,EAAE,EAAE;QACvE,MAAM,WAAW,GAA4C;YACzD,MAAM,EAAE;gBACJ,YAAY,EAAE,kEAAkE;gBAEhF,EAAE,EAAE,OAAO;aACd;YACD,IAAI,EAAE,EAAE;YACR,WAAW,EAAE,EAAE;YACf,EAAE,EAAE,OAAO;YACX,QAAQ,EAAE,EAAE;YACZ,IAAI,EAAE,WAAW;SACpB,CAAC;QAEF,QAAQ,CAAC,MAAM,CAAC,oBAAC,mBAAmB,oBAAK,WAAW,EAAI,EAAE,SAAS,CAAC,CAAC;QAErE,MAAM,CAAC,SAAS,CAAC,oBAAoB,CAAC,QAAQ,CAAC,CAAC,CAAC,CAAC,CAAC,SAAS,CAAC,CAAC,OAAO,CACjE,kEAAkE,CACrE,CAAC;QACF,IAAI,EAAE,CAAC;IACX,CAAC,CAAC,CAAC;IAGH,EAAE,CAAC,6FAA6F,EAAE,CAAC,IAAS,EAAE,EAAE;QAC5G,MAAM,WAAW,GAA4C;YACzD,MAAM,EAAE;gBACJ,YAAY,EAAE,8DAA8D;gBAE5E,EAAE,EAAE,OAAO;aACd;YACD,IAAI,EAAE,EAAE;YACR,WAAW,EAAE,EAAE;YACf,EAAE,EAAE,OAAO;YACX,QAAQ,EAAE,EAAE;YACZ,IAAI,EAAE,WAAW;SACpB,CAAC;QAEF,QAAQ,CAAC,MAAM,CAAC,oBAAC,mBAAmB,oBAAK,WAAW,EAAI,EAAE,SAAS,CAAC,CAAC;QAErE,MAAM,CAAC,SAAS,CAAC,oBAAoB,CAAC,QAAQ,CAAC,CAAC,CAAC,CAAC,CAAC,SAAS,CAAC,CAAC,OAAO,CACjE,8DAA8D,CACjE,CAAC;QACF,IAAI,EAAE,CAAC;IACX,CAAC,CAAC,CAAC;IAGH,EAAE,CAAC,iDAAiD,EAAE,CAAC,IAAS,EAAE,EAAE;QAChE,MAAM,WAAW,GAA4C;YACzD,MAAM,EAAE;gBACJ,YAAY,EAAE,wGAAwG;gBAEtH,EAAE,EAAE,OAAO;aACd;YACD,IAAI,EAAE,EAAE;YACR,WAAW,EAAE,EAAE;YACf,EAAE,EAAE,OAAO;YACX,QAAQ,EAAE,EAAE;YACZ,IAAI,EAAE,WAAW;SACpB,CAAC;QAEF,QAAQ,CAAC,MAAM,CAAC,oBAAC,mBAAmB,oBAAK,WAAW,EAAI,EAAE,SAAS,CAAC,CAAC;QAErE,MAAM,CAAC,SAAS,CAAC,oBAAoB,CAAC,QAAQ,CAAC,CAAC,MAAM,CAAC,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC;QAChE,IAAI,EAAE,CAAC;IACX,CAAC,CAAC,CAAC;AACP,CAAC,CAAC,CAAC","sourcesContent":["/*!\n * Copyright (c) Microsoft Corporation.\n * All rights reserved. See LICENSE in the project root for license information.\n */\n\nimport 'jest';\nimport React from 'react';\nimport ReactDOM from 'react-dom';\nimport DefaultInlineScript from '../default-inline-script';\nimport { IDefaultInlineScriptProps } from '../default-inline-script.props.autogenerated';\n\ndescribe('Default Inline Script Tests', () => {\n    const container = document.createElement('div');\n\n    // tslint:disable-next-line:no-any\n    it('returns null if the inlineScript is just a url', (done: any) => {\n        const scriptProps: Readonly<IDefaultInlineScriptProps<{}>> = {\n            config: {\n                inlineScript: 'https://www.contoso.com/products?productId=12345',\n                // @ts-ignore\n                id: '12345'\n            },\n            data: '',\n            dataActions: [],\n            id: '12345',\n            typeName: '',\n            user: 'test-user'\n        };\n\n        ReactDOM.render(<DefaultInlineScript {...scriptProps} />, container);\n\n        expect(container.getElementsByTagName('script').length).toBe(0);\n        done();\n    });\n\n    // tslint:disable-next-line:no-any\n    it('returns null if the inlineScript is a relative url', (done: any) => {\n        const scriptProps: Readonly<IDefaultInlineScriptProps<{}>> = {\n            config: {\n                inlineScript: 'headStart.js',\n                // @ts-ignore\n                id: '12345'\n            },\n            data: '',\n            dataActions: [],\n            id: '12345',\n            typeName: '',\n            user: 'test-user'\n        };\n\n        ReactDOM.render(<DefaultInlineScript {...scriptProps} />, container);\n\n        expect(container.getElementsByTagName('script').length).toBe(0);\n        done();\n    });\n\n    // tslint:disable-next-line:no-any\n    it('returns null if the inlineScript is empty string', (done: any) => {\n        const scriptProps: Readonly<IDefaultInlineScriptProps<{}>> = {\n            config: {\n                inlineScript: '',\n                // @ts-ignore\n                id: '12345'\n            },\n            data: '',\n            dataActions: [],\n            id: '12345',\n            typeName: '',\n            user: 'test-user'\n        };\n\n        ReactDOM.render(<DefaultInlineScript {...scriptProps} />, container);\n\n        expect(container.getElementsByTagName('script').length).toBe(0);\n        done();\n    });\n\n    // tslint:disable-next-line:no-any\n    it('returns script tag containing url (but not just a url)', (done: any) => {\n        const scriptProps: Readonly<IDefaultInlineScriptProps<{}>> = {\n            config: {\n                inlineScript: \"console.log('https://www.contoso.com/products?productId=12345');\",\n                // @ts-ignore\n                id: '12345'\n            },\n            data: '',\n            dataActions: [],\n            id: '12345',\n            typeName: '',\n            user: 'test-user'\n        };\n\n        ReactDOM.render(<DefaultInlineScript {...scriptProps} />, container);\n\n        expect(container.getElementsByTagName('script')[0].innerHTML).toEqual(\n            \"console.log('https://www.contoso.com/products?productId=12345');\"\n        );\n        done();\n    });\n\n    // tslint:disable-next-line:no-any\n    it('validates if placeholders are replaced for script injector with inline script configuration', (done: any) => {\n        const scriptProps: Readonly<IDefaultInlineScriptProps<{}>> = {\n            config: {\n                inlineScript: 'console.log(\"script injector loaded with productId: 12345\");',\n                // @ts-ignore\n                id: '12345'\n            },\n            data: '',\n            dataActions: [],\n            id: '12345',\n            typeName: '',\n            user: 'test-user'\n        };\n\n        ReactDOM.render(<DefaultInlineScript {...scriptProps} />, container);\n\n        expect(container.getElementsByTagName('script')[0].innerHTML).toEqual(\n            'console.log(\"script injector loaded with productId: 12345\");'\n        );\n        done();\n    });\n\n    // tslint:disable-next-line:no-any\n    it('returns null if encountering closing script tag', (done: any) => {\n        const scriptProps: Readonly<IDefaultInlineScriptProps<{}>> = {\n            config: {\n                inlineScript: 'console.log(\"script injector loaded with productId: 12345\");</script><div>I am a bad div</div><script>',\n                // @ts-ignore\n                id: '12345'\n            },\n            data: '',\n            dataActions: [],\n            id: '12345',\n            typeName: '',\n            user: 'test-user'\n        };\n\n        ReactDOM.render(<DefaultInlineScript {...scriptProps} />, container);\n\n        expect(container.getElementsByTagName('script').length).toBe(0);\n        done();\n    });\n});\n"]}