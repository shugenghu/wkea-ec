{"version":3,"file":"default-metatags.js","sourceRoot":"./src/","sources":["modules/default-metatags/default-metatags.tsx"],"names":[],"mappings":"AAKA,OAAO,KAAK,KAAK,MAAM,OAAO,CAAC;AAE/B,OAAO,EAAE,cAAc,EAAE,iBAAiB,EAAE,MAAM,kCAAkC,CAAC;AASrF,MAAM,eAAgB,SAAQ,KAAK,CAAC,aAA0D;IACnF,MAAM;QACT,MAAM,EAAE,IAAI,EAAE,MAAM,EAAE,GAAG,IAAI,CAAC,KAAK,CAAC;QACpC,MAAM,UAAU,GAAG,IAAI,CAAC,KAAK,CAAC,OAAO,IAAI,cAAc,CAAC,IAAI,CAAC,KAAK,CAAC,OAAO,CAAC,OAAO,CAAC,CAAC;QACpF,IAAI,YAAY,GAAW,EAAE,CAAC;QAC9B,IAAI,QAAQ,CAAC;QACb,IAAI,MAAM,CAAC,QAAQ,EAAE;YACjB,QAAQ,GAAG,UAAU,CAAC,CAAC,CAAC,IAAI,CAAC,uBAAuB,CAAC,MAAM,CAAC,QAAQ,EAAE,UAAU,CAAC,CAAC,CAAC,CAAC,MAAM,CAAC,QAAQ,CAAC;YACpG,YAAY,GAAG,QAAQ,IAAI,QAAQ,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;SAClD;aAAM,IAAI,IAAI,CAAC,QAAQ,EAAE;YACtB,QAAQ,GAAG,IAAI,CAAC,QAAQ,CAAC;YACzB,IAAI,YAAY,GAAG,QAAQ,CAAC,GAAG,CAAC,UAAU,CAAC,EAAE,CAAC,UAAU,CAAC,IAAI,CAAC,CAAC;YAC/D,YAAY,GAAG,UAAU,CAAC,CAAC,CAAC,IAAI,CAAC,uBAAuB,CAAC,YAAY,EAAE,UAAU,CAAC,CAAC,CAAC,CAAC,YAAY,CAAC;YAClG,YAAY,GAAG,YAAY,IAAI,YAAY,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;SAC1D;QAED,OAAO,KAAK,CAAC,aAAa,CAAC,iBAAiB,EAAE,EAAE,GAAG,EAAE,IAAI,CAAC,KAAK,CAAC,EAAE,EAAE,uBAAuB,EAAE,EAAE,MAAM,EAAE,YAAY,EAAE,EAAE,CAAC,CAAC;IAC7H,CAAC;IAEO,uBAAuB,CAAC,QAAkB,EAAE,UAAkB;QAClE,MAAM,gBAAgB,GAAG,2CAA2C,CAAC;QACrE,OAAO,QAAQ;aACV,GAAG,CAAC,OAAO,CAAC,EAAE;YACX,IAAI,gBAAgB,CAAC,IAAI,CAAC,OAAO,CAAC,EAAE;gBAChC,OAAO,OAAO,CAAC,OAAO,CAAC,UAAU,EAAE,iBAAiB,UAAU,EAAE,CAAC,CAAC;aACrE;YACD,OAAO,OAAO,CAAC;QACnB,CAAC,CAAC;aACD,MAAM,CAAC,OAAO,CAAC,CAAC;IACzB,CAAC;CACJ;AAED,eAAe,eAAe,CAAC","sourcesContent":["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport * as React from 'react';\n\nimport { isNonceEnabled, SDK_FRAGMENT_NAME } from '@msdyn365-commerce/core-internal';\nimport { IDefaultMetatagsData } from './default-metatags.data';\nimport { IDefaultMetatagsProps } from './default-metatags.props.autogenerated';\n\n/**\n *\n * DefaultPageSummaryMetadata component\n * @extends {React.PureComponent<DefaultPageSummaryProps<{}>>}\n */\nclass DefaultMetaTags extends React.PureComponent<IDefaultMetatagsProps<IDefaultMetatagsData>> {\n    public render(): JSX.Element {\n        const { data, config } = this.props;\n        const nonceToken = this.props.context && isNonceEnabled(this.props.context.request);\n        let metaTagsHtml: string = '';\n        let metaTags;\n        if (config.metaTags) {\n            metaTags = nonceToken ? this._addNonceToInlineScript(config.metaTags, nonceToken) : config.metaTags;\n            metaTagsHtml = metaTags && metaTags.join('\\n');\n        } else if (data.metaTags) {\n            metaTags = data.metaTags;\n            let metaTagsText = metaTags.map(simpleText => simpleText.text);\n            metaTagsText = nonceToken ? this._addNonceToInlineScript(metaTagsText, nonceToken) : metaTagsText;\n            metaTagsHtml = metaTagsText && metaTagsText.join('\\n');\n        }\n        // tslint:disable-next-line:react-no-dangerous-html\n        return React.createElement(SDK_FRAGMENT_NAME, { key: this.props.id, dangerouslySetInnerHTML: { __html: metaTagsHtml } });\n    }\n\n    private _addNonceToInlineScript(metaTags: string[], nonceToken: string): string[] {\n        const inlineScripRegex = /<script((?:(?!src=).)*?)>(.*?)<\\/script>/g;\n        return metaTags\n            .map(metaTag => {\n                if (inlineScripRegex.test(metaTag)) {\n                    return metaTag.replace(/<script/g, `<script nonce=${nonceToken}`);\n                }\n                return metaTag;\n            })\n            .filter(Boolean);\n    }\n}\n\nexport default DefaultMetaTags;\n"]}