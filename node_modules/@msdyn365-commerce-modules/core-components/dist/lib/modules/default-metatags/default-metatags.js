import * as React from 'react';
import { isNonceEnabled, SDK_FRAGMENT_NAME } from '@msdyn365-commerce/core-internal';
class DefaultMetaTags extends React.PureComponent {
    render() {
        const { data, config } = this.props;
        const nonceToken = this.props.context && isNonceEnabled(this.props.context.request);
        let metaTagsHtml = '';
        let metaTags;
        if (config.metaTags) {
            metaTags = nonceToken ? this._addNonceToInlineScript(config.metaTags, nonceToken) : config.metaTags;
            metaTagsHtml = metaTags && metaTags.join('\n');
        }
        else if (data.metaTags) {
            metaTags = data.metaTags;
            let metaTagsText = metaTags.map(simpleText => simpleText.text);
            metaTagsText = nonceToken ? this._addNonceToInlineScript(metaTagsText, nonceToken) : metaTagsText;
            metaTagsHtml = metaTagsText && metaTagsText.join('\n');
        }
        return React.createElement(SDK_FRAGMENT_NAME, { key: this.props.id, dangerouslySetInnerHTML: { __html: metaTagsHtml } });
    }
    _addNonceToInlineScript(metaTags, nonceToken) {
        const inlineScripRegex = /<script((?:(?!src=).)*?)>(.*?)<\/script>/g;
        return metaTags
            .map(metaTag => {
            if (inlineScripRegex.test(metaTag)) {
                return metaTag.replace(/<script/g, `<script nonce=${nonceToken}`);
            }
            return metaTag;
        })
            .filter(Boolean);
    }
}
export default DefaultMetaTags;
//# sourceMappingURL=default-metatags.js.map