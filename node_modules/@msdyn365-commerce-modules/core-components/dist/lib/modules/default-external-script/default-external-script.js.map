{"version":3,"file":"default-external-script.js","sourceRoot":"./src/","sources":["modules/default-external-script/default-external-script.tsx"],"names":[],"mappings":"AAKA,OAAO,EAAE,iBAAiB,EAAE,MAAM,kCAAkC,CAAC;AACrE,OAAO,KAAK,IAAI,MAAM,MAAM,CAAC;AAC7B,OAAO,KAAK,KAAK,MAAM,OAAO,CAAC;AAC/B,OAAO,EAAE,aAAa,EAAE,aAAa,EAAE,QAAQ,EAAE,QAAQ,EAAE,MAAM,0BAA0B,CAAC;AAQ5F,MAAM,qBAAsB,SAAQ,KAAK,CAAC,aAA8C;IACpF,YAAY,KAAsC;QAC9C,KAAK,CAAC,KAAK,CAAC,CAAC;IACjB,CAAC;IAEM,MAAM;QACT,MAAM,EAAE,MAAM,EAAE,GAAG,IAAI,CAAC,KAAK,CAAC;QAC9B,QAAQ,CAAC,2BAA2B,IAAI,CAAC,KAAK,CAAC,EAAE,IAAI,IAAI,CAAC,KAAK,CAAC,QAAQ,GAAG,EAAE,IAAI,CAAC,KAAK,CAAC,SAAS,CAAC,CAAC;QACnG,IAAI,MAAM,GAAG,MAAM,CAAC,YAAY,CAAC;QAEjC,IAAI,eAAe,GAAW,EAAE,CAAC;QAEjC,IAAI,IAAI,CAAC,KAAK,CAAC,OAAO,EAAE;YACpB,eAAe,IAAI,IAAI,CAAC,KAAK,CAAC,OAAO,CAAC,OAAO,CAAC,GAAG,CAAC,YAAY,CAAC;YAC/D,eAAe,IAAI,OAAO,CAAC,GAAG,CAAC,YAAY,IAAI,EAAE,CAAC;SACrD;QAED,IAAI,aAAa,CAAC,MAAM,CAAC,EAAE;YAEvB,MAAM,GAAG,GAAG,eAAe,IAAI,IAAI,CAAC,IAAI,CAAC,MAAM,CAAC,EAAE,CAAC;SACtD;aAAM,IAAI,MAAM,KAAK,EAAE,IAAI,CAAC,aAAa,CAAC,MAAM,CAAC,EAAE;YAChD,QAAQ,CACJ,kKAAkK,EAClK,IAAI,CAAC,KAAK,CAAC,SAAS,CACvB,CAAC;YACF,OAAO,IAAI,CAAC;SACf;QACD,MAAM,UAAU,GAAG,gBAAgB,MAAM,WAAW,CAAC,CAAC,MAAM,CAAC,KAAK,UAAU,CAAC,CAAC,MAAM,CAAC,KAAK,aAAa,CAAC;QAGxG,OAAO,KAAK,CAAC,aAAa,CAAC,iBAAiB,EAAE,EAAE,GAAG,EAAE,IAAI,CAAC,KAAK,CAAC,EAAE,EAAE,uBAAuB,EAAE,EAAE,MAAM,EAAE,UAAU,EAAE,EAAE,CAAC,CAAC;IAC3H,CAAC;CACJ;AAED,eAAe,qBAAqB,CAAC","sourcesContent":["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { SDK_FRAGMENT_NAME } from '@msdyn365-commerce/core-internal';\nimport * as path from 'path';\nimport * as React from 'react';\nimport { isAbsoluteUrl, isRelativeUrl, logDebug, logError } from '../../utils/script-utils';\nimport { IDefaultExternalScriptProps } from './default-external-script.props.autogenerated';\n\n/**\n *\n * DefaultExternalScript component\n * @extends {React.PureComponent<IDefaultExternalScriptProps<{}>>}\n */\nclass DefaultExternalScript extends React.PureComponent<IDefaultExternalScriptProps<{}>> {\n    constructor(props: IDefaultExternalScriptProps<{}>) {\n        super(props);\n    }\n\n    public render(): JSX.Element | null {\n        const { config } = this.props;\n        logDebug(`Adding script tags for '${this.props.id}/${this.props.typeName}'`, this.props.telemetry);\n        let source = config.scriptSource;\n\n        let relativeBaseUrl: string = '';\n        // Construct the relative base url, i.e. the base url from which statics will be served\n        if (this.props.context) {\n            relativeBaseUrl += this.props.context.request.url.staticCdnUrl;\n            relativeBaseUrl += process.env.SUBMISSIONID || '';\n        }\n\n        if (isRelativeUrl(source)) {\n            // If the source is a relative URL prepend the relative base url to the resolved source url for the actual source\n            source = `${relativeBaseUrl}/${path.join(source)}`;\n        } else if (source === '' || !isAbsoluteUrl(source)) {\n            logError(\n                'Invalid external script - not a url. The external source is not an external or relative url, please use default-inline-script if you wish to load inline scripts',\n                this.props.telemetry\n            );\n            return null;\n        }\n        const scriptHtml = `<script src=\"${source}\" async=${!!config.async} defer=${!!config.defer} ></script>`;\n\n        // tslint:disable:react-no-dangerous-html -- intentionally set inner html\n        return React.createElement(SDK_FRAGMENT_NAME, { key: this.props.id, dangerouslySetInnerHTML: { __html: scriptHtml } });\n    }\n}\n\nexport default DefaultExternalScript;\n"]}