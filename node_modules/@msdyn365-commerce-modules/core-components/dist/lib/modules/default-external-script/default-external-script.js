import { SDK_FRAGMENT_NAME } from '@msdyn365-commerce/core-internal';
import * as path from 'path';
import * as React from 'react';
import { isAbsoluteUrl, isRelativeUrl, logDebug, logError } from '../../utils/script-utils';
class DefaultExternalScript extends React.PureComponent {
    constructor(props) {
        super(props);
    }
    render() {
        const { config } = this.props;
        logDebug(`Adding script tags for '${this.props.id}/${this.props.typeName}'`, this.props.telemetry);
        let source = config.scriptSource;
        let relativeBaseUrl = '';
        if (this.props.context) {
            relativeBaseUrl += this.props.context.request.url.staticCdnUrl;
            relativeBaseUrl += process.env.SUBMISSIONID || '';
        }
        if (isRelativeUrl(source)) {
            source = `${relativeBaseUrl}/${path.join(source)}`;
        }
        else if (source === '' || !isAbsoluteUrl(source)) {
            logError('Invalid external script - not a url. The external source is not an external or relative url, please use default-inline-script if you wish to load inline scripts', this.props.telemetry);
            return null;
        }
        const scriptHtml = `<script src="${source}" async=${!!config.async} defer=${!!config.defer} ></script>`;
        return React.createElement(SDK_FRAGMENT_NAME, { key: this.props.id, dangerouslySetInnerHTML: { __html: scriptHtml } });
    }
}
export default DefaultExternalScript;
//# sourceMappingURL=default-external-script.js.map