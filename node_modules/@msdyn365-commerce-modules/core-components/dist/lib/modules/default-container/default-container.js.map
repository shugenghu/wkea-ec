{"version":3,"file":"default-container.js","sourceRoot":"./src/","sources":["modules/default-container/default-container.tsx"],"names":[],"mappings":"AAAA;;;GAGG;AAEH,OAAO,EAAE,QAAQ,EAAE,MAAM,uCAAuC,CAAC;AACjE,OAAO,KAAK,KAAK,MAAM,OAAO,CAAC;AAC/B,OAAO,EAAE,SAAS,EAAE,gBAAgB,EAAE,MAAM,kCAAkC,CAAC;AAC/E,OAAO,EAAE,SAAS,EAAE,MAAM,wBAAwB,CAAC;AASnD,MAAM,gBAAiB,SAAQ,KAAK,CAAC,aAA4D;IAC7F,YAAY,KAAoD;QAC5D,KAAK,CAAC,KAAK,CAAC,CAAC;IACjB,CAAC;IAEM,MAAM;QACT,MAAM,EAAE,KAAK,EAAE,SAAS,EAAE,MAAM,EAAE,IAAI,EAAE,GAAG,IAAI,CAAC,KAAK,CAAC;QACtD,SAAS,CAAC,GAAG,CAAC,QAAQ,CAAC,KAAK,EAAE,qDAAqD,EAAE;YACjF,MAAM,EAAE,CAAC,IAAI,CAAC,KAAK,CAAC,EAAE,EAAE,IAAI,CAAC,KAAK,CAAC,QAAQ,CAAC;SAC/C,CAAC,CAAC;QACH,MAAM,OAAO,GAAG,MAAM,CAAC,OAAO,IAAI,IAAI,CAAC,OAAO,CAAC;QAC/C,OAAO,CACH,oBAAC,SAAS,IACN,aAAa,EAAE,MAAM,CAAC,aAAa,EACnC,SAAS,EAAE,MAAM,CAAC,SAAS,EAC3B,QAAQ,EAAE,IAAI,CAAC,KAAK,CAAC,QAAQ,EAC7B,EAAE,EAAE,IAAI,CAAC,KAAK,CAAC,EAAE,EACjB,OAAO,EAAE,IAAI,CAAC,KAAK,CAAC,OAAO,CAAC,OAAO;YAElC,OAAO,IAAI,oBAAC,gBAAgB,kBAAC,SAAS,EAAC,mBAAmB,IAAK,OAAO,EAAI;YAC1E,KAAK;gBACF,KAAK,CAAC,OAAO;gBACb,KAAK,CAAC,OAAO,CAAC,GAAG,CAAC,CAAC,QAAyB,EAAE,KAAa,EAAE,EAAE;oBAC3D,OAAO,CACH,6BAAK,SAAS,EAAE,IAAI,CAAC,qBAAqB,EAAE,EAAE,GAAG,EAAE,KAAK,IACnD,QAAQ,CACP,CACT,CAAC;gBACN,CAAC,CAAC,CACE,CACf,CAAC;IACN,CAAC;IAEO,qBAAqB;QACzB,MAAM,EACF,MAAM,EAAE,EAAE,MAAM,EAAE,aAAa,EAAE,EACpC,GAAG,IAAI,CAAC,KAAK,CAAC;QACf,QAAQ,MAAM,EAAE;YACZ;gBACI,OAAO,aAAa,WAA2B,CAAC,CAAC,CAAC,eAAe,CAAC,CAAC,CAAC,IAAI,CAAC,cAAc,CAAC,aAAa,CAAC,CAAC;YAC3G,eAAwB;YACxB;gBACI,OAAO,QAAQ,CAAC;SACvB;IACL,CAAC;IAEO,cAAc,CAAC,CAAqB;QACxC,OAAO,SAAS,CAAC,GAAG,CAAC,CAAC,UAA0B,CAAC,IAAI,QAAQ,CAAC;IAClE,CAAC;CACJ;AAED,eAAe,gBAAgB,CAAC","sourcesContent":["/*!\n * Copyright (c) Microsoft Corporation.\n * All rights reserved. See LICENSE in the project root for license information.\n */\n\nimport { LogLevel } from '@msdyn365-commerce/telemetry-internal';\nimport * as React from 'react';\nimport { Container, HeadingComponent } from '../../components/base-components';\nimport { colWidths } from '../../utils/classnames';\nimport { IDefaultContainerData } from './default-container.data';\nimport { childrenWidth as childrenWidthEnum, IDefaultContainerProps, layout as layoutEnum } from './default-container.props.autogenerated';\n\n/**\n *\n * CoreComponent component\n * @extends {React.PureComponent<IDefaultContainerProps<IDefaultContainerData>>}\n */\nclass DefaultContainer extends React.PureComponent<IDefaultContainerProps<IDefaultContainerData>> {\n    constructor(props: IDefaultContainerProps<IDefaultContainerData>) {\n        super(props);\n    }\n\n    public render(): JSX.Element {\n        const { slots, telemetry, config, data } = this.props;\n        telemetry.log(LogLevel.Debug, 'Default Container rendering for \\'{id}/{typeName}\\'', {\n            values: [this.props.id, this.props.typeName]\n        });\n        const heading = config.heading || data.heading;\n        return (\n            <Container\n                containerType={config.containerType}\n                className={config.className}\n                typeName={this.props.typeName}\n                id={this.props.id}\n                request={this.props.context.request}\n            >\n                {heading && <HeadingComponent className='container-heading' {...heading} />}\n                {slots &&\n                    slots.content &&\n                    slots.content.map((children: React.ReactNode, index: number) => {\n                        return (\n                            <div className={this._getChildColClassName()} key={index}>\n                                {children}\n                            </div>\n                        );\n                    })}\n            </Container>\n        );\n    }\n\n    private _getChildColClassName(): string {\n        const {\n            config: { layout, childrenWidth }\n        } = this.props;\n        switch (layout) {\n            case layoutEnum.flow:\n                return childrenWidth === childrenWidthEnum.auto ? 'col-12 col-md' : this._getWidthClass(childrenWidth);\n            case layoutEnum.stacked:\n            default:\n                return 'col-12';\n        }\n    }\n\n    private _getWidthClass(s?: childrenWidthEnum): string {\n        return colWidths.get(s || childrenWidthEnum.four) || 'col-12';\n    }\n}\n\nexport default DefaultContainer;\n"]}