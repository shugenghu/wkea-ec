/*!
 * Copyright (c) Microsoft Corporation.
 * All rights reserved. See LICENSE in the project root for license information.
 */
import { LogLevel } from '@msdyn365-commerce/telemetry-internal';
import * as React from 'react';
import { Container, HeadingComponent } from '../../components/base-components';
import { colWidths } from '../../utils/classnames';
class DefaultContainer extends React.PureComponent {
    constructor(props) {
        super(props);
    }
    render() {
        const { slots, telemetry, config, data } = this.props;
        telemetry.log(LogLevel.Debug, 'Default Container rendering for \'{id}/{typeName}\'', {
            values: [this.props.id, this.props.typeName]
        });
        const heading = config.heading || data.heading;
        return (React.createElement(Container, { containerType: config.containerType, className: config.className, typeName: this.props.typeName, id: this.props.id, request: this.props.context.request },
            heading && React.createElement(HeadingComponent, Object.assign({ className: 'container-heading' }, heading)),
            slots &&
                slots.content &&
                slots.content.map((children, index) => {
                    return (React.createElement("div", { className: this._getChildColClassName(), key: index }, children));
                })));
    }
    _getChildColClassName() {
        const { config: { layout, childrenWidth } } = this.props;
        switch (layout) {
            case "flow":
                return childrenWidth === "auto" ? 'col-12 col-md' : this._getWidthClass(childrenWidth);
            case "stacked":
            default:
                return 'col-12';
        }
    }
    _getWidthClass(s) {
        return colWidths.get(s || "four") || 'col-12';
    }
}
export default DefaultContainer;
//# sourceMappingURL=default-container.js.map