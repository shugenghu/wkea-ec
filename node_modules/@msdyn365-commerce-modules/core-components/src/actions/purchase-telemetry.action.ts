/*!
 * Copyright (c) Microsoft Corporation.
 * All rights reserved. See LICENSE in the project root for license information.
 */

import { createDataActionHook, IActionContext, IActionInput } from '@msdyn365-commerce/core';
import { SalesOrder } from '@msdyn365-commerce/retail-proxy';
import { TelemetryEvent } from '@msdyn365-commerce/telemetry-internal';
import { getProductTransactionInfoFromSalesOrder } from './telemetry.action.helper';

const beforePurchase = async (inputs: IActionInput | IActionInput[]) => {
    // placeholder
};

const afterPurchase = async (
    _inputs: IActionInput | IActionInput[],
    salesOrder: SalesOrder | SalesOrder[],
    actionContext: IActionContext
) => {
    // @ts-ignore
    if (window && window._msdyn365 && window._msdyn365.telemetry) {
        // store the purchased product information so that we can avoid "code triggered" remove from cart telemetry event.
        actionContext.requestContext.telemetryData[TelemetryEvent.Purchase] = getProductTransactionInfoFromSalesOrder(
            salesOrder,
            actionContext.requestContext.telemetryData
        );

        // @ts-ignore
        window._msdyn365.telemetry.logEvent(TelemetryEvent.Purchase, actionContext.requestContext.telemetryData[TelemetryEvent.Purchase]);
    }
};

createDataActionHook({
    actionId: '@msdyn365-commerce/retail-proxy/Carts/Checkout',
    postReaderHook: afterPurchase,
    preReaderHook: beforePurchase
});
