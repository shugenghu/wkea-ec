import { ITelemetryContent } from '@msdyn365-commerce-modules/utilities';
import { IProductRefinerHierarchy } from '@msdyn365-commerce/commerce-entities';
import { ICoreContext } from '@msdyn365-commerce/core';
import { ProductRefinerValue } from '@msdyn365-commerce/retail-proxy';
import * as React from 'react';
import { IRefineItemToggleNotification } from './refine-item-toggle-notification';
import { IRefineItemCommonProps } from './refine-item.props.common';
export interface IRefineItemProps {
    parentProductRefinerHierarchy: IProductRefinerHierarchy;
    productRefinerValue: ProductRefinerValue;
    selectedRefinementCriterion: ProductRefinerValue | undefined;
    refineItemCommonProps: IRefineItemCommonProps;
    isDisabled: boolean;
    context: ICoreContext;
    moduleId: string;
    moduleTypeName: string;
    index?: number;
    telemetryContent?: ITelemetryContent;
    onToggle(notfication: Readonly<IRefineItemToggleNotification>): void;
    urlBuilder(refiner: IRefineItemToggleNotification): string;
}
export interface IRefineItemState extends React.ComponentState {
    isChecked: boolean;
    renderingError?: object;
}
export default class RefineItem extends React.Component<IRefineItemProps, IRefineItemState> {
    private anchorType;
    private payLoad;
    constructor(props: IRefineItemProps);
    render(): JSX.Element | undefined;
    private _getRefinerUrl;
    private _onClick;
}
