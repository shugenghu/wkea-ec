{"version":3,"file":"get-full-products-by-collection.js","sourceRoot":"./src/","sources":["modules/search-result-container/actions/get-full-products-by-collection.ts"],"names":[],"mappings":"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","sourcesContent":["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { generateProductImageUrl } from '@msdyn365-commerce-modules/retail-actions';\nimport MsDyn365, {\n    createObservableDataAction,\n    IAction,\n    IActionContext,\n    IActionInput,\n    ICreateActionContext\n} from '@msdyn365-commerce/core';\nimport { AsyncResult, ProductSearchCriteria,ProductSearchResult } from '@msdyn365-commerce/retail-proxy';\nimport { searchByCriteriaAsync} from '@msdyn365-commerce/retail-proxy/dist/DataActions/ProductsDataActions.g';\nimport {\n    BaseCollectionInput,\n    createBaseCollectionInput\n} from './base-collection-action';\n\nimport { ListPageStateInput } from '../list-page-state';\n\n/**\n * GetFullProductsByCollection Action Input\n */\nexport class GetFullProductsByCollectionInput extends BaseCollectionInput implements IActionInput {\n    public getCacheObjectType = () => 'FullProductSearchResult';\n    public dataCacheType = () => {\n        if (\n            this.pageType !== 'Category' ||\n            (this.refiners && this.refiners.length > 0) ||\n            (this.queryResultSettings && this.queryResultSettings.Sorting && this.queryResultSettings.Sorting.Columns && this.queryResultSettings.Sorting.Columns.length > 0)\n        ) {\n            return 'request';\n        } else {\n            return 'application';\n        }\n    }\n}\n\nexport interface IFullProductsSearchResultsWithCount {\n    products: ProductSearchResult[];\n    count: number;\n}\n\n/**\n * createInput function which creates and actionInput used to fetch products for a list page.\n */\nconst createInput = (args: ICreateActionContext<{ itemsPerPage: number ;includedAttributes:boolean | undefined}>): IActionInput => {\n    const input = createBaseCollectionInput(args, GetFullProductsByCollectionInput);\n\n    // Set Top\n    if (input.queryResultSettings.Paging && args.config) {\n        input.queryResultSettings.Paging.Top = args.config.itemsPerPage || 1;\n    }\n\n    // Set Skip\n    if (input.queryResultSettings.Paging && args.requestContext.query && args.requestContext.query.skip) {\n        input.queryResultSettings.Paging.Skip = +args.requestContext.query.skip;\n    }\n\n    input.queryResultSettings.count = true;\n\n    return input;\n};\n\n/**\n * Action function to fetch products for a list page\n */\nasync function action(\n    input: GetFullProductsByCollectionInput,\n    ctx: IActionContext\n): Promise<IFullProductsSearchResultsWithCount> {\n    let productSearchResults: ProductSearchResult[];\n    let promise: AsyncResult<ProductSearchResult[]>;\n    let searchProductId;\n    const searchCriteriaInput: ProductSearchCriteria = {};\n    searchCriteriaInput.Context = { ChannelId: ctx.requestContext.apiSettings.channelId, CatalogId: ctx.requestContext.apiSettings.catalogId };\n    searchCriteriaInput.Refinement = input.refiners;\n    searchCriteriaInput.IncludeAttributes = input.includeAttributes;\n\n    if (input.pageType === 'Category' || (ctx.requestContext.query && ctx.requestContext.query.categoryId)) {\n        if (input.category) {\n            searchCriteriaInput.CategoryIds = [input.category || 0];\n            promise = searchByCriteriaAsync(\n                {\n                    callerContext: ctx,\n                    queryResultSettings: input.queryResultSettings\n                },\n                searchCriteriaInput\n            );\n        } else {\n            throw new Error(\n                '[GetFullProductsForCollection]Category Page Detected, but no global categoryId found'\n            );\n        }\n    } else {\n        if (input.searchText && (ctx.requestContext.query && ctx.requestContext.query.q)) {\n            searchCriteriaInput.SearchCondition = input.searchText;\n            promise = searchByCriteriaAsync(\n                {\n                    callerContext: ctx,\n                    queryResultSettings: input.queryResultSettings\n                },\n                searchCriteriaInput\n            );\n        } else {\n            if (input.searchText && (ctx.requestContext.query && ctx.requestContext.query.productId)) {\n                searchProductId = Number(input.searchText);\n                if (Number.isNaN(searchProductId)) {\n                    throw new Error('Failed to cast search product id into a number.');\n                } else {\n                    searchCriteriaInput.RecommendationListId = 'looks';\n                    searchCriteriaInput.Ids = [searchProductId || 0];\n                    promise = searchByCriteriaAsync(\n                        {\n                            callerContext: ctx,\n                            queryResultSettings: input.queryResultSettings\n                        },\n                        searchCriteriaInput\n                    );\n                }\n            } else {\n                throw new Error(\n                    '[GetFullProductsForCollection]Search Page Detected, but no q= or productId= query parameter found'\n                );\n            }\n        }\n    }\n\n    productSearchResults = await promise;\n\n    const mappedProducts = productSearchResults.map(productSearchResult => {\n        const newImageUrl = generateProductImageUrl(\n            productSearchResult,\n            ctx.requestContext.apiSettings\n        );\n\n        if (newImageUrl) {\n            productSearchResult.PrimaryImageUrl = newImageUrl;\n        }\n\n        return (productSearchResult);\n    });\n\n    // Update ListPageState For SSR\n    if (!MsDyn365.isBrowser) {\n        ctx.update(new ListPageStateInput(), { totalProductCount: promise.metadata.count || 0, activeFilters: input.refiners });\n\n    }\n\n    return {\n        products: mappedProducts,\n        count: promise.metadata.count || 0\n    };\n}\n\nexport default createObservableDataAction({\n    id: '@msdyn365-commerce-modules/search-result-container/get-full-products-by-collection',\n    action: <IAction<IFullProductsSearchResultsWithCount>>action,\n    input: createInput\n});\n"]}