{"version":3,"file":"refine-item.js","sourceRoot":"./src/","sources":["modules/search-result-container/components/refine-item.tsx"],"names":[],"mappings":"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","sourcesContent":["import { getPayloadObject, getTelemetryAttributes, IPayLoad, ITelemetryContent } from '@msdyn365-commerce-modules/utilities';\nimport { IProductRefinerHierarchy } from '@msdyn365-commerce/commerce-entities';\nimport { RatingComponent } from '@msdyn365-commerce/components';\nimport { ICoreContext } from '@msdyn365-commerce/core';\nimport { ProductRefinerValue } from '@msdyn365-commerce/retail-proxy';\nimport * as React from 'react';\nimport { IRefineItemToggleNotification } from './refine-item-toggle-notification';\nimport { IRefineItemCommonProps } from './refine-item.props.common';\nimport { ProductRefinerSource, ProductRefinerTypeValue } from './utilities';\n\n/**\n * RefineItem properties\n */\nexport interface IRefineItemProps {\n\n    parentProductRefinerHierarchy: IProductRefinerHierarchy;\n    productRefinerValue: ProductRefinerValue;\n    selectedRefinementCriterion: ProductRefinerValue | undefined;\n    refineItemCommonProps: IRefineItemCommonProps;\n    isDisabled: boolean;\n    context: ICoreContext;\n    moduleId: string;\n    moduleTypeName: string;\n    index?: number;\n    /** The telemetry content */\n    telemetryContent?: ITelemetryContent;\n    onToggle(notfication: Readonly<IRefineItemToggleNotification>): void;\n    urlBuilder(refiner: IRefineItemToggleNotification): string;\n}\n\n/**\n * Refine item state\n */\nexport interface IRefineItemState extends React.ComponentState {\n    isChecked: boolean;\n    renderingError?: object;\n}\n\n/**\n * Single-select and multi-select refine item component (controlled by RefineSubmenu)\n */\nexport default class RefineItem extends React.Component<IRefineItemProps, IRefineItemState> {\n    private anchorType: React.RefObject<HTMLAnchorElement>;\n    private payLoad: IPayLoad;\n\n    constructor(props: IRefineItemProps) {\n        super(props);\n        this._onClick = this._onClick.bind(this);\n        this.state = {\n            isChecked: !!this.props.selectedRefinementCriterion\n        };\n        this.anchorType = React.createRef();\n        this.payLoad = getPayloadObject('click', this.props.telemetryContent!, '');\n    }\n\n    public render(): JSX.Element | undefined {\n        const {\n            isDisabled,\n            refineItemCommonProps,\n            parentProductRefinerHierarchy,\n            productRefinerValue,\n            selectedRefinementCriterion,\n            index,\n            children,\n            onToggle,\n            context,\n            telemetryContent,\n            ...attrs\n        } = this.props;\n        if (!productRefinerValue) {\n            refineItemCommonProps.telemetry.error('[refine-item] Cannot render refineItem without productRefinerValue');\n            return undefined;\n        }\n        if (!productRefinerValue.LeftValueBoundString) {\n            refineItemCommonProps.telemetry.warning(`[refine-item]  RefineItem without LeftValueBoundString: ${JSON.stringify(productRefinerValue)}`);\n        }\n        const isSingleSelect = parentProductRefinerHierarchy.RefinerTypeValue === ProductRefinerTypeValue.Single;\n        let itemTypeClassName = isSingleSelect ? 'single-select' : 'multi-select';\n        itemTypeClassName = `ms-refine-submenu-item ${itemTypeClassName}`;\n        const inputType = isSingleSelect ? 'radio' : 'checkbox';\n        itemTypeClassName = !!selectedRefinementCriterion ? `${itemTypeClassName}-checked` : itemTypeClassName;\n        if (parentProductRefinerHierarchy.SourceValue === ProductRefinerSource.Rating) {\n            if (productRefinerValue.LeftValueBoundString) {\n                this.payLoad.contentAction.etext = productRefinerValue.LeftValueBoundLocalizedString;\n                const attribute = getTelemetryAttributes(telemetryContent!, this.payLoad);\n                return (\n                    <li\n                        className='ms-refine-submenu-item'\n                        role='radio'\n                        aria-checked='false'\n                        id={`${parentProductRefinerHierarchy.KeyName! }_${index}`}\n                        aria-label={`${parentProductRefinerHierarchy.KeyName!}_${index}`}\n                    >\n                        <a\n                            href={this._getRefinerUrl()}\n                            aria-label={`${parentProductRefinerHierarchy.KeyName!}_${productRefinerValue.LeftValueBoundLocalizedString}`}\n                            onClick={this._onClick}\n                            {...attribute}\n                        >\n                            <RatingComponent\n                                avgRating={parseInt(productRefinerValue.LeftValueBoundString, 10)}\n                                ratingCount={productRefinerValue.LeftValueBoundLocalizedString ? productRefinerValue.LeftValueBoundLocalizedString : productRefinerValue.LeftValueBoundString}\n                                hideCount={false}\n                                readOnly={true}\n                                ariaLabel=''\n                                context={context}\n                                id={this.props.moduleId}\n                                typeName={this.props.moduleTypeName}\n                                data={{}}\n                            />\n                            <span className='refine-submenu-item__rating'>{productRefinerValue.Count !== undefined && `(${productRefinerValue.Count})`}</span>\n                        </a>\n                    </li>\n                );\n            } else {\n                return undefined;\n            }\n        } else {\n            this.payLoad.contentAction.etext = productRefinerValue.LeftValueBoundLocalizedString || productRefinerValue.LeftValueBoundString;\n            const attribute = getTelemetryAttributes(telemetryContent!, this.payLoad);\n            return (\n                <li className='ms-refine-submenu-item' id={`${parentProductRefinerHierarchy.KeyName!}_${index}`}>\n                    <a\n                        key={!!selectedRefinementCriterion ? 'true' : 'false'}\n                        ref={this.anchorType}\n                        href={this._getRefinerUrl()}\n                        tabIndex={0}\n                        onClick={this._onClick}\n                        className={itemTypeClassName}\n                        role={inputType}\n                        aria-checked={!!selectedRefinementCriterion}\n                        {...attribute}\n                        {...attrs}\n                    >\n                        <span className='ms-refine-submenu-item__label'>\n                            {productRefinerValue.LeftValueBoundLocalizedString || productRefinerValue.LeftValueBoundString}\n                            {productRefinerValue.Count !== undefined && ` (${productRefinerValue.Count})`}\n                        </span>\n                    </a>\n                </li>\n            );\n        }\n    }\n\n    private _getRefinerUrl(): string {\n        const { urlBuilder, parentProductRefinerHierarchy, productRefinerValue, selectedRefinementCriterion } = this.props;\n\n        if (productRefinerValue) {\n            return urlBuilder({\n                parentProductRefinerHierarchy: parentProductRefinerHierarchy,\n                productRefinerValue: productRefinerValue,\n                isSelecting: !selectedRefinementCriterion\n            });\n        }\n\n        return '';\n    }\n\n    private _onClick = (e: React.MouseEvent<HTMLAnchorElement | HTMLInputElement>): void => {\n        e.preventDefault();\n\n        const { parentProductRefinerHierarchy, productRefinerValue, selectedRefinementCriterion } = this.props;\n        if (productRefinerValue) {\n            this.props.onToggle({\n                parentProductRefinerHierarchy: parentProductRefinerHierarchy,\n                productRefinerValue: productRefinerValue,\n                isSelecting: !selectedRefinementCriterion\n            });\n\n            setTimeout(\n                () => {\n                    this.anchorType.current && this.anchorType.current.focus();\n                },\n                0\n            );\n        }\n    }\n}"]}