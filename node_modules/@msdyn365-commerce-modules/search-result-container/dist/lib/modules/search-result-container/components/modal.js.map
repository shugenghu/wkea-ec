{"version":3,"file":"modal.js","sourceRoot":"./src/","sources":["modules/search-result-container/components/modal.tsx"],"names":[],"mappings":"AAAA,OAAO,EACH,MAAM,EACN,KAAK,EACL,SAAS,EACT,WAAW,EACX,WAAW,EACd,MAAM,sCAAsC,CAAC;AAC9C,OAAO,KAAK,MAAM,OAAO,CAAC;AA6B1B,MAAM,CAAC,MAAM,WAAW,GAAgC,CAAC,KAAwB,EAAE,EAAE;IACjF,MAAM,EAAC,IAAI,EAAE,OAAO,EAAE,SAAS,EAAE,QAAQ,EAAE,EAAE,EAAC,GAAG,KAAK,CAAC;IACvD,OAAO,gCAAQ,EAAE,EAAE,EAAE,EAAE,SAAS,EAAC,YAAY,gBAAa,SAAS,EAAE,OAAO,EAAE,OAAO,EAAE,GAAG,EAAE,QAAQ,IAAG,IAAI,CAAU,CAAC;AAC1H,CAAC,CAAC;AAEF,MAAM,CAAC,MAAM,iBAAiB,GAAG,CAAC,KAA8B,EAA+B,EAAE;IAC7F,OAAO;QACH,KAAK,EAAE,SAAS,CAAC,KAAK,CAAC;QACvB,WAAW,EAAE,eAAe,CAAC,KAAK,CAAC;QACnC,WAAW,EAAE,eAAe,CAAC,KAAK,CAAC;QACnC,SAAS,EAAE,oBAAC,SAAS,IAAC,SAAS,EAAC,uBAAuB,GAAE;KAC5D,CAAC;AACN,CAAC,CAAC;AAEF,MAAM,SAAS,GAAG,CAAC,KAA8B,EAAE,EAAE;IACjD,OAAO,CACH,oBAAC,KAAK,IACF,SAAS,EAAE,IAAI,EACf,eAAe,EAAE,YAAY,EAC7B,cAAc,EAAE,KAAK,CAAC,SAAS,EAC/B,MAAM,EAAE,KAAK,CAAC,MAAM,EACpB,MAAM,EAAE,KAAK,CAAC,aAAa,EAC3B,SAAS,EAAE,yBAAyB,EACpC,MAAM,EAAE,IAAI,GACd,CACL,CAAC;AACN,CAAC,CAAC;AAEF,MAAM,eAAe,GAAG,CAAC,KAA8B,EAAE,EAAE;IACvD,OAAO,CACH,oBAAC,WAAW,IAAC,MAAM,EAAE,KAAK,CAAC,aAAa,IACpC,KAAK,CAAC,SAAS,CAAC,UAAU,CAChB,CACjB,CAAC;AACN,CAAC,CAAC;AAEF,MAAM,eAAe,GAAG,CAAC,KAA8B,EAAE,EAAE;IACvD,OAAO,CACH,oBAAC,WAAW;QACZ,oBAAC,MAAM,IAAC,OAAO,EAAE,KAAK,CAAC,aAAa,EAAE,SAAS,EAAC,gCAAgC,IAC3E,KAAK,CAAC,SAAS,CAAC,oBAAoB,CAChC,CACK,CACjB,CAAC;AACN,CAAC,CAAC","sourcesContent":["import {\n    Button,\n    Modal,\n    ModalBody,\n    ModalFooter,\n    ModalHeader\n} from '@msdyn365-commerce-modules/utilities';\nimport React from 'react';\n\nexport interface ISearchResultModalViewProps {\n    modal: React.ReactElement;\n    modalHeader: React.ReactElement;\n    modalFooter: React.ReactElement;\n    modalBody: React.ReactElement;\n}\n\ninterface IModalToggleProps {\n    innerRef: React.RefObject<HTMLButtonElement> | undefined;\n    id: string;\n    text: string;\n    ariaLabel: string;\n    onClick():  void;\n}\n\nexport interface ISearchResultModalResources {\n   modalTitle: string;\n   modalCloseButtonText: string;\n}\n\nexport interface ISearchResultModalProps {\n    resources: ISearchResultModalResources;\n    isOpen: boolean;\n    returnRef: React.RefObject<HTMLButtonElement> | undefined;\n    onModalToggle():void;\n}\n\nexport const ModalToggle: React.FC<IModalToggleProps> = (props: IModalToggleProps) => {\n    const {text, onClick, ariaLabel, innerRef, id} = props;\n    return <button id={id} className='msc-button' aria-label={ariaLabel} onClick={onClick} ref={innerRef}>{text}</button>;\n};\n\nexport const SearchResultModal = (props: ISearchResultModalProps):ISearchResultModalViewProps  => {\n    return {\n        modal: modalNode(props),\n        modalHeader: modalHeaderNode(props),\n        modalFooter: modalFooterNode(props),\n        modalBody: <ModalBody className='msc-review-modal-body'/>\n    };\n};\n\nconst modalNode = (props: ISearchResultModalProps) => {\n    return (\n        <Modal\n            autoFocus={true}\n            applicationNode={'renderPage'}\n            returnFocusRef={props.returnRef}\n            isOpen={props.isOpen}\n            toggle={props.onModalToggle}\n            className={'msc-search-result-modal'}\n            zIndex={1050}\n        />\n    );\n};\n\nconst modalHeaderNode = (props: ISearchResultModalProps) => {\n    return (\n        <ModalHeader toggle={props.onModalToggle}>\n           {props.resources.modalTitle}\n        </ModalHeader>\n    );\n};\n\nconst modalFooterNode = (props: ISearchResultModalProps) => {\n    return (\n        <ModalFooter>\n        <Button onClick={props.onModalToggle} className='ms-sort-and-filter-modal-close'>\n            {props.resources.modalCloseButtonText}\n        </Button>\n        </ModalFooter>\n    );\n};"]}