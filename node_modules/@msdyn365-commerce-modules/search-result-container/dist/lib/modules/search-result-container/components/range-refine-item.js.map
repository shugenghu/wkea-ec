{"version":3,"file":"range-refine-item.js","sourceRoot":"./src/","sources":["modules/search-result-container/components/range-refine-item.tsx"],"names":[],"mappings":"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","sourcesContent":["import { Slider } from '@msdyn365-commerce-modules/utilities';\nimport debounce from 'lodash/debounce';\nimport { computed } from 'mobx';\nimport { observer } from 'mobx-react';\nimport * as React from 'react';\nimport { formatPrice } from './utilities';\n\ntype InputType = 'Min' | 'Max';\n\nimport { IRefineItemProps, IRefineItemState } from './refine-item';\n\nexport type RangeRefineItemType = 'slider' | 'input';\n\n/**\n * Range refine item properties\n */\nexport interface IRangeRefineItemProps extends IRefineItemProps {\n    rangeType: RangeRefineItemType;\n    minValueSliderThumbAriaLabel?: string;\n    maxValueSliderThumbAriaLabel?: string;\n}\n\n/**\n * Range refine item state\n */\nexport interface IRangeRefineItemState extends IRefineItemState {\n    validationErrorMin: string | undefined;\n    validationErrorMax: string | undefined;\n    selectedMin: string | undefined;\n    selectedMax: string | undefined;\n    touchedMin: boolean;\n    touchedMax: boolean;\n}\n\n/**\n * RangeRefineItem component (controlled by RefineSubmenu)\n */\n@observer\nexport default class RangeRefineItem extends React.Component<IRangeRefineItemProps, IRangeRefineItemState> {\n    private _formattedPriceReverseLookup: Map<string, string> = new Map();\n\n    private minInput: React.RefObject<HTMLInputElement>;\n    private maxInput: React.RefObject<HTMLInputElement>;\n\n    @computed get currencyCode(): string {\n        return this.props.productRefinerValue.UnitText || '';\n    }\n\n    constructor(props: IRangeRefineItemProps) {\n        super(props);\n        this._onRangeUpdate = this._onRangeUpdate.bind(this);\n        this._onRangeUpdateEnd = this._onRangeUpdateEnd.bind(this);\n        this._handleRangeTooltipText = this._handleRangeTooltipText.bind(this);\n        this._changeMin = this._changeMin.bind(this);\n        this._changeMax = this._changeMax.bind(this);\n        this._finishChangeMin = this._finishChangeMin.bind(this);\n        this._finishChangeMax = this._finishChangeMax.bind(this);\n\n        this.minInput = React.createRef<HTMLInputElement>();\n        this.maxInput = React.createRef<HTMLInputElement>();\n\n        const { selectedRefinementCriterion } = this.props;\n        const initialMin = selectedRefinementCriterion && selectedRefinementCriterion.LeftValueBoundString || '0';\n        const initialMax = selectedRefinementCriterion && selectedRefinementCriterion.RightValueBoundString || undefined;\n        this.state = {\n            isChecked: false,\n            validationErrorMin: undefined,\n            validationErrorMax: undefined,\n            selectedMin: initialMin,\n            selectedMax: initialMax,\n            touchedMin: false,\n            touchedMax: false\n        };\n    }\n\n    public render(): JSX.Element | undefined {\n        const { productRefinerValue, parentProductRefinerHierarchy, refineItemCommonProps } = this.props;\n\n        if (!productRefinerValue || !parentProductRefinerHierarchy) {\n            refineItemCommonProps.telemetry.error('Cannot render refine value range without productRefinerValue and parentProductRefinerHierarchy');\n            return undefined;\n        }\n\n        if (this.props.rangeType === 'input') {\n            return this._renderInputFields();\n        }\n\n        return this._renderSlider();\n    }\n\n    private _renderInputFields(): JSX.Element | undefined {\n        const { isDisabled, parentProductRefinerHierarchy, refineItemCommonProps } = this.props;\n        const { selectedMin, selectedMax, touchedMin, touchedMax, validationErrorMin, validationErrorMax } = this.state;\n\n        const rangeAriaLabel = (refineItemCommonProps.rangeNameFormat || '{0}').replace('{0}', (parentProductRefinerHierarchy.KeyName || ''));\n        const formAttrs = {\n            'aria-label': rangeAriaLabel,\n            'aria-disabled': isDisabled\n        };\n\n        // To enable price formatting of selected fields, this is the approach:\n        // initial value: min=0 formatted as price, max=undefined\n        // onFocus/onChange: convert to number (unformat) and mark as touched to indicate value is being edited\n        // onBlur: validate and format entered value as price\n        const minInputClassName = `ms-refine-submenu__input-range refine-submenu__input-range-min ${validationErrorMin ? 'refine-submenu__input-range--error' : ''}`;\n        const maxInputClassName = `ms-refine-submenu__input-range refine-submenu__input-range-max ${validationErrorMax ? 'refine-submenu__input-range--error' : ''}`;\n        const minLabelClassName = 'ms-refine-submenu__input-range-label refine-submenu__input-range-label-min';\n        const maxLabelClassName = 'ms-refine-submenu__input-range-label refine-submenu__input-range-label-max';\n        const formattedSelectedMin = this._getFormattedSelectedValue(selectedMin, touchedMin, validationErrorMin);\n        const formattedSelectedMax = this._getFormattedSelectedValue(selectedMax, touchedMax, validationErrorMax);\n        return (\n            <form className='ms-refine-submenu__input-range-refiner' {...formAttrs}>\n                <label className={minLabelClassName}>\n                    {refineItemCommonProps.minLabel}\n                    <input\n                        className={minInputClassName}\n                        onChange={this._changeMin}\n                        onFocus={this._changeMin}\n                        onBlur={this._finishChangeMin}\n                        value={formattedSelectedMin}\n                        ref={this.minInput}\n                    />\n                </label>\n                <label className={maxLabelClassName}>\n                    {refineItemCommonProps.maxLabel}\n                    <input\n                        className={maxInputClassName}\n                        placeholder={formattedSelectedMax ? undefined : refineItemCommonProps.placeholderTextMax}\n                        onChange={this._changeMax}\n                        onFocus={this._changeMax}\n                        onBlur={this._finishChangeMax}\n                        value={formattedSelectedMax}\n                        ref={this.maxInput}\n                    />\n                </label>\n                {validationErrorMin &&\n                    <span className='ms-refine-submenu__input-range-error-text refine-submenu__input-range-min-error-text'>{validationErrorMin}</span>\n                }\n                {validationErrorMax && validationErrorMin !== validationErrorMax &&\n                    <span className='ms-refine-submenu__input-range-error-text refine-submenu__input-range-max-error-text'>{validationErrorMax}</span>\n                }\n            </form>\n        );\n    }\n\n    private _renderSlider(): JSX.Element | undefined {\n        const { isDisabled, productRefinerValue, parentProductRefinerHierarchy, selectedRefinementCriterion } = this.props;\n        const min = productRefinerValue.LeftValueBoundString;\n        const max = productRefinerValue.RightValueBoundString;\n        const selectedMin = selectedRefinementCriterion && selectedRefinementCriterion.LeftValueBoundString || productRefinerValue.LeftValueBoundString || '0';\n        const selectedMax = selectedRefinementCriterion && selectedRefinementCriterion.RightValueBoundString || productRefinerValue.RightValueBoundString || max;\n        const sliderId = `slider_${parentProductRefinerHierarchy.RecordId}_${productRefinerValue.RefinerRecordId}`;\n        const ariaAttributes = {\n            'aria-disabled': isDisabled\n        };\n\n        const minPrice = this._formatPrice(min);\n        const maxPrice = this._formatPrice(max);\n        const selectedMinPrice =this._formatPrice(selectedMin);\n        const selectedMaxPrice =this._formatPrice(selectedMax);\n\n        return (\n            <Slider\n                className={'ms-refine-submenu__range-refiner'}\n                key={sliderId}\n                id={sliderId}\n                inForm={false}\n                min={min && Number(min) || undefined}\n                max={max && Number(max) || undefined}\n                step={1}\n                orientation={'horizontal'}\n                labels={[\n                    {\n                        labelId: `${sliderId}_start`,\n                        labelString: `${minPrice}`,\n                        labelPositioning: 'start'\n                    },\n                    {\n                        labelId: `${sliderId}_end`,\n                        labelString: `${maxPrice}`,\n                        labelPositioning: 'end'\n                    }\n                ]}\n                showLabels={true}\n                showTooltip={true}\n                sliderThumbs={[\n                    {\n                        id: `${sliderId}_slider_thumb_start`,\n                        value: selectedMin && Number(selectedMin) || 0,\n                        ariaLabel: `${this.props.minValueSliderThumbAriaLabel} ${this.currencyCode}`,\n                        ariaValueText: `${selectedMinPrice}`\n                    },\n                    {\n                        id: `${sliderId}_slider_thumb_end`,\n                        value: Number(selectedMax) || Number(maxPrice),\n                        ariaLabel: `${this.props.maxValueSliderThumbAriaLabel} ${this.currencyCode}`,\n                        ariaValueText: `${selectedMaxPrice}`\n                    }\n                ]}\n                onChangeEnd={this._onRangeUpdateEnd}\n                onChange={debounce(this._onRangeUpdate, 500)}\n                handleTooltipText={this._handleRangeTooltipText}\n                {...ariaAttributes}\n            />\n        );\n    }\n\n    private _changeMin(event: React.FocusEvent<HTMLInputElement>): void {\n        this._changeValue(event, 'Min');\n    }\n\n    private _changeMax(event: React.FocusEvent<HTMLInputElement>): void {\n        this._changeValue(event, 'Max');\n    }\n\n    private _changeValue(event: React.FocusEvent<HTMLInputElement>, inputType: InputType): void {\n        const selectedKey = `selected${inputType}`;\n        const touchedKey = `touched${inputType}`;\n        this.setState({\n            [selectedKey]: this._getInputWithoutFormatting(event.currentTarget.value),\n            [touchedKey]: true\n        });\n    }\n\n    private _finishChangeMin(event: React.FocusEvent<HTMLInputElement>): boolean {\n        const selectedMinValue = this._getInputWithoutFormatting(event.currentTarget.value);\n        this.setState({\n            selectedMin: selectedMinValue,\n            minTouched: false\n        });\n        const minInput = Number(selectedMinValue);\n        const { onToggle, parentProductRefinerHierarchy, productRefinerValue, refineItemCommonProps, selectedRefinementCriterion } = this.props;\n        const max = selectedRefinementCriterion && selectedRefinementCriterion.RightValueBoundString || undefined;\n\n        const maxNum = max ? Number(max) : undefined;\n\n        if (isNaN(minInput)) {\n            this.setState({validationErrorMin: refineItemCommonProps.validationErrorNaN});\n            this._focus('Min');\n            return false;\n        }\n\n        if (this._validateRange(minInput, maxNum)) {\n            onToggle({\n                parentProductRefinerHierarchy: parentProductRefinerHierarchy,\n                productRefinerValue: productRefinerValue,\n                isSelecting: true,\n                rangeStart: minInput,\n                rangeEnd: maxNum\n            });\n            return true;\n        } else {\n            this._focus('Min');\n        }\n\n        return false;\n    }\n\n    private _finishChangeMax(event: React.FocusEvent<HTMLInputElement>): boolean {\n        const selectedMaxValue = this._getInputWithoutFormatting(event.currentTarget.value);\n        this.setState({\n            selectedMax: selectedMaxValue,\n            maxTouched: false\n        });\n        const maxInput = Number(selectedMaxValue);\n        const { onToggle, parentProductRefinerHierarchy, productRefinerValue, refineItemCommonProps, selectedRefinementCriterion } = this.props;\n        const min = selectedRefinementCriterion && selectedRefinementCriterion.LeftValueBoundString || '0';\n\n        const minNum = Number(min);\n\n        if (isNaN(maxInput)) {\n            this.setState({validationErrorMax: refineItemCommonProps.validationErrorNaN});\n            this._focus('Max');\n            return false;\n        }\n\n        if (this._validateRange(minNum, maxInput)) {\n            if (productRefinerValue) {\n                onToggle({\n                    parentProductRefinerHierarchy: parentProductRefinerHierarchy,\n                    productRefinerValue: productRefinerValue,\n                    isSelecting: true,\n                    rangeStart: minNum,\n                    rangeEnd: maxInput\n                });\n            } else {\n                this._focus('Max');\n            }\n            return true;\n        }\n\n        return false;\n    }\n\n    private _focus(inputType: InputType): void {\n        const ref = inputType === 'Max' ? this.maxInput : this.minInput;\n\n        setTimeout(() => {\n            if (ref && ref.current) {\n                ref.current.focus();\n            }\n        },         50);\n    }\n\n    private _getFormattedSelectedValue(selected: string | undefined, touched: boolean, validationError: string | undefined): string | undefined {\n        if (touched || validationError || selected === undefined) {\n            return selected;\n        }\n        return this._formatPrice(selected);\n    }\n\n    private _validateRange(min: number, max: number | undefined): boolean {\n        const { refineItemCommonProps } = this.props;\n        if (max === undefined) {\n            return true;\n        }\n\n        if (min > max) {\n            this.setState({\n                validationErrorMin: refineItemCommonProps.validationErrorRange,\n                validationErrorMax: refineItemCommonProps.validationErrorRange\n            });\n            return false;\n        }\n\n        return true;\n    }\n\n    private _formatPrice(amount: string | undefined): string {\n        const locale = this.props.refineItemCommonProps.locale;\n        const result = formatPrice(amount, this.currencyCode, locale, this.props.refineItemCommonProps.telemetry);\n\n        if (amount !== undefined && !this._formattedPriceReverseLookup.has(result)) {\n            this._formattedPriceReverseLookup.set(result, amount);\n        }\n\n        return result;\n    }\n\n    private _getInputWithoutFormatting(input: string): string {\n        // First try to cast raw input to a number\n        const inputAsNum = Number(input);\n        if (!isNaN(inputAsNum)) {\n            return input;\n        }\n\n        // Otherwise try a reverse lookup and fall back to the raw input if all else fails\n        const reverseLookupResult = this._formattedPriceReverseLookup.get(input);\n        return reverseLookupResult || input;\n    }\n\n    // NOTE: Fix types once Shared Components build pipeline bug fixed\n    // tslint:disable-next-line:no-any\n    private _onRangeUpdate(sliderChangeNotification: any): void {\n        // Need to filter out mousemove events as these cause errors after the menu updates and slider re-renders\n        if (sliderChangeNotification.eventType !== 'mousemove') {\n            const { onToggle, parentProductRefinerHierarchy, productRefinerValue } = this.props;\n            if (productRefinerValue && sliderChangeNotification) {\n                onToggle({\n                    parentProductRefinerHierarchy: parentProductRefinerHierarchy,\n                    productRefinerValue: productRefinerValue,\n                    isSelecting: true,\n                    rangeStart: sliderChangeNotification.firstThumbValue,\n                    rangeEnd: sliderChangeNotification.secondThumbValue\n                });\n\n                this._focusOnSliderThumb(sliderChangeNotification);\n            }\n        }\n    }\n\n    // tslint:disable-next-line\n    private _onRangeUpdateEnd(sliderChangeNotification: any): void {\n        const { onToggle, parentProductRefinerHierarchy, productRefinerValue } = this.props;\n        if (productRefinerValue && sliderChangeNotification) {\n            onToggle({\n                parentProductRefinerHierarchy: parentProductRefinerHierarchy,\n                productRefinerValue: productRefinerValue,\n                isSelecting: true,\n                rangeStart: sliderChangeNotification.firstThumbValue,\n                rangeEnd: sliderChangeNotification.secondThumbValue\n            });\n\n            this._focusOnSliderThumb(sliderChangeNotification);\n        }\n    }\n\n    // tslint:disable-next-line\n    private _focusOnSliderThumb(sliderChangeNotification: any): void {\n        if (sliderChangeNotification.id) {\n            const element = document.getElementById(`${sliderChangeNotification.id}range`);\n            if (!!element) {\n                setTimeout(\n                    () => {\n                        element.focus();\n                },  0);\n            }\n        }\n    }\n\n    private _handleRangeTooltipText(tooltip: number): string {\n        return this._formatPrice(`${tooltip}`);\n    }\n}"]}