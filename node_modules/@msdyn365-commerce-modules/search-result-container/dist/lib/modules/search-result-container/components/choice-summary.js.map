{"version":3,"file":"choice-summary.js","sourceRoot":"./src/","sources":["modules/search-result-container/components/choice-summary.tsx"],"names":[],"mappings":"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","sourcesContent":["import { getPayloadObject, getTelemetryAttributes, IPayLoad } from '@msdyn365-commerce-modules/utilities';\nimport { IProductRefinerHierarchy } from '@msdyn365-commerce/commerce-entities';\nimport { ProductRefinerValue } from '@msdyn365-commerce/retail-proxy';\nimport classnames from 'classnames';\nimport { get } from 'lodash';\nimport { computed } from 'mobx';\nimport { observer } from 'mobx-react';\nimport * as React from 'react';\nimport { IChoiceSummaryProps } from './choice-summary.props';\nimport { isMatchingRefinementCriterion, ProductRefinerValueDataTypeValue } from './utilities';\n\ninterface IRefinerMap {\n    key: string;\n    value: ProductRefinerValue;\n}\n\n /**\n  * ChoiceSummary component\n  */\n@observer\nexport default class ChoiceSummary extends React.Component<IChoiceSummaryProps> {\n    private closeButtonGlyph: string = 'msi-close-btn';\n    private payLoad: IPayLoad;\n\n    @computed get selectedRefinersMap(): IRefinerMap[] {\n        const { selectedChoices } = this.props;\n        return selectedChoices.map((selectedRefiner: ProductRefinerValue) => {\n            return {\n                key: this._getKeyForRefinerValue(selectedRefiner),\n                value: selectedRefiner\n            } as IRefinerMap;\n        });\n    }\n\n    constructor(props: Readonly<IChoiceSummaryProps>) {\n        super(props);\n        this.payLoad = getPayloadObject('click', this.props.telemetryContent!, '');\n    }\n\n    public render(): JSX.Element {\n        const { clearAllText, label, classNames, choiceAriaLabel } = this.props;\n        const items = this.selectedRefinersMap;\n        this.payLoad.contentAction.etext = clearAllText;\n        const clearAllAttributes = getTelemetryAttributes(this.props.telemetryContent!, this.payLoad);\n        return (\n            <div className='msc-choice-summary'>\n                {items.length > 0 && label && <span className='msc-choice-summary__label'>{label}</span>}\n                <ul className={classnames(classNames, 'msc-choice-summary__list', 'list-unstyled')}>\n                    {items.map((item: IRefinerMap, index: number) => {\n                        const listItemProps = {\n                            'aria-posinset': index,\n                            'aria-setsize': items.length\n                        };\n\n                        this.payLoad.contentAction.etext = item.key;\n                        const attribute = getTelemetryAttributes(this.props.telemetryContent!, this.payLoad);\n\n                        return (\n                            <li className='msc-choice-summary__list-item' key={item.key} {...listItemProps}>\n                                <a\n                                    className='msc-choice-summary__item'\n                                    href={this.props.urlBuilder(item.value, false)}\n                                    aria-label={`${item.key} ${choiceAriaLabel}`}\n                                    onClick={this._onClick}\n                                    {...attribute}\n                                >\n                                    {item.key}\n                                    <span className={`${this.closeButtonGlyph} msc-choice-summary__glyph`} />\n                                </a>\n                            </li>\n                        );\n                    })}\n                </ul>\n                {items.length > 0 && clearAllText && <a href={this.props.urlBuilder({}, true)} className={'msc-choice-summary__clear-all'} {...clearAllAttributes} onClick={this._onClick}>{clearAllText}</a>}\n            </div>\n        );\n    }\n\n    private _getKeyForRefinerValue(productRefinerValue: ProductRefinerValue): string {\n        const { choiceFormat, choiceRangeValueFormat, refinerHierarchy, telemetry } = this.props;\n        const overallFormat = choiceFormat || '{1}';\n        const rangeFormat = choiceRangeValueFormat;\n        let refinerName = '';\n        if (refinerHierarchy && refinerHierarchy.find) {\n            const parent = refinerHierarchy.find(\n                (hierarchy: IProductRefinerHierarchy) =>\n                    !!hierarchy.Values.find((value: ProductRefinerValue) => isMatchingRefinementCriterion(value, productRefinerValue))\n            );\n\n            if (!parent) {\n                telemetry.warning('[choice-summary] could not find parent of selected refiner value');\n            } else {\n                refinerName = parent.KeyName || '';\n            }\n        }\n\n        let refinerValueName: string;\n        switch (productRefinerValue.DataTypeValue) {\n            case ProductRefinerValueDataTypeValue.Range:\n            case ProductRefinerValueDataTypeValue.RangeInput:\n                refinerValueName = rangeFormat\n                    .replace('{0}', this._formatPrice(productRefinerValue.LeftValueBoundString, productRefinerValue.UnitText))\n                    .replace('{1}', this._formatPrice(productRefinerValue.RightValueBoundString, productRefinerValue.UnitText));\n                break;\n            default:\n                refinerValueName = productRefinerValue.LeftValueBoundLocalizedString || productRefinerValue.LeftValueBoundString || '';\n        }\n\n        return overallFormat.replace('{0}', refinerName).replace('{1}', refinerValueName);\n    }\n\n    private _formatPrice(amount: string | undefined, currency: string | undefined): string {\n        if (!amount || !currency) {\n            this.props.telemetry.trace('[choice-summary] could not format price');\n            return amount || '';\n        }\n        const priceAmount = (amount && Number(amount)) || 0;\n        const locale = get(this.props, 'context.request.locale', 'en-US');\n        let result: string;\n\n        try {\n            result = new Intl.NumberFormat(locale, {\n                style: 'currency',\n                currencyDisplay: 'symbol',\n                currency: currency,\n                minimumFractionDigits: 0\n            }).format(priceAmount);\n        } catch (e) {\n            result = `${priceAmount} ${currency}`;\n            this.props.telemetry.warning(`Failed to format price for ${result}: ${e}`);\n        }\n\n        return result;\n    }\n\n    private _onClick = (e: React.MouseEvent<HTMLAnchorElement>): void => {\n        e.preventDefault();\n        e.stopPropagation();\n\n        const target = e.currentTarget as HTMLElement;\n        const clearAll = target.getAttribute('class')!.indexOf('choice-summary__clear-all') > -1;\n        const selectedRefiner = clearAll ? undefined : this._getSelectedRefinerChoice(target);\n\n        if (this.props.onChoiceClicked) {\n            this.props.onChoiceClicked({\n                clearAll: clearAll,\n                itemClicked: target,\n                choiceClicked: selectedRefiner,\n                nextItemToFocus: target.nextSibling as HTMLElement\n            });\n        }\n    }\n\n    private _getSelectedRefinerChoice(itemClicked: HTMLElement): ProductRefinerValue | undefined {\n        const result = this.selectedRefinersMap.find(selected => (itemClicked.innerText && itemClicked.innerText.trim()) === selected.key);\n        return (result && result.value) || undefined;\n    }\n}\n"]}