{"version":3,"file":"search-result-container.js","sourceRoot":"./src/","sources":["modules/search-result-container/search-result-container.tsx"],"names":[],"mappings":"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","sourcesContent":["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nimport { getTelemetryObject, ILabeledDropdownOnChangeNotification, ILabeledDropdownOption, IModuleProps, INodeProps, ITelemetryContent, LabeledDropdown, UncontrolledPagination } from '@msdyn365-commerce-modules/utilities';\nimport { CategoryHierarchy as CategoryHierarchyData, IProductRefinerHierarchy } from '@msdyn365-commerce/commerce-entities';\nimport MsDyn365 from '@msdyn365-commerce/core';\nimport { format, ProductRefinerValue, SortColumn, TextValueTranslation } from '@msdyn365-commerce/retail-proxy';\nimport classnames from 'classnames';\nimport { computed, observable, reaction, transaction } from 'mobx';\nimport { observer } from 'mobx-react';\nimport * as React from 'react';\nimport { buildListPageUrl, getCollectionProducts, getCurrentUrl, GetFullProductsByCollectionInput, parseQueryParam, sortOptions, } from './actions';\nimport { ErrorMessage, FeatureSearchResultItem, getUpdatedRefinementCriteria, IChoiceSummaryClickNotification,\n     IRefineItemCommonProps, IRefineItemToggleNotification, ISearchResultModalViewProps, isMatchingRefinementCriterion, Link, ModalToggle, ProductSearchResultItems, SearchResultModal, Separator, Title } from './components';\nimport ChoiceSummary from './components/choice-summary';\nimport RefineSubmenu from './components/refine-submenu';\nimport { ISearchResultContainerData } from './search-result-container.data';\nimport { expandRefinersCount, ISearchResultContainerProps } from './search-result-container.props.autogenerated';\n\nexport interface ISearchResultContainerViewProps extends ISearchResultContainerProps<ISearchResultContainerData> {\n    products?: React.ReactNode;\n    className?: string;\n    SearchResultContainer: IModuleProps;\n    TitleViewProps: ITitleViewProps;\n    categoryHierarchy: ICategoryHierarchyViewProps;\n    pagination?: React.ReactNode;\n    ProductsContainer: INodeProps;\n    ProductSectionContainer: INodeProps;\n    refineMenu: IRefineMenuViewProps;\n    sortByOptions: ISortByViewProps;\n    choiceSummary?: React.ReactNode;\n    modalToggle: React.ReactNode;\n    searchResultModal: ISearchResultModalViewProps;\n    isMobile: boolean;\n    CategoryNavContainer: INodeProps;\n    RefineAndProductSectionContainer: INodeProps;\n    errorMessage: React.ReactNode;\n    FeatureSearchContainer: INodeProps;\n    similarLookProduct?: React.ReactNode;\n}\n\nexport interface ITitleViewProps {\n    TitleContainer: INodeProps;\n    title:ISearchResultTitle;\n}\n\nexport interface IRefineMenuViewProps {\n    RefineMenuContainer: INodeProps;\n    RefinerSectionContainer: INodeProps;\n    refiners?: React.ReactNode[];\n}\n\nexport interface ICategoryHierarchyViewProps {\n    categoryHierarchyList?: React.ReactNode[];\n    categoryHierarchySeparator?: React.ReactNode;\n    CategoryHierarchyContainer: INodeProps;\n}\n\nexport interface ISortByViewProps {\n    SortingContainer: INodeProps;\n    sortByDropDown?:React.ReactNode;\n}\n\nexport type GridSize = 'xs' | 'sm' | 'md' | 'lg' | 'xl';\n\n/**\n * Title component for search result container\n */\nexport interface ISearchResultTitle {\n    titlePrefix?: React.ReactNode;\n    titleText?: React.ReactNode;\n    titleCount?: React.ReactNode;\n}\n\nexport interface ISearchResultContainerState {\n    sortingState: ISortByCollectionState;\n    modalIsOpen: boolean;\n}\n\ninterface ISortByCollectionState {\n    selectedSortByOption: ILabeledDropdownOption;\n    pending: boolean;\n}\n\n/**\n *\n * SearchResultContainer component\n * @extends {React.PureComponent<ISearchResultContainerProps<ISearchResultContainerData>>}\n */\n@observer\nexport default class SearchResultContainer extends React.PureComponent<ISearchResultContainerProps<ISearchResultContainerData>, ISearchResultContainerState> {\n\n    @computed get isMobile(): boolean {\n        return (this._viewport === 'xs' || this._viewport === 'sm');\n    }\n\n    private sortByDropdownOptions: ILabeledDropdownOption[] = [\n        { key: sortOptions.sortByOptionRelevanceDesc, value: this.props.resources.sortByOptionRelevanceDesc },\n        { key: sortOptions.sortByOptionNameAsc, value: this.props.resources.sortByOptionNameAsc },\n        { key: sortOptions.sortByOptionNameDesc, value: this.props.resources.sortByOptionNameDesc },\n        { key: sortOptions.sortByOptionPriceAsc, value: this.props.resources.sortByOptionPriceAsc },\n        { key: sortOptions.sortByOptionPriceDesc, value: this.props.resources.sortByOptionPriceDesc },\n        { key: sortOptions.sortByOptionRatingDesc, value: this.props.resources.sortByOptionRatingDesc },\n    ];\n    private _refineItemCommonProps: IRefineItemCommonProps;\n    private _pageType: string | undefined = this.props.context.request.urlTokens.pageType;\n    @observable\n    private _viewport: GridSize;\n\n    private _modalToggleRef: React.RefObject<HTMLButtonElement>;\n    private _sortAndFilterContainerRef: React.RefObject<LabeledDropdown>;\n    private expandrefinerCount: number = 0;\n    private telemetryContent: ITelemetryContent;\n\n    public static getFriendlyName(locale: string, nameTranslations?: TextValueTranslation[]): string | undefined {\n        let nameTranslation: TextValueTranslation | undefined;\n        if (locale && nameTranslations && nameTranslations.length > 0) {\n            nameTranslation = nameTranslations.find(item => item.Language!.toLowerCase() === locale.toLowerCase());\n        }\n\n        return nameTranslation && nameTranslation.Text;\n    }\n\n    constructor(props: ISearchResultContainerProps<ISearchResultContainerData>, state: ISearchResultContainerState) {\n        super(props);\n        this._viewport = props.context.request && props.context.request.device && props.context.request.device.Type === 'Mobile' ? 'xs' : 'lg';\n        this._modalToggleRef = React.createRef<HTMLButtonElement>();\n        this._sortAndFilterContainerRef = React.createRef<LabeledDropdown>();\n        this._toggleModal = this._toggleModal.bind(this);\n        this._updateViewport = this._updateViewport.bind(this);\n        this.state = {\n            sortingState: {\n                pending: false,\n                selectedSortByOption: this.sortByDropdownOptions[0]\n            },\n            modalIsOpen: false\n        };\n        const {\n            placeholderTextMax,\n            minLabel,\n            maxLabel,\n            rangeNameFormat\n        } = this.props.resources;\n\n        const locale = this.props.context.request.locale;\n        const telemetry = this.props.telemetry;\n        const validationErrorNaN = this.props.resources.validationErrorNotNumber;\n        const validationErrorRange = this.props.resources.validationErrorNotRange;\n        this._refineItemCommonProps = {\n            telemetry,\n            locale,\n            placeholderTextMax,\n            minLabel,\n            maxLabel,\n            rangeNameFormat,\n            validationErrorNaN,\n            validationErrorRange\n        };\n        this.telemetryContent = getTelemetryObject(this.props.context.request.telemetryPageName!,\n                                                   this.props.friendlyName,\n                                                   this.props.telemetry);\n\n        // Initalization of list page\n        this.props.data.products.then((products) => {\n            this.props.data.listPageState.then((listPageState) => {\n                if (this._pageType === 'Category') {\n                    listPageState.pageType = 'Category';\n                } else {\n                    listPageState.pageType = 'Search';\n                }\n\n                let querySorting: SortColumn[] = [];\n\n                if (this.props.context.request.query && this.props.context.request.query.sorting) {\n                    querySorting = JSON.parse(decodeURIComponent(this.props.context.request.query.sorting)) as SortColumn[];\n                }\n\n                listPageState.currentPageNumber = this.props.context.request.query && (+this.props.context.request.query.skip / (this.props.config.itemsPerPage || 10)) || 0;\n                listPageState.sortingCritera = { Columns: querySorting };\n                listPageState.pageSize = this.props.config.itemsPerPage || 10;\n                listPageState.activeProducts = products.products;\n                listPageState.totalProductCount = products.count;\n\n                // Initialize reaction based on listPageState properties\n                reaction(\n                    () => {\n                        return [listPageState.activeFilters && listPageState.activeFilters.length, listPageState.currentPageNumber, listPageState.sortingCritera && listPageState.sortingCritera.Columns && listPageState.sortingCritera.Columns.length];\n                    },\n                    () => {\n                        const input = new GetFullProductsByCollectionInput(\n                            listPageState.pageType,\n                            this.props.context.request.apiSettings,\n                            { Paging: { Top: this.props.config.itemsPerPage, Skip: Math.max((listPageState.pageSize * (listPageState.currentPageNumber || 0)), 0) }, count: true, Sorting: listPageState.sortingCritera || {} },\n                            listPageState.activeFilters || [],\n                            +(this.props.context.request.urlTokens.itemId || 0),\n                            this.props.context.request.query && this.props.context.request.query.q ? this.props.context.request.query.q : this.props.context.request.query?.productId,\n                            this.props && this.props.config && this.props.config.includeAttributes !== undefined && this.props.config.includeAttributes === true ? true : false,\n                            this.props.context.request.locale\n                            );\n\n                        getCollectionProducts(input, this.props.context.actionContext).then(productResults => {\n                            listPageState.activeProducts = productResults.products;\n                            listPageState.totalProductCount = productResults.count;\n                        });\n                    }\n                );\n\n            });\n        });\n\n        if (this.props.context.request.query?.productId) {\n            this.props.data.featureProduct.then((products) => {\n                this.props.data.listPageState.then((listPageStateFeature) => {\n                    listPageStateFeature.featureProduct = products;\n\n                });\n            });\n    }\n        this._updateViewport();\n    }\n\n    public componentDidMount(): void {\n        if (MsDyn365.isBrowser && window.addEventListener) {\n            window.addEventListener('resize', this._updateViewport);\n            this._updateViewport();\n        }\n    }\n\n    public componentWillUnmount(): void {\n        if (MsDyn365.isBrowser && window.removeEventListener) {\n            window.removeEventListener('resize', this._updateViewport);\n        }\n    }\n\n    public render(): JSX.Element {\n        const { imageSettings, className, allowBackNavigation } = this.props.config;\n        const { resources } = this.props;\n        const products = (this.props.data.listPageState.result && this.props.data.listPageState.result.activeProducts) || [];\n        const searchProduct = (this.props.data.listPageState.result && this.props.data.listPageState.result.featureProduct) || null;\n        let errorText = '';\n        const breaCrumbType = this.props.context.app.config.breadcrumbType;\n        const allowBack = allowBackNavigation && (breaCrumbType === 'back' || breaCrumbType === 'categoryAndBack');\n        if(!products || products.length === 0) {\n            errorText = this._pageType === 'Category'? resources.resultCategoryNotFoundText : resources.resultSearchNotFoundText;\n\n        }\n        const productsComponent = (\n            <ProductSearchResultItems\n                products={products}\n                context={this.props.context}\n                imageSettings={imageSettings}\n                resources={resources}\n                moduleType={this.props.typeName}\n                moduleId={this.props.id}\n                allowBackNavigation = {allowBack}\n                telemetryContent={this.telemetryContent}\n            />\n        );\n\n        const featureComponent = (\n            <FeatureSearchResultItem\n                product={searchProduct}\n                context={this.props.context}\n                imageSettings={imageSettings}\n                resources={resources}\n                moduleType={this.props.typeName}\n                moduleId={this.props.id}\n                telemetryContent={this.telemetryContent}\n            />\n        );\n\n        const searchResultContainerViewProps = {\n            ...this.props,\n            products: productsComponent,\n            TitleViewProps: this._getCollectionTitle(),\n            categoryHierarchy: !this.props.config.disableHierarchy && this._getCategoryHierarchy(),\n            refineMenu: this._getRefineMenu(),\n            className: classnames('ms-search-result-container', className),\n            SearchResultContainer: {\n                moduleProps: this.props,\n                className: classnames('ms-search-result-container', className)\n            },\n            sortByOptions: this.props.data.listPageState.result && this.props.data.listPageState.result.totalProductCount !== 0 ? this._getSortingDropDown(): null,\n            pagination: this._getPagination(),\n            ProductsContainer: { className: 'ms-search-result-container__Products' },\n            ProductSectionContainer: {className: 'ms-search-result-container__product-section'},\n            CategoryNavContainer: {className: 'ms-search-result-container__category-nav-section'},\n            RefineAndProductSectionContainer: {className: 'ms-search-result-container__refine-product-section'},\n            choiceSummary: this._getChoiceSummary(),\n            modalToggle: this.props.data.listPageState.result && this.props.data.listPageState.result.totalProductCount !== 0 ?\n                (\n                    <ModalToggle\n                        text={resources.modalTitle}\n                        ariaLabel={resources.modalTitle}\n                        innerRef={this._modalToggleRef}\n                        onClick={this._toggleModal}\n                        id='search-result-modal'\n                    />\n                ) : null,\n             searchResultModal: this._getSearchResultModal(),\n             isMobile: this.isMobile,\n             errorMessage: errorText && (\n                 <ErrorMessage text={errorText} />\n             ),\n             FeatureSearchContainer: { className: 'ms-feature-search-result' },\n             similarLookProduct: this.props.data.listPageState.result && (this.props.data.listPageState.result.featureProduct !== null && this.props.data.listPageState.result.featureProduct !== undefined) ? featureComponent : null\n        };\n        return this.props.renderView(searchResultContainerViewProps) as React.ReactElement;\n    }\n\n    private _getSearchResultModal = (): ISearchResultModalViewProps => {\n        const {resources} = this.props;\n        return SearchResultModal(\n            {\n           resources:{\n               modalCloseButtonText: resources.modalCloseButtonText,\n               modalTitle: resources.modalTitle\n           },\n           isOpen:this.state.modalIsOpen,\n           returnRef: this._modalToggleRef,\n           onModalToggle: this._toggleModal\n        });\n    }\n\n    private _getCollectionTitle = (): ITitleViewProps => {\n        const { data, context, resources } = this.props;\n\n        let collectionTitle: string | undefined = '';\n        if (context && context.request && context.request.query && context.request.query.q) {\n            collectionTitle = `\"${context.request.query.q}\"`;\n        } else {\n            collectionTitle = (data.category.result && SearchResultContainer.getFriendlyName(context.request.locale, data.category.result.NameTranslations)) ||\n                (data.category.result && data.category.result.Name);\n        }\n        let productCountText = '';\n        let productCountNumber: number | undefined;\n        if (data.listPageState && data.listPageState.result && data.listPageState.result.totalProductCount !== undefined) {\n            productCountNumber = data.listPageState.result.totalProductCount;\n        } else if (data.products && data.products.result) {\n            productCountNumber = data.products.result.count;\n        }\n\n        if (productCountNumber && productCountNumber !== 0) {\n            productCountText = productCountNumber !== 1 ? format(this.props.resources.numberOfProducts, productCountNumber) : this.props.resources.oneProduct;\n        } else {\n            productCountText = format(this.props.resources.numberOfProducts, 0);\n        }\n        const titlePrefix = <Title className='ms-search-result__collection-title-prefix' text={resources.searchTextPrefix} />;\n        const titleText = collectionTitle && <Title className='ms-search-result__collection-title-text' text={collectionTitle} />;\n        const titleCount = <Title className='ms-search-result__collection-title-count' text={productCountText} />;\n\n        return {\n            TitleContainer: { className: 'ms-search-result-container__title' },\n            title:{\n            titlePrefix: titlePrefix,\n            titleText: titleText,\n            titleCount: titleCount\n            }\n        };\n\n    }\n    private _getCategoryHierarchy = (): ICategoryHierarchyViewProps => {\n        const { data } = this.props;\n        const categoryHierarchy = data.categoryHierarchy.result;\n        const categoryLinks =\n            categoryHierarchy && categoryHierarchy.map((value: CategoryHierarchyData, index: number) => {\n\n                return (\n                    <Link\n                        key={index}\n                        text={value.Name}\n                        ariaLabel={`${this.props.resources.categoryLinkAriaLabel} ${value.Name}`}\n                        href={value.Url}\n                    />\n                );\n            });\n        const categoryLinkSeparator = <Separator separator='/' />;\n\n        return {\n            CategoryHierarchyContainer: { tag: 'nav', className: 'ms-search-result-container__category-hierarchy' },\n            categoryHierarchyList: categoryLinks,\n            categoryHierarchySeparator: categoryLinkSeparator\n        };\n\n    }\n\n    private _getSortingDropDown = (): ISortByViewProps => {\n        const { resources } = this.props;\n        const activeDropdown = this._getCurrentlySelectedOption() || this.state.sortingState.selectedSortByOption;\n        const dropdown = (\n        <LabeledDropdown\n            labelClassname='reviews-list-sort-by'\n            labelText={resources.sortByDropdownLabel}\n            dropdownId='categorySortByDropdown'\n            dropdownClassname='reviews-list-dropdown'\n            toggleColor='link'\n            dropdownOptions={this.sortByDropdownOptions}\n            selectedOption={activeDropdown}\n            onSelectOption={this._updateSortByDropdown}\n            ref={this._sortAndFilterContainerRef}\n        />);\n        return {\n            SortingContainer: { className: 'ms-search-result-container__Sort-by-category' },\n            sortByDropDown:dropdown\n        };\n    }\n\n    private _getPagination = (): React.ReactNode => {\n        const { config, context, data, resources } = this.props;\n        const listPageState = data && data.listPageState && data.listPageState.result;\n        const fullUrl = getCurrentUrl(context.request);\n        const itemsPerPage = config.itemsPerPage || 10;\n        const skipCount = listPageState && listPageState.currentPageNumber !== null ?\n            (listPageState.currentPageNumber * (this.props.config.itemsPerPage || 10)) :\n            ((this.props.context.request.query && +this.props.context.request.query.skip) || 0);\n        const totalItems = listPageState && listPageState.totalProductCount || 0;\n        const previousText = resources.flipperPrevious;\n        const nextText = resources.flipperNext;\n        if (totalItems <= itemsPerPage) {\n            return null;\n        }\n        return (\n        <UncontrolledPagination\n            className='ms-search-result-container__pagination'\n            role='navigation'\n            aria-label={resources.paginationAriaLabel}\n            url={fullUrl.href}\n            qsp={'skip'}\n            items={totalItems}\n            itemsPerPage={itemsPerPage}\n            startingItem={skipCount}\n            previousText={<div className='msc-pagination__prev'><span className='ms-search-result__pagination-left' aria-hidden='true'/><span className='prev-text'>{previousText}</span></div>}\n            nextText={<div className='msc-pagination__next'><span className='next-text'>{nextText}</span><span className='ms-search-result__pagination-right' aria-hidden='true'/></div>}\n            previousAriaLabel={previousText}\n            nextAriaLabel={nextText}\n            telemetryContent={this.telemetryContent}\n        />);\n    }\n\n    private _getRefineMenu = (): IRefineMenuViewProps => {\n        const { data, context, config } = this.props;\n        const tempRangeTypeTODO = context.request.query && context.request.query.inputRange ? 'input' : 'slider';\n        const validRefiners = data.refiners.result && data.refiners.result.filter(refiner => {\n            return refiner.Values.length > 0;\n        });\n\n        const activeRefiners = (data.listPageState.result && data.listPageState.result.activeFilters) || [];\n\n        this._getexpandRefinerCount(config.expandRefinersCount);\n        const refinelist = this.expandrefinerCount === undefined ? 0 :  this.expandrefinerCount;\n        const expandedRefiners = refinelist === 0 ? validRefiners && validRefiners.length: refinelist;\n        const subMenus = validRefiners && validRefiners.map((productRefinerHierarchy: IProductRefinerHierarchy, index: number) => {\n            return (data.listPageState.result!.totalProductCount !== 0 ?\n                (\n                <RefineSubmenu\n                    productRefinerHierarchy={productRefinerHierarchy}\n                    selectedRefinerValues={activeRefiners}\n                    refineItemCommonProps={this._refineItemCommonProps}\n                    minValueSliderThumbAriaLabel={this.props.resources.minValueSliderThumbAriaLabel}\n                    maxValueSliderThumbAriaLabel={this.props.resources.maxValueSliderThumbAriaLabel}\n                    key={index}\n                    onUpdateRefiners={this._onUpdateRefiners}\n                    urlBuilder={this._buildRefinerUrl}\n                    isDisabled={false}\n                    isExpandedOnInitialLoad={expandedRefiners && expandedRefiners > index ? true : false}\n                    tempRangeTypeTODO={tempRangeTypeTODO}\n                    context = {context}\n                    moduleId={this.props.id}\n                    moduleTypeName={this.props.typeName}\n                    telemetryContent={this.telemetryContent}\n                />) : null\n            );\n        });\n\n        return {\n            RefineMenuContainer:{className: 'ms-search-result-container__refine-menu' },\n            RefinerSectionContainer:{className: 'ms-search-result-container__refiner-section'},\n            refiners: subMenus\n        };\n\n    }\n\n    private _getChoiceSummary = (): React.ReactNode => {\n        const { resources, data, telemetry } = this.props;\n        const selectedRefiners = (data.listPageState.result && data.listPageState.result.activeFilters) || [];\n        return (\n            <ChoiceSummary\n                classNames='ms-choice-summary-by-category'\n                clearAllText={resources.clearAllText}\n                label={resources.choiceSummaryLabel}\n                selectedChoices={selectedRefiners}\n                // @ts-ignore: NOTE Type-unsafe line below, null refinersByCategoryHierarchy case not handled\n                refinerHierarchy={data.refiners.result}\n                choiceFormat={resources.choiceFormat}\n                choiceRangeValueFormat={resources.choiceRangeValueFormat}\n                telemetry={telemetry}\n                onChoiceClicked={this._onChoiceClicked}\n                urlBuilder={this._buildRefinerUrlForChoiceSummary}\n                choiceAriaLabel={resources.choiceAriaLabel}\n                telemetryContent={this.telemetryContent}\n            />\n        );\n\n    }\n\n    private _updateSortByDropdown = (notification: ILabeledDropdownOnChangeNotification): void => {\n        const { context } = this.props;\n        const requestContext = context && context.request;\n        const actionContext = context && context.actionContext;\n\n        if (!requestContext || !actionContext || !this.props.data.listPageState.result) {\n            const error = `[sort-by-category] cannot sort without context: ${!requestContext ? 'requestContext ' : ''} ${!actionContext ? 'actionContext ' : ''} could not be found`;\n            this.props.telemetry.warning(error);\n        }\n\n        window.history.pushState({}, '', buildListPageUrl(getCurrentUrl(this.props.context.request), undefined, [this._getSortColumnFromSelectedOption(notification.selectedOption)], undefined));\n        transaction(() => {\n            this.props.data.listPageState.result!.currentPageNumber = 0;\n            this.props.data.listPageState.result!.sortingCritera = { Columns: [this._getSortColumnFromSelectedOption(notification.selectedOption)] };\n        });\n    }\n\n    private _getSortColumnFromSelectedOption = (option: ILabeledDropdownOption): SortColumn => {\n        const { data } = this.props;\n\n        if (!data.searchConfiguration.result) {\n            return {};\n        }\n\n        const mappedConfiguration = data.searchConfiguration.result.find((searchConfiguration) => { return searchConfiguration.key === option.key; });\n\n        if (mappedConfiguration) {\n            return mappedConfiguration.sortColumn;\n        }\n\n        return {};\n    }\n\n    private _getCurrentlySelectedOption = (): ILabeledDropdownOption | undefined => {\n        const { data } = this.props;\n        const sortCriteria = data.listPageState.result && data.listPageState.result.sortingCritera;\n\n        const activeSortColumn =\n            (sortCriteria && sortCriteria.Columns && sortCriteria.Columns[0]) ||\n            (parseQueryParam<SortColumn[]>('sorting', this.props.context.request) || [])[0];\n\n        if (activeSortColumn && data.searchConfiguration.result) {\n            const activeMappedConfig = data.searchConfiguration.result.find((mappedSearchConfig) => {\n                return (mappedSearchConfig.sortColumn.ColumnName === activeSortColumn.ColumnName) &&\n                    (mappedSearchConfig.sortColumn.IsDescending === activeSortColumn.IsDescending);\n            });\n            if (activeMappedConfig) {\n                return this.sortByDropdownOptions.find((dropdownOption) => dropdownOption.key === activeMappedConfig.key);\n            }\n        }\n\n        return;\n    }\n\n    private _onUpdateRefiners = (itemToggleNotification: IRefineItemToggleNotification): void => {\n        const { context } = this.props;\n        const requestContext = context && context.request;\n        const actionContext = context && context.actionContext;\n\n        if (!requestContext || !actionContext || !this.props.data.listPageState.result) {\n            const error = `Refine menu cannot refine search criteria: ${!requestContext ? 'requestContext ' : ''} ${!actionContext ? 'actionContext ' : ''} could not be found`;\n            this.props.telemetry.warning(error);\n        }\n\n        const updatedRefinementCriteria = getUpdatedRefinementCriteria(itemToggleNotification, this.props.data.listPageState.result && this.props.data.listPageState.result.activeFilters || []);\n\n        window.history.pushState({}, '', buildListPageUrl(getCurrentUrl(this.props.context.request), updatedRefinementCriteria));\n        transaction(() => {\n            this.props.data.listPageState.result!.currentPageNumber = 0;\n            this.props.data.listPageState.result!.activeFilters = updatedRefinementCriteria;\n        });\n    }\n\n    private _buildRefinerUrl = (itemToggleNotification: IRefineItemToggleNotification): string => {\n        if (this.props.data.listPageState.result) {\n            const newRefinementCriteria = getUpdatedRefinementCriteria(itemToggleNotification, this.props.data.listPageState.result.activeFilters || []);\n\n            return buildListPageUrl(getCurrentUrl(this.props.context.request), newRefinementCriteria);\n        } else {\n            this.props.telemetry.warning(`[buildRefinerQueryString]List Page State Not available, unable to build refiner URL`);\n            return '';\n        }\n    }\n\n    private _onChoiceClicked = (notification: IChoiceSummaryClickNotification): void => {\n        const { data, telemetry } = this.props;\n\n        if (!data.listPageState.result) {\n            telemetry.warning('[choice-summary-by-category._onChoiceClicked]ListPageState unavailable, unable to update refiners.');\n            return;\n        }\n\n        let currentRefinementCriteria = (data.listPageState.result && data.listPageState.result.activeFilters) || [];\n\n        if (!notification.clearAll) {\n            const selectedChoice = notification.choiceClicked;\n            if (!selectedChoice) {\n                telemetry.warning('[choice-summary-by-category._onChoiceClicked] Choice could not be determined');\n                return;\n            }\n            currentRefinementCriteria = currentRefinementCriteria.filter(\n                (selectedCriterion: ProductRefinerValue) => !isMatchingRefinementCriterion(selectedChoice, selectedCriterion)\n            );\n        } else {\n            currentRefinementCriteria = [];\n\n            // set focus to sort and filter\n            const dropdownElementId = this._sortAndFilterContainerRef.current && this._sortAndFilterContainerRef.current.props.dropdownId;\n            const dropdownElement = dropdownElementId && document.getElementById(dropdownElementId);\n            setTimeout(() => {\n                dropdownElement && dropdownElement.focus();\n            },\n                       50);\n        }\n\n        const fullUrl = getCurrentUrl(this.props.context.request);\n        window.history.pushState({}, '', buildListPageUrl(fullUrl, currentRefinementCriteria));\n        data.listPageState.result.currentPageNumber = 0;\n        data.listPageState.result.activeFilters = currentRefinementCriteria;\n    }\n\n    private _buildRefinerUrlForChoiceSummary = (selectedRefiner: ProductRefinerValue, isClearAll: boolean): string => {\n        const { data, telemetry } = this.props;\n        const fullUrl = getCurrentUrl(this.props.context.request);\n\n        if (!data.listPageState.result) {\n            telemetry.warning('[choice-summary-by-category._buildRefinerUrl]ListPageState unavailable, unable to create refiner URL.');\n            return fullUrl.href;\n        }\n\n        let currentRefinementCriteria = (data.listPageState.result && data.listPageState.result.activeFilters) || [];\n\n        if (!isClearAll) {\n            if (!selectedRefiner) {\n                telemetry.warning('[choice-summary-by-category._buildRefinerUrl] URL for Choice could not be determined');\n                return fullUrl.href;\n            }\n            currentRefinementCriteria = currentRefinementCriteria.filter(\n                (selectedCriterion: ProductRefinerValue) => !isMatchingRefinementCriterion(selectedRefiner, selectedCriterion)\n            );\n        } else {\n            currentRefinementCriteria = [];\n        }\n\n        return buildListPageUrl(fullUrl, currentRefinementCriteria);\n    }\n\n    private _getViewport(): GridSize {\n        const { context } = this.props;\n\n        // always render in mobile viewport on a mobile device\n        if (context.request && context.request.device && context.request.device.Type === 'Mobile') {\n            return 'xs';\n        }\n\n        if (MsDyn365.isBrowser && window.innerWidth) {\n            const gridSettings = context.request.gridSettings;\n            if (gridSettings) {\n                if (gridSettings.xs && window.innerWidth <= gridSettings.xs.w) {\n                    return 'xs';\n                } else if (gridSettings.sm && window.innerWidth <= gridSettings.sm.w) {\n                    return 'sm';\n                } else if (gridSettings.md && window.innerWidth <= gridSettings.md.w) {\n                    return 'md';\n                } else if (gridSettings.lg && window.innerWidth <= gridSettings.lg.w) {\n                    return 'lg';\n                } else {\n                    return 'xl';\n                }\n            }\n        }\n\n        return 'lg';\n    }\n\n    private _toggleModal(): void {\n        this.setState({\n            modalIsOpen: !this.state.modalIsOpen\n        });\n    }\n\n    private _updateViewport(): void {\n        this._viewport = this._getViewport();\n\n        if (this.state.modalIsOpen && !this.isMobile) {\n            this._toggleModal();\n        }\n    }\n\n    private _getexpandRefinerCount = (refinerCount?: expandRefinersCount): void => {\n        switch(refinerCount) {\n            case expandRefinersCount.all:\n                this.expandrefinerCount = 0;\n                break;\n            case expandRefinersCount.one:\n                this.expandrefinerCount = 1;\n                break;\n            case expandRefinersCount.two:\n               this.expandrefinerCount = 2;\n               break;\n            case expandRefinersCount.three:\n                this.expandrefinerCount = 3;\n                break;\n            case expandRefinersCount.four:\n                this.expandrefinerCount = 4;\n                break;\n            default:\n                this.expandrefinerCount = 0;\n        }\n    }\n\n}\n"]}