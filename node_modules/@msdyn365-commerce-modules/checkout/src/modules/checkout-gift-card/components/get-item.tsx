/*---------------------------------------------------------------------------------------------
 *  Copyright (c) Microsoft Corporation. All rights reserved.
 *  Licensed under the MIT License. See License.txt in the project root for license information.
 *--------------------------------------------------------------------------------------------*/
import { Button, INodeProps } from '@msdyn365-commerce-modules/utilities';
import { IGiftCardExtend } from '@msdyn365-commerce/global-state';
import * as React from 'react';

export interface IGetItemInput {
    giftCard: IGiftCardExtend;
    canRemove: boolean;
    resources: {
        enteredGiftCardLabel: string;
        giftCardAvailableBalanceLabel: string;
        removeGiftCardButton: string;
    };
    getFormattedPrice(price?: number, currencyCode?: string): string;
    onRemoveGiftCard(giftCardNumber: string): void;
}

export interface IItem {
    itemProps: INodeProps;
    id?: string;
    selectedGiftCard: React.ReactNode;
    removeButton?: React.ReactNode;
}

/**
 *
 * GiftCardItem component
 * @extends {React.PureComponent<IGiftCardItemProps>}
 */
export const getItem = ({
    giftCard,
    getFormattedPrice,
    canRemove,
    onRemoveGiftCard,
    resources: { enteredGiftCardLabel, giftCardAvailableBalanceLabel, removeGiftCardButton }
}: IGetItemInput): IItem => {
    const balance = getFormattedPrice(giftCard.Balance, giftCard.CardCurrencyCode);
    const giftCardLast4Digit = (giftCard.Id || '').substr(-4);
    const onRemove = (): void => onRemoveGiftCard(giftCard.Id || '');

    const itemProps = {
        className: 'ms-checkout-gift-card__item'
    };

    const selectedGiftCard = (
        <span className='ms-checkout-gift-card__item-text'>
            {enteredGiftCardLabel} {giftCardLast4Digit} ({giftCardAvailableBalanceLabel}{' '}
            <span className='ms-checkout-gift-card__balance'>{balance}</span>)
        </span>
    );

    const removeButton = canRemove && (
        <Button className='ms-checkout-gift-card__btn-remove' onClick={onRemove}>
            {removeGiftCardButton}
        </Button>
    );

    return {
        itemProps,
        id: giftCard.Id,
        selectedGiftCard,
        removeButton
    };
};
