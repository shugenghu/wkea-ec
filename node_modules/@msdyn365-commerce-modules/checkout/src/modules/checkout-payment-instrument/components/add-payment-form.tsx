/*---------------------------------------------------------------------------------------------
 *  Copyright (c) Microsoft Corporation. All rights reserved.
 *  Licensed under the MIT License. See License.txt in the project root for license information.
 *--------------------------------------------------------------------------------------------*/
import { Button } from '@msdyn365-commerce-modules/utilities';
import classnames from 'classnames';
import * as React from 'react';
import defaultPaymentConnectorDropinStyle from '../payment-instrument.dropin.style';
import defaultPaymentConnectorPaypalStyle from '../payment-instrument.paypal.style';
import defaultPaymentConnectorStyle from '../payment-instrument.style';
import Iframe from './iframe';

export interface IAddPaymentFormProps {
    acceptPageUrl?: string;
    acceptPageContent?: string;
    iframeRef?: React.RefObject<Iframe>;
    canSubmit?: boolean;
    canCancel?: boolean;
    hasSelectedItem?: boolean;
    iFrameHeightOverride?: number;
    style?: string;
    requestUrlOrigin?: string;
    messageOrigin?: string;
    isFetchingPaymentConnector?: boolean;
    paymentStyleOverride?: string;
    resources: {
        cancelButtonText: string;
        submitButtonText: string;
        iframeAriaLabel: string;
    };
    onIFrameMessage?(event: MessageEvent): void;
    onSubmit?(): void;
    onCancel?(): void;
}

/**
 *
 * AddPaymentForm SFC
 * @extends {React.SFC<IAddPaymentFormProps>}
 */
const AddPaymentForm: React.SFC<IAddPaymentFormProps> = ({
    acceptPageUrl = '',
    acceptPageContent = '',
    onSubmit,
    onCancel,
    onIFrameMessage,
    iframeRef,
    canSubmit,
    canCancel,
    iFrameHeightOverride,
    requestUrlOrigin,
    messageOrigin,
    isFetchingPaymentConnector,
    paymentStyleOverride,
    resources: { cancelButtonText, submitButtonText, iframeAriaLabel }
}) => (
        <div className={classnames('ms-checkout-payment-instrument__add', { 'is-fetching': isFetchingPaymentConnector })}>
            <Iframe
                className='ms-checkout-payment-instrument__add'
                ref={iframeRef}
                iframeAriaLabel={iframeAriaLabel}
                displayContent={acceptPageContent}
                sourceUrl={acceptPageUrl}
                requestUrlOrigin={requestUrlOrigin}
                messageOrigin={messageOrigin}
                onIFrameMessage={onIFrameMessage}
                height={iFrameHeightOverride}
                css={paymentStyleOverride || (defaultPaymentConnectorStyle + defaultPaymentConnectorDropinStyle + defaultPaymentConnectorPaypalStyle)}
            />
            {canSubmit && (
                <Button
                    className='ms-checkout-payment-instrument__btn-save'
                    title={submitButtonText}
                    color='primary'
                    onClick={onSubmit}
                >
                    {submitButtonText}
                </Button>
            )}
            {canCancel && (
                <Button
                    className='ms-checkout-payment-instrument__btn-cancel'
                    title={cancelButtonText}
                    color='secondary'
                    onClick={onCancel}
                >
                    {cancelButtonText}
                </Button>
            )}
        </div>
    );

export default React.memo(AddPaymentForm);