import * as React from 'react';
import { IModuleStateProps } from '@msdyn365-commerce-modules/checkout-utilities';
import { IModuleProps, INodeProps } from '@msdyn365-commerce-modules/utilities';
import { ICheckoutTermsAndConditionsData } from './checkout-terms-and-conditions.data';
import { ICheckoutTermsAndConditionsProps } from './checkout-terms-and-conditions.props.autogenerated';
export interface ICheckoutTermsAndConditionsModuleProps extends ICheckoutTermsAndConditionsProps<ICheckoutTermsAndConditionsData>, IModuleStateProps {
}
export interface ICheckoutTermsAndConditions {
    termsAndConditionAcceptance: INodeProps;
    checkBox: React.ReactNode;
    description: React.ReactNode;
}
export interface ICheckoutTermsAndConditionsError {
    error: INodeProps;
    title: React.ReactNode;
    message: React.ReactNode;
}
export interface ICheckoutTermsAndConditionsViewState {
    isError: boolean;
    isShowSaveButton: boolean;
    isShowEditButton: boolean;
    isShowCancelButton: boolean;
}
export interface ICheckoutTermsAndConditionsViewProps extends ICheckoutTermsAndConditionsProps<{}> {
    checkoutTermsAndConditions: IModuleProps;
    isTermsAccepted: boolean;
    errorMessageData: string;
    viewState: ICheckoutTermsAndConditionsViewState;
    termsAndConditionsContent: ICheckoutTermsAndConditions;
    errorMessage?: ICheckoutTermsAndConditionsError;
    saveButton?: React.ReactNode;
    editButton?: React.ReactNode;
    cancelButton?: React.ReactNode;
    onChange(event: React.ChangeEvent<HTMLInputElement>): void;
    onSave(): void;
    onEdit(): void;
    onCancel(): void;
}
declare class CheckoutTermsAndConditions extends React.Component<ICheckoutTermsAndConditionsModuleProps> {
    private telemetryContent;
    private isTermsAccepted;
    private errorMessage?;
    constructor(props: ICheckoutTermsAndConditionsModuleProps);
    get isDataReady(): boolean;
    get isShowButtons(): boolean;
    get isAutoSave(): boolean;
    get defaultTermsAndConditionAcceptedValue(): boolean;
    componentDidMount(): Promise<void>;
    render(): JSX.Element | null;
    private getTermsAndConditions;
    private init;
    private getErrorMessage;
    private getCancelButton;
    private getSaveButton;
    private getEditButton;
    private onEdit;
    private onSubmit;
    private onUpdating;
    private setError;
    private onCancel;
    private updateTermsAndConditionsAcceptance;
    private clearError;
    private onChange;
}
export default CheckoutTermsAndConditions;
