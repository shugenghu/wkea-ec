import * as React from 'react';
import { IModuleStateManager } from '@msdyn365-commerce-modules/checkout-utilities';
import { IModuleProps } from '@msdyn365-commerce-modules/utilities';
import { ICheckoutCustomerAccountPaymentData } from './checkout-customer-account-payment.data';
import { ICheckoutCustomerAccountPaymentProps } from './checkout-customer-account-payment.props.autogenerated';
import { IAccountPaymentEditViewForm } from './components/get-account-payment-form-edit-mode';
import { IAccountPaymentSummaryViewForm } from './components/get-account-payment-form-summary-mode';
export interface ICheckoutCustomerAccountPaymentViewProps extends ICheckoutCustomerAccountPaymentProps<ICheckoutCustomerAccountPaymentData> {
    checkoutCustomerAccount: IModuleProps;
    summaryView: IAccountPaymentSummaryViewForm;
    editView: IAccountPaymentEditViewForm;
    moduleState: IModuleStateManager;
}
export interface ICheckoutCustomerAccountPaymentState {
    paymentAmount: number;
    isCreditSectionExpanded: boolean;
}
export declare class CheckoutCustomerAccountPayment extends React.Component<ICheckoutCustomerAccountPaymentViewProps, ICheckoutCustomerAccountPaymentState> {
    get isCustomerAccountPaymentEnabled(): boolean;
    get getLoyaltyAmount(): number;
    get getGiftCardAmount(): number;
    get maxPaymentAmount(): number;
    get errorMessage(): string | undefined;
    get currencyCode(): string | undefined;
    get availableCredit(): number;
    get orderTotal(): number;
    get formattedExcessCredit(): string | undefined;
    private baseClassName;
    constructor(props: ICheckoutCustomerAccountPaymentViewProps);
    componentDidMount(): Promise<void>;
    render(): JSX.Element | null;
    private getAvailableCredit;
    private addPayment;
    private toggleCreditSection;
    private init;
    private onChangePaymentAmount;
    private updateMaxAmount;
    private onEdit;
    private handleCancelOrSubmit;
    private removePayment;
}
export default CheckoutCustomerAccountPayment;
