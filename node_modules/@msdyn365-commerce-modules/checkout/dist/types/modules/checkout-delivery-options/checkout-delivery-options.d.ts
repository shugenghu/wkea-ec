import * as React from 'react';
import { IModuleStateProps } from '@msdyn365-commerce-modules/checkout-utilities';
import { IModuleProps, INodeProps } from '@msdyn365-commerce-modules/utilities';
import { DeliveryOption } from '@msdyn365-commerce/retail-proxy/dist/Entities/CommerceTypes.g';
import { ICheckoutDeliveryOptionsData } from './checkout-delivery-options.data';
import { ICheckoutDeliveryOptionsProps } from './checkout-delivery-options.props.autogenerated';
export interface ICheckoutDeliveryOptionsModuleProps extends ICheckoutDeliveryOptionsProps<ICheckoutDeliveryOptionsData>, IModuleStateProps {
}
export interface ICheckoutDeliveryOption {
    DeliveryOption: INodeProps;
    description?: React.ReactNode;
    price?: React.ReactNode;
}
export interface ICheckoutDeliveryOptionEdit extends ICheckoutDeliveryOption {
    code: string;
    radioButton?: React.ReactNode;
}
export interface ICheckoutDeliveryOptionsList {
    DeliveryOptionsList: INodeProps;
    list: ICheckoutDeliveryOptionEdit[];
}
export interface ICheckoutDeliveryOptionsError {
    Error: INodeProps;
    title: React.ReactNode;
    message: React.ReactNode;
}
export interface ICheckoutDeliveryOptionsViewState {
    isLoading: boolean;
    isError: boolean;
    isShowList: boolean;
    isShowSelected: boolean;
    isShowSaveButton: boolean;
    isShowEditButton: boolean;
    isShowCancelButton: boolean;
}
export interface ICheckoutDeliveryOptionsViewProps extends ICheckoutDeliveryOptionsProps<{}> {
    CheckoutDeliveryOptions: IModuleProps;
    selectedItemId: string;
    deliveryOptionsData: DeliveryOption[];
    isLoading: boolean;
    errorMessageData: string;
    viewState: ICheckoutDeliveryOptionsViewState;
    deliveryOptions?: ICheckoutDeliveryOptionsList;
    deliveryOptionSelected?: ICheckoutDeliveryOption;
    errorMessage?: ICheckoutDeliveryOptionsError;
    waiting?: React.ReactNode;
    saveButton?: React.ReactNode;
    editButton?: React.ReactNode;
    cancelButton?: React.ReactNode;
    onDeliveryOptionChange(event: React.ChangeEvent<HTMLInputElement>): void;
    onSave(): void;
    onEdit(): void;
    onCancel(): void;
}
declare class CheckoutDeliveryOptions extends React.Component<ICheckoutDeliveryOptionsModuleProps> {
    private selectedItemId;
    private deliveryOptions;
    private isLoading;
    private errorMessage?;
    private cartDeliveryMode?;
    private telemetryContent?;
    constructor(props: ICheckoutDeliveryOptionsModuleProps);
    componentDidMount(): Promise<void>;
    render(): JSX.Element | null;
    private init;
    private canShip;
    private isDeliveryModeExists;
    private getDeliveryOptionSelected;
    private getErrorMessage;
    private getDeliveryOptionList;
    private getSaveButton;
    private getEditButton;
    private getCancelButton;
    private setError;
    private clearError;
    private onSave;
    private onEdit;
    private onSubmit;
    private onCancel;
    private getSavedDeliveryOption;
    private updateCartDeliverySpecification;
    private getCartLinesForShipping;
    private getDeliveryOptions;
    private loadDeliveryOptions;
    private onDeliveryOptionChange;
    private onReady;
    private onUpdating;
    private onPending;
}
export default CheckoutDeliveryOptions;
