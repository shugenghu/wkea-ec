import * as React from 'react';
import { IModuleStateProps } from '@msdyn365-commerce-modules/checkout-utilities';
import { IModuleProps, INodeProps } from '@msdyn365-commerce-modules/utilities';
import { AsyncResultStatus } from '@msdyn365-commerce/core';
import { ICheckoutPaymentInstrumentData } from './checkout-payment-instrument.data';
import { ICheckoutPaymentInstrumentProps } from './checkout-payment-instrument.props.autogenerated';
import { IVisibilyObserverProps } from './components/with-visibility-observer';
export interface ICheckoutPaymentInstrumentModuleProps extends ICheckoutPaymentInstrumentProps<ICheckoutPaymentInstrumentData>, IModuleStateProps, IVisibilyObserverProps {
}
interface ICheckoutPaymentInstrumentState {
    errorMessage?: string;
    isFetchingPaymentConnector?: boolean;
    paymentConnectorHeight?: number;
    isPaymentVerificationRequried?: boolean;
    paymentVerificationPostData?: string;
    isPaymentProcessing?: boolean;
    isOverlayModal?: boolean;
}
export interface ICheckoutPaymentOverlayModal {
    modal: INodeProps;
}
export interface ICheckoutPaymentInstrumentViewProps extends ICheckoutPaymentInstrumentProps<{}>, ICheckoutPaymentInstrumentState {
    className?: string;
    checkoutPaymentInstrument: IModuleProps;
    waiting?: React.ReactNode;
    alert?: React.ReactNode;
    paymentInformation?: React.ReactNode;
    addPaymentForm?: React.ReactNode;
    overlayModal?: ICheckoutPaymentOverlayModal;
    isVisible?: boolean;
}
export declare class CheckoutPaymentInstrument extends React.Component<ICheckoutPaymentInstrumentModuleProps> {
    get getLoyaltyAmount(): number;
    get getCustomerAccountAmount(): number;
    get getGiftCardTotalAmount(): number;
    get shouldPaidByCard(): boolean;
    get isCartContainsItemsForShipping(): boolean;
    get isCartHasSelectedDeliveryMethods(): boolean;
    get asyncResultStatus(): AsyncResultStatus | undefined;
    get hasSelectedItem(): boolean;
    get isPaymentVerificationRedirection(): boolean;
    get requestUrlOrigin(): string;
    state: ICheckoutPaymentInstrumentState;
    private moduleClassName;
    private iframeRef;
    componentDidMount(): void;
    render(): JSX.Element | null;
    private onIFrameMessage;
    private handlePaymentResult;
    private handlePaymentCardPrefix;
    private handlePaymentRedirect;
    private showOverlayModal;
    private getCardTypeId;
    private redirectToPaymentVerification;
    private handlePaymentError;
    private getReturnUrl;
    private init;
    private setTerminalError;
    private setErrorMessage;
    private updatePaymentAcceptPageData;
    private postMessageToIframe;
    private handleAdditionalContext;
    private saveBillingAddress;
    private togglePayment;
    private onSubmit;
    private onCancel;
    private onEdit;
    private onContainerReady;
}
declare const _default: React.ComponentType<ICheckoutPaymentInstrumentModuleProps>;
export default _default;
