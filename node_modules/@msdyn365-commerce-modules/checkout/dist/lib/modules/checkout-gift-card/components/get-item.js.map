{"version":3,"file":"get-item.js","sourceRoot":"./src/","sources":["modules/checkout-gift-card/components/get-item.tsx"],"names":[],"mappings":"AAIA,OAAO,EAAE,MAAM,EAAc,MAAM,sCAAsC,CAAC;AAE1E,OAAO,KAAK,KAAK,MAAM,OAAO,CAAC;AA0B/B,MAAM,CAAC,MAAM,OAAO,GAAG,CAAC,EACpB,QAAQ,EACR,iBAAiB,EACjB,SAAS,EACT,gBAAgB,EAChB,SAAS,EAAE,EAAE,oBAAoB,EAAE,6BAA6B,EAAE,oBAAoB,EAAE,EAC5E,EAAS,EAAE;IACvB,MAAM,OAAO,GAAG,iBAAiB,CAAC,QAAQ,CAAC,OAAO,EAAE,QAAQ,CAAC,gBAAgB,CAAC,CAAC;IAC/E,MAAM,kBAAkB,GAAG,CAAC,QAAQ,CAAC,EAAE,IAAI,EAAE,CAAC,CAAC,MAAM,CAAC,CAAC,CAAC,CAAC,CAAC;IAC1D,MAAM,QAAQ,GAAG,GAAS,EAAE,CAAC,gBAAgB,CAAC,QAAQ,CAAC,EAAE,IAAI,EAAE,CAAC,CAAC;IAEjE,MAAM,SAAS,GAAG;QACd,SAAS,EAAE,6BAA6B;KAC3C,CAAC;IAEF,MAAM,gBAAgB,GAAG,CACrB,8BAAM,SAAS,EAAC,kCAAkC;QAC7C,oBAAoB;;QAAG,kBAAkB;;QAAI,6BAA6B;QAAE,GAAG;QAChF,8BAAM,SAAS,EAAC,gCAAgC,IAAE,OAAO,CAAQ;YAC9D,CACV,CAAC;IAEF,MAAM,YAAY,GAAG,SAAS,IAAI,CAC9B,oBAAC,MAAM,IAAC,SAAS,EAAC,mCAAmC,EAAC,OAAO,EAAE,QAAQ,IAClE,oBAAoB,CAChB,CACZ,CAAC;IAEF,OAAO;QACH,SAAS;QACT,EAAE,EAAE,QAAQ,CAAC,EAAE;QACf,gBAAgB;QAChB,YAAY;KACf,CAAC;AACN,CAAC,CAAC","sourcesContent":["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nimport { Button, INodeProps } from '@msdyn365-commerce-modules/utilities';\nimport { IGiftCardExtend } from '@msdyn365-commerce/global-state';\nimport * as React from 'react';\n\nexport interface IGetItemInput {\n    giftCard: IGiftCardExtend;\n    canRemove: boolean;\n    resources: {\n        enteredGiftCardLabel: string;\n        giftCardAvailableBalanceLabel: string;\n        removeGiftCardButton: string;\n    };\n    getFormattedPrice(price?: number, currencyCode?: string): string;\n    onRemoveGiftCard(giftCardNumber: string): void;\n}\n\nexport interface IItem {\n    itemProps: INodeProps;\n    id?: string;\n    selectedGiftCard: React.ReactNode;\n    removeButton?: React.ReactNode;\n}\n\n/**\n *\n * GiftCardItem component\n * @extends {React.PureComponent<IGiftCardItemProps>}\n */\nexport const getItem = ({\n    giftCard,\n    getFormattedPrice,\n    canRemove,\n    onRemoveGiftCard,\n    resources: { enteredGiftCardLabel, giftCardAvailableBalanceLabel, removeGiftCardButton }\n}: IGetItemInput): IItem => {\n    const balance = getFormattedPrice(giftCard.Balance, giftCard.CardCurrencyCode);\n    const giftCardLast4Digit = (giftCard.Id || '').substr(-4);\n    const onRemove = (): void => onRemoveGiftCard(giftCard.Id || '');\n\n    const itemProps = {\n        className: 'ms-checkout-gift-card__item'\n    };\n\n    const selectedGiftCard = (\n        <span className='ms-checkout-gift-card__item-text'>\n            {enteredGiftCardLabel} {giftCardLast4Digit} ({giftCardAvailableBalanceLabel}{' '}\n            <span className='ms-checkout-gift-card__balance'>{balance}</span>)\n        </span>\n    );\n\n    const removeButton = canRemove && (\n        <Button className='ms-checkout-gift-card__btn-remove' onClick={onRemove}>\n            {removeGiftCardButton}\n        </Button>\n    );\n\n    return {\n        itemProps,\n        id: giftCard.Id,\n        selectedGiftCard,\n        removeButton\n    };\n};\n"]}