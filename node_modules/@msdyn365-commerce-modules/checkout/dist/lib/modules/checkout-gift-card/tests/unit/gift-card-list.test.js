import { shallow } from 'enzyme';
import * as React from 'react';
import { GiftCardList } from '../../checkout-gift-card.view';
import { getList } from '../../components/get-list';
import { mockGiftCard1, mockGiftCard2, mockResources } from '../__mock__';
const mockData = {
    canRemove: true,
    getFormattedPrice: jest.fn(() => '$100'),
    onRemoveGiftCard: jest.fn(),
    resources: mockResources
};
describe('CheckoutGiftCard unit tests - GiftCardItem', () => {
    it('renders correctly it can remove gift card', () => {
        const mockProps = getList({
            ...mockData,
            giftCards: [mockGiftCard1, mockGiftCard2]
        });
        const component = mockProps && shallow(React.createElement(GiftCardList, Object.assign({}, mockProps)));
        expect(component).toMatchSnapshot();
    });
    it('renders correctly when it cannot remove gift card', () => {
        const mockProps = getList({
            ...mockData,
            giftCards: []
        });
        const component = mockProps && shallow(React.createElement(GiftCardList, Object.assign({}, mockProps)));
        expect(component).toMatchSnapshot();
    });
});
//# sourceMappingURL=gift-card-list.test.js.map