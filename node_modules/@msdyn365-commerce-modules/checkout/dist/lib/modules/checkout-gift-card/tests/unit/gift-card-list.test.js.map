{"version":3,"file":"gift-card-list.test.js","sourceRoot":"./src/","sources":["modules/checkout-gift-card/tests/unit/gift-card-list.test.tsx"],"names":[],"mappings":"AAMA,OAAO,EAAE,OAAO,EAAE,MAAM,QAAQ,CAAC;AACjC,OAAO,KAAK,KAAK,MAAM,OAAO,CAAC;AAC/B,OAAO,EAAE,YAAY,EAAE,MAAM,+BAA+B,CAAC;AAC7D,OAAO,EAAE,OAAO,EAAE,MAAM,2BAA2B,CAAC;AACpD,OAAO,EAAE,aAAa,EAAE,aAAa,EAAE,aAAa,EAAE,MAAM,aAAa,CAAC;AAE1E,MAAM,QAAQ,GAAG;IACb,SAAS,EAAE,IAAI;IACf,iBAAiB,EAAE,IAAI,CAAC,EAAE,CAAC,GAAG,EAAE,CAAC,MAAM,CAAC;IACxC,gBAAgB,EAAE,IAAI,CAAC,EAAE,EAAE;IAC3B,SAAS,EAAE,aAAa;CAC3B,CAAC;AACF,QAAQ,CAAC,4CAA4C,EAAE,GAAG,EAAE;IACxD,EAAE,CAAC,2CAA2C,EAAE,GAAG,EAAE;QACjD,MAAM,SAAS,GAAG,OAAO,CAAC;YACtB,GAAG,QAAQ;YACX,SAAS,EAAE,CAAC,aAAa,EAAE,aAAa,CAAC;SAC5C,CAAC,CAAC;QACH,MAAM,SAAS,GAAG,SAAS,IAAI,OAAO,CAAC,oBAAC,YAAY,oBAAK,SAAS,EAAI,CAAC,CAAC;QACxE,MAAM,CAAC,SAAS,CAAC,CAAC,eAAe,EAAE,CAAC;IACxC,CAAC,CAAC,CAAC;IAEH,EAAE,CAAC,mDAAmD,EAAE,GAAG,EAAE;QACzD,MAAM,SAAS,GAAG,OAAO,CAAC;YACtB,GAAG,QAAQ;YACX,SAAS,EAAE,EAAE;SAChB,CAAC,CAAC;QACH,MAAM,SAAS,GAAG,SAAS,IAAI,OAAO,CAAC,oBAAC,YAAY,oBAAK,SAAS,EAAI,CAAC,CAAC;QACxE,MAAM,CAAC,SAAS,CAAC,CAAC,eAAe,EAAE,CAAC;IACxC,CAAC,CAAC,CAAC;AACP,CAAC,CAAC,CAAC","sourcesContent":["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\n// tslint:disable-next-line:no-unused-variable\nimport { shallow } from 'enzyme';\nimport * as React from 'react';\nimport { GiftCardList } from '../../checkout-gift-card.view';\nimport { getList } from '../../components/get-list';\nimport { mockGiftCard1, mockGiftCard2, mockResources } from '../__mock__';\n\nconst mockData = {\n    canRemove: true,\n    getFormattedPrice: jest.fn(() => '$100'),\n    onRemoveGiftCard: jest.fn(),\n    resources: mockResources\n};\ndescribe('CheckoutGiftCard unit tests - GiftCardItem', () => {\n    it('renders correctly it can remove gift card', () => {\n        const mockProps = getList({\n            ...mockData,\n            giftCards: [mockGiftCard1, mockGiftCard2]\n        });\n        const component = mockProps && shallow(<GiftCardList {...mockProps} />);\n        expect(component).toMatchSnapshot();\n    });\n\n    it('renders correctly when it cannot remove gift card', () => {\n        const mockProps = getList({\n            ...mockData,\n            giftCards: []\n        });\n        const component = mockProps && shallow(<GiftCardList {...mockProps} />);\n        expect(component).toMatchSnapshot();\n    });\n});\n"]}