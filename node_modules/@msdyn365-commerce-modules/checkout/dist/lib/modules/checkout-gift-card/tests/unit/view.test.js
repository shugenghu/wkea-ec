import { buildMockModuleProps } from '@msdyn365-commerce/core';
import { render } from 'enzyme';
import * as React from 'react';
import CheckoutGiftCardView from '../../checkout-gift-card.view';
describe('Order confirmation unit tests - View', () => {
    it('renders correctly', () => {
        const moduleProps = buildMockModuleProps({}, {});
        const mockProps = {
            ...moduleProps,
            errorMessage: '',
            giftCardNumber: '',
            giftCardPin: '',
            giftCardExp: '',
            isFetchingGiftCard: false,
            className: 'mock class',
            checkoutGiftCardProps: {
                moduleProps,
                className: 'mock-module'
            },
            showGiftCard: {
                title: '{title}',
                list: {
                    listProps: { className: 'mock-node-list' },
                    list: [
                        {
                            itemProps: { className: 'mock-node-item' },
                            selectedGiftCard: '{selectedGiftCard}'
                        }
                    ]
                }
            },
            addGiftCard: {
                form: {
                    formProps: { className: 'mock-node-form' },
                    label: '{label}',
                    inputPinLabel: '{inputPinLabel}',
                    inputExpLabel: '{inputExpLabel}',
                    alertFieldLabel: '{alertFieldLabel}',
                    alert: '{alert}',
                    inputProps: { className: 'mock-node-form' },
                    inputNumProps: { className: 'mock-node-inputNum-form' },
                    inputPinProps: { className: 'mock-node-inputPin-form' },
                    inputExpProps: { className: 'mock-node-inputExp-form' },
                    inputNumber: '{inputNumber}',
                    inputPin: '{inputPin}',
                    inputExp: '{inputExp}',
                    applyButton: '{applyButton}',
                    supportExternalGiftCard: false,
                    showGiftCardPinInput: false,
                    showGiftCardExpInput: false
                },
                list: {
                    listProps: { className: 'mock-node-list' },
                    list: [
                        {
                            itemProps: { className: 'mock-node-item' },
                            selectedGiftCard: '{selectedGiftCard}',
                            removeButton: '{removeButton}'
                        }
                    ]
                }
            }
        };
        const component = render(React.createElement(CheckoutGiftCardView, Object.assign({}, mockProps)));
        expect(component).toMatchSnapshot();
    });
});
//# sourceMappingURL=view.test.js.map