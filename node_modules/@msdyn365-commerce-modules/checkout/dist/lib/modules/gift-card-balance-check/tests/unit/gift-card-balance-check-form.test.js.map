{"version":3,"file":"gift-card-balance-check-form.test.js","sourceRoot":"./src/","sources":["modules/gift-card-balance-check/tests/unit/gift-card-balance-check-form.test.tsx"],"names":[],"mappings":"AAMA,OAAO,EAAE,OAAO,EAAE,MAAM,QAAQ,CAAC;AACjC,OAAO,KAAK,KAAK,MAAM,OAAO,CAAC;AAC/B,OAAO,EAAE,OAAO,EAAE,MAAM,2BAA2B,CAAC;AACpD,OAAO,EAAE,IAAI,IAAI,YAAY,EAAE,MAAM,oCAAoC,CAAC;AAC1E,OAAO,EAAE,aAAa,EAAE,MAAM,aAAa,CAAC;AAE5C,MAAM,QAAQ,GAAG;IACb,YAAY,EAAE,EAAE;IAChB,cAAc,EAAE,EAAE;IAClB,WAAW,EAAE,EAAE;IACf,WAAW,EAAE,EAAE;IACf,SAAS,EAAE,aAAa;IACxB,qBAAqB,EAAE,IAAI,CAAC,EAAE,EAAE;IAChC,kBAAkB,EAAE,IAAI,CAAC,EAAE,EAAE;IAC7B,kBAAkB,EAAE,IAAI,CAAC,EAAE,EAAE;IAC7B,eAAe,EAAE,IAAI,CAAC,EAAE,EAAE;CAC7B,CAAC;AAEF,QAAQ,CAAC,gDAAgD,EAAE,GAAG,EAAE;IAC5D,EAAE,CAAC,gCAAgC,EAAE,GAAG,EAAE;QACtC,MAAM,SAAS,GAAG,OAAO,CAAC,QAAQ,CAAC,CAAC;QACpC,MAAM,SAAS,GAAG,OAAO,CAAC,oBAAC,YAAY,oBAAK,SAAS,EAAI,CAAC,CAAC;QAC3D,MAAM,CAAC,SAAS,CAAC,CAAC,eAAe,EAAE,CAAC;QACpC,MAAM,KAAK,GAAG,SAAS,CAAC,IAAI,CAAC,8CAA8C,CAAC,CAAC;QAC7E,MAAM,KAAK,GAAG,EAAE,MAAM,EAAE,EAAE,KAAK,EAAE,EAAE,EAAE,EAAE,CAAC;QACxC,KAAK,CAAC,QAAQ,CAAC,QAAQ,EAAE,KAAK,CAAC,CAAC;QAChC,MAAM,CAAC,QAAQ,CAAC,qBAAqB,CAAC,CAAC,UAAU,EAAE,CAAC;IACxD,CAAC,CAAC,CAAC;IAEH,EAAE,CAAC,gCAAgC,EAAE,GAAG,EAAE;QACtC,MAAM,SAAS,GAAG,OAAO,CAAC;YACtB,GAAG,QAAQ;YACX,cAAc,EAAE,KAAK;SACxB,CAAC,CAAC;QACH,MAAM,SAAS,GAAG,OAAO,CAAC,oBAAC,YAAY,oBAAK,SAAS,EAAI,CAAC,CAAC;QAC3D,MAAM,CAAC,SAAS,CAAC,CAAC,eAAe,EAAE,CAAC;IACxC,CAAC,CAAC,CAAC;IAEH,EAAE,CAAC,gCAAgC,EAAE,GAAG,EAAE;QACtC,MAAM,SAAS,GAAG,OAAO,CAAC;YACtB,GAAG,QAAQ;YACX,YAAY,EAAE,oBAAoB;SACrC,CAAC,CAAC;QACH,MAAM,SAAS,GAAG,OAAO,CAAC,oBAAC,YAAY,oBAAK,SAAS,EAAI,CAAC,CAAC;QAC3D,MAAM,CAAC,SAAS,CAAC,CAAC,eAAe,EAAE,CAAC;IACxC,CAAC,CAAC,CAAC;AACP,CAAC,CAAC,CAAC","sourcesContent":["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\n// tslint:disable-next-line:no-unused-variable\nimport { shallow } from 'enzyme';\nimport * as React from 'react';\nimport { getForm } from '../../components/get-form';\nimport { Form as GiftCardForm } from '../../gift-card-balance-check.view';\nimport { mockResources } from '../__mock__';\n\nconst mockData = {\n    errorMessage: '',\n    giftCardNumber: '',\n    giftCardPin: '',\n    giftCardExp: '',\n    resources: mockResources,\n    onEnterGiftCardNumber: jest.fn(),\n    onEnterGiftCardPin: jest.fn(),\n    onEnterGiftCardExp: jest.fn(),\n    onApplyGiftCard: jest.fn()\n};\n\ndescribe('GiftCardBalanceCheck unit tests - GiftCardForm', () => {\n    it('renders correctly - empty form', () => {\n        const mockProps = getForm(mockData);\n        const component = shallow(<GiftCardForm {...mockProps} />);\n        expect(component).toMatchSnapshot();\n        const input = component.find('input.ms-gift-card-balance-check__input-text');\n        const event = { target: { value: '' } };\n        input.simulate('change', event);\n        expect(mockData.onEnterGiftCardNumber).toBeCalled();\n    });\n\n    it('renders correctly - with value', () => {\n        const mockProps = getForm({\n            ...mockData,\n            giftCardNumber: '000'\n        });\n        const component = shallow(<GiftCardForm {...mockProps} />);\n        expect(component).toMatchSnapshot();\n    });\n\n    it('renders correctly - with error', () => {\n        const mockProps = getForm({\n            ...mockData,\n            errorMessage: 'Some error message'\n        });\n        const component = shallow(<GiftCardForm {...mockProps} />);\n        expect(component).toMatchSnapshot();\n    });\n});\n"]}