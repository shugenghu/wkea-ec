{"version":3,"file":"view.test.js","sourceRoot":"./src/","sources":["modules/gift-card-balance-check/tests/unit/view.test.tsx"],"names":[],"mappings":"AAMA,OAAO,EAAE,oBAAoB,EAAE,MAAM,yBAAyB,CAAC;AAC/D,OAAO,EAAE,MAAM,EAAE,MAAM,QAAQ,CAAC;AAChC,OAAO,KAAK,KAAK,MAAM,OAAO,CAAC;AAE/B,OAAO,wBAAwB,MAAM,oCAAoC,CAAC;AAE1E,QAAQ,CAAC,wCAAwC,EAAE,GAAG,EAAE;IACpD,EAAE,CAAC,mBAAmB,EAAE,GAAG,EAAE;QACzB,MAAM,WAAW,GAAmC,oBAAoB,CAAC,EAAE,EAAE,EAAE,CAAmC,CAAC;QACnH,MAAM,SAAS,GAAG;YACd,GAAG,WAAW;YACd,YAAY,EAAE,EAAE;YAChB,cAAc,EAAE,EAAE;YAClB,WAAW,EAAE,EAAE;YACf,WAAW,EAAE,EAAE;YACf,kBAAkB,EAAE,KAAK;YAEzB,yBAAyB,EAAE;gBACvB,WAAW;gBACX,SAAS,EAAE,aAAa;aAC3B;YACD,IAAI,EAAE;gBACF,SAAS,EAAE,EAAE,SAAS,EAAE,gBAAgB,EAAE;gBAC1C,KAAK,EAAE,SAAS;gBAChB,aAAa,EAAE,iBAAiB;gBAChC,aAAa,EAAE,iBAAiB;gBAChC,eAAe,EAAE,mBAAmB;gBACpC,KAAK,EAAE,SAAS;gBAChB,UAAU,EAAE,EAAE,SAAS,EAAE,gBAAgB,EAAE;gBAC3C,aAAa,EAAE,EAAE,SAAS,EAAE,yBAAyB,EAAE;gBACvD,aAAa,EAAE,EAAE,SAAS,EAAE,yBAAyB,EAAE;gBACvD,aAAa,EAAE,EAAE,SAAS,EAAE,yBAAyB,EAAE;gBACvD,WAAW,EAAE,eAAe;gBAC5B,QAAQ,EAAE,YAAY;gBACtB,QAAQ,EAAE,YAAY;gBACtB,WAAW,EAAE,eAAe;gBAC5B,uBAAuB,EAAE,KAAK;gBAC9B,oBAAoB,EAAE,KAAK;gBAC3B,oBAAoB,EAAE,KAAK;aAC9B;YACD,IAAI,EAAE;gBACF,SAAS,EAAE,EAAE,SAAS,EAAE,gBAAgB,EAAE;gBAC1C,gBAAgB,EAAE,oBAAoB;aACzC;SACJ,CAAC;QACF,MAAM,SAAS,GAAG,MAAM,CAAC,oBAAC,wBAAwB,oBAAK,SAAS,EAAI,CAAC,CAAC;QACtE,MAAM,CAAC,SAAS,CAAC,CAAC,eAAe,EAAE,CAAC;IACxC,CAAC,CAAC,CAAC;AACP,CAAC,CAAC,CAAC","sourcesContent":["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\n// tslint:disable-next-line:no-unused-variable\nimport { buildMockModuleProps } from '@msdyn365-commerce/core';\nimport { render } from 'enzyme';\nimport * as React from 'react';\nimport { IGiftCardBalanceCheckProps } from '../../gift-card-balance-check.props.autogenerated';\nimport GiftCardBalanceCheckView from '../../gift-card-balance-check.view';\n\ndescribe('GiftCardBalanceCheck unit tests - View', () => {\n    it('renders correctly', () => {\n        const moduleProps: IGiftCardBalanceCheckProps<{}> = buildMockModuleProps({}, {}) as IGiftCardBalanceCheckProps<{}>;\n        const mockProps = {\n            ...moduleProps,\n            errorMessage: '',\n            giftCardNumber: '',\n            giftCardPin: '',\n            giftCardExp: '',\n            isFetchingGiftCard: false,\n\n            giftCardBalanceCheckProps: {\n                moduleProps,\n                className: 'mock-module'\n            },\n            form: {\n                formProps: { className: 'mock-node-form' },\n                label: '{label}',\n                inputPinLabel: '{inputPinLabel}',\n                inputExpLabel: '{inputExpLabel}',\n                alertFieldLabel: '{alertFieldLabel}',\n                alert: '{alert}',\n                inputProps: { className: 'mock-node-form' },\n                inputNumProps: { className: 'mock-node-inputNum-form' },\n                inputPinProps: { className: 'mock-node-inputPin-form' },\n                inputExpProps: { className: 'mock-node-inputExp-form' },\n                inputNumber: '{inputNumber}',\n                inputPin: '{inputPin}',\n                inputExp: '{inputExp}',\n                applyButton: '{applyButton}',\n                supportExternalGiftCard: false,\n                showGiftCardPinInput: false,\n                showGiftCardExpInput: false\n            },\n            item: {\n                itemProps: { className: 'mock-node-item' },\n                selectedGiftCard: '{selectedGiftCard}',\n            }\n        };\n        const component = render(<GiftCardBalanceCheckView {...mockProps} />);\n        expect(component).toMatchSnapshot();\n    });\n});\n"]}