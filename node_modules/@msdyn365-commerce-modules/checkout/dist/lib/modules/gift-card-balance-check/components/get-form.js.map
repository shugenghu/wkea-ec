{"version":3,"file":"get-form.js","sourceRoot":"./src/","sources":["modules/gift-card-balance-check/components/get-form.tsx"],"names":[],"mappings":"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","sourcesContent":["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nimport { Alert, Button, INodeProps, NodeTag } from '@msdyn365-commerce-modules/utilities';\nimport classnames from 'classnames';\nimport * as React from 'react';\nimport { showAdditionalFields } from '../gift-card-balance-check.props.autogenerated';\n\nexport interface IGetFormInput {\n    errorMessage: string;\n    giftCardNumber: string;\n    giftCardPin: string;\n    giftCardExp: string;\n    inputRef?: React.RefObject<HTMLInputElement>;\n    inputPinRef?: React.RefObject<HTMLInputElement>;\n    inputExpRef?: React.RefObject<HTMLInputElement>;\n    supportExternalGiftCard?: boolean;\n    additionalFields?: showAdditionalFields;\n    resources: {\n        balanceCheckButton: string;\n        giftCardFormLabel: string;\n        giftCardNumberLabel: string;\n        giftCardPinLabel: string;\n        giftCardExpLabel: string;\n        giftCardAlertLabel: string;\n        giftCardPinPlaceholderText: string;\n        giftCardExpPlaceholderText: string;\n    };\n    onEnterGiftCardNumber(giftCardNumber: string): void;\n    onEnterGiftCardPin(giftCardPin: string): void;\n    onEnterGiftCardExp(giftCardExp: string): void;\n    onApplyGiftCard(): Promise<void>;\n}\n\nexport interface IForm {\n    formProps: INodeProps;\n    label: React.ReactNode;\n    inputPinLabel: React.ReactNode;\n    inputExpLabel: React.ReactNode;\n    alert: React.ReactNode;\n    inputProps: INodeProps;\n    inputNumProps: INodeProps;\n    inputPinProps: INodeProps;\n    inputExpProps: INodeProps;\n    inputNumber: React.ReactNode;\n    inputPin: React.ReactNode;\n    inputExp: React.ReactNode;\n    applyButton: React.ReactNode;\n    supportExternalGiftCard: boolean | undefined;\n    showGiftCardPinInput: boolean | undefined;\n    showGiftCardExpInput: boolean | undefined;\n    alertFieldLabel: React.ReactNode;\n}\n\n// tslint:disable-next-line:max-func-body-length\nexport const getForm = (options: IGetFormInput): IForm => {\n    const {\n        errorMessage,\n        inputRef,\n        inputPinRef,\n        inputExpRef,\n        giftCardNumber,\n        giftCardPin,\n        giftCardExp,\n        onEnterGiftCardNumber,\n        onEnterGiftCardPin,\n        onEnterGiftCardExp,\n        onApplyGiftCard,\n        supportExternalGiftCard,\n        additionalFields,\n        resources: { balanceCheckButton, giftCardFormLabel, giftCardNumberLabel, giftCardPinLabel, giftCardExpLabel,\n            giftCardAlertLabel, giftCardPinPlaceholderText, giftCardExpPlaceholderText }\n    } = options;\n\n    const onApply = async (e: React.SyntheticEvent): Promise<void> => {\n        e.preventDefault();\n        await onApplyGiftCard();\n    };\n\n    const onChangeNumber = (e: React.ChangeEvent<HTMLInputElement>) => {\n        const value = (e.target.value || '').replace(new RegExp('[<>]', 'gi'), '');\n        onEnterGiftCardNumber(value);\n    };\n\n    const onChangePin = (e: React.ChangeEvent<HTMLInputElement>) => {\n        const value = (e.target.value || '').replace(new RegExp('[<>]', 'gi'), '');\n        onEnterGiftCardPin(value);\n    };\n\n    const onChangeExp = (e: React.ChangeEvent<HTMLInputElement>) => {\n        const value = (e.target.value || '').replace(new RegExp('[<>]', 'gi'), '');\n        onEnterGiftCardExp(value);\n    };\n\n    const formProps = {\n        className: classnames('ms-gift-card-balance-check__form', { 'is-invalid': !!errorMessage }),\n        onSubmit: onApply,\n        tag: 'form' as NodeTag\n    };\n\n    const label = (\n        <label id='ms-gift-card-balance-check__label' className='ms-gift-card-balance-check__input-label'>\n            {giftCardFormLabel}\n        </label>\n    );\n\n    const inputPinLabel = (\n        <label id='ms-gift-card-balance-check__input-pin-label' className='ms-gift-card-balance-check__input-pin-label'>\n            {giftCardPinLabel}\n        </label>\n    );\n\n    const inputExpLabel = (\n        <label id='ms-gift-card-balance-check__input-exp-label' className='ms-gift-card-balance-check__input-exp-label'>\n            {giftCardExpLabel}\n        </label>\n    );\n\n    const alertFieldLabel = (\n        <label id='ms-gift-card-balance-check__input-alert' className='ms-gift-card-balance-check__input-alert-label'>\n            {giftCardAlertLabel}\n        </label>\n    );\n\n    const alert = (\n        <Alert\n            tag='span'\n            id='ms-gift-card-balance-check__error'\n            className='ms-gift-card-balance-check__input-error'\n            role='alert'\n            assertive={false}\n            fade={false}\n            includeAlertClass={false}\n            isOpen={!!errorMessage}\n        >\n            {errorMessage}\n        </Alert>\n    );\n\n    const inputProps = {\n        className: 'ms-gift-card-balance-check__input-fields'\n    };\n\n    const inputNumProps = {\n        className: 'ms-gift-card-balance-check__input-num-fields'\n    };\n\n    const inputPinProps = {\n        className: 'ms-gift-card-balance-check__input-pin-fields'\n    };\n\n    const inputExpProps = {\n        className: 'ms-gift-card-balance-check__input-exp-fields'\n    };\n\n    const inputNumber = (\n        <input\n            ref={inputRef}\n            type='text'\n            className='ms-gift-card-balance-check__input-text form-control'\n            aria-label={giftCardNumberLabel}\n            onChange={onChangeNumber}\n            value={giftCardNumber}\n            aria-labelledby='ms-gift-card-balance-check__label ms-gift-card-balance-check__error'\n        />\n    );\n\n    const inputPin = (\n        <input\n            ref={inputPinRef}\n            type='text'\n            className='ms-gift-card-balance-check__input-pin-text form-contol'\n            aria-label={giftCardPinLabel}\n            placeholder={giftCardPinPlaceholderText}\n            onChange={onChangePin}\n            value={giftCardPin}\n            aria-labelledby='ms-gift-card-balance-check__label ms-gift-card-balance-check__error'\n        />\n    );\n\n    const inputExp = (\n        <input\n            ref={inputExpRef}\n            type='text'\n            className='ms-gift-card-balance-check__input-exp-text form-contol'\n            aria-label={giftCardExpLabel}\n            placeholder={giftCardExpPlaceholderText}\n            onChange={onChangeExp}\n            value={giftCardExp}\n            aria-labelledby='ms-gift-card-balance-check__label ms-gift-card-balance-check__error'\n        />\n    );\n\n    const applyButton = (\n        <Button\n            className='ms-gift-card-balance-check__btn-apply'\n            onClick={onApply}\n            aria-label={balanceCheckButton}\n            disabled={!giftCardNumber}\n        >\n            {balanceCheckButton}\n        </Button>\n    );\n\n    let showGiftCardPinInput = false;\n    let showGiftCardExpInput = false;\n\n    switch(additionalFields) {\n        case showAdditionalFields.pin:\n            showGiftCardPinInput = true;\n            break;\n        case showAdditionalFields.expirationDate:\n            showGiftCardExpInput = true;\n            break;\n        case showAdditionalFields.pinAndExpirationDate:\n            showGiftCardPinInput = true;\n            showGiftCardExpInput = true;\n            break;\n        default:\n    }\n\n    return {\n        formProps,\n        label,\n        inputPinLabel,\n        inputExpLabel,\n        alert,\n        inputProps,\n        inputNumProps,\n        inputPinProps,\n        inputExpProps,\n        inputNumber,\n        inputPin,\n        inputExp,\n        applyButton,\n        supportExternalGiftCard,\n        showGiftCardPinInput,\n        showGiftCardExpInput,\n        alertFieldLabel\n    };\n};\n"]}