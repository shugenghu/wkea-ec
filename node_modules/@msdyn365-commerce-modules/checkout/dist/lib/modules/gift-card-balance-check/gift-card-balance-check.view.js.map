{"version":3,"file":"gift-card-balance-check.view.js","sourceRoot":"./src/","sources":["modules/gift-card-balance-check/gift-card-balance-check.view.tsx"],"names":[],"mappings":"AAAA;;;GAGG;AAEH,OAAO,EAAE,MAAM,EAAE,IAAI,EAAE,MAAM,sCAAsC,CAAC;AACpE,OAAO,KAAK,KAAK,MAAM,OAAO,CAAC;AAI/B,MAAM,CAAC,MAAM,IAAI,GAAoB,CAAC,EAAE,SAAS,EAAE,KAAK,EAAE,aAAa,EAAE,aAAa,EAAE,KAAK,EAAE,UAAU,EAAE,aAAa,EACpH,aAAa,EAAE,aAAa,EAAE,WAAW,EAAE,QAAQ,EAAE,QAAQ,EAAE,WAAW,EAAE,uBAAuB,EAAE,oBAAoB,EAAE,oBAAoB,EAAE,eAAe,EAAE,EAAE,EAAE,CAAC,CACvK,oBAAC,IAAI,oBAAK,SAAS;IACd,KAAK;IACL,uBAAuB,CAAC,CAAC;QACtB,oBAAC,IAAI,oBAAK,UAAU;YAChB,oBAAC,IAAI,oBAAK,aAAa;gBAClB,KAAK;gBACL,WAAW,CACT;YACN,oBAAoB;gBACjB,oBAAC,IAAI,oBAAK,aAAa;oBAClB,aAAa;oBACb,QAAQ,CACN;YAEV,oBAAoB;gBACjB,oBAAC,IAAI,oBAAK,aAAa;oBAClB,aAAa;oBACb,QAAQ,CACN;YAEV,CAAC,oBAAoB,IAAI,oBAAoB,CAAC,IAAI,eAAe,CAC/D;QACX,CAAC,CAAC;YAAG,KAAK;YAAE,WAAW,CAAI;IAE1B,WAAW,CACT,CACV,CAAC;AAEF,MAAM,CAAC,MAAM,IAAI,GAAoB,CAAC,EAAE,SAAS,EAAE,gBAAgB,EAAE,EAAE,EAAE,CAAC,CACtE,oBAAC,IAAI,oBAAK,SAAS,GACd,gBAAgB,CACd,CACV,CAAC;AAEF,MAAM,wBAAwB,GAA6C,KAAK,CAAC,EAAE;IAC/E,MAAM,EAAE,yBAAyB,EAAE,IAAI,EAAE,IAAI,EAAE,GAAG,KAAK,CAAC;IACxD,OAAO,CACH,oBAAC,MAAM,oBAAK,yBAAyB;QAChC,IAAI,IAAI,oBAAC,IAAI,oBAAK,IAAI,EAAI;QAC1B,IAAI,IAAI,oBAAC,IAAI,oBAAK,IAAI,EAAI,CACtB,CACZ,CAAC;AACN,CAAC,CAAC;AAEF,eAAe,wBAAwB,CAAC","sourcesContent":["/*!\n * Copyright (c) Microsoft Corporation.\n * All rights reserved. See LICENSE in the project root for license information.\n */\n\nimport { Module, Node } from '@msdyn365-commerce-modules/utilities';\nimport * as React from 'react';\nimport { IForm, IItem } from './components';\nimport { IGiftCardBalanceCheckViewProps } from './gift-card-balance-check';\n\nexport const Form: React.FC<IForm> = ({ formProps, label, inputPinLabel, inputExpLabel, alert, inputProps, inputNumProps,\n    inputPinProps, inputExpProps, inputNumber, inputPin, inputExp, applyButton, supportExternalGiftCard, showGiftCardPinInput, showGiftCardExpInput, alertFieldLabel }) => (\n    <Node {...formProps}>\n        {alert}\n        {supportExternalGiftCard ?\n            <Node {...inputProps}>\n                <Node {...inputNumProps}>\n                    {label}\n                    {inputNumber}\n                </Node>\n                {showGiftCardPinInput &&\n                    <Node {...inputPinProps}>\n                        {inputPinLabel}\n                        {inputPin}\n                    </Node>\n                }\n                {showGiftCardExpInput &&\n                    <Node {...inputExpProps}>\n                        {inputExpLabel}\n                        {inputExp}\n                    </Node>\n                }\n                {(showGiftCardPinInput || showGiftCardExpInput) && alertFieldLabel}\n            </Node>\n        : <>{label}{inputNumber}</>\n        }\n        {applyButton}\n    </Node>\n);\n\nexport const Item: React.FC<IItem> = ({ itemProps, selectedGiftCard }) => (\n    <Node {...itemProps}>\n        {selectedGiftCard}\n    </Node>\n);\n\nconst GiftCardBalanceCheckView: React.FC<IGiftCardBalanceCheckViewProps> = props => {\n    const { giftCardBalanceCheckProps, form, item } = props;\n    return (\n        <Module {...giftCardBalanceCheckProps}>\n            {form && <Form {...form} />}\n            {item && <Item {...item} />}\n        </Module>\n    );\n};\n\nexport default GiftCardBalanceCheckView;\n"]}