{"version":3,"file":"checkout-section-container.test.js","sourceRoot":"./src/","sources":["modules/checkout-section-container/tests/checkout-section-container.test.tsx"],"names":[],"mappings":"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","sourcesContent":["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { buildHydratedMockActionContext, buildMockModuleProps, ICoreContext } from '@msdyn365-commerce/core';\nimport { render, shallow } from 'enzyme';\n/// <reference types=\"jest\" />\n// tslint:disable-next-line:no-unused-variable\nimport * as React from 'react';\nimport CheckoutPlainContainerWithState, { CheckoutPlainContainer, ICheckoutSectionContainerModuleProps } from '../checkout-section-container';\nimport { ICheckoutSectionContainerConfig } from '../checkout-section-container.props.autogenerated';\nimport View from '../checkout-section-container.view';\n\nconst mockConfig: ICheckoutSectionContainerConfig = {};\nconst mockActions = {};\nlet mockContext: ICoreContext;\nconst MockItem: React.FC<{ id: string }> = ({ id }) => <>{`{${id}}`}</>;\nconst mockSlot1 = <MockItem id='item_1' />;\nconst mockSlot2 = <MockItem id='item_2' />;\nlet mockModuleState = {};\nlet moduleProps: ICheckoutSectionContainerModuleProps;\nlet mockItem1State = {};\nlet mockItem2State = {};\n\ndescribe('CheckoutPlainContainer', () => {\n    beforeEach(() => {\n        mockItem1State = {\n            hasModuleState: true,\n            isReady: true,\n            isDisabled: false,\n            onEdit: jest.fn(),\n            onSubmit: jest.fn(),\n            onCancel: jest.fn(),\n            setHasError: jest.fn()\n        };\n        mockItem2State = {\n            hasModuleState: true,\n            isReady: true,\n            isDisabled: false,\n            onEdit: jest.fn(),\n            onSubmit: jest.fn(),\n            onCancel: jest.fn(),\n            setHasError: jest.fn()\n        };\n\n        mockModuleState = {\n            childIds: ['item_1', 'item_2'],\n            init: jest.fn(),\n            hasModuleState: true,\n            hasExternalSubmitGroup: true,\n            hasError: false,\n            hasInitialized: true,\n            isReady: true,\n            getModule: jest.fn(id => {\n                if (id === 'item_1') {\n                    return mockItem1State;\n                } else if (id === 'item_2') {\n                    return mockItem2State;\n                }\n                return;\n            })\n        };\n\n        // @ts-ignore\n        mockContext = {\n            actionContext: buildHydratedMockActionContext()\n        };\n\n        moduleProps = {\n            ...(buildMockModuleProps({}, mockActions, mockConfig, mockContext) as ICheckoutSectionContainerModuleProps),\n            // @ts-ignore\n            renderView: View,\n            slots: {\n                primary: [mockSlot1, mockSlot2]\n            },\n            enableControl: true,\n            // @ts-ignore\n            moduleState: mockModuleState\n        };\n    });\n\n    it('has slot items', () => {\n        const component = render(<CheckoutPlainContainerWithState {...moduleProps} />);\n        expect(component).toMatchSnapshot();\n    });\n\n    it('has no slot item', () => {\n        moduleProps = {\n            ...moduleProps,\n            // @ts-ignore\n            slots: undefined\n        };\n        const component = render(<CheckoutPlainContainerWithState {...moduleProps} />);\n        expect(component).toMatchSnapshot();\n    });\n\n    it('has non initialized item', () => {\n        mockItem1State = {\n            ...mockItem1State,\n            hasInitialized: false\n        };\n        const component = render(<CheckoutPlainContainer {...moduleProps} />);\n        expect(component).toMatchSnapshot();\n    });\n\n    it('has disabled item', () => {\n        mockItem1State = {\n            ...mockItem1State,\n            isDisabled: true\n        };\n        const component = render(<CheckoutPlainContainer {...moduleProps} />);\n        expect(component.find('.ms-checkout-section-container__item').hasClass('hidden')).toBe(true);\n    });\n\n    it('onSubmit', () => {\n        mockItem1State = {\n            ...mockItem1State,\n            isReady: false\n        };\n        // @ts-ignore\n        const component = shallow(<CheckoutPlainContainer {...moduleProps} />);\n        // @ts-ignore\n        component.instance().onSubmit();\n        // @ts-ignore\n        expect(mockItem1State.onSubmit).toBeCalled();\n        // @ts-ignore\n        expect(mockItem2State.onSubmit).not.toBeCalled();\n    });\n\n    it('onCancel', () => {\n        mockItem1State = {\n            ...mockItem1State,\n            isReady: false\n        };\n        // @ts-ignore\n        const component = shallow(<CheckoutPlainContainer {...moduleProps} />);\n        // @ts-ignore\n        component.instance().onCancel();\n        // @ts-ignore\n        expect(mockItem1State.onCancel).toBeCalled();\n        // @ts-ignore\n        expect(mockItem2State.onCancel).not.toBeCalled();\n    });\n\n    it('onEdit', () => {\n        // @ts-ignore\n        const component = shallow(<CheckoutPlainContainer {...moduleProps} />);\n        // @ts-ignore\n        component.instance().onEdit();\n        // @ts-ignore\n        expect(mockItem1State.onEdit).toBeCalled();\n        // @ts-ignore\n        expect(mockItem2State.onEdit).toBeCalled();\n    });\n\n    it('componentDidUpdate', () => {\n        mockModuleState = {\n            ...mockModuleState,\n            hasError: true\n        };\n\n        moduleProps = {\n            ...moduleProps,\n            // @ts-ignore\n            moduleState: mockModuleState\n        };\n\n        // @ts-ignore\n        const component = shallow(<CheckoutPlainContainer {...moduleProps} />);\n        // @ts-ignore\n        component.instance().componentDidUpdate();\n        // @ts-ignore\n        expect(mockItem1State.onEdit).toBeCalled();\n        // @ts-ignore\n        expect(mockItem2State.onEdit).toBeCalled();\n    });\n});\n"]}