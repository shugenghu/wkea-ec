{"version":3,"file":"checkout-payment-instrument.js","sourceRoot":"./src/","sources":["modules/checkout-payment-instrument/checkout-payment-instrument.tsx"],"names":[],"mappings":";AAIA,OAAO,UAAU,MAAM,YAAY,CAAC;AACpC,OAAO,GAAG,MAAM,YAAY,CAAC;AAC7B,OAAO,EAAE,MAAM,EAAE,QAAQ,EAAE,QAAQ,EAAE,IAAI,EAAE,MAAM,MAAM,CAAC;AACxD,OAAO,EAAE,QAAQ,EAAE,MAAM,YAAY,CAAC;AACtC,OAAO,KAAK,KAAK,MAAM,OAAO,CAAC;AAE/B,OAAO,EAAqB,eAAe,EAAE,MAAM,+CAA+C,CAAC;AACnG,OAAO,EAA4B,KAAK,EAAE,MAAM,sCAAsC,CAAC;AACvF,OAAO,EAAqB,UAAU,EAAE,MAAM,yBAAyB,CAAC;AAExE,OAAO,EACH,oCAAoC,EACvC,MAAM,qEAAqE,CAAC;AAC7E,OAAO,EACH,qBAAqB,EACxB,MAAM,+EAA+E,CAAC;AAKvF,OAAO,+BAA+B,EAAE,EACpC,8BAA8B,EACjC,MAAM,yCAAyC,CAAC;AAGjD,OAAO,uBAAuB,MAAM,+BAA+B,CAAC;AACpE,OAAO,cAAc,MAAM,oBAAoB,CAAC;AAEhD,OAAO,2BAA2B,MAAM,kCAAkC,CAAC;AAC3E,OAAO,gBAAgB,MAAM,sBAAsB,CAAC;AACpD,OAAO,sBAEN,MAAM,uCAAuC,CAAC;AAC/C,OAAO,EACH,mCAAmC,EAAE,+BAA+B,EACpE,6BAA6B,EAChC,MAAM,8BAA8B,CAAC;AAqCtC,IAAa,yBAAyB,GAAtC,MAAa,yBAA0B,SAAQ,KAAK,CAAC,SAAgD;IAArG;;QAoGW,UAAK,GAAoC;YAC5C,0BAA0B,EAAE,IAAI;SACnC,CAAC;QAEM,oBAAe,GAAW,gCAAgC,CAAC;QAC3D,cAAS,GAA4B,KAAK,CAAC,SAAS,EAAE,CAAC;QAwGvD,oBAAe,GAAG,KAAK,EAAE,KAAmB,EAAiB,EAAE;YACnE,IAAI,MAAM,CAAC;YACX,IAAI;gBACA,IAAI,OAAO,KAAK,CAAC,IAAI,KAAK,QAAQ,EAAE;oBAChC,OAAO;iBACV;gBACD,MAAM,GAAG,IAAI,CAAC,KAAK,CAAC,KAAK,CAAC,IAAI,CAAC,CAAC;aACnC;YAAC,OAAO,KAAK,EAAE;gBACZ,IAAI,CAAC,gBAAgB,CAAC,KAAK,CAAC,CAAC;gBAC7B,OAAO;aACV;YAED,MAAM,sBAAsB,GAAG,IAAI,CAAC,KAAK,CAAC,MAAM,CAAC,sBAAsB,CAAC;YACxE,MAAM,kBAAkB,GAAG,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC,sBAAsB,CAAC,MAAM,EAAE,kBAAkB,CAAC;YAC7F,IAAI,CAAC,MAAM,IAAI,CAAC,MAAM,CAAC,IAAI,IAAI,CAAC,sBAAsB,IAAI,MAAM,CAAC,EAAE,KAAK,kBAAkB,CAAC,EAAE;gBACzF,OAAO;aACV;YAED,MAAM,EAAE,IAAI,EAAE,KAAK,EAAE,GAAG,MAAM,CAAC;YAE/B,QAAQ,IAAI,EAAE;gBACV,KAAK,+BAA+B,CAAC,MAAM;oBAEvC,IAAI,CAAC,QAAQ,CAAC;wBACV,0BAA0B,EAAE,KAAK;wBACjC,sBAAsB,EAAE,KAAK;qBAChC,CAAC,CAAC;oBACH,OAAO;gBACX,KAAK,+BAA+B,CAAC,MAAM;oBACvC,IAAI,CAAC,mBAAmB,CAAC,KAAK,CAAC,CAAC;oBAChC,OAAO;gBACX,KAAK,+BAA+B,CAAC,UAAU;oBAC3C,MAAM,IAAI,CAAC,uBAAuB,CAAC,KAAK,CAAC,CAAC;oBAC1C,OAAO;gBACX,KAAK,+BAA+B,CAAC,KAAK;oBACtC,IAAI,CAAC,kBAAkB,CAAC,KAAK,CAAC,CAAC;oBAC/B,OAAO;gBACX,KAAK,+BAA+B,CAAC,QAAQ;oBACzC,IAAI,CAAC,qBAAqB,CAAC,KAAK,CAAC,CAAC;oBAClC,OAAO;gBACX,KAAK,+BAA+B,CAAC,WAAW;oBAC5C,IAAI,CAAC,gBAAgB,CAAC,IAAI,CAAC,CAAC;oBAC5B,OAAO;gBACX,KAAK,+BAA+B,CAAC,WAAW;oBAC5C,IAAI,CAAC,gBAAgB,CAAC,KAAK,CAAC,CAAC;oBAC7B,OAAO;gBACX;oBAEI,OAAO;aACd;QACL,CAAC,CAAC;QAGM,wBAAmB,GAAG,CAAC,gBAAwB,EAAE,iCAA0C,KAAK,EAAQ,EAAE;YAC9G,MAAM,EACF,IAAI,EAAE,EACF,QAAQ,EACR,sBAAsB,EACzB,EACD,MAAM,EAAE,EACJ,gBAAgB,EACnB,EACJ,GAAG,IAAI,CAAC,KAAK,CAAC;YAEf,MAAM,MAAM,GAAG,QAAQ,CAAC,MAAM,EAAE,YAAY,CAAC,IAAI,CAAC,EAAE,IAAI,EAAE,CAAC;YAC3D,MAAM,kBAAkB,GAAG,sBAAsB,CAAC,MAAM,EAAE,kBAAkB,CAAC;YAE7E,MAAM,QAAQ,GAAG;gBACb,SAAS,EAAE,IAAI,CAAC,YAAY,EAAE;gBAC9B,GAAG,CAAC,kBAAkB,IAAI,EAAE,kBAAkB,EAAE,kBAAkB,EAAE,CAAC;aACxE,CAAC;YAEF,oCAAoC,CAAC,EAAE,aAAa,EAAE,IAAI,CAAC,KAAK,CAAC,OAAO,CAAC,aAAa,EAAE,EAAE,gBAAgB,EAAE,EAAE,EAAE,MAAM,EAAE,QAAQ,CAAC;iBAC5H,IAAI,CAAC,KAAK,EAAC,uBAAuB,EAAC,EAAE;gBAElC,MAAM,EAAE,UAAU,EAAE,oBAAoB,EAAE,iBAAiB,EAAE,GAAG,uBAAuB,IAAI,EAAE,CAAC;gBAE9F,MAAM,IAAI,CAAC,kBAAkB,CAAC,oBAAoB,CAAC,CAAC;gBAEpD,IAAI,iBAAiB,EAAE;oBACnB,IAAI,CAAC,uBAAuB,CAAC,iBAAiB,CAAC,CAAC;iBACnD;qBAAM;oBACH,IAAI,CAAC,oBAAoB,EAAE;wBACvB,IAAI,CAAC,gBAAgB,CAAC,IAAI,KAAK,CAAC,+BAA+B,CAAC,CAAC,CAAC;wBAClE,OAAO;qBACV;oBACD,MAAM,aAAa,GAAG,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC,QAAQ,CAAC,MAAM,CAAC;oBACtD,IAAI,aAAa,EAAE;wBAIf,IAAI,CAAC,aAAa,CAAC,UAAU,EAAE;4BAC3B,MAAM,UAAU,GACZ,oBAAoB;gCACpB,oBAAoB,CAAC,aAAa;gCAClC,oBAAoB,CAAC,aAAa,CAAC,gBAAgB,CAAC;4BACxD,IAAI,UAAU,EAAE;gCACZ,MAAM,aAAa,CAAC,gBAAgB,CAAC,EAAE,aAAa,EAAE,UAAU,EAAE,CAAC,CAAC;6BACvE;yBACJ;wBAED,IAAI,CAAC,oBAAoB,CAAC,UAAU,EAAE;4BAClC,MAAM,UAAU,GAAG,MAAM,IAAI,CAAC,aAAa,CAAC,aAAa,CAAC,UAAU,IAAI,EAAE,CAAC,CAAC;4BAC5E,IAAI,CAAC,UAAU,EAAE;gCACb,MAAM,KAAK,GAAG,IAAI,KAAK,CAAC,2CAA2C,CAAC,CAAC;gCACrE,KAAK,CAAC,IAAI,GAAG,kBAAkB,CAAC;gCAChC,IAAI,CAAC,gBAAgB,CAAC,KAAK,CAAC,CAAC;gCAC7B,OAAO;6BACV;4BAED,oBAAoB,CAAC,UAAU,GAAG,UAAU,CAAC;yBAChD;wBAED,MAAM,aAAa,CAAC,gBAAgB,CAAC,EAAE,aAAa,EAAE,UAAU,EAAE,CAAC,CAAC;wBACpE,MAAM,aAAa,CAAC,0BAA0B,CAAC,EAAE,uBAAuB,EAAE,oBAAoB,EAAE,CAAC,CAAC;wBAClG,MAAM,aAAa,CAAC,uBAAuB,CAAC,EAAE,oBAAoB,EAAE,gBAAgB,EAAE,CAAC,CAAC;wBAGxF,IAAI,8BAA8B,EAAE;4BAChC,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC,QAAQ,CAAC,MAAM,EAAE,YAAY,CAAC,WAAW,CAAC,EAAE,CAAC,CAAC;yBACjE;wBAED,IAAI,CAAC,KAAK,CAAC,WAAW,CAAC,WAAW,CAAC,KAAK,CAAC,CAAC;wBAC1C,IAAI,CAAC,KAAK,CAAC,WAAW,CAAC,OAAO,EAAE,CAAC;wBACjC,IAAI,CAAC,QAAQ,CAAC;4BACV,aAAa,EAAE,IAAI;4BACnB,YAAY,EAAE,IAAI;yBACrB,CAAC,CAAC;wBACH,IAAI,CAAC,KAAK,CAAC,WAAW,CAAC,oBAAoB,CAAC,IAAI,CAAC,CAAC;qBACrD;iBACJ;YACL,CAAC,CAAC;iBACD,KAAK,CAAC,KAAK,CAAC,EAAE;gBAGX,IAAI,CAAC,2BAA2B,EAAE,CAAC;gBACnC,IAAI,CAAC,gBAAgB,CAAC,KAAK,CAAC,CAAC;gBAC7B,OAAO;YACX,CAAC,CAAC;iBACD,OAAO,CAAC,GAAG,EAAE;gBACV,IAAI,CAAC,QAAQ,CAAC;oBACV,mBAAmB,EAAE,KAAK;iBAC7B,CAAC,CAAC;YACP,CAAC,CAAC,CAAC;QACX,CAAC,CAAC;QAGM,4BAAuB,GAAG,KAAK,EAAE,UAAkB,EAAiB,EAAE;YAC1E,MAAM,aAAa,GAAG,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC,QAAQ,CAAC,MAAM,CAAC;YACtD,IAAI,aAAa,EAAE;gBACf,MAAM,aAAa,CAAC,gBAAgB,CAAC,EAAE,aAAa,EAAE,UAAU,EAAE,CAAC,CAAC;aACvE;QACL,CAAC,CAAC;QAGM,0BAAqB,GAAG,CAAC,YAAoB,EAAQ,EAAE;YAC3D,IAAI,CAAC,QAAQ,CAAC;gBACV,6BAA6B,EAAE,IAAI;gBACnC,2BAA2B,EAAE,YAAY;aAC5C,CAAC,CAAC;YACH,IAAI,CAAC,KAAK,CAAC,WAAW,CAAC,WAAW,CAAC,KAAK,CAAC,CAAC;YAC1C,IAAI,CAAC,KAAK,CAAC,WAAW,CAAC,OAAO,EAAE,CAAC;QACrC,CAAC,CAAC;QAEM,qBAAgB,GAAG,CAAC,MAAe,EAAQ,EAAE;YACjD,IAAI,CAAC,QAAQ,CAAC,EAAE,cAAc,EAAE,MAAM,EAAE,CAAC,CAAC;QAC9C,CAAC,CAAC;QAEM,kBAAa,GAAG,KAAK,EAAE,aAAqB,EAAE,EAA+B,EAAE;YACnF,IAAI;gBACA,MAAM,QAAQ,GAAG,MAAM,qBAAqB,CAAC,EAAE,aAAa,EAAE,IAAI,CAAC,KAAK,CAAC,OAAO,CAAC,aAAa,EAAE,EAAE,UAAU,KAAmB,CAAC;gBAChI,IAAI,QAAQ,IAAI,QAAQ,CAAC,MAAM,GAAG,CAAC,EAAE;oBACjC,OAAO,QAAQ,CAAC,CAAC,CAAC,CAAC,MAAM,CAAC;iBAC7B;aACJ;YAAC,OAAO,KAAK,EAAE;gBACZ,IAAI,CAAC,KAAK,CAAC,OAAO,CAAC,SAAS,CAAC,KAAK,CAAC,uCAAuC,EAAE,KAAK,CAAC,CAAC;aACtF;YACD,OAAO,SAAS,CAAC;QACrB,CAAC,CAAC;QAEM,kCAA6B,GAAG,KAAK,IAAmB,EAAE;YAC9D,MAAM,EAAE,6BAA6B,EAAE,2BAA2B,EAAE,GAAG,IAAI,CAAC,KAAK,CAAC;YAClF,IAAI,CAAC,6BAA6B,IAAI,CAAC,2BAA2B,EAAE;gBAChE,OAAO;aACV;YAED,MAAM,aAAa,GAAG,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC,QAAQ,CAAC,MAAM,CAAC;YACtD,IAAI,aAAa,EAAE;gBACf,MAAM,aAAa,CAAC,uBAAuB,CAAC,EAAE,oBAAoB,EAAE,IAAI,CAAC,KAAK,CAAC,MAAM,CAAC,gBAAgB,EAAE,CAAC,CAAC;gBAC1G,MAAM,aAAa,CAAC,iBAAiB,CAAC,EAAE,CAAC,CAAC;aAC7C;YAED,MAAM,YAAY,GAAG,IAAI,CAAC,KAAK,CAAC,2BAA2B,CAAC,CAAC;YAC7D,MAAM,EAAE,GAAG,EAAE,IAAI,EAAE,GAAG,YAAY,CAAC;YACnC,MAAM,IAAI,GAAG,QAAQ,CAAC,aAAa,CAAC,MAAM,CAAC,CAAC;YAE5C,IAAI,CAAC,MAAM,GAAG,MAAM,CAAC;YACrB,IAAI,CAAC,MAAM,GAAG,GAAG,CAAC;YAElB,KAAK,MAAM,YAAY,IAAI,MAAM,CAAC,IAAI,CAAC,IAAI,CAAC,EAAE;gBAC1C,MAAM,OAAO,GAAG,QAAQ,CAAC,aAAa,CAAC,OAAO,CAAC,CAAC;gBAChD,OAAO,CAAC,IAAI,GAAG,YAAY,CAAC;gBAC5B,OAAO,CAAC,KAAK,GAAG,IAAI,CAAC,YAAY,CAAC,CAAC;gBACnC,IAAI,CAAC,WAAW,CAAC,OAAO,CAAC,CAAC;aAC7B;YAED,QAAQ,CAAC,IAAI,CAAC,WAAW,CAAC,IAAI,CAAC,CAAC;YAChC,IAAI,CAAC,MAAM,EAAE,CAAC;QAClB,CAAC,CAAC;QAEM,uBAAkB,GAAG,CAAC,KAA6B,EAAQ,EAAE;YACjE,MAAM,EACF,SAAS,EAAE,EAAE,yBAAyB,GAAG,gEAAgE,EAAE,EAC9G,GAAG,IAAI,CAAC,KAAK,CAAC;YACf,IAAI,CAAC,KAAK,IAAI,KAAK,CAAC,MAAM,KAAK,CAAC,EAAE;gBAE9B,IAAI,CAAC,eAAe,CAAC,yBAAyB,CAAC,CAAC;gBAChD,OAAO;aACV;YACD,IAAI,CAAC,eAAe,CAAC,KAAK,CAAC,GAAG,CAAC,CAAC,MAA2B,EAAE,EAAE,CAAC,MAAM,CAAC,OAAO,CAAC,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC,CAAC;QAChG,CAAC,CAAC;QAEM,iBAAY,GAAG,GAAW,EAAE;YAChC,IAAI,SAAS,GAAG,UAAU,CAAC,UAAU,EAAE,IAAI,CAAC,KAAK,CAAC,OAAO,CAAC,aAAa,CAAC,IAAI,EAAE,CAAC;YAE/E,MAAM,iBAAiB,GAAG,IAAI,MAAM,CAAC,iBAAiB,EAAE,GAAG,CAAC,CAAC;YAC7D,MAAM,aAAa,GAAG,iBAAiB,CAAC,IAAI,CAAC,SAAS,CAAC,CAAC;YACxD,IAAI,MAAM,IAAI,CAAC,aAAa,EAAE;gBAC1B,SAAS,GAAG,GAAG,MAAM,CAAC,QAAQ,CAAC,MAAM,GAAG,SAAS,EAAE,CAAC;aACvD;YAED,OAAO,GAAG,SAAS,GAAG,SAAS,CAAC,OAAO,CAAC,GAAG,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,GAAG,MAAM,CAAC;QAC1E,CAAC,CAAA;QAGO,SAAI,GAAG,GAAS,EAAE;YACtB,IAAI,CAAC,KAAK,CAAC,WAAW,CAAC,IAAI,CAAC;gBACxB,MAAM,EAAE,IAAI,CAAC,MAAM;gBACnB,QAAQ,EAAE,IAAI,CAAC,QAAQ;gBACvB,QAAQ,EAAE,IAAI,CAAC,QAAQ;gBACvB,gBAAgB,EAAE,IAAI,CAAC,gBAAgB;gBACvC,aAAa,EAAE,KAAK;gBACpB,MAAM,EAAE,IAAI,CAAC,gBAAgB,CAAC,CAAC,CAAC,UAAU,CAAC,CAAC,CAAC,UAAU;aAC1D,CAAC,CAAC;YAEH,MAAM,EACF,IAAI,EAAE,EACF,QAAQ,EACX,EACD,MAAM,EACT,GAAG,IAAI,CAAC,KAAK,CAAC;YAEf,IAAI,IAAI,CAAC,gCAAgC,EAAE;gBACvC,IAAI,MAAM,CAAC,gBAAgB,KAAK,QAAQ,CAAC,MAAM,EAAE,iBAAiB,EAAE;oBAChE,MAAM,EAAE,eAAe,EAAE,GAAG,IAAI,CAAC,KAAK,CAAC,OAAO,CAAC,OAAO,CAAC;oBAEvD,MAAM,QAAQ,GAAG,IAAI,CAAC,IAAI,CAAC,SAAS,CAAC,eAAe,CAAC,CAAC,CAAC;oBAEvD,IAAI,CAAC,QAAQ,CAAC;wBACV,mBAAmB,EAAE,IAAI;qBAC5B,CAAC,CAAC;oBAEH,IAAI,CAAC,KAAK,CAAC,WAAW,CAAC,SAAS,EAAE,CAAC;oBACnC,IAAI,CAAC,mBAAmB,CAAC,QAAQ,EAAE,IAAI,CAAC,CAAC;iBAC5C;qBAAM;oBACH,IAAI,CAAC,KAAK,CAAC,WAAW,CAAC,MAAM,EAAE,CAAC;iBACnC;aACJ;iBAAM;gBACH,IAAI,IAAI,CAAC,iBAAiB,KAAK,QAAQ,EAAE;oBACrC,IAAI,CAAC,QAAQ,CAAC;wBACV,0BAA0B,EAAE,KAAK;qBACpC,CAAC,CAAC;oBACH,IAAI,CAAC,gBAAgB,CAAC,IAAI,KAAK,CAAC,qBAAqB,CAAC,CAAC,CAAC;iBAC3D;aACJ;QACL,CAAC,CAAA;QAGO,qBAAgB,GAAG,CAAC,aAAoB,EAAQ,EAAE;YACtD,IAAI,CAAC,KAAK,CAAC,SAAS,CAAC,SAAS,CAAC,aAAa,CAAC,CAAC;YAC9C,IAAI,CAAC,KAAK,CAAC,WAAW,CAAC,WAAW,CAAC,IAAI,CAAC,CAAC;YACzC,IAAI,CAAC,KAAK,CAAC,WAAW,CAAC,UAAU,EAAE,CAAC;YACpC,MAAM,EACF,SAAS,EAAE,EAAE,mBAAmB,EAAE,oBAAoB,EAAE,EAC3D,GAAG,IAAI,CAAC,KAAK,CAAC;YACf,IAAI,YAAY,GAAG,mBAAmB,CAAC;YAEvC,QAAQ,aAAa,CAAC,IAAI,EAAE;gBACxB,KAAK,kBAAkB,CAAC,CAAC;oBACrB,YAAY,GAAG,oBAAoB,CAAC;oBACpC,MAAM;iBACT;gBACD,QAAQ;aACX;YAED,IAAI,CAAC,QAAQ,CAAC;gBACV,aAAa;gBACb,YAAY,EAAE,YAAY;aAC7B,CAAC,CAAC;QACP,CAAC,CAAC;QAGM,oBAAe,GAAG,CAAC,YAAoB,EAAQ,EAAE;YACrD,IAAI,CAAC,KAAK,CAAC,SAAS,CAAC,KAAK,CAAC,YAAY,CAAC,CAAC;YACzC,IAAI,CAAC,KAAK,CAAC,WAAW,CAAC,WAAW,CAAC,IAAI,CAAC,CAAC;YACzC,IAAI,CAAC,KAAK,CAAC,WAAW,CAAC,UAAU,EAAE,CAAC;YACpC,IAAI,CAAC,QAAQ,CAAC;gBACV,YAAY;aACf,CAAC,CAAC;QACP,CAAC,CAAC;QAEM,gCAA2B,GAAG,KAAK,IAAmB,EAAE;YAC5D,MAAM,EACF,OAAO,EAAE,EAAE,aAAa,EAAE,EAC1B,MAAM,EAAE,EAAE,kBAAkB,EAAE,gBAAgB,EAAE,EAChD,OAAO,EAAE,EAAE,OAAO,EAAE,EAAE,WAAW,EAAE,EAAE,EACrC,IAAI,EAAE,EAAE,QAAQ,EAAE,EACrB,GAAG,IAAI,CAAC,KAAK,CAAC;YAEf,MAAM,KAAK,GAAG;gBACV,kBAAkB,EAAE,kBAAkB;gBACtC,gBAAgB,EAAE,gBAAgB;gBAClC,WAAW,EAAE,WAAW;aAC3B,CAAC;YAEF,IAAI,CAAC,QAAQ,CAAC;gBACV,0BAA0B,EAAE,IAAI;aACnC,CAAC,CAAC;YAEH,MAAM,aAAa,GAAG,QAAQ,CAAC,MAAM,CAAC;YACtC,IAAI,aAAa,EAAE;gBACf,MAAM,aAAa,CAAC,uBAAuB,CAAC,EAAE,oBAAoB,EAAE,SAAS,EAAE,CAAC,CAAC;gBACjF,MAAM,aAAa,CAAC,gBAAgB,CAAC,EAAE,aAAa,EAAE,SAAS,EAAE,CAAC,CAAC;gBACnE,MAAM,aAAa,CAAC,0BAA0B,CAAC,EAAE,uBAAuB,EAAE,SAAS,EAAE,CAAC,CAAC;aAC1F;YAED,+BAA+B,CAAC,IAAI,8BAA8B,CAAC,KAAK,CAAC,EAAE,aAAa,CAAC;iBACpF,IAAI,CAAC,kBAAkB,CAAC,EAAE;gBAEvB,aAAa,CAAC,MAAM,CAAC,IAAI,8BAA8B,CAAC,KAAK,CAAC,EAAE,EAAE,iBAAiB,EAAE,EAAE,EAAE,aAAa,EAAE,EAAE,EAAE,CAAC,CAAC;gBAI9G,aAAa,CAAC,MAAM,CAAC,IAAI,8BAA8B,CAAC,KAAK,CAAC,EAAE,kBAAkB,CAAC,CAAC;gBACpF,IAAI,CAAC,QAAQ,CAAC,EAAE,kBAAkB,EAAE,kBAAkB,CAAC,kBAAkB,EAAE,CAAC,CAAC;YACjF,CAAC,CAAC;iBACD,KAAK,CAAC,CAAC,KAAY,EAAE,EAAE;gBACpB,IAAI,CAAC,gBAAgB,CAAC,KAAK,CAAC,CAAC;gBAE7B,IAAI,CAAC,QAAQ,CAAC;oBACV,0BAA0B,EAAE,KAAK;iBACpC,CAAC,CAAC;gBAEH,aAAa,CAAC,MAAM,CAAC,IAAI,8BAA8B,CAAC,KAAK,CAAC,EAAE,EAAE,iBAAiB,EAAE,EAAE,EAAE,aAAa,EAAE,EAAE,EAAE,CAAC,CAAC;YAClH,CAAC,CAAC,CAAC;QACX,CAAC,CAAC;QAEM,wBAAmB,GAAG,CAAC,OAAe,EAAE,EAAE;YAC9C,MAAM,WAAW,GAAG,GAAG,CAAC,IAAI,CAAC,SAAS,EAAE,qBAAqB,CAAC,CAAC;YAC/D,IAAI,WAAW,EAAE;gBACb,IAAI,CAAC,KAAK,CAAC,WAAW,CAAC,SAAS,EAAE,CAAC;gBACnC,WAAW,CAAC,OAAO,CAAC,CAAC;aACxB;QACL,CAAC,CAAA;QAEO,4BAAuB,GAAG,CAAC,iBAAyB,EAAQ,EAAE;YAClE,MAAM,OAAO,GAAG,mCAAmC,CAAC,iBAAiB,CAAC,CAAC;YACvE,IAAI,CAAC,mBAAmB,CAAC,OAAO,CAAC,CAAC;QACtC,CAAC,CAAC;QAEM,uBAAkB,GAAG,KAAK,EAAE,oBAA2C,EAAiB,EAAE;YAC9F,MAAM,EAAE,kBAAkB,EAAE,GAAG,IAAI,CAAC,KAAK,CAAC,MAAM,CAAC;YACjD,MAAM,aAAa,GAAG,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC,QAAQ,CAAC,MAAM,CAAC;YAEtD,IAAI,aAAa,IAAI,kBAAkB,IAAI,oBAAoB,IAAI,oBAAoB,CAAC,GAAG,EAAE;gBACzF,MAAM,cAAc,GAAY;oBAC5B,wBAAwB,EAAE,oBAAoB,CAAC,OAAO;oBACtD,IAAI,EAAE,oBAAoB,CAAC,KAAK,KAAK,KAAK,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,oBAAoB,CAAC,KAAK;oBAC5E,MAAM,EAAE,oBAAoB,CAAC,QAAQ;oBACrC,YAAY,EAAE,oBAAoB,CAAC,QAAQ;oBAC3C,IAAI,EAAE,oBAAoB,CAAC,IAAI;oBAC/B,KAAK,EAAE,oBAAoB,CAAC,KAAK;oBACjC,OAAO,EAAE,oBAAoB,CAAC,GAAG;oBACjC,KAAK,EAAE,oBAAoB,CAAC,KAAK;iBACpC,CAAC;gBACF,MAAM,aAAa,CAAC,oBAAoB,CAAC,EAAE,iBAAiB,EAAE,cAAc,EAAE,CAAC,CAAC;aACnF;QACL,CAAC,CAAC;QAGM,kBAAa,GAAG,GAAG,EAAE;YACzB,IAAI,IAAI,CAAC,gBAAgB,IAAI,IAAI,CAAC,KAAK,CAAC,WAAW,CAAC,UAAU,EAAE;gBAC5D,IAAI,CAAC,KAAK,CAAC,WAAW,CAAC,UAAU,EAAE,CAAC;aACvC;iBAAM,IAAI,CAAC,IAAI,CAAC,gBAAgB,IAAI,CAAC,IAAI,CAAC,KAAK,CAAC,WAAW,CAAC,UAAU,EAAE;gBACrE,IAAI,CAAC,KAAK,CAAC,WAAW,CAAC,WAAW,CAAC,KAAK,CAAC,CAAC;gBAC1C,IAAI,CAAC,KAAK,CAAC,WAAW,CAAC,SAAS,EAAE,CAAC;aACtC;QACL,CAAC,CAAC;QAGM,aAAQ,GAAG,GAAS,EAAE;YAC1B,MAAM,EAAE,gBAAgB,GAAG,IAAI,EAAE,GAAG,IAAI,CAAC,KAAK,CAAC,MAAM,CAAC;YACtD,IAAI,gBAAgB,EAAE;gBAClB,IAAI,CAAC,mBAAmB,CAAC,6BAA6B,EAAE,CAAC,CAAC;aAC7D;iBAAM;gBACH,IAAI,CAAC,KAAK,CAAC,WAAW,CAAC,MAAM,EAAE,CAAC;aACnC;QACL,CAAC,CAAC;QAGM,aAAQ,GAAG,GAAS,EAAE;YAC1B,IAAI,IAAI,CAAC,eAAe,EAAE;gBACtB,IAAI,CAAC,KAAK,CAAC,WAAW,CAAC,OAAO,EAAE,CAAC;aACpC;iBAAM;gBACH,IAAI,CAAC,KAAK,CAAC,WAAW,CAAC,UAAU,EAAE,CAAC;aACvC;QACL,CAAC,CAAC;QAGM,WAAM,GAAG,GAAS,EAAE;YACxB,IAAI,CAAC,KAAK,CAAC,WAAW,CAAC,UAAU,EAAE,CAAC;YAGpC,IAAI,CAAC,2BAA2B,EAAE,CAAC;QACvC,CAAC,CAAC;QAGM,qBAAgB,GAAG,GAAS,EAAE;YAElC,IAAI,CAAC,6BAA6B,EAAE,CAAC;YACrC,IAAI,CAAC,KAAK,CAAC,WAAW,CAAC,oBAAoB,CAAC,KAAK,CAAC,CAAC;QACvD,CAAC,CAAA;IACL,CAAC;IA/nBa,IAAI,gBAAgB;QAC1B,MAAM,aAAa,GAAG,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC,QAAQ,CAAC,MAAM,CAAC;QACtD,OAAO,aAAa,IAAI,aAAa,CAAC,aAAa,CAAC,CAAC,CAAC,aAAa,CAAC,aAAa,CAAC,CAAC,CAAC,CAAC,CAAC;IAC1F,CAAC;IAES,IAAI,wBAAwB;QAClC,MAAM,aAAa,GAAG,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC,QAAQ,CAAC,MAAM,CAAC;QACtD,OAAO,aAAa,IAAI,aAAa,CAAC,qBAAqB,CAAC,CAAC,CAAC,aAAa,CAAC,qBAAqB,CAAC,CAAC,CAAC,CAAC,CAAC;IAC1G,CAAC;IAES,IAAI,sBAAsB;QAChC,MAAM,aAAa,GAAG,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC,QAAQ,CAAC,MAAM,CAAC;QACtD,IAAI,CAAC,aAAa,IAAI,CAAC,aAAa,CAAC,eAAe,EAAE;YAClD,OAAO,CAAC,CAAC;SACZ;QACD,OAAO,aAAa,CAAC,eAAe,CAAC,MAAM,CAAC,CAAC,KAAa,EAAE,QAAyB,EAAE,EAAE;YACrF,MAAM,OAAO,GAAW,QAAQ,CAAC,OAAO,IAAI,CAAC,CAAC;YAC9C,OAAO,KAAK,GAAG,OAAO,CAAC;QAE3B,CAAC,EAAE,CAAC,CAAC,CAAC;IACV,CAAC;IAES,IAAI,gBAAgB;QAC1B,MAAM,EACF,IAAI,EAAE,EACF,QAAQ,EACX,EACD,MAAM,EACT,GAAG,IAAI,CAAC,KAAK,CAAC;QACf,IAAI,CAAC,QAAQ,CAAC,MAAM,EAAE;YAClB,OAAO,KAAK,CAAC;SAChB;QAED,MAAM,cAAc,GAAG,QAAQ,CAAC,MAAM,CAAC;QACvC,MAAM,IAAI,GAAG,cAAc,CAAC,YAAY,CAAC,IAAI,CAAC;QAC9C,IAAI,CAAC,IAAI,IAAI,CAAC,IAAI,CAAC,SAAS,IAAI,CAAC,IAAI,CAAC,SAAS,CAAC,MAAM,EAAE;YACpD,OAAO,KAAK,CAAC;SAChB;QAED,MAAM,EAAE,iBAAiB,EAAE,oBAAoB,EAAE,GAAG,cAAc,CAAC;QACnE,MAAM,0BAA0B,GAAG,MAAM,CAAC,gBAAgB,KAAK,iBAAiB,IAAI,oBAAoB,CAAC;QAGzG,MAAM,SAAS,GAAG,CAAC,IAAI,CAAC,WAAW,IAAI,CAAC,CAAC,GAAG,IAAI,CAAC,sBAAsB,GAAG,IAAI,CAAC,gBAAgB,GAAG,IAAI,CAAC,wBAAwB,CAAC;QAEhI,OAAO,SAAS,GAAG,CAAC,IAAI,CAAC,0BAA0B,CAAC;IACxD,CAAC;IAES,IAAI,8BAA8B;QACxC,MAAM,sBAAsB,GAAG,GAAG,CAAC,IAAI,CAAC,KAAK,EAAE,gDAAgD,CAAC,CAAC;QACjG,OAAO,CAAC,GAAG,CAAC,IAAI,CAAC,KAAK,EAAE,kDAAkD,CAAC,IAAI,EAAE,CAAC,CAAC,IAAI,CACnF,CAAC,QAAkB,EAAE,EAAE,CAAC,QAAQ,CAAC,YAAY,KAAK,sBAAsB,CAC3E,CAAC;IACN,CAAC;IAES,IAAI,gCAAgC;QAC1C,OAAO,CAAC,GAAG,CAAC,IAAI,CAAC,KAAK,EAAE,kDAAkD,CAAC,IAAI,EAAE,CAAC,CAAC,KAAK,CACpF,CAAC,QAAkB,EAAE,EAAE,CAAC,CAAC,CAAC,QAAQ,CAAC,YAAY,CAClD,CAAC;IACN,CAAC;IAES,IAAI,iBAAiB;QAC3B,MAAM,SAAS,GAAG,MAAM,CAAC,MAAM,CAAC,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC,CAAC,IAAI,CAAC,IAAI,CAAC,EAAE,CAAC,GAAG,CAAC,IAAI,EAAE,QAAQ,CAAC,KAAK,SAAS,CAAC,CAAC;QACjG,IAAI,SAAS,EAAE;YACX,OAAO,SAAS,CAAC;SACpB;QAED,MAAM,SAAS,GAAG,MAAM,CAAC,MAAM,CAAC,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC,CAAC,KAAK,CAAC,IAAI,CAAC,EAAE,CAAC,GAAG,CAAC,IAAI,EAAE,QAAQ,CAAC,KAAK,SAAS,CAAC,CAAC;QAClG,IAAI,SAAS,EAAE;YACX,OAAO,SAAS,CAAC;SACpB;QAED,MAAM,QAAQ,GAAG,MAAM,CAAC,MAAM,CAAC,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC,CAAC,IAAI,CAAC,IAAI,CAAC,EAAE,CAAC,GAAG,CAAC,IAAI,EAAE,QAAQ,CAAC,KAAK,QAAQ,CAAC,CAAC;QAC/F,IAAI,QAAQ,EAAE;YACV,OAAO,QAAQ,CAAC;SACnB;QAED,OAAO;IACX,CAAC;IAES,IAAI,eAAe;QACzB,OAAO,CAAC,CAAC,GAAG,CAAC,IAAI,CAAC,KAAK,CAAC,IAAI,EAAE,2CAA2C,CAAC,CAAC;IAC/E,CAAC;IAES,IAAI,gCAAgC;QAC1C,MAAM,EAAE,eAAe,EAAE,KAAK,EAAE,GAAG,IAAI,CAAC,KAAK,CAAC,OAAO,CAAC,OAAO,CAAC;QAC9D,OAAO,CAAC,eAAe,IAAI,KAAK,IAAI,KAAK,CAAC,EAAE,KAAK,GAAG,CAAC,CAAC,CAAC,CAAC,IAAI,CAAC,CAAC,CAAC,KAAK,CAAC;IACzE,CAAC;IAES,IAAI,gBAAgB;QAC1B,MAAM,MAAM,GAAG,GAAG,CAAC,MAAM,EAAE,iBAAiB,CAAC,CAAC;QAC9C,MAAM,UAAU,GACZ,OAAO,GAAG,CAAC,IAAI,CAAC,KAAK,EAAE,gCAAgC,CAAC,KAAK,QAAQ;YACjE,CAAC,CAAC,IAAI,GAAG,CAAC,GAAG,CAAC,IAAI,CAAC,KAAK,EAAE,gCAAgC,CAAC,CAAC;YAC5D,CAAC,CAAC,GAAG,CAAC,IAAI,CAAC,KAAK,EAAE,gCAAgC,CAAC,CAAC;QAC5D,OAAO,MAAM,IAAI,UAAU,CAAC,MAAM,CAAC;IACvC,CAAC;IASM,iBAAiB;QAEpB,IAAI,CACA,GAAG,EAAE,CAAC,IAAI,CAAC,iBAAiB,KAAK,SAAS,EAC1C,GAAG,EAAE;YACD,IAAI,CAAC,IAAI,EAAE,CAAC;QAChB,CAAC,CACJ,CAAC;QAGF,QAAQ,CACJ,GAAG,EAAE,CAAC,IAAI,CAAC,iBAAiB,KAAK,QAAQ,IAAI,IAAI,CAAC,gBAAgB,EAClE,GAAG,EAAE;YACD,IAAI,CAAC,aAAa,EAAE,CAAC;QACzB,CAAC,CACJ,CAAC;IACN,CAAC;IAGM,MAAM;QACT,MAAM,EAAE,YAAY,EAAE,0BAA0B,EAAE,sBAAsB,EAAE,6BAA6B,EAAE,mBAAmB,EAAE,cAAc,EAAE,GAAG,IAAI,CAAC,KAAK,CAAC;QAC5J,MAAM,EACF,WAAW,EAAE,EAAE,OAAO,EAAE,QAAQ,EAAE,cAAc,EAAE,SAAS,EAAE,sBAAsB,EAAE,EACrF,MAAM,EAAE,EAAE,oBAAoB,EAAE,oBAAoB,EAAE,SAAS,EAAE,kBAAkB,EAAE,EACrF,SAAS,EACT,IAAI,EAAE,EAAE,QAAQ,EAAE,sBAAsB,EAAE,EAC1C,kBAAkB,EACrB,GAAG,IAAI,CAAC,KAAK,CAAC;QAEf,MAAM,SAAS,GAAG,kBAAkB,IAAI,kBAAkB,CAAC,SAAS,CAAC;QAErE,IAAI,CAAC,cAAc,IAAI,CAAC,IAAI,CAAC,iBAAiB,KAAK,QAAQ,IAAI,CAAC,IAAI,CAAC,gBAAgB,CAAC,EAAE;YACpF,IAAI,CAAC,KAAK,CAAC,OAAO,CAAC,SAAS,CAAC,KAAK,CAAC,uDAAuD,CAAC,CAAC;YAC5F,OAAO,IAAI,CAAC;SACf;QAED,MAAM,EAAE,aAAa,EAAE,iBAAiB,EAAE,aAAa,EAAE,GAAG,sBAAsB,CAAC,MAAM,IAAI;YACzF,aAAa,EAAE,SAAS;YACxB,iBAAiB,EAAE,SAAS;YAC5B,aAAa,EAAE,SAAS;SAC3B,CAAC;QAEF,MAAM,EAAE,oBAAoB,EAAE,UAAU,EAAE,cAAc,EAAE,GAAG,QAAQ,CAAC,MAAM,IAAI;YAC5E,oBAAoB,EAAE,SAAS;YAC/B,UAAU,EAAE,SAAS;YACrB,cAAc,EAAE,SAAS;SAC5B,CAAC;QAEF,MAAM,SAAS,GAAwC;YACnD,GAAG,IAAI,CAAC,KAAK;YACb,GAAG,IAAI,CAAC,KAAK;YACb,SAAS;YACT,SAAS;YAET,yBAAyB,EAAE;gBACvB,WAAW,EAAE,IAAI,CAAC,KAAK;gBACvB,SAAS,EAAE,UAAU,CAAC,IAAI,CAAC,eAAe,EAAE,SAAS,CAAC;aACzD;YACD,OAAO,EAAE,CAAC,OAAO,IAAI,IAAI,CAAC,iBAAiB,KAAK,QAAQ,IAAI,CAAC,IAAI,CAAC,iBAAiB,KAAK,SAAS,IAAI,0BAA0B,IAAI,SAAS,CAAC,IAAI,CAC7I,oBAAC,gBAAgB,oBAAK,EAAE,OAAO,EAAE,SAAS,CAAC,cAAc,EAAE,EAAI,CAClE;YACD,KAAK,EAAE,QAAQ,IAAI,YAAY,IAAI,oBAAC,cAAc,oBAAK,EAAE,KAAK,EAAE,SAAS,CAAC,iBAAiB,EAAE,OAAO,EAAE,YAAY,EAAE,EAAI;YACxH,kBAAkB,EAAE,OAAO,IAAI,CAAC,6BAA6B,IAAI,CAAC,mBAAmB,IAAI,CACrF,oBAAC,2BAA2B,IACxB,oBAAoB,EAAE,oBAAoB,EAC1C,UAAU,EAAE,UAAU,EACtB,cAAc,EAAE,kBAAkB,CAAC,CAAC,CAAC,cAAc,CAAC,CAAC,CAAC,SAAS,EAC/D,OAAO,EAAE,CAAC,sBAAsB,EAChC,MAAM,EAAE,IAAI,CAAC,MAAM,EACnB,SAAS,EAAE,SAAS,GACtB,CACL;YACD,cAAc,EAAE,CAAC,CAAC,OAAO,IAAI,6BAA6B,CAAC,IAAI,CAAC,mBAAmB,IAAI,CAAC,aAAa,IAAI,iBAAiB,CAAC,IAAI,SAAS,IAAI,CACxI,oBAAC,uBAAuB,IACpB,aAAa,EAAE,aAAa,EAC5B,iBAAiB,EAAE,iBAAiB,EACpC,aAAa,EAAE,aAAa,EAC5B,QAAQ,EAAE,IAAI,CAAC,QAAQ,EACvB,QAAQ,EAAE,IAAI,CAAC,QAAQ,EACvB,eAAe,EAAE,IAAI,CAAC,eAAe,EACrC,SAAS,EAAE,IAAI,CAAC,SAAS,EACzB,SAAS,EAAE,CAAC,sBAAsB,EAClC,SAAS,EAAE,CAAC,sBAAsB,IAAI,IAAI,CAAC,eAAe,EAC1D,oBAAoB,EAAE,oBAAoB,IAAI,sBAAsB,EACpE,gBAAgB,EAAE,IAAI,CAAC,gBAAgB,EACvC,0BAA0B,EAAE,0BAA0B,EACtD,oBAAoB,EAAE,oBAAoB,EAC1C,SAAS,EAAE,SAAS,GACtB,CACL;YACD,YAAY,EAAE;gBACV,KAAK,EAAE;oBACH,GAAG,EAAE,KAAK;oBACV,SAAS,EAAE,GAAG,IAAI,CAAC,eAAe,iBAAiB;oBACnD,MAAM,EAAE,cAAc;iBACzB;aACJ;SACJ,CAAC;QAEF,OAAO,IAAI,CAAC,KAAK,CAAC,UAAU,CAAC,SAAS,CAAuB,CAAC;IAClE,CAAC;CAkbJ,CAAA;AA/nBa;IAAT,QAAQ;iEAGR;AAES;IAAT,QAAQ;yEAGR;AAES;IAAT,QAAQ;uEAUR;AAES;IAAT,QAAQ;iEAwBR;AAES;IAAT,QAAQ;+EAKR;AAES;IAAT,QAAQ;iFAIR;AAES;IAAT,QAAQ;kEAiBR;AAES;IAAT,QAAQ;gEAER;AAES;IAAT,QAAQ;iFAGR;AAES;IAAT,QAAQ;iEAOR;AAoKD;IADC,MAAM;sEA4FL;AAGF;IADC,MAAM;0EAML;AAGF;IADC,MAAM;wEAQL;AAyEF;IADC,MAAM;uDAyCN;AAGD;IADC,MAAM;mEAsBL;AAGF;IADC,MAAM;kEAQL;AAiFF;IADC,MAAM;gEAQL;AAGF;IADC,MAAM;2DAQL;AAGF;IADC,MAAM;2DAOL;AAGF;IADC,MAAM;yDAML;AAGF;IADC,MAAM;mEAKN;AAhoBQ,yBAAyB;IAFrC,eAAe;IACf,QAAQ;GACI,yBAAyB,CAioBrC;SAjoBY,yBAAyB;AAmoBtC,eAAe,sBAAsB,CAAC,yBAAyB,CAAC,CAAC","sourcesContent":["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nimport classnames from 'classnames';\nimport get from 'lodash/get';\nimport { action, computed, reaction, when } from 'mobx';\nimport { observer } from 'mobx-react';\nimport * as React from 'react';\n\nimport { IModuleStateProps, withModuleState } from '@msdyn365-commerce-modules/checkout-utilities';\nimport { IModuleProps, INodeProps, Modal } from '@msdyn365-commerce-modules/utilities';\nimport { AsyncResultStatus, getUrlSync } from '@msdyn365-commerce/core';\nimport { IGiftCardExtend } from '@msdyn365-commerce/global-state';\nimport {\n    retrieveCardPaymentAcceptResultAsync\n} from '@msdyn365-commerce/retail-proxy/dist/DataActions/CartsDataActions.g';\nimport {\n    resolveCardTypesAsync\n} from '@msdyn365-commerce/retail-proxy/dist/DataActions/StoreOperationsDataActions.g';\nimport {\n    Address, CardType, CartLine, TokenizedPaymentCard\n} from '@msdyn365-commerce/retail-proxy/dist/Entities/CommerceTypes.g';\n\nimport getCardPaymentAcceptPointAction, {\n    GetCardPaymentAcceptPointInput\n} from './actions/get-card-payment-accept-point';\nimport { ICheckoutPaymentInstrumentData } from './checkout-payment-instrument.data';\nimport { ICheckoutPaymentInstrumentProps } from './checkout-payment-instrument.props.autogenerated';\nimport AddPaymentFormComponent from './components/add-payment-form';\nimport ErrorComponent from './components/error';\nimport Iframe from './components/iframe';\nimport PaymentInformationComponent from './components/payment-information';\nimport WaitingComponent from './components/waiting';\nimport withVisibilityObserver, {\n    IVisibilyObserverProps\n} from './components/with-visibility-observer';\nimport {\n    paymentConnectorExtraContextMessage, PaymentConnectorPostMessageType,\n    paymentConnectorSubmitMessage\n} from './payment-instrument-message';\n\nexport interface ICheckoutPaymentInstrumentModuleProps extends ICheckoutPaymentInstrumentProps<ICheckoutPaymentInstrumentData>, IModuleStateProps, IVisibilyObserverProps { }\n\ninterface ICheckoutPaymentInstrumentState {\n    errorMessage?: string;\n    isFetchingPaymentConnector?: boolean;\n    paymentConnectorHeight?: number;\n    isPaymentVerificationRequried?: boolean;\n    paymentVerificationPostData?: string;\n    isPaymentProcessing?: boolean;\n    isOverlayModal?: boolean;\n}\n\nexport interface ICheckoutPaymentOverlayModal {\n    modal: INodeProps;\n}\n\nexport interface ICheckoutPaymentInstrumentViewProps extends ICheckoutPaymentInstrumentProps<{}>, ICheckoutPaymentInstrumentState {\n    className?: string;\n    checkoutPaymentInstrument: IModuleProps;\n    waiting?: React.ReactNode;\n    alert?: React.ReactNode;\n    paymentInformation?: React.ReactNode;\n    addPaymentForm?: React.ReactNode;\n    overlayModal?: ICheckoutPaymentOverlayModal;\n    isVisible?: boolean;\n}\n\n/**\n *\n * CheckoutPaymentInstrument component\n * @extends {React.Component<ICheckoutPaymentInstrumentProps<ICheckoutPaymentInstrumentData>>}\n */\n// @ts-ignore\n@withModuleState\n@observer\nexport class CheckoutPaymentInstrument extends React.Component<ICheckoutPaymentInstrumentModuleProps> {\n\n    @computed get getLoyaltyAmount(): number {\n        const checkoutState = this.props.data.checkout.result;\n        return checkoutState && checkoutState.loyaltyAmount ? checkoutState.loyaltyAmount : 0;\n    }\n\n    @computed get getCustomerAccountAmount(): number {\n        const checkoutState = this.props.data.checkout.result;\n        return checkoutState && checkoutState.customerAccountAmount ? checkoutState.customerAccountAmount : 0;\n    }\n\n    @computed get getGiftCardTotalAmount(): number {\n        const checkoutState = this.props.data.checkout.result;\n        if (!checkoutState || !checkoutState.giftCardExtends) {\n            return 0;\n        }\n        return checkoutState.giftCardExtends.reduce((count: number, giftCard: IGiftCardExtend) => {\n            const balance: number = giftCard.Balance || 0;\n            return count + balance;\n            // tslint:disable-next-line:align\n        }, 0);\n    }\n\n    @computed get shouldPaidByCard(): boolean {\n        const {\n            data: {\n                checkout\n            },\n            config\n        } = this.props;\n        if (!checkout.result) {\n            return false;\n        }\n\n        const checkoutResult = checkout.result;\n        const cart = checkoutResult.checkoutCart.cart;\n        if (!cart || !cart.CartLines || !cart.CartLines.length) {\n            return false;\n        }\n\n        const { paymentTenderType, tokenizedPaymentCard } = checkoutResult;\n        const isPaidByOtherPaymentSource = config.paymenTenderType !== paymentTenderType && tokenizedPaymentCard;\n\n        // Use the card for payment after all other payment methods\n        const amountDue = (cart.TotalAmount || 0) - this.getGiftCardTotalAmount - this.getLoyaltyAmount - this.getCustomerAccountAmount;\n\n        return amountDue > 0 && !isPaidByOtherPaymentSource;\n    }\n\n    @computed get isCartContainsItemsForShipping(): boolean {\n        const pickupDeliveryModeCode = get(this.props, 'context.request.channel.PickupDeliveryModeCode');\n        return (get(this.props, 'data.checkout.result.checkoutCart.cart.CartLines') || []).some(\n            (cartLine: CartLine) => cartLine.DeliveryMode !== pickupDeliveryModeCode\n        );\n    }\n\n    @computed get isCartHasSelectedDeliveryMethods(): boolean {\n        return (get(this.props, 'data.checkout.result.checkoutCart.cart.CartLines') || []).every(\n            (cartLine: CartLine) => !!cartLine.DeliveryMode\n        );\n    }\n\n    @computed get asyncResultStatus(): AsyncResultStatus | undefined {\n        const isLoading = Object.values(this.props.data).some(data => get(data, 'status') === 'LOADING');\n        if (isLoading) {\n            return 'LOADING';\n        }\n\n        const isSuccess = Object.values(this.props.data).every(data => get(data, 'status') === 'SUCCESS');\n        if (isSuccess) {\n            return 'SUCCESS';\n        }\n\n        const isFailed = Object.values(this.props.data).some(data => get(data, 'status') === 'FAILED');\n        if (isFailed) {\n            return 'FAILED';\n        }\n\n        return;\n    }\n\n    @computed get hasSelectedItem(): boolean {\n        return !!get(this.props.data, 'checkoutState.result.tokenizedPaymentCard');\n    }\n\n    @computed get isPaymentVerificationRedirection(): boolean {\n        const { requestFormData, query } = this.props.context.request;\n        return (requestFormData && query && query.pv === '1') ? true : false;\n    }\n\n    @computed get requestUrlOrigin(): string {\n        const origin = get(window, 'location.origin');\n        const requestUrl =\n            typeof get(this.props, 'context.request.url.requestUrl') === 'string'\n                ? new URL(get(this.props, 'context.request.url.requestUrl'))\n                : get(this.props, 'context.request.url.requestUrl');\n        return origin || requestUrl.origin;\n    }\n\n    public state: ICheckoutPaymentInstrumentState = {\n        isFetchingPaymentConnector: true\n    };\n\n    private moduleClassName: string = 'ms-checkout-payment-instrument';\n    private iframeRef: React.RefObject<Iframe> = React.createRef();\n\n    public componentDidMount(): void {\n        // @ts-ignore: Compiler not reconizing condition check for function params\n        when(\n            () => this.asyncResultStatus !== 'LOADING',\n            () => {\n                this.init();\n            }\n        );\n\n        // @ts-ignore: Compiler not reconizing condition check for function params\n        reaction(\n            () => this.asyncResultStatus !== 'FAILED' && this.shouldPaidByCard,\n            () => {\n                this.togglePayment();\n            }\n        );\n    }\n\n    // tslint:disable-next-line:cyclomatic-complexity\n    public render(): JSX.Element | null {\n        const { errorMessage, isFetchingPaymentConnector, paymentConnectorHeight, isPaymentVerificationRequried, isPaymentProcessing, isOverlayModal } = this.state;\n        const {\n            moduleState: { isReady, hasError, hasInitialized, isPending, hasExternalSubmitGroup },\n            config: { iFrameHeightOverride, paymentStyleOverride, className, showBillingAddress },\n            resources,\n            data: { checkout, cardPaymentAcceptPoint },\n            visibilityObserver\n        } = this.props;\n\n        const isVisible = visibilityObserver && visibilityObserver.isVisible;\n\n        if (!hasInitialized || (this.asyncResultStatus !== 'FAILED' && !this.shouldPaidByCard)) {\n            this.props.context.telemetry.error('Checkout payment content is empty, module wont render');\n            return null;\n        }\n\n        const { AcceptPageUrl, AcceptPageContent, MessageOrigin } = cardPaymentAcceptPoint.result || {\n            AcceptPageUrl: undefined,\n            AcceptPageContent: undefined,\n            MessageOrigin: undefined\n        };\n\n        const { tokenizedPaymentCard, tenderLine, billingAddress } = checkout.result || {\n            tokenizedPaymentCard: undefined,\n            tenderLine: undefined,\n            billingAddress: undefined\n        };\n\n        const viewProps: ICheckoutPaymentInstrumentViewProps = {\n            ...this.props,\n            ...this.state,\n            isVisible,\n            className,\n\n            checkoutPaymentInstrument: {\n                moduleProps: this.props,\n                className: classnames(this.moduleClassName, className)\n            },\n            waiting: !isReady && this.asyncResultStatus !== 'FAILED' && (this.asyncResultStatus === 'LOADING' || isFetchingPaymentConnector || isPending) && (\n                <WaitingComponent {...{ message: resources.loadingMessage }} />\n            ),\n            alert: hasError && errorMessage && <ErrorComponent {...{ title: resources.errorMessageTitle, message: errorMessage }} />,\n            paymentInformation: isReady && !isPaymentVerificationRequried && !isPaymentProcessing && (\n                <PaymentInformationComponent\n                    tokenizedPaymentCard={tokenizedPaymentCard}\n                    tenderLine={tenderLine}\n                    billingAddress={showBillingAddress ? billingAddress : undefined}\n                    canEdit={!hasExternalSubmitGroup}\n                    onEdit={this.onEdit}\n                    resources={resources}\n                />\n            ),\n            addPaymentForm: (!isReady || isPaymentVerificationRequried) && !isPaymentProcessing && (AcceptPageUrl || AcceptPageContent) && isVisible && (\n                <AddPaymentFormComponent\n                    acceptPageUrl={AcceptPageUrl}\n                    acceptPageContent={AcceptPageContent}\n                    messageOrigin={MessageOrigin}\n                    onSubmit={this.onSubmit}\n                    onCancel={this.onCancel}\n                    onIFrameMessage={this.onIFrameMessage}\n                    iframeRef={this.iframeRef}\n                    canSubmit={!hasExternalSubmitGroup}\n                    canCancel={!hasExternalSubmitGroup && this.hasSelectedItem}\n                    iFrameHeightOverride={iFrameHeightOverride || paymentConnectorHeight}\n                    requestUrlOrigin={this.requestUrlOrigin}\n                    isFetchingPaymentConnector={isFetchingPaymentConnector}\n                    paymentStyleOverride={paymentStyleOverride}\n                    resources={resources}\n                />\n            ),\n            overlayModal: {\n                modal: {\n                    tag: Modal,\n                    className: `${this.moduleClassName}__overlay-modal`,\n                    isOpen: isOverlayModal\n                }\n            }\n        };\n\n        return this.props.renderView(viewProps) as React.ReactElement;\n    }\n\n    private onIFrameMessage = async (event: MessageEvent): Promise<void> => {\n        let result;\n        try {\n            if (typeof event.data !== 'string') {\n                return;\n            }\n            result = JSON.parse(event.data);\n        } catch (error) {\n            this.setTerminalError(error);\n            return;\n        }\n\n        const shouldCheckConnectorId = this.props.config.shouldCheckConnectorId;\n        const paymentConnectorId = this.props.data.cardPaymentAcceptPoint.result?.PaymentConnectorId;\n        if (!result || !result.type || (shouldCheckConnectorId && result.id !== paymentConnectorId)) {\n            return;\n        }\n\n        const { type, value } = result;\n\n        switch (type) {\n            case PaymentConnectorPostMessageType.Height:\n                // The payment connector will post height after it completes initialization\n                this.setState({\n                    isFetchingPaymentConnector: false,\n                    paymentConnectorHeight: value\n                });\n                return;\n            case PaymentConnectorPostMessageType.Result:\n                this.handlePaymentResult(value);\n                return;\n            case PaymentConnectorPostMessageType.CardPrefix:\n                await this.handlePaymentCardPrefix(value);\n                return;\n            case PaymentConnectorPostMessageType.Error:\n                this.handlePaymentError(value);\n                return;\n            case PaymentConnectorPostMessageType.Redirect:\n                this.handlePaymentRedirect(value);\n                return;\n            case PaymentConnectorPostMessageType.Showoverlay:\n                this.showOverlayModal(true);\n                return;\n            case PaymentConnectorPostMessageType.Hideoverlay:\n                this.showOverlayModal(false);\n                return;\n            default:\n                // Do nothing\n                return;\n        }\n    };\n\n    @action\n    private handlePaymentResult = (resultAccessCode: string, isRedirectedFromPaymentGateway: boolean = false): void => {\n        const {\n            data: {\n                checkout,\n                cardPaymentAcceptPoint\n            },\n            config: {\n                paymenTenderType\n            }\n        } = this.props;\n\n        const cartId = checkout.result?.checkoutCart.cart.Id || '';\n        const paymentConnectorId = cardPaymentAcceptPoint.result?.PaymentConnectorId;\n\n        const settings = {\n            ReturnUrl: this.getReturnUrl(),\n            ...(paymentConnectorId && { PaymentConnectorId: paymentConnectorId }),\n        };\n\n        retrieveCardPaymentAcceptResultAsync({ callerContext: this.props.context.actionContext }, resultAccessCode, [], cartId, settings)\n            .then(async cardPaymentAcceptResult => {\n                // tslint:disable-next-line:no-shadowed-variable\n                const { TenderLine, TokenizedPaymentCard, AdditionalContext } = cardPaymentAcceptResult || {};\n\n                await this.saveBillingAddress(TokenizedPaymentCard);\n\n                if (AdditionalContext) {\n                    this.handleAdditionalContext(AdditionalContext);\n                } else {\n                    if (!TokenizedPaymentCard) {\n                        this.setTerminalError(new Error('No TokenizedPaymentCard found'));\n                        return;\n                    }\n                    const checkoutState = this.props.data.checkout.result;\n                    if (checkoutState) {\n                        // Try to update card prefix, if it is not set already.\n                        // Adyen connector does not send msax-cc-cardprefix message\n                        // but it sets the card prefix in tokenized card\n                        if (!checkoutState.cardPrefix) {\n                            const cardPrefix =\n                                TokenizedPaymentCard &&\n                                TokenizedPaymentCard.CardTokenInfo &&\n                                TokenizedPaymentCard.CardTokenInfo.MaskedCardNumber;\n                            if (cardPrefix) {\n                                await checkoutState.updateCardPrefix({ newCardPrefix: cardPrefix });\n                            }\n                        }\n\n                        if (!TokenizedPaymentCard.CardTypeId) {\n                            const cardTypeId = await this.getCardTypeId(checkoutState.cardPrefix || '');\n                            if (!cardTypeId) {\n                                const error = new Error('The specified card type is not supported.');\n                                error.name = 'CARDTYPENOTFOUND';\n                                this.setTerminalError(error);\n                                return;\n                            }\n\n                            TokenizedPaymentCard.CardTypeId = cardTypeId;\n                        }\n\n                        await checkoutState.updateTenderLine({ newTenderLine: TenderLine });\n                        await checkoutState.updateTokenizedPaymentCard({ newTokenizedPaymentCard: TokenizedPaymentCard });\n                        await checkoutState.updatePaymentTenderType({ newPaymentTenderType: paymenTenderType });\n\n                        // In case of PSD2 redirect, cart we be updated in server side so refresh cart.\n                        if (isRedirectedFromPaymentGateway) {\n                            this.props.data.checkout.result?.checkoutCart.refreshCart({});\n                        }\n\n                        this.props.moduleState.setHasError(false);\n                        this.props.moduleState.onReady();\n                        this.setState({\n                            terminalError: null,\n                            errorMessage: null\n                        });\n                        this.props.moduleState.setIsSubmitContainer(true);\n                    }\n                }\n            })\n            .catch(error => {\n                // IMPORTANT: Call RS for getting a new payment session. It should not re-use the previous session for the security reason.\n                // tslint:disable-next-line:no-floating-promises\n                this.updatePaymentAcceptPageData();\n                this.setTerminalError(error);\n                return;\n            })\n            .finally(() => {\n                this.setState({\n                    isPaymentProcessing: false\n                });\n            });\n    };\n\n    @action\n    private handlePaymentCardPrefix = async (cardPrefix: string): Promise<void> => {\n        const checkoutState = this.props.data.checkout.result;\n        if (checkoutState) {\n            await checkoutState.updateCardPrefix({ newCardPrefix: cardPrefix });\n        }\n    };\n\n    @action\n    private handlePaymentRedirect = (redirectData: string): void => {\n        this.setState({\n            isPaymentVerificationRequried: true,\n            paymentVerificationPostData: redirectData\n        });\n        this.props.moduleState.setHasError(false);\n        this.props.moduleState.onReady();\n    };\n\n    private showOverlayModal = (isShow: boolean): void => {\n        this.setState({ isOverlayModal: isShow });\n    };\n\n    private getCardTypeId = async (cardPrefix: string = ''): Promise<string | undefined> => {\n        try {\n            const response = await resolveCardTypesAsync({ callerContext: this.props.context.actionContext }, cardPrefix, CardType.Unknown);\n            if (response && response.length > 0) {\n                return response[0].TypeId;\n            }\n        } catch (error) {\n            this.props.context.telemetry.error('Call to resolveCardTypesAsync failed.', error);\n        }\n        return undefined;\n    };\n\n    private redirectToPaymentVerification = async (): Promise<void> => {\n        const { isPaymentVerificationRequried, paymentVerificationPostData } = this.state;\n        if (!isPaymentVerificationRequried || !paymentVerificationPostData) {\n            return;\n        }\n\n        const checkoutState = this.props.data.checkout.result;\n        if (checkoutState) {\n            await checkoutState.updatePaymentTenderType({ newPaymentTenderType: this.props.config.paymenTenderType });\n            await checkoutState.saveDataInStorage({});\n        }\n\n        const redirectInfo = JSON.parse(paymentVerificationPostData);\n        const { url, data } = redirectInfo;\n        const form = document.createElement('form');\n\n        form.method = 'POST';\n        form.action = url;\n\n        for (const propertyName of Object.keys(data)) {\n            const element = document.createElement('input');\n            element.name = propertyName;\n            element.value = data[propertyName];\n            form.appendChild(element);\n        }\n\n        document.body.appendChild(form);\n        form.submit();\n    };\n\n    private handlePaymentError = (value?: { Message: string }[]): void => {\n        const {\n            resources: { defaultSubmitErrorMessage = 'An error occurred in payment method details. Please try again.' }\n        } = this.props;\n        if (!value || value.length === 0) {\n            // Fallback, if no message could be translated from payement accept page response\n            this.setErrorMessage(defaultSubmitErrorMessage);\n            return;\n        }\n        this.setErrorMessage(value.map((_value: { Message: string }) => _value.Message).join('\\n'));\n    };\n\n    private getReturnUrl = (): string => {\n        let returnUrl = getUrlSync('checkout', this.props.context.actionContext) || '';\n\n        const absoluteUrlRegExp = new RegExp('^(?:[a-z]+:)?//', 'i');\n        const isAbsoluteUrl = absoluteUrlRegExp.test(returnUrl);\n        if (window && !isAbsoluteUrl) {\n            returnUrl = `${window.location.origin}${returnUrl}`;\n        }\n\n        return `${returnUrl}${returnUrl.indexOf('?') === -1 ? '?' : '&'}pv=1`;\n    }\n\n    @action\n    private init = (): void => {\n        this.props.moduleState.init({\n            onEdit: this.onEdit,\n            onCancel: this.onCancel,\n            onSubmit: this.onSubmit,\n            onContainerReady: this.onContainerReady,\n            isCancellable: false,\n            status: this.shouldPaidByCard ? 'updating' : 'disabled'\n        });\n\n        const {\n            data: {\n                checkout\n            },\n            config\n        } = this.props;\n\n        if (this.isPaymentVerificationRedirection) {\n            if (config.paymenTenderType === checkout.result?.paymentTenderType) {\n                const { requestFormData } = this.props.context.request;\n\n                const formData = btoa(JSON.stringify(requestFormData));\n\n                this.setState({\n                    isPaymentProcessing: true\n                });\n\n                this.props.moduleState.onPending();\n                this.handlePaymentResult(formData, true);\n            } else {\n                this.props.moduleState.onSkip();\n            }\n        } else {\n            if (this.asyncResultStatus === 'FAILED') {\n                this.setState({\n                    isFetchingPaymentConnector: false\n                });\n                this.setTerminalError(new Error('Failed in load data'));\n            }\n        }\n    }\n\n    @action\n    private setTerminalError = (terminalError: Error): void => {\n        this.props.telemetry.exception(terminalError);\n        this.props.moduleState.setHasError(true);\n        this.props.moduleState.onUpdating();\n        const {\n            resources: { genericErrorMessage, cardTypeErrorMessage }\n        } = this.props;\n        let errorMessage = genericErrorMessage;\n\n        switch (terminalError.name) {\n            case 'CARDTYPENOTFOUND': {\n                errorMessage = cardTypeErrorMessage;\n                break;\n            }\n            default:\n        }\n\n        this.setState({\n            terminalError,\n            errorMessage: errorMessage\n        });\n    };\n\n    @action\n    private setErrorMessage = (errorMessage: string): void => {\n        this.props.telemetry.error(errorMessage);\n        this.props.moduleState.setHasError(true);\n        this.props.moduleState.onUpdating();\n        this.setState({\n            errorMessage\n        });\n    };\n\n    private updatePaymentAcceptPageData = async (): Promise<void> => {\n        const {\n            context: { actionContext },\n            config: { showBillingAddress, paymenTenderType },\n            context: { request: { apiSettings } },\n            data: { checkout }\n        } = this.props;\n\n        const input = {\n            showBillingAddress: showBillingAddress,\n            paymenTenderType: paymenTenderType,\n            apiSettings: apiSettings\n        };\n\n        this.setState({\n            isFetchingPaymentConnector: true\n        });\n\n        const checkoutState = checkout.result;\n        if (checkoutState) {\n            await checkoutState.updatePaymentTenderType({ newPaymentTenderType: undefined });\n            await checkoutState.updateTenderLine({ newTenderLine: undefined });\n            await checkoutState.updateTokenizedPaymentCard({ newTokenizedPaymentCard: undefined });\n        }\n\n        getCardPaymentAcceptPointAction(new GetCardPaymentAcceptPointInput(input), actionContext)\n            .then(paymentAcceptPoint => {\n                // In case, add form is not hidden. We need to explicty reset value to force re-rendering.\n                actionContext.update(new GetCardPaymentAcceptPointInput(input), { AcceptPageContent: '', AcceptPageUrl: '' });\n\n                // IMPORTANT: Do NOT set isFetchingPaymentConnector = false in getCardPaymentAcceptPointAction success response.\n                // The payment connector will post a message with content height when payment is ready.\n                actionContext.update(new GetCardPaymentAcceptPointInput(input), paymentAcceptPoint);\n                this.setState({ paymentConnectorId: paymentAcceptPoint.PaymentConnectorId });\n            })\n            .catch((error: Error) => {\n                this.setTerminalError(error);\n\n                this.setState({\n                    isFetchingPaymentConnector: false\n                });\n                // IMPORTANT: Clear the AcceptPageUrl and AcceptPageContent. It should not re-use the previous session for the security reason.\n                actionContext.update(new GetCardPaymentAcceptPointInput(input), { AcceptPageContent: '', AcceptPageUrl: '' });\n            });\n    };\n\n    private postMessageToIframe = (message: object) => {\n        const postMessage = get(this.iframeRef, 'current.postMessage');\n        if (postMessage) {\n            this.props.moduleState.onPending();\n            postMessage(message);\n        }\n    }\n\n    private handleAdditionalContext = (additionalContext: string): void => {\n        const message = paymentConnectorExtraContextMessage(additionalContext);\n        this.postMessageToIframe(message);\n    };\n\n    private saveBillingAddress = async (tokenizedPaymentCard?: TokenizedPaymentCard): Promise<void> => {\n        const { showBillingAddress } = this.props.config;\n        const checkoutState = this.props.data.checkout.result;\n        // If we use billing address provided by adyen, billing address returned in TokenizedPaymentCard.\n        if (checkoutState && showBillingAddress && tokenizedPaymentCard && tokenizedPaymentCard.Zip) {\n            const billingAddress: Address = {\n                ThreeLetterISORegionName: tokenizedPaymentCard.Country,\n                Name: tokenizedPaymentCard.House === 'N/A' ? '' : tokenizedPaymentCard.House,\n                Street: tokenizedPaymentCard.Address1,\n                StreetNumber: tokenizedPaymentCard.Address2,\n                City: tokenizedPaymentCard.City,\n                State: tokenizedPaymentCard.State,\n                ZipCode: tokenizedPaymentCard.Zip,\n                Phone: tokenizedPaymentCard.Phone\n            };\n            await checkoutState.updateBillingAddress({ newBillingAddress: billingAddress });\n        }\n    };\n\n    @action\n    private togglePayment = () => {\n        if (this.shouldPaidByCard && this.props.moduleState.isDisabled) {\n            this.props.moduleState.onUpdating();\n        } else if (!this.shouldPaidByCard && !this.props.moduleState.isDisabled) {\n            this.props.moduleState.setHasError(false);\n            this.props.moduleState.onDisable();\n        }\n    };\n\n    @action\n    private onSubmit = (): void => {\n        const { isPrimaryPayment = true } = this.props.config;\n        if (isPrimaryPayment) {\n            this.postMessageToIframe(paymentConnectorSubmitMessage());\n        } else {\n            this.props.moduleState.onSkip();\n        }\n    };\n\n    @action\n    private onCancel = (): void => {\n        if (this.hasSelectedItem) {\n            this.props.moduleState.onReady();\n        } else {\n            this.props.moduleState.onUpdating();\n        }\n    };\n\n    @action\n    private onEdit = (): void => {\n        this.props.moduleState.onUpdating();\n        // IMPORTANT: Call RS for getting a new payment session. It should not re-use the previous session for the security reason.\n        // tslint:disable-next-line:no-floating-promises\n        this.updatePaymentAcceptPageData();\n    };\n\n    @action\n    private onContainerReady = (): void => {\n        // tslint:disable-next-line:no-floating-promises\n        this.redirectToPaymentVerification();\n        this.props.moduleState.setIsSubmitContainer(false);\n    }\n}\n\nexport default withVisibilityObserver(CheckoutPaymentInstrument);"]}