import { Button } from '@msdyn365-commerce-modules/utilities';
import classnames from 'classnames';
import * as React from 'react';
import defaultPaymentConnectorDropinStyle from '../payment-instrument.dropin.style';
import defaultPaymentConnectorPaypalStyle from '../payment-instrument.paypal.style';
import defaultPaymentConnectorStyle from '../payment-instrument.style';
import Iframe from './iframe';
const AddPaymentForm = ({ acceptPageUrl = '', acceptPageContent = '', onSubmit, onCancel, onIFrameMessage, iframeRef, canSubmit, canCancel, iFrameHeightOverride, requestUrlOrigin, messageOrigin, isFetchingPaymentConnector, paymentStyleOverride, resources: { cancelButtonText, submitButtonText, iframeAriaLabel } }) => (React.createElement("div", { className: classnames('ms-checkout-payment-instrument__add', { 'is-fetching': isFetchingPaymentConnector }) },
    React.createElement(Iframe, { className: 'ms-checkout-payment-instrument__add', ref: iframeRef, iframeAriaLabel: iframeAriaLabel, displayContent: acceptPageContent, sourceUrl: acceptPageUrl, requestUrlOrigin: requestUrlOrigin, messageOrigin: messageOrigin, onIFrameMessage: onIFrameMessage, height: iFrameHeightOverride, css: paymentStyleOverride || (defaultPaymentConnectorStyle + defaultPaymentConnectorDropinStyle + defaultPaymentConnectorPaypalStyle) }),
    canSubmit && (React.createElement(Button, { className: 'ms-checkout-payment-instrument__btn-save', title: submitButtonText, color: 'primary', onClick: onSubmit }, submitButtonText)),
    canCancel && (React.createElement(Button, { className: 'ms-checkout-payment-instrument__btn-cancel', title: cancelButtonText, color: 'secondary', onClick: onCancel }, cancelButtonText))));
export default React.memo(AddPaymentForm);
//# sourceMappingURL=add-payment-form.js.map