{"version":3,"file":"iframe.js","sourceRoot":"./src/","sources":["modules/checkout-payment-instrument/components/iframe.tsx"],"names":[],"mappings":"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","sourcesContent":["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nimport classnames from 'classnames';\nimport * as React from 'react';\nimport { IPaymentConnectorPostMessage } from '../payment-instrument-message';\n\nexport interface IPaymentFrameElementProps {\n    className?: string;\n    iframeAriaLabel: string;\n    displayContent?: string;\n    sourceUrl?: string;\n    requestUrlOrigin?: string;\n    messageOrigin?: string;\n    css?: string;\n    height?: number;\n    onIFrameMessage?(event: MessageEvent): void;\n}\n\nexport const POST_MESSAGE_NAME = 'message';\n\nconst getHostName = (url: string = ''): string => {\n    return (url.indexOf('//') > -1 ? url.split('/')[2] : url.split('/')[0]).toLowerCase();\n};\n\n/**\n *\n * IFrameElement component\n * @extends {React.PureComponent<IPaymentFrameElementProps>}\n */\nclass IPaymentFrameElement extends React.PureComponent<IPaymentFrameElementProps> {\n    private iframeRef: React.RefObject<HTMLIFrameElement>;\n\n    constructor(props: IPaymentFrameElementProps) {\n        super(props);\n        this.iframeRef = React.createRef();\n    }\n\n    public componentDidMount(): void {\n        window.addEventListener(POST_MESSAGE_NAME, this.onEvent);\n\n        this.updateContentDocument();\n    }\n\n    public componentDidUpdate(prevProps: IPaymentFrameElementProps): void {\n        if (prevProps.displayContent !== this.props.displayContent) {\n            this.updateContentDocument();\n        }\n    }\n\n    public componentWillUnmount(): void {\n        window.removeEventListener(POST_MESSAGE_NAME, this.onEvent);\n    }\n\n    public render(): JSX.Element | null {\n        const { sourceUrl, className, iframeAriaLabel, height } = this.props;\n        return (\n            <iframe\n                className={classnames('checkout-payment-instrument__iframe', className)}\n                aria-label={iframeAriaLabel}\n                src={sourceUrl}\n                ref={this.iframeRef}\n                height={height}\n                // tslint:disable-next-line:react-iframe-missing-sandbox\n                sandbox='allow-scripts allow-forms allow-same-origin allow-popups'\n            />\n        );\n    }\n\n    public postMessage = (params: IPaymentConnectorPostMessage): void => {\n        if (\n            this.iframeRef &&\n            this.iframeRef.current &&\n            this.iframeRef.current.contentWindow &&\n            this.iframeRef.current.contentWindow.postMessage\n        ) {\n            this.iframeRef.current.contentWindow.postMessage(params.message, params.targetOrigin);\n        }\n    };\n\n    private onEvent = (event: MessageEvent) => {\n        const { sourceUrl, onIFrameMessage, requestUrlOrigin, messageOrigin } = this.props;\n        const sourceHost = getHostName(sourceUrl);\n        const eventHost = getHostName(event.origin);\n        const requestHost = getHostName(requestUrlOrigin);\n        const messageHost = getHostName(messageOrigin);\n\n        // Important: security check\n        // check actual origin matches with expected origin\n        if (\n            !onIFrameMessage ||\n            (sourceUrl && !(sourceHost === eventHost || requestHost === eventHost || messageHost === eventHost)) ||\n            (!sourceUrl && !(requestHost === eventHost || messageHost === eventHost))\n        ) {\n            return;\n        }\n\n        return onIFrameMessage(event);\n    };\n\n    private updateContentDocument = (): void => {\n        const { displayContent, sourceUrl, css } = this.props;\n        if (!sourceUrl && displayContent && this.iframeRef && this.iframeRef.current) {\n            const innerDocument = this.iframeRef.current.contentDocument;\n\n            if (innerDocument) {\n                innerDocument.open();\n                innerDocument.write(displayContent);\n                if (css) {\n                    // Append custom style\n                    const style = document.createElement('style');\n                    const cssNote = document.createTextNode(css);\n                    style.type = 'text/css';\n                    style.appendChild(cssNote);\n                    innerDocument.head.appendChild(style);\n                }\n\n                innerDocument.close();\n            }\n        }\n    };\n}\n\nexport default IPaymentFrameElement;"]}