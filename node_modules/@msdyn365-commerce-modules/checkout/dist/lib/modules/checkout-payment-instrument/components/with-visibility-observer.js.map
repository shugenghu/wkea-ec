{"version":3,"file":"with-visibility-observer.js","sourceRoot":"./src/","sources":["modules/checkout-payment-instrument/components/with-visibility-observer.tsx"],"names":[],"mappings":"AAIA,OAAO,KAAK,KAAK,MAAM,OAAO,CAAC;AAY/B,MAAM,oBAAoB,GAAG,CAAmC,gBAAwC,EAA0B,EAAE;IAMhI,MAAM,gBAAiB,SAAQ,KAAK,CAAC,SAAY;QAAjD;;YACW,UAAK,GAA2B;gBACnC,SAAS,EAAE,KAAK;gBAChB,YAAY,EAAE,EAAE;gBAChB,QAAQ,EAAE,SAAS;aACtB,CAAC;YAEM,YAAO,GAAoC,KAAK,CAAC,SAAS,EAAE,CAAC;YAkB7D,yBAAoB,GAAG,GAAS,EAAE;gBAEtC,MAAM,UAAU,GAAG,QAAQ,CAAC,oBAAoB,CAAC,MAAM,CAAC,IAAI,QAAQ,CAAC,oBAAoB,CAAC,MAAM,CAAC,CAAC,CAAC,CAAC,CAAC;gBACrG,IAAI,CAAC,UAAU,EAAE;oBACb,IAAI,CAAC,QAAQ,CAAC;wBACV,YAAY,EAAE,uBAAuB;qBACxC,CAAC,CAAC;oBACH,OAAO;iBACV;gBAED,IAAI,CAAC,gBAAgB,EAAE;oBACnB,IAAI,CAAC,QAAQ,CAAC;wBACV,YAAY,EAAE,mCAAmC;qBACpD,CAAC,CAAC;oBACH,OAAO;iBACV;gBAGD,MAAM,MAAM,GAAG,EAAE,UAAU,EAAE,IAAI,EAAE,SAAS,EAAE,IAAI,EAAE,OAAO,EAAE,IAAI,EAAE,CAAC;gBAGpE,MAAM,SAAS,GAAG,IAAI,gBAAgB,CAAC,GAAG,EAAE,CAAC,IAAI,CAAC,sBAAsB,EAAE,CAAC,CAAC;gBAC5E,SAAS,CAAC,OAAO,CAAC,UAAU,EAAE,MAAM,CAAC,CAAC;gBAEtC,IAAI,CAAC,QAAQ,CAAC;oBACV,QAAQ,EAAE,SAAS;iBACtB,CAAC,CAAC;YACP,CAAC,CAAC;YAEM,yBAAoB,GAAG,GAAS,EAAE;gBACtC,IAAI,CAAC,KAAK,CAAC,QAAQ,IAAI,IAAI,CAAC,KAAK,CAAC,QAAQ,CAAC,UAAU,EAAE,CAAC;YAC5D,CAAC,CAAC;YAEM,2BAAsB,GAAG,GAAS,EAAE;gBAExC,MAAM,SAAS,GAAG,CAAC,CAAC,IAAI,CAAC,OAAO,CAAC,OAAO,IAAI,IAAI,CAAC,OAAO,CAAC,OAAO,CAAC,WAAW,GAAG,CAAC,IAAI,IAAI,CAAC,OAAO,CAAC,OAAO,CAAC,YAAY,GAAG,CAAC,CAAC;gBAC1H,IAAI,CAAC,IAAI,CAAC,KAAK,CAAC,SAAS,IAAI,SAAS,EAAE;oBACpC,IAAI,CAAC,QAAQ,CAAC;wBACV,SAAS;qBACZ,CAAC,CAAC;oBACH,IAAI,CAAC,oBAAoB,EAAE,CAAC;iBAC/B;YACL,CAAC,CAAC;QACN,CAAC;QA3DU,iBAAiB;YACpB,IAAI,CAAC,oBAAoB,EAAE,CAAC;QAChC,CAAC;QAEM,oBAAoB;YACvB,IAAI,CAAC,oBAAoB,EAAE,CAAC;QAChC,CAAC;QAEM,MAAM;YACT,OAAO,CACH,6BAAK,SAAS,EAAC,mDAAmD,EAAC,GAAG,EAAE,IAAI,CAAC,OAAO;gBAChF,oBAAC,gBAAgB,oBAAK,IAAI,CAAC,KAAK,IAAE,kBAAkB,EAAE,IAAI,CAAC,KAAK,IAAI,CAClE,CACT,CAAC;QACN,CAAC;KA6CJ;IAED,OAAO,gBAAgB,CAAC;AAC5B,CAAC,CAAC;AAEF,eAAe,oBAAoB,CAAC","sourcesContent":["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nimport * as React from 'react';\n\ninterface IVisibilyObserverState {\n    isVisible?: boolean;\n    errorMessage?: string;\n    observer?: MutationObserver;\n}\n\nexport interface IVisibilyObserverProps {\n    visibilityObserver?: IVisibilyObserverState;\n}\n\nconst withVisibilyObserver = <P extends IVisibilyObserverProps>(WrappedComponent: React.ComponentType<P>): React.ComponentType<P> => {\n    /**\n     *\n     * VisibilyObserver component\n     * @extends {React.Component<P>}\n     */\n    class VisibilyObserver extends React.Component<P> {\n        public state: IVisibilyObserverState = {\n            isVisible: false,\n            errorMessage: '',\n            observer: undefined\n        };\n\n        private selfRef: React.RefObject<HTMLDivElement> = React.createRef();\n\n        public componentDidMount(): void {\n            this.initMutationObserver();\n        }\n\n        public componentWillUnmount(): void {\n            this.stopMutationObserver();\n        }\n\n        public render(): JSX.Element | null {\n            return (\n                <div className='ms-checkout-payment-instrument__mutation-observer' ref={this.selfRef}>\n                    <WrappedComponent {...this.props} visibilityObserver={this.state} />\n                </div>\n            );\n        }\n\n        private initMutationObserver = (): void => {\n            // Select the node that will be observed for mutations\n            const targetNode = document.getElementsByTagName('body') && document.getElementsByTagName('body')[0];\n            if (!targetNode) {\n                this.setState({\n                    errorMessage: 'No body element found'\n                });\n                return;\n            }\n\n            if (!MutationObserver) {\n                this.setState({\n                    errorMessage: 'MutationObserver is not supported'\n                });\n                return;\n            }\n\n            // Options for the observer (which mutations to observe)\n            const config = { attributes: true, childList: true, subtree: true };\n\n            // Create an observer instance linked to the callback function\n            const _observer = new MutationObserver(() => this.handleVisibilityChange());\n            _observer.observe(targetNode, config);\n\n            this.setState({\n                observer: _observer\n            });\n        };\n\n        private stopMutationObserver = (): void => {\n            this.state.observer && this.state.observer.disconnect();\n        };\n\n        private handleVisibilityChange = (): void => {\n            // If module is visible or not\n            const isVisible = !!this.selfRef.current && this.selfRef.current.offsetWidth > 0 && this.selfRef.current.offsetHeight > 0;\n            if (!this.state.isVisible && isVisible) {\n                this.setState({\n                    isVisible\n                });\n                this.stopMutationObserver();\n            }\n        };\n    }\n\n    return VisibilyObserver;\n};\n\nexport default withVisibilyObserver;\n"]}