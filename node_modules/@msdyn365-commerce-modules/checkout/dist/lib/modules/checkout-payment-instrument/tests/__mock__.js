export const mockResources = {
    cardTitle: 'Card information',
    changePaymentButtonText: 'Change',
    cancelButtonText: 'Cancel',
    submitButtonText: 'Submit',
    genericErrorMessage: 'Something went wrong. Please try again later.',
    defaultSubmitErrorMessage: 'An error occurred in payment method details. Please try again.',
    cardTypeErrorMessage: 'The specified card type is not supported.',
    cardNumberLabel: 'Card ending in',
    expiresDateLabel: 'Expires',
    errorMessageTitle: 'Error message',
    iframeAriaLabel: 'Payment iframe',
    loadingMessage: 'Loading...',
    addressTitle: 'Billing Address'
};
export const testPaymentAcceptPageContent = '<html>' +
    '	<body>' +
    '		<script>' +
    'const iFrameMessageFromParentHandler = (messageEvent) => {' +
    '  const { type, value } = JSON.parse(messageEvent.data);' +
    '  if (type === "msax-cc-submit") {' +
    '    parent.postMessage(\'{"type":"msax-cc-result","value":"87c3109e-73f9-28e6-ba64-82010d96827f"}\', \'*\');' +
    '  }' +
    '};' +
    'window.addEventListener("message",  iFrameMessageFromParentHandler);' +
    '		</script>' +
    '	</body>' +
    '</html>';
export const testTenderLine = {
    MaskedCardNumber: '**1234'
};
export const testTokenizedPaymentCard = {
    NameOnCard: 'Test Name',
    CardTokenInfo: {
        MaskedCardNumber: '**1234'
    },
    ExpirationMonth: 10,
    ExpirationYear: 20,
    Address1: '1 Microsoft Way',
    Address2: 'Test Address 2',
    City: 'Redmond',
    State: 'WA',
    Zip: '98052',
    Country: 'USA'
};
//# sourceMappingURL=__mock__.js.map