{"version":3,"file":"get-card-payment-accept-point.js","sourceRoot":"./src/","sources":["modules/checkout-payment-instrument/actions/get-card-payment-accept-point.ts"],"names":[],"mappings":"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","sourcesContent":["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nimport { buildCacheKey } from '@msdyn365-commerce-modules/retail-actions';\nimport {\n    CacheType, createObservableDataAction, IAction, IActionContext, IActionInput,\n    ICommerceApiSettings, ICreateActionContext, isEmptyOrNullObject\n} from '@msdyn365-commerce/core';\nimport { getCheckoutState, ICheckoutState } from '@msdyn365-commerce/global-state';\nimport {\n    getCardPaymentAcceptPointAsync\n} from '@msdyn365-commerce/retail-proxy/dist/DataActions/CartsDataActions.g';\nimport {\n    CardPaymentAcceptPoint\n} from '@msdyn365-commerce/retail-proxy/dist/Entities/CommerceTypes.g';\nimport get from 'lodash/get';\n\nexport interface IGetCardPaymentAcceptPointInput {\n    showBillingAddress?: boolean;\n    paymenTenderType?: string;\n    apiSettings: ICommerceApiSettings;\n}\n\n/**\n * GetCardPaymentAcceptPointInput - Input for create GetCardPaymentAcceptPoint\n */\nexport class GetCardPaymentAcceptPointInput implements IActionInput {\n    public showBillingAddress?: boolean;\n    public paymenTenderType?: string;\n    private apiSettings: ICommerceApiSettings;\n\n    constructor(input: IGetCardPaymentAcceptPointInput) {\n        this.showBillingAddress = input.showBillingAddress;\n        this.paymenTenderType = input.paymenTenderType;\n        this.apiSettings = input.apiSettings;\n    }\n\n    public getCacheKey = () => buildCacheKey(`CardPaymentAcceptPoint${this.paymenTenderType ? `-${this.paymenTenderType}` : ''}`, this.apiSettings);\n    public getCacheObjectType = () => `CardPaymentAcceptPoint`;\n    public dataCacheType = (): CacheType => 'none';\n}\n\nexport const createCheckoutPaymentInstrumentInput = (inputData: ICreateActionContext) => {\n    // @ts-ignore\n    const { showBillingAddress, paymenTenderType } = inputData.config;\n    const getCardPaymentAcceptPointInput = {\n        showBillingAddres: showBillingAddress,\n        paymenTenderType: paymenTenderType,\n        apiSettings: inputData.requestContext.apiSettings\n    };\n\n    return new GetCardPaymentAcceptPointInput(getCardPaymentAcceptPointInput);\n};\n\n/**\n * Calls the Retail API and returns a cart object based on the passed GetCartInput\n */\nexport async function getCardPaymentAcceptPointAction(\n    input: GetCardPaymentAcceptPointInput,\n    ctx: IActionContext\n): Promise<CardPaymentAcceptPoint> {\n    // If no cart ID is provided in input, we need to create a cart object\n    if (!input) {\n        ctx.telemetry.exception(new Error('[getCardPaymentAcceptPointAction] No valid Input was provided, failing'));\n        throw new Error('[getCardPaymentAcceptPointAction] No valid Input was provided, failing');\n    }\n\n    const { showBillingAddress, paymenTenderType } = input;\n    const checkoutState: ICheckoutState = await getCheckoutState(ctx).catch((error: Error) => {\n        ctx.telemetry.exception(error);\n        throw error;\n    });\n\n    if (\n        isEmptyOrNullObject(checkoutState) ||\n        isEmptyOrNullObject(checkoutState.checkoutCart) ||\n        isEmptyOrNullObject(checkoutState.checkoutCart.cart)\n    ) {\n        ctx.telemetry.exception(new Error('[getCardPaymentAcceptPointAction] Unable to get cart'));\n        throw new Error('[getCardPaymentAcceptPointAction] Unable to get cart');\n    }\n\n    if (!checkoutState.checkoutCart.cart.CartLines || !checkoutState.checkoutCart.cart.CartLines.length) {\n        ctx.telemetry.exception(new Error('[getCardPaymentAcceptPointAction] Cart is empty'));\n        throw new Error('[getCardPaymentAcceptPointAction] Cart is empty');\n    }\n\n    const requestUrl =\n        typeof ctx.requestContext.url.requestUrl === 'string'\n            ? new URL(ctx.requestContext.url.requestUrl)\n            : ctx.requestContext.url.requestUrl;\n    const origin = get(window, 'location.origin') || requestUrl.origin;\n\n    const cardPaymentAcceptSettings = {\n        '@odata.type': '#Microsoft.Dynamics.Commerce.Runtime.DataModel.CardPaymentAcceptSettings',\n        HostPageOrigin: origin,\n        AdaptorPath: `${origin}/Connectors/` || origin,\n        CardPaymentEnabled: false,\n        CardTokenizationEnabled: true,\n        ...(!showBillingAddress && { HideBillingAddress: true }),\n        ...(paymenTenderType && { TenderTypeId: paymenTenderType }),\n        PaymentAmount: 0\n    };\n\n    return getCardPaymentAcceptPointAsync(\n        { callerContext: ctx, bypassCache: 'get' },\n        checkoutState.checkoutCart.cart.Id,\n        cardPaymentAcceptSettings,\n        []\n    )\n        .then(cardPaymentAcceptPoint => {\n            if (!cardPaymentAcceptPoint.AcceptPageUrl && !cardPaymentAcceptPoint.AcceptPageContent) {\n                throw new Error(\n                    '[getCardPaymentAcceptPointAction] Payment Accept Page has neither return AcceptPageUrl nor AcceptPageContent in updatePaymentAcceptPageData'\n                );\n            }\n            return cardPaymentAcceptPoint;\n        })\n        .catch(error => {\n            ctx.telemetry.exception(error);\n            ctx.telemetry.debug('Unable to get Card Payment Accept Point');\n            throw error;\n        });\n}\n\nexport default createObservableDataAction({\n    id: '@msdyn365-commerce/checkout-payment-instrument/get-card-payment-accept-point',\n    action: <IAction<CardPaymentAcceptPoint>>getCardPaymentAcceptPointAction,\n    input: createCheckoutPaymentInstrumentInput\n});\n"]}