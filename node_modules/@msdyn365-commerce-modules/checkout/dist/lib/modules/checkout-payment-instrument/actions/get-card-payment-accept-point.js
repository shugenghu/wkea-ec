import { buildCacheKey } from '@msdyn365-commerce-modules/retail-actions';
import { createObservableDataAction, isEmptyOrNullObject } from '@msdyn365-commerce/core';
import { getCheckoutState } from '@msdyn365-commerce/global-state';
import { getCardPaymentAcceptPointAsync } from '@msdyn365-commerce/retail-proxy/dist/DataActions/CartsDataActions.g';
import get from 'lodash/get';
export class GetCardPaymentAcceptPointInput {
    constructor(input) {
        this.getCacheKey = () => buildCacheKey(`CardPaymentAcceptPoint${this.paymenTenderType ? `-${this.paymenTenderType}` : ''}`, this.apiSettings);
        this.getCacheObjectType = () => `CardPaymentAcceptPoint`;
        this.dataCacheType = () => 'none';
        this.showBillingAddress = input.showBillingAddress;
        this.paymenTenderType = input.paymenTenderType;
        this.apiSettings = input.apiSettings;
    }
}
export const createCheckoutPaymentInstrumentInput = (inputData) => {
    const { showBillingAddress, paymenTenderType } = inputData.config;
    const getCardPaymentAcceptPointInput = {
        showBillingAddres: showBillingAddress,
        paymenTenderType: paymenTenderType,
        apiSettings: inputData.requestContext.apiSettings
    };
    return new GetCardPaymentAcceptPointInput(getCardPaymentAcceptPointInput);
};
export async function getCardPaymentAcceptPointAction(input, ctx) {
    if (!input) {
        ctx.telemetry.exception(new Error('[getCardPaymentAcceptPointAction] No valid Input was provided, failing'));
        throw new Error('[getCardPaymentAcceptPointAction] No valid Input was provided, failing');
    }
    const { showBillingAddress, paymenTenderType } = input;
    const checkoutState = await getCheckoutState(ctx).catch((error) => {
        ctx.telemetry.exception(error);
        throw error;
    });
    if (isEmptyOrNullObject(checkoutState) ||
        isEmptyOrNullObject(checkoutState.checkoutCart) ||
        isEmptyOrNullObject(checkoutState.checkoutCart.cart)) {
        ctx.telemetry.exception(new Error('[getCardPaymentAcceptPointAction] Unable to get cart'));
        throw new Error('[getCardPaymentAcceptPointAction] Unable to get cart');
    }
    if (!checkoutState.checkoutCart.cart.CartLines || !checkoutState.checkoutCart.cart.CartLines.length) {
        ctx.telemetry.exception(new Error('[getCardPaymentAcceptPointAction] Cart is empty'));
        throw new Error('[getCardPaymentAcceptPointAction] Cart is empty');
    }
    const requestUrl = typeof ctx.requestContext.url.requestUrl === 'string'
        ? new URL(ctx.requestContext.url.requestUrl)
        : ctx.requestContext.url.requestUrl;
    const origin = get(window, 'location.origin') || requestUrl.origin;
    const cardPaymentAcceptSettings = {
        '@odata.type': '#Microsoft.Dynamics.Commerce.Runtime.DataModel.CardPaymentAcceptSettings',
        HostPageOrigin: origin,
        AdaptorPath: `${origin}/Connectors/` || origin,
        CardPaymentEnabled: false,
        CardTokenizationEnabled: true,
        ...(!showBillingAddress && { HideBillingAddress: true }),
        ...(paymenTenderType && { TenderTypeId: paymenTenderType }),
        PaymentAmount: 0
    };
    return getCardPaymentAcceptPointAsync({ callerContext: ctx, bypassCache: 'get' }, checkoutState.checkoutCart.cart.Id, cardPaymentAcceptSettings, [])
        .then(cardPaymentAcceptPoint => {
        if (!cardPaymentAcceptPoint.AcceptPageUrl && !cardPaymentAcceptPoint.AcceptPageContent) {
            throw new Error('[getCardPaymentAcceptPointAction] Payment Accept Page has neither return AcceptPageUrl nor AcceptPageContent in updatePaymentAcceptPageData');
        }
        return cardPaymentAcceptPoint;
    })
        .catch(error => {
        ctx.telemetry.exception(error);
        ctx.telemetry.debug('Unable to get Card Payment Accept Point');
        throw error;
    });
}
export default createObservableDataAction({
    id: '@msdyn365-commerce/checkout-payment-instrument/get-card-payment-accept-point',
    action: getCardPaymentAcceptPointAction,
    input: createCheckoutPaymentInstrumentInput
});
//# sourceMappingURL=get-card-payment-accept-point.js.map