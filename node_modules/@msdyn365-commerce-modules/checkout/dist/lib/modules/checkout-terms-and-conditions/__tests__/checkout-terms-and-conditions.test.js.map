{"version":3,"file":"checkout-terms-and-conditions.test.js","sourceRoot":"./src/","sources":["modules/checkout-terms-and-conditions/__tests__/checkout-terms-and-conditions.test.tsx"],"names":[],"mappings":"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","sourcesContent":["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nimport { mount, render, shallow } from 'enzyme';\n\nimport * as React from 'react';\n\nimport {\n    buildHydratedMockActionContext, buildMockModuleProps, IActionContext, ICoreContext\n} from '@msdyn365-commerce/core';\nimport { ICheckoutState } from '@msdyn365-commerce/global-state';\nimport { AsyncResult } from '@msdyn365-commerce/retail-proxy';\n\nimport CheckoutTermsAndConditions, {\n    ICheckoutTermsAndConditionsModuleProps\n} from '../checkout-terms-and-conditions';\nimport { ICheckoutTermsAndConditionsData } from '../checkout-terms-and-conditions.data';\nimport {\n    ICheckoutTermsAndConditionsConfig, ICheckoutTermsAndConditionsResources\n} from '../checkout-terms-and-conditions.props.autogenerated';\nimport renderView from '../checkout-terms-and-conditions.view';\n\nconst mockConfig: ICheckoutTermsAndConditionsConfig = {\n    showCheckbox: true,\n    showControlButtons: true,\n    description: '<span>T&C<span>'\n};\n\nconst mockResources: ICheckoutTermsAndConditionsResources = {\n    errorMessageTitle: 'Error message',\n    errorMessage: 'Please accept terms and conditions',\n    saveBtnLabel: 'Save',\n    editBtnLabel: 'Change',\n    cancelBtnLabel: 'Cancel',\n    saveBtnAriaLabel: 'Save',\n    editBtnAriaLabel: 'Change',\n    cancelBtnAriaLabel: 'Cancel',\n};\n\nlet mockData: ICheckoutTermsAndConditionsData;\n\nconst actionContext: IActionContext = buildHydratedMockActionContext();\n\nconst mockContext: ICoreContext = {\n    actionContext: actionContext,\n    // @ts-ignore: we only need to mock the actionContext, ignore the rest required fields\n    request: {\n        // @ts-ignore: optOutWebActivityTracking\n    }\n};\n\nconst mockModuleState = {};\nlet moduleProps: ICheckoutTermsAndConditionsModuleProps;\n\ndescribe('CheckoutTermsAndConditions', () => {\n    beforeEach(() => {\n        mockData = {\n            checkout: {\n                status: 'SUCCESS',\n                result: {\n                    isTermsAndConditionAccepted: undefined,\n                    updateTermsAndConditionsAcceptance: input => {\n                        // @ts-ignore\n                        mockData.checkout.result!.isTermsAndConditionAccepted = input.newIsTermsAndConditionAccepted;\n                    },\n                    checkoutCart: {\n                        cart: {}\n                    }\n                }\n            } as AsyncResult<ICheckoutState>\n        };\n    });\n\n    it('Render correctly', () => {\n        const newMockConfig = { ...mockConfig };\n        moduleProps = {\n            ...(buildMockModuleProps({}, {}, newMockConfig, mockContext) as ICheckoutTermsAndConditionsModuleProps),\n            // @ts-ignore\n            renderView: renderView,\n            resources: mockResources,\n            data: mockData,\n            // @ts-ignore\n            moduleState: mockModuleState\n        };\n\n        const component = render(<CheckoutTermsAndConditions {...moduleProps} />);\n        expect(component).toMatchSnapshot();\n    });\n\n    it('Render without buttons', () => {\n        const newMockConfig = { ...mockConfig };\n        newMockConfig.showControlButtons = false;\n        moduleProps = {\n            ...(buildMockModuleProps({}, {}, newMockConfig, mockContext) as ICheckoutTermsAndConditionsModuleProps),\n            // @ts-ignore\n            renderView: renderView,\n            resources: mockResources,\n            data: mockData,\n            // @ts-ignore\n            moduleState: mockModuleState\n        };\n\n        const component = render(<CheckoutTermsAndConditions {...moduleProps} />);\n        expect(component).toMatchSnapshot();\n    });\n\n    it('Render without checkbox', () => {\n        const newMockConfig = { ...mockConfig };\n        newMockConfig.showCheckbox = false;\n        moduleProps = {\n            ...(buildMockModuleProps({}, {}, newMockConfig, mockContext) as ICheckoutTermsAndConditionsModuleProps),\n            // @ts-ignore\n            renderView: renderView,\n            resources: mockResources,\n            data: mockData,\n            // @ts-ignore\n            moduleState: mockModuleState\n        };\n\n        const component = render(<CheckoutTermsAndConditions {...moduleProps} />);\n        expect(component).toMatchSnapshot();\n    });\n\n    it('Set initial data correctly', () => {\n        const newMockConfig = { ...mockConfig };\n        moduleProps = {\n            ...(buildMockModuleProps({ ...mockData }, {}, newMockConfig, mockContext) as ICheckoutTermsAndConditionsModuleProps),\n            // @ts-ignore\n            renderView: jest.fn(props => { return <div props={props} />; }),\n            resources: mockResources,\n            // @ts-ignore\n            moduleState: mockModuleState\n        };\n\n        const component = mount(<CheckoutTermsAndConditions {...moduleProps} />);\n        expect(moduleProps.renderView).toBeCalled();\n\n        const data = component.childAt(0).props().data;\n        expect(data.checkout.result.isTermsAndConditionAccepted).toBeFalsy();\n\n        component.unmount();\n    });\n\n    it('Set initial data correctly if checkbox is not enabled', () => {\n        const newMockConfig = { ...mockConfig };\n        newMockConfig.showCheckbox = false;\n        moduleProps = {\n            ...(buildMockModuleProps({ ...mockData }, {}, newMockConfig, mockContext) as ICheckoutTermsAndConditionsModuleProps),\n            // @ts-ignore\n            renderView: jest.fn(props => { return <div props={props} />; }),\n            resources: mockResources,\n            // @ts-ignore\n            moduleState: mockModuleState\n        };\n\n        const component = mount(<CheckoutTermsAndConditions {...moduleProps} />);\n        expect(moduleProps.renderView).toBeCalled();\n\n        const data = component.childAt(0).props().data;\n        expect(data.checkout.result.isTermsAndConditionAccepted).toBeTruthy();\n\n        component.unmount();\n    });\n\n    it('Set isTermsAndConditionAccepted on submit', () => {\n        const newMockConfig = { ...mockConfig };\n        moduleProps = {\n            ...(buildMockModuleProps({ ...mockData }, {}, newMockConfig, mockContext) as ICheckoutTermsAndConditionsModuleProps),\n            // @ts-ignore\n            renderView: renderView,\n            resources: mockResources,\n            // @ts-ignore\n            moduleState: mockModuleState\n        };\n\n        const component = mount(shallow(<CheckoutTermsAndConditions {...moduleProps} />).get(0));\n\n        const componentInstance = component.instance();\n\n        // @ts-ignore\n        let data = componentInstance.props.data;\n        expect(data.checkout.result.isTermsAndConditionAccepted).toBeFalsy();\n\n        const checkbox = component.find('.ms-checkout-terms-and-conditions__input-checkbox').first();\n        checkbox.simulate('change', {\n            target: {\n                checked: true\n            }\n        });\n\n        // @ts-ignore\n        componentInstance.onSubmit();\n\n        // @ts-ignore\n        data = componentInstance.props.data;\n        expect(data.checkout.result.isTermsAndConditionAccepted).toBeTruthy();\n\n        component.unmount();\n    });\n\n    it('AutoSave isTermsAndConditionAccepted on change', () => {\n        const newMockConfig = { ...mockConfig };\n        newMockConfig.showControlButtons = false;\n\n        moduleProps = {\n            ...(buildMockModuleProps({ ...mockData }, {}, newMockConfig, mockContext) as ICheckoutTermsAndConditionsModuleProps),\n            // @ts-ignore\n            renderView: renderView,\n            resources: mockResources,\n            // @ts-ignore\n            moduleState: mockModuleState\n        };\n\n        const component = mount(shallow(<CheckoutTermsAndConditions {...moduleProps} />).get(0));\n\n        const componentInstance = component.instance();\n\n        // @ts-ignore\n        let data = componentInstance.props.data;\n        expect(data.checkout.result.isTermsAndConditionAccepted).toBeFalsy();\n\n        const checkbox = component.find('.ms-checkout-terms-and-conditions__input-checkbox').first();\n        checkbox.simulate('change', {\n            target: {\n                checked: true\n            }\n        });\n\n        // @ts-ignore\n        data = componentInstance.props.data;\n        expect(data.checkout.result.isTermsAndConditionAccepted).toBeTruthy();\n\n        component.unmount();\n    });\n\n});\n"]}