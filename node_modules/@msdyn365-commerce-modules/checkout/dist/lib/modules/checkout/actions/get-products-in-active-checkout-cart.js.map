{"version":3,"file":"get-products-in-active-checkout-cart.js","sourceRoot":"./src/","sources":["modules/checkout/actions/get-products-in-active-checkout-cart.ts"],"names":[],"mappings":"AAAA,OAAO,EAAE,iBAAiB,EAAE,YAAY,EAAE,MAAM,2CAA2C,CAAC;AAC5F,OAAO,EAAa,0BAA0B,EAAyC,MAAM,yBAAyB,CAAC;AACvH,OAAO,EAAE,gBAAgB,EAAE,MAAM,iCAAiC,CAAC;AAMnE,MAAM,OAAO,+BAA+B;IAA5C;QACW,gBAAW,GAAG,GAAG,EAAE,CAAC,4BAA4B,CAAC;QACjD,uBAAkB,GAAG,GAAG,EAAE,CAAC,4BAA4B,CAAC;QACxD,kBAAa,GAAG,GAAc,EAAE,CAAC,MAAM,CAAC;IACnD,CAAC;CAAA;AAED,MAAM,CAAC,MAAM,WAAW,GAAG,GAAG,EAAE;IAC5B,OAAO,IAAI,+BAA+B,EAAE,CAAC;AACjD,CAAC,CAAC;AAKF,MAAM,CAAC,KAAK,UAAU,mCAAmC,CAAC,KAAsC,EAAE,GAAmB;IAEjH,IAAI,CAAC,KAAK,EAAE;QACR,GAAG,CAAC,SAAS,CAAC,SAAS,CAAC,IAAI,KAAK,CAAC,yEAAyE,CAAC,CAAC,CAAC;QAC9G,MAAM,IAAI,KAAK,CAAC,yEAAyE,CAAC,CAAC;KAC9F;IAED,MAAM,aAAa,GAAG,MAAM,gBAAgB,CAAC,GAAG,CAAC,CAAC;IAClD,MAAM,IAAI,GAAG,aAAa,CAAC,YAAY,CAAC,IAAI,CAAC;IAG7C,IAAI,IAAI,IAAI,IAAI,CAAC,SAAS,IAAI,IAAI,CAAC,SAAS,CAAC,MAAM,EAAE;QACjD,OAAO,iBAAiB,CACJ,IAAI,CAAC,SAAS,CAAC,GAAG,CAAC,QAAQ,CAAC,EAAE;YAC1C,IAAI,QAAQ,CAAC,SAAS,EAAE;gBACpB,OAAO,IAAI,YAAY,CAAC,QAAQ,CAAC,SAAS,EAAE,GAAG,CAAC,cAAc,CAAC,WAAW,CAAC,CAAC;aAC/E;YACD,OAAO,SAAS,CAAC;QACrB,CAAC,CAAC,CAAC,MAAM,CAAC,OAAO,CAAC,EAClB,GAAG,CACN;aACI,IAAI,CAAC,QAAQ,CAAC,EAAE;YACb,IAAI,QAAQ,EAAE;gBACV,OAAO,QAAQ,CAAC;aACnB;iBAAM;gBACH,OAAO,EAAE,CAAC;aACb;QACL,CAAC,CAAC;aACD,KAAK,CAAC,KAAK,CAAC,EAAE;YACX,GAAG,CAAC,SAAS,CAAC,SAAS,CAAC,KAAK,CAAC,CAAC;YAC/B,MAAM,IAAI,KAAK,CAAC,oFAAoF,CAAC,CAAC;QAC1G,CAAC,CAAC,CAAC;KACV;IAED,OAAwB,EAAE,CAAC;AAC/B,CAAC;AAED,eAAe,0BAA0B,CAAC;IACtC,EAAE,EAAE,0EAA0E;IAC9E,MAAM,EAA4B,mCAAmC;IACrE,KAAK,EAAE,WAAW;CACrB,CAAC,CAAC","sourcesContent":["import { getSimpleProducts, ProductInput } from '@msdyn365-commerce-modules/retail-actions';\nimport { CacheType, createObservableDataAction, IAction, IActionContext, IActionInput } from '@msdyn365-commerce/core';\nimport { getCheckoutState } from '@msdyn365-commerce/global-state';\nimport { SimpleProduct } from '@msdyn365-commerce/retail-proxy/dist/Entities/CommerceTypes.g';\n\n/**\n * Input class for ActiveCheckoutCartWithProducts data action\n */\nexport class ActiveCheckoutCartProductsInput implements IActionInput {\n    public getCacheKey = () => 'ActiveCheckoutCartProducts';\n    public getCacheObjectType = () => 'ActiveCheckoutCartProducts';\n    public dataCacheType = (): CacheType => 'none';\n}\n\nexport const createInput = () => {\n    return new ActiveCheckoutCartProductsInput();\n};\n\n/**\n * Calls the Retail API and returns a cart object based on the passed GetCartInput\n */\nexport async function getActiveCheckoutCartProductsAction(input: ActiveCheckoutCartProductsInput, ctx: IActionContext): Promise<SimpleProduct[]> {\n    // If no cart ID is provided in input, we need to create a cart object\n    if (!input) {\n        ctx.telemetry.exception(new Error('[getActiveCheckoutCartWithProducts]No valid Input was provided, failing'));\n        throw new Error('[getActiveCheckoutCartWithProducts]No valid Input was provided, failing');\n    }\n\n    const checkoutState = await getCheckoutState(ctx);\n    const cart = checkoutState.checkoutCart.cart;\n\n    // If there are cart lines, make call to get products\n    if (cart && cart.CartLines && cart.CartLines.length) {\n        return getSimpleProducts(\n            <ProductInput[]>cart.CartLines.map(cartLine => {\n                if (cartLine.ProductId) {\n                    return new ProductInput(cartLine.ProductId, ctx.requestContext.apiSettings);\n                }\n                return undefined;\n            }).filter(Boolean),\n            ctx\n        )\n            .then(products => {\n                if (products) {\n                    return products;\n                } else {\n                    return [];\n                }\n            })\n            .catch(error => {\n                ctx.telemetry.exception(error);\n                throw new Error('[getActiveCheckoutCartWithProdcuts]Unable to hydrate cart with product information');\n            });\n    }\n\n    return <SimpleProduct[]>[];\n}\n\nexport default createObservableDataAction({\n    id: '@msdyn365-commerce-modules/checkout/get-products-in-active-checkout-cart',\n    action: <IAction<SimpleProduct[]>>getActiveCheckoutCartProductsAction,\n    input: createInput\n});\n"]}