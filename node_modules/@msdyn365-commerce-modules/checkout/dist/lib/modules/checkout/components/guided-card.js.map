{"version":3,"file":"guided-card.js","sourceRoot":"./src/","sources":["modules/checkout/components/guided-card.tsx"],"names":[],"mappings":"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","sourcesContent":["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/ //\nimport { Heading as HeadingType } from '@msdyn365-commerce-modules/data-types';\nimport { Button, getPayloadObject, getTelemetryAttributes, IPayLoad, ITelemetryContent, TelemetryConstant } from '@msdyn365-commerce-modules/utilities';\nimport classname from 'classnames';\nimport * as React from 'react';\nimport ReactDOM from 'react-dom';\n\nexport interface ICheckoutGuidedCardProps {\n    step: number;\n    title?: HeadingType;\n    disabled?: boolean; // module is not available\n    isActive?: boolean; // step === currentStep\n    isVisted?: boolean; // step < currentStep\n    isExpanded?: boolean;\n    isReady?: boolean;\n    isPending?: boolean;\n    isUpdating?: boolean;\n    isSubmitting?: boolean;\n    isCancelAllowed?: boolean;\n    isMobile?: boolean;\n    hasInitialized?: boolean;\n    hasControlGroup?: boolean;\n    children: React.ReactNode;\n    resource: {\n        checkoutStepTitleFormat: string;\n        saveBtnLabel: string;\n        changeBtnLabel: string;\n        cancelBtnLabel: string;\n        saveAndContinueBtnLabel: string;\n    };\n    telemetryContent?: ITelemetryContent;\n    onEdit?(): void;\n    onCancel?(): void;\n    onSubmit?(): void;\n    onNext(): void;\n}\n\n/**\n *\n * CheckoutGuidedCard component\n * @extends {React.Component<ICheckoutGuidedCardProps>}\n */\nclass CheckoutGuidedCard extends React.PureComponent<ICheckoutGuidedCardProps> {\n    private editButtonRef: React.RefObject<HTMLButtonElement> = React.createRef();\n    private formCardRef: React.RefObject<HTMLDivElement> = React.createRef();\n    private payLoad: IPayLoad;\n\n    constructor(props: ICheckoutGuidedCardProps) {\n        super(props);\n        this.payLoad = getPayloadObject('click', props.telemetryContent!, '');\n    }\n\n    public componentDidUpdate(prevProps: ICheckoutGuidedCardProps): void {\n        /**\n         * Move to next step when current step is ready\n         */\n        const { isActive, isReady, onNext, isVisted, onEdit } = this.props;\n\n        // Move to next step after completing the current step\n        if (isActive && isReady) {\n            onNext();\n        }\n\n        // Set the focus to Edit button once edit button appear\n        // (It happens when current step switch to isReady status)\n        const prevCanEdit = prevProps.isReady && prevProps.isVisted && !!prevProps.onEdit;\n        const canEdit = isReady && isVisted && !!onEdit;\n        if (!prevCanEdit && canEdit) {\n            this.focusOnEditButton();\n            this.scrollToTitle();\n        }\n\n        // Set the focus to the first focusable element\n        // (It happens when current step switch to isUpdating status)\n        if (prevProps.isReady && !isReady) {\n            this.focusOnFirstFocusableElement();\n        }\n    }\n\n    public render(): JSX.Element | null {\n        const {\n            title,\n            disabled,\n            isExpanded,\n            isActive,\n            isVisted,\n            children,\n            isReady,\n            isPending,\n            isUpdating,\n            hasInitialized,\n            hasControlGroup,\n            onEdit,\n            resource\n        } = this.props;\n        const { changeBtnLabel } = resource;\n\n        this.payLoad.contentAction.etext = TelemetryConstant.CheckoutChange;\n        const changeBtnAttributes = getTelemetryAttributes(this.props.telemetryContent!, this.payLoad);\n        const canEdit = hasControlGroup && isReady && isVisted && onEdit;\n\n        return (\n            <div\n                className={classname('ms-checkout__guided-card', {\n                    active: isActive,\n                    expanded: isExpanded,\n                    closed: !isExpanded,\n                    visted: isVisted,\n                    hidden: disabled,\n                    initialized: hasInitialized,\n                    disabled: disabled,\n                    ready: isReady,\n                    pending: isPending,\n                    updating: isUpdating\n                })}\n                ref={this.formCardRef}\n            >\n                <div className='ms-checkout__guided-card-header'>\n                    {this.getTitle()}\n\n                    {canEdit && (\n                        <Button\n                            innerRef={this.editButtonRef}\n                            className='ms-checkout__guided-card-btn-edit'\n                            title={changeBtnLabel}\n                            color='link'\n                            onClick={onEdit}\n                            aria-label={title && title.text ? `${changeBtnLabel} ${title.text}` : ''}\n                            {...changeBtnAttributes}\n                        >\n                            {changeBtnLabel}\n                        </Button>\n                    )}\n                </div>\n\n                <div\n                    className={classname('ms-checkout__guided-card-body', {\n                        hidden: !isExpanded\n                    })}\n                >\n                    <div className='ms-checkout__guided-card-content'>{children}</div>\n\n                    {this.renderFooder()}\n                </div>\n            </div>\n        );\n    }\n\n    private renderFooder = (): JSX.Element | null => {\n        const { isVisted, isReady, isSubmitting, isCancelAllowed, hasControlGroup, onCancel, onSubmit, resource } = this.props;\n        const { saveBtnLabel, cancelBtnLabel, saveAndContinueBtnLabel } = resource;\n\n        const canSubmit = !isReady && onSubmit;\n        const canCancel = !isReady && isVisted && isCancelAllowed && onCancel;\n\n        if (!hasControlGroup || (!canSubmit && !canCancel)) {\n            return null;\n        }\n\n        this.payLoad.contentAction.etext = isVisted ? TelemetryConstant.Save : TelemetryConstant.SaveContinue;\n        const saveBtnAttributes = getTelemetryAttributes(this.props.telemetryContent!, this.payLoad);\n        this.payLoad.contentAction.etext = TelemetryConstant.Cancel;\n        const cancelBtnAttributes = getTelemetryAttributes(this.props.telemetryContent!, this.payLoad);\n\n        return (\n            <div className='ms-checkout__guided-card-footer'>\n                {canSubmit && (\n                    <Button\n                        className={classname('ms-checkout__guided-card-btn-save', { 'is-submitting': isSubmitting })}\n                        title={isVisted ? saveBtnLabel : saveAndContinueBtnLabel}\n                        color='primary'\n                        disabled={isSubmitting}\n                        onClick={onSubmit}\n                        {...saveBtnAttributes}\n                    >\n                        {isVisted && isCancelAllowed ? saveBtnLabel : saveAndContinueBtnLabel}\n                    </Button>\n                )}\n                {canCancel && (\n                    <Button\n                        className='ms-checkout__guided-card-btn-cancel'\n                        title={cancelBtnLabel}\n                        color='secondary'\n                        onClick={onCancel}\n                        {...cancelBtnAttributes}\n                    >\n                        {cancelBtnLabel}\n                    </Button>\n                )}\n            </div>\n        );\n    };\n\n    private focusOnFirstFocusableElement = (): void => {\n        const node = ReactDOM.findDOMNode(this) as HTMLElement;\n        const focussableElements = `\n             a:not([disabled]),\n             button:not([disabled]),\n             input[type=submit]:not([disabled]),\n             input[type=checkbox]:not([disabled]),\n             input[type=text]:not([disabled]),\n             input[type=radio]:not([disabled]),\n             input[type=password]:not([disabled]),\n             select:not([disabled]),\n             textarea:not([disabled]),\n             [tabindex]:not([disabled]):not([tabindex=\"-1\"])\n         `;\n\n        const child = node && node.querySelector && (node.querySelector(focussableElements) as HTMLElement);\n        child && child.focus && child.focus();\n    };\n\n    private focusOnEditButton = (): void => {\n        // Focus on edit button\n        const editButton =\n            this.editButtonRef &&\n            this.editButtonRef.current &&\n            this.editButtonRef.current.focus &&\n            (this.editButtonRef.current as HTMLElement);\n        editButton && editButton.focus();\n    };\n\n    private scrollToTitle = (): void => {\n        // scroll window to the title of the step that was just completed only in mobile viewport\n        const formCard = this.props.isMobile && this.formCardRef && this.formCardRef.current && (this.formCardRef.current as HTMLElement);\n        formCard && formCard.scrollIntoView();\n    };\n\n    private getTitle = (): JSX.Element => {\n        const { step, title } = this.props;\n        const { headingTag: Tag = 'h2', text = '' } = title || {};\n        return (\n            <Tag className='ms-checkout__guided-card-title'>\n                <span className='ms-checkout__guided-card-title-step'>{step + 1}. </span>\n                {text && <span className='ms-checkout__guided-card-title-text'>{text}</span>}\n            </Tag>\n        );\n    };\n}\n\nexport default CheckoutGuidedCard;\n"]}