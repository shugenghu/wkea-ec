{"version":3,"file":"place-order-button.js","sourceRoot":"./src/","sources":["modules/checkout/components/place-order-button.tsx"],"names":[],"mappings":"AAIA,OAAO,EAAE,MAAM,EAAE,gBAAgB,EAAE,sBAAsB,EAAqB,MAAM,sCAAsC,CAAC;AAC3H,OAAO,EAAE,cAAc,EAAE,MAAM,yBAAyB,CAAC;AACzD,OAAO,UAAU,MAAM,YAAY,CAAC;AACpC,OAAO,KAAK,EAAE,EAAE,QAAQ,EAAE,MAAM,OAAO,CAAC;AASxC,MAAM,wBAAwB,GAA6C,CAAC,EAAE,cAAc,EAAE,aAAa,EAAE,UAAU,EAAE,gBAAgB,EAAE,EAAE,EAAE;IAC3I,MAAM,CAAC,MAAM,EAAE,SAAS,CAAC,GAAG,QAAQ,CAAC,KAAK,CAAC,CAAC;IAC5C,MAAM,OAAO,GAAG,gBAAgB,CAAC,cAAc,CAAC,QAAQ,EAAE,gBAAiB,EAAE,cAAc,EAAE,EAAE,CAAC,CAAC;IACjG,MAAM,UAAU,GAAG,sBAAsB,CAAC,gBAAiB,EAAE,OAAO,CAAC,CAAC;IACtE,MAAM,YAAY,GAAG,KAAK,IAAI,EAAE;QAC5B,IAAI,MAAM,IAAI,CAAC,aAAa,EAAE;YAC1B,OAAO;SACV;QACD,SAAS,CAAC,IAAI,CAAC,CAAC;QAChB,MAAM,UAAU,EAAE,CAAC;QACnB,SAAS,CAAC,KAAK,CAAC,CAAC;IACrB,CAAC,CAAC;IACF,OAAO,CACH,oBAAC,MAAM,kBACH,SAAS,EAAE,UAAU,CAAC,8BAA8B,EAAE,EAAE,SAAS,EAAE,MAAM,EAAE,CAAC,EAC5E,KAAK,EAAC,SAAS,EACf,OAAO,EAAE,YAAY,EACrB,KAAK,EAAE,cAAc,IACjB,UAAU,IACd,QAAQ,EAAE,CAAC,aAAa,KAEvB,cAAc,CACV,CACZ,CAAC;AACN,CAAC,CAAC;AAEF,eAAe,wBAAwB,CAAC","sourcesContent":["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/ //\nimport { Button, getPayloadObject, getTelemetryAttributes, ITelemetryContent } from '@msdyn365-commerce-modules/utilities';\nimport { TelemetryEvent } from '@msdyn365-commerce/core';\nimport classnames from 'classnames';\nimport React, { useState } from 'react';\n\ninterface ICheckoutPlaceOrderButtonProps {\n    canPlaceOrder: boolean;\n    placeOrderText: string;\n    telemetryContent?: ITelemetryContent;\n    placeOrder(): Promise<void>;\n}\n\nconst CheckoutPlaceOrderButton: React.FC<ICheckoutPlaceOrderButtonProps> = ({ placeOrderText, canPlaceOrder, placeOrder, telemetryContent }) => {\n    const [isBusy, setIsBusy] = useState(false);\n    const payload = getPayloadObject(TelemetryEvent.Purchase, telemetryContent!, placeOrderText, '');\n    const attributes = getTelemetryAttributes(telemetryContent!, payload);\n    const onPlaceOrder = async () => {\n        if (isBusy || !canPlaceOrder) {\n            return;\n        }\n        setIsBusy(true);\n        await placeOrder();\n        setIsBusy(false);\n    };\n    return (\n        <Button\n            className={classnames('ms-checkout__btn-place-order', { 'is-busy': isBusy })}\n            color='primary'\n            onClick={onPlaceOrder}\n            title={placeOrderText}\n            {...attributes}\n            disabled={!canPlaceOrder}\n        >\n            {placeOrderText}\n        </Button>\n    );\n};\n\nexport default CheckoutPlaceOrderButton;\n"]}