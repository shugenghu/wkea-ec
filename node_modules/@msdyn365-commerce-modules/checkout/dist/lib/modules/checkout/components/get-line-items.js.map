{"version":3,"file":"get-line-items.js","sourceRoot":"./src/","sources":["modules/checkout/components/get-line-items.tsx"],"names":[],"mappings":"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","sourcesContent":["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nimport { getProductUrlSync } from '@msdyn365-commerce-modules/retail-actions';\nimport { Button, getPayloadObject, getTelemetryAttributes, INodeProps, ITelemetryContent, TelemetryConstant } from '@msdyn365-commerce-modules/utilities';\nimport { CartLineItemComponent } from '@msdyn365-commerce/components';\nimport * as Msdyn365 from '@msdyn365-commerce/core';\nimport { CartLine, OrgUnitLocation, SimpleProduct } from '@msdyn365-commerce/retail-proxy/dist/Entities/CommerceTypes.g';\nimport classnames from 'classnames';\nimport get from 'lodash/get';\nimport * as React from 'react';\nimport { ICheckoutData } from '../checkout.data';\nimport { ICheckoutProps } from '../checkout.props.autogenerated';\n\ntype deliveryType = 'pickup' | 'ship';\n\nexport interface IPickUpAtStore {\n    PickUpAtStore: INodeProps;\n    label: React.ReactNode;\n    location: React.ReactNode;\n}\n\nexport interface ILineItem {\n    LineId: string;\n    LineItem: INodeProps;\n    item?: React.ReactNode;\n    pickUpAtStore?: IPickUpAtStore;\n}\n\nexport interface ILineItemDeliveryGroup {\n    LineItemDeliveryGroup: INodeProps;\n    LineItemList: INodeProps;\n    heading: React.ReactNode;\n    lineItems: ILineItem[];\n}\n\nexport interface ILineItems {\n    LineItems: INodeProps;\n    Header: INodeProps;\n    heading: React.ReactNode;\n    editLink: React.ReactNode;\n    itemsForPickup?: ILineItemDeliveryGroup;\n    itemsForShip?: ILineItemDeliveryGroup;\n}\n\n// tslint:disable-next-line:max-func-body-length\nexport const getLineItems = (input: ICheckoutProps<ICheckoutData>, telemetryContent?: ITelemetryContent): ILineItems | undefined => {\n    const pickupDeliveryModeCode = get(input, 'context.request.channel.PickupDeliveryModeCode');\n    const _getDeliveryLocation = (cartLine: CartLine): string => {\n        const orgUnitLocations = get(input, 'data.orgUnitLocations.result');\n        if (!cartLine.FulfillmentStoreId || !orgUnitLocations) {\n            return '';\n        }\n\n        const locationMatch = (orgUnitLocations || []).find((location: OrgUnitLocation): boolean => {\n            return location.OrgUnitNumber === cartLine.FulfillmentStoreId;\n        });\n\n        return locationMatch && locationMatch.OrgUnitName;\n    };\n\n    const _getProduct = (productId: number): SimpleProduct | undefined => {\n        const products = get(input, 'data.products.result') || [];\n        return products.find((_product: SimpleProduct) => {\n            return productId === _product.RecordId;\n        });\n    };\n\n    const _getLineItemComponent = (cartLine: CartLine): JSX.Element | undefined => {\n        const product = cartLine.ProductId && _getProduct(cartLine.ProductId);\n        const {\n            id,\n            typeName,\n            context,\n            config: { imageSettings, showShippingChargesForLineItems },\n            resources: {\n                quantityDisplayString,\n                productDimensionTypeColor,\n                productDimensionTypeSize,\n                productDimensionTypeStyle,\n                configString,\n                inputQuantityAriaLabel,\n                discountStringText,\n                shippingCharges,\n            },\n            context: {\n                request: { gridSettings }\n            }\n        } = input;\n\n        if (!product) {\n            return;\n        }\n\n        return (\n            <CartLineItemComponent\n                id={id}\n                typeName={typeName}\n                context={context}\n                resources={{\n                    sizeString: productDimensionTypeSize,\n                    colorString: productDimensionTypeColor,\n                    styleString: productDimensionTypeStyle,\n                    quantityDisplayString,\n                    configString,\n                    inputQuantityAriaLabel,\n                    discountStringText,\n                    originalPriceText:'',\n                    currentPriceText:'',\n                    shippingChargesText: shippingCharges,\n                }}\n                isQuantityEditable={false}\n                imageSettings={imageSettings!}\n                gridSettings={gridSettings!}\n                productUrl={getProductUrlSync(product, context.actionContext, undefined)}\n                primaryImageUrl={product.PrimaryImageUrl}\n                data={{\n                    cartLine: cartLine,\n                    product: product\n                }}\n                showShippingChargesForLineItems = {showShippingChargesForLineItems}\n                telemetryContent = {telemetryContent}\n            />\n        );\n    };\n\n    const _getPickUpAtStoreComponents = (pickupDeliveryLocation: string): IPickUpAtStore => {\n        const {\n            resources: { pickUpAtStoreWithLocationText }\n        } = input;\n\n        return {\n            PickUpAtStore: { className: 'ms-checkout__pick-up-at-store' },\n            label: <span className='ms-checkout__store-label'>{pickUpAtStoreWithLocationText}</span>,\n            location: <div className='ms-checkout__store-location'>{pickupDeliveryLocation}</div>\n        };\n    };\n\n    const _getLineItemsComponents = (items: CartLine[]): ILineItem[] => {\n        return items.map(cartLine => {\n            const pickupDeliveryLocation = _getDeliveryLocation(cartLine);\n            const isPickUp = (cartLine.DeliveryMode && cartLine.DeliveryMode !== '') ? cartLine.DeliveryMode === pickupDeliveryModeCode : false;\n            return {\n                LineId: cartLine.LineId || '',\n                LineItem: { className: 'ms-checkout__line-item' },\n                item: _getLineItemComponent(cartLine),\n                pickUpAtStore: isPickUp ? _getPickUpAtStoreComponents(pickupDeliveryLocation) : undefined\n            };\n        });\n    };\n\n    const _getGroupTitleComponent = (count: number, type: deliveryType): string => {\n        const {\n            resources: {\n                itemLabel,\n                itemsLabel,\n                inStorePickUpLabel,\n                shippingCountCheckoutLineItem\n            }\n        } = input;\n\n        const suffix = count > 1 ? itemsLabel : itemLabel;\n        const title = type === 'ship' ? shippingCountCheckoutLineItem : inStorePickUpLabel;\n        return title.replace('{count}', count.toString()).replace('{suffix}', suffix);\n    };\n\n    const _countItems = (items: CartLine[]): number => {\n        return items.reduce((count, item) => {\n            return count + (item.Quantity || 0);\n            // tslint:disable-next-line:align\n        }, 0);\n    };\n\n    const _filterItemsByDiliveryType = (type: deliveryType): CartLine[] => {\n        const cart = get(input, 'data.checkout.result.checkoutCart.cart');\n        return type === 'ship'\n            ? cart.CartLines.filter((cartLine: CartLine) => (cartLine.DeliveryMode && cartLine.DeliveryMode !== '') ? cartLine.DeliveryMode !== pickupDeliveryModeCode : cartLine)\n            : cart.CartLines.filter((cartLine: CartLine) => cartLine.DeliveryMode === pickupDeliveryModeCode);\n    };\n\n    const _getLineItemsByDeliveryType = (type: deliveryType): ILineItemDeliveryGroup | undefined => {\n        if ((pickupDeliveryModeCode === '' || pickupDeliveryModeCode === undefined) && type === 'pickup') {\n            return;\n        }\n\n        const items = _filterItemsByDiliveryType(type);\n\n        if (items.length === 0) {\n            return undefined;\n        }\n\n        const count = _countItems(items);\n        const title = _getGroupTitleComponent(count, type);\n\n        return {\n            LineItemDeliveryGroup: { className: classnames('ms-checkout__line-items-delivery-group', type) },\n            LineItemList: { className: 'ms-checkout__line-items-list' },\n            heading: <div className='ms-checkout__line-items-group-title'>{title}</div>,\n            lineItems: _getLineItemsComponents(items)\n        };\n    };\n\n    const _getLineItems = (): ILineItems | undefined => {\n        const {\n            context,\n            config: { lineItemsHeading },\n            data: { products },\n            resources: { editCartText }\n        } = input;\n\n        const payLoad = getPayloadObject('click', telemetryContent!, TelemetryConstant.EditCart);\n        const attribute = getTelemetryAttributes(telemetryContent!, payLoad);\n        const cart = get(input, 'data.checkout.result.checkoutCart.cart');\n\n        if (!cart || !cart.CartLines || !cart.CartLines.length || !products) {\n            return undefined;\n        }\n\n        return {\n            LineItems: { className: 'ms-checkout__line-items' },\n            Header: { className: 'ms-checkout__line-items-header' },\n            heading: lineItemsHeading && lineItemsHeading.text && (\n                <Msdyn365.Text\n                    className='ms-checkout__line-items-heading'\n                    {...lineItemsHeading}\n                    tag={lineItemsHeading.tag || 'h2'}\n                    text={lineItemsHeading.text}\n                    editProps={{ onEdit: handleLineItemHeadingChange, requestContext: context.request }}\n                />\n            ),\n            editLink: (\n                <Button\n                    className='ms-checkout__line-items-edit-cart-link'\n                    title={editCartText}\n                    color='link'\n                    href={Msdyn365.getUrlSync('cart', context.actionContext) || ''}\n                    {...attribute}\n                >\n                    {editCartText}\n                </Button>\n            ),\n            itemsForPickup: _getLineItemsByDeliveryType('pickup'),\n            itemsForShip: _getLineItemsByDeliveryType('ship')\n        };\n    };\n\n    const handleLineItemHeadingChange = (event: Msdyn365.ContentEditableEvent) => {\n        const {\n            config: { lineItemsHeading }\n        } = input;\n        lineItemsHeading!.text = event.target.value;\n    };\n\n    return _getLineItems();\n};\n"]}