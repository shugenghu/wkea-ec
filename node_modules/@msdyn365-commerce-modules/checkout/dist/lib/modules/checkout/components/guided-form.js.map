{"version":3,"file":"guided-form.js","sourceRoot":"./src/","sources":["modules/checkout/components/guided-form.tsx"],"names":[],"mappings":"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","sourcesContent":["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/ //\nimport { IModuleStateManager } from '@msdyn365-commerce-modules/checkout-utilities';\nimport { Heading } from '@msdyn365-commerce-modules/data-types';\nimport { ITelemetryContent } from '@msdyn365-commerce-modules/utilities';\nimport get from 'lodash/get';\nimport { observer } from 'mobx-react';\nimport * as React from 'react';\nimport GuidedCard from '../components/guided-card';\n\nexport interface ICheckoutGuidedFormProps {\n    items: React.ReactNode[];\n    moduleState: IModuleStateManager;\n    disableGuidedCheckoutFlow?: boolean;\n    isMobile?: boolean;\n    isEditor?: boolean;\n    resource: {\n        checkoutStepTitleFormat: string;\n        saveBtnLabel: string;\n        changeBtnLabel: string;\n        cancelBtnLabel: string;\n        saveAndContinueBtnLabel: string;\n    };\n    telemetryContent?: ITelemetryContent;\n}\n\ninterface ICheckoutGuidedFormState {\n    currentStep: number;\n}\n\n/**\n *\n * CheckoutGuidedForm component\n * @extends {React.Component<ICheckoutGuidedFormProps>}\n */\n@observer\nclass CheckoutGuidedForm extends React.Component<ICheckoutGuidedFormProps> {\n    public state: ICheckoutGuidedFormState = {\n        currentStep: 0\n    };\n\n    public componentDidMount(): void {\n        /**\n         * Append child modules\n         */\n        const childIds = this.props.items.map((item: React.ReactNode) => get(item, 'props.id'));\n        this.props.moduleState.init({ childIds });\n    }\n\n    public render(): JSX.Element | null {\n        const { moduleState, items, resource } = this.props;\n        if (!items || !moduleState) {\n            return null;\n        }\n\n        return (\n            <div className='ms-checkout__guided-form'>\n                {items.map((item: React.ReactNode) => {\n                    const childId = this.getId(item);\n                    const step = this.getStep(childId);\n                    const title = this.getHeading(item);\n                    const state = this.props.moduleState.getModule(childId);\n                    const { isReady, isPending, isUpdating, isDisabled, isCancelAllowed, onEdit, onCancel, onSubmit, hasModuleState, hasInitialized } =\n                        state || ({} as IModuleStateManager);\n                    return (\n\n                        <GuidedCard\n                            key={childId}\n                            step={step}\n                            title={title}\n                            resource={resource}\n                            disabled={!hasModuleState || isDisabled}\n                            isActive={this.isActive(step)}\n                            isVisted={this.isVisted(step)}\n                            isExpanded={this.isExpanded(step)}\n                            isSubmitting={isPending}\n                            isMobile={this.props.isMobile}\n                            isPending={isPending}\n                            isUpdating={isUpdating}\n                            hasInitialized={hasInitialized}\n                            isReady={isReady}\n                            isCancelAllowed={isCancelAllowed}\n                            onSubmit={onSubmit}\n                            onCancel={onCancel}\n                            onEdit={onEdit}\n                            onNext={this.onNext}\n                            hasControlGroup={!this.props.disableGuidedCheckoutFlow && hasInitialized}\n                            telemetryContent= {this.props.telemetryContent}\n                        >\n                            {React.cloneElement(item as React.ReactElement, { enableControl: true })}\n                        </GuidedCard>\n                    );\n                })}\n            </div>\n        );\n    }\n\n    private getEnabledModules = (): string[] => {\n        const {\n            moduleState: { childIds, getModule }\n        } = this.props;\n        return childIds.filter((childId: string) => {\n            const state = getModule(childId);\n            return !!state && !state.isDisabled;\n        });\n    };\n\n    private getStep = (id: string): number => {\n        return this.getEnabledModules().indexOf(id);\n    };\n\n    private getId = (item: React.ReactNode): string => {\n        return get(item, 'props.id') || '';\n    };\n\n    private getHeading = (item: React.ReactNode): Heading => {\n        return get(item, 'props.config.heading') || '';\n    };\n\n    private isExpanded = (step: number): boolean => {\n        if (this.props.isEditor) {\n            // Editorial mode: Expand all the drawers\n            return true;\n        }\n        return step > -1 && step <= this.state.currentStep;\n    };\n\n    private isActive = (step: number): boolean => {\n        return step === this.state.currentStep;\n    };\n\n    private isVisted = (step: number): boolean => {\n        return step > -1 && step < this.state.currentStep;\n    };\n\n    private onNext = (): void => {\n        this.setState({\n            currentStep: this.state.currentStep + 1\n        });\n    };\n}\n\nexport default CheckoutGuidedForm;\n"]}