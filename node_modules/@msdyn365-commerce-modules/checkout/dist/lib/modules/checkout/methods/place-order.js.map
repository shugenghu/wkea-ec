{"version":3,"file":"place-order.js","sourceRoot":"./src/","sources":["modules/checkout/methods/place-order.ts"],"names":[],"mappings":"AAIA,OAAO,EAAE,UAAU,EAAkB,MAAM,yBAAyB,CAAC;AAGrE,OAAO,QAAQ,MAAM,YAAY,CAAC;AAClC,OAAO,eAAe,MAAM,qBAAqB,CAAC;AAElD,eAAe,KAAK,EAAE,GAAmB,EAAE,aAAyC,EAAE,eAA4C,EAAE,QAAiB,EAAE,EAAE;IACrJ,IAAI,UAAsB,CAAC;IAG3B,IAAI;QACA,UAAU,GAAG,MAAM,QAAQ,CAAC,GAAG,CAAC,CAAC;KACpC;IAAC,OAAO,KAAK,EAAE;QACZ,MAAM,KAAK,CAAC;KACf;IAGD,IAAI;QACA,MAAM,eAAe,CAAC,GAAG,CAAC,CAAC;KAC9B;IAAC,OAAO,KAAK,EAAE;QACZ,MAAM,KAAK,CAAC;KACf;IAED,IAAI,QAAQ,EAAE;QAEV,MAAM,oBAAoB,GAAG,UAAU,CAAC,mBAAmB,EAAE,GAAG,CAAC,IAAI,EAAE,CAAC;QACxE,IAAI,CAAC,oBAAoB,EAAE;YACvB,MAAM,IAAI,KAAK,CAAC,gCAAgC,CAAC,CAAC;SACrD;QAED,MAAM,SAAS,GAAG,oBAAoB,CAAC,QAAQ,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,GAAG,CAAC;QACjE,MAAM,GAAG,GAAG,GAAG,oBAAoB,GAAG,SAAS,iBAAiB,UAAU,CAAC,EAAE,EAAE,CAAC;QAChF,MAAM,CAAC,QAAQ,CAAC,MAAM,CAAC,GAAG,CAAC,CAAC;KAC/B;SAAM;QACH,IAAI,aAAa,EAAE;YACf,MAAM,MAAM,GAAG,MAAM,aAAa,CAAC,gBAAgB,CAAC,EAAE,aAAa,EAAE,UAAU,EAAE,kBAAkB,EAAE,eAAe,IAAI,EAAE,EAAE,CAAC,CAAC;YAE9H,IAAI,MAAM,CAAC,MAAM,KAAK,QAAQ,EAAE;gBAC5B,MAAM,IAAI,KAAK,CAAC,oCAAoC,CAAC,CAAC;aACzD;SACJ;aAAM;YACH,MAAM,IAAI,KAAK,CAAC,0BAA0B,CAAC,CAAC;SAC/C;KACJ;AACL,CAAC,CAAC","sourcesContent":["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nimport { getUrlSync, IActionContext } from '@msdyn365-commerce/core';\nimport { ICheckoutState } from '@msdyn365-commerce/global-state';\nimport { SalesOrder, SimpleProduct } from '@msdyn365-commerce/retail-proxy';\nimport checkout from './checkout';\nimport emptyActiveCart from './empty-active-cart';\n\nexport default async (ctx: IActionContext, checkoutState: ICheckoutState | undefined, orderedProducts: SimpleProduct[] | undefined, redirect: boolean) => {\n    let salesOrder: SalesOrder;\n\n    // Proceed checkout\n    try {\n        salesOrder = await checkout(ctx);\n    } catch (error) {\n        throw error;\n    }\n\n    // Remove purchased items from the active cart\n    try {\n        await emptyActiveCart(ctx);\n    } catch (error) {\n        throw error;\n    }\n\n    if (redirect) {\n        // Redirect to the order confirmation page\n        const orderConfirmationUrl = getUrlSync('orderConfirmation', ctx) || '';\n        if (!orderConfirmationUrl) {\n            throw new Error('Error: No orderConfirmationUrl');\n        }\n\n        const separator = orderConfirmationUrl.includes('?') ? '&' : '?';\n        const url = `${orderConfirmationUrl}${separator}transactionId=${salesOrder.Id}`;\n        window.location.assign(url);\n    } else {\n        if (checkoutState) {\n            const result = await checkoutState.updateSalesOrder({ newSalesOrder: salesOrder, newOrderedProducts: orderedProducts || [] });\n\n            if (result.status === 'FAILED') {\n                throw new Error('Error: Updating error state failed');\n            }\n        } else {\n            throw new Error('Error: No checkout state');\n        }\n    }\n};\n"]}