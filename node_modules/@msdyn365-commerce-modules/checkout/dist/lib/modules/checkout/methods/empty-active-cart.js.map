{"version":3,"file":"empty-active-cart.js","sourceRoot":"./src/","sources":["modules/checkout/methods/empty-active-cart.ts"],"names":[],"mappings":"AACA,OAAO,EAAE,YAAY,EAAE,gBAAgB,EAAE,MAAM,iCAAiC,CAAC;AAEjF,KAAK,UAAU,eAAe,CAAC,GAAmB;IAC9C,IAAI,SAAS,CAAC;IACd,IAAI,aAAa,CAAC;IAClB,MAAM,mBAAmB,GAAG,EAAE,CAAC;IAE/B,IAAI;QACA,SAAS,GAAG,MAAM,YAAY,CAAC,GAAG,CAAC,CAAC;QACpC,aAAa,GAAG,MAAM,gBAAgB,CAAC,GAAG,CAAC,CAAC;KAC/C;IAAC,OAAO,CAAC,EAAE;QACR,MAAM,CAAC,CAAC;KACX;IAED,IAAI,CAAC,SAAS,IAAI,CAAC,SAAS,CAAC,IAAI,EAAE;QAC/B,MAAM,IAAI,KAAK,CAAC,2BAA2B,CAAC,CAAC;KAChD;IAED,IAAI,CAAC,aAAa,IAAI,CAAC,aAAa,CAAC,YAAY,EAAE;QAC/C,MAAM,IAAI,KAAK,CAAC,iCAAiC,CAAC,CAAC;KACtD;IAED,MAAM,UAAU,GAAG,SAAS,CAAC,IAAI,CAAC;IAClC,MAAM,YAAY,GAAG,aAAa,CAAC,YAAY,CAAC,IAAI,CAAC;IAErD,KAAK,MAAM,cAAc,IAAI,UAAU,CAAC,SAAS,IAAI,EAAE,EAAE;QACrD,KAAK,MAAM,gBAAgB,IAAI,YAAY,CAAC,SAAS,IAAI,EAAE,EAAE;YACzD,IAAI,cAAc,CAAC,MAAM,IAAI,cAAc,CAAC,MAAM,KAAK,gBAAgB,CAAC,MAAM,EAAE;gBAC5E,mBAAmB,CAAC,IAAI,CAAC,cAAc,CAAC,MAAM,CAAC,CAAC;aACnD;SACJ;KACJ;IAED,IAAI;QACA,MAAM,SAAS,CAAC,eAAe,CAAC,EAAE,WAAW,EAAE,mBAAmB,EAAE,CAAC,CAAC;QACtE,MAAM,SAAS,CAAC,mBAAmB,CAAC,EAAE,CAAC,CAAC;QACxC,MAAM,aAAa,CAAC,oBAAoB,CAAC,EAAE,CAAC,CAAC;KAChD;IAAC,OAAO,CAAC,EAAE;QACR,MAAM,CAAC,CAAC;KACX;AACL,CAAC;AAED,eAAe,eAAe,CAAC","sourcesContent":["import { IActionContext } from '@msdyn365-commerce/core';\nimport { getCartState, getCheckoutState } from '@msdyn365-commerce/global-state';\n\nasync function emptyActiveCart(ctx: IActionContext): Promise<void> {\n    let cartState;\n    let checkoutState;\n    const lineItemIdsToRemove = [];\n\n    try {\n        cartState = await getCartState(ctx);\n        checkoutState = await getCheckoutState(ctx);\n    } catch (e) {\n        throw e;\n    }\n\n    if (!cartState || !cartState.cart) {\n        throw new Error('Fail to fetch active cart');\n    }\n\n    if (!checkoutState || !checkoutState.checkoutCart) {\n        throw new Error('Fail to fetch checkoutCart cart');\n    }\n\n    const activeCart = cartState.cart;\n    const checkoutCart = checkoutState.checkoutCart.cart;\n\n    for (const activeCartLine of activeCart.CartLines || []) {\n        for (const checkoutCartLine of checkoutCart.CartLines || []) {\n            if (activeCartLine.LineId && activeCartLine.LineId === checkoutCartLine.LineId) {\n                lineItemIdsToRemove.push(activeCartLine.LineId);\n            }\n        }\n    }\n\n    try {\n        await cartState.removeCartLines({ cartLineIds: lineItemIdsToRemove });\n        await cartState.removeAllPromoCodes({});\n        await checkoutState.removeCheckoutCartId({});\n    } catch (e) {\n        throw e;\n    }\n}\n\nexport default emptyActiveCart;\n"]}