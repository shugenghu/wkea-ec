{"version":3,"file":"get-products-in-active-cart.test.js","sourceRoot":"./src/","sources":["modules/checkout/tests/actions/get-products-in-active-cart.test.ts"],"names":[],"mappings":"AAAA,OAAO,KAAK,aAAa,MAAM,2CAA2C,CAAC;AAC3E,OAAO,KAAK,WAAW,MAAM,iCAAiC,CAAC;AAC/D,OAAO,EAAE,+BAA+B,EAAE,WAAW,EAAE,mCAAmC,EAAE,MAAM,oDAAoD,CAAC;AAEvJ,IAAI,CAAC,IAAI,CAAC,iCAAiC,CAAC,CAAC;AAC7C,IAAI,CAAC,IAAI,CAAC,2CAA2C,CAAC,CAAC;AAEvD,IAAI,iBAAiB,GAAG,EAAE,CAAC;AAE3B,IAAI,WAAW,GAAG,EAAE,CAAC;AAErB,IAAI,YAAY,GAAG,EAAE,CAAC;AAEtB,IAAI,iBAAiB,GAAG,EAAE,CAAC;AAE3B,QAAQ,CAAC,2DAA2D,EAAE,GAAG,EAAE;IACvE,UAAU,CAAC,GAAG,EAAE;QACZ,iBAAiB,GAAG;YAChB,YAAY,EAAE;gBACV,IAAI,EAAE;oBACF,EAAE,EAAE,QAAQ;oBACZ,SAAS,EAAE;wBACP;4BACI,MAAM,EAAE,QAAQ;4BAChB,SAAS,EAAE,KAAK;yBACnB;wBACD;4BACI,MAAM,EAAE,QAAQ;yBACnB;qBACJ;iBACJ;aACJ;SACJ,CAAC;QAEF,WAAW,GAAG;YACV,QAAQ,EAAE,KAAK;SAClB,CAAC;QAEF,YAAY,GAAG,CAAC,WAAW,CAAC,CAAC;QAE7B,iBAAiB,GAAG;YAChB,SAAS,EAAE;gBACP,SAAS,EAAE,IAAI,CAAC,EAAE,EAAE;aACvB;YACD,cAAc,EAAE;gBACZ,WAAW,EAAE,EAAE;aAClB;SACJ,CAAC;QAGF,WAAW,CAAC,gBAAgB,GAAG,IAAI,CAAC,EAAE,CAAC,GAAG,EAAE,CAAC,IAAI,OAAO,CAAC,CAAC,OAAO,EAAE,MAAM,EAAE,EAAE,CAAC,OAAO,CAAC,iBAAiB,CAAC,CAAC,CAAC,CAAC;QAG3G,aAAa,CAAC,iBAAiB,GAAG,IAAI,CAAC,EAAE,CAAC,GAAG,EAAE,CAAC,IAAI,OAAO,CAAC,CAAC,OAAO,EAAE,MAAM,EAAE,EAAE,CAAC,OAAO,CAAC,YAAY,CAAC,CAAC,CAAC,CAAC;IAC7G,CAAC,CAAC,CAAC;IAEH,SAAS,CAAC,GAAG,EAAE;QACX,IAAI,CAAC,aAAa,EAAE,CAAC;IACzB,CAAC,CAAC,CAAC;IAEH,QAAQ,CAAC,GAAG,EAAE;QACV,IAAI,CAAC,MAAM,CAAC,iCAAiC,CAAC,CAAC;QAC/C,IAAI,CAAC,MAAM,CAAC,2CAA2C,CAAC,CAAC;IAC7D,CAAC,CAAC,CAAC;IAEH,EAAE,CAAC,eAAe,EAAE,GAAG,EAAE;QACrB,MAAM,KAAK,GAAG,IAAI,+BAA+B,EAAE,CAAC;QACpD,MAAM,CAAC,KAAK,CAAC,WAAW,EAAE,CAAC,CAAC,IAAI,CAAC,4BAA4B,CAAC,CAAC;QAC/D,MAAM,CAAC,KAAK,CAAC,kBAAkB,EAAE,CAAC,CAAC,IAAI,CAAC,4BAA4B,CAAC,CAAC;QACtE,MAAM,CAAC,KAAK,CAAC,aAAa,EAAE,CAAC,CAAC,IAAI,CAAC,MAAM,CAAC,CAAC;IAC/C,CAAC,CAAC,CAAC;IAEH,EAAE,CAAC,eAAe,EAAE,GAAG,EAAE;QACrB,MAAM,KAAK,GAAG,WAAW,EAAE,CAAC;QAC5B,MAAM,CAAC,KAAK,CAAC,WAAW,EAAE,CAAC,CAAC,IAAI,CAAC,4BAA4B,CAAC,CAAC;QAC/D,MAAM,CAAC,KAAK,CAAC,kBAAkB,EAAE,CAAC,CAAC,IAAI,CAAC,4BAA4B,CAAC,CAAC;QACtE,MAAM,CAAC,KAAK,CAAC,aAAa,EAAE,CAAC,CAAC,IAAI,CAAC,MAAM,CAAC,CAAC;IAC/C,CAAC,CAAC,CAAC;IAEH,EAAE,CAAC,eAAe,EAAE,KAAK,IAAI,EAAE;QAE3B,MAAM,mCAAmC,CAAC,IAAI,+BAA+B,EAAE,EAAE,iBAAiB,CAAC,CAAC,IAAI,CAAC,IAAI,CAAC,EAAE;YAC5G,MAAM,CAAC,IAAI,CAAC,CAAC,aAAa,CAAC,YAAY,CAAC,CAAC;QAC7C,CAAC,CAAC,CAAC;IACP,CAAC,CAAC,CAAC;IAEH,EAAE,CAAC,wBAAwB,EAAE,KAAK,IAAI,EAAE;QACpC,iBAAiB,GAAG;YAChB,YAAY,EAAE,EAAE;SACnB,CAAC;QAGF,WAAW,CAAC,gBAAgB,GAAG,IAAI,CAAC,EAAE,CAAC,GAAG,EAAE,CAAC,IAAI,OAAO,CAAC,CAAC,OAAO,EAAE,MAAM,EAAE,EAAE,CAAC,OAAO,CAAC,iBAAiB,CAAC,CAAC,CAAC,CAAC;QAG3G,MAAM,mCAAmC,CAAC,IAAI,+BAA+B,EAAE,EAAE,iBAAiB,CAAC,CAAC,IAAI,CAAC,IAAI,CAAC,EAAE;YAC5G,MAAM,CAAC,IAAI,CAAC,CAAC,aAAa,CAAC,EAAE,CAAC,CAAC;QACnC,CAAC,CAAC,CAAC;IACP,CAAC,CAAC,CAAC;IAEH,EAAE,CAAC,oBAAoB,EAAE,KAAK,IAAI,EAAE;QAChC,iBAAiB,GAAG;YAChB,YAAY,EAAE;gBACV,IAAI,EAAE;oBACF,EAAE,EAAE,QAAQ;oBACZ,SAAS,EAAE,EAAE;iBAChB;aACJ;SACJ,CAAC;QAGF,WAAW,CAAC,gBAAgB,GAAG,IAAI,CAAC,EAAE,CAAC,GAAG,EAAE,CAAC,IAAI,OAAO,CAAC,CAAC,OAAO,EAAE,MAAM,EAAE,EAAE,CAAC,OAAO,CAAC,iBAAiB,CAAC,CAAC,CAAC,CAAC;QAG3G,MAAM,mCAAmC,CAAC,IAAI,+BAA+B,EAAE,EAAE,iBAAiB,CAAC,CAAC,IAAI,CAAC,IAAI,CAAC,EAAE;YAC5G,MAAM,CAAC,IAAI,CAAC,CAAC,aAAa,CAAC,EAAE,CAAC,CAAC;QACnC,CAAC,CAAC,CAAC;IACP,CAAC,CAAC,CAAC;IAEH,EAAE,CAAC,qBAAqB,EAAE,KAAK,IAAI,EAAE;QAEjC,aAAa,CAAC,iBAAiB,GAAG,IAAI,CAAC,EAAE,CAAC,GAAG,EAAE,CAAC,IAAI,OAAO,CAAC,CAAC,OAAO,EAAE,MAAM,EAAE,EAAE,CAAC,OAAO,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC;QAGjG,MAAM,mCAAmC,CAAC,IAAI,+BAA+B,EAAE,EAAE,iBAAiB,CAAC,CAAC,IAAI,CAAC,IAAI,CAAC,EAAE;YAC5G,MAAM,CAAC,IAAI,CAAC,CAAC,aAAa,CAAC,EAAE,CAAC,CAAC;QACnC,CAAC,CAAC,CAAC;IACP,CAAC,CAAC,CAAC;IAEH,EAAE,CAAC,iCAAiC,EAAE,KAAK,IAAI,EAAE;QAC7C,IAAI;YAEA,MAAM,mCAAmC,CAAC,IAAI,EAAE,iBAAiB,CAAC,CAAC;SACtE;QAAC,OAAO,CAAC,EAAE;YACR,MAAM,CAAC,CAAC,CAAC,CAAC,WAAW,EAAE,CAAC;SAC3B;IACL,CAAC,CAAC,CAAC;IAEH,EAAE,CAAC,sCAAsC,EAAE,KAAK,IAAI,EAAE;QAElD,aAAa,CAAC,iBAAiB,GAAG,IAAI,CAAC,EAAE,CAAC,GAAG,EAAE,CAAC,IAAI,OAAO,CAAC,CAAC,OAAO,EAAE,MAAM,EAAE,EAAE,CAAC,MAAM,CAAC,OAAO,CAAC,CAAC,CAAC,CAAC;QAEnG,IAAI;YAEA,MAAM,mCAAmC,CAAC,IAAI,+BAA+B,EAAE,EAAE,iBAAiB,CAAC,CAAC;SACvG;QAAC,OAAO,CAAC,EAAE;YACR,MAAM,CAAC,CAAC,CAAC,CAAC,WAAW,EAAE,CAAC;SAC3B;IACL,CAAC,CAAC,CAAC;AACP,CAAC,CAAC,CAAC","sourcesContent":["import * as retailActions from '@msdyn365-commerce-modules/retail-actions';\nimport * as globalState from '@msdyn365-commerce/global-state';\nimport { ActiveCheckoutCartProductsInput, createInput, getActiveCheckoutCartProductsAction } from '../../actions/get-products-in-active-checkout-cart';\n\njest.mock('@msdyn365-commerce/global-state');\njest.mock('@msdyn365-commerce-modules/retail-actions');\n\nlet mockCheckoutState = {};\n\nlet mockProduct = {};\n\nlet mockProducts = {};\n\nlet mockActionContext = {};\n\ndescribe('Checkout unit tests - getActiveCheckoutCartProductsAction', () => {\n    beforeEach(() => {\n        mockCheckoutState = {\n            checkoutCart: {\n                cart: {\n                    Id: 'cart_1',\n                    CartLines: [\n                        {\n                            LineId: 'line_1',\n                            ProductId: 'p_1'\n                        },\n                        {\n                            LineId: 'line_2'\n                        }\n                    ]\n                }\n            }\n        };\n\n        mockProduct = {\n            RecordId: 'p_1'\n        };\n\n        mockProducts = [mockProduct];\n\n        mockActionContext = {\n            telemetry: {\n                exception: jest.fn()\n            },\n            requestContext: {\n                apiSettings: {}\n            }\n        };\n\n        // @ts-ignore mock partial data action\n        globalState.getCheckoutState = jest.fn(() => new Promise((resolve, reject) => resolve(mockCheckoutState)));\n\n        // @ts-ignore mock partial data action\n        retailActions.getSimpleProducts = jest.fn(() => new Promise((resolve, reject) => resolve(mockProducts)));\n    });\n\n    afterEach(() => {\n        jest.resetAllMocks();\n    });\n\n    afterAll(() => {\n        jest.unmock('@msdyn365-commerce/global-state');\n        jest.unmock('@msdyn365-commerce-modules/retail-actions');\n    });\n\n    it('creates input', () => {\n        const input = new ActiveCheckoutCartProductsInput();\n        expect(input.getCacheKey()).toBe('ActiveCheckoutCartProducts');\n        expect(input.getCacheObjectType()).toBe('ActiveCheckoutCartProducts');\n        expect(input.dataCacheType()).toBe('none');\n    });\n\n    it('creates input', () => {\n        const input = createInput();\n        expect(input.getCacheKey()).toBe('ActiveCheckoutCartProducts');\n        expect(input.getCacheObjectType()).toBe('ActiveCheckoutCartProducts');\n        expect(input.dataCacheType()).toBe('none');\n    });\n\n    it('gets products', async () => {\n        // @ts-ignore mock partial data action\n        await getActiveCheckoutCartProductsAction(new ActiveCheckoutCartProductsInput(), mockActionContext).then(data => {\n            expect(data).toMatchObject(mockProducts);\n        });\n    });\n\n    it('cannot find valid cart', async () => {\n        mockCheckoutState = {\n            checkoutCart: {}\n        };\n\n        // @ts-ignore mock partial data action\n        globalState.getCheckoutState = jest.fn(() => new Promise((resolve, reject) => resolve(mockCheckoutState)));\n\n        // @ts-ignore mock partial data action\n        await getActiveCheckoutCartProductsAction(new ActiveCheckoutCartProductsInput(), mockActionContext).then(data => {\n            expect(data).toMatchObject([]);\n        });\n    });\n\n    it('handles empty cart', async () => {\n        mockCheckoutState = {\n            checkoutCart: {\n                cart: {\n                    Id: 'cart_1',\n                    CartLines: []\n                }\n            }\n        };\n\n        // @ts-ignore mock partial data action\n        globalState.getCheckoutState = jest.fn(() => new Promise((resolve, reject) => resolve(mockCheckoutState)));\n\n        // @ts-ignore mock partial data action\n        await getActiveCheckoutCartProductsAction(new ActiveCheckoutCartProductsInput(), mockActionContext).then(data => {\n            expect(data).toMatchObject([]);\n        });\n    });\n\n    it('cannot find product', async () => {\n        // @ts-ignore mock partial data action\n        retailActions.getSimpleProducts = jest.fn(() => new Promise((resolve, reject) => resolve(null)));\n\n        // @ts-ignore mock partial data action\n        await getActiveCheckoutCartProductsAction(new ActiveCheckoutCartProductsInput(), mockActionContext).then(data => {\n            expect(data).toMatchObject([]);\n        });\n    });\n\n    it('throws error with invalid input', async () => {\n        try {\n            // @ts-ignore mock partial data action\n            await getActiveCheckoutCartProductsAction(null, mockActionContext);\n        } catch (e) {\n            expect(e).toBeDefined();\n        }\n    });\n\n    it('handles error from getSimpleProducts', async () => {\n        // @ts-ignore mock partial data action\n        retailActions.getSimpleProducts = jest.fn(() => new Promise((resolve, reject) => reject('error')));\n\n        try {\n            // @ts-ignore mock partial data action\n            await getActiveCheckoutCartProductsAction(new ActiveCheckoutCartProductsInput(), mockActionContext);\n        } catch (e) {\n            expect(e).toBeDefined();\n        }\n    });\n});\n"]}