{"version":3,"file":"place-order-button.test.js","sourceRoot":"./src/","sources":["modules/checkout/tests/unit/place-order-button.test.tsx"],"names":[],"mappings":"AAMA,OAAO,EAAE,OAAO,EAAE,MAAM,QAAQ,CAAC;AACjC,OAAO,KAAK,KAAK,MAAM,OAAO,CAAC;AAC/B,OAAO,gBAAgB,MAAM,qCAAqC,CAAC;AAEnE,QAAQ,CAAC,wCAAwC,EAAE,GAAG,EAAE;IACpD,EAAE,CAAC,mBAAmB,EAAE,GAAG,EAAE;QACzB,MAAM,SAAS,GAAG;YACd,cAAc,EAAE,aAAa;YAC7B,aAAa,EAAE,IAAI;YACnB,UAAU,EAAE,IAAI,CAAC,EAAE,EAAE;SACxB,CAAC;QACF,MAAM,SAAS,GAAG,OAAO,CAAC,oBAAC,gBAAgB,oBAAK,SAAS,EAAI,CAAC,CAAC;QAC/D,MAAM,CAAC,SAAS,CAAC,CAAC,eAAe,EAAE,CAAC;QACpC,MAAM,MAAM,GAAG,SAAS,CAAC,IAAI,CAAC,+BAA+B,CAAC,CAAC;QAC/D,MAAM,CAAC,QAAQ,CAAC,OAAO,CAAC,CAAC;QACzB,MAAM,CAAC,SAAS,CAAC,UAAU,CAAC,CAAC,UAAU,EAAE,CAAC;IAC9C,CAAC,CAAC,CAAC;IAEH,EAAE,CAAC,+CAA+C,EAAE,GAAG,EAAE;QACrD,MAAM,SAAS,GAAG;YACd,cAAc,EAAE,aAAa;YAC7B,aAAa,EAAE,KAAK;YACpB,UAAU,EAAE,IAAI,CAAC,EAAE,EAAE;SACxB,CAAC;QACF,MAAM,SAAS,GAAG,OAAO,CAAC,oBAAC,gBAAgB,oBAAK,SAAS,EAAI,CAAC,CAAC;QAC/D,MAAM,CAAC,SAAS,CAAC,CAAC,eAAe,EAAE,CAAC;QACpC,MAAM,MAAM,GAAG,SAAS,CAAC,IAAI,CAAC,+BAA+B,CAAC,CAAC;QAC/D,MAAM,CAAC,MAAM,CAAC,IAAI,CAAC,UAAU,CAAC,CAAC,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;QAC3C,MAAM,CAAC,QAAQ,CAAC,OAAO,CAAC,CAAC;QACzB,MAAM,CAAC,SAAS,CAAC,UAAU,CAAC,CAAC,GAAG,CAAC,UAAU,EAAE,CAAC;IAClD,CAAC,CAAC,CAAC;AACP,CAAC,CAAC,CAAC","sourcesContent":["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\n// tslint:disable-next-line:no-unused-variable\nimport { shallow } from 'enzyme';\nimport * as React from 'react';\nimport PlaceOrderButton from '../../components/place-order-button';\n\ndescribe('Checkout unit tests - PlaceOrderButton', () => {\n    it('renders correctly', () => {\n        const mockProps = {\n            placeOrderText: 'Place order',\n            canPlaceOrder: true,\n            placeOrder: jest.fn()\n        };\n        const component = shallow(<PlaceOrderButton {...mockProps} />);\n        expect(component).toMatchSnapshot();\n        const button = component.find('.ms-checkout__btn-place-order');\n        button.simulate('click');\n        expect(mockProps.placeOrder).toBeCalled();\n    });\n\n    it('renders correctly when canPlaceOrder is false', () => {\n        const mockProps = {\n            placeOrderText: 'Place order',\n            canPlaceOrder: false,\n            placeOrder: jest.fn()\n        };\n        const component = shallow(<PlaceOrderButton {...mockProps} />);\n        expect(component).toMatchSnapshot();\n        const button = component.find('.ms-checkout__btn-place-order');\n        expect(button.prop('disabled')).toBe(true);\n        button.simulate('click');\n        expect(mockProps.placeOrder).not.toBeCalled();\n    });\n});\n"]}