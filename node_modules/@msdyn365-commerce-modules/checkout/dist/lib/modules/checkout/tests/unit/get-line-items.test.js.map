{"version":3,"file":"get-line-items.test.js","sourceRoot":"./src/","sources":["modules/checkout/tests/unit/get-line-items.test.tsx"],"names":[],"mappings":"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","sourcesContent":["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\n// tslint:disable-next-line:no-unused-variable\nimport * as eComComponents from '@msdyn365-commerce/components';\nimport { buildMockModuleProps } from '@msdyn365-commerce/core';\nimport { render } from 'enzyme';\nimport * as React from 'react';\nimport { ICheckoutModuleProps } from '../../checkout';\nimport { LineItemsComponent } from '../../checkout.view';\nimport { getLineItems } from '../../components/get-line-items';\nimport {\n    getMockData,\n    mockCheckoutCartWithMultiDeliveryModeItems,\n    mockCheckoutCartWithPickupItem,\n    mockCheckoutCartWithShipItem,\n    mockConfig,\n    mockContext,\n    mockEmptyCart,\n    mockOrgUnitLocations,\n    mockProduct,\n    mockResources\n} from '../__mock__';\n\njest.mock('@msdyn365-commerce/components');\n\ndescribe('Checkout unit tests - getOrderSummary', () => {\n    beforeEach(() => {\n        // @ts-ignore: Jest Mocking Confuses TS Complier\n        eComComponents.CartLineItemComponent.mockImplementation(() => '{LineItems}');\n    });\n\n    afterEach(() => {\n        // @ts-ignore: Jest Mocking Confuses TS Complier\n        eComComponents.CartLineItemComponent.mockReset();\n    });\n\n    afterAll(() => {\n        jest.unmock('@msdyn365-commerce/components');\n    });\n\n    it('renders correctly with cart with ship item', () => {\n        const mockData = getMockData(mockCheckoutCartWithShipItem, [mockProduct], mockOrgUnitLocations);\n        const moduleProps = {\n            ...(buildMockModuleProps(mockData, {}, mockConfig, mockContext) as ICheckoutModuleProps),\n            resources: mockResources\n        };\n        const obj = getLineItems(moduleProps);\n        // @ts-ignore\n        const wrapper = render(<LineItemsComponent {...obj} />);\n        expect(wrapper).toMatchSnapshot();\n    });\n\n    it('renders correctly with cart with pick up item', () => {\n        const mockData = getMockData(mockCheckoutCartWithPickupItem, [mockProduct], mockOrgUnitLocations);\n        const moduleProps = {\n            ...(buildMockModuleProps(mockData, {}, mockConfig, mockContext) as ICheckoutModuleProps),\n            resources: mockResources\n        };\n        const obj = getLineItems(moduleProps);\n        // @ts-ignore\n        const wrapper = render(<LineItemsComponent {...obj} />);\n        expect(wrapper).toMatchSnapshot();\n    });\n\n    it('renders correctly with cart with pickup and ship item', () => {\n        const mockData = getMockData(mockCheckoutCartWithMultiDeliveryModeItems, [mockProduct], mockOrgUnitLocations);\n        const moduleProps = {\n            ...(buildMockModuleProps(mockData, {}, mockConfig, mockContext) as ICheckoutModuleProps),\n            resources: mockResources\n        };\n        const obj = getLineItems(moduleProps);\n        // @ts-ignore\n        const wrapper = render(<LineItemsComponent {...obj} />);\n        expect(wrapper).toMatchSnapshot();\n    });\n\n    it('renders correctly with empty cart', () => {\n        const mockData = getMockData(mockEmptyCart, [], mockOrgUnitLocations);\n        const moduleProps = {\n            ...(buildMockModuleProps(mockData, {}, mockConfig, mockContext) as ICheckoutModuleProps),\n            resources: mockResources\n        };\n        const obj = getLineItems(moduleProps);\n        // @ts-ignore\n        const wrapper = render(<LineItemsComponent {...obj} />);\n        expect(wrapper).toMatchSnapshot();\n    });\n});\n"]}