{"version":3,"file":"empty-active-cart.test.js","sourceRoot":"./src/","sources":["modules/checkout/tests/methods/empty-active-cart.test.ts"],"names":[],"mappings":"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","sourcesContent":["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { IActionContext } from '@msdyn365-commerce/core';\nimport * as GlobalStateActions from '@msdyn365-commerce/global-state';\nimport emptyActiveCartAction from '../../methods/empty-active-cart';\nimport { mockActiveCart, mockCheckoutCart } from '../__mock__';\n\njest.mock('@msdyn365-commerce/global-state');\n\nlet mockActionContext: IActionContext;\nlet mockCartState: GlobalStateActions.ICartState;\nlet mockCheckoutState: GlobalStateActions.ICheckoutState;\n\ndescribe('CheckoutPlaceOrder', () => {\n    describe('emptyActiveCartAction', () => {\n        beforeEach(() => {\n            // @ts-ignore: Using partial for testing\n            mockActionContext = {\n                update: jest.fn(),\n                // @ts-ignore: Using partial for testing\n                requestContext: {\n                    // @ts-ignore: Using partial for testing\n                    apiSettings: {}\n                }\n            };\n\n            // @ts-ignore: Jest Mocking Confuses TS Complier\n            mockCartState = {\n                cart: mockActiveCart,\n                removeCartLines: jest.fn(),\n                removeAllPromoCodes: jest.fn()\n            };\n\n            // @ts-ignore: Jest Mocking Confuses TS Complier\n            mockCheckoutState = {\n                // @ts-ignore: Jest Mocking Confuses TS Complier\n                checkoutCart: {\n                    cart: mockCheckoutCart\n                },\n                removeCheckoutCartId: jest.fn()\n            };\n\n            // @ts-ignore: Jest Mocking Confuses TS Complier\n            GlobalStateActions.getCartState.mockImplementation(async () => mockCartState);\n\n            // @ts-ignore: Jest Mocking Confuses TS Complier\n            GlobalStateActions.getCheckoutState.mockImplementation(async () => mockCheckoutState);\n        });\n\n        it('emptys the active cart', async () => {\n            // @ts-ignore: Using partial for testing\n            await emptyActiveCartAction(mockActionContext);\n\n            expect(mockCheckoutState.removeCheckoutCartId).toBeCalled();\n\n            expect(mockCartState.removeCartLines).toBeCalledWith(\n                expect.objectContaining({\n                    cartLineIds: [mockCheckoutCart.CartLines && mockCheckoutCart.CartLines[0].LineId]\n                })\n            );\n        });\n\n        it('throws error when no cart found', async () => {\n            // @ts-ignore: Jest Mocking Confuses TS Complier\n            mockCartState = {\n                ...mockCartState,\n                // @ts-ignore\n                cart: undefined\n            };\n\n            // @ts-ignore: Jest Mocking Confuses TS Complier\n            GlobalStateActions.getCartState.mockImplementation(async () => mockCartState);\n\n            try {\n                // @ts-ignore: Using partial for testing\n                await emptyActiveCartAction(mockActionContext);\n            } catch (e) {\n                expect(e).toBeDefined();\n            }\n        });\n\n        it('throws error when getCartState throws error', async () => {\n            // @ts-ignore: Jest Mocking Confuses TS Complier\n            mockCartState = {\n                ...mockCartState,\n                // @ts-ignore\n                cart: undefined\n            };\n\n            // @ts-ignore: Jest Mocking Confuses TS Complier\n            GlobalStateActions.getCartState.mockImplementation(async () => Promise.reject({}));\n\n            try {\n                // @ts-ignore: Using partial for testing\n                await emptyActiveCartAction(mockActionContext);\n            } catch (e) {\n                expect(e).toBeDefined();\n            }\n        });\n\n        it('throws error when no checkoutCart found', async () => {\n            // @ts-ignore: Jest Mocking Confuses TS Complier\n            mockCheckoutState = {\n                ...mockCheckoutState,\n                // @ts-ignore\n                checkoutCart: undefined\n            };\n\n            // @ts-ignore: Jest Mocking Confuses TS Complier\n            GlobalStateActions.getCheckoutState.mockImplementation(async () => mockCheckoutState);\n\n            try {\n                // @ts-ignore: Using partial for testing\n                await emptyActiveCartAction(mockActionContext);\n            } catch (e) {\n                expect(e).toBeDefined();\n            }\n        });\n\n        afterEach(() => {\n            // @ts-ignore: Jest Mocking Confuses TS Complier\n            GlobalStateActions.getCartState.mockReset();\n            // @ts-ignore: Jest Mocking Confuses TS Complier\n            GlobalStateActions.getCheckoutState.mockReset();\n            // @ts-ignore: Jest Mocking Confuses TS Complier\n            mockActionContext.update.mockReset();\n        });\n\n        afterAll(() => {\n            jest.unmock('@msdyn365-commerce/global-state');\n        });\n    });\n});\n"]}