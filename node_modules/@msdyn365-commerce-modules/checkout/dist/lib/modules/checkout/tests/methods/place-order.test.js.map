{"version":3,"file":"place-order.test.js","sourceRoot":"./src/","sources":["modules/checkout/tests/methods/place-order.test.ts"],"names":[],"mappings":"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","sourcesContent":["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport * as coreMethods from '@msdyn365-commerce/core';\nimport * as GlobalStateActions from '@msdyn365-commerce/global-state';\nimport checkout from '../../methods/checkout';\nimport emptyActiveCart from '../../methods/empty-active-cart';\nimport placeOrder from '../../methods/place-order';\n\njest.mock('../../methods/checkout');\njest.mock('../../methods/empty-active-cart');\njest.mock('@msdyn365-commerce/core');\nlet mockCheckoutState: GlobalStateActions.ICheckoutState;\n\nconst mockActionContext = {};\n\nconst mockSalesOrder = {\n    Id: 'order_1',\n    ChannelReferenceId: 'ABC'\n};\n\nconst confirmationPageUrl = '/order-confirmation';\n\ndescribe('CheckoutPlaceOrder', () => {\n    describe('emptyActiveCartAction', () => {\n        beforeEach(() => {\n            // @ts-ignore: Jest Mocking Confuses TS Complier\n            checkout.mockImplementation(async () => mockSalesOrder);\n\n            // @ts-ignore: Jest Mocking Confuses TS Complier\n            emptyActiveCart.mockImplementation(async () => ({}));\n\n            // @ts-ignore: Jest Mocking Confuses TS Complier\n            coreMethods.getUrlSync.mockImplementation(() => confirmationPageUrl);\n\n            window.location.assign = jest.fn();\n        });\n\n        afterEach(() => {\n            jest.resetAllMocks();\n        });\n\n        afterAll(() => {\n            jest.unmock('../../methods/checkout');\n            jest.unmock('../../methods/empty-active-cart');\n            jest.unmock('@msdyn365-commerce/core');\n        });\n\n        it('runs correctly', async () => {\n            try {\n                // @ts-ignore\n                await placeOrder(mockActionContext, undefined, undefined, true);\n                expect(checkout).toBeCalled();\n                expect(coreMethods.getUrlSync).toBeCalled();\n                expect(window.location.assign).toBeCalledWith(`${confirmationPageUrl}?transactionId=order_1`);\n            } catch (e) {\n                expect(e).not.toBeDefined();\n            }\n        });\n\n        it('runs correctly if redirect not requried', async () => {\n            try {\n                // @ts-ignore: Jest Mocking Confuses TS Complier\n                mockCheckoutState = {\n                    updateSalesOrder: jest.fn().mockResolvedValue({ status: 'SUCCESS' })\n                };\n\n                // @ts-ignore\n                await placeOrder(mockActionContext, mockCheckoutState, undefined, false);\n                expect(checkout).toBeCalled();\n                expect(mockCheckoutState.updateSalesOrder).toBeCalled();\n            } catch (e) {\n                expect(e).not.toBeDefined();\n            }\n        });\n\n        it('throw error when updateSalesOrder method fail', async () => {\n            try {\n                // @ts-ignore: Jest Mocking Confuses TS Complier\n                mockCheckoutState = {\n                    updateSalesOrder: jest.fn().mockResolvedValue({ status: 'FAILED' })\n                };\n\n                // @ts-ignore\n                await placeOrder(mockActionContext, mockCheckoutState, undefined, false);\n                expect(checkout).toBeCalled();\n                expect(mockCheckoutState.updateSalesOrder).toBeCalled();\n            } catch (e) {\n                expect(e).toBeDefined();\n            }\n        });\n\n        it('throw error when checkout method fail', async () => {\n            // @ts-ignore: Jest Mocking Confuses TS Complier\n            checkout.mockImplementation(async () => {\n                throw new Error();\n            });\n            try {\n                // @ts-ignore\n                await placeOrder(mockActionContext, undefined, undefined, true);\n                expect(checkout).not.toBeCalled();\n                expect(coreMethods.getUrlSync).not.toBeCalled();\n                expect(window.location.assign).not.toBeCalled();\n            } catch (e) {\n                expect(e).toBeDefined();\n            }\n        });\n\n        it('throw error when emptyActiveCart method fail', async () => {\n            // @ts-ignore: Jest Mocking Confuses TS Complier\n            emptyActiveCart.mockImplementation(async () => {\n                throw new Error();\n            });\n            try {\n                // @ts-ignore\n                await placeOrder(mockActionContext, undefined, undefined, true);\n                expect(checkout).not.toBeCalled();\n                expect(coreMethods.getUrlSync).not.toBeCalled();\n                expect(window.location.assign).not.toBeCalled();\n            } catch (e) {\n                expect(e).toBeDefined();\n            }\n        });\n\n        it('throw error when redirect page url not found', async () => {\n            // @ts-ignore: Jest Mocking Confuses TS Complier\n            coreMethods.getUrlSync.mockImplementation(() => '');\n\n            try {\n                // @ts-ignore\n                await placeOrder(mockActionContext, undefined, undefined, true);\n                expect(checkout).not.toBeCalled();\n                expect(coreMethods.getUrlSync).not.toBeCalled();\n                expect(window.location.assign).not.toBeCalled();\n            } catch (e) {\n                expect(e).toBeDefined();\n            }\n        });\n\n        it('handles url with params', async () => {\n            // @ts-ignore: Jest Mocking Confuses TS Complier\n            coreMethods.getUrlSync.mockImplementation(() => `${confirmationPageUrl}?d=1`);\n\n            try {\n                // @ts-ignore\n                await placeOrder(mockActionContext, undefined, undefined, true);\n                expect(checkout).toBeCalled();\n                expect(coreMethods.getUrlSync).toBeCalled();\n                expect(window.location.assign).toBeCalledWith(`${confirmationPageUrl}?d=1&transactionId=order_1`);\n            } catch (e) {\n                expect(e).not.toBeDefined();\n            }\n        });\n\n        it('throw error when checkout state not available', async () => {\n            // @ts-ignore: Jest Mocking Confuses TS Complier\n            coreMethods.getUrlSync.mockImplementation(() => '');\n\n            try {\n                // @ts-ignore\n                await placeOrder(mockActionContext, undefined, undefined, false);\n                expect(checkout).not.toBeCalled();\n                expect(coreMethods.getUrlSync).not.toBeCalled();\n                expect(window.location.assign).not.toBeCalled();\n            } catch (e) {\n                expect(e).toBeDefined();\n            }\n        });\n    });\n});"]}