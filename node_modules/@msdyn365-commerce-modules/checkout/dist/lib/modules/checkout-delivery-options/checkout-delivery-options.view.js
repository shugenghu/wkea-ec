import { Module, Node } from '@msdyn365-commerce-modules/utilities';
import * as React from 'react';
const DeliveryOptionList = ({ DeliveryOptionsList, list }) => {
    if (!list || list.length === 0) {
        return null;
    }
    return (React.createElement(Node, Object.assign({}, DeliveryOptionsList), list.map((deliveryOption) => {
        return (React.createElement(Node, Object.assign({}, deliveryOption.DeliveryOption, { key: deliveryOption.code }),
            deliveryOption.radioButton,
            deliveryOption.description,
            deliveryOption.price));
    })));
};
const DeliveryOptionSelected = ({ DeliveryOption, description, price, }) => {
    return (React.createElement(Node, Object.assign({}, DeliveryOption),
        description,
        price));
};
const ErrorMessage = ({ Error, title, message, }) => {
    return (React.createElement(Node, Object.assign({}, Error),
        title,
        message));
};
const CheckoutDeliveryOptionsView = props => {
    const { CheckoutDeliveryOptions, viewState, deliveryOptions, deliveryOptionSelected, errorMessage, waiting, saveButton, editButton, cancelButton } = props;
    return (React.createElement(Module, Object.assign({}, CheckoutDeliveryOptions),
        viewState.isLoading && waiting,
        viewState.isError && errorMessage && React.createElement(ErrorMessage, Object.assign({}, errorMessage)),
        viewState.isShowList && deliveryOptions && React.createElement(DeliveryOptionList, Object.assign({}, deliveryOptions)),
        viewState.isShowSelected && deliveryOptionSelected && React.createElement(DeliveryOptionSelected, Object.assign({}, deliveryOptionSelected)),
        viewState.isShowSaveButton && saveButton,
        viewState.isShowEditButton && editButton,
        viewState.isShowCancelButton && cancelButton));
};
export default CheckoutDeliveryOptionsView;
//# sourceMappingURL=checkout-delivery-options.view.js.map