{"version":3,"file":"checkout-delivery-options.view.test.js","sourceRoot":"./src/","sources":["modules/checkout-delivery-options/__tests__/unit/checkout-delivery-options.view.test.tsx"],"names":[],"mappings":"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","sourcesContent":["\n/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nimport { render } from 'enzyme';\nimport * as React from 'react';\n\n// tslint:disable-next-line:no-unused-variable\nimport { buildMockModuleProps } from '@msdyn365-commerce/core';\n\nimport { ICheckoutDeliveryOptionsProps } from '../../checkout-delivery-options.props.autogenerated';\nimport CheckoutDeliveryOptionsView from '../../checkout-delivery-options.view';\n\nconst moduleProps: ICheckoutDeliveryOptionsProps<{}> = buildMockModuleProps({}, {}) as ICheckoutDeliveryOptionsProps<{}>;\n\nconst mockProps = {\n    ...moduleProps,\n    selectedItemId: '',\n    deliveryOptionsData: [],\n    isLoading: false,\n    errorMessageData: '',\n    viewState: {\n        isLoading: false,\n        isError: false,\n        isShowList: false,\n        isShowSelected: false,\n        isShowSaveButton: false,\n        isShowEditButton: false,\n        isShowCancelButton: false\n    },\n    CheckoutDeliveryOptions: { moduleProps, className: 'mock-module' },\n    deliveryOptions: {\n        DeliveryOptionsList: { className: 'mock-node-DeliveryOptionsList' },\n        list: [{\n            DeliveryOption: { className: 'mock-node-DeliveryOption' },\n            code: '1',\n            radioButton: '{deliveryOptions-radioButton}',\n            description: '{deliveryOptions-description}',\n            price: '{deliveryOptions-price}'\n        }]\n    },\n    deliveryOptionSelected: {\n        DeliveryOption: { className: 'mock-node-DeliveryOption' },\n        code: '1',\n        description: '{deliveryOptionSelected-description}',\n        price: '{deliveryOptionSelected-price}'\n    },\n    errorMessage: {\n        Error: { className: 'mock-node-Error' },\n        title: '{error-title}',\n        message: '{error-message}'\n    },\n    waiting: '{waiting}',\n    saveButton: '{saveButton}',\n    editButton: '{editButton}',\n    cancelButton: '{cancelButton}',\n    onSave: jest.fn(),\n    onEdit: jest.fn(),\n    onCancel: jest.fn(),\n    onDeliveryOptionChange: jest.fn()\n};\n\ndescribe('CheckoutDeliveryOptions unit tests - View', () => {\n    it('renders correctly loading message', () => {\n        const viewState = { ...mockProps.viewState };\n        viewState.isLoading = true;\n        const newProps = { ...mockProps, ...{ viewState } };\n\n        const component = render(<CheckoutDeliveryOptionsView {...newProps} />);\n        expect(component).toMatchSnapshot();\n    });\n\n    it('renders correctly error message', () => {\n        const viewState = { ...mockProps.viewState };\n        viewState.isError = true;\n        const newProps = { ...mockProps, ...{ viewState } };\n\n        const component = render(<CheckoutDeliveryOptionsView {...newProps} />);\n        expect(component).toMatchSnapshot();\n    });\n\n    it('renders correctly list', () => {\n        const viewState = { ...mockProps.viewState };\n        viewState.isShowList = true;\n        const newProps = { ...mockProps, ...{ viewState } };\n\n        const component = render(<CheckoutDeliveryOptionsView {...newProps} />);\n        expect(component).toMatchSnapshot();\n    });\n\n    it('renders correctly selected options', () => {\n        const viewState = { ...mockProps.viewState };\n        viewState.isShowSelected = true;\n        const newProps = { ...mockProps, ...{ viewState } };\n\n        const component = render(<CheckoutDeliveryOptionsView {...newProps} />);\n        expect(component).toMatchSnapshot();\n    });\n\n    it('renders correctly buttons', () => {\n        const viewState = { ...mockProps.viewState };\n        viewState.isShowSaveButton = true;\n        viewState.isShowEditButton = true;\n        viewState.isShowCancelButton = true;\n        const newProps = { ...mockProps, ...{ viewState } };\n\n        const component = render(<CheckoutDeliveryOptionsView {...newProps} />);\n        expect(component).toMatchSnapshot();\n    });\n});\n"]}