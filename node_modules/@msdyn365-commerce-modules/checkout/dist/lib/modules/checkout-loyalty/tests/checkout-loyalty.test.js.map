{"version":3,"file":"checkout-loyalty.test.js","sourceRoot":"./src/","sources":["modules/checkout-loyalty/tests/checkout-loyalty.test.tsx"],"names":[],"mappings":"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","sourcesContent":["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------\n */\n/// <reference types=\"jest\" />\nimport { mount } from 'enzyme';\nimport * as React from 'react';\nimport * as renderer from 'react-test-renderer';\n\nimport { updateModuleStates } from '@msdyn365-commerce-modules/checkout-utilities';\nimport { wrapInResolvedAsyncResult } from '@msdyn365-commerce-modules/retail-actions';\nimport { buildHydratedMockActionContext, buildMockModuleProps } from '@msdyn365-commerce/core';\nimport { ICartActionResult, ICheckoutState } from '@msdyn365-commerce/global-state';\nimport { AsyncResult } from '@msdyn365-commerce/retail-proxy';\nimport {\n    Cart, LoyaltyCard, LoyaltyPointRedemptionEstimate\n} from '@msdyn365-commerce/retail-proxy/dist/Entities/CommerceTypes.g';\n\nimport CheckoutLoyalty, { ICheckoutLoyaltyModuleProps } from '../checkout-loyalty';\nimport { ICheckoutLoyaltyData } from '../checkout-loyalty.data';\nimport {\n    ICheckoutLoyaltyConfig, ICheckoutLoyaltyResources\n} from '../checkout-loyalty.props.autogenerated';\n\nconst loyaltyCard: LoyaltyCard = {\n    CardNumber: '1234567890',\n    LoyaltyEnrollmentDate: new Date('Wed Jul 03 2019 14:44:37 GMT-0700'),\n    RewardPoints: [\n        {\n            RewardPointId: 'Fabrikam',\n            RewardPointTypeValue: 1,\n            RewardPointCurrency: 'USD',\n            IsRedeemable: true,\n            PointsExpiringSoon: 34,\n            ActivePoints: 90,\n            Description: 'Fabrikam awesome points'\n        }\n    ]\n};\n\nconst estimation: LoyaltyPointRedemptionEstimate = {\n    MaxCurrencyValueOfLoyaltyPoints: 37\n};\n\nconst mockCart = {\n    Id: 'jWvjTh2wyxWnopUGQmzpkGoQVuu5pUh6',\n    TotalAmount: 479.25,\n    CartLines: [\n        {\n            LineId: '2',\n            ProductId: 2,\n            Quantity: 2,\n            Price: 300,\n            ExtendedPrice: 450,\n            TaxAmount: 29.25,\n            ItemTaxGroupId: 'RP',\n            TotalAmount: 479.25,\n            NetAmountWithoutTax: 450,\n            NetPrice: 600,\n            DiscountAmountWithoutTax: 150,\n            DiscountAmount: 150\n        }\n    ]\n} as Cart;\n\nconst mockAddLoyalty = (input: {loyaltyCardNumber: string}): Promise<ICartActionResult> => {\n    mockCart.LoyaltyCardId = input.loyaltyCardNumber;\n    return Promise.resolve({ status: 'SUCCESS' } as ICartActionResult);\n};\n\n// @ts-ignore partial class\nlet mockCheckoutState: ICheckoutState = {\n    // @ts-ignore partial class\n    checkoutCart: {\n        cart: mockCart\n    }\n};\n\nconst mockData: ICheckoutLoyaltyData = {\n    checkout: wrapInResolvedAsyncResult(mockCheckoutState),\n    loyaltyCard: wrapInResolvedAsyncResult(loyaltyCard),\n    loyaltyTransactionEstimation: wrapInResolvedAsyncResult(estimation)\n};\n\nconst mockActionContext = buildHydratedMockActionContext();\n\n// @ts-ignore\nconst mockContext: ICoreContext = {\n    actionContext: mockActionContext,\n    cultureFormatter: {\n        formatCurrency: jest.fn((price, _foo) => `$${price}`)\n    },\n    request: {\n        locale: 'en-us',\n        user: {\n            isAuthenticated: true\n        },\n        channel: {\n            Currency: 'USD'\n        }\n    }\n};\nconst mockConfig: ICheckoutLoyaltyConfig = {};\n\nconst mockResources: ICheckoutLoyaltyResources = {\n    payWithLoyaltyText: 'Pay with loyalty rewards',\n    payWithLoyaltyAmountLabel: 'Amount to use',\n    selectLoyaltyProgramLabel: 'Select a loyalty program',\n    totalLoyaltyDollarAmountText: 'Total available dollar amount:',\n    availablePointsLabel: 'Total available points',\n    expiringLoyaltyPointsLabel: 'Expiring points within 30 days',\n    loyaltyCoveredAmountText: 'Amount covered by loyalty: ',\n    removeCheckoutLoyaltyPaymentText: 'Remove',\n    loyaltyHeadingText: 'Loyalty card',\n    applyCheckoutLoyaltyPaymentText: 'Apply'\n};\n\nconst mockActions = {};\n\ndescribe('CheckoutLoyalty', () => {\n    beforeEach(() => {\n        mockCheckoutState = {\n            // @ts-ignore partial class\n            checkoutCart: {\n                cart: mockCart,\n                updateLoyaltyCardId: mockAddLoyalty\n            }\n        };\n    });\n\n    xit('renders correctly when user has no loyalty card', () => {\n        const moduleProps = {\n            ...(buildMockModuleProps(mockData, mockActions, mockConfig, mockContext) as ICheckoutLoyaltyModuleProps),\n            resources: mockResources\n        };\n        moduleProps.context = mockContext;\n        const component: renderer.ReactTestRenderer = renderer.create(<CheckoutLoyalty {...moduleProps} />);\n        const tree = component.toJSON();\n        expect(tree).toMatchSnapshot();\n    });\n\n    xit('The amount of estimated points updates when the data updates', () => {\n        const moduleProps = {\n            ...(buildMockModuleProps(mockData, mockActions, mockConfig, mockContext) as ICheckoutLoyaltyModuleProps),\n            resources: mockResources\n        };\n        const wrapper = mount(<CheckoutLoyalty {...moduleProps} />);\n        let points = wrapper.props().data.loyaltyTransactionEstimation.result.MaxCurrencyValueOfLoyaltyPoints;\n        let loyaltyAmountNode = wrapper.find('.checkout-loyalty-covered-value').at(0);\n        expect((loyaltyAmountNode.getDOMNode().textContent || '').trim()).toBe('$37');\n        expect(points).toBe(37);\n        mockData.loyaltyTransactionEstimation.result!.MaxCurrencyValueOfLoyaltyPoints = 42;\n        wrapper.instance().forceUpdate();\n        points = wrapper.props().data.loyaltyTransactionEstimation.result.MaxCurrencyValueOfLoyaltyPoints;\n        loyaltyAmountNode = wrapper.find('.checkout-loyalty-covered-value').at(0);\n        expect(points).toBe(42);\n        expect((loyaltyAmountNode.getDOMNode().textContent || '').trim()).toBe('$42');\n        wrapper.unmount();\n    });\n\n    xit('calls init when the data is ready', () => {\n        const moduleProps = {\n            ...(buildMockModuleProps(mockData, mockActions, mockConfig, mockContext) as ICheckoutLoyaltyModuleProps),\n            resources: mockResources\n        };\n        moduleProps.context = mockContext;\n        renderer.create(<CheckoutLoyalty {...moduleProps} />);\n        expect(mockCheckoutState.checkoutCart.cart.LoyaltyCardId).toBe(loyaltyCard.CardNumber);\n    });\n\n    xit('does not call init when the data is not ready', () => {\n        const mockLoadingData: ICheckoutLoyaltyData = {\n            checkout: wrapInResolvedAsyncResult(mockCheckoutState),\n            loyaltyCard: ({ result: loyaltyCard, status: 'LOADING' } as AsyncResult<LoyaltyCard>),\n            loyaltyTransactionEstimation: wrapInResolvedAsyncResult(estimation)\n        };\n\n        const moduleProps = {\n            ...(buildMockModuleProps(mockLoadingData, mockActions, mockConfig, mockContext) as ICheckoutLoyaltyModuleProps),\n            resources: mockResources\n        };\n        moduleProps.data.loyaltyCard.status = 'LOADING';\n        moduleProps.context = mockContext;\n        renderer.create(<CheckoutLoyalty {...moduleProps} />);\n        expect(mockCheckoutState.checkoutCart.cart.LoyaltyCardId).toBe(loyaltyCard.CardNumber);\n    });\n\n    xit('does call init when the loyalty fails (anon) scenario.', () => {\n        const mockLoadingData: ICheckoutLoyaltyData = {\n            checkout: wrapInResolvedAsyncResult(mockCheckoutState),\n            loyaltyCard: ({ result: undefined, status: 'FAILED' } as AsyncResult<LoyaltyCard>),\n            loyaltyTransactionEstimation: wrapInResolvedAsyncResult(estimation)\n        };\n\n        const moduleProps = {\n            ...(buildMockModuleProps(mockLoadingData, mockActions, mockConfig, mockContext) as ICheckoutLoyaltyModuleProps),\n            resources: mockResources\n        };\n        const mockModuleStates = {\n            test_id: {\n                id: 'test_id',\n                hasInitialized: true,\n                hasError: true,\n                status: 'updating'\n            }\n        };\n        // @ts-ignore: Using partial for testing\n        updateModuleStates(mockModuleStates, mockActionContext);\n        const wrapper = mount(<CheckoutLoyalty {...moduleProps} />,\n                              { attachTo: document.body.firstElementChild as HTMLElement }\n        );\n        expect(wrapper.children().at(0).props().moduleState.status).toBe('disabled');\n        wrapper.unmount();\n    });\n});\n"]}