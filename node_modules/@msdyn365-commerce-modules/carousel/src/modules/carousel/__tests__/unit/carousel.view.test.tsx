/*---------------------------------------------------------------------------------------------
 *  Copyright (c) Microsoft Corporation. All rights reserved.
 *  Licensed under the MIT License. See License.txt in the project root for license information.
 *--------------------------------------------------------------------------------------------*/

import { buildMockCoreContext, buildMockModuleProps, buildMockRequest, ICoreContext, IRequestContext } from '@msdyn365-commerce/core';

// tslint:disable-next-line:no-unused-variable
import { render } from 'enzyme';
import * as React from 'react';

import { ITelemetryContent } from '@msdyn365-commerce-modules/utilities';
import { ICarouselViewProps } from '../../carousel';
import {
  ICarouselConfig,
  ICarouselProps,
  transitionType
} from '../../carousel.props.autogenerated';
import CarouselView from '../../carousel.view';

const mockConfig: ICarouselConfig = {
  className:'carousel-mock',
  pauseOnHover: true,
  autoplay: true,
  transitionType: transitionType.slide
};

const mockCoreContext = buildMockCoreContext({app: {config: {hideRating: false}}}) as ICoreContext;
const telemetryContent = {  pageName: 'Homepage', moduleName: 'Add to Cart', telemetry: mockCoreContext.telemetry} as ITelemetryContent;

const mockRequest: IRequestContext = buildMockRequest();
// @ts-ignore
const mockContext: ICoreContext = {
  request: mockRequest
};

describe('Carousel view tests', () => {
  it('render correctly', () => {
      const moduleProps: ICarouselProps<ICarouselConfig> = buildMockModuleProps({},{}, mockConfig) as ICarouselProps<ICarouselConfig>;
      const mockFunction = jest.fn();

      const mockProps: ICarouselViewProps = {
          ...moduleProps,
          carouselContainer: {
            moduleProps,
            className: 'ms-carousel'
          },
          context: mockContext,
          closeAnimation: '',
          next: mockFunction,
          previous: mockFunction,
          onIndicatorsClickHandler: mockFunction,
          handleDismissCarousel: mockFunction,
          handleOnExited: mockFunction,
          handleOnExiting: mockFunction,
          activeIndex: 0,
          closeNow: false,
          dismissCarousel: false,
          telemetryContent: telemetryContent
      };
      const view = render(<CarouselView {...mockProps}/>);
      expect(view);
  });
});
