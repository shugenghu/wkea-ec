import { IFullOrgUnitAvailability } from '@msdyn365-commerce-modules/retail-actions';
import { ITelemetryContent } from '@msdyn365-commerce-modules/utilities';
import { OrgUnitLocation } from '@msdyn365-commerce/retail-proxy';
import * as React from 'react';
import { IStoreSelectorResources } from '../store-selector.props.autogenerated';
export interface IStoreSelectorLocationLinesProps {
    locations?: IFullOrgUnitAvailability[];
    resources: IStoreSelectorResources;
    preferredDistanceUnit?: string;
    alreadySelectedLocation?: OrgUnitLocation;
    outOfStockThreshold: number;
    enableOutOfStockCheck: boolean;
    storeLocatorView?: boolean;
    selectedStoreLocationId?: string;
    isPreferredStoreEnabled?: boolean;
    displayList?: boolean;
    isLocationDisabled?: boolean;
    onClick: ((locationId: string | undefined) => void);
    preferredStoreLocationId: string | null;
    onSetAsPreferredStore: ((locationId: string | undefined) => void);
    onRemovePreferredStore: (() => void);
    telemetryContent?: ITelemetryContent;
    onLocationSelected(location: OrgUnitLocation | undefined): void;
}
export declare class StoreSelectorLocationLines extends React.PureComponent<IStoreSelectorLocationLinesProps> {
    private selectedLocationRef;
    private _stores;
    constructor(props: IStoreSelectorLocationLinesProps);
    componentDidUpdate(prevProps: IStoreSelectorLocationLinesProps): void;
    componentDidMount(): void;
    render(): JSX.Element | null;
    private _renderStoreLocation;
    private _sortStores;
    private _scrollIntoView;
    private _isCurrentLocation;
    private _isProductInStock;
    private _stockInventoryLabel;
    private _mapResources;
}
