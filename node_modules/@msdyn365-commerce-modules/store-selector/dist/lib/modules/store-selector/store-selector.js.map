{"version":3,"file":"store-selector.js","sourceRoot":"./src/","sources":["modules/store-selector/store-selector.tsx"],"names":[],"mappings":"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","sourcesContent":["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\n// tslint:disable:no-reference\n/// <reference path=\"types/MicrosoftMaps/Microsoft.Maps.All.d.ts\" />\n\nimport * as Msdyn365 from '@msdyn365-commerce/core';\nimport { reaction } from 'mobx';\nimport { observer } from 'mobx-react';\nimport * as React from 'react';\nimport { IStoreSelectorData } from './store-selector.data';\nimport { IStoreSelectorProps, mode as modeEnum, searchRadiusUnit, style as stylyEnum } from './store-selector.props.autogenerated';\n\nimport {\n    StoreSelectorEmptyMessage,\n    StoreSelectorFoundLocationsMessage,\n    StoreSelectorLocationLines,\n    StoreSelectorSearchForm,\n    StoreSelectorTermsOfService,\n    StoreSelectorWaiting\n} from './components';\n\nimport { getFullAvailableInventoryNearby, GetFullAvailableInventoryNearbyInput, getOrgUnitLocationsByArea, GetOrgUnitLocationsByAreaInput, IFullOrgUnitAvailability } from '@msdyn365-commerce-modules/retail-actions';\n\nimport { getTelemetryObject, IModuleProps, INodeProps, ITelemetryContent, Modal, ModalBody, ModalFooter, ModalHeader, NodeTag } from '@msdyn365-commerce-modules/utilities';\nimport { OrgUnitLocation } from '@msdyn365-commerce/retail-proxy';\nimport classname from 'classnames';\nexport interface IStoreSelectorState {\n    isSearchInProgress: boolean;\n    searchTerm?: string;\n    isSeeAllStoreValue: boolean;\n    isLocationDisabled?: boolean;\n}\n\nexport interface IStoreSelectorViewProps extends IStoreSelectorProps<IStoreSelectorData> {\n    state: IStoreSelectorState;\n\n    // Containers:\n    ModuleProps: IModuleProps;\n    BodyContainerProps: INodeProps;\n    FooterContainerProps: INodeProps;\n    HeaderContainerProps: INodeProps;\n    HeaderProps?: React.ReactNode;\n\n    // Components\n    locationsMessage?: React.ReactNode;\n    search?: React.ReactNode;\n    spinner?: React.ReactNode;\n    locationsList?: React.ReactNode;\n    noLocationsMessage?: React.ReactNode;\n    terms?: React.ReactNode;\n    headerText?: React.ReactNode;\n\n    callbacks: {\n        closeDialog(): Promise<void>;\n        searchTermChanged(searchTerm: string): Promise<void>;\n        performSearch(searchTerm: string): Promise<void>;\n        selectedLocation(location: OrgUnitLocation | undefined): Promise<void>;\n        getAndUpdateUserLocation(): Promise<void>;\n        attachMapAutoSuggest(): Promise<void>;\n        onSuggestionSelected(result: Microsoft.Maps.ISuggestionResult): Promise<void>;\n        setPreferredStore(storeId: string | undefined): Promise<void>;\n        removePreferredStore(): Promise<void>;\n        setSelectedStore(storeId: string | undefined): Promise<void>;\n        setOrgUnitStoreInformation(location: OrgUnitLocation | undefined): Promise<void>;\n    };\n}\n\n/**\n *\n * Pick Up In Store module\n * @extends React.Component<IPickUpInStoreProps<IPickUpInStoreData>>}\n */\n@observer\nclass StoreSelector extends React.Component<IStoreSelectorProps<IStoreSelectorData>, IStoreSelectorState> {\n    private autoSuggestManager: Microsoft.Maps.AutosuggestManager | undefined;\n    private preferredStoreLocalStorageKey: string = '_msdyn365__preferredStore_';\n    private telemetryContent: ITelemetryContent;\n\n    constructor(props: IStoreSelectorProps<IStoreSelectorData>) {\n        super(props);\n        this.state = { isSearchInProgress: true, searchTerm: '', isSeeAllStoreValue: false };\n        this.telemetryContent = getTelemetryObject(this.props.context.request.telemetryPageName!,\n                                                   this.props.friendlyName,\n                                                   this.props.telemetry);\n    }\n\n    public componentDidMount(): void {\n        const {\n            context: {\n                telemetry,\n                actionContext: {\n                    requestContext: {\n                        channel\n                    }\n                }\n            },\n            config: {\n                autoSuggestionEnabled\n            }\n        } = this.props;\n\n        this._getAndUpdateStoreLocation();\n\n        reaction(\n            () => this.props.data.storeSelectorStateManager.result && this.props.data.storeSelectorStateManager.result.isDialogOpen,\n            () => {\n                this._getAndUpdateStoreLocation();\n            }\n        );\n\n        if (channel && !channel.BingMapsApiKey) {\n            telemetry.error('BingMapsApiKey is missing.');\n            return;\n        }\n\n        if (channel && !channel.BingMapsEnabled) {\n            telemetry.error('Map is disabled from HQ.');\n            return;\n        }\n\n        if (this.props.data.storeSelectorStateManager.result?.loadMapApi) {\n            this.props.data.storeSelectorStateManager.result?.loadMapApi({\n                key: channel?.BingMapsApiKey,\n                lang: this.props.context?.actionContext?.requestContext?.channel?.ChannelCountryRegionISOCode,\n                market: this.props.context?.actionContext?.requestContext?.channel?.DefaultLanguageId\n            }).then().catch();\n        }\n\n        reaction(\n            () => this.props.data.storeSelectorStateManager.result?.loadMapApi,\n            () => {\n                this.props.data.storeSelectorStateManager.result?.loadMapApi({\n                    key: channel?.BingMapsApiKey,\n                    lang: this.props.context?.actionContext?.requestContext?.channel?.ChannelCountryRegionISOCode,\n                    market: this.props.context?.actionContext?.requestContext?.channel?.DefaultLanguageId\n                });\n            }\n        );\n\n        if (autoSuggestionEnabled) {\n            reaction(\n                () => (!!(this.props.data.storeSelectorStateManager.result?.isMapApiLoaded && this.props.data.storeSelectorStateManager.result?.isDialogOpen)),\n                async () => {\n                    setTimeout(async () => {\n                        await this._attachMapAutoSuggest();\n                    },         0);\n                }\n            );\n        }\n    }\n\n    // tslint:disable-next-line:max-func-body-length cyclomatic-complexity\n    public render(): JSX.Element {\n        const {\n            config: {\n                termsOfServiceLink,\n                className,\n                heading,\n                mode,\n                style,\n                setAsPreferredStore,\n                showAllStores,\n                lookupRadius\n            },\n            context: {\n                telemetry,\n                app: {\n                    config: appConfig\n                },\n                actionContext: {\n                    requestContext: {\n                        channel,\n                        cookies\n                    }\n                }\n            },\n            resources,\n            data: {\n                availabilitiesWithHours: { result: availabilitiesWithHours },\n                storeSelectorStateManager: { result: storeSelectorStateManager },\n                storeLocations: { result: storeLocations }\n            }\n        } = this.props;\n\n        const isMapDisabled = (channel && channel.BingMapsApiKey && channel.BingMapsEnabled) ? false : true;\n        const context = storeSelectorStateManager ? storeSelectorStateManager.context : undefined;\n        const isDialogOpen: boolean = storeSelectorStateManager ? storeSelectorStateManager.isDialogOpen : false;\n        const styleDefault = style !== undefined ? style : stylyEnum.dialog;\n        const modeDefault = mode !== undefined ? mode : modeEnum.pickupInStore;\n        const inlineView = styleDefault === stylyEnum.inline;\n        const locatorView = modeDefault === modeEnum.findStores;\n        const hideInventory = locatorView;\n        const selectedStoreLocationId = storeSelectorStateManager?.selectedStoreLocationId;\n        const preferredStoreLocationId = storeSelectorStateManager?.preferredStoreLocationId || (Msdyn365.msdyn365Commerce.isBrowser ? window?.localStorage?.getItem('_msdyn365__preferredStore_') : '');\n        const displayList = storeSelectorStateManager?.listMapViewState?.displayList;\n        const isPreferredStoreEnabled = setAsPreferredStore && cookies?.isConsentGiven();\n\n        const StoreSelectorActions = {\n            toggleListMapViewState(): void {\n                storeSelectorStateManager?.toggleListMapViewState();\n            }\n        };\n\n        if (!(channel && channel.BingMapsApiKey)) {\n            telemetry.error('BingMapsApiKey is missing.');\n        }\n\n        const configHeading = heading ? heading : locatorView ? resources.storeLocatorHeaderText : resources.storeSelectorHeaderText;\n        const preferredDistanceUnit = this.props.config.searchRadiusUnit === searchRadiusUnit.kilometers ? resources.kilometersShortText : resources.milesShortText;\n\n        const viewProps = {\n            ...(this.props as IStoreSelectorProps<IStoreSelectorData>),\n            state: this.state,\n\n            ModuleProps: {\n                tag: inlineView ? 'div' as NodeTag : Modal,\n                moduleProps: this.props,\n                className: classname(`ms-store-${inlineView ? 'locate' : 'select'}`, className),\n                autoFocus: true,\n                fade: true,\n                isOpen: isDialogOpen,\n                onClosed: this._closeDialog,\n                horizontalPosition: 'center',\n                verticalPosition: 'center'\n            },\n            HeaderContainerProps: {\n                tag: inlineView ? 'div' as NodeTag : ModalHeader,\n                className: `ms-store-select__${inlineView ? 'header' : 'modal-header'}`,\n                toggle: this._closeDialog\n            },\n            HeaderProps: configHeading && (\n                <Msdyn365.Text\n                    className='msc-modal__title'\n                    {...configHeading}\n                    tag={'h2'}\n                    text={configHeading}\n                    editProps={{ onEdit: this.handleHeadingChange, requestContext: this.props.context.request }}\n                />\n            ),\n            FooterContainerProps: {\n                tag: inlineView ? 'div' as NodeTag : ModalFooter,\n                className: `ms-store-select__${inlineView ? 'footer' : 'modal-footer'} ${!displayList ? 'map-only-view' : ''}`\n            },\n            BodyContainerProps: {\n                tag: inlineView ? 'div' as NodeTag : ModalBody,\n                className: `ms-store-select__${inlineView ? 'body' : 'modal-body'}`\n            },\n            locationsMessage: !this.state.isLocationDisabled && (\n                <StoreSelectorFoundLocationsMessage\n                    resources={resources}\n                    locations={hideInventory ? storeLocations : availabilitiesWithHours}\n                    searchRadius={lookupRadius || 50}\n                    preferredDistanceUnit={preferredDistanceUnit}\n                    isSeeAllStore={this.state.isSeeAllStoreValue}\n                />\n            ),\n            search: (\n                <StoreSelectorSearchForm\n                    value={this.state.searchTerm || ''}\n                    resources={resources}\n                    performSearch={this._performSearch}\n                    searchTermChanged={this._searchTermChanged}\n                    isMapDisabled={isMapDisabled}\n                    showAllStores={showAllStores}\n                    // tslint:disable-next-line:react-this-binding-issue jsx-no-lambda\n                    onShowAllStores={() => this._getAndUpdateStoreLocation(true)}\n                    onToggleListMapViewState={StoreSelectorActions.toggleListMapViewState}\n                    displayList={displayList}\n                    locatorView={locatorView}\n                    telemetryContent={this.telemetryContent}\n                />\n            ),\n            spinner: <StoreSelectorWaiting />,\n            locationsList: ((availabilitiesWithHours && availabilitiesWithHours.length) || (storeLocations && storeLocations.length)) && (\n                <StoreSelectorLocationLines\n                    locations={hideInventory ? storeLocations : availabilitiesWithHours}\n                    resources={resources}\n                    preferredDistanceUnit={preferredDistanceUnit}\n                    alreadySelectedLocation={context ? context.alreadySelectedLocation : undefined}\n                    outOfStockThreshold={appConfig.outOfStockThreshold || 0}\n                    enableOutOfStockCheck={appConfig.enableStockCheck || false}\n                    onLocationSelected={this._onOrgUnitLocationSelected}\n                    storeLocatorView={locatorView}\n                    selectedStoreLocationId={selectedStoreLocationId}\n                    onClick={this._setSelectedStore}\n                    preferredStoreLocationId={preferredStoreLocationId}\n                    onSetAsPreferredStore={this._setPreferredStore}\n                    onRemovePreferredStore={this._removePreferredStore}\n                    isPreferredStoreEnabled={isPreferredStoreEnabled}\n                    displayList={displayList}\n                    telemetryContent={this.telemetryContent}\n                    isLocationDisabled={this.state.isLocationDisabled}\n                />\n            ),\n            noLocationsMessage: <StoreSelectorEmptyMessage resources={resources} />,\n            terms: <StoreSelectorTermsOfService link={termsOfServiceLink} onTextChange={this.handleLinkTextChange} requestContext={this.props.context.request} />,\n            // Not being used in current context, we can use it here to pass more props.\n            headerText: <span>{heading ? heading : locatorView ? resources.storeLocatorHeaderText : resources.storeSelectorHeaderText}</span>,\n\n            callbacks: {\n                searchTermChanged: this._searchTermChanged,\n                performSearch: this._performSearch,\n                closeDialog: this._closeDialog,\n                selectedLocation: this._onOrgUnitLocationSelected,\n                getAndUpdateUserLocation: () => { this._getAndUpdateStoreLocation(); return Promise.resolve(); },\n                attachMapAutoSuggest: this._attachMapAutoSuggest,\n                onSuggestionSelected: this._onOrgUnitLocationSelected,\n                setPreferredStore: this._setPreferredStore,\n                removePreferredStore: this._removePreferredStore,\n                setSelectedStore: this._setSelectedStore,\n                setOrgUnitStoreInformation: this._setOrgUnitStoreInformation\n            }\n        } as IStoreSelectorViewProps;\n\n        return this.props.renderView(viewProps) as React.ReactElement;\n    }\n\n    public handleLinkTextChange = (event: Msdyn365.ContentEditableEvent) => {\n        if (this.props.config.termsOfServiceLink) {\n            this.props.config.termsOfServiceLink.linkText = event.target.value;\n        }\n    };\n    public handleHeadingChange = (event: Msdyn365.ContentEditableEvent) => this.props.config.heading = event.target.value;\n\n    private _attachMapAutoSuggest = async (): Promise<void> => {\n        const {\n            config: {\n                autoSuggestOptions\n            },\n            context: {\n                telemetry,\n                actionContext: {\n                    requestContext: {\n                        channel\n                    }\n                }\n            },\n            data: {\n                storeSelectorStateManager: { result: storeSelectorStateManager }\n            }\n        } = this.props;\n\n        if (storeSelectorStateManager?.isMapApiLoaded && !this.autoSuggestManager) {\n            Microsoft.Maps.loadModule('Microsoft.Maps.AutoSuggest', {\n                callback: () => {\n                    const options = { ...autoSuggestOptions, countryCode: channel?.ChannelCountryRegionISOCode };\n                    this.autoSuggestManager = new Microsoft.Maps.AutosuggestManager(options);\n                    this.autoSuggestManager.attachAutosuggest('#ms-store-select__search-box', '#ms-store-select__search-box-container', this._onSuggestionSelected);\n                },\n                errorCallback: () => {\n                    if (telemetry) {\n                        telemetry.debug('Unable to attach map auto suggest.');\n                    }\n                },\n                credentials: channel?.BingMapsApiKey\n            });\n        }\n    }\n\n    private _onSuggestionSelected = async (result: Microsoft.Maps.ISuggestionResult): Promise<void> => {\n        await this._searchTermChanged(result.formattedSuggestion);\n        await this._performSearch(result.formattedSuggestion);\n    }\n\n    private _setPreferredStore = async (storeId: string | undefined): Promise<void> => {\n        const localStorage = Msdyn365.msdyn365Commerce.isBrowser ? window?.localStorage:  undefined;\n\n        if (!storeId || !localStorage) {\n            return;\n        }\n\n        const {\n            context: {\n                actionContext: {\n                    requestContext: {\n                        cookies\n                    }\n                }\n            },\n            data: {\n                storeSelectorStateManager: { result: storeSelectorStateManager }\n            }\n        } = this.props;\n\n        if (!storeSelectorStateManager || !cookies?.isConsentGiven()) { return; }\n\n        localStorage.setItem(this.preferredStoreLocalStorageKey, storeId);\n        await storeSelectorStateManager.setPreferredStoreLocationId(storeId);\n    }\n\n    private _removePreferredStore = async (): Promise<void> => {\n        const localStorage = Msdyn365.msdyn365Commerce.isBrowser ? window?.localStorage:  undefined;\n\n        if (!localStorage) {\n            return;\n        }\n\n        const {\n            context: {\n                actionContext: {\n                    requestContext: {\n                        cookies\n                    }\n                }\n            },\n            data: {\n                storeSelectorStateManager: { result: storeSelectorStateManager }\n            }\n        } = this.props;\n\n        if (!storeSelectorStateManager || !cookies?.isConsentGiven()) { return; }\n\n        localStorage.removeItem(this.preferredStoreLocalStorageKey);\n        await storeSelectorStateManager.setPreferredStoreLocationId(undefined);\n    }\n\n    private _setSelectedStore = async (storeId: string | undefined): Promise<void> => {\n        const {\n            data: {\n                storeSelectorStateManager: { result: storeSelectorStateManager }\n            }\n        } = this.props;\n\n        if (!storeSelectorStateManager) { return; }\n\n        await storeSelectorStateManager.setSelectedStoreLocationId(storeId);\n    }\n\n    private _performSearch = async (searchTerm: string): Promise<void> => {\n        const {\n            context: {\n                actionContext\n            },\n            data: {\n                storeSelectorStateManager: { result: storeSelectorStateManager }\n            }\n        } = this.props;\n\n        if (!searchTerm || !storeSelectorStateManager) {\n            return;\n        }\n\n        this.setState({ isSearchInProgress: true, isSeeAllStoreValue: false });\n\n        const location = await storeSelectorStateManager.geoLocate(searchTerm.trim() !== '' ? searchTerm : '0', actionContext);\n\n        if (location) {\n            await this._updateLocations(location.latitude, location.longitude);\n        }\n\n        this.setState({ isSearchInProgress: false });\n    }\n\n    private _searchTermChanged = async (searchTerm: string): Promise<void> => {\n        this.setState({ searchTerm: searchTerm });\n    }\n\n    private _getAndUpdateStoreLocation = (showAllStores?: boolean): void => {\n        const {\n            config: {\n                style\n            },\n            data: {\n                storeSelectorStateManager: { result: storeSelectorStateManager }\n            }\n        } = this.props;\n\n        const styleDefault = style !== undefined ? style : stylyEnum.dialog;\n\n        if (styleDefault !== stylyEnum.inline && (!storeSelectorStateManager || !storeSelectorStateManager.isDialogOpen)) {\n            // Store selector dialog isn't open yet, so don't try and update anything\n            return;\n        }\n\n        this.setState({ isSearchInProgress: true, isSeeAllStoreValue: false });\n\n        if (navigator && navigator.geolocation) {\n            navigator.geolocation.getCurrentPosition(\n                async position => {\n                    if (showAllStores) {\n                        this.setState({ isSeeAllStoreValue: true });\n                        await this._searchTermChanged('');\n                        await this._updateLocations(position.coords.latitude, position.coords.longitude, 0);\n                    } else {\n                        await this._updateLocations(position.coords.latitude, position.coords.longitude);\n                    }\n\n                    this.setState({ isSearchInProgress: false });\n                },\n                async error => {\n                    // If the location setting is turned off\n                    if (error.PERMISSION_DENIED) {\n                        this.setState({ isLocationDisabled: true });\n                        if (showAllStores) {\n                            this.setState({ isSeeAllStoreValue: true });\n                            await this._searchTermChanged('');\n                            await this._updateLocations(void 0, void 0, 0);\n                        } else {\n                            await this._updateLocations();\n                        }\n                    }\n\n                    this.setState({ isSearchInProgress: false });\n                },\n                { timeout: 2000 }\n            );\n        } else {\n            this.setState({ isSearchInProgress: false });\n        }\n    }\n\n    private _closeDialog = async (): Promise<void> => {\n        const {\n            data: {\n                storeSelectorStateManager: { result: storeSelectorStateManager }\n            }\n        } = this.props;\n\n        this.setState({ searchTerm: '' });\n\n        if (storeSelectorStateManager) {\n            return storeSelectorStateManager.closeDialog();\n        }\n    }\n\n    private _setOrgUnitStoreInformation = async (orgUnitStoreInformation: IFullOrgUnitAvailability[]): Promise<void> => {\n        const {\n            data: {\n                storeSelectorStateManager: { result: storeSelectorStateManager }\n            },\n            telemetry\n        } = this.props;\n\n        if (!storeSelectorStateManager) { return; }\n\n        await storeSelectorStateManager.setOrgUnitStoreInformation({\n            orgUnitStoreInformation,\n            onLocationSelected: orgUnitLocation => {\n                // TO-DO handle event for when location in selected\n                return Promise.resolve();\n            }\n        })\n            .catch((error: Error) => {\n                if (telemetry) {\n                    telemetry.error(error.message);\n                    telemetry.debug('Unable to Update store location state');\n                }\n                return;\n            });\n        return;\n    }\n\n    private _updateLocations = async (latitude?: number, longitude?: number, radius?: number): Promise<void> => {\n        const {\n            telemetry,\n            config: {\n                mode,\n                lookupRadius\n            },\n            context: {\n                actionContext\n            },\n            data: {\n                storeSelectorStateManager: { result: storeSelectorStateManager }\n            }\n        } = this.props;\n\n        const calRadius = (radius || radius === 0) ? radius : (lookupRadius || 50);\n        const distanceUnitValue = this.props.config.searchRadiusUnit === searchRadiusUnit.kilometers ? 1 : 0;\n        const modeDefault = mode !== undefined ? mode : modeEnum.pickupInStore;\n\n        if (modeDefault === modeEnum.findStores) {\n            const orgUnitLocationsInput = new GetOrgUnitLocationsByAreaInput(\n                latitude,\n                longitude,\n                calRadius,\n                distanceUnitValue,\n                this.state.isLocationDisabled\n            );\n\n            const orgUnitLocations = await getOrgUnitLocationsByArea(orgUnitLocationsInput, actionContext);\n            if (orgUnitLocations) {\n                await this._setOrgUnitStoreInformation(orgUnitLocations);\n                await this._setSelectedStore(undefined);\n            }\n            return;\n        }\n\n        if (!storeSelectorStateManager || !storeSelectorStateManager.context) {\n            // Store selector dialog isn't open yet, so don't try and update anything\n            return;\n        }\n\n        if (!storeSelectorStateManager.context.product) {\n            // TODO: Use alternative search method here to not make inventory check\n            return;\n        }\n\n        const input = new GetFullAvailableInventoryNearbyInput(\n            storeSelectorStateManager.context.product.RecordId,\n            latitude || 0,\n            longitude || 0,\n            calRadius,\n            distanceUnitValue,\n            this.state.isLocationDisabled\n        );\n\n        await getFullAvailableInventoryNearby(input, actionContext).catch((error) => {\n            telemetry.warning(error);\n            telemetry.error(error.message);\n            telemetry.debug(`Unable to get full available inventory near by`);\n        });\n    }\n\n    private _onOrgUnitLocationSelected = async (location: OrgUnitLocation | undefined): Promise<void> => {\n        const {\n            telemetry,\n            data: {\n                storeSelectorStateManager: { result: storeSelectorStateManager }\n            }\n        } = this.props;\n\n        if (storeSelectorStateManager) {\n            if (location && storeSelectorStateManager.context) {\n                // Want to eat exceptions here so that the dialog still closes even if the onLocationSelected call goes wrong\n                await storeSelectorStateManager.context.onLocationSelected(location).catch(error => {\n                    telemetry.warning(error);\n                    telemetry.error(error.message);\n                    telemetry.debug(`Unable to get on org unit location selected`);\n                });\n            }\n\n            await storeSelectorStateManager.closeDialog();\n        }\n    };\n}\n\nexport default StoreSelector;\n"]}