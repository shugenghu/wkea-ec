{"version":3,"file":"store-selector.view.test.js","sourceRoot":"./src/","sources":["modules/store-selector/tests/store-selector.view.test.tsx"],"names":[],"mappings":"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","sourcesContent":["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\n// tslint:disable-next-line:no-unused-variable\nimport { buildMockModuleProps } from '@msdyn365-commerce/core';\nimport { render } from 'enzyme';\nimport * as React from 'react';\n\nimport { IStoreSelectorProps, IStoreSelectorViewProps, StoreSelectorView } from '../../..';\n\ndescribe('Store selector view tests', () => {\n    it('renders correctly with no search in progress and locations list', () => {\n        const moduleProps: IStoreSelectorProps<{}> = buildMockModuleProps({}, {}) as IStoreSelectorProps<{}>;\n        // @ts-ignore partial mock\n        const mockProps: IStoreSelectorViewProps = {\n            ...moduleProps,\n\n            state: {\n                isSearchInProgress: false,\n                searchTerm: '',\n                isSeeAllStoreValue: false\n            },\n\n            ModuleProps: { moduleProps, className: 'ms-store-selector__modal' },\n            BodyContainerProps: { className: 'ms-store-selector__modal-body' },\n            FooterContainerProps: { className: 'ms-store-selector__modal-footer' },\n            HeaderContainerProps: { className: 'ms-store-selector__modal-header' },\n\n            // Components\n            locationsMessage: 'Locations message',\n            search: 'Search',\n            spinner: 'Spinner',\n            locationsList: 'Locations list',\n            noLocationsMessage: 'No locations',\n            terms: 'Terms',\n            headerText: 'Header',\n\n            callbacks: {\n                searchTermChanged: jest.fn(),\n                closeDialog: jest.fn(),\n                performSearch: jest.fn(),\n                selectedLocation: jest.fn(),\n                getAndUpdateUserLocation: jest.fn(),\n                attachMapAutoSuggest: jest.fn(),\n                onSuggestionSelected: jest.fn(),\n                setPreferredStore: jest.fn(),\n                setSelectedStore: jest.fn(),\n                setOrgUnitStoreInformation: jest.fn(),\n                removePreferredStore: jest.fn()\n            }\n        };\n        const component = render(<StoreSelectorView {...mockProps} />);\n        expect(component).toMatchSnapshot();\n    });\n\n    it('renders correctly with no search in progress and no locations list', () => {\n        const moduleProps: IStoreSelectorProps<{}> = buildMockModuleProps({}, {}) as IStoreSelectorProps<{}>;\n        // @ts-ignore partial mock\n        const mockProps: IStoreSelectorViewProps = {\n            ...moduleProps,\n\n            state: {\n                isSearchInProgress: false,\n                searchTerm: '',\n                isSeeAllStoreValue: false\n            },\n\n            ModuleProps: { moduleProps, className: 'ms-store-selector__modal' },\n            BodyContainerProps: { className: 'ms-store-selector__modal-body' },\n            FooterContainerProps: { className: 'ms-store-selector__modal-footer' },\n            HeaderContainerProps: { className: 'ms-store-selector__modal-header' },\n\n            // Components\n            locationsMessage: 'Locations message',\n            search: 'Search',\n            spinner: 'Spinner',\n            locationsList: undefined,\n            noLocationsMessage: 'No locations',\n            terms: 'Terms',\n            headerText: 'Header',\n\n            callbacks: {\n                searchTermChanged: jest.fn(),\n                closeDialog: jest.fn(),\n                performSearch: jest.fn(),\n                selectedLocation: jest.fn(),\n                getAndUpdateUserLocation: jest.fn(),\n                attachMapAutoSuggest: jest.fn(),\n                onSuggestionSelected: jest.fn(),\n                setPreferredStore: jest.fn(),\n                setSelectedStore: jest.fn(),\n                setOrgUnitStoreInformation: jest.fn(),\n                removePreferredStore: jest.fn()\n            }\n        };\n        const component = render(<StoreSelectorView {...mockProps} />);\n        expect(component).toMatchSnapshot();\n    });\n\n    it('renders correctly with search in progress', () => {\n        const moduleProps: IStoreSelectorProps<{}> = buildMockModuleProps({}, {}) as IStoreSelectorProps<{}>;\n        // @ts-ignore partial mock\n        const mockProps: IStoreSelectorViewProps = {\n            ...moduleProps,\n\n            state: {\n                isSearchInProgress: true,\n                searchTerm: '',\n                isSeeAllStoreValue: false\n            },\n\n            ModuleProps: { moduleProps, className: 'ms-store-selector__modal' },\n            BodyContainerProps: { className: 'ms-store-selector__modal-body' },\n            FooterContainerProps: { className: 'ms-store-selector__modal-footer' },\n            HeaderContainerProps: { className: 'ms-store-selector__modal-header' },\n\n            // Components\n            locationsMessage: 'Locations message',\n            search: 'Search',\n            spinner: 'Spinner',\n            locationsList: 'Locations list',\n            noLocationsMessage: 'No locations',\n            terms: 'Terms',\n            headerText: 'Header',\n\n            callbacks: {\n                searchTermChanged: jest.fn(),\n                closeDialog: jest.fn(),\n                performSearch: jest.fn(),\n                selectedLocation: jest.fn(),\n                getAndUpdateUserLocation: jest.fn(),\n                attachMapAutoSuggest: jest.fn(),\n                onSuggestionSelected: jest.fn(),\n                setPreferredStore: jest.fn(),\n                setSelectedStore: jest.fn(),\n                setOrgUnitStoreInformation: jest.fn(),\n                removePreferredStore: jest.fn()\n            }\n        };\n        const component = render(<StoreSelectorView {...mockProps} />);\n        expect(component).toMatchSnapshot();\n    });\n});\n"]}