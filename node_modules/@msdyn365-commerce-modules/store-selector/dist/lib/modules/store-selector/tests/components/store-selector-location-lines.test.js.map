{"version":3,"file":"store-selector-location-lines.test.js","sourceRoot":"./src/","sources":["modules/store-selector/tests/components/store-selector-location-lines.test.tsx"],"names":[],"mappings":"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","sourcesContent":["import { IFullOrgUnitAvailability } from '@msdyn365-commerce-modules/retail-actions';\nimport { shallow } from 'enzyme';\nimport * as React from 'react';\nimport { IStoreSelectorLocationLinesProps, StoreSelectorLocationLines } from '../../components';\nimport { IStoreSelectorResources } from '../../store-selector.props.autogenerated';\n\nconst mockResources: IStoreSelectorResources = {\n    emptyLocationsText: 'No Nearby Locations',\n    selectStoreText: 'Pick Up Here',\n    selectStoreAriaFormatText: 'Pick Up At {StoreName}',\n    timeText: 'Store Hours',\n    captionText: 'We’re expanding our pick-up-in-store service to more Microsoft Store locations every day.',\n    milesShortText: 'mi',\n    kilometersShortText: 'km',\n    outOfStockText: 'Out of stock',\n    inStockText: 'In Stock',\n    selectedStoreLocationText: 'Selected store location',\n    contactText: 'Contact',\n    availabilityText: 'Availability',\n    productDimensionTypeColor: 'Color',\n    productDimensionTypeConfiguration: 'Configuration',\n    productDimensionTypeSize: 'Size',\n    productDimensionTypeStyle: 'Style',\n    storeHoursClosedText: 'Closed',\n    storeHoursMondayText: 'Mon',\n    storeHoursTuesdayText: 'Tue',\n    storeHoursWednesdayText: 'Wed',\n    storeHoursThursdayText: 'Thur',\n    storeHoursFridayText: 'Fri',\n    storeHoursSaturdayText: 'Sat',\n    storeHoursSundayText: 'Sun',\n    storeHoursMondayFullText: 'Monday',\n    storeHoursTuesdayFullText: 'Tuesday',\n    storeHoursWednesdayFullText: 'Wednesday',\n    storeHoursThursdayFullText: 'Thursday',\n    storeHoursFridayFullText: 'Friday',\n    storeHoursSaturdayFullText: 'Saturday',\n    storeHoursSundayFullText: 'Sunday',\n    storeAddressAriaLabel: 'Store address',\n    storePhoneAriaLabel: 'Store phone',\n    storeCountMessage: 'We found {count} stores within {radius} miles of you.',\n    storeAllCountMessage: 'We found {count} stores.',\n    storeCountMessageInKm: 'We found {count} stores within {radius} kilometers of you.',\n    searchPlaceholderText: 'Search',\n    searchInputAriaLabel: 'Search input',\n    searchButtonAriaLabel: 'Search',\n    storeSelectorHeaderText: 'Pick a store',\n    storeLocatorHeaderText: 'Store Locator',\n    seeAllStoresText: 'See all stores',\n    setAsPreferredStoreText: 'Set as preferred store',\n    setAsPreferredStoreTextAriaLabel: 'Set as preferred store',\n    preferredStoreText: 'Preferred store',\n    preferredStoreAriaLabel: 'Set as preferred store',\n    viewListText: 'View List',\n    viewMapText: 'View Map'\n};\n\nconst mockProps: IStoreSelectorLocationLinesProps = {\n    resources: mockResources,\n    outOfStockThreshold: 10,\n    enableOutOfStockCheck: true,\n    preferredStoreLocationId: 'SEATTLE',\n    onLocationSelected: jest.fn(),\n    onClick: jest.fn(),\n    onSetAsPreferredStore: jest.fn(),\n    onRemovePreferredStore: jest.fn()\n};\n\nconst mockLocationList: IFullOrgUnitAvailability[] = [\n    {\n        OrgUnitAvailability: {\n            OrgUnitLocation: {\n                OrgUnitName: 'Seattle',\n                OrgUnitNumber: '1'\n            },\n            ItemAvailabilities: [\n                {\n                    AvailableQuantity: 1\n                }\n            ]\n        },\n        StoreHours: undefined\n    },\n    {\n        OrgUnitAvailability: {\n            OrgUnitLocation: {\n                OrgUnitName: 'Bellevue',\n                OrgUnitNumber: '2'\n            },\n            ItemAvailabilities: [\n                {\n                    AvailableQuantity: 10\n                }\n            ]\n        },\n        StoreHours: undefined\n    },\n    {\n        OrgUnitAvailability: {\n            OrgUnitLocation: {\n                OrgUnitName: 'Redmond',\n                OrgUnitNumber: '3'\n            },\n            ItemAvailabilities: [\n                {\n                }\n            ]\n        },\n        StoreHours: undefined\n    },\n    {\n        OrgUnitAvailability: {\n            OrgUnitLocation: {\n                OrgUnitName: 'Tacoma',\n                OrgUnitNumber: '4'\n            },\n            ItemAvailabilities: [\n            ]\n        },\n        StoreHours: undefined\n    },\n    {\n        OrgUnitAvailability: {},\n        StoreHours: undefined\n    }\n];\n\ndescribe('Store selector location lines  tests', () => {\n    it('Renders correctly when locations list is undefined', () => {\n        const component = shallow(\n            <StoreSelectorLocationLines\n                {...mockProps}\n                locations={undefined}\n            />\n        );\n\n        expect(component).toMatchSnapshot();\n    });\n\n    it('Renders correctly when locations list is empty', () => {\n        const component = shallow(\n            <StoreSelectorLocationLines\n                {...mockProps}\n                locations={[]}\n            />\n        );\n\n        expect(component).toMatchSnapshot();\n    });\n\n    it('Renders correctly when locations list is undefined and preferred store is selected', () => {\n        const component = shallow(\n            <StoreSelectorLocationLines\n                {...mockProps}\n                locations={undefined}\n                isPreferredStoreEnabled={true}\n                preferredStoreLocationId={'Test'}\n            />\n        );\n\n        expect(component).toMatchSnapshot();\n    });\n\n    it('Renders correctly when locations list is empty and preferred store is selected', () => {\n        const component = shallow(\n            <StoreSelectorLocationLines\n                {...mockProps}\n                locations={[]}\n                isPreferredStoreEnabled={true}\n                preferredStoreLocationId={'Test'}\n            />\n        );\n\n        expect(component).toMatchSnapshot();\n    });\n\n    it('Renders correctly when locations list is undefined and preferred store is not selected', () => {\n        const component = shallow(\n            <StoreSelectorLocationLines\n                {...mockProps}\n                locations={undefined}\n                isPreferredStoreEnabled={true}\n                preferredStoreLocationId={null}\n            />\n        );\n\n        expect(component).toMatchSnapshot();\n    });\n\n    it('Renders correctly when locations list is empty and preferred store is not selected', () => {\n        const component = shallow(\n            <StoreSelectorLocationLines\n                {...mockProps}\n                locations={[]}\n                isPreferredStoreEnabled={true}\n                preferredStoreLocationId={null}\n            />\n        );\n\n        expect(component).toMatchSnapshot();\n    });\n\n    it('Renders correctly when locations list is undefined and preferred store is disabled', () => {\n        const component = shallow(\n            <StoreSelectorLocationLines\n                {...mockProps}\n                locations={undefined}\n                isPreferredStoreEnabled={false}\n            />\n        );\n\n        expect(component).toMatchSnapshot();\n    });\n\n    it('Renders correctly when locations list is empty and preferred store is not selected', () => {\n        const component = shallow(\n            <StoreSelectorLocationLines\n                {...mockProps}\n                locations={[]}\n                isPreferredStoreEnabled={false}\n            />\n        );\n\n        expect(component).toMatchSnapshot();\n    });\n\n    it('Renders correctly when locations has locations and no selected location specified', () => {\n        const component = shallow(\n            <StoreSelectorLocationLines\n                {...mockProps}\n                locations={mockLocationList}\n            />\n        );\n\n        expect(component).toMatchSnapshot();\n    });\n\n    it('Renders correctly when locations has locations and selected location specified', () => {\n        const component = shallow(\n            <StoreSelectorLocationLines\n                {...mockProps}\n                enableOutOfStockCheck={false}\n                locations={mockLocationList}\n                alreadySelectedLocation={{ OrgUnitName: 'Bellevue', OrgUnitNumber: '2' }}\n            />\n        );\n\n        expect(component).toMatchSnapshot();\n    });\n\n    it('Renders correctly when locations has locations and no preferred location specified', () => {\n        const component = shallow(\n            <StoreSelectorLocationLines\n                {...mockProps}\n                preferredStoreLocationId={null}\n                locations={mockLocationList}\n            />\n        );\n\n        expect(component).toMatchSnapshot();\n    });\n\n    it('Renders correctly when locations has locations and preferred location is disabled', () => {\n        const component = shallow(\n            <StoreSelectorLocationLines\n                {...mockProps}\n                isPreferredStoreEnabled={false}\n                locations={mockLocationList}\n            />\n        );\n\n        expect(component).toMatchSnapshot();\n    });\n\n    it('Renders correctly when locations has locations and preferred location setting is undefined', () => {\n        const component = shallow(\n            <StoreSelectorLocationLines\n                {...mockProps}\n                isPreferredStoreEnabled={undefined}\n                locations={mockLocationList}\n            />\n        );\n\n        expect(component).toMatchSnapshot();\n    });\n\n    it('Renders correctly when locations has locations and preferred location is disabled and preferred location specified', () => {\n        const component = shallow(\n            <StoreSelectorLocationLines\n                {...mockProps}\n                isPreferredStoreEnabled={false}\n                preferredStoreLocationId={mockLocationList[0].OrgUnitAvailability!.OrgUnitLocation!.OrgUnitName!}\n                locations={mockLocationList}\n            />\n        );\n\n        expect(component).toMatchSnapshot();\n    });\n\n    it('Renders correctly when locations has locations and preferred location is undefined', () => {\n        const component = shallow(\n            <StoreSelectorLocationLines\n                {...mockProps}\n                isPreferredStoreEnabled={undefined}\n                preferredStoreLocationId={mockLocationList[2].OrgUnitAvailability!.OrgUnitLocation!.OrgUnitName!}\n                locations={mockLocationList}\n            />\n        );\n\n        expect(component).toMatchSnapshot();\n    });\n\n    it('Renders correctly when locations has locations and preferred location is not in the list', () => {\n        const component = shallow(\n            <StoreSelectorLocationLines\n                {...mockProps}\n                isPreferredStoreEnabled={true}\n                preferredStoreLocationId={'SomeOtherStoreId'}\n                locations={mockLocationList}\n            />\n        );\n\n        expect(component).toMatchSnapshot();\n    });\n\n    it('Renders correctly when locations has locations and preferred location is the first one', () => {\n        const component = shallow(\n            <StoreSelectorLocationLines\n                {...mockProps}\n                isPreferredStoreEnabled={true}\n                preferredStoreLocationId={mockLocationList[0].OrgUnitAvailability!.OrgUnitLocation!.OrgUnitName!}\n                locations={mockLocationList}\n            />\n        );\n\n        expect(component).toMatchSnapshot();\n    });\n\n    it('Renders correctly when locations has locations and preferred location is the third one', () => {\n        const component = shallow(\n            <StoreSelectorLocationLines\n                {...mockProps}\n                isPreferredStoreEnabled={true}\n                preferredStoreLocationId={mockLocationList[2].OrgUnitAvailability!.OrgUnitLocation!.OrgUnitName!}\n                locations={mockLocationList}\n            />\n        );\n\n        expect(component).toMatchSnapshot();\n    });\n\n    it('Renders correctly when locations has locations and preferred location is the last one', () => {\n        const component = shallow(\n            <StoreSelectorLocationLines\n                {...mockProps}\n                isPreferredStoreEnabled={true}\n                preferredStoreLocationId={mockLocationList[2].OrgUnitAvailability!.OrgUnitLocation!.OrgUnitName!}\n                locations={[mockLocationList[0], mockLocationList[1], mockLocationList[2]]}\n            />\n        );\n\n        expect(component).toMatchSnapshot();\n    });\n\n    it('Renders correctly when locations has only preferred location', () => {\n        const component = shallow(\n            <StoreSelectorLocationLines\n                {...mockProps}\n                isPreferredStoreEnabled={true}\n                preferredStoreLocationId={mockLocationList[0].OrgUnitAvailability!.OrgUnitLocation!.OrgUnitName!}\n                locations={[mockLocationList[0]]}\n            />\n        );\n\n        expect(component).toMatchSnapshot();\n    });\n\n    it('Renders correctly when locations has only non preferred location', () => {\n        const component = shallow(\n            <StoreSelectorLocationLines\n                {...mockProps}\n                isPreferredStoreEnabled={true}\n                preferredStoreLocationId={mockLocationList[0].OrgUnitAvailability!.OrgUnitLocation!.OrgUnitName!}\n                locations={[mockLocationList[1]]}\n            />\n        );\n\n        expect(component).toMatchSnapshot();\n    });\n\n    it('Renders correctly when all the locations are preferred', () => {\n        const component = shallow(\n            <StoreSelectorLocationLines\n                {...mockProps}\n                isPreferredStoreEnabled={true}\n                preferredStoreLocationId={mockLocationList[0].OrgUnitAvailability!.OrgUnitLocation!.OrgUnitName!}\n                locations={[mockLocationList[0], mockLocationList[0], mockLocationList[0], mockLocationList[0]]}\n            />\n        );\n\n        expect(component).toMatchSnapshot();\n    });\n\n    it('Renders correctly when locations has locations and preferred location is enabled but no locations specified', () => {\n        const component = shallow(\n            <StoreSelectorLocationLines\n                {...mockProps}\n                isPreferredStoreEnabled={true}\n                preferredStoreLocationId={'Test'}\n                locations={[]}\n            />\n        );\n\n        expect(component).toMatchSnapshot();\n    });\n\n    it('Renders correctly when locations has locations and preferred location is enabled but locations is undefined', () => {\n        const component = shallow(\n            <StoreSelectorLocationLines\n                {...mockProps}\n                isPreferredStoreEnabled={true}\n                preferredStoreLocationId={'Test'}\n                locations={undefined}\n            />\n        );\n\n        expect(component).toMatchSnapshot();\n    });\n\n    it('Renders correctly when locations has locations and preferred location is null', () => {\n        const component = shallow(\n            <StoreSelectorLocationLines\n                {...mockProps}\n                isPreferredStoreEnabled={true}\n                preferredStoreLocationId={null}\n                locations={mockLocationList}\n            />\n        );\n\n        expect(component).toMatchSnapshot();\n    });\n\n    it('Renders correctly when locations has locations and preferred location is empty string', () => {\n        const component = shallow(\n            <StoreSelectorLocationLines\n                {...mockProps}\n                isPreferredStoreEnabled={true}\n                preferredStoreLocationId={''}\n                locations={mockLocationList}\n            />\n        );\n\n        expect(component).toMatchSnapshot();\n    });\n\n    it('Renders correctly when locations has locations and selected location specified', () => {\n        const component = shallow(\n            <StoreSelectorLocationLines\n                {...mockProps}\n                enableOutOfStockCheck={false}\n                locations={mockLocationList}\n                alreadySelectedLocation={{ OrgUnitName: 'Bellevue', OrgUnitNumber: '2' }}\n            />\n        );\n\n        expect(component).toMatchSnapshot();\n    });\n});"]}