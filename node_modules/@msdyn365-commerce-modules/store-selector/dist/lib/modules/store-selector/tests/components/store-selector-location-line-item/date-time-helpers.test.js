import { buildStoreHours, secondsToTime } from '../../../components/store-selector-location-line-item/date-time-helpers';
const mockResources = {
    contactInfoHeader: 'Contact',
    storeHoursHeader: 'Hours',
    availabilityInfoHeader: 'Availability',
    closedText: 'Closed',
    outOfStock: 'Out of stock',
    inStock: 'In stock',
    currentLocation: 'Current location',
    selectLocation: 'Pick up here',
    selectLocationAriaLabelFormat: 'Pick up at {StoreName}',
    setAsPreferredStoreText: 'Set as preferred store',
    setAsPreferredStoreTextAriaLabel: 'Set as preferred store',
    preferredStoreText: 'Preferred store',
    preferredStoreAriaLabel: 'Set as preferred store',
    days: {
        monday: 'Mon',
        tuesday: 'Tue',
        wednesday: 'Wed',
        thursday: 'Thur',
        friday: 'Fri',
        saturday: 'Sat',
        sunday: 'Sun',
        mondayFull: 'Monday',
        tuesdayFull: 'Tuesday',
        wednesdayFull: 'Wednesday',
        thursdayFull: 'Thursday',
        fridayFull: 'Friday',
        saturdayFull: 'Saturday',
        sundayFull: 'Sunday'
    }
};
describe('secondsToTime tests', () => {
    it('Returns undefined if input is undefined', () => {
        const result = secondsToTime(undefined);
        expect(result).toBeUndefined();
    });
    it('Handles times before 1:00 am', () => {
        const result = secondsToTime(120);
        expect(result).toBe('12:02 am');
    });
    it('Handles times before noon', () => {
        const result = secondsToTime(15300);
        expect(result).toBe('4:15 am');
    });
    it('Handles times after noon', () => {
        const result = secondsToTime(52500);
        expect(result).toBe('2:35 pm');
    });
});
describe('buildStoreHours tests', () => {
    it('open same time all week', () => {
        const result = buildStoreHours({
            MondayOpenTime: 32400,
            MondayCloseTime: 61200,
            IsClosedOnMonday: false,
            TuesdayOpenTime: 32400,
            TuesdayCloseTime: 61200,
            IsClosedOnTuesday: false,
            WednesdayOpenTime: 32400,
            WednesdayCloseTime: 61200,
            IsClosedOnWednesday: false,
            ThursdayOpenTime: 32400,
            ThursdayCloseTime: 61200,
            IsClosedOnThursday: false,
            FridayOpenTime: 32400,
            FridayCloseTime: 61200,
            IsClosedOnFriday: false,
            SaturdayOpenTime: 32400,
            SaturdayCloseTime: 61200,
            IsClosedOnSaturday: false,
            SundayOpenTime: 32400,
            SundayCloseTime: 61200,
            IsClosedOnSunday: false,
        }, mockResources);
        expect(result).toEqual(expect.arrayContaining([
            expect.objectContaining({
                startDayShort: 'Mon',
                endDayShort: 'Sun',
                timeRange: '9:00 am–5:00 pm'
            })
        ]));
    });
    it('merge closed lines', () => {
        const result = buildStoreHours({
            MondayOpenTime: 32400,
            MondayCloseTime: 61200,
            IsClosedOnMonday: false,
            TuesdayOpenTime: 32400,
            TuesdayCloseTime: 61200,
            IsClosedOnTuesday: false,
            WednesdayOpenTime: 32400,
            WednesdayCloseTime: 61200,
            IsClosedOnWednesday: false,
            ThursdayOpenTime: 32400,
            ThursdayCloseTime: 61200,
            IsClosedOnThursday: false,
            FridayOpenTime: 32400,
            FridayCloseTime: 61200,
            IsClosedOnFriday: false,
            SaturdayOpenTime: 32400,
            SaturdayCloseTime: 61200,
            IsClosedOnSaturday: true,
            SundayOpenTime: 32400,
            SundayCloseTime: 61200,
            IsClosedOnSunday: true,
        }, mockResources);
        expect(result).toEqual(expect.arrayContaining([
            expect.objectContaining({
                startDayShort: 'Mon',
                endDayShort: 'Fri',
                timeRange: '9:00 am–5:00 pm'
            }),
            expect.objectContaining({
                startDayShort: 'Sat',
                endDayShort: 'Sun',
                timeRange: 'Closed'
            })
        ]));
    });
    it('open no repeats all week', () => {
        const result = buildStoreHours({
            MondayOpenTime: 32400,
            MondayCloseTime: 61200,
            IsClosedOnMonday: false,
            TuesdayOpenTime: 36000,
            TuesdayCloseTime: 61200,
            IsClosedOnTuesday: false,
            WednesdayOpenTime: 32400,
            WednesdayCloseTime: 61200,
            IsClosedOnWednesday: false,
            ThursdayOpenTime: 36000,
            ThursdayCloseTime: 61200,
            IsClosedOnThursday: false,
            FridayOpenTime: 32400,
            FridayCloseTime: 61200,
            IsClosedOnFriday: false,
            SaturdayOpenTime: 36000,
            SaturdayCloseTime: 61200,
            IsClosedOnSaturday: false,
            SundayOpenTime: undefined,
            SundayCloseTime: undefined,
            IsClosedOnSunday: true,
        }, mockResources);
        expect(result).toEqual(expect.arrayContaining([
            expect.objectContaining({
                startDayShort: 'Mon',
                endDayShort: undefined,
                timeRange: '9:00 am–5:00 pm'
            }),
            expect.objectContaining({
                startDayShort: 'Tue',
                endDayShort: undefined,
                timeRange: '10:00 am–5:00 pm'
            }),
            expect.objectContaining({
                startDayShort: 'Wed',
                endDayShort: undefined,
                timeRange: '9:00 am–5:00 pm'
            }),
            expect.objectContaining({
                startDayShort: 'Thur',
                endDayShort: undefined,
                timeRange: '10:00 am–5:00 pm'
            }),
            expect.objectContaining({
                startDayShort: 'Fri',
                endDayShort: undefined,
                timeRange: '9:00 am–5:00 pm'
            }),
            expect.objectContaining({
                startDayShort: 'Sat',
                endDayShort: undefined,
                timeRange: '10:00 am–5:00 pm'
            }),
            expect.objectContaining({
                startDayShort: 'Sun',
                endDayShort: undefined,
                timeRange: 'Closed'
            }),
        ]));
    });
});
//# sourceMappingURL=date-time-helpers.test.js.map