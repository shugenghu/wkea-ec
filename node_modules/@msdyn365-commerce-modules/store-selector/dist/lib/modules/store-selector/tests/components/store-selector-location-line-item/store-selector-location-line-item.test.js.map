{"version":3,"file":"store-selector-location-line-item.test.js","sourceRoot":"./src/","sources":["modules/store-selector/tests/components/store-selector-location-line-item/store-selector-location-line-item.test.tsx"],"names":[],"mappings":"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","sourcesContent":["import { mount, render, shallow } from 'enzyme';\n\nimport { OrgUnitLocation } from '@msdyn365-commerce/retail-proxy';\nimport { IStoreSelectorLocationLineItemProps, IStoreSelectorLocationLineItemResources, StoreSelectorLocationLineItemComponent } from '../../../components/store-selector-location-line-item';\n\nconst mockResources: IStoreSelectorLocationLineItemResources = {\n    contactInfoHeader: 'Contact',\n    storeHoursHeader: 'Hours',\n    availabilityInfoHeader: 'Availability',\n    closedText: 'Closed',\n    outOfStock: 'Out of stock',\n    inStock: 'In stock',\n\n    currentLocation: 'Current location',\n    selectLocation: 'Pick up here',\n    selectLocationAriaLabelFormat: 'Pick up at {StoreName}',\n    setAsPreferredStoreText: 'Set as preferred store',\n    setAsPreferredStoreTextAriaLabel: 'Set as preferred store',\n    preferredStoreText: 'Preferred store',\n    preferredStoreAriaLabel: 'Set as preferred store',\n\n    days: {\n        monday: 'Mon',\n        tuesday: 'Tue',\n        wednesday: 'Wed',\n        thursday: 'Thur',\n        friday: 'Fri',\n        saturday: 'Sat',\n        sunday: 'Sun',\n        mondayFull: 'Monday',\n        tuesdayFull: 'Tuesday',\n        wednesdayFull: 'Wednesday',\n        thursdayFull: 'Thursday',\n        fridayFull: 'Friday',\n        saturdayFull: 'Saturday',\n        sundayFull: 'Sunday'\n    }\n};\n\n// @ts-ignore partial mock\nconst baseMockProps: IStoreSelectorLocationLineItemProps = {\n    hideStockStatus: false,\n    isInStock: true,\n    isCurrentLocation: false,\n    resources: mockResources,\n    preferredStoreLocationId: null,\n    preferredDistanceUnit: 'mi',\n\n    handlers: {\n        onSelected: jest.fn(),\n        onSetAsPreferredStore: jest.fn(),\n        onRemovePreferredStore: jest.fn()\n    }\n};\n\nconst mockLocation: OrgUnitLocation = {\n    OrgUnitNumber: '123',\n    OrgUnitName: 'Microsoft',\n    Address: '1 Microsoft Way',\n    Distance: 5,\n    Contacts: [\n        {\n            ContactTypeValue: 1,\n            IsPrivate: false,\n            IsPrimary: true,\n            Locator: '555-867-5309'\n        }\n    ]\n} as OrgUnitLocation;\n\ndescribe('Store Selector Location Line Item', () => {\n    it('renders correctly with empty location', () => {\n        const line = render(StoreSelectorLocationLineItemComponent({ ...baseMockProps, location: {} }));\n        expect(line).toMatchSnapshot();\n    });\n\n    it('renders correctly with location information', () => {\n        const line = render(StoreSelectorLocationLineItemComponent({ ...baseMockProps, location: mockLocation }));\n        expect(line).toMatchSnapshot();\n    });\n\n    it('onClick fires callback', () => {\n        const line = mount(StoreSelectorLocationLineItemComponent({ ...baseMockProps, location: mockLocation }));\n\n        const button = line.find('.ms-store-select__location-line-select-store').first();\n\n        button.simulate('click');\n\n        expect(baseMockProps.handlers.onSelected).toBeCalled();\n    });\n\n    it('renders correctly with regular store hours', () => {\n        const line = render(StoreSelectorLocationLineItemComponent({\n            ...baseMockProps, location: mockLocation, storeHours: {\n                RegularStoreHours: {\n                    IsClosedOnMonday: true,\n                    IsClosedOnTuesday: true,\n                    IsClosedOnWednesday: true,\n                    IsClosedOnThursday: true,\n                    IsClosedOnFriday: true,\n                    IsClosedOnSaturday: true,\n                    SundayOpenTime: 32400,\n                    SundayCloseTime: 61200,\n                    IsClosedOnSunday: false,\n                }\n            }\n        }));\n        expect(line).toMatchSnapshot();\n    });\n\n    it('renders correctly when selected location', () => {\n        const line = render(StoreSelectorLocationLineItemComponent({ ...baseMockProps, location: mockLocation, isCurrentLocation: true }));\n        expect(line).toMatchSnapshot();\n    });\n\n    it('renders correctly when hide stock status', () => {\n        const line = render(StoreSelectorLocationLineItemComponent({ ...baseMockProps, location: mockLocation, hideStockStatus: true }));\n        expect(line).toMatchSnapshot();\n    });\n\n    it('renders correctly when out of stock', () => {\n        const line = render(StoreSelectorLocationLineItemComponent({ ...baseMockProps, location: mockLocation, isInStock: false }));\n        expect(line).toMatchSnapshot();\n    });\n\n    it('renders correctly when distance < one mile', () => {\n        const line = render(StoreSelectorLocationLineItemComponent({ ...baseMockProps, location: { ...mockLocation, Distance: 0.5 }, isInStock: false }));\n        expect(line).toMatchSnapshot();\n    });\n\n    it('renders correctly when no phone specified', () => {\n        const line = render(StoreSelectorLocationLineItemComponent({ ...baseMockProps, location: { ...mockLocation, Contacts: [] }, isInStock: false }));\n        expect(line).toMatchSnapshot();\n    });\n\n    it('renders correctly when no primary phone specified', () => {\n        const line = render(StoreSelectorLocationLineItemComponent({\n            ...baseMockProps, location: {\n                ...mockLocation, Contacts: [{\n                    ChannelId: 0,\n                    ContactTypeValue: 1,\n                    IsPrivate: false,\n                    IsPrimary: false,\n                    Locator: '555-867-5309'\n                }]\n            }, isInStock: false\n        }));\n        expect(line).toMatchSnapshot();\n    });\n\n    it('renders correctly when preferred store is enabled', () => {\n        const line = render(StoreSelectorLocationLineItemComponent({ ...baseMockProps, location: mockLocation, isPreferredStoreEnabled: true }));\n        expect(line).toMatchSnapshot();\n    });\n\n    it('call onSetAsPreferredStore when set preferred store button clicked', () => {\n        const component = shallow(StoreSelectorLocationLineItemComponent({ ...baseMockProps, location: mockLocation, isPreferredStoreEnabled: true }));\n\n        const input = component.find('.ms-store-select__location-line-item-set-as-preferred-store').at(0);\n\n        input.simulate('click');\n\n        expect(baseMockProps.handlers.onSetAsPreferredStore).toBeCalledWith('123');\n\n    });\n\n    it('renders correctly when preferred store is enabled and preferred store is set', () => {\n        const line = render(StoreSelectorLocationLineItemComponent({ ...baseMockProps, location: mockLocation, isPreferredStoreEnabled: true, preferredStoreLocationId: '123' }));\n        expect(line).toMatchSnapshot();\n    });\n\n    it('call onRemovePreferredStore when remove preferred store button clicked', () => {\n        const component = shallow(StoreSelectorLocationLineItemComponent({ ...baseMockProps, location: mockLocation, isPreferredStoreEnabled: true, preferredStoreLocationId: '123' }));\n\n        const input = component.find('.ms-store-select__location-line-item-preferred-store').at(0);\n\n        input.simulate('click');\n\n        expect(baseMockProps.handlers.onRemovePreferredStore).toBeCalled();\n\n    });\n\n});"]}