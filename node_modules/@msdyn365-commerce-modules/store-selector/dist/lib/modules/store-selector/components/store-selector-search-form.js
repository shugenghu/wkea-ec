import { getPayloadObject, getTelemetryAttributes, TelemetryConstant } from '@msdyn365-commerce-modules/utilities';
import * as React from 'react';
export class StoreSelectorSearchForm extends React.PureComponent {
    constructor(props) {
        super(props);
        this.searchBoxRef = React.createRef();
        this._searchTextChanged = async (e) => {
            const inputValue = e.target.value;
            await this.props.searchTermChanged(inputValue);
        };
        this._onSubmit = async (e) => {
            e.preventDefault();
            this.searchBoxRef.current?.blur();
            await this.props.performSearch(this.props.value);
        };
        this.state = { value: '' };
        const payLoad = getPayloadObject('click', props.telemetryContent, TelemetryConstant.SearchStore);
        this.storeSearchAttributes = getTelemetryAttributes(props.telemetryContent, payLoad);
        payLoad.contentAction.etext = TelemetryConstant.ShowAllStore;
        this.showAllStoreAttributes = getTelemetryAttributes(props.telemetryContent, payLoad);
        payLoad.contentAction.etext = TelemetryConstant.ToggleMapView;
        this.toggleMapViewAttributes = getTelemetryAttributes(props.telemetryContent, payLoad);
    }
    render() {
        const { resources: { searchButtonAriaLabel, searchPlaceholderText, seeAllStoresText, viewListText, viewMapText }, value, isMapDisabled, showAllStores, displayList, locatorView, onShowAllStores, onToggleListMapViewState } = this.props;
        const toggleButtonText = displayList ? viewMapText : viewListText;
        return (React.createElement("div", { className: 'ms-store-select__search' },
            React.createElement("form", { className: 'ms-store-select__search-form', "aria-label": searchButtonAriaLabel, name: 'storeSelectorSearchForm', role: 'form', autoComplete: 'off', onSubmit: this._onSubmit, id: 'ms-store-select__search-box-container' },
                React.createElement("input", { type: 'text', "aria-label": this.props.resources.searchInputAriaLabel, className: 'msc-form-control ms-store-select__search-input', placeholder: searchPlaceholderText, value: value, onChange: this._searchTextChanged, id: 'ms-store-select__search-box', ref: this.searchBoxRef, role: 'combobox', "aria-expanded": 'false', "aria-controls": 'as_containerSearch' }),
                React.createElement("button", Object.assign({ className: `ms-store-select__search-button${isMapDisabled ? ` search-btn-disabled` : ``}`, "aria-label": searchButtonAriaLabel, color: 'primary' }, this.storeSearchAttributes))),
            showAllStores && React.createElement("div", Object.assign({ className: 'ms-store-select__search-see-all-stores', role: 'none', onClick: onShowAllStores }, this.showAllStoreAttributes), seeAllStoresText),
            locatorView && React.createElement("button", Object.assign({ className: 'ms-store-select__toggle-view', onClick: onToggleListMapViewState }, this.toggleMapViewAttributes), toggleButtonText)));
    }
}
//# sourceMappingURL=store-selector-search-form.js.map