{"version":3,"file":"store-selector-search-form.js","sourceRoot":"./src/","sources":["modules/store-selector/components/store-selector-search-form.tsx"],"names":[],"mappings":"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","sourcesContent":["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { getPayloadObject, getTelemetryAttributes, IPayLoad, ITelemetryContent, TelemetryConstant } from '@msdyn365-commerce-modules/utilities';\nimport * as Msdyn365 from '@msdyn365-commerce/core';\nimport * as React from 'react';\n\nexport interface IStoreSelectorSearchFormProps {\n    resources: {\n        searchInputAriaLabel: string;\n        searchButtonAriaLabel: string;\n        searchPlaceholderText: string;\n        seeAllStoresText: string;\n        viewListText: string;\n        viewMapText: string;\n    };\n\n    value: string;\n    isMapDisabled?: boolean;\n    showAllStores?: boolean;\n    displayList?: boolean;\n    locatorView?: boolean;\n    /** The telemetry content */\n    telemetryContent?: ITelemetryContent;\n    onShowAllStores(): void;\n    onToggleListMapViewState(): void;\n    performSearch(searchTerm: string): Promise<void>;\n    searchTermChanged(searchTerm: string): Promise<void>;\n}\n\n/**\n * Simple search form consisting of search text and a search button\n */\nexport class StoreSelectorSearchForm extends React.PureComponent<IStoreSelectorSearchFormProps> {\n    private searchBoxRef: React.RefObject<HTMLInputElement> = React.createRef<HTMLInputElement>();\n    private storeSearchAttributes: Msdyn365.IDictionary<string> | undefined;\n    private showAllStoreAttributes: Msdyn365.IDictionary<string> | undefined;\n    private toggleMapViewAttributes: Msdyn365.IDictionary<string> | undefined;\n\n    constructor(props: IStoreSelectorSearchFormProps) {\n        super(props);\n        this.state = { value: '' };\n        const payLoad: IPayLoad = getPayloadObject('click', props.telemetryContent!, TelemetryConstant.SearchStore);\n        this.storeSearchAttributes = getTelemetryAttributes(props.telemetryContent!, payLoad);\n        payLoad.contentAction.etext = TelemetryConstant.ShowAllStore;\n        this.showAllStoreAttributes = getTelemetryAttributes(props.telemetryContent!, payLoad);\n        payLoad.contentAction.etext = TelemetryConstant.ToggleMapView;\n        this.toggleMapViewAttributes = getTelemetryAttributes(props.telemetryContent!, payLoad);\n    }\n\n    public render(): JSX.Element {\n        const {\n            resources: { searchButtonAriaLabel, searchPlaceholderText, seeAllStoresText, viewListText, viewMapText },\n            value,\n            isMapDisabled,\n            showAllStores,\n            displayList,\n            locatorView,\n            onShowAllStores,\n            onToggleListMapViewState\n        } = this.props;\n\n        const toggleButtonText = displayList ? viewMapText : viewListText;\n\n        return (\n            <div className='ms-store-select__search'>\n                <form\n                    className='ms-store-select__search-form'\n                    aria-label={searchButtonAriaLabel}\n                    name='storeSelectorSearchForm'\n                    role='form'\n                    autoComplete='off'\n                    onSubmit={this._onSubmit}\n                    id='ms-store-select__search-box-container'\n                >\n                    <input\n                        type='text'\n                        aria-label={this.props.resources.searchInputAriaLabel}\n                        className='msc-form-control ms-store-select__search-input'\n                        placeholder={searchPlaceholderText}\n                        value={value}\n                        onChange={this._searchTextChanged}\n                        id='ms-store-select__search-box'\n                        ref={this.searchBoxRef}\n                        role='combobox'\n                        aria-expanded='false'\n                        aria-controls='as_containerSearch'\n                    />\n                    <button\n                        className={`ms-store-select__search-button${isMapDisabled ? ` search-btn-disabled` : ``}`}\n                        aria-label={searchButtonAriaLabel}\n                        color={'primary'}\n                        {...this.storeSearchAttributes}\n                    />\n                </form>\n                {showAllStores && <div className='ms-store-select__search-see-all-stores' role='none' onClick={onShowAllStores} {...this.showAllStoreAttributes}>{seeAllStoresText}</div>}\n                {locatorView && <button className='ms-store-select__toggle-view' onClick={onToggleListMapViewState} {...this.toggleMapViewAttributes} >{toggleButtonText}</button>}\n            </div>\n        );\n    }\n\n    private _searchTextChanged = async (e: React.ChangeEvent<HTMLInputElement>): Promise<void> => {\n        const inputValue: string = e.target.value;\n\n        await this.props.searchTermChanged(inputValue);\n    };\n\n    private _onSubmit = async (e: React.SyntheticEvent): Promise<void> => {\n        e.preventDefault(); // Prevents form submission\n        this.searchBoxRef.current?.blur();\n        await this.props.performSearch(this.props.value);\n    }\n}"]}