{"version":3,"file":"store-selector-location-line-item.components.js","sourceRoot":"./src/","sources":["modules/store-selector/components/store-selector-location-line-item/store-selector-location-line-item.components.tsx"],"names":[],"mappings":"AAKA,OAAO,KAAK,KAAK,MAAM,OAAO,CAAC;AAE/B,OAAO,EAAE,gBAAgB,EAAE,sBAAsB,EAA+B,iBAAiB,EAAE,MAAM,sCAAsC,CAAC;AAMhJ,OAAO,EAAE,eAAe,EAAqB,aAAa,EAAE,MAAM,qBAAqB,CAAC;AA+DxF,MAAM,6CAA6C,GAAG;IAClD,kBAAkB,CAAC,KAA0C;QACzD,KAAK,CAAC,QAAQ,CAAC,UAAU,CAAC,KAAK,CAAC,QAAQ,CAAC,CAAC;IAC9C,CAAC;IACD,qBAAqB,CAAC,KAA0C;QAC5D,KAAK,CAAC,QAAQ,CAAC,qBAAqB,CAAC,KAAK,CAAC,QAAQ,CAAC,aAAa,CAAC,CAAC;IACvE,CAAC;IACD,sBAAsB,CAAC,KAA0C;QAC7D,KAAK,CAAC,QAAQ,CAAC,sBAAsB,EAAE,CAAC;IAC5C,CAAC;CACJ,CAAC;AAEF,MAAM,gBAAgB,GAAG,CAAC,UAAkC,EAAE,QAAyB,EAAE,SAAkD,EAAsB,EAAE;IAE/J,IAAI,UAAU,IAAI,UAAU,CAAC,iBAAiB,EAAE;QAC5C,MAAM,cAAc,GAAwB,eAAe,CAAC,UAAU,CAAC,iBAAiB,EAAE,SAAS,CAAC,CAAC;QAErG,OAAO,CACH,6BAAK,SAAS,EAAC,4CAA4C,IACtD,cAAc,CAAC,GAAG,CAAC,WAAW,CAAC,EAAE,CAAC,CAC/B,6BAAK,SAAS,EAAC,sCAAsC;YAChD,WAAW,CAAC,WAAW,CAAC,CAAC,CAAC,CACvB,6BAAK,SAAS,EAAC,kCAAkC;gBAC7C,8BAAM,KAAK,EAAE,WAAW,CAAC,YAAY,IAAG,WAAW,CAAC,aAAa,CAAQ;;gBACzE,8BAAM,KAAK,EAAE,WAAW,CAAC,UAAU,IAAG,WAAW,CAAC,WAAW,CAAQ,CACnE,CACT,CAAC,CAAC,CAAC,CACI,6BAAK,SAAS,EAAC,kCAAkC;gBAC7C,8BAAM,KAAK,EAAE,WAAW,CAAC,YAAY,IAAG,WAAW,CAAC,aAAa,CAAQ,CACvE,CACT;YACL,6BAAK,SAAS,EAAC,mCAAmC,IAAE,WAAW,CAAC,SAAS,CAAO,CAC9E,CACT,CAAC,CACA,CACT,CAAC;KACL;SAAM;QAEH,MAAM,aAAa,GAAuB,aAAa,CAAC,QAAQ,CAAC,QAAQ,CAAC,CAAC;QAC3E,MAAM,WAAW,GAAuB,aAAa,CAAC,QAAQ,CAAC,MAAM,CAAC,CAAC;QAEvE,OAAO,CACH,6BAAK,SAAS,EAAC,sCAAsC;YAChD,aAAa;;YAAG,WAAW,CAC1B,CACT,CAAC;KACL;AACL,CAAC,CAAC;AAEF,MAAM,mBAAmB,GAAG,CAAC,QAA4B,EAAE,qBAA6B,EAAE,kBAA4B,EAAsB,EAAE;IAC1I,IAAI,QAAQ,KAAK,SAAS,IAAI,kBAAkB,EAAE;QAC9C,OAAO,SAAS,CAAC;KACpB;SAAM,IAAI,QAAQ,GAAG,CAAC,EAAE;QACrB,OAAO,OAAO,qBAAqB,GAAG,CAAC;KAC1C;SAAM;QACH,OAAO,IAAI,IAAI,CAAC,KAAK,CAAC,QAAQ,CAAC,IAAI,qBAAqB,GAAG,CAAC;KAC/D;AACL,CAAC,CAAC;AAEF,MAAM,kBAAkB,GAAG,CAAC,QAAsC,EAAsB,EAAE;IACtF,IAAI,CAAC,QAAQ,EAAE;QACX,OAAO,SAAS,CAAC;KACpB;IAED,MAAM,gBAAgB,GAAG,QAAQ,CAAC,MAAM,CAAC,OAAO,CAAC,EAAE,CAAC,OAAO,CAAC,gBAAgB,KAAK,CAAC,IAAI,CAAC,OAAO,CAAC,SAAS,CAAC,CAAC;IAE1G,IAAI,gBAAgB,IAAI,gBAAgB,CAAC,MAAM,GAAG,CAAC,EAAE;QACjD,MAAM,mBAAmB,GAAG,gBAAgB,CAAC,IAAI,CAAC,OAAO,CAAC,EAAE,CAAC,OAAO,CAAC,SAAS,CAAC,CAAC;QAEhF,IAAI,mBAAmB,EAAE;YACrB,OAAO,mBAAmB,CAAC,OAAO,CAAC;SACtC;QAED,OAAO,gBAAgB,CAAC,CAAC,CAAC,CAAC,OAAO,CAAC;KACtC;IAED,OAAO,SAAS,CAAC;AACrB,CAAC,CAAC;AAGF,MAAM,6BAA6B,GAAkD,CAAC,KAA0C,EAAE,EAAE;IAChI,MAAM,OAAO,GAAG,GAAG,EAAE,CAAC,6CAA6C,CAAC,kBAAkB,CAAC,KAAK,CAAC,CAAC;IAE9F,MAAM,EACF,eAAe,EACf,iBAAiB,EACjB,SAAS,EACT,QAAQ,EACR,SAAS,EACT,UAAU,EACV,gBAAgB,EAChB,gBAAgB,EAChB,KAAK,EACL,wBAAwB,EACxB,uBAAuB,EACvB,kBAAkB,EAClB,gBAAgB,EACnB,GAAG,KAAK,CAAC;IAEV,MAAM,SAAS,GAAuB,QAAQ,CAAC,WAAW,CAAC;IAC3D,MAAM,gBAAgB,GAAuB,mBAAmB,CAAC,QAAQ,CAAC,QAAQ,EAAE,KAAK,CAAC,qBAAqB,EAAE,kBAAkB,CAAC,CAAC;IACrI,MAAM,YAAY,GAAuB,QAAQ,CAAC,OAAO,CAAC;IAC1D,MAAM,WAAW,GAAuB,kBAAkB,CAAC,QAAQ,CAAC,QAAQ,CAAC,CAAC;IAE9E,MAAM,aAAa,GAAG,SAAS,CAAC,CAAC,CAAC,SAAS,CAAC,OAAO,CAAC,CAAC,CAAC,SAAS,CAAC,UAAU,CAAC;IAC3E,MAAM,UAAU,GAAG,gBAAgB,CAAC,CAAC,CAAC,gBAAgB,CAAC,CAAC,CAAC,SAAS,CAAC;IACnE,MAAM,SAAS,GAAuB,CAAC,eAAe,CAAC,CAAC,CAAC,CAAC,SAAS,CAAC,CAAC,CAAC,CAAC,UAAU,CAAC,CAAC,CAAC,UAAU,CAAC,CAAC,CAAC,aAAa,CAAC,CAAC;IAChH,MAAM,iBAAiB,GAAG,eAAe,IAAI,SAAS,CAAC;IACvD,MAAM,uBAAuB,GAAW,SAAS,CAAC,cAAc,CAAC;IACjE,MAAM,sBAAsB,GAAW,SAAS,CAAC,6BAA6B,CAAC,OAAO,CAAC,aAAa,EAAE,SAAS,IAAI,EAAE,CAAC,CAAC;IACvH,MAAM,gBAAgB,GAAG,wBAAwB,KAAK,QAAQ,CAAC,aAAa,CAAC;IAC7E,MAAM,OAAO,GAAa,gBAAgB,CAAC,OAAO,EAAE,gBAAiB,EAAE,iBAAiB,CAAC,aAAa,CAAC,CAAC;IACxG,MAAM,UAAU,GAAG,sBAAsB,CAAC,gBAAiB,EAAE,OAAO,CAAC,CAAC;IACtE,OAAO,CAAC,aAAa,CAAC,KAAK,GAAG,iBAAiB,CAAC,cAAc,CAAC;IAC/D,MAAM,kBAAkB,GAAG,sBAAsB,CAAC,gBAAiB,EAAE,OAAO,CAAC,CAAC;IAC9E,OAAO,CAAC,aAAa,CAAC,KAAK,GAAG,iBAAiB,CAAC,oBAAoB,CAAC;IACrE,MAAM,wBAAwB,GAAG,sBAAsB,CAAC,gBAAiB,EAAE,OAAO,CAAC,CAAC;IAEpF,MAAM,mBAAmB,GAAG,GAAG,EAAE,CAAC,6CAA6C,CAAC,qBAAqB,CAAC,KAAK,CAAC,CAAC;IAC7G,MAAM,oBAAoB,GAAG,GAAG,EAAE,CAAC,6CAA6C,CAAC,sBAAsB,CAAC,KAAK,CAAC,CAAC;IAE/G,OAAO,CACH,6BAAK,SAAS,EAAC,qCAAqC;QAChD,6BAAK,SAAS,EAAC,4CAA4C;YACtD,gBAAgB,IAAI,8BAAM,SAAS,EAAC,iDAAiD,IAAE,KAAK,CAAQ;YACrG,8BAAM,SAAS,EAAC,gDAAgD,IAAE,SAAS,CAAQ;YAClF,gBAAgB,CAAC,CAAC,CAAC,8BAAM,SAAS,EAAC,oDAAoD;;gBAAG,gBAAgB,CAAQ,CAAC,CAAC,CAAC,KAAK,CACzH;QACN,6BAAK,SAAS,EAAC,6CAA6C;YACxD,6BAAK,SAAS,EAAC,kDAAkD;gBAC7D,2BAAG,SAAS,EAAC,uCAAuC,IAAE,SAAS,CAAC,iBAAiB,CAAK;gBACrF,YAAY,IAAI,CACb,6BAAK,SAAS,EAAC,qDAAqD;oBAChE,8BAAM,SAAS,EAAC,+EAA+E,GAAG;oBAClG,8BAAM,SAAS,EAAC,kDAAkD,IAAE,YAAY,CAAQ,CACtF,CACT;gBACA,WAAW,IAAI,CACZ,6BAAK,SAAS,EAAC,mDAAmD;oBAC9D,8BAAM,SAAS,EAAC,8DAA8D,GAAG;oBACjF,8BAAM,SAAS,EAAC,gDAAgD,IAAE,WAAW,CAAQ,CACnF,CACT,CACC;YACN,6BAAK,SAAS,EAAC,iDAAiD;gBAC5D,2BAAG,SAAS,EAAC,uCAAuC,IAAE,SAAS,CAAC,gBAAgB,CAAK;gBACpF,gBAAgB,CAAC,UAAU,EAAE,QAAQ,EAAE,SAAS,CAAC,CAChD;YAEF,CAAC,gBAAgB;gBACjB,6BAAK,SAAS,EAAC,wDAAwD;oBACnE,2BAAG,SAAS,EAAC,uCAAuC,IAAE,SAAS,CAAC,sBAAsB,CAAK;oBAC1F,SAAS,IAAI,2BAAG,SAAS,EAAC,6CAA6C,IAAE,SAAS,CAAK;oBACvF,iBAAiB,CAAC,CAAC;wBAChB,CACI,2BAAG,SAAS,EAAC,iDAAiD,IAAE,SAAS,CAAC,eAAe,CAAK,CACjG,CAAC,CAAC,CAAC,iBAAiB,CAAC,CAAC;wBACnB,CACI,8CACI,SAAS,EAAC,6CAA6C,gBAC3C,sBAAsB,EAClC,OAAO,EAAE,OAAO,IACZ,UAAU,GAEb,uBAAuB,CACnB,CACZ,CAAC,CAAC,CAAC,CACA,KAAK,CACR,CAEP;YAGN,uBAAuB,CAAC,CAAC;gBACrB,gBAAgB,CAAC,CAAC;oBACd,8CAAQ,SAAS,EAAC,qDAAqD,gBAAa,SAAS,CAAC,uBAAuB,EAAE,OAAO,EAAE,oBAAoB,IAAM,wBAAwB,GAC7K,SAAS,CAAC,kBAAkB,CACxB;oBACT,CAAC,CAAC,8CAAQ,SAAS,EAAC,4DAA4D,gBAAa,SAAS,CAAC,gCAAgC,IAAM,kBAAkB,IAAE,OAAO,EAAE,mBAAmB,KACxL,SAAS,CAAC,uBAAuB,CAC7B;gBACb,CAAC,CAAC,IAAI,CAEZ,CACJ,CACT,CAAC;AACN,CAAC,CAAC;AAEF,MAAM,CAAC,MAAM,sCAAsC,GAAG,6BAA4F,CAAC","sourcesContent":["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport * as React from 'react';\n\nimport { getPayloadObject, getTelemetryAttributes, IPayLoad, ITelemetryContent, TelemetryConstant } from '@msdyn365-commerce-modules/utilities';\nimport {\n    OrgUnitContact,\n    OrgUnitLocation,\n    StoreHours\n} from '@msdyn365-commerce/retail-proxy';\nimport { buildStoreHours, IHoursDisplayInfo, secondsToTime } from './date-time-helpers';\n\nexport interface IStoreSelectorLocationLineItemResources {\n    contactInfoHeader: string;\n    storeHoursHeader: string;\n    availabilityInfoHeader: string;\n\n    closedText: string;\n\n    outOfStock: string;\n    inStock: string;\n\n    currentLocation: string;\n    selectLocation: string;\n    selectLocationAriaLabelFormat: string;\n    setAsPreferredStoreText: string;\n    setAsPreferredStoreTextAriaLabel: string;\n    preferredStoreText: string;\n    preferredStoreAriaLabel: string;\n\n    days: {\n        monday: string;\n        tuesday: string;\n        wednesday: string;\n        thursday: string;\n        friday: string;\n        saturday: string;\n        sunday: string;\n        mondayFull: string;\n        tuesdayFull: string;\n        wednesdayFull: string;\n        thursdayFull: string;\n        fridayFull: string;\n        saturdayFull: string;\n        sundayFull: string;\n    };\n}\n\nexport interface IStoreSelectorLocationLineItemProps {\n    location: OrgUnitLocation;\n    storeHours?: StoreHours;\n\n    hideStockStatus?: boolean;\n    isInStock?: boolean;\n    isCurrentLocation?: boolean;\n\n    resources: IStoreSelectorLocationLineItemResources;\n    stockStatusLabel?: string;\n    storeLocatorView?: boolean;\n    isPreferredStoreEnabled?: boolean;\n    index: string;\n    preferredStoreLocationId: string | null;\n    /** The telemetry content */\n    telemetryContent?: ITelemetryContent;\n    preferredDistanceUnit: string;\n    isLocationDisabled?: boolean;\n    handlers: {\n        onSelected(location: OrgUnitLocation): void;\n        onSetAsPreferredStore(locationId: string | undefined): void;\n        onRemovePreferredStore(): void;\n    };\n}\n\nconst StoreSelectorLocationLineItemComponentActions = {\n    onLocationSelected(props: IStoreSelectorLocationLineItemProps): void {\n        props.handlers.onSelected(props.location);\n    },\n    onSetAsPreferredStore(props: IStoreSelectorLocationLineItemProps): void {\n        props.handlers.onSetAsPreferredStore(props.location.OrgUnitNumber);\n    },\n    onRemovePreferredStore(props: IStoreSelectorLocationLineItemProps): void {\n        props.handlers.onRemovePreferredStore();\n    }\n};\n\nconst renderStoreHours = (storeHours: StoreHours | undefined, location: OrgUnitLocation, resources: IStoreSelectorLocationLineItemResources): JSX.Element | null => {\n    // First, use the store hours. This will allow listing day by day houts\n    if (storeHours && storeHours.RegularStoreHours) {\n        const storeHoursList: IHoursDisplayInfo[] = buildStoreHours(storeHours.RegularStoreHours, resources);\n\n        return (\n            <div className='ms-store-select__store-hours-details-group'>\n                {storeHoursList.map(displayTime => (\n                    <div className='ms-store-select__store-hours-details'>\n                        {displayTime.endDayShort ? (\n                            <div className='ms-store-select__store-hours-day'>\n                                <abbr title={displayTime.startDayFull}>{displayTime.startDayShort}</abbr>â€“\n                                <abbr title={displayTime.endDayFull}>{displayTime.endDayShort}</abbr>\n                            </div>\n                        ) : (\n                                <div className='ms-store-select__store-hours-day'>\n                                    <abbr title={displayTime.startDayFull}>{displayTime.startDayShort}</abbr>\n                                </div>\n                            )}\n                        <div className='ms-store-select__store-hours-time'>{displayTime.timeRange}</div>\n                    </div>\n                ))}\n            </div>\n        );\n    } else {\n        // If that fails, fall back to using the OpenFrom and OpenTo properties on the location\n        const storeOpenFrom: string | undefined = secondsToTime(location.OpenFrom);\n        const storeOpenTo: string | undefined = secondsToTime(location.OpenTo);\n\n        return (\n            <div className='ms-store-select__store-hours-details'>\n                {storeOpenFrom}-{storeOpenTo}\n            </div>\n        );\n    }\n};\n\nconst buildDistanceString = (distance: number | undefined, preferredDistanceUnit: string, isLocationDisabled?: boolean): string | undefined => {\n    if (distance === undefined || isLocationDisabled) {\n        return undefined;\n    } else if (distance < 1) {\n        return `(<1 ${preferredDistanceUnit})`;\n    } else {\n        return `(${Math.floor(distance)} ${preferredDistanceUnit})`;\n    }\n};\n\nconst extractPhoneNumber = (contacts: OrgUnitContact[] | undefined): string | undefined => {\n    if (!contacts) {\n        return undefined;\n    }\n\n    const allPhoneContacts = contacts.filter(contact => contact.ContactTypeValue === 1 && !contact.IsPrivate);\n\n    if (allPhoneContacts && allPhoneContacts.length > 0) {\n        const primaryPhoneContact = allPhoneContacts.find(contact => contact.IsPrimary);\n\n        if (primaryPhoneContact) {\n            return primaryPhoneContact.Locator;\n        }\n\n        return allPhoneContacts[0].Locator;\n    }\n\n    return undefined;\n};\n\n// tslint:disable-next-line: max-func-body-length\nconst StoreSelectorLocationLineItem: React.FC<IStoreSelectorLocationLineItemProps> = (props: IStoreSelectorLocationLineItemProps) => {\n    const onClick = () => StoreSelectorLocationLineItemComponentActions.onLocationSelected(props);\n\n    const {\n        hideStockStatus,\n        isCurrentLocation,\n        isInStock,\n        location,\n        resources,\n        storeHours,\n        stockStatusLabel,\n        storeLocatorView,\n        index,\n        preferredStoreLocationId,\n        isPreferredStoreEnabled,\n        isLocationDisabled,\n        telemetryContent\n    } = props;\n\n    const storeName: string | undefined = location.OrgUnitName;\n    const distanceAsString: string | undefined = buildDistanceString(location.Distance, props.preferredDistanceUnit, isLocationDisabled);\n    const storeAddress: string | undefined = location.Address;\n    const phoneNumber: string | undefined = extractPhoneNumber(location.Contacts);\n\n    const resourceLabel = isInStock ? resources.inStock : resources.outOfStock;\n    const stockLabel = stockStatusLabel ? stockStatusLabel : undefined;\n    const stockText: string | undefined = (hideStockStatus) ? undefined : (stockLabel ? stockLabel : resourceLabel);\n    const canSelectLocation = hideStockStatus || isInStock;\n    const pickupInStoreButtonText: string = resources.selectLocation;\n    const pickupInStoreAriaLabel: string = resources.selectLocationAriaLabelFormat.replace('{StoreName}', storeName || '');\n    const isPreferredStore = preferredStoreLocationId === location.OrgUnitNumber;\n    const payLoad: IPayLoad = getPayloadObject('click', telemetryContent!, TelemetryConstant.PickupInStore);\n    const attributes = getTelemetryAttributes(telemetryContent!, payLoad);\n    payLoad.contentAction.etext = TelemetryConstant.PreferredStore;\n    const preferredStoreAttr = getTelemetryAttributes(telemetryContent!, payLoad);\n    payLoad.contentAction.etext = TelemetryConstant.RemovePreferredStore;\n    const RemovePreferredStoreAttr = getTelemetryAttributes(telemetryContent!, payLoad);\n\n    const setAsPreferredStore = () => StoreSelectorLocationLineItemComponentActions.onSetAsPreferredStore(props);\n    const removePreferredStore = () => StoreSelectorLocationLineItemComponentActions.onRemovePreferredStore(props);\n\n    return (\n        <div className='ms-store-select__location-line-item'>\n            <div className='ms-store-select__location-line-item-header'>\n                {storeLocatorView && <span className='ms-store-select__location-line-item-store-index'>{index}</span>}\n                <span className='ms-store-select__location-line-item-store-name'>{storeName}</span>\n                {distanceAsString ? <span className='ms-store-select__location-line-item-store-distance'> {distanceAsString}</span> : false}\n            </div>\n            <div className='ms-store-select__location-line-item-content'>\n                <div className='ms-store-select__location-line-item-contact-info'>\n                    <p className='ms-store-select__location-line-header'>{resources.contactInfoHeader}</p>\n                    {storeAddress && (\n                        <div className='ms-store-select__location-line-shop-address-section'>\n                            <span className='msi msi-map-marker-alt ms-store-select__location-line-shop-address-glyph-icon' />\n                            <span className='ms-store-select__location-line-shop-address-text'>{storeAddress}</span>\n                        </div>\n                    )}\n                    {phoneNumber && (\n                        <div className='ms-store-select__location-line-shop-phone-section'>\n                            <span className='msi msi-phone ms-store-select__location-line-shop-phone-icon' />\n                            <span className='ms-store-select__location-line-shop-phone-text'>{phoneNumber}</span>\n                        </div>\n                    )}\n                </div>\n                <div className='ms-store-select__location-line-item-store-hours'>\n                    <p className='ms-store-select__location-line-header'>{resources.storeHoursHeader}</p>\n                    {renderStoreHours(storeHours, location, resources)}\n                </div>\n                {\n                    !storeLocatorView &&\n                    <div className='ms-store-select__location-line-item-store-availability'>\n                        <p className='ms-store-select__location-line-header'>{resources.availabilityInfoHeader}</p>\n                        {stockText && <p className='ms-store-select__location-line-stock-status'>{stockText}</p>}\n                        {isCurrentLocation ?\n                            (\n                                <p className='ms-store-select__location-line-current-location'>{resources.currentLocation}</p>\n                            ) : canSelectLocation ?\n                                (\n                                    <button\n                                        className='ms-store-select__location-line-select-store'\n                                        aria-label={pickupInStoreAriaLabel}\n                                        onClick={onClick}\n                                        {...attributes}\n                                    >\n                                        {pickupInStoreButtonText}\n                                    </button>\n                                ) : (\n                                    false\n                                )\n                        }\n                    </div>\n                }\n                {\n                    isPreferredStoreEnabled ?\n                        isPreferredStore ?\n                            <button className='ms-store-select__location-line-item-preferred-store' aria-label={resources.preferredStoreAriaLabel} onClick={removePreferredStore} {...RemovePreferredStoreAttr} >\n                                {resources.preferredStoreText}\n                            </button>\n                            : <button className='ms-store-select__location-line-item-set-as-preferred-store' aria-label={resources.setAsPreferredStoreTextAriaLabel} {...preferredStoreAttr} onClick={setAsPreferredStore}>\n                                {resources.setAsPreferredStoreText}\n                            </button>\n                        : null\n                }\n            </div>\n        </div>\n    );\n};\n\nexport const StoreSelectorLocationLineItemComponent = StoreSelectorLocationLineItem as (props: IStoreSelectorLocationLineItemProps) => JSX.Element;"]}