{"version":3,"file":"store-selector-small-components.js","sourceRoot":"./src/","sources":["modules/store-selector/components/store-selector-small-components.tsx"],"names":[],"mappings":"AAMA,OAAO,KAAK,QAAQ,MAAM,yBAAyB,CAAC;AACpD,OAAO,UAAU,MAAM,YAAY,CAAC;AACpC,OAAO,KAAK,KAAK,MAAM,OAAO,CAAC;AAM/B,MAAM,CAAC,MAAM,yBAAyB,GAA8C,CAAC,EAAE,SAAS,EAAE,EAAE,EAAE,CAAC,CACnG,6BAAK,SAAS,EAAC,+BAA+B;IAC1C,+BAAI,SAAS,CAAC,kBAAkB,CAAK,CACnC,CACT,CAAC;AAEF,MAAM,CAAC,MAAM,oBAAoB,GAAa,GAAG,EAAE,CAAC,CAChD,6BAAK,SAAS,EAAE,UAAU,CAAC,aAAa,EAAE,qCAAqC,CAAC,GAAI,CACvF,CAAC;AAQF,MAAM,CAAC,MAAM,2BAA2B,GAAgD,CAAC,EAAE,IAAI,EAAE,cAAc,EAAE,YAAY,EAAE,EAAE,EAAE;IAC/H,IAAG,IAAI,EAAE;QACL,MAAM,YAAY,GAAwB;YACtC,SAAS,EAAE,IAAI,CAAC,SAAS;YACzB,SAAS,EAAE,6BAA6B;YACxC,QAAQ,EAAE,IAAI,CAAC,QAAQ;YACvB,OAAO,EAAE,IAAI,CAAC,OAAO,CAAC,cAAc;YACpC,YAAY,EAAE,IAAI,CAAC,YAAY;YAC/B,IAAI,EAAE,QAAQ;SACjB,CAAC;QAEF,OAAM,CACF,6BAAK,SAAS,EAAC,yBAAyB;YACpC,oBAAC,QAAQ,CAAC,IAAI,IACV,IAAI,EAAE,YAAY,EAClB,SAAS,EAAE,EAAC,YAAY,EAAE,YAAY,EAAE,cAAc,EAAE,cAAc,EAAC,GACzE,CACA,CACT,CAAC;KAEL;IACD,OAAO,IAAI,CAAC;AAChB,CAAC,CAAC;AASF,MAAM,CAAC,MAAM,kCAAkC,GAAkD,CAAC,EAAE,SAAS,EAAE,YAAY,EAAE,SAAS,EAAE,aAAa,EAAE,qBAAqB,EAAE,EAAE,EAAE;IAC9K,IAAI,SAAS,EAAE;QACX,MAAM,iBAAiB,GAAG,qBAAqB,KAAK,SAAS,CAAC,cAAc,CAAC,CAAC,CAAC,SAAS,CAAC,iBAAiB,CAAC,CAAC,CAAC,SAAS,CAAC,qBAAqB,CAAC;QAC7I,OAAO,CACH,6BAAK,SAAS,EAAC,kCAAkC,IACzC,aAAa,CAAC,CAAC,CAAC,SAAS,CAAC,oBAAoB;aAC7C,OAAO,CAAC,SAAS,EAAE,SAAS,CAAC,MAAM,CAAC,QAAQ,EAAE,CAAC,CAAC,CAAC,CAAC,iBAAiB;aACnE,OAAO,CAAC,SAAS,EAAE,SAAS,CAAC,MAAM,CAAC,QAAQ,EAAE,CAAC;aAC/C,OAAO,CAAC,UAAU,EAAE,YAAY,CAAC,QAAQ,EAAE,CAAC,CAE/C,CACT,CAAC;KACL;IAED,OAAO,IAAI,CAAC;AAChB,CAAC,CAAC","sourcesContent":["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { IFullOrgUnitAvailability } from '@msdyn365-commerce-modules/retail-actions';\nimport * as Msdyn365 from '@msdyn365-commerce/core';\nimport classnames from 'classnames';\nimport * as React from 'react';\nimport { IStoreSelectorResources, ITermsOfServiceLinkData } from '../store-selector.props.autogenerated';\n\nexport interface IStoreSelectorEmptyMessageProps {\n    resources: IStoreSelectorResources;\n}\nexport const StoreSelectorEmptyMessage: React.FC<IStoreSelectorEmptyMessageProps> = ({ resources }) => (\n    <div className='ms-store-select__no-locations'>\n        <p>{resources.emptyLocationsText}</p>\n    </div>\n);\n\nexport const StoreSelectorWaiting: React.FC = () => (\n    <div className={classnames('msc-waiting', 'ms-store-select__search-in-progress')} />\n);\n\nexport interface IStoreSelectorTermsOfServiceProps {\n    link?: ITermsOfServiceLinkData;\n    requestContext: Msdyn365.IRequestContext;\n    onTextChange?(event: Msdyn365.ContentEditableEvent): void;\n}\n\nexport const StoreSelectorTermsOfService: React.FC<IStoreSelectorTermsOfServiceProps> = ({ link, requestContext, onTextChange }) => {\n    if(link) {\n        const editableLink: Msdyn365.ILinksData = {\n            ariaLabel: link.ariaLabel,\n            className: 'ms-store-select__terms-link',\n            linkText: link.linkText,\n            linkUrl: link.linkUrl.destinationUrl,\n            openInNewTab: link.openInNewTab,\n            role: 'button'\n        };\n\n        return(\n            <div className='ms-store-select__footer'>\n                <Msdyn365.Link\n                    link={editableLink}\n                    editProps={{onTextChange: onTextChange, requestContext: requestContext}}\n                />\n            </div>\n        );\n\n    }\n    return null;\n};\n\nexport interface IStoreSelectorFoundLocationsMessage {\n    resources: IStoreSelectorResources;\n    locations?: IFullOrgUnitAvailability[];\n    searchRadius: number;\n    preferredDistanceUnit: string;\n    isSeeAllStore: boolean;\n}\nexport const StoreSelectorFoundLocationsMessage: React.FC<IStoreSelectorFoundLocationsMessage> = ({ locations, searchRadius, resources, isSeeAllStore, preferredDistanceUnit }) => {\n    if (locations) {\n        const storeCountMessage = preferredDistanceUnit === resources.milesShortText ? resources.storeCountMessage : resources.storeCountMessageInKm;\n        return (\n            <div className='ms-store-select__found-locations'>\n                {   isSeeAllStore ? resources.storeAllCountMessage\n                    .replace('{count}', locations.length.toString()) : storeCountMessage\n                    .replace('{count}', locations.length.toString())\n                    .replace('{radius}', searchRadius.toString())\n                }\n            </div>\n        );\n    }\n\n    return null;\n};"]}