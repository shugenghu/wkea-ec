{"version":3,"file":"store-selector-location-lines.js","sourceRoot":"./src/","sources":["modules/store-selector/components/store-selector-location-lines.tsx"],"names":[],"mappings":"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","sourcesContent":["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nimport { IFullOrgUnitAvailability } from '@msdyn365-commerce-modules/retail-actions';\nimport { ITelemetryContent } from '@msdyn365-commerce-modules/utilities';\nimport { ItemAvailability, OrgUnitLocation } from '@msdyn365-commerce/retail-proxy';\nimport classnames from 'classnames';\nimport { observable } from 'mobx';\nimport { observer } from 'mobx-react';\nimport * as React from 'react';\nimport { IStoreSelectorResources } from '../store-selector.props.autogenerated';\nimport { IStoreSelectorLocationLineItemResources, StoreSelectorLocationLineItemComponent } from './store-selector-location-line-item';\n\nexport interface IStoreSelectorLocationLinesProps {\n    locations?: IFullOrgUnitAvailability[];\n    resources: IStoreSelectorResources;\n    preferredDistanceUnit?: string;\n\n    alreadySelectedLocation?: OrgUnitLocation;\n    outOfStockThreshold: number;\n    enableOutOfStockCheck: boolean;\n    storeLocatorView?: boolean;\n    selectedStoreLocationId?: string;\n    isPreferredStoreEnabled?: boolean;\n    displayList?: boolean;\n    isLocationDisabled?: boolean;\n    onClick: ((locationId: string | undefined) => void);\n    preferredStoreLocationId: string | null;\n    onSetAsPreferredStore: ((locationId: string | undefined) => void);\n    onRemovePreferredStore: (() => void);\n    /** The telemetry content */\n    telemetryContent?: ITelemetryContent;\n    onLocationSelected(location: OrgUnitLocation | undefined): void;\n}\n\n/**\n * Displays all the location line items, or null if none exists\n */\n@observer\nexport class StoreSelectorLocationLines extends React.PureComponent<IStoreSelectorLocationLinesProps> {\n    private selectedLocationRef: React.RefObject<HTMLDivElement>;\n\n    @observable private _stores: IFullOrgUnitAvailability[] | undefined;\n\n    constructor(props: IStoreSelectorLocationLinesProps) {\n        super(props);\n        this.selectedLocationRef = React.createRef();\n    }\n\n    public componentDidUpdate(prevProps: IStoreSelectorLocationLinesProps): void {\n        if (this.props.selectedStoreLocationId !== prevProps.selectedStoreLocationId) {\n            this._scrollIntoView();\n        }\n    }\n\n    public componentDidMount(): void {\n        if (this.props.locations) {\n            this._stores = this._sortStores(this.props.locations);\n        }\n    }\n\n    public render(): JSX.Element | null {\n        if (!this._stores || this._stores.length === 0) {\n            return null;\n        }\n\n        return (\n            <div className={classnames('ms-store-select__locations', { show: this.props.displayList })} role='tablist'>\n                {\n                    this._stores.map((store, index) => {\n                        return this._renderStoreLocation(store, index);\n                    })\n                }\n            </div>\n        );\n    }\n\n    private _renderStoreLocation(store: IFullOrgUnitAvailability, index: number): JSX.Element | undefined {\n        const orgUnitLocation = store?.OrgUnitAvailability?.OrgUnitLocation;\n        const selectedStoreLocationId = this.props.selectedStoreLocationId;\n        return orgUnitLocation && (\n            <div\n                className={classnames('ms-store-select__location', { selected: selectedStoreLocationId === orgUnitLocation.OrgUnitNumber })}\n                key={index}\n                role='tab'\n                // tslint:disable-next-line:jsx-no-lambda react-this-binding-issue\n                onClick={() => this.props.onClick(orgUnitLocation.OrgUnitNumber)}\n                ref={selectedStoreLocationId === orgUnitLocation.OrgUnitNumber ? this.selectedLocationRef : undefined}\n            >\n                <StoreSelectorLocationLineItemComponent\n                    location={orgUnitLocation}\n                    storeHours={store.StoreHours}\n                    resources={this._mapResources(this.props.resources)}\n                    preferredDistanceUnit= {this.props.preferredDistanceUnit!}\n                    isCurrentLocation={this._isCurrentLocation(orgUnitLocation)}\n                    isInStock={this._isProductInStock(store?.OrgUnitAvailability?.ItemAvailabilities)}\n                    handlers={{ onSelected: this.props.onLocationSelected, onSetAsPreferredStore: this.props.onSetAsPreferredStore, onRemovePreferredStore:  this.props.onRemovePreferredStore}}\n                    stockStatusLabel={this._stockInventoryLabel(store)}\n                    storeLocatorView={this.props.storeLocatorView}\n                    index={(index + 1).toString()}\n                    preferredStoreLocationId={this.props.preferredStoreLocationId}\n                    isPreferredStoreEnabled={this.props.isPreferredStoreEnabled}\n                    telemetryContent={this.props.telemetryContent}\n                    isLocationDisabled={this.props.isLocationDisabled}\n                />\n            </div>\n        );\n    }\n\n    private _sortStores(stores: IFullOrgUnitAvailability[]): IFullOrgUnitAvailability[] {\n        const isPreferredStore = (value: IFullOrgUnitAvailability) => this.props.isPreferredStoreEnabled && this.props.preferredStoreLocationId &&\n            value?.OrgUnitAvailability?.OrgUnitLocation?.OrgUnitNumber === this.props.preferredStoreLocationId;\n\n        return [\n            ...stores.filter(isPreferredStore),\n            ...stores.filter(store => !isPreferredStore(store))\n        ];\n    }\n\n    private _scrollIntoView = () => {\n        const selectedLocationDiv = this.selectedLocationRef.current;\n        const parent = selectedLocationDiv?.parentElement;\n        if (selectedLocationDiv && parent) {\n            if (parent.scrollTop > selectedLocationDiv.offsetTop) {\n                parent.scrollTop = selectedLocationDiv.offsetTop;\n            } else if (selectedLocationDiv.offsetTop + selectedLocationDiv.clientHeight > parent.scrollTop + parent.clientHeight) {\n                parent.scrollTop = selectedLocationDiv.offsetTop + selectedLocationDiv.clientHeight - parent.clientHeight;\n            }\n        }\n    }\n\n    private _isCurrentLocation = (location: OrgUnitLocation | undefined): boolean =>\n        (this.props.alreadySelectedLocation && location && this.props.alreadySelectedLocation.OrgUnitNumber === location.OrgUnitNumber) || false;\n\n    private _isProductInStock = (ItemAvailabilities: ItemAvailability[] | undefined): boolean => {\n        if (!this.props.enableOutOfStockCheck) {\n            return true;\n        }\n\n        if (ItemAvailabilities && ItemAvailabilities.length > 0) {\n            return ItemAvailabilities[0].AvailableQuantity ? ItemAvailabilities[0].AvailableQuantity > 0 : false;\n        }\n\n        return false;\n    };\n\n    private _stockInventoryLabel = (availabilityWithHours: IFullOrgUnitAvailability | undefined): string | undefined => {\n        if (availabilityWithHours?.ProductInventoryInformation\n            && availabilityWithHours?.ProductInventoryInformation.length > 0) {\n            for(let i=0; i<availabilityWithHours.ProductInventoryInformation.length; i++) {\n                if(availabilityWithHours.OrgUnitAvailability?.OrgUnitLocation?.InventoryLocationId === availabilityWithHours.ProductInventoryInformation[i].InventLocationId) {\n                    return availabilityWithHours.ProductInventoryInformation[i].StockLevelLabel;\n                }\n\n            }\n        }\n\n        return undefined;\n    };\n\n    private _mapResources = (resources: IStoreSelectorResources): IStoreSelectorLocationLineItemResources => {\n        return {\n            contactInfoHeader: resources.contactText,\n            storeHoursHeader: resources.timeText,\n            availabilityInfoHeader: resources.availabilityText,\n\n            closedText: resources.storeHoursClosedText,\n            outOfStock: resources.outOfStockText,\n            inStock: resources.inStockText,\n\n            currentLocation: resources.selectedStoreLocationText,\n            selectLocation: resources.selectStoreText,\n            selectLocationAriaLabelFormat: resources.selectStoreAriaFormatText,\n            setAsPreferredStoreText: resources.setAsPreferredStoreText,\n            setAsPreferredStoreTextAriaLabel: resources.setAsPreferredStoreTextAriaLabel,\n            preferredStoreText: resources.preferredStoreText,\n            preferredStoreAriaLabel: resources.preferredStoreAriaLabel,\n\n            days: {\n                monday: resources.storeHoursMondayText,\n                tuesday: resources.storeHoursTuesdayText,\n                wednesday: resources.storeHoursWednesdayText,\n                thursday: resources.storeHoursThursdayText,\n                friday: resources.storeHoursFridayText,\n                saturday: resources.storeHoursSaturdayText,\n                sunday: resources.storeHoursSundayText,\n                mondayFull: resources.storeHoursMondayFullText,\n                tuesdayFull: resources.storeHoursTuesdayFullText,\n                wednesdayFull: resources.storeHoursWednesdayFullText,\n                thursdayFull: resources.storeHoursThursdayFullText,\n                fridayFull: resources.storeHoursFridayFullText,\n                saturdayFull: resources.storeHoursSaturdayFullText,\n                sundayFull: resources.storeHoursSundayFullText\n            }\n        };\n    }\n}"]}