{"version":3,"file":"date-time-helpers.js","sourceRoot":"./src/","sources":["modules/store-selector/components/store-selector-location-line-item/date-time-helpers.ts"],"names":[],"mappings":"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","sourcesContent":["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { RegularStoreHours } from '@msdyn365-commerce/retail-proxy';\nimport get from 'lodash/get';\nimport { IStoreSelectorLocationLineItemResources } from '.';\n\nexport interface IHoursDisplayInfo {\n    startDayShort: string;\n    startDayFull: string;\n    endDayShort?: string;\n    endDayFull?: string;\n    timeRange: string;\n}\n\ninterface IHoursInfo {\n    isClosed: boolean;\n    openTime?: number;\n    closeTime?: number;\n}\n\ntype DayType = 'MON' | 'TUE' | 'WED' | 'THU' | 'FRI' | 'SAT' | 'SUN';\n\nexport const secondsToTime = (seconds: number | undefined): string | undefined => {\n    if (seconds === undefined) {\n        return undefined;\n    } else {\n        let hours = Math.floor(seconds / (60 * 60));\n        const ampm = hours >= 12 ? 'pm' : 'am';\n        hours = hours % 12;\n        hours = hours ? hours : 12;\n        const divisorForMinutes = seconds % (60 * 60);\n        const minutes =\n            Math.floor(divisorForMinutes / 60) < 10 ? `0${Math.floor(divisorForMinutes / 60)}` : Math.floor(divisorForMinutes / 60);\n        return `${hours}:${minutes} ${ampm}`;\n    }\n};\n\nconst getShortTimeString = (day: DayType, resources: IStoreSelectorLocationLineItemResources): string => {\n    switch (day) {\n        case 'MON':\n            return resources.days.monday;\n        case 'TUE':\n            return resources.days.tuesday;\n        case 'WED':\n            return resources.days.wednesday;\n        case 'THU':\n            return resources.days.thursday;\n        case 'FRI':\n            return resources.days.friday;\n        case 'SAT':\n            return resources.days.saturday;\n        default: // case 'SUN':\n            return resources.days.sunday;\n    }\n};\n\nconst getFullTimeString = (day: DayType, resources: IStoreSelectorLocationLineItemResources): string => {\n    switch (day) {\n        case 'MON':\n            return resources.days.mondayFull;\n        case 'TUE':\n            return resources.days.tuesdayFull;\n        case 'WED':\n            return resources.days.wednesdayFull;\n        case 'THU':\n            return resources.days.thursdayFull;\n        case 'FRI':\n            return resources.days.fridayFull;\n        case 'SAT':\n            return resources.days.saturdayFull;\n        default: // case 'SUN':\n            return resources.days.sundayFull;\n    }\n};\n\nconst buildHoursDisplayInfo = (startDay: DayType, endDay: DayType, hoursInfo: string, resources: IStoreSelectorLocationLineItemResources): IHoursDisplayInfo => {\n    return {\n        startDayShort: getShortTimeString(startDay, resources),\n        startDayFull: getFullTimeString(startDay, resources),\n        endDayShort: startDay !== endDay ? getShortTimeString(endDay, resources) : undefined,\n        endDayFull: startDay !== endDay ? getFullTimeString(endDay, resources) : undefined,\n        timeRange: hoursInfo\n    };\n};\n\nconst shouldMergeLines = (firstLine: IHoursInfo, secondLine: IHoursInfo): boolean => {\n    if (firstLine.isClosed && secondLine.isClosed) {\n        return true;\n    }\n\n    if (!firstLine.isClosed && !secondLine.isClosed) {\n        return firstLine.openTime === secondLine.openTime && firstLine.closeTime === secondLine.closeTime;\n    }\n\n    return false;\n};\n\nconst getStoreHoursData = (storeHours: RegularStoreHours, dateForLookup: string): IHoursInfo => {\n    return {\n        isClosed: get(storeHours, `IsClosedOn${dateForLookup}`, false),\n        openTime: get(storeHours, `${dateForLookup}OpenTime`, undefined),\n        closeTime: get(storeHours, `${dateForLookup}CloseTime`, undefined)\n    };\n};\n\nconst buildStoreHoursString = (hoursInfo: IHoursInfo, resources: IStoreSelectorLocationLineItemResources): string => {\n    if (hoursInfo.isClosed) {\n        return resources.closedText;\n    } else {\n        const openFrom: string | undefined = secondsToTime(hoursInfo.openTime);\n        const openTo: string | undefined = secondsToTime(hoursInfo.closeTime);\n\n        return `${openFrom}â€“${openTo}`;\n    }\n};\n\nexport const buildStoreHours = (storeHours: RegularStoreHours, resources: IStoreSelectorLocationLineItemResources): IHoursDisplayInfo[] => {\n    const storeHoursList: IHoursDisplayInfo[] = [];\n\n    const mondayHours = getStoreHoursData(storeHours, 'Monday');\n    const tuesdayHours = getStoreHoursData(storeHours, 'Tuesday');\n    const wednesdayHours = getStoreHoursData(storeHours, 'Wednesday');\n    const thursdayHours = getStoreHoursData(storeHours, 'Thursday');\n    const fridayHours = getStoreHoursData(storeHours, 'Friday');\n    const saturdayHours = getStoreHoursData(storeHours, 'Saturday');\n    const sundayHours = getStoreHoursData(storeHours, 'Sunday');\n\n    let periodStart: DayType = 'MON';\n    let periodEnd: DayType = 'MON';\n\n    if (!shouldMergeLines(mondayHours, tuesdayHours)) {\n        storeHoursList.push(buildHoursDisplayInfo(periodStart, periodEnd, buildStoreHoursString(mondayHours, resources), resources));\n\n        periodStart = 'TUE';\n    }\n    periodEnd = 'TUE';\n\n    if (!shouldMergeLines(tuesdayHours, wednesdayHours)) {\n        storeHoursList.push(buildHoursDisplayInfo(periodStart, periodEnd, buildStoreHoursString(tuesdayHours, resources), resources));\n\n        periodStart = 'WED';\n    }\n    periodEnd = 'WED';\n\n    if (!shouldMergeLines(wednesdayHours, thursdayHours)) {\n        storeHoursList.push(buildHoursDisplayInfo(periodStart, periodEnd, buildStoreHoursString(wednesdayHours, resources), resources));\n\n        periodStart = 'THU';\n    }\n    periodEnd = 'THU';\n\n    if (!shouldMergeLines(thursdayHours, fridayHours)) {\n        storeHoursList.push(buildHoursDisplayInfo(periodStart, periodEnd, buildStoreHoursString(thursdayHours, resources), resources));\n\n        periodStart = 'FRI';\n    }\n    periodEnd = 'FRI';\n\n    if (!shouldMergeLines(fridayHours, saturdayHours)) {\n        storeHoursList.push(buildHoursDisplayInfo(periodStart, periodEnd, buildStoreHoursString(fridayHours, resources), resources));\n\n        periodStart = 'SAT';\n    }\n    periodEnd = 'SAT';\n\n    if (!shouldMergeLines(saturdayHours, sundayHours)) {\n        storeHoursList.push(buildHoursDisplayInfo(periodStart, periodEnd, buildStoreHoursString(saturdayHours, resources), resources));\n\n        periodStart = 'SUN';\n    }\n    periodEnd = 'SUN';\n\n    storeHoursList.push(buildHoursDisplayInfo(periodStart, periodEnd, buildStoreHoursString(sundayHours, resources), resources));\n\n    return storeHoursList;\n};\n"]}