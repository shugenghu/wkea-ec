import * as Msdyn365 from '@msdyn365-commerce/core';
import classnames from 'classnames';
import * as React from 'react';
export const StoreSelectorEmptyMessage = ({ resources }) => (React.createElement("div", { className: 'ms-store-select__no-locations' },
    React.createElement("p", null, resources.emptyLocationsText)));
export const StoreSelectorWaiting = () => (React.createElement("div", { className: classnames('msc-waiting', 'ms-store-select__search-in-progress') }));
export const StoreSelectorTermsOfService = ({ link, requestContext, onTextChange }) => {
    if (link) {
        const editableLink = {
            ariaLabel: link.ariaLabel,
            className: 'ms-store-select__terms-link',
            linkText: link.linkText,
            linkUrl: link.linkUrl.destinationUrl,
            openInNewTab: link.openInNewTab,
            role: 'button'
        };
        return (React.createElement("div", { className: 'ms-store-select__footer' },
            React.createElement(Msdyn365.Link, { link: editableLink, editProps: { onTextChange: onTextChange, requestContext: requestContext } })));
    }
    return null;
};
export const StoreSelectorFoundLocationsMessage = ({ locations, searchRadius, resources, isSeeAllStore, preferredDistanceUnit }) => {
    if (locations) {
        const storeCountMessage = preferredDistanceUnit === resources.milesShortText ? resources.storeCountMessage : resources.storeCountMessageInKm;
        return (React.createElement("div", { className: 'ms-store-select__found-locations' }, isSeeAllStore ? resources.storeAllCountMessage
            .replace('{count}', locations.length.toString()) : storeCountMessage
            .replace('{count}', locations.length.toString())
            .replace('{radius}', searchRadius.toString())));
    }
    return null;
};
//# sourceMappingURL=store-selector-small-components.js.map