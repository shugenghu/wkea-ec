import { buildMockModuleProps } from '@msdyn365-commerce/core';
import { render } from 'enzyme';
import * as React from 'react';
import { BuyboxView } from '../../..';
describe('Buybox unit tests - View', () => {
    it('renders correctly', () => {
        const moduleProps = buildMockModuleProps({}, {});
        const mockProps = {
            ...moduleProps,
            ModuleProps: {
                moduleProps,
                className: 'ms-buybox'
            },
            ProductInfoContainerProps: {
                className: 'ms-buybox__content'
            },
            MediaGalleryContainerProps: {
                className: 'ms-buybox__media-gallery'
            },
            callbacks: {
                updateQuantity: jest.fn(),
                updateErrorState: jest.fn(),
                dimensionSelectedAsync: jest.fn(),
                updateSelectedProduct: jest.fn(),
                getDropdownName: jest.fn(),
                changeModalOpen: jest.fn(),
                changeUpdatingDimension: jest.fn()
            },
            title: React.createElement("div", null, "Title"),
            description: React.createElement("div", null, "Description"),
            findInStore: {
                ContainerProps: {
                    className: 'ms-buybux__find-in-store'
                },
                heading: React.createElement("div", null, "Find In Store Heading"),
                description: React.createElement("div", null, "Find In Store Description"),
                errors: React.createElement("div", null, "Find In Store Errors"),
                button: React.createElement("div", null, "Find In Store Button"),
                modal: React.createElement("div", null, "Find In Store Modal"),
                storeSelector: React.createElement("div", null, "Find In Store Selector"),
                openFindInStoreDialog: jest.fn()
            },
            mediaGallery: React.createElement("div", null, "Media Gallery"),
            price: React.createElement("div", null, "Price"),
            inventoryLevelLabel: React.createElement("div", null, "Inventory Level Label"),
            addToCart: {
                ContainerProps: {
                    className: 'ms-buybox__add-to-cart-container'
                },
                errorBlock: React.createElement("div", null, "Add to cart errors"),
                button: React.createElement("div", null, "Add to cart button"),
            },
            addToWishlist: {
                ContainerProps: {
                    className: 'ms-buybox__add-to-wishlist-container'
                },
                errorBlock: React.createElement("div", null, "Add to wishlist errors"),
                button: React.createElement("div", null, "Add to wishlist button"),
            },
            rating: React.createElement("div", null, "Rating"),
            quantity: {
                ContainerProps: {
                    className: 'ms-buybux__quantity'
                },
                LabelContainerProps: {
                    className: 'ms-buybux__quantity-label'
                },
                heading: React.createElement("div", null, "Heading"),
                errors: React.createElement("div", null, "Errors"),
                input: React.createElement("div", null, "Input")
            },
            configure: {
                ContainerProps: {
                    className: 'ms-buybux__configure'
                },
                dropdowns: [
                    {
                        ContainerProps: { className: 'ms-buybox__configure-dropdown' },
                        LabelContainerProps: { className: 'ms-buybox__configure-dropdown-label' },
                        heading: (React.createElement("div", null, "Heading 1")),
                        errors: (React.createElement("div", null, "Errors 1")),
                        select: (React.createElement("div", null, "Select 1"))
                    },
                    {
                        ContainerProps: { className: 'ms-buybox__configure-dropdown' },
                        LabelContainerProps: { className: 'ms-buybox__configure-dropdown-label' },
                        heading: (React.createElement("div", null, "Heading 2")),
                        errors: (React.createElement("div", null, "Errors 2")),
                        select: (React.createElement("div", null, "Select 2"))
                    }
                ]
            }
        };
        const component = render(React.createElement(BuyboxView, Object.assign({}, mockProps)));
        expect(component).toMatchSnapshot();
    });
});
//# sourceMappingURL=buybox.view.test.js.map