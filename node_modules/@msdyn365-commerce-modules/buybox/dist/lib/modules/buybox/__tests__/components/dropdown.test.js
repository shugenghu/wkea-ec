import { render, shallow } from 'enzyme';
import * as React from 'react';
import { Dropdown } from '../../components/dropdown/dropdown';
const defaultMockProps = {
    dropdownId: '1',
    dropdownName: 'Size',
    dropdownList: [{ id: '1', value: 'Large' }, { id: '2', value: 'Small' }, { id: '3', value: 'Child' }],
    dropdownToggleName: 'Size'
};
describe('Dropdown Component', () => {
    it('Renders properly', () => {
        const component = render(React.createElement(Dropdown, Object.assign({}, defaultMockProps)));
        expect(component).toMatchSnapshot();
    });
    it('Calls callback, sets state', () => {
        const component = shallow(React.createElement(Dropdown, Object.assign({}, defaultMockProps)));
        const select = component.find('.msc-dropdown__select').at(0);
        select.simulate('change', { target: { value: '1' } });
        expect(component.state().selectedIndex).toBe('1');
    });
    it('Calls callback, passes it onto other callback if set', () => {
        const mockProps = {
            ...defaultMockProps,
            onChange: jest.fn()
        };
        const component = shallow(React.createElement(Dropdown, Object.assign({}, mockProps)));
        const select = component.find('.msc-dropdown__select').at(0);
        select.simulate('change', { target: { value: '1', innerText: 'Red' } });
        expect(mockProps.onChange).toBeCalledWith(expect.objectContaining({
            dropdownId: '1',
            selectId: '1',
            selectedValue: 'Red'
        }));
    });
});
//# sourceMappingURL=dropdown.test.js.map