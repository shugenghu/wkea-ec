{"version":3,"file":"buybox-small-components.test.js","sourceRoot":"./src/","sources":["modules/buybox/__tests__/components/buybox-small-components.test.tsx"],"names":[],"mappings":"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","sourcesContent":["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { render } from 'enzyme';\nimport * as React from 'react';\n\nimport { IProductInventoryInformation } from '@msdyn365-commerce-modules/retail-actions';\nimport { buildMockModuleProps } from '@msdyn365-commerce/core';\nimport { AsyncResult, SimpleProduct } from '@msdyn365-commerce/retail-proxy';\nimport { IBuyboxData, IBuyboxProps } from '../../../../index';\nimport { mockResources } from '../../__mocks__/mock-resources';\nimport { IBuyboxCallbacks, IBuyboxState } from '../../buybox';\nimport {\n    BuyboxErrorBlock,\n    getBuyBoxInventoryLabel,\n    getBuyboxProductDescription,\n    getBuyboxProductQuantity,\n    getBuyboxProductTitle,\n    getBuyboxShopSimilarLook,\n    IBuyboxErrorBlockProps,\n    // IBuyboxShopSimilarItemViewProps\n} from '../../components';\n\n// @ts-ignore partial mock\nconst mockContext: ICoreContext<{}>  = {\n    app: {\n        config: {\n            maxQuantityForCartLineItem: 5\n        }\n    }\n};\n\ndescribe('Buybox Inventory Level Label',()=> {\n    let moduleProps: IBuyboxProps<IBuyboxData>;\n\n    it('returns null if no product quantity',()=> {\n        moduleProps = buildMockModuleProps(\n            {\n            productAvailableQuantity: {\n                    status: 'FAILED',\n                    result: undefined,\n                } as AsyncResult<IProductInventoryInformation[]>\n            },\n            {},\n            {},\n            mockContext\n        ) as IBuyboxProps<IBuyboxData>;\n\n        const inventoryLabel = getBuyBoxInventoryLabel(moduleProps);\n\n        expect(inventoryLabel).toBe(undefined);\n    });\n\n    it('renders correctly with correct stock Labels', () => {\n        moduleProps = buildMockModuleProps (\n        {\n            productAvailableQuantity:{\n                status: 'SUCCESS',\n                result: [{\n                       StockLevelLabel:'Available'\n                }]\n            }as AsyncResult<IProductInventoryInformation[]>\n        },\n        {},\n        {},\n        mockContext\n    ) as IBuyboxProps<IBuyboxData>;\n\n        const inventoryLabel = getBuyBoxInventoryLabel(moduleProps);\n        expect(inventoryLabel).toBeDefined();\n\n        const component = render(inventoryLabel!);\n        expect(component).toMatchSnapshot();\n    });\n});\n\ndescribe('Buybox Product Title', () => {\n    let moduleProps: IBuyboxProps<IBuyboxData>;\n\n    it('returns null if no product', () => {\n        moduleProps = buildMockModuleProps(\n            {\n                product: {\n                    status: 'FAILED',\n                    result: undefined,\n                } as AsyncResult<SimpleProduct>\n            },\n            {},\n            {},\n            mockContext\n        ) as IBuyboxProps<IBuyboxData>;\n\n        const title = getBuyboxProductTitle(moduleProps);\n\n        expect(title).toBe(undefined);\n    });\n\n    it('renders correctly with default values', () => {\n        moduleProps = buildMockModuleProps(\n            {\n                product: {\n                    status: 'SUCCESS',\n                    result: {\n                        Name: undefined\n                    },\n                } as AsyncResult<SimpleProduct>\n            },\n            {},\n            {},\n            mockContext\n        ) as IBuyboxProps<IBuyboxData>;\n\n        const title = getBuyboxProductTitle(moduleProps);\n\n        expect(title).toBeDefined();\n\n        const component = render(title!);\n        expect(component).toMatchSnapshot();\n    });\n\n    it('renders correctly with supplied values', () => {\n        moduleProps = buildMockModuleProps(\n            {\n                product: {\n                    status: 'SUCCESS',\n                    result: {\n                        Name: 'Toy'\n                    },\n                } as AsyncResult<SimpleProduct>,\n            },\n            {},\n            {\n                titleHeadingTag: 'h2'\n            },\n            mockContext\n        ) as IBuyboxProps<IBuyboxData>;\n\n        const title = getBuyboxProductTitle(moduleProps);\n\n        expect(title).toBeDefined();\n\n        const component = render(title!);\n        expect(component).toMatchSnapshot();\n    });\n});\n\ndescribe('getBuyboxProductDescription', () => {\n    let moduleProps: IBuyboxProps<IBuyboxData>;\n\n    it('returns null if no product', () => {\n        moduleProps = buildMockModuleProps(\n            {\n                product: {\n                    status: 'FAILED',\n                    result: undefined,\n                } as AsyncResult<SimpleProduct>\n            },\n            {},\n            {},\n            mockContext\n        ) as IBuyboxProps<IBuyboxData>;\n\n        const description = getBuyboxProductDescription(moduleProps);\n\n        expect(description).toBe(undefined);\n    });\n\n    it('renders correctly with default values', () => {\n        moduleProps = buildMockModuleProps(\n            {\n                product: {\n                    status: 'SUCCESS',\n                    result: {\n                        Name: undefined\n                    },\n                } as AsyncResult<SimpleProduct>\n            },\n            {},\n            {},\n            mockContext\n        ) as IBuyboxProps<IBuyboxData>;\n\n        const description = getBuyboxProductDescription(moduleProps);\n\n        expect(description).toBeDefined();\n\n        const component = render(description!);\n        expect(component).toMatchSnapshot();\n    });\n\n    it('renders correctly with supplied values', () => {\n        moduleProps = buildMockModuleProps(\n            {\n                product: {\n                    status: 'SUCCESS',\n                    result: {\n                        Description: 'This is a toy'\n                    },\n                } as AsyncResult<SimpleProduct>,\n            },\n            {},\n            {},\n            mockContext\n        ) as IBuyboxProps<IBuyboxData>;\n\n        const description = getBuyboxProductTitle(moduleProps);\n\n        expect(description).toBeDefined();\n\n        const component = render(description!);\n        expect(component).toMatchSnapshot();\n    });\n});\n\ndescribe('Buybox Product Quantity', () => {\n    let moduleProps: IBuyboxProps<IBuyboxData>;\n\n    const mockState: IBuyboxState = {\n        quantity: 0,\n        errorState: {\n            configureErrors: {}\n        },\n        selectedDimensions: {}\n    };\n\n    const mockCallbacks: IBuyboxCallbacks = {\n        updateQuantity: jest.fn(),\n        updateErrorState: jest.fn(),\n        dimensionSelectedAsync: jest.fn(),\n        updateSelectedProduct: jest.fn(),\n        getDropdownName: jest.fn(),\n        changeModalOpen:jest.fn(),\n        changeUpdatingDimension: jest.fn()\n\n    };\n\n    it('does not include error block if no errors', () => {\n        moduleProps = {\n            ...buildMockModuleProps(\n                {\n                    product: {\n                        status: 'SUCCESS',\n                        result: {},\n                    } as AsyncResult<SimpleProduct>,\n                },\n                {},\n                {},\n                mockContext\n            ),\n            resources: mockResources\n         } as IBuyboxProps<IBuyboxData>;\n\n        const quantity = getBuyboxProductQuantity(moduleProps, mockState, mockCallbacks);\n\n        expect(quantity.errors).toBeUndefined();\n    });\n\n    it('includes error block if no errors', () => {\n        moduleProps = {\n            ...buildMockModuleProps(\n                {\n                    product: {\n                        status: 'SUCCESS',\n                        result: {},\n                    } as AsyncResult<SimpleProduct>,\n                },\n                {},\n                {},\n                mockContext\n            ),\n            resources: mockResources\n         } as IBuyboxProps<IBuyboxData>;\n        const quantity = getBuyboxProductQuantity(moduleProps, mockState, mockCallbacks);\n\n        expect(quantity.errors).toBeUndefined();\n    });\n\n    it('fires callback when input changes', () => {\n        moduleProps = {\n            ...buildMockModuleProps(\n                {\n                    product: {\n                        status: 'SUCCESS',\n                        result: {},\n                    } as AsyncResult<SimpleProduct>,\n                },\n                {},\n                {},\n                mockContext\n            ),\n            resources: mockResources\n         } as IBuyboxProps<IBuyboxData>;\n\n        const quantity = getBuyboxProductQuantity(moduleProps, mockState, mockCallbacks);\n\n        // @ts-ignore\n        const quantityProps: IQuantityProps = quantity.input.props;\n\n        quantityProps.onChange(2);\n\n        expect(mockCallbacks.updateQuantity).toBeCalledWith(2);\n   });\n});\n\ndescribe('Buybox Shop Similar Item', () => {\n    let moduleProps: IBuyboxProps<IBuyboxData>;\n\n    const mockState: IBuyboxState = {\n        quantity: 0,\n        errorState: {\n            configureErrors: {}\n        },\n        selectedDimensions: {}\n    };\n\n    const mockCallbacks: IBuyboxCallbacks = {\n        updateQuantity: jest.fn(),\n        updateErrorState: jest.fn(),\n        dimensionSelectedAsync: jest.fn(),\n        updateSelectedProduct: jest.fn(),\n        getDropdownName: jest.fn(),\n        changeModalOpen:jest.fn(),\n        changeUpdatingDimension: jest.fn()\n\n    };\n\n    it('render ShopSimilarLooks link if product available', () => {\n        moduleProps = {\n            ...buildMockModuleProps(\n                {\n                    product: {\n                        status: 'SUCCESS',\n                        result: {},\n                    } as AsyncResult<SimpleProduct>,\n                },\n                {},\n                {},\n                mockContext\n            ),\n            resources: mockResources\n         } as IBuyboxProps<IBuyboxData>;\n\n        const shopSimilarItem = getBuyboxShopSimilarLook(moduleProps, mockState, mockCallbacks);\n\n        expect(shopSimilarItem.errors).toBeUndefined();\n    });\n\n    it('includes error block if product not available errors', () => {\n        moduleProps = {\n            ...buildMockModuleProps(\n                {\n                    product: {\n                        status: 'FAILED',\n                        result: {},\n                    } as AsyncResult<SimpleProduct>,\n                },\n                {},\n                {},\n                mockContext\n            ),\n            resources: mockResources\n         } as IBuyboxProps<IBuyboxData>;\n        const shopSimilarItem = getBuyboxShopSimilarLook(moduleProps, mockState, mockCallbacks);\n\n        expect(shopSimilarItem.errors).toBeUndefined();\n    });\n});\n\ndescribe('Buybox Error Block', () => {\n    it('renders correctly with no error messages', () => {\n        const mockProps: IBuyboxErrorBlockProps = {\n            resources: mockResources,\n            configureErrors: {},\n            otherError: undefined,\n            quantityError: undefined,\n            showError: true\n        };\n        const component = render(<BuyboxErrorBlock {...mockProps} />);\n        expect(component).toMatchSnapshot();\n    });\n\n    it('renders correctly with errors', () => {\n        const mockProps: IBuyboxErrorBlockProps = {\n            resources: mockResources,\n            configureErrors: {1: 'Missing 1', 2: 'Missing 2'},\n            otherError: 'Other error',\n            quantityError: 'Quantity error',\n            showError: true\n        };\n        const component = render(<BuyboxErrorBlock {...mockProps} />);\n        expect(component).toMatchSnapshot();\n    });\n\n    it('renders correctly with errors but showError=false', () => {\n        const mockProps: IBuyboxErrorBlockProps = {\n            resources: mockResources,\n            configureErrors: {1: 'Missing 1', 2: 'Missing 2'},\n            otherError: 'Other error',\n            quantityError: 'Quantity error',\n            showError: false\n        };\n        const component = render(<BuyboxErrorBlock {...mockProps} />);\n        expect(component).toMatchSnapshot();\n    });\n});"]}