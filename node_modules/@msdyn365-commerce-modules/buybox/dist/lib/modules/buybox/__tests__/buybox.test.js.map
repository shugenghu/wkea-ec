{"version":3,"file":"buybox.test.js","sourceRoot":"./src/","sources":["modules/buybox/__tests__/buybox.test.tsx"],"names":[],"mappings":"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","sourcesContent":["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nimport { IStoreSelectorStateManager } from '@msdyn365-commerce-modules/bopis-utilities';\nimport * as RetailActions from '@msdyn365-commerce-modules/retail-actions';\nimport { ProductDimensionFull, RatingsSummary } from '@msdyn365-commerce/commerce-entities';\nimport { IAddToCartComponentProps } from '@msdyn365-commerce/components';\nimport { buildMockModuleProps, ICoreContext } from '@msdyn365-commerce/core';\nimport { ICartState } from '@msdyn365-commerce/global-state';\nimport { AsyncResult, CommerceList, Customer, ProductDeliveryOptions, ProductPrice, SimpleProduct } from '@msdyn365-commerce/retail-proxy';\nimport { mount } from 'enzyme';\nimport * as React from 'react';\nimport { Buybox, IBuyboxData, IBuyboxProps } from '../../../index';\nimport { mockResources } from '../__mocks__/mock-resources';\nimport { IBuyboxCallbacks, IBuyboxState, IBuyboxViewProps } from '../buybox';\nimport { getBuyboxProductConfigure } from '../components';\n\nconst mockData: IBuyboxData = {\n    deliveryOptions: {\n        status: 'FAILED',\n        result: undefined,\n    } as AsyncResult<ProductDeliveryOptions | undefined>,\n    product: {\n        status: 'FAILED',\n        result: undefined,\n    } as AsyncResult<SimpleProduct>,\n    productDimensions: {\n        status: 'FAILED',\n        result: undefined,\n    } as AsyncResult<ProductDimensionFull[]>,\n    storeSelectorStateManager: {\n        status: 'FAILED',\n        result: undefined,\n    } as AsyncResult<IStoreSelectorStateManager>,\n    productPrice: {\n        status: 'FAILED',\n        result: undefined\n    } as AsyncResult<ProductPrice>,\n    ratingsSummary: {\n        status: 'SUCCESS',\n        result: undefined\n    } as AsyncResult<RatingsSummary>,\n    cart: {\n        status: 'SUCCESS',\n        result: undefined\n    } as AsyncResult<ICartState>,\n    wishlists: {\n        status: 'FAILED',\n        result: undefined\n    } as AsyncResult<CommerceList[]>,\n    orderTemplates: {\n        status: 'FAILED',\n        result: undefined\n    } as AsyncResult<RetailActions.OrderTemplate[]>,\n    productAvailableQuantity: {\n        status: 'SUCCESS',\n        result: undefined\n    } as AsyncResult<RetailActions.IProductInventoryInformation[]>,\n    customerInformation: {\n        status: 'SUCCESS',\n        result: undefined\n    } as AsyncResult<Customer>\n};\n\nconst mockDimensions = [\n    {\n        DimensionTypeValue: 3,\n        DimensionValues: [{\n                RecordId:22565421223,\n                Value:'32',\n                ExtensionProperties:[]\n              },{\n                RecordId:22565421225,\n                Value:'36',\n                ExtensionProperties:[]\n              },{\n                RecordId:22565421226,\n                Value:'38',\n                ExtensionProperties:[]\n              },{\n                RecordId:22565421227,\n                Value:'40',\n                ExtensionProperties:[]\n              },{\n                RecordId:22565421228,\n                Value:'42',\n                ExtensionProperties:[]\n              },{\n                RecordId:22565421229,\n                Value:'44',\n                ExtensionProperties:[]\n              },{\n                RecordId:22565421230,\n                Value:'46',\n                ExtensionProperties:[]\n              },{\n                RecordId:22565421231,\n                Value:'48',\n                ExtensionProperties:[]\n              }\n        ]\n    },\n    {\n        DimensionTypeValue: 1,\n        DimensionValues: [\n            {\n                RecordId:22565421201,\n                Value: 'Light Blue',\n                ExtensionProperties:[]\n            }\n        ]\n    },\n    {\n        DimensionTypeValue: 4,\n        DimensionValues: [{\n                RecordId:5637144584,\n                Value: 'Big',\n                ExtensionProperties:[]\n            },{\n                RecordId:5637144583,\n                Value:'Regular',\n                ExtensionProperties:[]\n            }\n        ]\n    },\n    {\n        DimensionTypeValue: 2,\n        DimensionValues: [{\n            RecordId:56371445841,\n            ExtensionProperties:[]\n        },{\n            RecordId:56371445831,\n            ExtensionProperties:[]\n        }\n    ]\n    },\n    {\n        DimensionTypeValue: 5\n    }\n];\n\n// @ts-ignore partial mock\nconst mockContext: ICoreContext  = {\n    app: {\n        config: {\n            maxQuantityForCartLineItem: 5,\n            titleHeadingTag:'h2',\n            enableStockCheck: true\n        }\n    },\n    request: {\n        // @ts-ignore partial mock\n        channel: {\n            PickupDeliveryModeCode: '60'\n        }\n    }\n};\n\n// @ts-ignore partial mock\nconst mockContextNoMaxQuantity: ICoreContext  = {\n    app: {\n        config: {\n            enableStockCheck: true\n        }\n    },\n    request: {\n        // @ts-ignore partial mock\n        channel: {\n            PickupDeliveryModeCode: '60'\n        }\n    }\n};\n\n// @ts-ignore partial mock\nconst mockContextWithMaxQuantity: ICoreContext  = {\n    app: {\n        config: {\n            maxQuantityForCartLineItem: 10,\n            enableStockCheck: true\n        }\n    },\n    request: {\n        // @ts-ignore partial mock\n        channel: {\n            PickupDeliveryModeCode: '60'\n        }\n    }\n};\n\nconst mockSlots = {\n    mediaGallery: [],\n    storeSelector: [],\n    textBlocks: [],\n    socialShare:[]\n};\n\ndescribe('Buybox Module tests', () => {\n    let moduleProps: IBuyboxProps<IBuyboxData>;\n\n    beforeEach(() => {\n        // @ts-ignore\n        RetailActions.getSelectedVariant = jest.fn().mockResolvedValue(undefined);\n\n        // @ts-ignore\n        RetailActions.getDimensionsForSelectedVariant = jest.fn().mockResolvedValue(undefined);\n        // @ts-ignore\n        RetailActions.getPriceForSelectedVariant = jest.fn().mockResolvedValue(undefined);\n        // @ts-ignore\n        RetailActions.getDeliveryOptionsForSelectedVariant = jest.fn().mockResolvedValue(undefined);\n        // @ts-ignore\n        RetailActions.getProductAvailabilitiesForSelectedVariant = jest.fn().mockResolvedValue(undefined);\n    });\n\n    it('Renders as expected when no product defined', () => {\n        moduleProps = {\n            ...buildMockModuleProps(mockData, {}, {}, mockContext) as IBuyboxProps<IBuyboxData>,\n            // @ts-ignore\n            renderView: jest.fn(props => { return <div props={props} />;}),\n            slots: mockSlots,\n            resources: mockResources\n          };\n\n        mount(<Buybox {...moduleProps} />);\n\n        expect(moduleProps.renderView).not.toBeCalled();\n    });\n\n    it('Renders as expected when product defined but no media gallery present', () => {\n        moduleProps = {\n            ...buildMockModuleProps(\n                {\n                    ...mockData,\n                    product: {\n                        status: 'SUCCESS',\n                        result: {\n                            RecordId: 10\n                        },\n                    } as AsyncResult<SimpleProduct>,\n                },\n                {},\n                {},\n                mockContext) as IBuyboxProps<IBuyboxData>,\n            // @ts-ignore\n            renderView: jest.fn(props => { return <div props={props} />;}),\n            slots: mockSlots,\n            resources: mockResources\n          };\n\n        const result = mount(<Buybox {...moduleProps} />);\n\n        expect(moduleProps.renderView).toBeCalled();\n\n        const viewProps: IBuyboxViewProps = result.childAt(0).props().props;\n        expect(viewProps).toBeDefined();\n\n        expect(viewProps.mediaGallery).not.toBeTruthy();\n    });\n\n    it('Renders as expected when product defined and media gallery present', () => {\n        moduleProps = {\n            ...buildMockModuleProps(\n                {\n                    ...mockData,\n                    product: {\n                        status: 'SUCCESS',\n                        result: {\n                            RecordId: 10\n                        },\n                    } as AsyncResult<SimpleProduct>,\n                },\n                {},\n                {},\n                mockContext) as IBuyboxProps<IBuyboxData>,\n            // @ts-ignore\n            renderView: jest.fn(props => { return <div props={props} />;}),\n            slots: {...mockSlots,\n                mediaGallery: [(<div>Media Gallery</div>)],\n            },\n            resources: mockResources\n          };\n\n        const result = mount(<Buybox {...moduleProps} />);\n\n        expect(moduleProps.renderView).toBeCalled();\n\n        const viewProps: IBuyboxViewProps = result.childAt(0).props().props;\n        expect(viewProps).toBeDefined();\n\n        expect(viewProps.mediaGallery).toBeTruthy();\n    });\n\n    it('Renders as expected when product defined but no store selector state manager', () => {\n        moduleProps = {\n            ...buildMockModuleProps(\n                {\n                    ...mockData,\n                    product: {\n                        status: 'SUCCESS',\n                        result: {\n                            RecordId: 10\n                        },\n                    } as AsyncResult<SimpleProduct>,\n                },\n                {},\n                {},\n                mockContext\n            ) as IBuyboxProps<IBuyboxData>,\n            // @ts-ignore\n            renderView: jest.fn(props => { return <div props={props} />;}),\n            slots: mockSlots,\n            resources: mockResources\n        };\n\n        const result = mount(<Buybox {...moduleProps} />);\n\n        expect(moduleProps.renderView).toBeCalled();\n\n        const viewProps: IBuyboxViewProps = result.childAt(0).props().props;\n        expect(viewProps).toBeDefined();\n\n        expect(viewProps.title).toBeTruthy();\n        expect(viewProps.description).toBeTruthy();\n        expect(viewProps.findInStore).not.toBeTruthy();\n    });\n\n    it('Renders as expected when product defined and store selector state manager also defined but no store selector present', () => {\n        moduleProps = {\n            ...buildMockModuleProps(\n                {\n                    ...mockData,\n                    product: {\n                        status: 'SUCCESS',\n                        result: {\n                            RecordId: 10\n                        },\n                    } as AsyncResult<SimpleProduct>,\n                    storeSelectorStateManager: {\n                        status: 'SUCCESS',\n                        result: {},\n                    } as AsyncResult<IStoreSelectorStateManager>,\n                },\n                {},\n                {},\n                mockContext\n            ) as IBuyboxProps<IBuyboxData>,\n            // @ts-ignore\n            renderView: jest.fn(props => { return <div props={props} />;}),\n            slots: mockSlots,\n            resources: mockResources\n        };\n\n        const result = mount(<Buybox {...moduleProps} />);\n\n        expect(moduleProps.renderView).toBeCalled();\n\n        const viewProps: IBuyboxViewProps = result.childAt(0).props().props;\n        expect(viewProps).toBeDefined();\n\n        expect(viewProps.title).toBeTruthy();\n        expect(viewProps.description).toBeTruthy();\n        expect(viewProps.findInStore).not.toBeTruthy();\n    });\n\n    it('Renders as expected when product defined and store selector state manager also defined and also store selector present', () => {\n        moduleProps = {\n            ...buildMockModuleProps(\n                {\n                    ...mockData,\n                    product: {\n                        status: 'SUCCESS',\n                        result: {\n                            RecordId: 10\n                        },\n                    } as AsyncResult<SimpleProduct>,\n                    storeSelectorStateManager: {\n                        status: 'SUCCESS',\n                        result: {},\n                    } as AsyncResult<IStoreSelectorStateManager>,\n                    // @ts-ignore partial mock\n                    deliveryOptions: {\n                        status: 'SUCCESS',\n                        result: {\n                            DeliveryOptions: [\n                                {\n                                    Code: '60'\n                                }\n                            ]\n                        }\n                    } as AsyncResult<ProductDeliveryOptions | undefined>\n                },\n                {},\n                {},\n                mockContext\n            ) as IBuyboxProps<IBuyboxData>,\n            // @ts-ignore\n            renderView: jest.fn(props => { return <div props={props} />;}),\n            slots: {...mockSlots,\n                storeSelector: [(<div>Store Selector</div>)]\n            },\n            resources: mockResources\n        };\n\n        const result = mount(<Buybox {...moduleProps} />);\n\n        expect(moduleProps.renderView).toBeCalled();\n\n        const viewProps: IBuyboxViewProps = result.childAt(0).props().props;\n        expect(viewProps).toBeDefined();\n\n        expect(viewProps.title).toBeTruthy();\n        expect(viewProps.description).toBeTruthy();\n        expect(viewProps.findInStore).toBeTruthy();\n    });\n\n    it('Renders as expected when productPrice is not defined', () => {\n        moduleProps = {\n            ...buildMockModuleProps(\n                {\n                    ...mockData,\n                    product: {\n                        status: 'SUCCESS',\n                        result: {\n                            RecordId: 10\n                        },\n                    } as AsyncResult<SimpleProduct>,\n                },\n                {},\n                {},\n                mockContext\n            ) as IBuyboxProps<IBuyboxData>,\n            // @ts-ignore\n            renderView: jest.fn(props => { return <div props={props} />;}),\n            slots: {...mockSlots,\n                storeSelector: [(<div>Store Selector</div>)]\n            },\n            resources: mockResources\n        };\n\n        const result = mount(<Buybox {...moduleProps} />);\n\n        expect(moduleProps.renderView).toBeCalled();\n\n        const viewProps: IBuyboxViewProps = result.childAt(0).props().props;\n        expect(viewProps).toBeDefined();\n\n        expect(viewProps.title).toBeTruthy();\n        expect(viewProps.description).toBeTruthy();\n        expect(viewProps.addToCart).toBeTruthy();\n        expect(viewProps.price).toBeFalsy();\n    });\n\n    it('Renders as expected when product and productDimensions are defined', () => {\n        moduleProps = {\n            ...buildMockModuleProps(\n                {\n                    ...mockData,\n                    product: {\n                        status: 'SUCCESS',\n                        result: {\n                            RecordId: 10\n                        },\n                    } as AsyncResult<SimpleProduct>,\n                    productDimensions: {\n                        status: 'SUCCESS',\n                        result: [{DimensionTypeValue: 1}]\n                    } as AsyncResult<ProductDimensionFull[]>\n                },\n                {},\n                {},\n                mockContext\n            ) as IBuyboxProps<IBuyboxData>,\n            // @ts-ignore\n            renderView: jest.fn(props => { return <div props={props} />;}),\n            slots: {...mockSlots,\n                storeSelector: [(<div>Store Selector</div>)]\n            },\n            resources: mockResources\n        };\n\n        const result = mount(<Buybox {...moduleProps} />);\n\n        expect(moduleProps.renderView).toBeCalled();\n\n        const viewProps: IBuyboxViewProps = result.childAt(0).props().props;\n        expect(viewProps).toBeDefined();\n\n        expect(viewProps.configure).toBeTruthy();\n    });\n\n    it('Renders as expected when productPrice is defined', () => {\n        moduleProps = {\n            ...buildMockModuleProps(\n                {\n                    ...mockData,\n                    product: {\n                        status: 'SUCCESS',\n                        result: {\n                            RecordId: 10\n                        },\n                    } as AsyncResult<SimpleProduct>,\n                    productPrice: {\n                        status: 'SUCCESS',\n                        result: {\n                            CustomerContextualPrice: 15\n                        }\n                    }\n                },\n                {},\n                {},\n                mockContext\n            ) as IBuyboxProps<IBuyboxData>,\n            // @ts-ignore\n            renderView: jest.fn(props => { return <div props={props} />;}),\n            slots: {...mockSlots,\n                storeSelector: [(<div>Store Selector</div>)]\n            },\n            resources: mockResources\n        };\n\n        const result = mount(<Buybox {...moduleProps} />);\n\n        expect(moduleProps.renderView).toBeCalled();\n\n        const viewProps: IBuyboxViewProps = result.childAt(0).props().props;\n        expect(viewProps).toBeDefined();\n\n        expect(viewProps.title).toBeTruthy();\n        expect(viewProps.description).toBeTruthy();\n        expect(viewProps.addToCart).toBeTruthy();\n        expect(viewProps.price).toBeTruthy();\n    });\n\n    it('Renders as expected when ratingSummary is not defined', () => {\n        moduleProps = {\n            ...buildMockModuleProps(\n                {\n                    ...mockData,\n                    product: {\n                        status: 'SUCCESS',\n                        result: {\n                            RecordId: 10\n                        },\n                    } as AsyncResult<SimpleProduct>\n                },\n                {},\n                {},\n                mockContext\n            ) as IBuyboxProps<IBuyboxData>,\n            // @ts-ignore\n            renderView: jest.fn(props => { return <div props={props} />;}),\n            slots: {...mockSlots,\n                storeSelector: [(<div>Store Selector</div>)]\n            },\n            resources: mockResources\n        };\n\n        const result = mount(<Buybox {...moduleProps} />);\n\n        expect(moduleProps.renderView).toBeCalled();\n\n        const viewProps: IBuyboxViewProps = result.childAt(0).props().props;\n        expect(viewProps).toBeDefined();\n\n        expect(viewProps.title).toBeTruthy();\n        expect(viewProps.description).toBeTruthy();\n        expect(viewProps.addToCart).toBeTruthy();\n        expect(viewProps.price).not.toBeTruthy();\n        expect(viewProps.rating).not.toBeTruthy();\n\n    });\n\n    it('Renders as expected when ratingSummary and product is defined', () => {\n        moduleProps = {\n            ...buildMockModuleProps(\n                {\n                    ...mockData,\n                    product: {\n                        status: 'SUCCESS',\n                        result: {\n                            RecordId: 10\n                        },\n                    } as AsyncResult<SimpleProduct>,\n                    ratingsSummary: {\n                        status: 'SUCCESS',\n                        result: {\n                            averageRating: 3.7,\n                            reviewsCount: 1000\n                        }\n                    }\n                },\n                {},\n                {},\n                mockContext\n            ) as IBuyboxProps<IBuyboxData>,\n            // @ts-ignore\n            renderView: jest.fn(props => { return <div props={props} />;}),\n            slots: {...mockSlots,\n                storeSelector: [(<div>Store Selector</div>)]\n            },\n            resources: mockResources\n        };\n\n        const result = mount(<Buybox {...moduleProps} />);\n\n        expect(moduleProps.renderView).toBeCalled();\n\n        const viewProps: IBuyboxViewProps = result.childAt(0).props().props;\n        expect(viewProps).toBeDefined();\n\n        expect(viewProps.title).toBeTruthy();\n        expect(viewProps.description).toBeTruthy();\n        expect(viewProps.addToCart).toBeTruthy();\n        expect(viewProps.price).not.toBeTruthy();\n        expect(viewProps.rating).toBeTruthy();\n    });\n\n    it('Renders add to wishlist as expected when product is defined', () => {\n        moduleProps = {\n            ...buildMockModuleProps(\n                {\n                    ...mockData,\n                    product: {\n                        status: 'SUCCESS',\n                        result: {\n                            RecordId: 10\n                        },\n                    } as AsyncResult<SimpleProduct>\n                },\n                {},\n                {},\n                mockContext\n            ) as IBuyboxProps<IBuyboxData>,\n            // @ts-ignore\n            renderView: jest.fn(props => { return <div props={props} />;}),\n            slots: mockSlots,\n            resources: mockResources\n        };\n\n        const result = mount(<Buybox {...moduleProps} />);\n\n        expect(moduleProps.renderView).toBeCalled();\n\n        const viewProps: IBuyboxViewProps = result.childAt(0).props().props;\n        expect(viewProps).toBeDefined();\n        expect(viewProps.addToWishlist).toBeTruthy();\n    });\n\n    it('Renders quantity as expected', () => {\n        moduleProps = {\n            ...buildMockModuleProps(\n                {\n                    ...mockData,\n                    product: {\n                        status: 'SUCCESS',\n                        result: {\n                            RecordId: 10\n                        },\n\n                    } as AsyncResult<SimpleProduct>,\n                },\n                {},\n                {},\n                mockContext\n            ) as IBuyboxProps<IBuyboxData>,\n            // @ts-ignore\n            renderView: jest.fn(props => { return <div props={props} />;}),\n            slots: mockSlots,\n            resources: mockResources\n        };\n\n        const result = mount(<Buybox {...moduleProps} />);\n\n        expect(moduleProps.renderView).toBeCalled();\n\n        const viewProps: IBuyboxViewProps = result.childAt(0).props().props;\n        expect(viewProps).toBeDefined();\n\n        expect(viewProps.quantity).toBeTruthy();\n    });\n\n    it('When quantity updates, quantity in add to cart updates too', () => {\n        moduleProps = {\n            ...buildMockModuleProps(\n                {\n                    ...mockData,\n                    product: {\n                        status: 'SUCCESS',\n                        result: {\n                            RecordId: 10\n                        },\n                    } as AsyncResult<SimpleProduct>,\n                },\n                {},\n                {},\n                mockContext\n            ) as IBuyboxProps<IBuyboxData>,\n            // @ts-ignore\n            renderView: jest.fn(props => { return <div props={props} />;}),\n            slots: mockSlots,\n            resources: mockResources\n        };\n\n        const result = mount(<Buybox {...moduleProps} />);\n\n        expect(moduleProps.renderView).toBeCalled();\n\n        const viewProps: IBuyboxViewProps = result.childAt(0).props().props;\n        expect(viewProps).toBeDefined();\n\n        // @ts-ignore\n        const quantityProps: IQuantityProps = viewProps.quantity!.input.props;\n\n        quantityProps.onChange(2);\n\n        // @ts-ignore\n        expect(result.state().quantity).toEqual(2);\n    });\n\n    it('When add to cart fails, properly updates state when add to cart fails with EMPTYINPUT', () => {\n        moduleProps = {\n            ...buildMockModuleProps(\n                {\n                    ...mockData,\n                    product: {\n                        status: 'SUCCESS',\n                        result: {\n                            RecordId: 10\n                        },\n                    } as AsyncResult<SimpleProduct>,\n                },\n                {},\n                {},\n                mockContext\n            ) as IBuyboxProps<IBuyboxData>,\n            // @ts-ignore\n            renderView: jest.fn(props => { return <div props={props} />;}),\n            slots: mockSlots,\n            resources: mockResources\n        };\n\n        const result = mount(<Buybox {...moduleProps} />);\n\n        expect(moduleProps.renderView).toBeCalled();\n\n        const viewProps: IBuyboxViewProps = result.childAt(0).props().props;\n        expect(viewProps).toBeDefined();\n\n        // @ts-ignore\n        const addToCartProps: IAddToCartComponentProps = viewProps.addToCart.button!.props;\n\n        addToCartProps.onError!({failureReason: 'EMPTYINPUT'});\n\n        const state: IBuyboxState = result.state() as IBuyboxState;\n\n        expect(state.errorState.errorHost).toEqual('ADDTOCART');\n        expect(state.errorState.otherError).toEqual('Add to cart failed. Please refresh and retry');\n        expect(state.errorState.configureErrors).toEqual({});\n        expect(state.errorState.quantityError).toBeUndefined();\n    });\n\n    it('When add to cart fails, properly updates state when add to cart fails with CARTACTIONFAILED but not MAXQUANTITY', () => {\n        moduleProps = {\n            ...buildMockModuleProps(\n                {\n                    ...mockData,\n                    product: {\n                        status: 'SUCCESS',\n                        result: {\n                            RecordId: 10\n                        },\n                    } as AsyncResult<SimpleProduct>,\n                },\n                {},\n                {},\n                mockContext\n            ) as IBuyboxProps<IBuyboxData>,\n            // @ts-ignore\n            renderView: jest.fn(props => { return <div props={props} />;}),\n            slots: mockSlots,\n            resources: mockResources\n        };\n\n        const result = mount(<Buybox {...moduleProps} />);\n\n        expect(moduleProps.renderView).toBeCalled();\n\n        const viewProps: IBuyboxViewProps = result.childAt(0).props().props;\n        expect(viewProps).toBeDefined();\n\n        // @ts-ignore\n        const addToCartProps: IAddToCartComponentProps = viewProps.addToCart.button!.props;\n\n        addToCartProps.onError!({failureReason: 'CARTACTIONFAILED'});\n\n        const state: IBuyboxState = result.state() as IBuyboxState;\n\n        expect(state.errorState.errorHost).toEqual('ADDTOCART');\n        expect(state.errorState.otherError).toEqual('Add to cart failed. Please refresh and retry');\n        expect(state.errorState.configureErrors).toEqual({});\n        expect(state.errorState.quantityError).toBeUndefined();\n    });\n\n    it('When add to cart fails, properly updates state when add to cart fails with CARTACTIONFAILED and result substatus MAXQUANTITY', () => {\n        moduleProps = {\n            ...buildMockModuleProps(\n                {\n                    ...mockData,\n                    cart: {\n                        status: 'FAILED',\n                        result: {\n                            cart: {\n                                Id: 'id',\n                                CartLines: [ {ProductId: 10} ]\n                            }\n                        }\n                    } as AsyncResult<ICartState>,\n                    product: {\n                        status: 'SUCCESS',\n                        result: {\n                            RecordId: 10\n                        },\n                    } as AsyncResult<SimpleProduct>,\n                    productAvailableQuantity: {\n                        status: 'SUCCESS',\n                        result: [\n                            {\n                                StockLevelLabel: 'Available',\n                                ProductAvailableQuantity: { AvailableQuantity: 10 }\n                            }\n                        ]\n                    } as AsyncResult<RetailActions.IProductInventoryInformation[]>\n                },\n                {},\n                {},\n                mockContext\n            ) as IBuyboxProps<IBuyboxData>,\n            // @ts-ignore\n            renderView: jest.fn(props => { return <div props={props} />;}),\n            slots: mockSlots,\n            resources: mockResources\n        };\n\n        const result = mount(<Buybox {...moduleProps} />);\n\n        expect(moduleProps.renderView).toBeCalled();\n\n        const viewProps: IBuyboxViewProps = result.childAt(0).props().props;\n        expect(viewProps).toBeDefined();\n\n        // @ts-ignore\n        const addToCartProps: IAddToCartComponentProps = viewProps.addToCart.button!.props;\n\n        addToCartProps.onError!({failureReason: 'CARTACTIONFAILED', cartActionResult: { status: 'FAILED', substatus: 'MAXQUANTITY'}});\n\n        const state: IBuyboxState = result.state() as IBuyboxState;\n\n        expect(state.errorState.errorHost).toEqual('ADDTOCART');\n        expect(state.errorState.otherError).toEqual('You already have 0 of this item in your shopping bag. You can only add 5 of this item to your shopping bag');\n        expect(state.errorState.configureErrors).toEqual({});\n        expect(state.errorState.quantityError).toBeUndefined();\n    });\n\n    it('When add to cart fails, properly updates state when add to cart fails with CARTACTIONFAILED and result substatus MAXQUANTITY and use config value', () => {\n        moduleProps = {\n            ...buildMockModuleProps(\n                {\n                    ...mockData,\n                    cart: {\n                        status: 'FAILED',\n                        result: {\n                            cart: {\n                                Id: 'id',\n                                CartLines: [ {ProductId: 10} ]\n                            }\n                        }\n                    } as AsyncResult<ICartState>,\n                    product: {\n                        status: 'SUCCESS',\n                        result: {\n                            RecordId: 10\n                        },\n                    } as AsyncResult<SimpleProduct>,\n                    productAvailableQuantity: {\n                        status: 'SUCCESS',\n                        result: [\n                            {\n                                StockLevelLabel: 'Available',\n                                ProductAvailableQuantity: { AvailableQuantity: 10 }\n                            }\n                        ]\n                    } as AsyncResult<RetailActions.IProductInventoryInformation[]>\n                },\n                {},\n                {},\n                mockContextWithMaxQuantity\n            ) as IBuyboxProps<IBuyboxData>,\n            // @ts-ignore\n            renderView: jest.fn(props => { return <div props={props} />;}),\n            slots: mockSlots,\n            resources: mockResources\n        };\n\n        const result = mount(<Buybox {...moduleProps} />);\n\n        expect(moduleProps.renderView).toBeCalled();\n\n        const viewProps: IBuyboxViewProps = result.childAt(0).props().props;\n        expect(viewProps).toBeDefined();\n\n        // @ts-ignore\n        const addToCartProps: IAddToCartComponentProps = viewProps.addToCart.button!.props;\n\n        addToCartProps.onError!({failureReason: 'CARTACTIONFAILED', cartActionResult: { status: 'FAILED', substatus: 'MAXQUANTITY'}});\n\n        const state: IBuyboxState = result.state() as IBuyboxState;\n\n        expect(state.errorState.errorHost).toEqual('ADDTOCART');\n        expect(state.errorState.otherError).toEqual('You already have 0 of this item in your shopping bag. You can only add 10 of this item to your shopping bag');\n        expect(state.errorState.configureErrors).toEqual({});\n        expect(state.errorState.quantityError).toBeUndefined();\n    });\n\n    it('When add to cart fails, properly updates state when add to cart fails with CARTACTIONFAILED and result substatus MAXQUANTITY and use config value and no availableQty', () => {\n        moduleProps = {\n            ...buildMockModuleProps(\n                {\n                    ...mockData,\n                    cart: {\n                        status: 'FAILED',\n                        result: {\n                            cart: {\n                                Id: 'id',\n                                CartLines: [ {ProductId: 10} ]\n                            }\n                        }\n                    } as AsyncResult<ICartState>,\n                    product: {\n                        status: 'SUCCESS',\n                        result: {\n                            RecordId: 10\n                        },\n                    } as AsyncResult<SimpleProduct>\n                },\n                {},\n                {},\n                mockContextWithMaxQuantity\n            ) as IBuyboxProps<IBuyboxData>,\n            // @ts-ignore\n            renderView: jest.fn(props => { return <div props={props} />;}),\n            slots: mockSlots,\n            resources: mockResources\n        };\n\n        const result = mount(<Buybox {...moduleProps} />);\n\n        expect(moduleProps.renderView).toBeCalled();\n\n        const viewProps: IBuyboxViewProps = result.childAt(0).props().props;\n        expect(viewProps).toBeDefined();\n\n        // @ts-ignore\n        const addToCartProps: IAddToCartComponentProps = viewProps.addToCart.button!.props;\n\n        addToCartProps.onError!({failureReason: 'CARTACTIONFAILED', cartActionResult: { status: 'FAILED', substatus: 'MAXQUANTITY'}});\n\n        const state: IBuyboxState = result.state() as IBuyboxState;\n\n        expect(state.errorState.errorHost).toEqual('ADDTOCART');\n        expect(state.errorState.otherError).toEqual('You already have 0 of this item in your shopping bag. You can only add 10 of this item to your shopping bag');\n        expect(state.errorState.configureErrors).toEqual({});\n        expect(state.errorState.quantityError).toBeUndefined();\n    });\n\n    it('When add to cart fails, properly updates state when add to cart fails with CARTACTIONFAILED and result substatus MAXQUANTITY and uses default value', () => {\n        moduleProps = {\n            ...buildMockModuleProps(\n                {\n                    ...mockData,\n                    cart: {\n                        status: 'FAILED',\n                        result: {\n                            cart: {\n                                Id: 'id',\n                                CartLines: [ {ProductId: 10} ]\n                            }\n                        }\n                    } as AsyncResult<ICartState>,\n                    product: {\n                        status: 'SUCCESS',\n                        result: {\n                            RecordId: 10\n                        },\n                    } as AsyncResult<SimpleProduct>,\n                    productAvailableQuantity: {\n                        status: 'SUCCESS',\n                        result: [\n                            {\n                                StockLevelLabel: 'Available',\n                                ProductAvailableQuantity: { AvailableQuantity: 10 }\n                            }\n                        ]\n                    } as AsyncResult<RetailActions.IProductInventoryInformation[]>\n                },\n                {},\n                {},\n                mockContextNoMaxQuantity\n            ) as IBuyboxProps<IBuyboxData>,\n            // @ts-ignore\n            renderView: jest.fn(props => { return <div props={props} />;}),\n            slots: mockSlots,\n            resources: mockResources\n        };\n\n        const result = mount(<Buybox {...moduleProps} />);\n\n        expect(moduleProps.renderView).toBeCalled();\n\n        const viewProps: IBuyboxViewProps = result.childAt(0).props().props;\n        expect(viewProps).toBeDefined();\n\n        // @ts-ignore\n        const addToCartProps: IAddToCartComponentProps = viewProps.addToCart.button!.props;\n\n        addToCartProps.onError!({failureReason: 'CARTACTIONFAILED', cartActionResult: { status: 'FAILED', substatus: 'MAXQUANTITY'}});\n\n        const state: IBuyboxState = result.state() as IBuyboxState;\n\n        expect(state.errorState.errorHost).toEqual('ADDTOCART');\n        expect(state.errorState.otherError).toEqual('You already have 0 of this item in your shopping bag. You can only add 10 of this item to your shopping bag');\n        expect(state.errorState.configureErrors).toEqual({});\n        expect(state.errorState.quantityError).toBeUndefined();\n    });\n\n    it('When add to cart fails, properly updates state when add to cart fails with CARTACTIONFAILED and result substatus MAXQUANTITY and no availbleQty', () => {\n        moduleProps = {\n            ...buildMockModuleProps(\n                {\n                    ...mockData,\n                    cart: {\n                        status: 'FAILED',\n                        result: {\n                            cart: {\n                                Id: 'id',\n                                CartLines: [ {ProductId: 10} ]\n                            }\n                        }\n                    } as AsyncResult<ICartState>,\n                    product: {\n                        status: 'SUCCESS',\n                        result: {\n                            RecordId: 10\n                        },\n                    } as AsyncResult<SimpleProduct>\n                },\n                {},\n                {},\n                mockContextNoMaxQuantity\n            ) as IBuyboxProps<IBuyboxData>,\n            // @ts-ignore\n            renderView: jest.fn(props => { return <div props={props} />;}),\n            slots: mockSlots,\n            resources: mockResources\n        };\n\n        const result = mount(<Buybox {...moduleProps} />);\n\n        expect(moduleProps.renderView).toBeCalled();\n\n        const viewProps: IBuyboxViewProps = result.childAt(0).props().props;\n        expect(viewProps).toBeDefined();\n\n        // @ts-ignore\n        const addToCartProps: IAddToCartComponentProps = viewProps.addToCart.button!.props;\n\n        addToCartProps.onError!({failureReason: 'CARTACTIONFAILED', cartActionResult: { status: 'FAILED', substatus: 'MAXQUANTITY'}});\n\n        const state: IBuyboxState = result.state() as IBuyboxState;\n\n        expect(state.errorState.errorHost).toEqual('ADDTOCART');\n        expect(state.errorState.otherError).toEqual('You already have 0 of this item in your shopping bag. You can only add 10 of this item to your shopping bag');\n        expect(state.errorState.configureErrors).toEqual({});\n        expect(state.errorState.quantityError).toBeUndefined();\n    });\n\n    it('When add to cart fails, properly updates state when add to cart fails with OUTOFSTOCK and 0 stock left', () => {\n        moduleProps = {\n            ...buildMockModuleProps(\n                {\n                    ...mockData,\n                    product: {\n                        status: 'SUCCESS',\n                        result: {\n                            RecordId: 10\n                        },\n                    } as AsyncResult<SimpleProduct>,\n                },\n                {},\n                {},\n                mockContext\n            ) as IBuyboxProps<IBuyboxData>,\n            // @ts-ignore\n            renderView: jest.fn(props => { return <div props={props} />;}),\n            slots: mockSlots,\n            resources: mockResources\n        };\n\n        const result = mount(<Buybox {...moduleProps} />);\n\n        expect(moduleProps.renderView).toBeCalled();\n\n        const viewProps: IBuyboxViewProps = result.childAt(0).props().props;\n        expect(viewProps).toBeDefined();\n\n        // @ts-ignore\n        const addToCartProps: IAddToCartComponentProps = viewProps.addToCart.button!.props;\n\n        addToCartProps.onError!({failureReason: 'OUTOFSTOCK', stockLeft: 0});\n\n        const state: IBuyboxState = result.state() as IBuyboxState;\n\n        expect(state.errorState.errorHost).toEqual('ADDTOCART');\n        expect(state.errorState.otherError).toBeUndefined();\n        expect(state.errorState.configureErrors).toEqual({});\n        expect(state.errorState.quantityError).toEqual('This product is out of stock');\n    });\n\n    it('When add to cart fails, properly updates state when add to cart fails with OUTOFSTOCK and 1 stock left', () => {\n        moduleProps = {\n            ...buildMockModuleProps(\n                {\n                    ...mockData,\n                    product: {\n                        status: 'SUCCESS',\n                        result: {\n                            RecordId: 10\n                        },\n                    } as AsyncResult<SimpleProduct>,\n                },\n                {},\n                {},\n                mockContext\n            ) as IBuyboxProps<IBuyboxData>,\n            // @ts-ignore\n            renderView: jest.fn(props => { return <div props={props} />;}),\n            slots: mockSlots,\n            resources: mockResources\n        };\n\n        const result = mount(<Buybox {...moduleProps} />);\n\n        expect(moduleProps.renderView).toBeCalled();\n\n        const viewProps: IBuyboxViewProps = result.childAt(0).props().props;\n        expect(viewProps).toBeDefined();\n\n        // @ts-ignore\n        const addToCartProps: IAddToCartComponentProps = viewProps.addToCart.button!.props;\n\n        addToCartProps.onError!({failureReason: 'OUTOFSTOCK', stockLeft: 1});\n\n        const state: IBuyboxState = result.state() as IBuyboxState;\n\n        expect(state.errorState.errorHost).toEqual('ADDTOCART');\n        expect(state.errorState.otherError).toBeUndefined();\n        expect(state.errorState.configureErrors).toEqual({});\n        expect(state.errorState.quantityError).toEqual('There is only one product left. Please choose quantity within the available range');\n    });\n\n    it('When add to cart fails, properly updates state when add to cart fails with OUTOFSTOCK and more than one stock left', () => {\n        moduleProps = {\n            ...buildMockModuleProps(\n                {\n                    ...mockData,\n                    product: {\n                        status: 'SUCCESS',\n                        result: {\n                            RecordId: 10\n                        },\n                    } as AsyncResult<SimpleProduct>,\n                },\n                {},\n                {},\n                mockContext\n            ) as IBuyboxProps<IBuyboxData>,\n            // @ts-ignore\n            renderView: jest.fn(props => { return <div props={props} />;}),\n            slots: mockSlots,\n            resources: mockResources\n        };\n\n        const result = mount(<Buybox {...moduleProps} />);\n\n        expect(moduleProps.renderView).toBeCalled();\n\n        const viewProps: IBuyboxViewProps = result.childAt(0).props().props;\n        expect(viewProps).toBeDefined();\n\n        // @ts-ignore\n        const addToCartProps: IAddToCartComponentProps = viewProps.addToCart.button!.props;\n\n        addToCartProps.onError!({failureReason: 'OUTOFSTOCK', stockLeft: 5});\n\n        const state: IBuyboxState = result.state() as IBuyboxState;\n\n        expect(state.errorState.errorHost).toEqual('ADDTOCART');\n        expect(state.errorState.otherError).toBeUndefined();\n        expect(state.errorState.configureErrors).toEqual({});\n        expect(state.errorState.quantityError).toEqual('There are only 5 products left. Please choose quantity within the available range');\n    });\n\n    it('When add to cart fails, properly updates state when add to cart fails with MISSINGDIMENSION', () => {\n        moduleProps = {\n            ...buildMockModuleProps(\n                {\n                    ...mockData,\n                    product: {\n                        status: 'SUCCESS',\n                        result: {\n                            RecordId: 10\n                        },\n                    } as AsyncResult<SimpleProduct>,\n                },\n                {},\n                {},\n                mockContext\n            ) as IBuyboxProps<IBuyboxData>,\n            // @ts-ignore\n            renderView: jest.fn(props => { return <div props={props} />;}),\n            slots: mockSlots,\n            resources: mockResources\n        };\n\n        const result = mount(<Buybox {...moduleProps} />);\n\n        expect(moduleProps.renderView).toBeCalled();\n\n        const viewProps: IBuyboxViewProps = result.childAt(0).props().props;\n        expect(viewProps).toBeDefined();\n\n        // @ts-ignore\n        const addToCartProps: IAddToCartComponentProps = viewProps.addToCart.button!.props;\n\n        addToCartProps.onError!({failureReason: 'MISSINGDIMENSION', missingDimensions: [\n            { DimensionTypeValue: 3 },\n            { DimensionTypeValue: 1 },\n            { DimensionTypeValue: 4 }\n        ]});\n\n        const state: IBuyboxState = result.state() as IBuyboxState;\n\n        expect(state.errorState.errorHost).toEqual('ADDTOCART');\n        expect(state.errorState.otherError).toBeUndefined();\n        expect(state.errorState.configureErrors[1]).toEqual('Color is required. Please choose a color');\n        expect(state.errorState.configureErrors[2]).toBeUndefined();\n        expect(state.errorState.configureErrors[3]).toEqual('Size is required. Please choose a size');\n        expect(state.errorState.configureErrors[4]).toEqual('Style is required. Please choose a style');\n        expect(state.errorState.quantityError).toBeUndefined();\n    });\n\n    it('When add to cart fails, properly updates state when add to cart fails with MISSINGDIMENSION but no missing dimensions returned', () => {\n        moduleProps = {\n            ...buildMockModuleProps(\n                {\n                    ...mockData,\n                    product: {\n                        status: 'SUCCESS',\n                        result: {\n                            RecordId: 10\n                        },\n                    } as AsyncResult<SimpleProduct>,\n                },\n                {},\n                {},\n                mockContext\n            ) as IBuyboxProps<IBuyboxData>,\n            // @ts-ignore\n            renderView: jest.fn(props => { return <div props={props} />;}),\n            slots: mockSlots,\n            resources: mockResources\n        };\n\n        const result = mount(<Buybox {...moduleProps} />);\n\n        expect(moduleProps.renderView).toBeCalled();\n\n        const viewProps: IBuyboxViewProps = result.childAt(0).props().props;\n        expect(viewProps).toBeDefined();\n\n        // @ts-ignore\n        const addToCartProps: IAddToCartComponentProps = viewProps.addToCart.button!.props;\n\n        addToCartProps.onError!({failureReason: 'MISSINGDIMENSION'});\n\n        const state: IBuyboxState = result.state() as IBuyboxState;\n\n        expect(state.errorState.errorHost).toEqual('ADDTOCART');\n        expect(state.errorState.otherError).toBeUndefined();\n        expect(state.errorState.configureErrors).toEqual({});\n    });\n\n    it('When add to cart fails, properly updates state when add to cart fails with MISSINGDIMENSION even if dimension ids don\\'t match whats expected', () => {\n        moduleProps = {\n            ...buildMockModuleProps(\n                {\n                    ...mockData,\n                    product: {\n                        status: 'SUCCESS',\n                        result: {\n                            RecordId: 10\n                        },\n                    } as AsyncResult<SimpleProduct>,\n                },\n                {},\n                {},\n                mockContext\n            ) as IBuyboxProps<IBuyboxData>,\n            // @ts-ignore\n            renderView: jest.fn(props => { return <div props={props} />;}),\n            slots: mockSlots,\n            resources: mockResources\n        };\n\n        const result = mount(<Buybox {...moduleProps} />);\n\n        expect(moduleProps.renderView).toBeCalled();\n\n        const viewProps: IBuyboxViewProps = result.childAt(0).props().props;\n        expect(viewProps).toBeDefined();\n\n        // @ts-ignore\n        const addToCartProps: IAddToCartComponentProps = viewProps.addToCart.button!.props;\n\n        addToCartProps.onError!({failureReason: 'MISSINGDIMENSION', missingDimensions: [\n            { DimensionTypeValue: 2 },\n            { DimensionTypeValue: 5 }\n        ]});\n\n        const state: IBuyboxState = result.state() as IBuyboxState;\n\n        expect(state.errorState.errorHost).toEqual('ADDTOCART');\n        expect(state.errorState.otherError).toBeUndefined();\n        expect(state.errorState.configureErrors[1]).toBeUndefined();\n        expect(state.errorState.configureErrors[2]).toEqual('Configuration is required. Please choose a configuration');\n        expect(state.errorState.configureErrors[3]).toBeUndefined();\n        expect(state.errorState.configureErrors[4]).toBeUndefined();\n        expect(state.errorState.configureErrors[5]).toEqual('');\n        expect(state.errorState.quantityError).toBeUndefined();\n    });\n\n    it('Callbacks work', async () => {\n        let callbacks: IBuyboxCallbacks | undefined;\n        // @ts-ignore\n        getBuyboxProductConfigure = jest.fn().mockImplementation((props, state, callback) => {\n            callbacks = callback;\n            return undefined;\n        });\n\n        moduleProps = {\n            ...buildMockModuleProps(\n                {\n                    ...mockData,\n                    product: {\n                        status: 'SUCCESS',\n                        result: {\n                            RecordId: 10\n                        },\n                    } as AsyncResult<SimpleProduct>,\n                },\n                {},\n                {},\n                mockContext\n            ) as IBuyboxProps<IBuyboxData>,\n            // @ts-ignore\n            renderView: jest.fn(props => { return <div props={props} />;}),\n            slots: mockSlots,\n            resources: mockResources\n        };\n\n        const result = mount(<Buybox {...moduleProps} />);\n\n        expect(getBuyboxProductConfigure).toBeCalled();\n\n        expect(callbacks).toBeDefined();\n\n        callbacks!.updateErrorState({\n            errorHost: 'ADDTOCART',\n            configureErrors: {\n                1: 'Error 1',\n                2: 'Error 2',\n                4: 'Error 4'\n            }\n        });\n        // @ts-ignore gets confused by path\n        expect(result.state().errorState.configureErrors[1]).toEqual('Error 1');\n        // @ts-ignore gets confused by path\n        expect(result.state().errorState.configureErrors[2]).toEqual('Error 2');\n        // @ts-ignore gets confused by path\n        expect(result.state().errorState.configureErrors[4]).toEqual('Error 4');\n        const test = await callbacks!.dimensionSelectedAsync(4, '0');\n        expect(test).toBeUndefined();\n    });\n\n    it('updateSelectedProduct Callbacks', async () => {\n        let callbacks: IBuyboxCallbacks | undefined;\n        // @ts-ignore\n        getBuyboxProductConfigure = jest.fn().mockImplementation((props, state, callback) => {\n            callbacks = callback;\n            return undefined;\n        });\n\n        moduleProps = {\n            ...buildMockModuleProps(\n                {\n                    ...mockData,\n                    product: {\n                        status: 'SUCCESS',\n                        result: {\n                            RecordId: 10\n                        },\n                    } as AsyncResult<SimpleProduct>\n                },\n                {},\n                {},\n                mockContext\n            ) as IBuyboxProps<IBuyboxData>,\n            // @ts-ignore\n            renderView: jest.fn(props => { return <div props={props} />;}),\n            slots: mockSlots,\n            resources: mockResources\n        };\n\n        const result = mount(<Buybox {...moduleProps} />);\n\n        expect(getBuyboxProductConfigure).toBeCalled();\n\n        expect(callbacks).toBeDefined();\n\n        callbacks!.updateSelectedProduct(new Promise<SimpleProduct | null>((resolve) => resolve(null)), undefined, undefined, undefined);\n\n        // @ts-ignore gets confused by path\n        expect(result.state().selectedProduct).toBeDefined();\n\n        // @ts-ignore gets confused by path\n        expect(await (result.state().selectedProduct)).toEqual(null);\n    });\n\n    it('_getDropdownName tests', async () => {\n        moduleProps = {\n            ...buildMockModuleProps(\n                {\n                    ...mockData,\n                    product: {\n                        status: 'SUCCESS',\n                        result: {\n                            RecordId: 10\n                        },\n                    } as AsyncResult<SimpleProduct>,\n                    productDimensions: {\n                        status: 'SUCCESS',\n                        result: mockDimensions,\n                    } as AsyncResult<ProductDimensionFull[]>\n                },\n                {},\n                {},\n                mockContext\n            ) as IBuyboxProps<IBuyboxData>,\n            // @ts-ignore\n            renderView: jest.fn(props => { return <div props={props} />;}),\n            slots: mockSlots,\n            resources: mockResources\n        };\n\n        const result = mount(<Buybox {...moduleProps} />);\n\n        const viewProps: IBuyboxViewProps = result.childAt(0).props().props;\n\n        expect(viewProps.callbacks.getDropdownName(1, mockResources)).toEqual('Color');\n        expect(viewProps.callbacks.getDropdownName(2, mockResources)).toEqual('Configuration');\n        expect(viewProps.callbacks.getDropdownName(3, mockResources)).toEqual('Size');\n        expect(viewProps.callbacks.getDropdownName(4, mockResources)).toEqual('Style');\n        expect(viewProps.callbacks.getDropdownName(5, mockResources)).toEqual('');\n    });\n\n    it('dimensionSelectedAsync -- updates state to newly selected dimension', async () => {\n        moduleProps = {\n            ...buildMockModuleProps(\n                {\n                    ...mockData,\n                    product: {\n                        status: 'SUCCESS',\n                        result: {\n                            RecordId: 10\n                        },\n                    } as AsyncResult<SimpleProduct>,\n                    productDimensions: {\n                        status: 'SUCCESS',\n                        result: mockDimensions,\n                    } as AsyncResult<ProductDimensionFull[]>\n                },\n                {},\n                {},\n                mockContext\n            ) as IBuyboxProps<IBuyboxData>,\n            // @ts-ignore\n            renderView: jest.fn(props => { return <div props={props} />;}),\n            slots: mockSlots,\n            resources: mockResources\n        };\n\n        const result = mount(<Buybox {...moduleProps} />);\n\n        const viewProps: IBuyboxViewProps = result.childAt(0).props().props;\n\n        await viewProps.callbacks.dimensionSelectedAsync(4, '0');\n\n        // @ts-ignore gets confused by path\n        expect(result.state().selectedDimensions[4]).toEqual('0');\n    });\n\n    it('dimensionSelectedAsync -- clears error states after selecting new dimension', async () => {\n        moduleProps = {\n            ...buildMockModuleProps(\n                {\n                    ...mockData,\n                    product: {\n                        status: 'SUCCESS',\n                        result: {\n                            RecordId: 10\n                        },\n                    } as AsyncResult<SimpleProduct>,\n                    productDimensions: {\n                        status: 'SUCCESS',\n                        result: mockDimensions,\n                    } as AsyncResult<ProductDimensionFull[]>\n                },\n                {},\n                {},\n                mockContext\n            ) as IBuyboxProps<IBuyboxData>,\n            // @ts-ignore\n            renderView: jest.fn(props => { return <div props={props} />;}),\n            slots: mockSlots,\n            resources: mockResources\n        };\n\n        const result = mount(<Buybox {...moduleProps} />);\n\n        const viewProps: IBuyboxViewProps = result.childAt(0).props().props;\n\n        viewProps.callbacks.updateErrorState({\n            errorHost: 'ADDTOCART',\n            configureErrors: {\n                1: 'Error 1',\n                2: 'Error 2',\n                4: 'Error 4'\n            }\n        });\n\n        await viewProps.callbacks.dimensionSelectedAsync(4, '0');\n\n        // @ts-ignore gets confused by path\n        expect(result.state().errorState.configureErrors[4]).toBeUndefined();\n    });\n\n    it('dimensionSelectedAsync -- If getSelectedVariant returns null doesnt get dimensions', async () => {\n        moduleProps = {\n            ...buildMockModuleProps(\n                {\n                    ...mockData,\n                    product: {\n                        status: 'SUCCESS',\n                        result: {\n                            RecordId: 10\n                        },\n                    } as AsyncResult<SimpleProduct>,\n                    productDimensions: {\n                        status: 'SUCCESS',\n                        result: mockDimensions,\n                    } as AsyncResult<ProductDimensionFull[]>\n                },\n                {},\n                {},\n                mockContext\n            ) as IBuyboxProps<IBuyboxData>,\n            // @ts-ignore\n            renderView: jest.fn(props => { return <div props={props} />;}),\n            slots: mockSlots,\n            resources: mockResources\n        };\n\n        const result = mount(<Buybox {...moduleProps} />);\n\n        const viewProps: IBuyboxViewProps = result.childAt(0).props().props;\n\n        // @ts-ignore\n        RetailActions.getSelectedVariant = jest.fn().mockResolvedValue(undefined);\n        // @ts-ignore\n        RetailActions.getDimensionsForSelectedVariant = jest.fn().mockResolvedValue(undefined);\n\n        await viewProps.callbacks.dimensionSelectedAsync(4, '0');\n\n        // @ts-ignore\n        const selectedProduct = await result.state().selectedProduct;\n\n        expect(selectedProduct).toBeUndefined();\n        expect(RetailActions.getSelectedVariant).toBeCalled();\n        expect(RetailActions.getDimensionsForSelectedVariant).not.toBeCalled();\n    });\n\n    it('dimensionSelectedAsync -- If getSelectedVariant returns not null, does get dimensions', async () => {\n        moduleProps = {\n            ...buildMockModuleProps(\n                {\n                    ...mockData,\n                    product: {\n                        status: 'SUCCESS',\n                        result: {\n                            RecordId: 10\n                        },\n                    } as AsyncResult<SimpleProduct>,\n                    productDimensions: {\n                        status: 'SUCCESS',\n                        result: mockDimensions,\n                    } as AsyncResult<ProductDimensionFull[]>\n                },\n                {},\n                {},\n                mockContext\n            ) as IBuyboxProps<IBuyboxData>,\n            // @ts-ignore\n            renderView: jest.fn(props => { return <div props={props} />;}),\n            slots: mockSlots,\n            resources: mockResources\n        };\n\n        const result = mount(<Buybox {...moduleProps} />);\n\n        const viewProps: IBuyboxViewProps = result.childAt(0).props().props;\n\n        // @ts-ignore\n        RetailActions.getSelectedVariant = jest.fn().mockResolvedValue({RecordId: '10'});\n        // @ts-ignore\n        RetailActions.getDimensionsForSelectedVariant = jest.fn().mockResolvedValue(undefined);\n\n        await viewProps.callbacks.dimensionSelectedAsync(4, '0');\n\n        // @ts-ignore\n        const selectedProduct = await result.state().selectedProduct;\n\n        expect(selectedProduct).not.toBeUndefined();\n        expect(RetailActions.getSelectedVariant).toBeCalled();\n        expect(RetailActions.getDimensionsForSelectedVariant).toBeCalled();\n        expect(RetailActions.getPriceForSelectedVariant).toBeCalled();\n        expect(RetailActions.getDeliveryOptionsForSelectedVariant).toBeCalled();\n        expect(RetailActions.getProductAvailabilitiesForSelectedVariant).toBeCalled();\n    });\n\n    it('renders Inventory level label correctly, if getBuyBoxInventoryLabel returns AVAILABLE', async () => {\n        moduleProps = {\n            ...(buildMockModuleProps(\n                {\n                    ...mockData,\n                    product: {\n                        status: 'SUCCESS',\n                        result: {\n                            RecordId: 10\n                        }\n                    } as AsyncResult<SimpleProduct>,\n                    productDimensions: {\n                        status: 'SUCCESS',\n                        result: mockDimensions\n                    } as AsyncResult<ProductDimensionFull[]>,\n                    productAvailableQuantity: {\n                        status: 'SUCCESS',\n                        result: [\n                            {\n                                StockLevelLabel: 'Available',\n                                StockLevelCode:'X123',\n                                ProductAvailableQuantity: { AvailableQuantity:10 }\n                            }\n                        ]\n                    } as AsyncResult<RetailActions.IProductInventoryInformation[]>\n                },\n                {},\n                {},\n                mockContext\n            ) as IBuyboxProps<IBuyboxData>),\n            // @ts-ignore\n            renderView: jest.fn(props => { return <div props={props} />;}),\n            slots: mockSlots,\n            resources: mockResources\n        };\n        const result = mount(<Buybox {...moduleProps} />);\n        const viewProps: IBuyboxViewProps = result.childAt(0).props().props;\n        const test = mount(viewProps.inventoryLabel as React.ReactElement);\n        // @ts-ignore\n        RetailActions.getSelectedVariant = jest.fn().mockResolvedValue({ RecordId: '10' });\n        // @ts-ignore\n        RetailActions.getDimensionsForSelectedVariant = jest.fn().mockResolvedValue(undefined);\n\n        await viewProps.callbacks.dimensionSelectedAsync(4, '0');\n        // @ts-ignore\n        const selectedProduct = await result.state().selectedProduct;\n        expect(selectedProduct).not.toBeUndefined();\n        expect(RetailActions.getSelectedVariant).toBeCalled();\n        expect(RetailActions.getDimensionsForSelectedVariant).toBeCalled();\n        expect(RetailActions.getProductAvailabilitiesForSelectedVariant).toBeCalled();\n        expect(test.text()).toBe('Available');\n        expect(viewProps.inventoryLabel).toMatchSnapshot();\n    });\n\n    it('renders Inventory level label correctly, if getBuyBoxInventoryLabel returns LOW STOCK AVAIABLE', async () => {\n        moduleProps = {\n            ...(buildMockModuleProps(\n                {\n                    ...mockData,\n                    product: {\n                        status: 'SUCCESS',\n                        result: {\n                            RecordId: 10\n                        }\n                    } as AsyncResult<SimpleProduct>,\n                    productDimensions: {\n                        status: 'SUCCESS',\n                        result: mockDimensions\n                    } as AsyncResult<ProductDimensionFull[]>,\n                    productAvailableQuantity: {\n                        status: 'SUCCESS',\n                        result: [\n                            {\n                                StockLevelLabel: 'Low stock available',\n                                ProductAvailableQuantity: { AvailableQuantity:10 }\n                            }\n                        ]\n                    } as AsyncResult<RetailActions.IProductInventoryInformation[]>\n                },\n                {},\n                {},\n                mockContext\n            ) as IBuyboxProps<IBuyboxData>),\n            // @ts-ignore\n            renderView: jest.fn(props => {return <div props={props} />; }),\n            slots: mockSlots,\n            resources: mockResources\n        };\n\n        const result = mount(<Buybox {...moduleProps} />);\n\n        const viewProps: IBuyboxViewProps = result.childAt(0).props().props;\n        const test = mount(viewProps.inventoryLabel as React.ReactElement);\n\n        // @ts-ignore\n        RetailActions.getSelectedVariant = jest.fn().mockResolvedValue({ RecordId: '10' });\n        // @ts-ignore\n        RetailActions.getDimensionsForSelectedVariant = jest.fn().mockResolvedValue(undefined);\n\n        await viewProps.callbacks.dimensionSelectedAsync(4, '0');\n\n        // @ts-ignore\n        const selectedProduct = await result.state().selectedProduct;\n\n        expect(selectedProduct).not.toBeUndefined();\n        expect(RetailActions.getSelectedVariant).toBeCalled();\n        expect(RetailActions.getDimensionsForSelectedVariant).toBeCalled();\n        expect(RetailActions.getProductAvailabilitiesForSelectedVariant).toBeCalled();\n        expect(test.text()).toBe('Low stock available');\n        expect(viewProps.inventoryLabel).toMatchSnapshot();\n    });\n\n    it('renders Inventory level label correctly, if getBuyBoxInventoryLabel returns ONLY FEW AVAILABLE', async () => {\n        moduleProps = {\n            ...(buildMockModuleProps(\n                {\n                    ...mockData,\n                    product: {\n                        status: 'SUCCESS',\n                        result: {\n                            RecordId: 10\n                        }\n                    } as AsyncResult<SimpleProduct>,\n                    productDimensions: {\n                        status: 'SUCCESS',\n                        result: mockDimensions\n                    } as AsyncResult<ProductDimensionFull[]>,\n                    productAvailableQuantity: {\n                        status: 'SUCCESS',\n                        result: [\n                            {\n                                StockLevelLabel: 'Only few available',\n                                ProductAvailableQuantity: { AvailableQuantity:10 }\n                            }\n                        ]\n                    } as AsyncResult<RetailActions.IProductInventoryInformation[]>\n                },\n                {},\n                {},\n                mockContext\n            ) as IBuyboxProps<IBuyboxData>),\n            // @ts-ignore\n            renderView: jest.fn(props => { return <div props={props} />;}),\n            slots: mockSlots,\n            resources: mockResources\n        };\n\n        const result = mount(<Buybox {...moduleProps} />);\n\n        const viewProps: IBuyboxViewProps = result.childAt(0).props().props;\n        const test = mount(viewProps.inventoryLabel as React.ReactElement);\n\n        // @ts-ignore\n        RetailActions.getSelectedVariant = jest.fn().mockResolvedValue({ RecordId: '10' });\n        // @ts-ignore\n        RetailActions.getDimensionsForSelectedVariant = jest.fn().mockResolvedValue(undefined);\n\n        await viewProps.callbacks.dimensionSelectedAsync(4, '0');\n\n        // @ts-ignore\n        const selectedProduct = await result.state().selectedProduct;\n\n        expect(selectedProduct).not.toBeUndefined();\n        expect(RetailActions.getSelectedVariant).toBeCalled();\n        expect(RetailActions.getDimensionsForSelectedVariant).toBeCalled();\n        expect(RetailActions.getProductAvailabilitiesForSelectedVariant).toBeCalled();\n        expect(test.text()).toBe('Only few available');\n        expect(viewProps.inventoryLabel).toMatchSnapshot();\n    });\n\n    it('renders inventory label correctly, when add to cart fails with OUTOFSTOCK', async() => {\n      moduleProps = {\n          ...(buildMockModuleProps(\n              {\n                  ...mockData,\n                  product: {\n                      status: 'SUCCESS',\n                      result: {\n                          RecordId: 10\n                      }\n                  } as AsyncResult<SimpleProduct>\n              },\n              {},\n              {},\n              mockContext\n          ) as IBuyboxProps<IBuyboxData>),\n          // @ts-ignore\n          renderView: jest.fn(props => {return <div props={props} />;}),\n          slots: mockSlots,\n          resources: mockResources\n      };\n\n      const result = mount(<Buybox {...moduleProps} />);\n\n      expect(moduleProps.renderView).toBeCalled();\n\n      const viewProps: IBuyboxViewProps = result.childAt(0).props().props;\n      expect(viewProps).toBeDefined();\n      // @ts-ignore\n      const addToCartProps: IAddToCartComponentProps = viewProps.addToCart.button!.props;\n\n      addToCartProps.onError!({ failureReason: 'OUTOFSTOCK', stockLeft: 0 });\n      const state: IBuyboxState = result.state() as IBuyboxState;\n      expect(addToCartProps.outOfStockText).toEqual('Out of Stock');\n      expect(state.errorState.quantityError).toEqual('This product is out of stock');\n    });\n    it('renders Inventory level label correctly ,if getBuyBoxInventoryLabel returns undefined', async () => {\n        moduleProps = {\n            ...(buildMockModuleProps(\n                {\n                    ...mockData,\n                    product: {\n                        status: 'SUCCESS',\n                        result: {\n                            RecordId: 10\n                        }\n                    } as AsyncResult<SimpleProduct>,\n                    productDimensions: {\n                        status: 'SUCCESS',\n                        result: mockDimensions\n                    } as AsyncResult<ProductDimensionFull[]>,\n                    productAvailableQuantity: {\n                        status: 'LOADING',\n                        result: [\n                            {\n                            }\n                        ]\n                    } as AsyncResult<RetailActions.IProductInventoryInformation[]>\n                },\n                {},\n                {},\n                mockContext\n            ) as IBuyboxProps<IBuyboxData>),\n            // @ts-ignore\n            renderView: jest.fn(props => { return <div props={props} />;}),\n            slots: mockSlots,\n            resources: mockResources\n        };\n\n        const result = mount(<Buybox {...moduleProps} />);\n        const viewProps: IBuyboxViewProps = result.childAt(0).props().props;\n        expect(viewProps.inventoryLabel).toBe(undefined);\n    });\n    it('renders SimilarLook product', async () => {\n        moduleProps = {\n            ...(buildMockModuleProps(\n                {\n                    ...mockData,\n                    product: {\n                        status: 'SUCCESS',\n                        result: {\n                            RecordId: 10\n                        }\n                    } as AsyncResult<SimpleProduct>,\n                    ratingsSummary: {\n                        status: 'SUCCESS',\n                        result: {\n                            reviewsCount: 1000\n                        }\n                    },\n                    productDimensions: {\n                        status: 'SUCCESS',\n                        result: mockDimensions\n                    } as AsyncResult<ProductDimensionFull[]>,\n                    productAvailableQuantity: {\n                        status: 'SUCCESS',\n                        result: [\n                            {\n                                StockLevelLabel: 'Only few available'\n                            }\n                        ]\n                    } as AsyncResult<RetailActions.IProductInventoryInformation[]>\n                },\n                {},\n                {},\n                mockContext\n            ) as IBuyboxProps<IBuyboxData>),\n            // @ts-ignore\n            renderView: jest.fn(props => { return <div props={props} />;}),\n            slots: mockSlots,\n            resources: mockResources\n        };\n        const moduleProps2 = {...moduleProps,config:{enableShopSimilarLooks:true}};\n        const result = mount(<Buybox {...moduleProps2} />);\n        const viewProps: IBuyboxViewProps = result.childAt(0).props().props;\n        expect(viewProps.shopSimilarLook).toBeDefined();\n    });\n});"]}