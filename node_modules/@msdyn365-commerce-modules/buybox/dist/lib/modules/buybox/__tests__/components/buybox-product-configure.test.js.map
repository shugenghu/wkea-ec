{"version":3,"file":"buybox-product-configure.test.js","sourceRoot":"./src/","sources":["modules/buybox/__tests__/components/buybox-product-configure.test.tsx"],"names":[],"mappings":"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","sourcesContent":["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { ProductDimensionFull } from '@msdyn365-commerce/commerce-entities';\nimport { buildMockModuleProps } from '@msdyn365-commerce/core';\nimport { AsyncResult, SimpleProduct } from '@msdyn365-commerce/retail-proxy';\nimport { IBuyboxCallbacks, IBuyboxData, IBuyboxProps, IBuyboxState } from '../../../../index';\nimport { mockResources } from '../../__mocks__/mock-resources';\nimport { getBuyboxProductConfigure } from '../../components';\n\nconst mockDimensions = [\n    {\n        DimensionTypeValue: 3,\n        DimensionValues: [{\n                RecordId:22565421223,\n                Value:'32',\n                ExtensionProperties:[]\n              },{\n                RecordId:22565421225,\n                Value:'36',\n                ExtensionProperties:[]\n              },{\n                RecordId:22565421226,\n                Value:'38',\n                ExtensionProperties:[]\n              },{\n                RecordId:22565421227,\n                Value:'40',\n                ExtensionProperties:[]\n              },{\n                RecordId:22565421228,\n                Value:'42',\n                ExtensionProperties:[]\n              },{\n                RecordId:22565421229,\n                Value:'44',\n                ExtensionProperties:[]\n              },{\n                RecordId:22565421230,\n                Value:'46',\n                ExtensionProperties:[]\n              },{\n                RecordId:22565421231,\n                Value:'48',\n                ExtensionProperties:[]\n              }\n        ]\n    },\n    {\n        DimensionTypeValue: 1,\n        DimensionValues: [\n            {\n                RecordId:22565421201,\n                Value: 'Light Blue',\n                ExtensionProperties:[]\n            }\n        ]\n    },\n    {\n        DimensionTypeValue: 4,\n        DimensionValues: [{\n                RecordId:5637144584,\n                Value: 'Big',\n                ExtensionProperties:[]\n            },{\n                RecordId:5637144583,\n                Value:'Regular',\n                ExtensionProperties:[]\n            }\n        ]\n    },\n    {\n        DimensionTypeValue: 2,\n        DimensionValues: [{\n            RecordId:56371445841,\n            ExtensionProperties:[]\n        },{\n            RecordId:56371445831,\n            ExtensionProperties:[]\n        }\n    ]\n    },\n    {\n        DimensionTypeValue: 5\n    }\n];\n\nconst mockState: IBuyboxState = {\n    quantity: 0,\n    errorState: {\n        configureErrors: {}\n    },\n    selectedDimensions: {}\n};\n\nconst mockCallbacks: IBuyboxCallbacks = {\n    updateQuantity: jest.fn(),\n    updateErrorState: jest.fn(),\n    dimensionSelectedAsync: jest.fn(),\n    updateSelectedProduct: jest.fn(),\n    getDropdownName: jest.fn(),\n    changeModalOpen: jest.fn(),\n    changeUpdatingDimension: jest.fn()\n\n};\n\ndescribe('Buybox Product Configure', () => {\n    let moduleProps: IBuyboxProps<IBuyboxData>;\n\n    beforeEach(() => {\n        mockCallbacks.getDropdownName = jest.fn().mockReturnValue('Dimension');\n\n        mockCallbacks.dimensionSelectedAsync = jest.fn();\n    });\n\n    it('Returns undefined when no product or dimensions present', () => {\n        moduleProps = {\n            ...buildMockModuleProps(\n                {\n                    product: {\n                        status: 'FAILED',\n                        result: undefined\n                    } as AsyncResult<SimpleProduct>,\n                    productDimensions: {\n                        status: 'FAILED',\n                        result: undefined,\n                    } as AsyncResult<ProductDimensionFull[]>,                },\n                {},\n                {}\n            ),\n            resources: mockResources\n        } as IBuyboxProps<IBuyboxData>;\n        const configure = getBuyboxProductConfigure(moduleProps, mockState, mockCallbacks);\n        expect(configure).toBeUndefined();\n    });\n\n    it('Returns undefined when dimensions list is empty', () => {\n        moduleProps = {\n            ...buildMockModuleProps(\n                {\n                    product: {\n                        status: 'SUCCESS',\n                        result: {}\n                    } as AsyncResult<SimpleProduct>,\n                    productDimensions: {\n                        status: 'SUCCESS',\n                        result: [] as ProductDimensionFull[],\n                    } as AsyncResult<ProductDimensionFull[]>,                },\n                {},\n                {}\n            ),\n            resources: mockResources\n        } as IBuyboxProps<IBuyboxData>;\n        const configure = getBuyboxProductConfigure(moduleProps, mockState, mockCallbacks);\n        expect(configure).toBeUndefined();\n    });\n\n    it('Returns expected results when dimensions list is not empty', () => {\n        moduleProps = {\n            ...buildMockModuleProps(\n                {\n                    product: {\n                        status: 'SUCCESS',\n                        result: {}\n                    } as AsyncResult<SimpleProduct>,\n                    productDimensions: {\n                        status: 'SUCCESS',\n                        result: mockDimensions,\n                    } as AsyncResult<ProductDimensionFull[]>,                },\n                {},\n                {}\n            ),\n            resources: mockResources\n        } as IBuyboxProps<IBuyboxData>;\n        const configure = getBuyboxProductConfigure(moduleProps, mockState, mockCallbacks);\n        expect(configure).not.toBeUndefined();\n        expect(configure!.dropdowns.length).toBe(5);\n    });\n\n    it('Returns errors if the right errors are set', () => {\n        const mockStateWithErrors = {\n            ...mockState,\n            errorState: {\n                configureErrors: {\n                    1: 'Error for 1'\n                }\n            },\n        };\n\n        moduleProps = {\n            ...buildMockModuleProps(\n                {\n                    product: {\n                        status: 'SUCCESS',\n                        result: {}\n                    } as AsyncResult<SimpleProduct>,\n                    productDimensions: {\n                        status: 'SUCCESS',\n                        result: mockDimensions,\n                    } as AsyncResult<ProductDimensionFull[]>,                },\n                {},\n                {}\n            ),\n            resources: mockResources\n        } as IBuyboxProps<IBuyboxData>;\n        const configure = getBuyboxProductConfigure(moduleProps, mockStateWithErrors, mockCallbacks);\n        expect(configure).not.toBeUndefined();\n        expect(configure!.dropdowns.length).toBe(5);\n        expect(configure!.dropdowns[1].errors).toBeDefined();\n    });\n\n    it('Calls dimensionSelectedAsync when dimension value changes', async () => {\n        moduleProps = {\n            ...buildMockModuleProps(\n                {\n                    product: {\n                        status: 'SUCCESS',\n                        result: {}\n                    } as AsyncResult<SimpleProduct>,\n                    productDimensions: {\n                        status: 'SUCCESS',\n                        result: mockDimensions,\n                    } as AsyncResult<ProductDimensionFull[]>,                },\n                {},\n                {}\n            ),\n            resources: mockResources\n        } as IBuyboxProps<IBuyboxData>;\n        const configure = getBuyboxProductConfigure(moduleProps, mockState, mockCallbacks);\n        expect(configure).not.toBeUndefined();\n        expect(configure!.dropdowns.length).toBe(5);\n        // @ts-ignore\n        const dropdownProps = configure!.dropdowns[0].select.props;\n        expect(dropdownProps.onChange).toBeDefined();\n\n        await dropdownProps.onChange!({\n            dropdownId: '3',\n            selectId: '1',\n            selectedValue: '36'\n        });\n\n        expect(mockCallbacks.dimensionSelectedAsync).toBeCalled();\n    });\n\n    /*\n    it('properly responds to onChanged events when dimension value changes amd getSelectedVariant returns', async () => {\n        moduleProps = {\n            ...buildMockModuleProps(\n                {\n                    product: {\n                        status: 'SUCCESS',\n                        result: {}\n                    } as AsyncResult<SimpleProduct>,\n                    productDimensions: {\n                        status: 'SUCCESS',\n                        result: mockDimensions,\n                    } as AsyncResult<ProductDimensionFull[]>,                },\n                {},\n                {}\n            ),\n            resources: mockResources\n        } as IBuyboxProps<IBuyboxData>;\n        const configure = getBuyboxProductConfigure(moduleProps, mockState, mockCallbacks);\n        expect(configure).not.toBeUndefined();\n        expect(configure!.dropdowns.length).toBe(5);\n        // @ts-ignore\n        const dropdownProps = configure!.dropdowns[0].select.props;\n        expect(dropdownProps.onChange).toBeDefined();\n\n        // @ts-ignore\n        RetailActions.getSelectedVariant = jest.fn().mockResolvedValue({RecordId: '10'});\n        // @ts-ignore\n        RetailActions.getDimensionsForSelectedVariant = jest.fn().mockResolvedValue(undefined);\n\n        await dropdownProps.onChange!({\n            dropdownId: '3',\n            selectId: '1',\n            selectedValue: '36'\n        });\n\n        expect(RetailActions.getSelectedVariant).toBeCalled();\n        expect(RetailActions.getDimensionsForSelectedVariant).toBeCalled();\n    });\n    */\n});"]}