export const mockResources = {
    findInStoreLinkText: 'Find in store',
    findInStoreHeaderText: 'Buy now, pick up in a store',
    findInStoreDescriptionText: 'Search for product availability at stores within {radius} miles of you.',
    priceFree: 'Free',
    originalPriceText: 'Was:',
    currentPriceText: 'Now:',
    addToCartText: 'Add to cart',
    outOfStockText: 'Out of Stock',
    averageRatingAriaLabel: 'Average {0} of {1} stars',
    selectDimensionFormatString: 'Choose a {0}',
    productDimensionTypeColor: 'Color',
    productDimensionTypeConfiguration: 'Configuration',
    productDimensionTypeSize: 'Size',
    productDimensionTypeStyle: 'Style',
    addToOrderTemplateButtonText: 'Add to order template',
    addToOrderTemplateMessage: 'Added to your order template',
    addItemToOrderTemplateError: 'Unable to add item to order template',
    addToWishlistButtonText: 'Add to Wishlist',
    createOrderTemplateHeader: 'createOrderTemplateHeader',
    orderTemplateTitle: 'orderTemplateTitle',
    orderTemplateNameAriaLabel: 'orderTemplateNameAriaLabel',
    createOrderTemplateDescription: 'createOrderTemplateDescription',
    defaultOrderTemplateName: 'defaultOrderTemplateName',
    createOrderTemplateButtonText: 'createOrderTemplateButtonText',
    createNewOrderTemplateButtonText: 'createNewOrderTemplateButtonText',
    cancelNewOrderTemplateCreationButtonText: 'cancelNewOrderTemplateCreationButtonText',
    addToOrderTemplateHeader: 'addToOrderTemplateHeader',
    noOrderTemplatesMessage: 'noOrderTemplatesMessage',
    noOrderTemplatesDescription: 'noOrderTemplatesDescription',
    createAnOrderTemplateButtonText: 'createAnOrderTemplateButtonText',
    cancelOrderTemplateCreationButtonText: 'cancelOrderTemplateCreationButtonText',
    viewOrderTemplateButtonText: 'viewOrderTemplateButtonText',
    continueShoppingButtonText: 'continueShoppingButtonText',
    itemAddedToOrderTemplateHeaderItemOneText: 'itemAddedToOrderTemplateHeaderItemOneText',
    itemAddedToOrderTemplateHeaderItemFormatText: 'itemAddedToOrderTemplateHeaderItemFormatText',
    itemAddedToOrderTemplateHeaderMessageText: 'itemAddedToOrderTemplateHeaderMessageText',
    duplicatedProductsHeader: 'duplicatedProductsHeader',
    duplicatedProductsDescription: 'duplicatedProductsDescription',
    updateQuantityButtonText: 'updateQuantityButtonText',
    cancelDuplicateItemsButtonText: 'cancelDuplicateItemsButtonText',
    selectTemplatesText: 'Select a template or create a new one. You have {0} template(s).',
    addToTemplateButtonText: 'Add to template',
    lineItemsText: '{0} line item(s)',
    removeFromWishlistButtonText: 'Remove from Wishlist',
    addToWishlistMessage: 'Added to your wishlist',
    removedFromWishlistMessage: 'Removed from your wishlist',
    addItemToWishlistError: 'Unable to add item to wishlist',
    removeItemFromWishlistError: 'Unable to remove item from wishlist',
    nameOfWishlist: 'My Wishlist',
    inputQuantityAriaLabel: 'Quantity To Purchase',
    productQuantityHeading: 'Quantity',
    errorMessageOutOfStock: 'This product is out of stock',
    errorMessageOutOfRangeOneLeft: 'There is only one product left. Please choose quantity within the available range',
    errorMessageOutOfRangeFormat: 'There are only {numLeft} products left. Please choose quantity within the available range',
    productDimensionTypeColorErrorMessage: 'Color is required. Please choose a color',
    productDimensionTypeConfigurationErrorMessage: 'Configuration is required. Please choose a configuration',
    productDimensionTypeSizeErrorMessage: 'Size is required. Please choose a size',
    productDimensionTypeStyleErrorMessage: 'Style is required. Please choose a style',
    buyboxErrorMessageHeader: 'There are some issues',
    addedToCartFailureMessage: 'Add to cart failed. Please refresh and retry',
    maxQuantityLimitText: 'You already have {curQuantity} of this item in your shopping bag. You can only add {maxQuantity} of this item to your shopping bag',
    shopSimilarLooksText: 'Shop Similar Looks',
    buyBoxGoToCartText: 'View bag and checkout',
    buyBoxContinueShoppingText: 'Continue shopping',
    buyBoxSingleItemText: '1 item',
    buyBoxMultiLineItemFormatText: '{0} items',
    buyBoxHeaderMessageText: ' added to bag'
};
//# sourceMappingURL=mock-resources.js.map