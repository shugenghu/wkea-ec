{"version":3,"file":"buybox.js","sourceRoot":"./src/","sources":["modules/buybox/buybox.tsx"],"names":[],"mappings":"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","sourcesContent":["import {\n    getDeliveryOptionsForSelectedVariant,\n    GetDeliveryOptionsForSelectedVariantInput,\n    getDimensionsForSelectedVariant,\n    GetDimensionsForSelectedVariantInput,\n    getPriceForSelectedVariant,\n    getProductAvailabilitiesForSelectedVariant,\n    getSelectedVariant,\n    IProductInventoryInformation,\n    PriceForSelectedVariantInput,\n    ProductAvailabilitiesForSelectedVariantInput,\n    SelectedVariantInput } from '@msdyn365-commerce-modules/retail-actions';\nimport { getTelemetryObject, IModuleProps, INodeProps, ITelemetryContent } from '@msdyn365-commerce-modules/utilities';\nimport { ProductDimensionFull } from '@msdyn365-commerce/commerce-entities';\nimport { ProductDeliveryOptions, ProductDimensionValue, ProductPrice, SimpleProduct } from '@msdyn365-commerce/retail-proxy';\nimport { ReleasedProductType } from '@msdyn365-commerce/retail-proxy/dist/Entities/CommerceTypes.g';\nimport classnames from 'classnames';\nimport * as React from 'react';\nimport { IBuyboxData, IBuyboxProps } from '../..';\nimport { IBuyboxResources } from './buybox.props.autogenerated';\nimport {\n    getBuyboxAddToCart,\n    getBuyboxFindInStore,\n    getBuyBoxInventoryLabel,\n    getBuyboxProductAddToOrderTemplate,\n    getBuyboxProductAddToWishlist,\n    getBuyboxProductConfigure,\n    getBuyboxProductDescription,\n    getBuyboxProductPrice,\n    getBuyboxProductQuantity,\n    getBuyboxProductRating,\n    getBuyboxProductTitle,\n    getBuyboxShopSimilarLook,\n    IBuyboxAddToCartViewProps,\n    IBuyboxAddToOrderTemplateViewProps,\n    IBuyboxAddToWishlistViewProps,\n    IBuyboxFindInStoreViewProps,\n    IBuyboxProductConfigureViewProps,\n    IBuyboxProductQuantityViewProps,\n    IBuyboxShopSimilarLookViewProps } from './components';\n\nexport declare type IBuyboxErrorHost = 'ADDTOCART' | 'FINDINSTORE' | 'WISHLIST' | 'SHOPSIMILARITEM' | 'ORDER_TEMPLATE';\n\nexport interface IErrorState {\n    errorHost?: IBuyboxErrorHost;\n\n    configureErrors: { [configureId: string]: string | undefined };\n    quantityError?: string;\n    otherError?: string;\n}\n\nexport interface IBuyboxCallbacks {\n    updateQuantity(newQuantity: number): void;\n    updateErrorState(newErrorState: IErrorState): void;\n    updateSelectedProduct(\n        selectedProduct: Promise<SimpleProduct | null>,\n        newInventory: IProductInventoryInformation | undefined,\n        newPrice: ProductPrice | undefined,\n        newDeliveryOptions: ProductDeliveryOptions | undefined): void;\n    getDropdownName(dimensionType: number, resources: IBuyboxResources): string;\n    dimensionSelectedAsync(selectedDimensionId: number, selectedDimensionValueId: string): Promise<void>;\n    changeModalOpen(isModalOpen: boolean): void;\n    changeUpdatingDimension(isUpdatingDimension: boolean): void;\n}\n\nexport interface IBuyboxState {\n    quantity: number;\n    errorState: IErrorState;\n    selectedDimensions: { [id: number]: string | undefined };\n    selectedProduct?: Promise<SimpleProduct | null>;\n    productAvailableQuantity?: IProductInventoryInformation;\n    productPrice?: ProductPrice;\n    productDeliveryOptions?: ProductDeliveryOptions;\n    modalOpen?: boolean;\n    isUpdatingDimension?: boolean;\n    isServiceItem?: boolean;\n}\n\nexport interface IBuyboxViewProps extends IBuyboxProps<IBuyboxData> {\n    state: IBuyboxState;\n\n    ModuleProps: IModuleProps;\n    ProductInfoContainerProps: INodeProps;\n    MediaGalleryContainerProps: INodeProps;\n\n    callbacks: IBuyboxCallbacks;\n\n    mediaGallery?: React.ReactNode;\n\n    title?: React.ReactNode;\n    description?: React.ReactNode;\n    rating?: React.ReactNode;\n    price?: React.ReactNode;\n    addToOrderTemplate?: IBuyboxAddToOrderTemplateViewProps;\n    addToWishlist?: IBuyboxAddToWishlistViewProps;\n\n    addToCart: IBuyboxAddToCartViewProps;\n    findInStore?: IBuyboxFindInStoreViewProps;\n    quantity?: IBuyboxProductQuantityViewProps;\n    configure?: IBuyboxProductConfigureViewProps;\n    inventoryLabel?: React.ReactNode;\n    shopSimilarLook?: IBuyboxShopSimilarLookViewProps;\n    telemetryContent?: ITelemetryContent;\n}\n\n/**\n * Buybox Module\n */\nclass Buybox extends React.PureComponent<IBuyboxProps<IBuyboxData>, IBuyboxState> {\n    private buyboxCallbacks: IBuyboxCallbacks = {\n        updateQuantity: (newQuantity: number): void => {\n            const errorState = {...this.state.errorState};\n            errorState.quantityError = undefined;\n            errorState.otherError = undefined;\n\n            this.setState({quantity: newQuantity, errorState: errorState});\n        },\n        updateErrorState: (newErrorState: IErrorState): void => {\n            this.setState({errorState: newErrorState});\n        },\n        updateSelectedProduct: (\n            newSelectedProduct: Promise<SimpleProduct | null>,\n            newInventory: IProductInventoryInformation | undefined,\n            newPrice: ProductPrice | undefined,\n            newDeliveryOptions: ProductDeliveryOptions | undefined\n        ): void => {\n            this.setState({\n                selectedProduct: newSelectedProduct,\n                productAvailableQuantity: newInventory,\n                productPrice: newPrice,\n                productDeliveryOptions: newDeliveryOptions});\n        },\n        dimensionSelectedAsync: (selectedDimensionId: number, selectedDimensionValueId: string): Promise<void> => {\n            return this._dimensionSelected(selectedDimensionId, selectedDimensionValueId);\n        },\n        getDropdownName:  (dimensionType: number, resources: IBuyboxResources): string => {\n            return this._getDropdownName(dimensionType, resources);\n        },\n        changeModalOpen: (isModalOpen: boolean): void => {\n            this.setState({modalOpen: isModalOpen});\n        },\n        changeUpdatingDimension: (isUpdatingDimension: boolean): void => {\n            this.setState({isUpdatingDimension: isUpdatingDimension});\n        }\n    };\n\n    private telemetryContent: ITelemetryContent;\n\n    constructor(props: IBuyboxProps<IBuyboxData>, state: IBuyboxState) {\n        super(props);\n        this.state = {\n            errorState: {\n                configureErrors: {}\n            },\n            quantity: 1,\n            selectedProduct: undefined,\n            selectedDimensions: {},\n            productPrice: undefined,\n            productDeliveryOptions: undefined,\n\n            modalOpen: false,\n            isUpdatingDimension: false\n        };\n        this.telemetryContent = getTelemetryObject(props.context.request.telemetryPageName!, props.friendlyName, props.telemetry);\n    }\n\n    public render(): JSX.Element | null {\n        const {\n            slots: {\n                mediaGallery,\n            },\n            data: {\n                product: { result: product }\n            },\n            config: { className = '' }\n        } = this.props;\n\n        if (!product) {\n            this.props.context.telemetry.error('Product content is empty, module wont render');\n            return null;\n        }\n\n        const viewProps: IBuyboxViewProps = {\n            ...(this.props as IBuyboxProps<IBuyboxData>),\n            state: this.state,\n            mediaGallery: mediaGallery && mediaGallery.length > 0 ? mediaGallery[0] : undefined,\n            ModuleProps: {\n                moduleProps: this.props,\n                className: classnames('ms-buybox', className)\n            },\n            ProductInfoContainerProps: {\n                className: 'ms-buybox__content'\n            },\n            MediaGalleryContainerProps: {\n                className: 'ms-buybox__media-gallery'\n            },\n            telemetryContent: this.telemetryContent,\n            callbacks: this.buyboxCallbacks,\n            title: getBuyboxProductTitle(this.props),\n            description: getBuyboxProductDescription(this.props),\n            configure: getBuyboxProductConfigure(this.props, this.state, this.buyboxCallbacks),\n            findInStore: getBuyboxFindInStore(this.props, this.state, this.buyboxCallbacks),\n            price: getBuyboxProductPrice(this.props),\n            addToCart: getBuyboxAddToCart(this.props, this.state, this.buyboxCallbacks),\n            addToOrderTemplate: getBuyboxProductAddToOrderTemplate(this.props, this.state, this.buyboxCallbacks),\n            addToWishlist: getBuyboxProductAddToWishlist(this.props, this.state, this.buyboxCallbacks),\n            rating: !this.props.context.app.config.hideRating && getBuyboxProductRating(this.props),\n            quantity: getBuyboxProductQuantity(this.props, this.state, this.buyboxCallbacks),\n            inventoryLabel: getBuyBoxInventoryLabel(this.props),\n            shopSimilarLook: this.props.config.enableShopSimilarLooks ? getBuyboxShopSimilarLook(this.props, this.state, this.buyboxCallbacks) : undefined\n        };\n\n        return this.props.renderView(viewProps) as React.ReactElement;\n    }\n\n    // tslint:disable-next-line:max-func-body-length\n    private _dimensionSelected = async (selectedDimensionId: number, selectedDimensionValue?: string): Promise<void> => {\n        const {\n            data: {\n                product: {result: product },\n                productDimensions: {result: productDimensions },\n            },\n            context: {\n                actionContext,\n                request: {\n                    apiSettings: {\n                        channelId\n                    }\n                }\n            }\n        } = this.props;\n        const\n        {\n            selectedDimensions\n        } = this.state;\n\n        if (!product || !productDimensions) {\n            return;\n        }\n        // Step 1: Update state to indicate which dimensions are selected\n        if (this.state.errorState.otherError) {\n            const clearOtherErrorState = {...this.state.errorState};\n            clearOtherErrorState.otherError = undefined;\n            this.setState({errorState: clearOtherErrorState});\n        }\n\n        const newSelectedDimensions: { [id: number]: string | undefined } = {...selectedDimensions};\n        newSelectedDimensions[selectedDimensionId] = selectedDimensionValue;\n        this.setState({selectedDimensions: newSelectedDimensions, isUpdatingDimension: true});\n\n        // Step 2: Clear any errors indicating the dimension wasn't selected\n        if (this.state.errorState.configureErrors[selectedDimensionId]) {\n            const errorState = {...this.state.errorState};\n            errorState.configureErrors[selectedDimensionId] = undefined;\n\n            this.setState({errorState: errorState});\n        }\n        // Step 3, Build the actually selected dimensions, prioritizing the information in state\n        // over the information in data\n        const mappedDimensions = productDimensions.map(dimension => {\n            return {\n                DimensionTypeValue: dimension.DimensionTypeValue,\n                DimensionValue: this._updateDimensionValue(dimension, newSelectedDimensions[dimension.DimensionTypeValue]) || dimension.DimensionValue,\n                ExtensionProperties: dimension.ExtensionProperties\n            };\n        }).filter(dimension => {\n            return dimension && dimension.DimensionValue;\n        });\n        // Step 4. Use these dimensions hydrate the product. Wrap this in a promise\n        // so that places like add to cart can await it\n        const selectedProduct = new Promise<SimpleProduct | null>(async (resolve, reject) => {\n            const newProduct = (await getSelectedVariant(\n                new SelectedVariantInput(\n                    product.MasterProductId ? product.MasterProductId : product.RecordId,\n                    channelId,\n                    mappedDimensions\n                ),\n                actionContext\n            ));\n            if (newProduct) {\n                await getDimensionsForSelectedVariant(\n                    new GetDimensionsForSelectedVariantInput(\n                        newProduct.MasterProductId ? newProduct.MasterProductId : newProduct.RecordId,\n                        channelId,\n                        mappedDimensions\n                    ),\n                    actionContext\n                );\n            }\n\n            resolve(newProduct);\n        });\n        this.setState({selectedProduct: selectedProduct});\n        const variantProduct = await selectedProduct;\n\n        if(variantProduct) {\n            // Step 5. Use these dimensions hydrate the inventory. Wrap this in a promise\n            // so that places like add to cart can await it\n            const newAvailableQuantity = await getProductAvailabilitiesForSelectedVariant(\n                new ProductAvailabilitiesForSelectedVariantInput(\n                    variantProduct.RecordId,\n                    channelId\n                ),\n                actionContext\n            );\n\n            // check if the product is service or not by product type\n            const PRODUCTASSERVICE = 2 as ReleasedProductType.Service;\n            if (variantProduct.ItemTypeValue === PRODUCTASSERVICE) {\n                this.setState({isServiceItem: true});\n            }\n\n            if(newAvailableQuantity && newAvailableQuantity.length) {\n                this.setState({productAvailableQuantity: newAvailableQuantity[0]});\n            } else {\n                this.setState({productAvailableQuantity: undefined});\n            }\n\n            // Step 6. Use these dimensions hydrate the product price.\n            const newPrice = await getPriceForSelectedVariant(\n                new PriceForSelectedVariantInput(\n                    variantProduct.RecordId,\n                    channelId\n                ),\n                actionContext\n            );\n\n            if(newPrice) {\n                this.setState({productPrice: newPrice});\n            }\n\n            // Step 7. Use these dimensions hydrate the product delivery options.\n            const newDeliveryOptions = await getDeliveryOptionsForSelectedVariant(\n                new GetDeliveryOptionsForSelectedVariantInput(\n                    variantProduct.RecordId,\n                    channelId\n                ),\n                actionContext\n            );\n\n            if(newDeliveryOptions) {\n                this.setState({productDeliveryOptions: newDeliveryOptions});\n            }\n        }\n    }\n\n    private _updateDimensionValue = (productDimensionFull: ProductDimensionFull, newValueId: string | undefined): ProductDimensionValue | undefined => {\n        if (newValueId && productDimensionFull.DimensionValues) {\n            return productDimensionFull.DimensionValues.find(dimension => dimension.RecordId === +newValueId);\n        }\n\n        return undefined;\n    };\n\n    private _getDropdownName = (dimensionType: number, resources: IBuyboxResources): string => {\n        switch (dimensionType) {\n            case 1: // ProductDimensionType.Color\n                return resources.productDimensionTypeColor;\n            case 2: // ProductDimensionType.Configuration\n                return resources.productDimensionTypeConfiguration;\n            case 3: // ProductDimensionType.Size\n                return resources.productDimensionTypeSize;\n            case 4: // ProductDimensionType.Style\n                return resources.productDimensionTypeStyle;\n            default:\n                return '';\n        }\n    };\n}\n\nexport default Buybox;\n"]}