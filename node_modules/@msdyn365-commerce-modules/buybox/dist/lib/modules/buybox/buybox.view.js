import * as React from 'react';
import { Module, Node } from '@msdyn365-commerce-modules/utilities';
const BuyboxView = props => {
    const { ModuleProps, MediaGalleryContainerProps, ProductInfoContainerProps, addToCart, addToOrderTemplate, addToWishlist, configure, description, findInStore, quantity, price, title, rating, inventoryLabel, shopSimilarLook } = props;
    return (React.createElement(Module, Object.assign({}, ModuleProps),
        React.createElement(Node, Object.assign({}, MediaGalleryContainerProps), props.mediaGallery),
        React.createElement(Node, Object.assign({}, ProductInfoContainerProps),
            title,
            price,
            description,
            rating,
            configure && _renderConfigure(configure),
            quantity && _renderQuantity(quantity),
            inventoryLabel,
            addToCart && _renderAddToCart(addToCart),
            findInStore && _renderFindInStore(findInStore),
            addToOrderTemplate && _renderAddToOrderTemplate(addToOrderTemplate),
            addToWishlist && _renderAddToWishlist(addToWishlist),
            _renderSocialShare(props.slots && props.slots.socialShare),
            shopSimilarLook && _renderShopSimilarItem(shopSimilarLook))));
};
const _renderAddToCart = (addToCart) => {
    const { ContainerProps, errorBlock, button } = addToCart;
    return (React.createElement(Node, Object.assign({}, ContainerProps),
        errorBlock,
        button));
};
const _renderAddToOrderTemplate = (addToOrderTemplate) => {
    const { ContainerProps, errorBlock, button } = addToOrderTemplate;
    return (React.createElement(Node, Object.assign({}, ContainerProps),
        errorBlock,
        button));
};
const _renderAddToWishlist = (addToWishlist) => {
    const { ContainerProps, errorBlock, button } = addToWishlist;
    return (React.createElement(Node, Object.assign({}, ContainerProps),
        errorBlock,
        button));
};
const _renderConfigure = (configure) => {
    const { ContainerProps, dropdowns } = configure;
    return (React.createElement(Node, Object.assign({}, ContainerProps), dropdowns.map(_renderConfigureDropdown)));
};
const _renderSocialShare = (socialShare) => {
    if (!socialShare || socialShare.length === 0) {
        return undefined;
    }
    return (React.createElement(React.Fragment, null, socialShare[0]));
};
const _renderConfigureDropdown = (dropdown) => {
    const { ContainerProps, LabelContainerProps, heading, errors, select } = dropdown;
    return (React.createElement(Node, Object.assign({}, ContainerProps),
        React.createElement(Node, Object.assign({}, LabelContainerProps),
            heading,
            errors),
        select));
};
const _renderFindInStore = (findInStore) => {
    const { ContainerProps, storeSelector, heading, description, errors, button, modal } = findInStore;
    return (React.createElement(Node, Object.assign({}, ContainerProps),
        storeSelector,
        heading,
        description,
        errors,
        button,
        modal));
};
const _renderQuantity = (quantity) => {
    const { ContainerProps, LabelContainerProps, heading, input, errors } = quantity;
    return (React.createElement(Node, Object.assign({}, ContainerProps),
        React.createElement(Node, Object.assign({}, LabelContainerProps),
            heading,
            errors),
        input));
};
const _renderShopSimilarItem = (shopSimilarItem) => {
    const { ContainerProps, errors, input } = shopSimilarItem;
    return (React.createElement(Node, Object.assign({}, ContainerProps),
        errors,
        input));
};
export default BuyboxView;
//# sourceMappingURL=buybox.view.js.map