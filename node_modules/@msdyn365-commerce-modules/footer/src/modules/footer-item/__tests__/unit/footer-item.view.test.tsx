/*---------------------------------------------------------------------------------------------
 *  Copyright (c) Microsoft Corporation. All rights reserved.
 *  Licensed under the MIT License. See License.txt in the project root for license information.
 *--------------------------------------------------------------------------------------------*/

import { buildMockModuleProps } from '@msdyn365-commerce/core';
import { render } from 'enzyme';
import * as React from 'react';
import { IFooterViewProps } from '../../footer-item';
import { IFooterItemConfig, IFooterItemProps } from '../../footer-item.props.autogenerated';
import { FooterItemView } from '../../footer-item.view';

describe('footer item view tests', () => {
    it('renders correctly', () => {
        const moduleConfig: IFooterItemConfig = {
            className:'class-mock'
        };
        // @ts-ignore
        const moduleProps: IFooterItemProps<IFooterItemConfig> = buildMockModuleProps({},{},moduleConfig);
        const viewprops: IFooterViewProps = {
            ...moduleProps,
            heading:'{heading}',
            text:'{text}',
            image:'{image}',
            linkText:'link text',
            FooterItem: { moduleProps, className: 'module-class-FooterItem' },
            Link: { className: 'mock-class-Link' },
            HeadingContainer: { className: 'mock-class-HeadingContainer' },
            ItemContainer: { className: 'mock-class-ItemContainer' },
            EditableLink: '{link}'
        };

        const view= render(<FooterItemView {...viewprops}/>);
        expect(view).toMatchSnapshot();
    });

    it('renders correctly without heading', () => {
        const moduleConfig: IFooterItemConfig = {
            className:'class-mock'
        };
        // @ts-ignore
        const moduleProps: IFooterItemProps<IFooterItemConfig> = buildMockModuleProps({},{},moduleConfig);
        const viewprops: IFooterViewProps = {
            ...moduleProps,
            heading:'',
            text:'{text}',
            image:'{image}',
            linkText:'link text',
            FooterItem: { moduleProps, className: 'module-class-FooterItem' },
            Link: { className: 'mock-class-Link' },
            HeadingContainer: { className: 'mock-class-HeadingContainer' },
            ItemContainer: { className: 'mock-class-ItemContainer' },
            EditableLink: '{link}'
        };

        const view= render(<FooterItemView {...viewprops}/>);
        expect(view).toMatchSnapshot();
    });

    it('renders correctly without heading & image', () => {
        const moduleConfig: IFooterItemConfig = {
            className:'class-mock'
        };
        // @ts-ignore
        const moduleProps: IFooterItemProps<IFooterItemConfig> = buildMockModuleProps({},{},moduleConfig);
        const viewprops: IFooterViewProps = {
            ...moduleProps,
            heading:'',
            text:'{text}',
            image:'',
            linkText:'link text',
            FooterItem: { moduleProps, className: 'module-class-FooterItem' },
            Link: { className: 'mock-class-Link' },
            HeadingContainer: { className: 'mock-class-HeadingContainer' },
            ItemContainer: { className: 'mock-class-ItemContainer' },
            EditableLink: '{link}'
        };

        const view= render(<FooterItemView {...viewprops}/>);
        expect(view).toMatchSnapshot();
    });
 });