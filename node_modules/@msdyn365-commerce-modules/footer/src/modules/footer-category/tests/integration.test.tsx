/*---------------------------------------------------------------------------------------------
 *  Copyright (c) Microsoft Corporation. All rights reserved.
 *  Licensed under the MIT License. See License.txt in the project root for license information.
 *--------------------------------------------------------------------------------------------*/

import { buildHydratedMockActionContext, buildMockModuleProps, buildMockRequest, ICoreContext, IRequestContext } from '@msdyn365-commerce/core';
import * as React from 'react';
import * as renderer from 'react-test-renderer';
import FooterCategory from '../footer-category';
import { IFooterCategoryConfig, IFooterCategoryProps } from '../footer-category.props.autogenerated';
import FooterCategoryView from '../footer-category.view';

const footerConfig: IFooterCategoryConfig= {
     categoryClassName:'footer-category-custom'
};
const mockRequest: IRequestContext = buildMockRequest();
const mockActionContext = buildHydratedMockActionContext();

// @ts-ignore
const mockContext: ICoreContext = {
    actionContext: mockActionContext,
    request: mockRequest,
    app: {
      config: {
        disableTooltip: true
      },
      routes: {
        wishlist: '/wishlist'
      }
   }
};

describe('Footer category integration test', () => {
    it('module does not fail when there us no slots', () => {
      // @ts-ignore
      const moduleProps: IFooterCategoryProps<IFooterCategoryConfig> = {
        ...buildMockModuleProps(
          {},
          {},
          footerConfig,
          mockContext) as IFooterCategoryProps<IFooterCategoryConfig>,
        // @ts-ignore
        renderView: FooterCategoryView,
      };

      const component: renderer.ReactTestRenderer = renderer.create(
        <FooterCategory {...moduleProps} />
      );
      expect(component).toMatchSnapshot();
      const tree = component.toJSON();
      expect(tree).toMatchSnapshot();
    });

    it('module render correctly', () => {
      const content: React.ReactNode[] = ['slot 1', 'slot 2'];
      const mockSlots: React.ReactNode[] = [content];

      // @ts-ignore
      const moduleProps: IFooterCategoryProps<IFooterCategoryConfig> = {
        ...buildMockModuleProps(
          {},
          {},
          footerConfig,
          mockContext) as IFooterCategoryProps<IFooterCategoryConfig>,
        // @ts-ignore
        renderView: FooterCategoryView,
        // @ts-ignore
        slots: mockSlots
      };

      const component: renderer.ReactTestRenderer = renderer.create(
        <FooterCategory {...moduleProps} />
      );
      expect(component).toMatchSnapshot();
      const tree = component.toJSON();
      expect(tree).toMatchSnapshot();
    });
});