import { buildHydratedMockActionContext, buildMockModuleProps, buildMockRequest } from '@msdyn365-commerce/core';
import * as React from 'react';
import * as renderer from 'react-test-renderer';
import FooterCategory from '../footer-category';
import FooterCategoryView from '../footer-category.view';
const footerConfig = {
    categoryClassName: 'footer-category-custom'
};
const mockRequest = buildMockRequest();
const mockActionContext = buildHydratedMockActionContext();
const mockContext = {
    actionContext: mockActionContext,
    request: mockRequest,
    app: {
        config: {
            disableTooltip: true
        },
        routes: {
            wishlist: '/wishlist'
        }
    }
};
describe('Footer category integration test', () => {
    it('module does not fail when there us no slots', () => {
        const moduleProps = {
            ...buildMockModuleProps({}, {}, footerConfig, mockContext),
            renderView: FooterCategoryView,
        };
        const component = renderer.create(React.createElement(FooterCategory, Object.assign({}, moduleProps)));
        expect(component).toMatchSnapshot();
        const tree = component.toJSON();
        expect(tree).toMatchSnapshot();
    });
    it('module render correctly', () => {
        const content = ['slot 1', 'slot 2'];
        const mockSlots = [content];
        const moduleProps = {
            ...buildMockModuleProps({}, {}, footerConfig, mockContext),
            renderView: FooterCategoryView,
            slots: mockSlots
        };
        const component = renderer.create(React.createElement(FooterCategory, Object.assign({}, moduleProps)));
        expect(component).toMatchSnapshot();
        const tree = component.toJSON();
        expect(tree).toMatchSnapshot();
    });
});
//# sourceMappingURL=integration.test.js.map