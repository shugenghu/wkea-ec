import { getPayloadObject, getTelemetryAttributes, getTelemetryObject, onTelemetryClick } from '@msdyn365-commerce-modules/utilities';
import * as Msdyn365 from '@msdyn365-commerce/core';
import classnames from 'classnames';
import * as React from 'react';
export class FooterItem extends React.PureComponent {
    constructor(props) {
        super(props);
        this.handleHeadingChange = (event) => this.props.config.heading.text = event.target.value;
        this.handleTextChange = (event) => this.props.config.text = event.target.value;
        this.handleLinkTextChange = (event) => this.props.config.link.linkText = event.target.value;
        this.telemetryContent = getTelemetryObject(this.props.context.request.telemetryPageName, this.props.friendlyName, this.props.telemetry);
        this.payLoad = getPayloadObject('click', this.telemetryContent, '', '');
    }
    render() {
        const { heading, image, link, text } = this.props.config;
        const footerItemClassName = classnames('ms-footer__item', this.props.config.className);
        const linkText = link && link.linkText ? link.linkText : '';
        this.payLoad.contentAction.etext = linkText;
        this.attributes = getTelemetryAttributes(this.telemetryContent, this.payLoad);
        const viewProps = {
            ...this.props,
            heading: this._createHeading(heading),
            image: this._createImageMarkup(image),
            text: this._createText(text),
            linkText: this._createLinkText(link),
            EditableLink: this._createLink(link),
            FooterItem: {
                moduleProps: this.props,
                className: footerItemClassName
            },
            HeadingContainer: {
                className: 'ms-footer__heading'
            },
            ItemContainer: {
                className: 'ms-footer__link__container'
            },
            Link: link && link.linkUrl && link.linkUrl.destinationUrl && {
                tag: 'a',
                className: 'ms-footer__link',
                href: link.linkUrl.destinationUrl,
                title: linkText,
                target: link.openInNewTab ? '_blank' : undefined,
                onClick: onTelemetryClick(this.telemetryContent, this.payLoad, linkText),
                ...this.attributes
            },
            className: footerItemClassName
        };
        return this.props.renderView(viewProps);
    }
    _createLink(link) {
        if (link) {
            const linkText = link.linkText ? link.linkText : '';
            const editableLink = {
                ariaLabel: link.ariaLabel,
                className: 'ms-footer__link',
                linkText: linkText,
                linkUrl: link.linkUrl.destinationUrl,
                openInNewTab: link.openInNewTab,
                role: 'button',
                additionalProperties: this.attributes,
                onClick: onTelemetryClick(this.telemetryContent, this.payLoad, linkText)
            };
            return (React.createElement(Msdyn365.Link, { link: editableLink, editProps: { onTextChange: this.handleLinkTextChange, requestContext: this.props.context.request } }));
        }
        return null;
    }
    _createLinkText(link) {
        if (!link || !link.linkText) {
            return null;
        }
        return (React.createElement("span", { className: 'ms-footer__link__text' }, link.linkText));
    }
    _createHeading(heading) {
        if (!heading || !heading.text || !heading.text.length) {
            return null;
        }
        return (React.createElement(Msdyn365.Text, { tag: heading.tag || 'h2', text: heading.text, className: 'ms-footer__heading__title', editProps: { onEdit: this.handleHeadingChange, requestContext: this.props.context.request } }));
    }
    _createText(text) {
        if (!text) {
            return null;
        }
        return (React.createElement(Msdyn365.Text, { tag: 'div', text: text, className: 'ms-footer-item__text', editProps: { onEdit: this.handleTextChange, requestContext: this.props.context.request } }));
    }
    _createImageMarkup(item, ariaHiddenAttr) {
        if (!item || !item.src || !item.src.length) {
            return null;
        }
        const defaultImageSettings = {
            viewports: {
                xs: { q: `w=24&h=24&m=6`, w: 0, h: 0 },
                lg: { q: `w=24&h=24&m=6`, w: 0, h: 0 }
            },
            lazyload: true
        };
        return (React.createElement(Msdyn365.Image, Object.assign({}, item, { gridSettings: this.props.context.request.gridSettings, imageSettings: item.imageSettings || defaultImageSettings, loadFailureBehavior: 'default', "aria-hidden": ariaHiddenAttr, editProps: { key: this.props.config.image || {}, requestContext: this.props.context.request } })));
    }
}
export default FooterItem;
//# sourceMappingURL=footer-item.js.map