{"version":3,"file":"account-profile-attributes.js","sourceRoot":"./src/","sources":["modules/account-profile/components/account-profile-attributes.tsx"],"names":[],"mappings":"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","sourcesContent":["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nimport { updateCustomerAttributes, updateCustomerAttributesInput } from '@msdyn365-commerce-modules/retail-actions';\nimport { Button, format, getPayloadObject, getTelemetryAttributes, getTelemetryObject, IPayLoad, isNullOrWhiteSpace,ITelemetryContent } from '@msdyn365-commerce-modules/utilities';\nimport MsDyn365, { IDictionary, Text } from '@msdyn365-commerce/core';\nimport { AttributeDefinition, Customer, CustomerAttribute } from '@msdyn365-commerce/retail-proxy/dist/Entities/CommerceTypes.g';\nimport classnames from 'classnames';\nimport { observable, reaction } from 'mobx';\nimport { observer } from 'mobx-react';\nimport * as React from 'react';\nimport { IAccountProfileData } from '../account-profile.data';\nimport { IAccountProfileProps } from '../account-profile.props.autogenerated';\nimport TextComponent from './account-profile-text';\n\ninterface IAttributePropertiesType {\n    Name?: string;\n    IsMandatory?: boolean;\n  }\n\nexport interface IAccountProfileAttributesProps {\n    accountProfileProps: IAccountProfileProps<IAccountProfileData>;\n}\n\nexport const enum AccountAttributeDataTypeValue {\n    Decimal = 3,\n    Integer = 4,\n    Text = 5,\n    TrueFalse = 6\n}\n\nexport interface IAttributePayloadData {\n    recordId?: number;\n    name?: string;\n    dataTypeValue?: number;\n    isEnumeration?: boolean;\n    lowerBoundValue?: number;\n    upperBoundValue?: number;\n    decimalValue?: number;\n    integerValue?: number;\n    textValue?: string;\n    booleanValue?: boolean;\n    isMandatory?: boolean;\n    defaultValue?: string;\n}\n\nexport interface IAccountProfileAttributesState extends React.ComponentState {\n    editAttributes: boolean;\n    phone: string;\n    vatNumber: string;\n    attributes: IDictionary<string>;\n    attributeError: IDictionary<string>;\n}\n\n/**\n *\n * AccountProfileAttributes class\n * @extends {React.PureComponentIAccountProfileAttributesProps, IAccountProfileAttributesState>}\n */\n@observer\nclass AccountProfileAttributes extends React.Component<IAccountProfileAttributesProps, IAccountProfileAttributesState> {\n    private attributePayloadData: IAttributePayloadData[];\n    @observable private isUpdatingAttributes: boolean = false;\n    @observable private gotException: boolean = false;\n    private hasError: boolean = false;\n    private telemetryContent?: ITelemetryContent;\n    private initialAttributes: IDictionary<string>;\n    private initialCustomerAttributes?: CustomerAttribute[];\n    private initialPhone: string;\n    private initialVatNumber: string;\n    private payLoad: IPayLoad;\n    private editRef: React.RefObject<HTMLButtonElement>;\n    private readonly attributesContainerRef: React.RefObject<HTMLDivElement>;\n    private readonly attributeClassName: string = 'ms-account-profile__attributes-element';\n    private maxIntegerLimit: number = 2100000000;\n    private minIntegerLimit: number = -2100000000;\n    private maxDecimalLimit: number = 7900000000000;\n    private minDecimalLimit: number = -7900000000000;\n    private maxStringLength: number = 1000;\n    private maxVATNumberLength: number = 20;\n    private maxPhoneLength: number = 25;\n\n    constructor(props: IAccountProfileAttributesProps) {\n        super(props);\n        this.state = {\n            editAttributes: false,\n            phone: '',\n            vatNumber: '',\n            attributes: {},\n            attributeError: {}\n        };\n        this.initialAttributes = {};\n        this.initialCustomerAttributes = [];\n        this.initialPhone = '';\n        this.initialVatNumber = '';\n        this.attributePayloadData = [];\n        const telemetryPageName = this.props.accountProfileProps && this.props.accountProfileProps.context && this.props.accountProfileProps.context.request && this.props.accountProfileProps.context.request.telemetryPageName || '';\n        const friendlyName = this.props.accountProfileProps && this.props.accountProfileProps.friendlyName || '';\n        const telemetry = this.props.accountProfileProps && this.props.accountProfileProps.telemetry || {};\n        this.telemetryContent = getTelemetryObject(telemetryPageName, friendlyName, telemetry);\n        this.payLoad = getPayloadObject('click', this.telemetryContent, '');\n        this.editRef = React.createRef();\n        this.attributesContainerRef = React.createRef();\n    }\n\n    public componentDidMount(): void {\n        this._buildPayloadData();\n        this._getAttributes();\n        this._getCustomerPhoneAndVatNumber();\n        reaction(\n            () => this.props.accountProfileProps.data.customerInformation.result,\n            () => {\n                const customerInformation = this.props.accountProfileProps.data.customerInformation.result;\n                this.initialCustomerAttributes = customerInformation && customerInformation.Attributes;\n                this._getAttributes();\n                this._getCustomerPhoneAndVatNumber();\n            }\n        );\n        reaction(\n            () => this.props.accountProfileProps.data.attributeDefinitions.result,\n            () => {\n                this._buildPayloadData();\n            }\n        );\n    }\n\n    public render(): JSX.Element | null {\n        return this._renderAttributes();\n    }\n\n    private _renderAttributes = (): JSX.Element | null => {\n        const { config, data, resources } = this.props.accountProfileProps;\n        const attributeDefinitions: AttributeDefinition[] = data.attributeDefinitions.result || [];\n        const additionalInformationSectionHeading = config.additionalInformationSectionHeading && config.additionalInformationSectionHeading.text || '';\n        const showAttributes = config.showAttributes || '';\n        const attributes = showAttributes.split(',');\n        const elements = attributes.map(att => {\n            const attributeDefinition: AttributeDefinition = attributeDefinitions.find(attribute =>\n                attribute.IsHidden === false && attribute.Name!.toLocaleLowerCase() === att.toLocaleLowerCase()\n            ) || { RecordId: 0 };\n            return this._renderAttribute(attributeDefinition);\n        });\n        const edit = this.state && this.state.editAttributes || false;\n        this.payLoad.contentAction.etext = `${resources.attributesEditButtonText} ${additionalInformationSectionHeading}`;\n        const editAttributes = getTelemetryAttributes(this.telemetryContent!, this.payLoad);\n        this.payLoad.contentAction.etext = `${resources.attributesSaveButtonText} ${additionalInformationSectionHeading}`;\n        const saveAttributes = getTelemetryAttributes(this.telemetryContent!, this.payLoad);\n        this.payLoad.contentAction.etext = `${resources.attributesCancelButtonText} ${additionalInformationSectionHeading}`;\n        const cancelAttributes = getTelemetryAttributes(this.telemetryContent!, this.payLoad);\n        return (\n            <div ref={this.attributesContainerRef} className={classnames('ms-account-profile__attributes', { 'ms-account-profile__attributes-updating': this.isUpdatingAttributes })}>\n                {config.additionalInformationSectionHeading && (\n                    <Text\n                        className='ms-account-profile__attributes-tile__heading'\n                        tag={config.additionalInformationSectionHeading.tag || 'h2'}\n                        text={additionalInformationSectionHeading}\n                    />\n                )}\n                {config.showPhone && (\n                    this._renderPhone()\n                )}\n                {config.showVatNumber && (\n                    this._renderVatNumber()\n                )}\n                {elements}\n                {this.gotException && (\n                    <div className='ms-account-profile__attributes-error'>\n                        <label className='ms-account-profile__attributes-error-label'>\n                            {this.props.accountProfileProps.resources.attributesSaveExceptionMessage}\n                        </label>\n                    </div>\n                )}\n                {!edit && (\n                    <Button\n                        className={classnames('ms-account-profile__attributes-edit-button')}\n                        aria-label={`${resources.attributesEditButtonText} ${additionalInformationSectionHeading}`}\n                        onClick={this._enableAttributes}\n                        innerRef={this.editRef}\n                        title = {resources.attributesEditButtonText}\n                        {...editAttributes}\n                    >\n                        {resources.attributesEditButtonText}\n                    </Button>\n                )}\n                {edit && (\n                    <Button\n                        className={classnames('ms-account-profile__attributes-save-button')}\n                        aria-label={resources.attributesSaveButtonText}\n                        onClick={this._saveAttributes}\n                        title = {resources.attributesSaveButtonText}\n                        {...saveAttributes}\n                    >\n                        {resources.attributesSaveButtonText}\n                    </Button>\n                )}\n                {edit && (\n                    <Button\n                        className={classnames('ms-account-profile__attributes-cancel-button')}\n                        aria-label={resources.attributesCancelButtonText}\n                        onClick={this._disableAttributes}\n                        title = {resources.attributesCancelButtonText}\n                        {...cancelAttributes}\n                    >\n                        {resources.attributesCancelButtonText}\n                    </Button>\n                )}\n            </div>\n        );\n    }\n\n    private _renderPhone = (): JSX.Element | null => {\n        const { phoneSectionHeading } = this.props.accountProfileProps.config;\n        const heading = phoneSectionHeading && phoneSectionHeading.text || '';\n        const className = heading && heading.replace(/ /g, '_') || '';\n        const editAttributes = this.state && this.state.editAttributes || false;\n        return (\n            <div className={classnames('ms-account-profile__attributes__section', `ms-account-profile__attributes-${className}`)}>\n                {phoneSectionHeading && (<Text\n                    className={`ms-account-profile__attributes__section-heading`}\n                    tag='h3'\n                    text={heading}\n                />)}\n                <input\n                    type='text'\n                    aria-label={heading}\n                    className={classnames(this.attributeClassName, 'ms-account-profile__attributes_input', `ms-account-profile__attributes_input-edit-${editAttributes}`, `ms-account-profile__${className}-input`)}\n                    onChange={this._onPhoneChange}\n                    value={this.state.phone || ''}\n                    disabled={!editAttributes}\n                />\n                {this._renderError('Phone')}\n            </div>\n        );\n    }\n\n    private _renderVatNumber = (): JSX.Element | null => {\n        const { vatNumberSectionHeading } = this.props.accountProfileProps.config;\n        const heading = vatNumberSectionHeading && vatNumberSectionHeading.text || '';\n        const className = heading && heading.replace(/ /g, '_') || '';\n        const editAttributes = this.state && this.state.editAttributes || false;\n        return (\n            <div className={classnames('ms-account-profile__attributes__section', `ms-account-profile__attributes-${className}`)}>\n                {vatNumberSectionHeading && (<Text\n                    className={`ms-account-profile__attributes__section-heading`}\n                    tag='h3'\n                    text={heading}\n                />)}\n                <input\n                    type='text'\n                    aria-label={heading}\n                    className={classnames(this.attributeClassName, 'ms-account-profile__attributes_input', `ms-account-profile__attributes_input-edit-${editAttributes}`, `ms-account-profile__${className}-input`)}\n                    onChange={this._onVatNumberChange}\n                    value={this.state.vatNumber || ''}\n                    disabled={!editAttributes}\n                />\n                {this._renderError('VATNumber')}\n            </div>\n        );\n    }\n\n    private _renderAttribute = (customAttribute: AttributeDefinition): JSX.Element | null => {\n        const editAttributes = this.state && this.state.editAttributes || false;\n        const className = customAttribute.Name && customAttribute.Name.replace(/ /g, '_') || '';\n        switch (customAttribute.ExtDataType && customAttribute.ExtDataType.Value) {\n            case AccountAttributeDataTypeValue.Integer:\n            case AccountAttributeDataTypeValue.Decimal:\n                return this._renderIntegerDecimalInput(customAttribute, className, editAttributes);\n            case AccountAttributeDataTypeValue.Text:\n                return this._renderTextInputOrSelect(customAttribute, className, editAttributes);\n            case AccountAttributeDataTypeValue.TrueFalse:\n                return this._renderBoolean(customAttribute, className, editAttributes);\n            default:\n                return null;\n        }\n    }\n\n    private _renderIntegerDecimalInput = (customAttribute: AttributeDefinition, className: string, editAttributes: boolean): JSX.Element | null => {\n        const edit = this.state && this.state.editAttributes || false;\n        const attributeProps = this._getAttributeProps(customAttribute.Name || '');\n        const displayName: string = attributeProps?.Name || '';\n        return (\n            <div className={classnames('ms-account-profile__attributes__section', `ms-account-profile__attributes-${className}`)}>\n                <Text\n                    className={`ms-account-profile__attributes__section-heading`}\n                    tag='h3'\n                    text={displayName}\n                />\n                <input\n                    type='text'\n                    aria-label={customAttribute.Name}\n                    className={classnames(this.attributeClassName, 'ms-account-profile__attributes_input', `ms-account-profile__attributes_input-edit-${edit}`, `ms-account-profile__${className}-input`)}\n                    onChange={this._onAttributeChange(customAttribute)}\n                    value={this.state.attributes[customAttribute.Name || ''] || ''}\n                    disabled={!editAttributes}\n                    aria-required={attributeProps?.IsMandatory || false}\n                />\n                {this._renderError(customAttribute.Name || '')}\n            </div>\n        );\n    }\n\n    // tslint:disable-next-line: cyclomatic-complexity\n    private _renderTextInputOrSelect = (customAttribute: AttributeDefinition, className: string, editAttributes: boolean): JSX.Element | null => {\n        const isEnumeration: boolean = customAttribute.IsEnumeration || false;\n        const edit = this.state && this.state.editAttributes || false;\n        const attributeProps = this._getAttributeProps(customAttribute.Name || '');\n        const displayName: string = attributeProps?.Name || '';\n        if (isEnumeration && customAttribute.EnumerationDetails) {\n            const value = this.state.attributes[customAttribute.Name || ''] || '';\n            const hasNoValue = value === '' ? true : false;\n            return (\n                <div className={classnames('ms-account-profile__attributes__section', `ms-account-profile__attributes-${className}`)}>\n                    <Text\n                        className={`ms-account-profile__attributes__section-heading`}\n                        tag='h3'\n                        text={displayName}\n                    />\n                    <select\n                        id={`ms-account-profile__attributes-${className}`}\n                        aria-label={customAttribute.Name}\n                        className={classnames(this.attributeClassName, 'ms-account-profile__attributes_select', `ms-account-profile__attributes_select-edit-${edit}`, `ms-account-profile__attributes-${className}_select`)}\n                        onChange={this._onAttributeSelect(customAttribute)}\n                        disabled={!editAttributes}\n                        aria-required={attributeProps?.IsMandatory || false}\n                    >\n                        {hasNoValue && (<option className='ms-account-profile__attributes_select__option' key='blank' selected={hasNoValue} aria-selected={hasNoValue} />)}\n                        {customAttribute.EnumerationDetails.map((option) => {\n                            const selected = option.EnumerationValue === this.state.attributes[customAttribute.Name || ''];\n                            return <option className='ms-account-profile__attributes_select__option' key={option.EnumerationValue} selected={selected} aria-selected={selected}>{option.EnumerationValue}</option>;\n                        })}\n                    </select>\n                </div>\n            );\n        } else {\n           return (\n                <div className={classnames('ms-account-profile__attributes__section', `ms-account-profile__attributes-${className}`)}>\n                    <Text\n                        className={`ms-account-profile__attributes__section-heading`}\n                        tag='h3'\n                        text={displayName}\n                    />\n                    <input\n                        type='text'\n                        aria-label={customAttribute.Name}\n                        className={classnames(this.attributeClassName, 'ms-account-profile__attributes_input', `ms-account-profile__attributes_input-edit-${edit}`, `ms-account-profile__${className}-input`)}\n                        onChange={this._onAttributeChange(customAttribute)}\n                        value={this.state.attributes[customAttribute.Name || ''] || ''}\n                        disabled={!editAttributes}\n                        aria-required={attributeProps?.IsMandatory || false}\n                    />\n                    {this._renderError(customAttribute.Name || '')}\n                </div>\n            );\n        }\n    }\n\n    private _renderBoolean = (customAttribute: AttributeDefinition, className: string, editAttributes: boolean): JSX.Element | null => {\n        let value = this.state.attributes[customAttribute.Name || ''] || '';\n        const hasNoValue = value === '' ? true : false;\n        const render = (hasNoValue && !editAttributes) ? false : true;\n        value = value || 'false';\n        const toggleState = value === 'true' && 'enable' || 'disable';\n        const arialabel = format(this.props.accountProfileProps.resources.attributeToggleButtonAriaLabel, customAttribute.Name);\n        const ariaPressed = value === 'true' && true || false;\n        const attributeProps = this._getAttributeProps(customAttribute.Name || '');\n        const displayName: string = attributeProps?.Name || '';\n        let toggleValue = 'false';\n        if (value === 'true') {\n            toggleValue = 'false';\n        } else {\n            toggleValue = 'true';\n        }\n\n        return (\n            <div className={classnames('ms-account-profile__attributes__section', 'ms-account-profile__attributes__section__toggle', `ms-account-profile__attributes-${className}`)}>\n                <Text\n                    className={`ms-account-profile__attributes__section-heading`}\n                    tag='h3'\n                    text={displayName}\n                />\n                {render && (\n                    <div className={`ms-account-profile__attributes__section__toggle-wrapper ms-account-profile__attributes__section__toggle-${toggleState}`}>\n\n                        <TextComponent className='ms-account-profile__attributes__section__toggle-disable-text' text={this.props.accountProfileProps.resources.toggleDisableText} />\n                        <Button\n                            className={classnames(this.attributeClassName, 'ms-account-profile__attributes__section__toggle-button', `ms-account-profile__attributes__section__toggle-${toggleState}-button`)}\n                            aria-label={`${arialabel}`}\n                            aria-pressed={ariaPressed}\n                            value={value}\n                            onClick={this._onAttributeCheck(customAttribute, toggleValue)}\n                            disabled={!editAttributes}\n                        />\n                        <TextComponent className='ms-account-profile__attributes__section__toggle-enable-text' text={this.props.accountProfileProps.resources.toggleEnableText} />\n                    </div>\n                )}\n            </div>\n        );\n    }\n\n    private _renderError = (attributeName: string): JSX.Element | null => {\n        const error: string = this.state && this.state.attributeError && this.state.attributeError[attributeName] || '';\n        const hasError = !isNullOrWhiteSpace(error);\n        if (hasError) {\n            return (\n                <div className='ms-account-profile__attributes-error' role='alert' aria-live='assertive'>\n                    <label className='ms-account-profile__attributes-error-label'>\n                        {error}\n                    </label>\n                </div>\n            );\n        }\n        return null;\n    }\n\n    private _getAttributeProps = (attributeName: string): IAttributePropertiesType => {\n        const attributePayloadData = this.attributePayloadData.filter((att) => att.name === attributeName);\n        const isMandatory: boolean = attributePayloadData[0] && attributePayloadData[0].isMandatory || false;\n        return {\n            Name: isMandatory ? `${attributeName || ''} *` : attributeName || '',\n            IsMandatory: isMandatory\n        };\n    }\n\n    private _onPhoneChange = (event: React.ChangeEvent<HTMLInputElement>): void => {\n        const value = event.target.value;\n        this.setState({ phone: value });\n    }\n\n    private _onVatNumberChange = (event: React.ChangeEvent<HTMLInputElement>): void => {\n        const value = event.target.value;\n        this.setState({ vatNumber: value });\n    }\n\n    private _enableAttributes = () => {\n        this.hasError = false;\n        // To clear exception messages\n        this.gotException = false;\n        this.setState({ editAttributes: true, attributeError: {} });\n        if (MsDyn365.isBrowser) {\n            setTimeout(() => {\n                if (this.attributesContainerRef?.current) {\n                    const attributes: HTMLCollectionOf<Element> = this.attributesContainerRef.current.getElementsByClassName(this.attributeClassName);\n                    if (attributes && attributes.length > 0) {\n                        this._setFocus(attributes[0] as HTMLElement);\n                    }\n                }\n            },         0);\n        }\n    }\n\n    private _disableAttributes = () => {\n        this.setState({ editAttributes: false, attributeError: {}, attributes: this.initialAttributes, phone: this.initialPhone, vatNumber: this.initialVatNumber });\n        if (MsDyn365.isBrowser) {\n            setTimeout(() => {\n                this._setFocus(this.editRef.current);\n            },         0);\n        }\n    }\n\n    private _onAttributeChange = (attributeDefinition: AttributeDefinition) => (event: React.ChangeEvent<HTMLInputElement>) => {\n        const value = event.target.value;\n        const name = attributeDefinition.Name || '';\n        this.setState({\n            attributes: {\n                ...this.state.attributes,\n                [name]: value\n            }\n        });\n    }\n\n    private _onAttributeCheck = (attributeDefinition: AttributeDefinition, value: string) => (event: React.MouseEvent<HTMLElement>) => {\n        const name = attributeDefinition.Name || '';\n        this.setState({\n            attributes: {\n                ...this.state.attributes,\n                [name]: value\n            }\n        });\n    }\n\n    private _onAttributeSelect = (attributeDefinition: AttributeDefinition) => (event: React.ChangeEvent<HTMLSelectElement>) => {\n        const value = event.currentTarget.selectedOptions[0].value;\n        const index = event.currentTarget.selectedOptions[0].index;\n        const name = attributeDefinition.Name || '';\n        this.setState({\n            attributes: {\n                ...this.state.attributes,\n                [name]: value\n            },\n            selectedIndex: {\n                ...this.state.selectedIndex,\n                [name]: index\n            }\n        });\n    }\n\n    private _getAttributes = () => {\n        const { config, data } = this.props.accountProfileProps;\n        const showAttributes = config.showAttributes || '';\n        const showAttributesArray = showAttributes.split(',');\n        const customer = data.customerInformation.result;\n        const custmerAttributes: CustomerAttribute[] = customer && customer.Attributes || [];\n        const attributes: IDictionary<string> = {};\n        // tslint:disable-next-line: cyclomatic-complexity\n        showAttributesArray.forEach(showAttribute => {\n            const attributePayloadData = this.attributePayloadData.filter((att) => att.name === showAttribute);\n            const isMandatory: boolean = attributePayloadData[0] && attributePayloadData[0].isMandatory || false;\n            const defaultValue = attributePayloadData[0] && attributePayloadData[0].defaultValue;\n            const attribute = custmerAttributes.find((att) => att.Name === showAttribute);\n            let value: string = '';\n            if (attribute && attribute.AttributeValue) {\n                const name = attribute && attribute.Name || '';\n                switch (attribute.DataTypeValue) {\n                    case AccountAttributeDataTypeValue.Integer:\n                        if (attribute.AttributeValue.IntegerValue) {\n                            value = String(attribute.AttributeValue.IntegerValue);\n                            attributes[name] = value;\n                        }\n                        break;\n                    case AccountAttributeDataTypeValue.Decimal:\n                        if (attribute.AttributeValue.DecimalValue) {\n                            value = String(attribute.AttributeValue.DecimalValue);\n                            attributes[name] = value;\n                        }\n                        break;\n                    case AccountAttributeDataTypeValue.Text:\n                        if (attribute.AttributeValue.StringValue) {\n                            value = attribute.AttributeValue.StringValue;\n                            attributes[name] = value;\n                        }\n                        break;\n                    case AccountAttributeDataTypeValue.TrueFalse:\n                        if (attribute.AttributeValue.BooleanValue !== null) {\n                            value = String(attribute.AttributeValue.BooleanValue);\n                            attributes[name] = value;\n                        }\n                        break;\n                    default:\n                    // Do nothing\n                }\n            }\n            if (isNullOrWhiteSpace(value) && isMandatory) {\n                attributes[showAttribute] = '';\n            }\n            if (value.length === 0 && defaultValue) {\n                attributes[showAttribute] = String(defaultValue);\n            }\n        });\n        if (Object.keys(this.initialAttributes).length === 0) {\n            this.initialAttributes = attributes;\n        }\n        this.setState({ attributes: attributes });\n    }\n\n    // tslint:disable-next-line: cyclomatic-complexity max-func-body-length\n    private _addOrUpdateAttribute = (customer: Customer) => {\n        const { resources } = this.props.accountProfileProps;\n        const { phone, vatNumber } = this.state;\n        const attributeError: IDictionary<string> = {};\n        let hasError: boolean = false;\n        let hasValue: boolean = true;\n        for (const [key, value] of Object.entries(this.state.attributes)) {\n            const payloadData: IAttributePayloadData = this.attributePayloadData.find(data => data.name === key) || {};\n            if (payloadData) {\n                switch (payloadData.dataTypeValue) {\n                    case AccountAttributeDataTypeValue.Decimal:\n                        const decimalValue = Number(value);\n                        if (isNaN(decimalValue)) {\n                            const typeError = format(resources.attributeInputTypeErrorText, payloadData.name, 'Decimal');\n                            attributeError[payloadData.name || ''] = typeError;\n                            hasError = true;\n                        } else {\n                            if (payloadData.lowerBoundValue !== undefined && payloadData.upperBoundValue !== undefined) {\n                                if (decimalValue < payloadData.lowerBoundValue || decimalValue > payloadData.upperBoundValue) {\n                                    const rangeError = format(resources.attributeInputRangeErrorText, payloadData.name, payloadData.lowerBoundValue, payloadData.upperBoundValue);\n                                    attributeError[payloadData.name || ''] = rangeError;\n                                    hasError = true;\n                                }\n                            } else {\n                                if(decimalValue > this.maxDecimalLimit) {\n                                    attributeError[payloadData.name || ''] = format(resources.attributeInputValueExceedsMaximumErrorText, payloadData.name, this.maxDecimalLimit);\n                                    hasError = true;\n                                }\n\n                                if(decimalValue < this.minDecimalLimit) {\n                                    attributeError[payloadData.name || ''] = format(resources.attributeInputValueExceedsMinimumErrorText, payloadData.name, this.minDecimalLimit);\n                                    hasError = true;\n                                }\n                            }\n                        }\n\n                        if (!hasError) {\n                            if (isNullOrWhiteSpace(value)) {\n                                hasValue = false;\n                            } else {\n                                payloadData.decimalValue = decimalValue;\n                                hasValue = true;\n                            }\n                        }\n                        break;\n                    case AccountAttributeDataTypeValue.Integer:\n                        const integerValue = Number(value);\n                        if (isNaN(integerValue) || value.indexOf('.') !== -1) {\n                            const typeError = format(resources.attributeInputTypeErrorText, payloadData.name, 'Integer');\n                            attributeError[payloadData.name || ''] = typeError;\n                            hasError = true;\n                        } else {\n                            if (payloadData.lowerBoundValue !== undefined && payloadData.upperBoundValue !== undefined) {\n                                if (integerValue < payloadData.lowerBoundValue || integerValue > payloadData.upperBoundValue) {\n                                    const rangeError = format(resources.attributeInputRangeErrorText, payloadData.name, payloadData.lowerBoundValue, payloadData.upperBoundValue);\n                                    attributeError[payloadData.name || ''] = rangeError;\n                                    hasError = true;\n                                }\n                            } else {\n                                if (integerValue > this.maxIntegerLimit) {\n                                    attributeError[payloadData.name || ''] = format(resources.attributeInputValueExceedsMaximumErrorText, payloadData.name, this.maxIntegerLimit);\n                                    hasError = true;\n                                }\n\n                                if(integerValue < this.minIntegerLimit) {\n                                    attributeError[payloadData.name || ''] = format(resources.attributeInputValueExceedsMinimumErrorText, payloadData.name, this.minIntegerLimit);\n                                    hasError = true;\n                                }\n                            }\n                        }\n\n                        if (!hasError) {\n                            if (isNullOrWhiteSpace(value)) {\n                                hasValue = false;\n                            } else {\n                                payloadData.integerValue = integerValue;\n                                hasValue = true;\n                            }\n                        }\n                        break;\n                    case AccountAttributeDataTypeValue.Text:\n                        let trimValue = '';\n                        if (!isNullOrWhiteSpace(value)) {\n                            trimValue = value.trim();\n                        }\n                        if (trimValue.length > this.maxStringLength) {\n                            attributeError[payloadData.name || ''] = format(resources.attributeInputStringMaxLengthErrorText, payloadData.name, this.maxStringLength);\n                            hasError = true;\n                        }\n                        if (!hasError) {\n                            payloadData.textValue = trimValue;\n                        }\n                        break;\n                    case AccountAttributeDataTypeValue.TrueFalse:\n                        payloadData.booleanValue = value === 'true' ? true : false;\n                        break;\n                    default:\n                    // Do nothing\n                }\n\n                if (payloadData.isMandatory && isNullOrWhiteSpace(value)) {\n                    attributeError[payloadData.name || ''] = format(resources.attributeInputMandatoryErrorText, payloadData.name);\n                    hasError = true;\n                }\n\n                const custmerAttributes: CustomerAttribute[] = customer && customer.Attributes || [];\n                const attribute = custmerAttributes.find((att) => att.Name === key);\n                const index = custmerAttributes.findIndex((att) => att.Name === key);\n\n                if(index !== -1 && !hasValue) {\n                    custmerAttributes.splice(index,1);\n                }\n\n                if (!hasError && hasValue) {\n                    if (attribute) {\n                        attribute.Attribute = undefined;\n                        attribute.DataTypeValue = payloadData.dataTypeValue;\n                        attribute.Name = payloadData.name;\n                        attribute.RecordId = payloadData.recordId;\n                        attribute.Units = undefined;\n                        attribute.AttributeValue = {\n                            IntegerValue: payloadData.integerValue,\n                            BooleanValue: payloadData.booleanValue,\n                            StringValue: payloadData.textValue,\n                            DecimalValue: payloadData.decimalValue\n                        };\n                        attribute.ExtensionProperties = [];\n                        attribute.NameTranslations = [];\n                    } else {\n                        custmerAttributes.push({\n                            // @ts-ignore\n                            '@odata.type': '#Microsoft.Dynamics.Commerce.Runtime.DataModel.CustomerAttribute',\n                            Attribute: undefined,\n                            DataTypeValue: payloadData.dataTypeValue,\n                            KeyName: payloadData.name,\n                            Name: payloadData.name,\n                            RecordId: payloadData.recordId,\n                            Units: undefined,\n                            AttributeValue: {\n                                // @ts-ignore\n                                '@odata.type': '#Microsoft.Dynamics.Commerce.Runtime.DataModel.CommercePropertyValue',\n                                IntegerValue: payloadData.integerValue,\n                                BooleanValue: payloadData.booleanValue,\n                                StringValue: payloadData.textValue,\n                                DecimalValue: payloadData.decimalValue\n                            },\n                            'ExtensionProperties@odata.type': '#Collection(Microsoft.Dynamics.Commerce.Runtime.DataModel.CommerceProperty)',\n                            ExtensionProperties: [],\n                            'NameTranslations@odata.type': '#Collection(Microsoft.Dynamics.Commerce.Runtime.DataModel.TextValueTranslation)',\n                            NameTranslations: []\n                        });\n                    }\n                }\n            }\n        }\n\n        if (phone.trim().length > this.maxPhoneLength) {\n            attributeError[`Phone`] = format(resources.attributeInputStringMaxLengthErrorText, 'Phone', this.maxPhoneLength);\n            hasError = true;\n        } else {\n            customer.Phone = phone.trim();\n        }\n\n        if (vatNumber.trim().length > this.maxVATNumberLength) {\n            attributeError[`VATNumber`] = format(resources.attributeInputStringMaxLengthErrorText, 'VAT Number', this.maxVATNumberLength);\n            hasError = true;\n        } else {\n            customer.VatNumber = vatNumber.trim();\n        }\n\n        this.hasError = hasError;\n        this.setState({ attributeError: attributeError });\n\n    }\n\n    private _saveAttributes = async () => {\n        const { context, data } = this.props.accountProfileProps;\n        const customer = data.customerInformation.result;\n\n        if (customer && context) {\n            this._addOrUpdateAttribute(customer);\n            const input = new updateCustomerAttributesInput(customer.AccountNumber, customer.Attributes || [], context.request.apiSettings, customer.Phone, customer.VatNumber);\n\n            this.isUpdatingAttributes = true;\n            this.gotException = false;\n\n            if (!this.hasError) {\n                this.setState({ editAttributes: false });\n                try {\n                    await updateCustomerAttributes(input, context.actionContext);\n                } catch (error) {\n                    this.gotException = true;\n                    customer.Attributes = this.initialCustomerAttributes;\n                    if (context.telemetry) {\n                        context.telemetry.exception(error);\n                        context.telemetry.debug('Unable to update customer attributes');\n                    }\n                    this.setState({ attributeError: {}, attributes: this.initialAttributes, phone: this.initialPhone, vatNumber: this.initialVatNumber });\n                }\n                this.setState({ editAttributes: false });\n                if (!this.gotException) {\n                    this.initialAttributes = this.state.attributes;\n                    this.initialCustomerAttributes = customer.Attributes;\n                    this.initialPhone = this.state.phone;\n                    this.initialVatNumber = this.state.vatNumber;\n                }\n            }\n\n            this.isUpdatingAttributes = false;\n\n            if (MsDyn365.isBrowser) {\n                setTimeout(() => {\n                    this._setFocus(this.editRef.current);\n                },         0);\n            }\n        }\n    }\n\n    private _setFocus = (element: HTMLElement | null) => {\n        element?.focus();\n    }\n\n    private _buildPayloadData = () => {\n        const { data } = this.props.accountProfileProps;\n        const attributeDefinitions = data.attributeDefinitions.result || [];\n        const attributes: IDictionary<string> = {};\n        // tslint:disable-next-line: cyclomatic-complexity\n        attributeDefinitions.forEach(attributeDefinition => {\n            const attributePayloadData: IAttributePayloadData = {};\n            attributePayloadData.recordId = attributeDefinition.RecordId;\n            attributePayloadData.name = attributeDefinition.Name;\n            attributePayloadData.dataTypeValue = attributeDefinition.DataTypeValue;\n            attributePayloadData.isEnumeration = attributeDefinition.IsEnumeration;\n            attributePayloadData.isMandatory = attributeDefinition.IsMandatory;\n            switch (attributeDefinition.DataTypeValue) {\n                case AccountAttributeDataTypeValue.Integer:\n                    const defaultIntegerValue = attributeDefinition.DefaultValue && attributeDefinition.DefaultValue.IntegerValue;\n                    attributePayloadData.lowerBoundValue = attributeDefinition.LowerBound && attributeDefinition.LowerBound.IntegerValue;\n                    attributePayloadData.upperBoundValue = attributeDefinition.UpperBound && attributeDefinition.UpperBound.IntegerValue;\n                    if (attributePayloadData.name && defaultIntegerValue) {\n                        attributePayloadData.defaultValue =  String(defaultIntegerValue);\n                        attributes[attributePayloadData.name] = String(defaultIntegerValue);\n                    }\n                    break;\n                case AccountAttributeDataTypeValue.Decimal:\n                    const defaultDecimalValue = attributeDefinition.DefaultValue && attributeDefinition.DefaultValue.DecimalValue;\n                    attributePayloadData.lowerBoundValue = attributeDefinition.LowerBound && attributeDefinition.LowerBound.DecimalValue;\n                    attributePayloadData.upperBoundValue = attributeDefinition.UpperBound && attributeDefinition.UpperBound.DecimalValue;\n                    if (attributePayloadData.name && defaultDecimalValue) {\n                        attributePayloadData.defaultValue =  String(defaultDecimalValue);\n                        attributes[attributePayloadData.name] = String(defaultDecimalValue);\n                    }\n                    break;\n                case AccountAttributeDataTypeValue.Text:\n                    const defaultStringValue = attributeDefinition.DefaultValue && attributeDefinition.DefaultValue.StringValue;\n                    if (attributePayloadData.name && defaultStringValue) {\n                        attributePayloadData.defaultValue =  defaultStringValue;\n                        attributes[attributePayloadData.name] = defaultStringValue;\n                    }\n                    break;\n                case AccountAttributeDataTypeValue.TrueFalse:\n                    const defaultBooleanValue = attributeDefinition.DefaultValue && attributeDefinition.DefaultValue.BooleanValue || false;\n                    if (attributePayloadData.name) {\n                        attributePayloadData.defaultValue =  String(defaultBooleanValue);\n                        attributes[attributePayloadData.name] = String(defaultBooleanValue);\n                    }\n                    break;\n                default:\n                // do nothing\n            }\n            this.attributePayloadData.push(attributePayloadData);\n        });\n        Object.keys(attributes).length > 0 && this.setState({ attributes: attributes });\n    }\n\n    private _getCustomerPhoneAndVatNumber = () => {\n        const customer = this.props.accountProfileProps.data.customerInformation.result;\n        const phone = customer && customer.Phone || '';\n        const vatNumber = customer && customer.VatNumber || '';\n        this.setState({ phone: phone, vatNumber: vatNumber });\n        if (this.initialPhone.length === 0) {\n            this.initialPhone = phone;\n        }\n        if (this.initialVatNumber.length === 0) {\n            this.initialVatNumber = vatNumber;\n        }\n    }\n}\n\nexport default AccountProfileAttributes;"]}