{"version":3,"file":"account-profile.test.js","sourceRoot":"./src/","sources":["modules/account-profile/__tests__/unit/account-profile.test.tsx"],"names":[],"mappings":"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","sourcesContent":["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport * as React from 'react';\n\nimport { wrapInResolvedAsyncResult } from '@msdyn365-commerce-modules/retail-actions';\nimport { buildHydratedMockActionContext, buildMockCoreContext, buildMockModuleProps } from '@msdyn365-commerce/core';\nimport { Customer } from '@msdyn365-commerce/retail-proxy';\nimport { AttributeDefinition } from '@msdyn365-commerce/retail-proxy/dist/Entities/CommerceTypes.g';\nimport { mount, shallow } from 'enzyme';\nimport AccountProfileModule from '../../account-profile';\nimport { IAccountProfileData } from '../../account-profile.data';\nimport {\n    EmailAddressSectionHeadingTag, HeadingTag, IAccountProfileConfig, IAccountProfileProps,\n    NameSectionHeadingTag, PersonalizationSectionHeadingTag, PreferencesSectionHeadingTag, WebTrackingSectionHeadingTag\n} from '../../account-profile.props.autogenerated';\n\nconst mockResources = {\n    attributeInputValueExceedsMaximumErrorText: 'Value exceeds maximum error',\n    attributeInputValueExceedsMinimumErrorText: 'Value exceeds minimum error',\n    attributeInputMandatoryErrorText: 'Mandatory error',\n    attributeInputStringMaxLengthErrorText: 'String max length error',\n    attributeInputTypeErrorText: 'Type error',\n    attributeInputRangeErrorText: 'Range error',\n    attributeToggleButtonAriaLabel: 'Toggle',\n    attributesEditButtonText: 'Edit',\n    attributesSaveButtonText: 'Save',\n    attributesCancelButtonText: 'Cancel',\n    attributesEditButtonAriaLabel: 'Edit',\n    attributesSaveButtonAriaLabel: 'Save',\n    attributesCancelButtonAriaLabel: 'Cancel',\n    attributesSaveExceptionMessage: 'Exception',\n    editButtonText: 'Edit',\n    editButtonAriaLabel: 'Edit',\n    toggleEnableText: 'Yes',\n    toggleDisableText: 'No',\n    personalizationDescription: 'Allow personalization',\n    personalizationEnableButtonAriaLabel: 'Enable personalization',\n    personalizationDisableButtonAriaLabel: 'Disable personalization',\n    webTrackingDescription: 'Enable browsing activity to be logged to enhance the browsing experience',\n    webTrackingEnableButtonAriaLabel: 'Enable browsing activity to be logged',\n    webTrackingDisableButtonAriaLabel: 'Disable browsing activity to be logged'\n};\n\nconst mockConfig: IAccountProfileConfig = {\n    heading: {\n        text: 'Mock heading 1',\n        tag: HeadingTag.h1\n    },\n    nameSectionHeading: {\n        text: 'Name',\n        tag: NameSectionHeadingTag.h2\n    },\n    emailAddressSectionHeading: {\n        text: 'Email',\n        tag: EmailAddressSectionHeadingTag.h2\n    },\n    preferencesSectionHeading: {\n        text: 'Preferences',\n        tag: PreferencesSectionHeadingTag.h2\n    },\n    personalizationSectionHeading: {\n        text: 'Personalization',\n        tag: PersonalizationSectionHeadingTag.h2\n    },\n    webTrackingSectionHeading: {\n        text: 'Browsing Activity Logging',\n        tag: WebTrackingSectionHeadingTag.h2\n    },\n    className: 'test-class'\n};\n\nconst mockData: IAccountProfileData = {\n    customerInformation: wrapInResolvedAsyncResult({\n        Email: 'test@test.com',\n        FirstName: 'First',\n        LastName: 'Last'\n    } as Customer),\n    attributeDefinitions : wrapInResolvedAsyncResult([] as AttributeDefinition[])\n};\n\nconst mockProps = {\n    resources: mockResources,\n    renderView: jest.fn(),\n    renderModuleAttributes: jest.fn()\n};\n\nconst mockActionContext = buildHydratedMockActionContext();\n\nconst mockContext = buildMockCoreContext(mockActionContext);\n\ndescribe('Account-Profile unit tests - Container', () => {\n\n    it('renders correctly if all props is provided ', () => {\n        // @ts-ignore mock partial data\n        const moduleProps: IAccountProfileProps<IAccountProfileData> = {\n            config: mockConfig,\n            data: mockData,\n            context: {\n                // @ts-ignore mock partial data\n                request: {\n                    features: {\n                    }\n                }\n            },\n            ...mockProps\n        };\n\n        shallow(<AccountProfileModule {...moduleProps} />);\n        expect(moduleProps.renderView).toMatchSnapshot();\n    });\n\n    it('does not render extra preferences if enableDataAnalytics feature is disabled', () => {\n        const moduleProps = {\n            ...buildMockModuleProps(mockData, {}, mockConfig, mockContext) as IAccountProfileProps<IAccountProfileData>,\n            resources: mockResources,\n            // @ts-ignore\n            renderView: jest.fn(props => <div props={props} />)\n        };\n\n        moduleProps.context.request.features.enableDataAnalytics = false;\n\n        const accountProfile = mount(<AccountProfileModule {...moduleProps} />);\n        expect(moduleProps.renderView).toBeCalled();\n        const viewProps = accountProfile.childAt(0).props().props;\n        expect(viewProps.preferenceSection.extraPreferences.length).toEqual(0);\n    });\n\n    it('render extra preferences if enableDataAnalytics feature is enabled', () => {\n        mockActionContext.requestContext.features = { enableDataAnalytics: true };\n\n        const moduleProps = {\n            ...buildMockModuleProps(mockData, {}, mockConfig, mockContext) as IAccountProfileProps<IAccountProfileData>,\n            resources: mockResources,\n            // @ts-ignore\n            renderView: jest.fn(props => <div props={props} />)\n        };\n\n        moduleProps.context.request.features.enableDataAnalytics = true;\n\n        const accountProfile = mount(<AccountProfileModule {...moduleProps} />);\n        expect(moduleProps.renderView).toBeCalled();\n        const viewProps = accountProfile.childAt(0).props().props;\n        expect(viewProps.preferenceSection.extraPreferences.length).toBeGreaterThan(0);\n    });\n\n});\n"]}