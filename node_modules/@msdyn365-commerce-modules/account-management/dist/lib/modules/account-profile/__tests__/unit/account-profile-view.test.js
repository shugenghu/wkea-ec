import { render } from 'enzyme';
import * as React from 'react';
import { buildMockModuleProps } from '@msdyn365-commerce/core';
import AccountProfileView from '../../account-profile.view';
describe('Account-Profile unit tests - View', () => {
    it('renders correctly', () => {
        const moduleProps = buildMockModuleProps({}, {});
        const mockProps = {
            ...moduleProps,
            AccountProfile: { moduleProps, className: 'module-class' },
            accountProfileWrapper: { className: 'account-profile-wrapper-class' },
            className: 'TestClassName',
            heading: '{HeadingComponent}',
            emailSection: {
                AccountProfileItem: { className: 'email-item-class' },
                heading: '{Email-Heading}',
                links: '{Email-Links}',
                description: '{Email-Eescription}'
            },
            nameSection: {
                AccountProfileItem: { className: 'name-item-class' },
                heading: '{Name-Heading}',
                links: '{Name-Links}',
                description: '{Name-Eescription}'
            },
            preferenceSection: {
                accountPreferences: { className: 'preferences-class' },
                heading: '{Preferences-Heading}',
                personalization: {
                    accountPreference: { className: 'preference-class' },
                    heading: '{Personalization-Heading}',
                    buttonWrapper: { className: 'button-wrapper-class' },
                    buttonYesText: '{Button-Yes-Text}',
                    buttonNoText: '{Button-No-Text}',
                    button: '{Preference-Heading}',
                    description: '{Preference-Description}',
                    onUpdateAccountPreference: jest.fn()
                }
            },
            customerAttributesWrapper: { className: 'account-profile-attributes-wrapper-class' },
            customerAttributesSection: '{[attribute]}'
        };
        const component = render(React.createElement(AccountProfileView, Object.assign({}, mockProps)));
        expect(component).toMatchSnapshot();
    });
    it('renders correctly with extra preferences', () => {
        const moduleProps = buildMockModuleProps({}, {});
        const mockProps = {
            ...moduleProps,
            AccountProfile: { moduleProps, className: 'module-class' },
            accountProfileWrapper: { className: 'account-profile-wrapper-class' },
            className: 'TestClassName',
            heading: '{HeadingComponent}',
            emailSection: {
                AccountProfileItem: { className: 'email-item-class' },
                heading: '{Email-Heading}',
                links: '{Email-Links}',
                description: '{Email-Eescription}'
            },
            nameSection: {
                AccountProfileItem: { className: 'name-item-class' },
                heading: '{Name-Heading}',
                links: '{Name-Links}',
                description: '{Name-Eescription}'
            },
            preferenceSection: {
                accountPreferences: { className: 'preferences-class' },
                heading: '{Preferences-Heading}',
                personalization: {
                    accountPreference: { className: 'preference-class' },
                    heading: '{Personalization-Heading}',
                    buttonWrapper: { className: 'button-wrapper-class' },
                    buttonYesText: '{Button-Yes-Text}',
                    buttonNoText: '{Button-No-Text}',
                    button: '{Preference-Heading}',
                    description: '{Preference-Description}',
                    onUpdateAccountPreference: jest.fn()
                },
                extraPreferences: [
                    {
                        accountPreference: { className: 'preference-class' },
                        heading: '{Personalization-Heading}',
                        buttonWrapper: { className: 'button-wrapper-class' },
                        buttonYesText: '{Button-Yes-Text}',
                        buttonNoText: '{Button-No-Text}',
                        button: '{Preference-Heading}',
                        description: '{Preference-Description}',
                        onUpdateAccountPreference: jest.fn()
                    }
                ]
            },
            customerAttributesWrapper: { className: 'account-profile-attributes-wrapper-class' },
            customerAttributesSection: '{[attribute]}'
        };
        const component = render(React.createElement(AccountProfileView, Object.assign({}, mockProps)));
        expect(component).toMatchSnapshot();
    });
});
//# sourceMappingURL=account-profile-view.test.js.map