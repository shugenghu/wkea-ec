{"version":3,"file":"account-profile-view.test.js","sourceRoot":"./src/","sources":["modules/account-profile/__tests__/unit/account-profile-view.test.tsx"],"names":[],"mappings":"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","sourcesContent":["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nimport { render } from 'enzyme';\nimport * as React from 'react';\n\nimport { buildMockModuleProps } from '@msdyn365-commerce/core';\n\nimport { IAccountProfileData } from '../../account-profile.data';\nimport { IAccountProfileProps } from '../../account-profile.props.autogenerated';\nimport AccountProfileView from '../../account-profile.view';\n\ndescribe('Account-Profile unit tests - View', () => {\n    it('renders correctly', () => {\n        const moduleProps: IAccountProfileProps<IAccountProfileData> = buildMockModuleProps({}, {}) as IAccountProfileProps<IAccountProfileData>;\n\n        const mockProps = {\n            ...moduleProps,\n            AccountProfile: { moduleProps, className: 'module-class' },\n            accountProfileWrapper: { className: 'account-profile-wrapper-class' },\n            className: 'TestClassName',\n            heading: '{HeadingComponent}',\n            emailSection: {\n                AccountProfileItem: { className: 'email-item-class' },\n                heading: '{Email-Heading}',\n                links: '{Email-Links}',\n                description: '{Email-Eescription}'\n            },\n            nameSection: {\n                AccountProfileItem: { className: 'name-item-class' },\n                heading: '{Name-Heading}',\n                links: '{Name-Links}',\n                description: '{Name-Eescription}'\n            },\n            preferenceSection: {\n                accountPreferences: { className: 'preferences-class' },\n                heading: '{Preferences-Heading}',\n                personalization: {\n                    accountPreference: { className: 'preference-class' },\n                    heading: '{Personalization-Heading}',\n                    buttonWrapper: { className: 'button-wrapper-class' },\n                    buttonYesText: '{Button-Yes-Text}',\n                    buttonNoText: '{Button-No-Text}',\n                    button: '{Preference-Heading}',\n                    description: '{Preference-Description}',\n                    onUpdateAccountPreference: jest.fn()\n                }\n            },\n            customerAttributesWrapper: { className: 'account-profile-attributes-wrapper-class' },\n            customerAttributesSection: '{[attribute]}'\n        };\n        // @ts-ignore\n        const component = render(<AccountProfileView {...mockProps} />);\n        expect(component).toMatchSnapshot();\n    });\n\n    it('renders correctly with extra preferences', () => {\n        const moduleProps: IAccountProfileProps<IAccountProfileData> = buildMockModuleProps({}, {}) as IAccountProfileProps<IAccountProfileData>;\n\n        const mockProps = {\n            ...moduleProps,\n            AccountProfile: { moduleProps, className: 'module-class' },\n            accountProfileWrapper: { className: 'account-profile-wrapper-class' },\n            className: 'TestClassName',\n            heading: '{HeadingComponent}',\n            emailSection: {\n                AccountProfileItem: { className: 'email-item-class' },\n                heading: '{Email-Heading}',\n                links: '{Email-Links}',\n                description: '{Email-Eescription}'\n            },\n            nameSection: {\n                AccountProfileItem: { className: 'name-item-class' },\n                heading: '{Name-Heading}',\n                links: '{Name-Links}',\n                description: '{Name-Eescription}'\n            },\n            preferenceSection: {\n                accountPreferences: { className: 'preferences-class' },\n                heading: '{Preferences-Heading}',\n                personalization: {\n                    accountPreference: { className: 'preference-class' },\n                    heading: '{Personalization-Heading}',\n                    buttonWrapper: { className: 'button-wrapper-class' },\n                    buttonYesText: '{Button-Yes-Text}',\n                    buttonNoText: '{Button-No-Text}',\n                    button: '{Preference-Heading}',\n                    description: '{Preference-Description}',\n                    onUpdateAccountPreference: jest.fn()\n                },\n                extraPreferences:\n                [\n                    {\n                        accountPreference: { className: 'preference-class' },\n                        heading: '{Personalization-Heading}',\n                        buttonWrapper: { className: 'button-wrapper-class' },\n                        buttonYesText: '{Button-Yes-Text}',\n                        buttonNoText: '{Button-No-Text}',\n                        button: '{Preference-Heading}',\n                        description: '{Preference-Description}',\n                        onUpdateAccountPreference: jest.fn()\n                    }\n                ]\n            },\n            customerAttributesWrapper: { className: 'account-profile-attributes-wrapper-class' },\n            customerAttributesSection: '{[attribute]}'\n        };\n        // @ts-ignore\n        const component = render(<AccountProfileView {...mockProps} />);\n        expect(component).toMatchSnapshot();\n    });\n});\n"]}