{"version":3,"file":"account-profile.js","sourceRoot":"./src/","sources":["modules/account-profile/account-profile.tsx"],"names":[],"mappings":";AAIA,OAAO,KAAK,QAAQ,MAAM,yBAAyB,CAAC;AACpD,OAAO,UAAU,MAAM,YAAY,CAAC;AACpC,OAAO,GAAG,MAAM,YAAY,CAAC;AAC7B,OAAO,EAAE,QAAQ,EAAE,UAAU,EAAE,MAAM,MAAM,CAAC;AAC5C,OAAO,EAAE,QAAQ,EAAE,MAAM,YAAY,CAAC;AACtC,OAAO,KAAK,KAAK,MAAM,OAAO,CAAC;AAE/B,OAAO,EAAE,6BAA6B,EAAE,kCAAkC,EAAE,MAAM,2CAA2C,CAAC;AAC9H,OAAO,EAAE,MAAM,EAAE,gBAAgB,EAAE,sBAAsB,EAAE,kBAAkB,EAAyD,MAAM,sCAAsC,CAAC;AAInL,OAAO,wBAAwB,MAAM,yCAAyC,CAAC;AAC/E,OAAO,oBAAoB,MAAM,0CAA0C,CAAC;AAC5E,OAAO,cAA8B,MAAM,oCAAoC,CAAC;AAChF,OAAO,aAAa,MAAM,mCAAmC,CAAC;AAiD9D,IAAM,cAAc,GAApB,MAAM,cAAe,SAAQ,KAAK,CAAC,SAAoD;IAMnF,YAAY,KAAgD;QACxD,KAAK,CAAC,KAAK,CAAC,CAAC;QANG,yBAAoB,GAAY,KAAK,CAAC;QAoEnD,wBAAmB,GAAG,CAAC,KAAoC,EAAE,EAAE,CAAC,IAAI,CAAC,KAAK,CAAC,MAAM,CAAC,OAAO,CAAC,IAAI,GAAG,KAAK,CAAC,MAAM,CAAC,KAAK,CAAC;QACpH,6BAAwB,GAAG,CAAC,KAAoC,EAAE,EAAE,CAAC,IAAI,CAAC,KAAK,CAAC,MAAM,CAAC,0BAA2B,CAAC,IAAI,GAAG,KAAK,CAAC,MAAM,CAAC,KAAK,CAAC;QAC7I,4BAAuB,GAAG,CAAC,KAAoC,EAAE,EAAE,CAAC,IAAI,CAAC,KAAK,CAAC,MAAM,CAAC,kBAAmB,CAAC,IAAI,GAAG,KAAK,CAAC,MAAM,CAAC,KAAK,CAAC;QACpI,yBAAoB,GAAG,CAAC,SAAiB,EAAE,EAAE,CAAC,CAAC,KAAoC,EAAE,EAAE;YAC1F,IAAG,IAAI,CAAC,KAAK,CAAC,SAAS,CAAC,cAAc,EAAE;gBACtC,IAAI,CAAC,KAAK,CAAC,SAAS,CAAC,cAAc,GAAG,KAAK,CAAC,MAAM,CAAC,KAAK,CAAC;aAC1D;QACH,CAAC,CAAC;QAwEI,sBAAiB,GAAG,CAAC,SAAiB,EAAE,cAA4B,EAAE,eAAuB,EAAE,WAAmB,EAAE,QAAiB,EAAE,EAAE;YAC7I,MAAM,EAAE,iBAAiB,EAAE,gBAAgB,EAAE,GAAG,IAAI,CAAC,KAAK,CAAC,SAAS,CAAC;YACrE,MAAM,WAAW,GAAG,QAAQ,CAAC,CAAC,CAAC,SAAS,CAAC,CAAC,CAAC,QAAQ,CAAC;YACpD,MAAM,cAAc,GAAG,CAAC,KAAoC,EAAE,EAAE,GAAG,OAAO,IAAI,CAAC,6BAA6B,CAAC,SAAS,CAAC,CAAC,CAAC,CAAC,CAAC;YAC3H,IAAI,CAAC,OAAO,CAAC,aAAa,CAAC,KAAK,GAAG,cAAc,CAAC,IAAI,CAAC;YACvD,MAAM,UAAU,GAAG,sBAAsB,CAAC,IAAI,CAAC,gBAAiB,EAAE,IAAI,CAAC,OAAO,CAAC,CAAC;YAEhF,OAAO;gBACH,iBAAiB,EAAE;oBACf,SAAS,EAAE,UAAU,CAAC,gCAAgC,EAAE,kCAAkC,SAAS,EAAE,EAAE,EAAE,8CAA8C,EAAE,IAAI,CAAC,oBAAoB,EAAE,CAAC;iBACxL;gBACD,OAAO,EAAE,cAAc,IAAI,CACvB,oBAAC,QAAQ,CAAC,IAAI,IACZ,SAAS,EAAC,wCAAwC,EAClD,GAAG,EAAE,cAAc,CAAC,GAAG,IAAI,IAAI,EAC/B,IAAI,EAAE,cAAc,CAAC,IAAI,EACzB,SAAS,EAAI,EAAC,MAAM,EAAE,IAAI,CAAC,mBAAmB,EAAE,cAAc,EAAE,IAAI,CAAC,KAAK,CAAC,OAAO,CAAC,OAAO,EAAC,GAC3F,CAAC;gBACP,aAAa,EAAE;oBACX,SAAS,EAAE,UAAU,CAAC,oCAAoC,EAAE,8BAA8B,WAAW,EAAE,CAAC;iBAC3G;gBACD,aAAa,EAAE,oBAAC,aAAa,IAAC,SAAS,EAAC,wCAAwC,EAAC,IAAI,EAAE,gBAAgB,GAAI;gBAC3G,YAAY,EAAE,oBAAC,aAAa,IAAC,SAAS,EAAC,yCAAyC,EAAC,IAAI,EAAE,iBAAiB,GAAI;gBAC5G,MAAM,EAAE,CACJ,oBAAC,MAAM,kBACH,SAAS,EAAE,UAAU,CAAC,mCAAmC,EAAE,8BAA8B,WAAW,SAAS,CAAC,gBAClG,eAAe,EAC3B,KAAK,EAAE,QAAQ,CAAC,QAAQ,EAAE,kBACZ,CAAC,QAAQ,EACvB,OAAO,EAAE,cAAc,IACnB,UAAU,EAChB,CACL;gBACD,WAAW,EAAE,oBAAC,oBAAoB,IAAC,SAAS,EAAC,4CAA4C,EAAC,WAAW,EAAE,WAAW,GAAI;gBACtH,yBAAyB,EAAE,GAAG,EAAE,CAAC,IAAI,CAAC,6BAA6B,CAAC,SAAS,CAAC;aACjF,CAAC;QACN,CAAC,CAAA;QAEO,kCAA6B,GAAG,KAAK,EAAE,cAAuB,EAAE,EAAE;YACtE,MAAM,mBAAmB,GAAG,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC,mBAAmB,CAAC,MAAM,CAAC;YAEvE,IAAI,mBAAmB,EAAE;gBACrB,MAAM,EACF,SAAS,EACT,OAAO,EAAE,EAAE,OAAO,EAAE,aAAa,EAAE,EACtC,GAAG,IAAI,CAAC,KAAK,CAAC;gBAEf,IAAI,uBAAuB,GAAG,KAAK,CAAC;gBACpC,IAAI,KAAK,CAAC;gBAEV,QAAQ,cAAc,EAAE;oBACpB,KAAK,cAAc;wBACf,uBAAuB,GAAG,mBAAmB,CAAC,yBAAyB,IAAI,KAAK,CAAC;wBACjF,KAAK,GAAG,IAAI,kCAAkC,CAAC,mBAAmB,CAAC,aAAa,EAAE,CAAC,uBAAuB,EAAE,OAAO,CAAC,WAAW,EAAE,cAAc,CAAC,CAAC;wBACjJ,MAAM;oBACV,KAAK,SAAS,CAAC;oBACf,KAAK,iBAAiB,CAAC;oBACvB;wBACI,uBAAuB,GAAG,mBAAmB,CAAC,qBAAqB,IAAI,KAAK,CAAC;wBAC7E,KAAK,GAAG,IAAI,kCAAkC,CAAC,mBAAmB,CAAC,aAAa,EAAE,CAAC,uBAAuB,EAAE,OAAO,CAAC,WAAW,EAAE,cAAc,CAAC,CAAC;iBACxJ;gBAED,IAAI,CAAC,oBAAoB,GAAG,IAAI,CAAC;gBAEjC,IAAI;oBACA,MAAM,6BAA6B,CAAC,KAAK,EAAE,aAAa,CAAC,CAAC;iBAC7D;gBAAC,OAAO,KAAK,EAAE;oBACZ,IAAI,SAAS,EAAE;wBACX,SAAS,CAAC,SAAS,CAAC,KAAK,CAAC,CAAC;wBAC3B,SAAS,CAAC,KAAK,CAAC,2CAA2C,CAAC,CAAC;qBAChE;iBACJ;gBAED,IAAI,CAAC,oBAAoB,GAAG,KAAK,CAAC;aACrC;QACL,CAAC,CAAA;QAEO,8BAAyB,GAAG,GAAoB,EAAE;YACtD,OAAO,CACH,oBAAC,wBAAwB,IACtB,mBAAmB,EAAI,IAAI,CAAC,KAAK,GAClC,CACL,CAAC;QACN,CAAC,CAAA;QA/NG,IAAI,CAAC,gBAAgB,GAAG,kBAAkB,CAAC,IAAI,CAAC,KAAK,CAAC,OAAO,CAAC,OAAO,CAAC,iBAAkB,EAAE,IAAI,CAAC,KAAK,CAAC,YAAY,EAAE,IAAI,CAAC,KAAK,CAAC,SAAS,CAAC,CAAC;QACzI,IAAI,CAAC,OAAO,GAAG,gBAAgB,CAAC,OAAO,EAAE,IAAI,CAAC,gBAAgB,EAAE,EAAE,CAAC,CAAC;IACxE,CAAC;IAEM,MAAM;QAET,MAAM,EAAE,MAAM,EAAE,SAAS,EAAE,IAAI,EAAE,GAAG,IAAI,CAAC,KAAK,CAAC;QAC/C,MAAM,EAAE,SAAS,EAAE,OAAO,EAAE,0BAA0B,EAAE,kBAAkB,EAAE,cAAc,EAAE,SAAS,EAAE,aAAa,EAAE,GAAG,MAAM,CAAC;QAEhI,MAAM,EAAE,cAAc,EAAE,mBAAmB,EAAE,GAAG,SAAS,CAAC;QAC1D,MAAM,mBAAmB,GAAG,IAAI,CAAC,mBAAmB,CAAC,MAAM,CAAC;QAG5D,MAAM,sBAAsB,GAAG,CAAC,cAAc,IAAI,cAAc,CAAC,MAAM,GAAG,CAAC,CAAC,IAAI,SAAS,IAAI,aAAa,IAAI,KAAK,CAAC;QACpH,MAAM,QAAQ,GAAe;YACzB,OAAO,EAAE;gBACL,cAAc,EAAE,GAAG,CAAC,IAAI,CAAC,KAAK,EAAE,qCAAqC,EAAE,EAAE,CAAC;aAC7E;YACD,QAAQ,EAAE,cAAc;YACxB,SAAS,EAAE,mBAAmB;SACjC,CAAC;QAEF,MAAM,SAAS,GAAG;YACd,GAAG,IAAI,CAAC,KAAK;YACb,SAAS,EAAE,SAAS;YACpB,cAAc,EAAE;gBACZ,WAAW,EAAE,IAAI,CAAC,KAAK;gBACvB,SAAS,EAAE,UAAU,CAAC,oBAAoB,EAAE,MAAM,CAAC,SAAS,CAAC;aAChE;YACD,qBAAqB,EAAE;gBACnB,SAAS,EAAE,UAAU,CAAC,4BAA4B,CAAC;aACtD;YACD,OAAO,EAAE,OAAO,IAAI,CAChB,oBAAC,QAAQ,CAAC,IAAI,IACZ,SAAS,EAAC,kCAAkC,EAC5C,GAAG,EAAE,OAAO,CAAC,GAAG,IAAI,IAAI,EACxB,IAAI,EAAE,OAAO,CAAC,IAAI,EAClB,SAAS,EAAI,EAAC,MAAM,EAAE,IAAI,CAAC,mBAAmB,EAAE,cAAc,EAAE,IAAI,CAAC,KAAK,CAAC,OAAO,CAAC,OAAO,EAAC,GAC3F,CAAC;YACP,YAAY,EAAE,IAAI,CAAC,mBAAmB,CAClC,UAAU,CAAC,6BAA6B,EAAE,mCAAmC,CAAC,EAC9E,0BAA6D,EAC7D,mBAAmB,IAAI,mBAAmB,CAAC,KAAK,CACnD;YACD,WAAW,EAAE,IAAI,CAAC,kBAAkB,CAChC,UAAU,CAAC,6BAA6B,EAAE,kCAAkC,CAAC,EAC7E,kBAA6C,EAC7C,GAAG,mBAAmB,IAAI,mBAAmB,CAAC,SAAS,IAAI,mBAAmB,IAAI,mBAAmB,CAAC,QAAQ,EAAE,EAChH,CAAC,QAAQ,CAAC,CACb;YACD,iBAAiB,EAAE,IAAI,CAAC,wBAAwB,CAC5C,UAAU,CAAC,6BAA6B,EAAE,yCAAyC,CAAC,EACpF,mBAAmB,CACtB;YACD,yBAAyB,EAAE;gBACvB,SAAS,EAAE,UAAU,CAAC,wCAAwC,CAAC;aAClE;YACD,yBAAyB,EAAE,sBAAsB,IAAI,IAAI,CAAC,yBAAyB,EAAE;SACxF,CAAC;QACF,OAAO,IAAI,CAAC,KAAK,CAAC,UAAU,CAAC,SAAS,CAAuB,CAAC;IAClE,CAAC;IAUS,IAAI,cAAc;QACxB,OAAO,GAAG,CAAC,IAAI,CAAC,KAAK,EAAE,qCAAqC,EAAE,EAAE,CAAC,CAAC;IACtE,CAAC;IACO,mBAAmB,CAAC,SAAiB,EAAE,OAAyC,EAAE,WAAoB,EAAE,KAAoB;QAChI,OAAO;YACH,kBAAkB,EAAE;gBAChB,SAAS,EAAE,SAAS;aACvB;YACD,OAAO,EAAE,OAAO,IAAI,CAChB,oBAAC,QAAQ,CAAC,IAAI,IACZ,SAAS,EAAC,qCAAqC,EAC/C,GAAG,EAAE,OAAO,CAAC,GAAG,IAAI,IAAI,EACxB,IAAI,EAAE,OAAO,CAAC,IAAI,EAClB,SAAS,EAAI,EAAC,MAAM,EAAE,IAAI,CAAC,wBAAwB,EAAE,cAAc,EAAE,IAAI,CAAC,KAAK,CAAC,OAAO,CAAC,OAAO,EAAC,GAChG,CAAC;YACP,KAAK,EAAE,KAAK,IAAI,KAAK,CAAC,MAAM,GAAG,CAAC,IAAI,oBAAC,cAAc,oBAAK,EAAE,KAAK,EAAE,KAAK,EAAE,YAAY,EAAE,IAAI,CAAC,oBAAoB,EAAE,cAAc,EAAE,IAAI,CAAC,KAAK,CAAC,OAAO,CAAC,OAAO,EAAE,gBAAgB,EAAE,IAAI,CAAC,gBAAgB,EAAE,EAAI;YAC1M,WAAW,EAAE,WAAW,IAAI,oBAAC,oBAAoB,IAAC,SAAS,EAAC,yCAAyC,EAAC,WAAW,EAAE,WAAW,GAAI;SACrI,CAAC;IACN,CAAC;IAEO,kBAAkB,CAAC,SAAiB,EAAE,OAAiC,EAAE,WAAoB,EAAE,KAAoB;QACvH,OAAO;YACH,kBAAkB,EAAE;gBAChB,SAAS,EAAE,SAAS;aACvB;YACD,OAAO,EAAE,OAAO,IAAI,CAChB,oBAAC,QAAQ,CAAC,IAAI,IACZ,SAAS,EAAC,qCAAqC,EAC/C,GAAG,EAAE,OAAO,CAAC,GAAG,IAAI,IAAI,EACxB,IAAI,EAAE,OAAO,CAAC,IAAI,EAClB,SAAS,EAAI,EAAC,MAAM,EAAE,IAAI,CAAC,uBAAuB,EAAE,cAAc,EAAE,IAAI,CAAC,KAAK,CAAC,OAAO,CAAC,OAAO,EAAC,GAC/F,CAAC;YACP,KAAK,EAAE,KAAK,IAAI,KAAK,CAAC,MAAM,GAAG,CAAC,IAAI,oBAAC,cAAc,oBAAK,EAAE,KAAK,EAAE,KAAK,EAAE,YAAY,EAAE,IAAI,CAAC,oBAAoB,EAAE,cAAc,EAAE,IAAI,CAAC,KAAK,CAAC,OAAO,CAAC,OAAO,EAAE,gBAAgB,EAAE,IAAI,CAAC,gBAAgB,EAAE,EAAI;YAC1M,WAAW,EAAE,WAAW,IAAI,oBAAC,oBAAoB,IAAC,SAAS,EAAC,yCAAyC,EAAC,WAAW,EAAE,WAAW,GAAI;SACrI,CAAC;IACN,CAAC;IACO,wBAAwB,CAAC,SAAiB,EAAE,mBAA8B;QAC9E,MAAM,EAAE,0BAA0B,EAAE,oCAAoC,EACpE,sBAAsB,EAAE,gCAAgC,EAAE,GAAG,IAAI,CAAC,KAAK,CAAC,SAAS,CAAC;QACtF,MAAM,EAAE,yBAAyB,EAAE,6BAA6B,EAAE,yBAAyB,EAAE,GAAG,IAAI,CAAC,KAAK,CAAC,MAAM,CAAC;QAClH,MAAM,EAAE,mBAAmB,EAAE,GAAG,IAAI,CAAC,KAAK,CAAC,OAAO,CAAC,OAAO,CAAC,QAAQ,CAAC;QACpE,MAAM,gBAAgB,GAAyB,EAAE,CAAC;QAElD,IAAI,CAAC,mBAAmB,EAAE;YACtB,IAAI,CAAC,KAAK,CAAC,OAAO,CAAC,SAAS,CAAC,KAAK,CAAC,mDAAmD,CAAC,CAAC;YACxF,OAAO,IAAI,CAAC;SACf;QAGD,mBAAmB,IAAI,yBAAyB;YAC5C,gBAAgB,CAAC,IAAI,CAAC,IAAI,CAAC,iBAAiB,CAAC,cAAc,EAAE,yBAAyC,EAAE,gCAAgC,EAC3F,sBAAsB,EAAE,mBAAmB,CAAC,yBAAyB,IAAI,KAAK,CAAC,CAAC,CAAC;QAElI,OAAO;YACH,kBAAkB,EAAE;gBAChB,SAAS,EAAE,SAAS;aACvB;YACD,OAAO,EAAE,yBAAyB,IAAI,CAClC,oBAAC,QAAQ,CAAC,IAAI,IACZ,SAAS,EAAC,qCAAqC,EAC/C,GAAG,EAAE,yBAAyB,CAAC,GAAG,IAAI,IAAI,EAC1C,IAAI,EAAE,yBAAyB,CAAC,IAAI,EACpC,SAAS,EAAI,EAAC,MAAM,EAAE,IAAI,CAAC,mBAAmB,EAAE,cAAc,EAAE,IAAI,CAAC,KAAK,CAAC,OAAO,CAAC,OAAO,EAAC,GAC3F,CAAC;YACP,eAAe,EAAE,IAAI,CAAC,iBAAiB,CAAC,iBAAiB,EAAE,6BAA6C,EAAE,oCAAoC,EACtG,0BAA0B,EAAE,mBAAmB,CAAC,qBAAqB,IAAI,KAAK,CAAC;YACvH,gBAAgB,EAAE,gBAAgB,IAAI,SAAS;SAClD,CAAC;IACN,CAAC;CAsFJ,CAAA;AAvOe;IAAX,UAAU;4DAA+C;AA6EhD;IAAT,QAAQ;oDAER;AAhFC,cAAc;IADnB,QAAQ;GACH,cAAc,CAwOnB;AAED,eAAe,cAAc,CAAC","sourcesContent":["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nimport * as Msdyn365 from '@msdyn365-commerce/core';\nimport classnames from 'classnames';\nimport get from 'lodash/get';\nimport { computed, observable } from 'mobx';\nimport { observer } from 'mobx-react';\nimport * as React from 'react';\n\nimport { updateCustomerPersonalization, updateCustomerPersonalizationInput } from '@msdyn365-commerce-modules/retail-actions';\nimport { Button, getPayloadObject, getTelemetryAttributes, getTelemetryObject, IModuleProps, INodeProps, IPayLoad, ITelemetryContent } from '@msdyn365-commerce-modules/utilities';\nimport { Customer } from '@msdyn365-commerce/retail-proxy/dist/Entities/CommerceTypes.g';\nimport { IAccountProfileData } from './account-profile.data';\nimport { IAccountProfileProps, IEmailAddressSectionHeadingData, IHeadingData, INameSectionHeadingData} from './account-profile.props.autogenerated';\nimport AccountProfileAttributes from './components/account-profile-attributes';\nimport DescriptionComponent from './components/account-profile-description';\nimport LinksComponent, { ILinksData } from './components/account-profile-links';\nimport TextComponent from './components/account-profile-text';\n\nexport interface IAccountPreference {\n    accountPreference: INodeProps;\n    heading: React.ReactNode;\n    buttonWrapper: INodeProps;\n    buttonYesText: React.ReactNode;\n    buttonNoText: React.ReactNode;\n    button: React.ReactNode;\n    description: React.ReactNode;\n    onUpdateAccountPreference(preferenceType?: string): void;\n}\n\nexport interface IAccountPreferences {\n    accountPreferences: INodeProps;\n    heading?: React.ReactNode;\n    personalization: IAccountPreference;\n    extraPreferences?: IAccountPreference[];\n}\n\nexport interface IAccountProfileItem {\n    AccountProfileItem: INodeProps;\n    heading?: React.ReactNode;\n    links?: React.ReactNode;\n    description?: React.ReactNode;\n}\n\nexport interface IAccountCustomerAttributes {\n    customerAttributes?: React.ReactNode;\n}\n\nexport interface IAccountProfileViewProps extends IAccountProfileProps<IAccountProfileData> {\n    AccountProfile: IModuleProps;\n    accountProfileWrapper?: INodeProps;\n    className: string;\n    heading?: React.ReactNode;\n    emailSection: IAccountProfileItem;\n    nameSection: IAccountProfileItem;\n    preferenceSection: IAccountPreferences;\n    customerAttributesWrapper?: INodeProps;\n    customerAttributesSection?: IAccountCustomerAttributes;\n}\n\n/**\n *\n * AccountProfile component\n * @extends {React.Component<IAccountProfileProps<IAccountProfileData>>}\n */\n@observer\nclass AccountProfile extends React.Component<IAccountProfileProps<IAccountProfileData>> {\n    @observable private isUpdatingPreference: boolean = false;\n\n    private telemetryContent?: ITelemetryContent;\n    private payLoad: IPayLoad;\n\n    constructor(props: IAccountProfileProps<IAccountProfileData>) {\n        super(props);\n        this.telemetryContent = getTelemetryObject(this.props.context.request.telemetryPageName!, this.props.friendlyName, this.props.telemetry);\n        this.payLoad = getPayloadObject('click', this.telemetryContent, '');\n    }\n\n    public render(): JSX.Element {\n\n        const { config, resources, data } = this.props;\n        const { className, heading, emailAddressSectionHeading, nameSectionHeading, showAttributes, showPhone, showVatNumber } = config;\n\n        const { editButtonText, editButtonAriaLabel } = resources;\n        const customerInformation = data.customerInformation.result;\n\n        // As per the design, phone and vat numbers are part of the profile attributes section\n        const shouldRenderAttributes = (showAttributes && showAttributes.length > 0) || showPhone || showVatNumber || false;\n        const editLink: ILinksData = {\n            linkUrl: {\n                destinationUrl: get(this.props, 'context.request.user.editProfileUrl', '')\n            },\n            linkText: editButtonText,\n            ariaLabel: editButtonAriaLabel\n        };\n\n        const viewProps = {\n            ...this.props,\n            className: className,\n            AccountProfile: {\n                moduleProps: this.props,\n                className: classnames('ms-account-profile', config.className)\n            },\n            accountProfileWrapper: {\n                className: classnames('ms-account-profile-wrapper')\n            },\n            heading: heading && (\n                <Msdyn365.Text\n                  className='ms-account-loyalty-tile__heading'\n                  tag={heading.tag || 'h2'}\n                  text={heading.text}\n                  editProps = {{onEdit: this.handleHeadingChange, requestContext: this.props.context.request}}\n                />),\n            emailSection: this._renderEmailSection(\n                classnames('ms-account-profile__section', 'ms-account-profile__section-email'),\n                emailAddressSectionHeading as IEmailAddressSectionHeadingData,\n                customerInformation && customerInformation.Email\n            ),\n            nameSection: this._renderNameSection(\n                classnames('ms-account-profile__section', 'ms-account-profile__section-name'),\n                nameSectionHeading as INameSectionHeadingData,\n                `${customerInformation && customerInformation.FirstName} ${customerInformation && customerInformation.LastName}`,\n                [editLink]\n            ),\n            preferenceSection: this._renderPreferenceSection(\n                classnames('ms-account-profile__section', 'ms-account-profile__section-preferences'),\n                customerInformation,\n            ),\n            customerAttributesWrapper: {\n                className: classnames('ms-account-profile__attributes-wrapper')\n            },\n            customerAttributesSection: shouldRenderAttributes && this._renderCustomerAttributes()\n        };\n        return this.props.renderView(viewProps) as React.ReactElement;\n    }\n    public handleHeadingChange = (event: Msdyn365.ContentEditableEvent) => this.props.config.heading.text = event.target.value;\n    public handleEmailHeadingChange = (event: Msdyn365.ContentEditableEvent) => this.props.config.emailAddressSectionHeading!.text = event.target.value;\n    public handleNameHeadingChange = (event: Msdyn365.ContentEditableEvent) => this.props.config.nameSectionHeading!.text = event.target.value;\n    public handleLinkTextChange = (linkIndex: number) => (event: Msdyn365.ContentEditableEvent) => {\n        if(this.props.resources.editButtonText) {\n          this.props.resources.editButtonText = event.target.value;\n        }\n      };\n\n    @computed get editProfileUrl(): string {\n        return get(this.props, 'context.request.user.editProfileUrl', '');\n    }\n    private _renderEmailSection(className: string, heading?: IEmailAddressSectionHeadingData, description?: string, links?: ILinksData[]): IAccountProfileItem {\n        return {\n            AccountProfileItem: {\n                className: className\n            },\n            heading: heading && (\n                <Msdyn365.Text\n                  className='ms-account-profile__section-heading'\n                  tag={heading.tag || 'h2'}\n                  text={heading.text}\n                  editProps = {{onEdit: this.handleEmailHeadingChange, requestContext: this.props.context.request}}\n                />),\n            links: links && links.length > 0 && <LinksComponent {...{ links: links, onTextChange: this.handleLinkTextChange, requestContext: this.props.context.request, telemetryContent: this.telemetryContent }} />,\n            description: description && <DescriptionComponent className='ms-account-profile__section-description' description={description} />\n        };\n    }\n\n    private _renderNameSection(className: string, heading?: INameSectionHeadingData, description?: string, links?: ILinksData[]): IAccountProfileItem {\n        return {\n            AccountProfileItem: {\n                className: className\n            },\n            heading: heading && (\n                <Msdyn365.Text\n                  className='ms-account-profile__section-heading'\n                  tag={heading.tag || 'h2'}\n                  text={heading.text}\n                  editProps = {{onEdit: this.handleNameHeadingChange, requestContext: this.props.context.request}}\n                />),\n            links: links && links.length > 0 && <LinksComponent {...{ links: links, onTextChange: this.handleLinkTextChange, requestContext: this.props.context.request, telemetryContent: this.telemetryContent }} />,\n            description: description && <DescriptionComponent className='ms-account-profile__section-description' description={description} />\n        };\n    }\n    private _renderPreferenceSection(className: string, customerInformation?: Customer): IAccountPreferences | null {\n        const { personalizationDescription, personalizationEnableButtonAriaLabel,\n            webTrackingDescription, webTrackingEnableButtonAriaLabel } = this.props.resources;\n        const { preferencesSectionHeading, personalizationSectionHeading, webTrackingSectionHeading } = this.props.config;\n        const { enableDataAnalytics } = this.props.context.request.features;\n        const extraPreferences: IAccountPreference[] = [];\n\n        if (!customerInformation) {\n            this.props.context.telemetry.error('Account profile data is empty, module wont render');\n            return null;\n        }\n\n        // show browser activity loggin preference if switch is enabled AND a heading is provided\n        enableDataAnalytics && webTrackingSectionHeading &&\n            extraPreferences.push(this._renderPreference('web-tracking', webTrackingSectionHeading as IHeadingData, webTrackingEnableButtonAriaLabel,\n                                                         webTrackingDescription, customerInformation.OptOutWebActivityTracking || false));\n\n        return {\n            accountPreferences: {\n                className: className\n            },\n            heading: preferencesSectionHeading && (\n                <Msdyn365.Text\n                  className='ms-account-profile__section-heading'\n                  tag={preferencesSectionHeading.tag || 'h2'}\n                  text={preferencesSectionHeading.text}\n                  editProps = {{onEdit: this.handleHeadingChange, requestContext: this.props.context.request}}\n                />),\n            personalization: this._renderPreference('personalization', personalizationSectionHeading as IHeadingData, personalizationEnableButtonAriaLabel,\n                                                    personalizationDescription, customerInformation.OptOutPersonalization || false),\n            extraPreferences: extraPreferences || undefined\n        };\n    }\n\n    private _renderPreference = (className: string, sectionHeading: IHeadingData, enableAriaLabel: string, description: string, isOptOut: boolean) => {\n        const { toggleDisableText, toggleEnableText } = this.props.resources;\n        const toggleState = isOptOut ? 'disable' : 'enable';\n        const onClickHandler = (event: React.MouseEvent<HTMLElement>) => { return this._updateAccountPersonalization(className); };\n        this.payLoad.contentAction.etext = sectionHeading.text;\n        const attributes = getTelemetryAttributes(this.telemetryContent!, this.payLoad);\n\n        return {\n            accountPreference: {\n                className: classnames('ms-account-profile__preference', `ms-account-profile__preference-${className}`, { 'ms-account-profile__personalization-updating': this.isUpdatingPreference })\n            },\n            heading: sectionHeading && (\n                <Msdyn365.Text\n                  className='ms-account-profile__preference-heading'\n                  tag={sectionHeading.tag || 'h2'}\n                  text={sectionHeading.text}\n                  editProps = {{onEdit: this.handleHeadingChange, requestContext: this.props.context.request}}\n                />),\n            buttonWrapper: {\n                className: classnames('ms-account-profile__toggle-wrapper', `ms-account-profile__toggle-${toggleState}`)\n            },\n            buttonYesText: <TextComponent className='ms-account-profile__toggle-enable-text' text={toggleEnableText} />,\n            buttonNoText: <TextComponent className='ms-account-profile__toggle-disable-text' text={toggleDisableText} />,\n            button: (\n                <Button\n                    className={classnames('ms-account-profile__toggle-button', `ms-account-profile__toggle-${toggleState}-button`)}\n                    aria-label={enableAriaLabel}\n                    value={isOptOut.toString()}\n                    aria-pressed={!isOptOut}\n                    onClick={onClickHandler}\n                    {...attributes}\n                />\n            ),\n            description: <DescriptionComponent className='ms-account-profile__preference-description' description={description} />,\n            onUpdateAccountPreference: () => this._updateAccountPersonalization(className)\n        };\n    }\n\n    private _updateAccountPersonalization = async (preferenceType?: string) => {\n        const customerInformation = this.props.data.customerInformation.result;\n\n        if (customerInformation) {\n            const {\n                telemetry,\n                context: { request, actionContext }\n            } = this.props;\n\n            let isOptOutPersonalization = false;\n            let input;\n\n            switch (preferenceType) {\n                case 'web-tracking':\n                    isOptOutPersonalization = customerInformation.OptOutWebActivityTracking || false;\n                    input = new updateCustomerPersonalizationInput(customerInformation.AccountNumber, !isOptOutPersonalization, request.apiSettings, preferenceType);\n                    break;\n                case undefined:\n                case 'personalization':\n                default:\n                    isOptOutPersonalization = customerInformation.OptOutPersonalization || false;\n                    input = new updateCustomerPersonalizationInput(customerInformation.AccountNumber, !isOptOutPersonalization, request.apiSettings, preferenceType);\n            }\n\n            this.isUpdatingPreference = true;\n\n            try {\n                await updateCustomerPersonalization(input, actionContext);\n            } catch (error) {\n                if (telemetry) {\n                    telemetry.exception(error);\n                    telemetry.debug('Unable to update customer personalization');\n                }\n            }\n\n            this.isUpdatingPreference = false;\n        }\n    }\n\n    private _renderCustomerAttributes = (): React.ReactNode => {\n        return (\n            <AccountProfileAttributes\n               accountProfileProps = {this.props}\n            />\n        );\n    }\n}\n\nexport default AccountProfile;\n"]}