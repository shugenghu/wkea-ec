{"version":3,"file":"account-loyalty.view.test.js","sourceRoot":"./src/","sources":["modules/account-loyalty/tests/account-loyalty.view.test.tsx"],"names":[],"mappings":"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","sourcesContent":["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\n// tslint:disable-next-line:no-unused-variable\nimport { buildHydratedMockActionContext, buildMockModuleProps } from '@msdyn365-commerce/core';\nimport { render } from 'enzyme';\nimport * as React from 'react';\n\nimport { wrapInResolvedAsyncResult } from '@msdyn365-commerce-modules/retail-actions';\nimport { IAccountLoyaltyViewProps } from '../account-loyalty';\nimport { IAccountLoyaltyData } from '../account-loyalty.data';\nimport { HeadingTag, IAccountLoyaltyConfig } from '../account-loyalty.props.autogenerated';\nimport AccountLoyaltyView from '../account-loyalty.view';\n\nconst mockData: IAccountLoyaltyData = {\n    loyaltyCard: wrapInResolvedAsyncResult({})\n};\n\nconst mockConfig: IAccountLoyaltyConfig = {\n    className: 'account-loyalty-test',\n    heading: {\n        tag: HeadingTag.h2,\n        text: 'Loyalty Program'\n    }\n};\n\nconst mockActionContext = buildHydratedMockActionContext();\n\n// @ts-ignore partial mock\nconst mockContext: ICoreContext = {\n    actionContext: mockActionContext,\n    requestContext: { locale: 'en-us' },\n    app: {\n        routes: {\n            home: '/fedev'\n        }\n    }\n};\n\nconst mockActions = {};\n\ndescribe('AccountLoyalty unit tests - ', () => {\n    it('View - renders correctly', () => {\n        const moduleProps = buildMockModuleProps(mockData, mockActions, mockConfig, mockContext);\n        // @ts-ignore partial mock\n        const mockProps: IAccountLoyaltyViewProps = {\n            ...moduleProps,\n            AccountLoyalty: { moduleProps, className: 'module-class' },\n            className: 'test-name',\n            totalPoints: 90,\n            heading: '{heading}',\n            infoLabel: '{infoLabel}',\n            cardNumber: '{cardNumber}',\n            joinDate: '{joinDate}',\n            pointsLabel: '{pointsLabel}',\n            points: '{points}',\n            rewardPoints: [\n                {\n                    label: '{activity.label}',\n                    availableModalLabel: '{activity.availableModalLabel}',\n                    availableModalTrigger: '{activity.availableModalTrigger}',\n                    expiringModalLabel: '{activity.expiringModalLabel}',\n                    expiringModalTrigger: '{activity.expiringModalTrigger}',\n                },\n                {\n                    label: '{activity.label2}',\n                    availableModalLabel: '{activity.availableModalLabel2}',\n                    availableModalTrigger: '{activity.availableModalTrigger2}',\n                    expiringModalLabel: '{activity.expiringModalLabel2}',\n                    expiringModalTrigger: '{activity.expiringModalTrigger2}',\n                }\n            ],\n            pointsModal: {\n                isOpen: true,\n                modalHeader: '{header}',\n                ModalBodyTop: { className: 'module-class-ModalBodyTop' },\n                ModalBodyHeaders: { className: 'module-class-ModalBodyHeaders' },\n                rewardPointsActivity: [\n                    {\n                        Activity: { className: 'module-class-Activity' },\n                        activityType: '{type}',\n                        activityDate: '{date}',\n                        activityPoints: '{points}'\n                    },\n                    {\n                        Activity: { className: 'module-class-Activity' },\n                        activityType: '{type2}',\n                        activityDate: '{date2}',\n                        activityPoints: '{points2}'\n                    }\n                ],\n                onClose: jest.fn()\n            }\n        };\n        const component = render(<AccountLoyaltyView {...mockProps} />);\n        expect(component).toMatchSnapshot();\n    });\n\n    it('View - renders correctly without modal', () => {\n        const moduleProps = buildMockModuleProps(mockData, mockActions, mockConfig, mockContext);\n        // @ts-ignore partial mock\n        const mockProps: IAccountLoyaltyViewProps = {\n            ...moduleProps,\n            AccountLoyalty: { moduleProps, className: 'module-class' },\n            className: 'test-name',\n            totalPoints: 90,\n            heading: '{heading}',\n            infoLabel: '{infoLabel}',\n            cardNumber: '{cardNumber}',\n            joinDate: '{joinDate}',\n            pointsLabel: '{pointsLabel}',\n            points: '{points}',\n            rewardPoints: [\n                {\n                    label: '{activity.label}',\n                    availableModalLabel: '{activity.availableModalLabel}',\n                    availableModalTrigger: '{activity.availableModalTrigger}',\n                    expiringModalLabel: '{activity.expiringModalLabel}',\n                    expiringModalTrigger: '{activity.expiringModalTrigger}',\n                },\n                {\n                    label: '{activity.label2}',\n                    availableModalLabel: '{activity.availableModalLabel2}',\n                    availableModalTrigger: '{activity.availableModalTrigger2}',\n                    expiringModalLabel: '{activity.expiringModalLabel2}',\n                    expiringModalTrigger: '{activity.expiringModalTrigger2}',\n                }\n            ],\n            pointsModal: {\n                isOpen: false,\n                ModalBodyTop: { className: 'module-class-ModalBodyTop' },\n                ModalBodyHeaders: { className: 'module-class-ModalBodyHeaders' },\n                onClose: jest.fn()\n            }\n        };\n        const component = render(<AccountLoyaltyView {...mockProps} />);\n        expect(component).toMatchSnapshot();\n    });\n});"]}