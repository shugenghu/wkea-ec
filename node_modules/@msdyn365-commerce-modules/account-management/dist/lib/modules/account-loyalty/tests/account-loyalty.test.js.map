{"version":3,"file":"account-loyalty.test.js","sourceRoot":"./src/","sources":["modules/account-loyalty/tests/account-loyalty.test.tsx"],"names":[],"mappings":"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","sourcesContent":["import { wrapInResolvedAsyncResult } from '@msdyn365-commerce-modules/retail-actions';\nimport { buildHydratedMockActionContext, buildMockCoreContext, buildMockModuleProps } from '@msdyn365-commerce/core';\nimport * as StoreOperationsDataActions from '@msdyn365-commerce/retail-proxy/dist/DataActions/StoreOperationsDataActions.g';\nimport { LoyaltyCard } from '@msdyn365-commerce/retail-proxy/dist/Entities/CommerceTypes.g';\nimport { mount, render } from 'enzyme';\nimport * as React from 'react';\nimport AccountLoyalty, { IProps } from '../account-loyalty';\nimport { IAccountLoyaltyData } from '../account-loyalty.data';\nimport { HeadingTag, IAccountLoyaltyConfig, IAccountLoyaltyResources } from '../account-loyalty.props.autogenerated';\nimport renderView from '../account-loyalty.view';\n\nconst mockData: IAccountLoyaltyData = {\n    loyaltyCard: wrapInResolvedAsyncResult({})\n};\n\nconst mockConfig: IAccountLoyaltyConfig = {\n    className: 'account-loyalty-test',\n    heading: {\n        tag: HeadingTag.h2,\n        text: 'Loyalty Program'\n    }\n};\n\nconst mockResources: IAccountLoyaltyResources = {\n    loyaltyCardLabel: 'Loyalty card',\n    joinDateFormatted: 'Member since {0}',\n    totalAvailablePointsLabel: 'Total available points',\n    expiringPointsFormatLabel: 'Expiring points within {0} days',\n    availablePointsLabel: 'Total available points',\n    redeemedPointsLabel: 'Redeemed',\n    earnedPointsLabel: 'Earned',\n    pendingPointsLabel: 'Pending',\n    adjustedPointsLabel: 'Adjusted',\n    loyaltyActivityDateLabel: 'Date',\n    loyaltyActivityBalanceLabel: 'Balance',\n    backToShoppingText: 'Back to shopping'\n};\n\nconst mockActionContext = buildHydratedMockActionContext();\n\nconst mockContext = buildMockCoreContext({});\nmockContext.actionContext = mockActionContext;\nmockContext.request.locale = 'en-us';\n\nconst mockActions = {};\n\njest.mock('@msdyn365-commerce/retail-proxy/dist/DataActions/StoreOperationsDataActions.g');\nconst mockPointsActivity = [\n    {\n        ActivityDate: '2020-01-06T00:00:00.000Z',\n        ExtensibleLoyaltyRewardPointActivityEntryTypeValue: 1,\n        LoyaltyPoints: 100,\n        LoyaltyRewardPointTimelineEntryType: 'Expiring'\n    },\n    {\n        ActivityDate: '2020-01-06T00:00:00.000Z',\n        ExtensibleLoyaltyRewardPointActivityEntryTypeValue: 1,\n        LoyaltyPoints: 30,\n        LoyaltyRewardPointTimelineEntryType: 'Expiring'\n    }\n];\ndescribe('AccountLoyalty test', () => {\n    let moduleProps: IProps;\n\n    beforeEach(() => {\n        const mockDateNow = 1562698411742;\n        Date.now = jest.spyOn(Date, 'now').mockImplementation(() => mockDateNow);\n\n        const loyaltyCard: LoyaltyCard =  {\n          CardNumber: '55215',\n          LoyaltyEnrollmentDateLocal: '2020-01-06T00:00:00.000Z' as unknown as Date,\n          RewardPoints: [\n            {\n                RewardPointId: 'Fabrikam rewards',\n                RewardPointTypeValue: 1,\n                RewardPointCurrency: 'USD',\n                IsRedeemable: true,\n                PointsExpiringSoon: 34,\n                ActivePoints: 90,\n                Description: 'Fabrikam awesome points'\n            },\n            {\n                RewardPointId: 'ColSolare',\n                RewardPointTypeValue: 1,\n                RewardPointCurrency: 'USD',\n                IsRedeemable: true,\n                Description: 'Colsolare awesome points'\n            },\n          ]\n        };\n\n        mockData.loyaltyCard = wrapInResolvedAsyncResult(loyaltyCard);\n        moduleProps = {\n            ...(buildMockModuleProps(mockData, mockActions, mockConfig, mockContext) as IProps),\n            resources: mockResources,\n            // @ts-ignore\n            renderView\n        } as IProps;\n\n        // @ts-ignore: Jest Mocking Confuses TS Complier\n        StoreOperationsDataActions.getLoyaltyRewardPointActivityTimelineAsync.mockImplementation(() => Promise.resolve(mockPointsActivity));\n        // @ts-ignore: Jest Mocking Confuses TS Complier\n        StoreOperationsDataActions.getLoyaltyRewardPointsExpiringSoonAsync.mockImplementation(() => Promise.resolve(mockPointsActivity));\n    });\n\n    it('module renders correctly', () => {\n        const accountLoyalty = render(<AccountLoyalty {...moduleProps} />);\n        expect(accountLoyalty).toMatchSnapshot();\n    });\n\n    it('module should not render without loyalty card', () => {\n        const noData = {};\n\n        const noDataModuleProps = {\n            ...buildMockModuleProps(noData, mockActions, mockConfig, mockContext),\n            resources: mockResources,\n            // @ts-ignore\n            renderView\n        } as IProps;\n\n        const accountLoyalty = render(<AccountLoyalty {...noDataModuleProps} />);\n        expect(accountLoyalty).toMatchSnapshot();\n    });\n\n    it('modal props', () => {\n        const accountLoyalty = mount(<AccountLoyalty {...moduleProps} />);\n\n        // open available modal\n        let modalTrigger = accountLoyalty.find('.ms-account-loyalty__points-trigger').first();\n        modalTrigger.simulate('click');\n        let modal = accountLoyalty.find('.ms-account-loyalty__points-modal').first();\n\n        // @ts-ignore\n        expect(modal.props().isOpen).toBe(true);\n\n        let closeButton = modal.find('button.msc-modal__close-button');\n        closeButton.simulate('click');\n\n        modal = accountLoyalty.find('.ms-account-loyalty__points-modal').first();\n\n        // successfully close available modal\n        expect(modal).toEqual({});\n\n        // open expiring modal\n        modalTrigger = accountLoyalty.find('.ms-account-loyalty__points-trigger').last();\n        modalTrigger.simulate('click');\n        modal = accountLoyalty.find('.ms-account-loyalty__points-modal').first();\n\n        // @ts-ignore\n        expect(modal.props().isOpen).toBe(true);\n\n        closeButton = modal.find('button.msc-modal__close-button');\n        closeButton.simulate('click');\n\n        modal = accountLoyalty.find('.ms-account-loyalty__points-modal').first();\n\n        // successfully close expiring modal\n        expect(modal).toEqual({});\n    });\n\n    it('module rewardPoints section renders without RewardPointId ', () => {\n        const mockLoyaltyCard: LoyaltyCard = {\n            CardNumber: '45646846846',\n            LoyaltyEnrollmentDateLocal: '2020-01-06T00:00:00.000Z' as unknown as Date,\n            RewardPoints: [\n                {\n                    RewardPointTypeValue: 1,\n                    RewardPointCurrency: 'USD',\n                    IsRedeemable: true,\n                    PointsExpiringSoon: 34,\n                    ActivePoints: 90,\n                    Description: 'Fabrikam awesome points'\n                },\n                {\n                    RewardPointTypeValue: 1,\n                    RewardPointCurrency: 'USD',\n                    IsRedeemable: true,\n                    Description: 'Colsolare awesome points'\n                },\n            ]\n        };\n\n        mockData.loyaltyCard = wrapInResolvedAsyncResult(mockLoyaltyCard);\n        const noRewardsModuleProps = {\n            ...buildMockModuleProps(mockData, mockActions, mockConfig),\n            resources: mockResources,\n            context: mockContext,\n            // @ts-ignore\n            renderView\n        } as IProps;\n\n        const accountLoyalty = render(<AccountLoyalty {...noRewardsModuleProps} />);\n        expect(accountLoyalty).toMatchSnapshot();\n    });\n});"]}