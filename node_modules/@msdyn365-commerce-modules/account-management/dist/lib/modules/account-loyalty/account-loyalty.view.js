import * as React from 'react';
import { Modal, ModalBody, ModalHeader, Module, Node } from '@msdyn365-commerce-modules/utilities';
const AccountLoyaltyView = props => {
    const { AccountLoyalty, Info, Points, Breakdown, RewardPoints, PointsBreakdown, Button, heading, infoLabel, cardNumber, joinDate, pointsLabel, points, rewardPoints, homeButton, pointsModal } = props;
    const { ModalBodyTop, ModalBodyHeaders } = pointsModal;
    return (React.createElement(Module, Object.assign({}, AccountLoyalty),
        heading,
        React.createElement(Node, Object.assign({}, Info),
            infoLabel,
            cardNumber,
            joinDate),
        React.createElement(Node, Object.assign({}, Points),
            pointsLabel,
            points,
            React.createElement(Node, Object.assign({}, Breakdown), rewardPoints && rewardPoints.map((activity, index) => {
                return (React.createElement(Node, Object.assign({ key: index }, RewardPoints),
                    activity.label,
                    React.createElement(Node, Object.assign({}, PointsBreakdown),
                        activity.availableModalLabel,
                        activity.availableModalTrigger),
                    React.createElement(Node, Object.assign({}, PointsBreakdown),
                        activity.expiringModalLabel,
                        activity.expiringModalTrigger)));
            }))),
        React.createElement(Node, Object.assign({}, Button), homeButton),
        !pointsModal.isOpen &&
            React.createElement(Modal, { returnFocusRef: pointsModal.returnFocusRef }) ||
            React.createElement(Modal, { autoFocus: true, fade: false, returnFocusRef: pointsModal.returnFocusRef, isOpen: pointsModal.isOpen, horizontalPosition: pointsModal.horizontalPosition, verticalPosition: pointsModal.verticalPosition, className: pointsModal.modalClassName, zIndex: 1050, onClosed: pointsModal.onClose },
                React.createElement(ModalHeader, { toggle: pointsModal.onClose, className: pointsModal.modalHeaderClassName }, pointsModal.modalHeader),
                React.createElement(ModalBody, { className: pointsModal.modalBodyClassName },
                    React.createElement(Node, Object.assign({}, ModalBodyTop),
                        pointsModal.pointsDescription,
                        pointsModal.totalPoints),
                    React.createElement(Node, Object.assign({}, ModalBodyHeaders),
                        pointsModal.date,
                        pointsModal.balanceLabel),
                    pointsModal.rewardPointsActivity && pointsModal.rewardPointsActivity.map((activity, index) => {
                        const { Activity, activityType, activityDate, activityPoints } = activity;
                        return (React.createElement(Node, Object.assign({}, Activity, { key: index }),
                            activityType,
                            activityDate,
                            activityPoints));
                    })))));
};
export default AccountLoyaltyView;
//# sourceMappingURL=account-loyalty.view.js.map