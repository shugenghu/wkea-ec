{"version":3,"file":"account-loyalty.js","sourceRoot":"./src/","sources":["modules/account-loyalty/account-loyalty.tsx"],"names":[],"mappings":"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","sourcesContent":["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nimport { Button, format, getPayloadObject, getTelemetryAttributes, getTelemetryObject, IModuleProps, INodeProps, IPayLoad, ITelemetryContent, TelemetryConstant } from '@msdyn365-commerce-modules/utilities';\nimport * as Msdyn365 from '@msdyn365-commerce/core';\nimport { LoyaltyCard, LoyaltyRewardPoint, LoyaltyRewardPointActivity } from '@msdyn365-commerce/retail-proxy';\nimport { getLoyaltyRewardPointActivityTimelineAsync, getLoyaltyRewardPointsExpiringSoonAsync } from '@msdyn365-commerce/retail-proxy/dist/DataActions/StoreOperationsDataActions.g';\nimport classnames from 'classnames';\nimport { observer } from 'mobx-react';\nimport * as React from 'react';\nimport { IAccountLoyaltyData } from './account-loyalty.data';\nimport { IAccountLoyaltyProps } from './account-loyalty.props.autogenerated';\nimport { AccountLoyaltyLabel, AccountLoyaltyModalLabel } from './components';\n\nexport interface IAccountLoyaltyViewProps extends IAccountLoyaltyProps<{}> {\n    AccountLoyalty: IModuleProps;\n    className: string;\n    totalPoints: number;\n    heading?: React.ReactNode;\n    Info: INodeProps;\n    infoLabel: React.ReactNode;\n    cardNumber: React.ReactNode;\n    joinDate: React.ReactNode;\n    Points: INodeProps;\n    pointsLabel: React.ReactNode;\n    points: React.ReactNode;\n    Breakdown: INodeProps;\n    RewardPoints: INodeProps;\n    PointsBreakdown: INodeProps;\n    rewardPoints?: IAccountLoyaltyRewardPointProps[];\n    Button: INodeProps;\n    homeButton: React.ReactNode;\n    pointsModal: IAccountLoyaltyModalProps;\n}\n\nexport interface IAccountLoyaltyState {\n    isModalOpen: boolean;\n    currentModalData?: LoyaltyRewardPoint;\n    isModalExpiring: boolean;\n    modalID: string;\n    currentFocus?: React.RefObject<HTMLElement>;\n    pointsActivity: LoyaltyRewardPointActivity[] | undefined;\n}\n\nexport interface IAccountLoyaltyRewardPointProps {\n    label: React.ReactNode;\n    availableModalLabel: React.ReactNode;\n    availableModalTrigger: React.ReactNode;\n    expiringModalLabel: React.ReactNode;\n    expiringModalTrigger: React.ReactNode;\n}\n\nexport type horizontalModalPosition = 'left' | 'center' | 'right';\nexport type verticalModalPosition = 'top' | 'center' | 'bottom';\n\nexport interface IAccountLoyaltyModalProps {\n    isOpen: boolean;\n    horizontalPosition?: horizontalModalPosition;\n    verticalPosition?: verticalModalPosition;\n    modalClassName?: string;\n    modalHeaderClassName?: string;\n    modalHeader?: string;\n    modalBodyClassName?: string;\n    ModalBodyTop: INodeProps;\n    pointsDescription?: React.ReactNode;\n    totalPoints?: React.ReactNode;\n    ModalBodyHeaders: INodeProps;\n    date?: React.ReactNode;\n    balanceLabel?: React.ReactNode;\n    rewardPointsActivity?: IAccountLoyaltyActivityProps[];\n    returnFocusRef?: React.RefObject<HTMLElement>;\n    onClose(): void;\n}\n\nexport interface IAccountLoyaltyActivityProps {\n    Activity: INodeProps;\n    activityType: React.ReactNode;\n    activityDate: React.ReactNode;\n    activityPoints: React.ReactNode;\n}\n\nexport interface IProps extends IAccountLoyaltyProps<IAccountLoyaltyData> { }\n\n/**\n *\n * AccountLoyalty component\n * @extends {React.Component<IAccountLoyaltyProps<IAccountLoyaltyData>>}\n */\n@observer\nclass AccountLoyalty extends React.PureComponent<IProps, IAccountLoyaltyState> {\n    private _buttonAvailableRef: React.RefObject<HTMLButtonElement>;\n    private _buttonExpireRef: React.RefObject<HTMLButtonElement>;\n    private telemetryContent?: ITelemetryContent;\n    private payLoad: IPayLoad;\n\n    constructor(props: IAccountLoyaltyProps<IAccountLoyaltyData>) {\n        super(props);\n        this._buttonAvailableRef = React.createRef();\n        this._buttonExpireRef = React.createRef();\n        this.state = {\n            isModalOpen: false,\n            currentModalData: undefined,\n            isModalExpiring: false,\n            modalID: '',\n            pointsActivity: undefined\n        };\n        this.telemetryContent = getTelemetryObject(this.props.context.request.telemetryPageName!, this.props.friendlyName, this.props.telemetry);\n        this.payLoad = getPayloadObject('click', this.telemetryContent, TelemetryConstant.BackToShopping);\n    }\n\n    public render(): JSX.Element | null {\n        const { className, heading } = this.props.config;\n        const { loyaltyCard } = this.props.data;\n        const { loyaltyCardLabel, totalAvailablePointsLabel, backToShoppingText } = this.props.resources;\n        const { actionContext } = this.props.context;\n        const { isModalOpen } = this.state;\n        const backToShopAttributes = getTelemetryAttributes(this.telemetryContent!, this.payLoad);\n\n        if (!loyaltyCard || !loyaltyCard.result ||  !loyaltyCard.result.CardNumber) {\n            this.props.context.telemetry.error('Loyalty card content is empty, module wont render');\n            return null;\n        }\n\n        const loyaltyCardData = loyaltyCard.result;\n        const rewardPoints = loyaltyCard && loyaltyCardData.RewardPoints;\n        const homeLink = Msdyn365.getUrlSync('home', actionContext) || '';\n\n        const viewProps = {\n            ...this.props,\n            AccountLoyalty: {\n                moduleProps: this.props,\n                className: classnames('ms-account-loyalty', className),\n            },\n            totalPoints: rewardPoints && this._getTotalPoints(),\n            className: classnames('msc-account-loyalty', className),\n            rewardPoints: loyaltyCardData.RewardPoints && loyaltyCardData.RewardPoints.length > 0 && this._renderRewardPoints(loyaltyCardData),\n            pointsModal: isModalOpen && this._renderModal() || { isOpen: false, returnFocusRef: this.state.currentFocus },\n            Info: { className: 'ms-account-loyalty__info' },\n            Points: { className: 'ms-account-loyalty__points' },\n            Breakdown: { className: 'ms-account-loyalty__breakdown' },\n            RewardPoints: { className: 'ms-account-loyalty__reward-points' },\n            PointsBreakdown: { className: 'ms-account-loyalty__point-breakdown' },\n            Button: { className: 'ms-account-loyalty__link' },\n            heading: heading &&\n                (\n                    <Msdyn365.Text\n                        className='ms-account-loyalty__heading'\n                        text={heading.text}\n                        tag={heading.tag || 'h2'}\n                        editProps = {{onEdit: this.handleHeadingChange, requestContext: this.props.context.request}}\n                    />\n                ),\n\n            // account info\n            infoLabel:\n               (\n                    <AccountLoyaltyLabel\n                        className='ms-account-loyalty__info-label'\n                        text={loyaltyCardLabel}\n                    />\n               ),\n            cardNumber:\n                (\n                    <AccountLoyaltyLabel\n                        className='ms-account-loyalty__card-number'\n                        text={loyaltyCardData.CardNumber}\n                    />\n                ),\n            joinDate:\n                (\n                    <AccountLoyaltyLabel\n                        className='ms-account-loyalty__join-date'\n                        text={this._formatJoinDate(this._parseDate(loyaltyCardData.LoyaltyEnrollmentDateLocal!))}\n                    />\n                ),\n\n            // points\n            pointsLabel:\n                (\n                    <AccountLoyaltyLabel\n                        className='ms-account-loyalty__total-points-label'\n                        text={totalAvailablePointsLabel}\n                    />\n                ),\n            points: rewardPoints &&\n               (\n                    <AccountLoyaltyLabel\n                        className='ms-account-loyalty__total-points'\n                        text={this._getTotalPoints()}\n                    />\n               ),\n\n            homeButton: rewardPoints &&\n                (\n                    <a\n                        className='ms-account-loyalty__home-link msc-btn'\n                        href={homeLink}\n                        {...backToShopAttributes}\n                    >\n                        { backToShoppingText }\n                    </a>\n                )\n        };\n\n        return this.props.renderView(viewProps) as React.ReactElement;\n    }\n\n    public handleHeadingChange = (event: Msdyn365.ContentEditableEvent) => this.props.config.heading!.text= event.target.value;\n\n    private _formatJoinDate(date: Date): string {\n        return format(this.props.resources.joinDateFormatted,\n                      new Intl.DateTimeFormat(this.props.context.actionContext.requestContext.locale, { month: 'long', day: 'numeric', year: 'numeric' }).format(new Date(date)));\n    }\n\n    private _renderRewardPoints(loyaltyCard: LoyaltyCard): IAccountLoyaltyRewardPointProps[] {\n        return loyaltyCard.RewardPoints!.map((loyaltyPoints, index) => {\n            const availableId =  loyaltyPoints.RewardPointId && `${ loyaltyPoints.RewardPointId }-available-${ index }` || 'available-points';\n            const expiringId = loyaltyPoints.RewardPointId && `${ loyaltyPoints.RewardPointId }-expiring-${ index }` || 'expiring-points';\n            const { availablePointsLabel, expiringPointsFormatLabel } = this.props.resources;\n            this.payLoad.contentAction.etext = TelemetryConstant.AvailablePoints;\n            const availablePointsAttributes = getTelemetryAttributes(this.telemetryContent!, this.payLoad);\n            this.payLoad.contentAction.etext = TelemetryConstant.ExpiringPoints;\n            const expiringPointsAttributes = getTelemetryAttributes(this.telemetryContent!, this.payLoad);\n\n            return ({\n                label:\n                    (\n                        <AccountLoyaltyModalLabel\n                            className='ms-account-loyalty__points-title'\n                            text={loyaltyPoints.Description}\n                        />\n                    ),\n                availableModalLabel: loyaltyPoints.ActivePoints !== undefined &&\n                    (\n                        <AccountLoyaltyModalLabel\n                            className='ms-account-loyalty__available-points-label'\n                            text={availablePointsLabel}\n                            labelFor={availableId}\n                        />\n                    ),\n                availableModalTrigger: loyaltyPoints.ActivePoints !== undefined &&\n                    (\n                        <Button\n                            className='ms-account-loyalty__points-trigger'\n                            color='link'\n                            onClick={this._populateModalData(this._buttonAvailableRef, loyaltyCard, loyaltyPoints, false)}\n                            innerRef={this._buttonAvailableRef}\n                            {...availablePointsAttributes}\n                        >\n                            {loyaltyPoints.ActivePoints.toString()}\n                        </Button>\n                    ),\n                expiringModalLabel: loyaltyPoints.PointsExpiringSoon !== undefined &&\n                    (\n                        <AccountLoyaltyModalLabel\n                            className='ms-account-loyalty__expiring-points-label'\n                            text={format(expiringPointsFormatLabel, 30)}\n                            labelFor={expiringId}\n                        />\n                    ),\n                expiringModalTrigger: loyaltyPoints.PointsExpiringSoon !== undefined &&\n                    (\n                        <Button\n                            className='ms-account-loyalty__points-trigger'\n                            color='link'\n                            onClick={this._populateModalData(this._buttonExpireRef, loyaltyCard, loyaltyPoints, true)}\n                            innerRef={this._buttonExpireRef}\n                            {...expiringPointsAttributes}\n                        >\n                            {loyaltyPoints.PointsExpiringSoon.toString()}\n                        </Button>\n                    )\n            });\n        });\n    }\n\n    private _renderModal(): IAccountLoyaltyModalProps | null {\n        const { totalAvailablePointsLabel, loyaltyActivityDateLabel, loyaltyActivityBalanceLabel } = this.props.resources;\n        const { isModalOpen, currentModalData } = this.state;\n\n        if (!isModalOpen || !currentModalData) {\n            // return empty modal\n            this.props.context.telemetry.error('Account loyalty modal content is empty, module wont render');\n            return null;\n        }\n\n        return {\n            isOpen: isModalOpen,\n            returnFocusRef: this.state.currentFocus,\n            horizontalPosition: 'center',\n            verticalPosition: 'center',\n            modalClassName: 'ms-account-loyalty__points-modal',\n            modalHeaderClassName: 'ms-account-loyalty__points-modal-header',\n            modalHeader: currentModalData.Description || '',\n            modalBodyClassName: 'ms-account-loyalty__points-modal-body',\n            ModalBodyTop: { className: 'ms-account-loyalty__points-modal-body-top' },\n            ModalBodyHeaders: { className: 'ms-account-loyalty__points-modal-body-header' },\n            rewardPointsActivity: this._renderPointsActivity(),\n            pointsDescription:\n                (\n                    <AccountLoyaltyLabel\n                        className='ms-account-loyalty__points-modal-name'\n                        text={totalAvailablePointsLabel}\n                    />\n                ),\n            totalPoints:\n                (\n                    <AccountLoyaltyLabel\n                        className='ms-account-loyalty__points-modal-total'\n                        text={this._getPoints()}\n                    />\n                ),\n            date:\n                (\n                    <AccountLoyaltyLabel\n                        className='ms-account-loyalty__points-modal-date'\n                        text={loyaltyActivityDateLabel}\n                    />\n                ),\n            balanceLabel:\n                (\n                    <AccountLoyaltyLabel\n                        className='ms-account-loyalty__points-modal-balance'\n                        text={loyaltyActivityBalanceLabel}\n                    />\n                ),\n            onClose: this._closeModal\n        };\n    }\n\n    private _getTotalPoints(): number {\n        const rewardPoints = this.props.data.loyaltyCard.result && this.props.data.loyaltyCard.result.RewardPoints;\n\n        let total = 0;\n        rewardPoints!.forEach(loyaltyPoints => {\n            total += loyaltyPoints.ActivePoints || 0;\n        });\n\n        return total;\n    }\n\n    private _getPoints(): string {\n        const { currentModalData, isModalExpiring } = this.state;\n\n        return `${(isModalExpiring ? currentModalData!.PointsExpiringSoon : currentModalData!.ActivePoints) || 0}`;\n    }\n\n    private _renderPointsActivity(): IAccountLoyaltyActivityProps[] | undefined {\n        const { pointsActivity } = this.state;\n\n        if (!pointsActivity) {\n            this.props.context.telemetry.error('Points activity content is empty, module wont render');\n            return undefined;\n        }\n\n        return pointsActivity.map((activity) => {\n            return ({\n                Activity: { className: 'ms-account-loyalty__points-modal-activity' },\n                activityType:\n                    (\n                        <AccountLoyaltyLabel\n                            className='ms-account-loyalty__points-modal-type'\n                            text={this._getTimelineType(activity)}\n                        />\n                    ),\n                activityDate:\n                    (\n                        <AccountLoyaltyLabel\n                            className='ms-account-loyalty__points-modal-date'\n                            text={this.props.context.cultureFormatter.formatDate(this._parseDate(activity.ActivityDate!))}\n                        />\n                    ),\n                activityPoints:\n                    (\n                        <AccountLoyaltyLabel\n                            className='ms-account-loyalty__points-modal-points'\n                            text={activity.LoyaltyPoints && activity.LoyaltyPoints || ''}\n                        />\n                    )\n            });\n        });\n    }\n\n    private _parseDate(date: Date | string): Date {\n        /* Dates for loyalty are coming as formatted strings yyyy-mm-ddT:00:00.000z\n           Javascript was interpreting this as an iso format, thus causing the wrong date to be rendered */\n        if (typeof date === 'string') {\n            let dateString = date.toString();\n            dateString = dateString.replace(/-/g, '/');\n            dateString = dateString.substring(0, 10);\n            return new Date(dateString);\n        } else {\n            return new Date(date.getUTCFullYear(), date.getUTCMonth(), date.getUTCDate());\n        }\n    }\n\n    private _getTimelineType(pointActivity: LoyaltyRewardPointActivity): string {\n        if (pointActivity.LoyaltyRewardPointTimelineEntryType) {\n            return pointActivity.LoyaltyRewardPointTimelineEntryType;\n        }\n\n        const { earnedPointsLabel, redeemedPointsLabel, adjustedPointsLabel } = this.props.resources;\n        switch (pointActivity.ExtensibleLoyaltyRewardPointActivityEntryTypeValue) {\n            case 1:\n                return earnedPointsLabel;\n            case 3:\n                return redeemedPointsLabel;\n            case 5:\n                return adjustedPointsLabel;\n            default:\n                return '';\n        }\n    }\n\n    private _populateModalData = (focusRef: React.RefObject<HTMLElement>, loyaltyCard: LoyaltyCard, currentLoyaltyPoints: LoyaltyRewardPoint, expiring: boolean) => () =>  {\n        if (!loyaltyCard || !loyaltyCard.CardNumber || !currentLoyaltyPoints.RewardPointId) {\n            this.props.context.telemetry.error('Modal data is empty, module wont render');\n            return null;\n        }\n\n        const { actionContext } = this.props.context;\n        // open modal\n        this.setState({\n            isModalOpen: true,\n            currentModalData: currentLoyaltyPoints,\n            isModalExpiring: expiring,\n            modalID: '',\n            currentFocus: focusRef,\n        });\n\n        if (expiring) {\n            getLoyaltyRewardPointsExpiringSoonAsync({ callerContext: actionContext, queryResultSettings: {} }, loyaltyCard.CardNumber, currentLoyaltyPoints.RewardPointId, 30)\n                .then((points: LoyaltyRewardPointActivity[]) => {\n                    this.setState({pointsActivity: points});\n                })\n                .catch((error: Error) => {\n                    this.props.telemetry.exception(error);\n                    this.props.telemetry.debug('Failed to get reward point activity');\n                });\n        } else {\n            getLoyaltyRewardPointActivityTimelineAsync({ callerContext: actionContext, queryResultSettings: {} }, loyaltyCard.CardNumber, currentLoyaltyPoints.RewardPointId)\n                .then((points: LoyaltyRewardPointActivity[]) => {\n                    this.setState({pointsActivity: points});\n                })\n                .catch((error: Error) => {\n                    this.props.telemetry.error(error.message);\n                    this.props.telemetry.debug('Failed to get reward point activity');\n                });\n        }\n\n        return;\n    }\n\n    private _closeModal = () => {\n        this.setState({\n            isModalOpen: false,\n            currentModalData: undefined,\n            pointsActivity: undefined\n        });\n    }\n}\n\nexport default AccountLoyalty;\n"]}