{"version":3,"file":"password-reset-verification.test.js","sourceRoot":"./src/","sources":["modules/password-reset-verification/tests/password-reset-verification.test.tsx"],"names":[],"mappings":"AAOA,OAAO,KAAK,KAAK,MAAM,OAAO,CAAC;AAC/B,OAAO,KAAK,QAAQ,MAAM,qBAAqB,CAAC;AAEhD,OAAO,EAAE,oBAAoB,EAAE,MAAM,yBAAyB,CAAC;AAE/D,OAAO,yBAAyB,MAAM,gCAAgC,CAAC;AAMvE,MAAM,UAAU,GAAqC;IACnD,OAAO,EAAE;QACP,IAAI,EAAE,2BAA2B;QACjC,GAAG,MAAe;KACnB;CACF,CAAC;AAEF,MAAM,aAAa,GAAwC;IACzD,qBAAqB,EAAE,eAAe;IACtC,yBAAyB,EAAE,mBAAmB;IAC9C,kBAAkB,EAAE,wBAAwB;IAC5C,uBAAuB,EAAE,wBAAwB;IACjD,oBAAoB,EAAE,eAAe;IACrC,yBAAyB,EAAE,eAAe;IAC1C,oBAAoB,EAAE,aAAa;IACnC,yBAAyB,EAAE,aAAa;IACxC,qBAAqB,EAAE,eAAe;IACtC,0BAA0B,EAAE,eAAe;IAC3C,kBAAkB,EAAE,UAAU;IAC9B,uBAAuB,EAAE,UAAU;IACnC,gBAAgB,EAAE,QAAQ;IAC1B,qBAAqB,EAAE,QAAQ;IAC/B,2BAA2B,EAAE,mGAAmG;IAChI,2BAA2B,EAAE,+CAA+C;IAC5E,kBAAkB,EAAE,oCAAoC;IACxD,iBAAiB,EAAE,kBAAkB;IACrC,UAAU,EAAE,0CAA0C;IACtD,oBAAoB,EAAE,mEAAmE;IACzF,cAAc,EAAE,sGAAsG;IACtH,gBAAgB,EAAE,iDAAiD;IACnE,WAAW,EAAE,sGAAsG;IACnH,cAAc,EAAE,cAAc;CAC/B,CAAC;AAEF,MAAM,WAAW,GAAG,EAAE,CAAC;AAEvB,QAAQ,CAAC,2BAA2B,EAAE,GAAG,EAAE;IACzC,IAAI,WAA8E,CAAC;IACnF,SAAS,CAAC,GAAG,EAAE;QACb,WAAW,GAAG,EAAE,GAAG,oBAAoB,CAAC,EAAE,EAAE,WAAW,EAAE,UAAU,CAAsE,EAAE,SAAS,EAAE,aAAa,EAAE,CAAC;IACxK,CAAC,CAAC,CAAC;IACH,EAAE,CAAC,mBAAmB,EAAE,GAAG,EAAE;QAC3B,MAAM,SAAS,GAA+B,QAAQ,CAAC,MAAM,CAC3D,oBAAC,yBAAyB,oBAAK,WAAW,EAAI,CAC/C,CAAC;QACF,MAAM,IAAI,GAAG,SAAS,CAAC,MAAM,EAAE,CAAC;QAChC,MAAM,CAAC,IAAI,CAAC,CAAC,eAAe,EAAE,CAAC;IACjC,CAAC,CAAC,CAAC;AACL,CAAC,CAAC,CAAC","sourcesContent":["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\n/// <reference types=\"jest\" />\n// tslint:disable-next-line:no-unused-variable\nimport * as React from 'react';\nimport * as renderer from 'react-test-renderer';\n\nimport { buildMockModuleProps } from '@msdyn365-commerce/core';\n\nimport PasswordResetVerification from '../password-reset-verification';\nimport {\n    HeadingTag, IPasswordResetVerificationConfig, IPasswordResetVerificationProps,\n    IPasswordResetVerificationResources\n} from '../password-reset-verification.props.autogenerated';\n\nconst mockConfig: IPasswordResetVerificationConfig = {\n  heading: {\n    text: 'Verify your email address',\n    tag: HeadingTag.h2\n  },\n};\n\nconst mockResources: IPasswordResetVerificationResources = {\n  emailAddressLabelText: 'Email Address',\n  verificationCodeLabelText: 'Verification Code',\n  sendCodeButtonText: 'Send verification code',\n  sendCodeButtonAriaLabel: 'Send verification code',\n  resendCodeButtonText: 'Send new code',\n  resendCodeButtonAriaLabel: 'Send new code',\n  verifyCodeButtonText: 'Verify code',\n  verifyCodeButtonAriaLabel: 'Verify code',\n  changeEmailButtonText: 'Change e-mail',\n  changeEmailButtonAriaLabel: 'Change e-mail',\n  continueButtonText: 'Continue',\n  continueButtonAriaLabel: 'Continue',\n  cancelButtonText: 'Cancel',\n  cancelButtonAriaLabel: 'Cancel',\n  verificationCodeSendSuccess: 'Verification code has been sent to your inbox. Please copy it to the verification code input box.',\n  emailAddressVerifiedSuccess: 'E-mail address verified. You can now continue',\n  requriedEmailError: 'Please enter a valid email address',\n  invalidEmailError: 'Incorrect format',\n  retryError: 'That code is incorrect. Please try again',\n  retryNotAllowedError: 'You have made too many incorrect attempts. Please try again later',\n  throttledError: 'There have been too many requests to verify this email address. Please wait a while, then try again.',\n  codeExpiredError: 'That code is expired. Please request a new code',\n  serverError: 'We are having trouble verifying your email address. Please enter a valid email address and try again',\n  loadingMessage: 'Please wait.'\n};\n\nconst mockActions = {};\n\ndescribe('PasswordResetVerification', () => {\n  let moduleProps: IPasswordResetVerificationProps<IPasswordResetVerificationConfig>;\n  beforeAll(() => {\n    moduleProps = { ...buildMockModuleProps({}, mockActions, mockConfig) as IPasswordResetVerificationProps<IPasswordResetVerificationConfig>, resources: mockResources };\n  });\n  it('renders correctly', () => {\n    const component: renderer.ReactTestRenderer = renderer.create(\n      <PasswordResetVerification {...moduleProps} />\n    );\n    const tree = component.toJSON();\n    expect(tree).toMatchSnapshot();\n  });\n});\n"]}