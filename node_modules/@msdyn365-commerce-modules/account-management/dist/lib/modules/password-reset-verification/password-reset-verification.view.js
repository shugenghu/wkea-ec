import * as React from 'react';
import { Module, Node } from '@msdyn365-commerce-modules/utilities';
const PasswordResetVerificationItem = ({ wrapper, label, errorMessage, input }) => {
    return (React.createElement(Node, Object.assign({}, wrapper),
        label,
        errorMessage,
        input));
};
const LocalAccount = ({ localAccount, items, successMessage, errorMessage, verificationButtonsWrapper, verificationButtons, buttonsWrapper, buttons, verificationSuccessModal, verificationSuccessModalMessage }) => {
    return (React.createElement(Node, Object.assign({}, localAccount),
        items && items.map((item) => {
            return (React.createElement(PasswordResetVerificationItem, Object.assign({ key: item.key }, item)));
        }),
        successMessage && successMessage.map((message, index) => {
            return (React.createElement(React.Fragment, { key: index }, message));
        }),
        errorMessage && errorMessage.map((error, index) => {
            return (React.createElement(React.Fragment, { key: index }, error));
        }),
        React.createElement(Node, Object.assign({}, verificationButtonsWrapper), verificationButtons && verificationButtons.map((button, index) => {
            return (React.createElement(React.Fragment, { key: index }, button));
        })),
        React.createElement(Node, Object.assign({}, buttonsWrapper), buttons && buttons.map((button, index) => {
            return (React.createElement(React.Fragment, { key: index }, button));
        })),
        React.createElement(Node, Object.assign({}, verificationSuccessModal),
            React.createElement(Node, Object.assign({}, verificationSuccessModalMessage)))));
};
const PasswordResetVerificationLoading = ({ modal, modalBody, icon, message, }) => {
    return (React.createElement(Node, Object.assign({}, modal),
        React.createElement(Node, Object.assign({}, modalBody),
            icon,
            message)));
};
const PasswordResetVerificationView = props => {
    const { passwordResetVerification, viewState, loading, defaultAADConainer, aadConainer, heading, passwordResetVerificationLocalAccount } = props;
    return (React.createElement(Module, Object.assign({}, passwordResetVerification),
        viewState.isShowLoading && React.createElement(Node, Object.assign({}, defaultAADConainer)),
        viewState.isShowLoading && React.createElement(PasswordResetVerificationLoading, Object.assign({}, loading)),
        React.createElement(Node, Object.assign({}, aadConainer),
            heading,
            LocalAccount(passwordResetVerificationLocalAccount))));
};
export default PasswordResetVerificationView;
//# sourceMappingURL=password-reset-verification.view.js.map