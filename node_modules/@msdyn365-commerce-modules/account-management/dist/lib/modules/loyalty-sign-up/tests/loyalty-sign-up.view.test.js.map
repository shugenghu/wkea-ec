{"version":3,"file":"loyalty-sign-up.view.test.js","sourceRoot":"./src/","sources":["modules/loyalty-sign-up/tests/loyalty-sign-up.view.test.tsx"],"names":[],"mappings":"AAIA,OAAO,EAAE,yBAAyB,EAAE,MAAM,2CAA2C,CAAC;AACtF,OAAO,EAAG,oBAAoB,EAAE,MAAM,yBAAyB,CAAC;AAEhE,OAAO,EAAE,MAAM,EAAE,MAAM,QAAQ,CAAC;AAChC,OAAO,KAAK,KAAK,MAAM,OAAO,CAAC;AAI/B,OAAO,iBAAiB,MAAM,yBAAyB,CAAC;AAExD,MAAM,aAAa,GAAuB;IACtC,WAAW,EAAE,yBAAyB,CAAc,SAAS,CAAC;CACjE,CAAC;AACF,MAAM,QAAQ,GAAuB;IACjC,WAAW,EAAE,yBAAyB,CAAc,EAAC,UAAU,EAAE,QAAQ,EAAgB,CAAC;CAC7F,CAAC;AACF,IAAI,SAAkC,CAAC;AAEvC,QAAQ,CAAC,mBAAmB,EAAE,GAAG,EAAE;IAC/B,EAAE,CAAC,8BAA8B,EAAE,GAAG,EAAE;QACpC,MAAM,WAAW,GAA4B,oBAAoB,CAAC,EAAE,EAAE,EAAE,CAA4B,CAAC;QACrG,SAAS,GAAG;YACR,GAAG,WAAW;YACd,aAAa,EAAE;gBACX,WAAW,EAAE,WAAW;gBACxB,SAAS,EAAE,KAAK;aACnB;YACD,OAAO,EAAE,IAAI;YACb,IAAI,EAAE,aAAa;YACnB,OAAO,EAAE,0CAAgB;YACzB,aAAa,EAAE,iDAAuB;YACtC,UAAU,EAAE,8CAAwB;YACpC,UAAU,EAAE,gDAAqB;YACjC,YAAY,EAAE,8CAAwB;YACtC,WAAW,EAAE,sCAAW;YACxB,SAAS,EAAE,uCAAY;SAC1B,CAAC;QAEF,MAAM,SAAS,GAAG,MAAM,CAAC,oBAAC,iBAAiB,oBAAK,SAAS,EAAI,CAAC,CAAC;QAC/D,MAAM,CAAC,SAAS,CAAC,CAAC,eAAe,EAAE,CAAC;IACxC,CAAC,CAAC,CAAC;IAEH,EAAE,CAAC,0BAA0B,EAAE,GAAG,EAAE;QAChC,MAAM,WAAW,GAA4B,oBAAoB,CAAC,EAAE,EAAE,EAAE,CAA4B,CAAC;QACrG,WAAW,CAAC,OAAO,CAAC,OAAO,CAAC,IAAI,CAAC,qBAAqB,GAAG,YAAY,CAAC;QACtE,WAAW,CAAC,OAAO,CAAC,OAAO,CAAC,IAAI,CAAC,eAAe,GAAG,IAAI,CAAC;QAExD,SAAS,GAAG;YACR,GAAG,WAAW;YACd,aAAa,EAAE;gBACX,WAAW,EAAE,WAAW;gBACxB,SAAS,EAAE,KAAK;aACnB;YACD,IAAI,EAAE,QAAQ;YACd,OAAO,EAAE,KAAK;YACd,OAAO,EAAE,0CAAgB;YACzB,aAAa,EAAE,iDAAuB;YACtC,UAAU,EAAE,8CAAwB;YACpC,UAAU,EAAE,gDAAqB;YACjC,YAAY,EAAE,8CAAwB;YACtC,WAAW,EAAE,sCAAW;YACxB,SAAS,EAAE,uCAAY;SAC1B,CAAC;QAEF,MAAM,SAAS,GAAG,MAAM,CAAC,oBAAC,iBAAiB,oBAAK,SAAS,EAAI,CAAC,CAAC;QAC/D,MAAM,CAAC,SAAS,CAAC,CAAC,eAAe,EAAE,CAAC;IACxC,CAAC,CAAC,CAAC;AACP,CAAC,CAAC,CAAC","sourcesContent":["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nimport { wrapInResolvedAsyncResult } from '@msdyn365-commerce-modules/retail-actions';\nimport {  buildMockModuleProps } from '@msdyn365-commerce/core';\nimport {  LoyaltyCard } from '@msdyn365-commerce/retail-proxy';\nimport { render } from 'enzyme';\nimport * as React from 'react';\nimport {ILoyaltySignUpViewProps} from '../loyalty-sign-up';\nimport {ILoyaltySignUpData} from '../loyalty-sign-up.data';\nimport { ILoyaltySignUpProps } from '../loyalty-sign-up.props.autogenerated';\nimport LoyaltySignUpView from '../loyalty-sign-up.view';\n\nconst emptyMockData: ILoyaltySignUpData = {\n    loyaltyCard: wrapInResolvedAsyncResult<LoyaltyCard>(undefined)\n};\nconst mockData: ILoyaltySignUpData = {\n    loyaltyCard: wrapInResolvedAsyncResult<LoyaltyCard>({CardNumber: 'carddd'} as LoyaltyCard)\n};\nlet mockProps: ILoyaltySignUpViewProps;\n\ndescribe('LoyaltySignUpView', () => {\n    it('Does not render when loading', () => {\n        const moduleProps: ILoyaltySignUpProps<{}> = buildMockModuleProps({}, {}) as ILoyaltySignUpProps<{}>;\n        mockProps = {\n            ...moduleProps,\n            LoyaltySignUp: {\n                moduleProps: moduleProps,\n                className: 'foo'\n            },\n            loading: true,\n            data: emptyMockData,\n            heading: <h4>Heading</h4>,\n            memberHeading: <h4>Member heading</h4>,\n            signInLink: <button>Sign in</button>,\n            signUpText: <p>please sign up</p>,\n            signUpButton: <button>Sign up</button>,\n            detailsLink: <a>link</a>,\n            termsLink: <a>terms</a>\n        };\n\n        const component = render(<LoyaltySignUpView {...mockProps} />);\n        expect(component).toMatchSnapshot();\n    });\n\n    it('Renders when not loading', () => {\n        const moduleProps: ILoyaltySignUpProps<{}> = buildMockModuleProps({}, {}) as ILoyaltySignUpProps<{}>;\n        moduleProps.context.request.user.customerAccountNumber = 'usernumber';\n        moduleProps.context.request.user.isAuthenticated = true;\n\n        mockProps = {\n            ...moduleProps,\n            LoyaltySignUp: {\n                moduleProps: moduleProps,\n                className: 'foo'\n            },\n            data: mockData,\n            loading: false,\n            heading: <h4>Heading</h4>,\n            memberHeading: <h4>Member heading</h4>,\n            signInLink: <button>Sign in</button>,\n            signUpText: <p>please sign up</p>,\n            signUpButton: <button>Sign up</button>,\n            detailsLink: <a>link</a>,\n            termsLink: <a>terms</a>\n        };\n\n        const component = render(<LoyaltySignUpView {...mockProps} />);\n        expect(component).toMatchSnapshot();\n    });\n});"]}