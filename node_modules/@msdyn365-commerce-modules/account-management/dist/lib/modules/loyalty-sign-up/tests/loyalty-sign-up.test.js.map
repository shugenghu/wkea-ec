{"version":3,"file":"loyalty-sign-up.test.js","sourceRoot":"./src/","sources":["modules/loyalty-sign-up/tests/loyalty-sign-up.test.tsx"],"names":[],"mappings":"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","sourcesContent":["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------\n*/\nimport {mount, render} from 'enzyme';\nimport * as React from 'react';\n\nimport * as RetailActions from '@msdyn365-commerce-modules/retail-actions';\nimport { buildHydratedMockActionContext, buildMockModuleProps } from '@msdyn365-commerce/core';\nimport { LoyaltyCard } from '@msdyn365-commerce/retail-proxy';\n\nimport LoyaltySignUp, { ILoyaltySignUpViewProps } from '../loyalty-sign-up';\nimport { ILoyaltySignUpData } from '../loyalty-sign-up.data';\nimport { HeadingTag, ILoyaltySignUpConfig, ILoyaltySignUpProps, MemberHeadingTag } from '../loyalty-sign-up.props.autogenerated';\n\nconst mockActionContext = buildHydratedMockActionContext();\n\n// @ts-ignore\nconst mockContext: ICoreContext = {\n    actionContext: mockActionContext,\n    request: {locale: 'en-us', user: {isAuthenticated: true, customerAccountNumber: 'foo'}}\n};\n\nconst mockConfig: ILoyaltySignUpConfig = {\n  heading: {\n    tag: HeadingTag.h4,\n    text: 'Join Fabrikams Loyalty Program'\n  },\n  memberHeading: {\n    tag: MemberHeadingTag.h4,\n    text: 'Weclome loyalty member'\n  }\n};\n\nconst mockResource = {\n  loyaltyProgramText: 'Become a Fabrikam Loyalty member to earn points and to receive member only discounts.',\n  loyaltyTermsLinkText: 'By signing up, you accept our Terms & Conditions of the Fabrikams Loyalty program.',\n  joinLoyaltyButtonText: 'Sign up for Fabrikam loyalty',\n  viewLoyaltyPageText: 'View loyalty details'\n};\n\nconst flushPromises = () => new Promise(setImmediate);\n\nconst mockActions = {};\n\nconst mockData = {\n  loyaltyCard: RetailActions.wrapInResolvedAsyncResult<LoyaltyCard>({ CardNumber: '1' })\n};\n\ndescribe('LoyaltySignUp', () => {\n  it('renders correctly when author provides headings', () => {\n    // @ts-ignore\n    const moduleProps = {...buildMockModuleProps(mockData, mockActions, mockConfig) as ILoyaltySignUpProps<ILoyaltySignUpData>, renderView: jest.fn(props => { return <div props={props} />;})};\n    moduleProps.context = mockContext;\n    moduleProps.resources = mockResource;\n    const component = mount(<LoyaltySignUp {...moduleProps} />);\n    expect(moduleProps.renderView).toBeCalled();\n    const viewProps: ILoyaltySignUpViewProps = component.childAt(0).props().props;\n    const { heading, memberHeading, signInLink, signUpText, signUpButton, detailsLink, termsLink} = viewProps;\n\n    expect(viewProps).toBeDefined();\n    expect(heading).toBeTruthy();\n    expect(signUpText).toBeTruthy();\n    expect(detailsLink).not.toBeTruthy(); // Only shows up if user has loyalty account\n    expect(termsLink).toBeTruthy();\n    expect(signUpButton).toBeTruthy();\n    expect(memberHeading).not.toBeTruthy(); // Only shows up if user has loyalty account\n    expect(signInLink).not.toBeTruthy(); // Only shows up if user not signed in\n\n    expect(render(heading as React.ReactElement)).toMatchSnapshot();\n    expect(render(memberHeading as React.ReactElement)).toMatchSnapshot();\n    expect(render(signUpButton)).toMatchSnapshot();\n    expect(render(signUpText)).toMatchSnapshot();\n    expect(render(termsLink)).toMatchSnapshot();\n    component.unmount();\n  });\n\n  it('renders correctly when author does not provide heading ', () => {\n    // @ts-ignore\n    const moduleProps = {...buildMockModuleProps(mockData, mockActions, {}) as ILoyaltySignUpProps<ILoyaltySignUpData>, renderView: jest.fn(props => { return <div props={props} />;})};\n    moduleProps.context = mockContext;\n    moduleProps.resources = mockResource;\n    const component = mount(<LoyaltySignUp {...moduleProps} />);\n    expect(moduleProps.renderView).toBeCalled();\n    const viewProps: ILoyaltySignUpViewProps = component.childAt(0).props().props;\n    const { heading, memberHeading, signInLink, signUpText, signUpButton, detailsLink, termsLink} = viewProps;\n\n    expect(viewProps).toBeDefined();\n    expect(heading).not.toBeTruthy();\n    expect(signUpText).toBeTruthy();\n    expect(detailsLink).not.toBeTruthy(); // Only shows up if user has loyalty account\n    expect(termsLink).toBeTruthy();\n    expect(signUpButton).toBeTruthy();\n    expect(memberHeading).not.toBeTruthy(); // Only shows up if user has loyalty account\n    expect(signInLink).not.toBeTruthy(); // Only shows up if user not signed in\n\n    expect(render(signUpButton)).toMatchSnapshot();\n    expect(render(signUpText)).toMatchSnapshot();\n    expect(render(termsLink)).toMatchSnapshot();\n    component.unmount();\n  });\n\n  it ('issues loyalty naviagates to next page after a click', async () => {\n    // @ts-ignore\n    jest.spyOn(RetailActions, 'issueLoyalty').mockImplementation(() => Promise.resolve({}));\n    jest.spyOn(window.location, 'assign');\n    // @ts-ignore\n    const moduleProps = {...buildMockModuleProps(mockData, mockActions, mockConfig) as ILoyaltySignUpProps<ILoyaltySignUpData>, renderView: jest.fn(props => { return <div props={props} />;})};\n    moduleProps.context = mockContext;\n    moduleProps.resources = mockResource;\n    const component = mount(<LoyaltySignUp {...moduleProps} />);\n    const viewProps: ILoyaltySignUpViewProps = component.childAt(0).props().props;\n    const signup = mount(viewProps.signUpButton);\n    signup.simulate('click');\n    expect(component.state('clicked')).toBe(true);\n    await flushPromises();\n    expect(window.location.assign).toHaveBeenCalled();\n    signup.unmount();\n    component.unmount();\n  });\n\n  it ('issues loyalty uses telemetry when it fails', async () => {\n    // @ts-ignore\n    jest.spyOn(RetailActions, 'issueLoyalty').mockImplementation(() => Promise.reject({message: 'foo'}));\n    jest.spyOn(window.location, 'assign');\n    // @ts-ignore\n    const moduleProps = {...buildMockModuleProps(mockData, mockActions, mockConfig) as ILoyaltySignUpProps<ILoyaltySignUpData>, renderView: jest.fn(props => { return <div props={props} />;})};\n    moduleProps.context = mockContext;\n    moduleProps.resources = mockResource;\n    moduleProps.telemetry.error = jest.fn();\n    const component = mount(<LoyaltySignUp {...moduleProps} />);\n    const viewProps: ILoyaltySignUpViewProps = component.childAt(0).props().props;\n    const signup = mount(viewProps.signUpButton);\n    signup.simulate('click');\n    await flushPromises();\n    expect(moduleProps.telemetry.error).toHaveBeenCalled();\n    signup.unmount();\n    component.unmount();\n  });\n});\n"]}