{"version":3,"file":"account-profile-edit.view.js","sourceRoot":"./src/","sources":["modules/account-profile-edit/account-profile-edit.view.tsx"],"names":[],"mappings":"AAIA,OAAO,KAAK,KAAK,MAAM,OAAO,CAAC;AAE/B,OAAO,EAAE,MAAM,EAAE,IAAI,EAAE,MAAM,sCAAsC,CAAC;AAOpE,MAAM,sBAAsB,GAAsC,CAAC,EAC/D,OAAO,EACP,KAAK,EACL,YAAY,EACZ,KAAK,EACR,EAAE,EAAE;IAED,OAAO,CACH,oBAAC,IAAI,oBAAK,OAAO;QACZ,KAAK;QACL,YAAY;QACZ,KAAK,CACH,CACV,CAAC;AACN,CAAC,CAAC;AAEF,MAAM,YAAY,GAA8C,CAAC,EAC7D,YAAY,EACZ,KAAK,EACL,YAAY,EACZ,cAAc,EACd,OAAO,EACP,wBAAwB,EACxB,+BAA+B,EAClC,EAAE,EAAE;IAED,OAAO,CACH,oBAAC,IAAI,oBAAK,YAAY;QACjB,KAAK,IAAI,KAAK,CAAC,GAAG,CAAC,CAAC,IAA6B,EAAE,EAAE;YAClD,OAAO,CACH,oBAAC,sBAAsB,kBAAC,GAAG,EAAE,IAAI,CAAC,GAAG,IAAM,IAAI,EAAI,CACtD,CAAC;QACN,CAAC,CAAC;QACD,YAAY,IAAI,YAAY,CAAC,GAAG,CAAC,CAAC,KAAsB,EAAE,KAAa,EAAE,EAAE;YACxE,OAAO,CACH,oBAAC,KAAK,CAAC,QAAQ,IAAC,GAAG,EAAE,KAAK,IACrB,KAAK,CACO,CACpB,CAAC;QACN,CAAC,CAAC;QACF,oBAAC,IAAI,oBAAK,cAAc,GACnB,OAAO,IAAI,OAAO,CAAC,GAAG,CAAC,CAAC,MAAuB,EAAE,KAAa,EAAE,EAAE;YAC/D,OAAO,CACH,oBAAC,KAAK,CAAC,QAAQ,IAAC,GAAG,EAAE,KAAK,IACrB,MAAM,CACM,CACpB,CAAC;QACN,CAAC,CAAC,CACC;QAEP,oBAAC,IAAI,oBAAK,wBAAwB;YAC9B,oBAAC,IAAI,oBAAK,+BAA+B,EAAI,CAC1C,CACJ,CACV,CAAC;AACN,CAAC,CAAC;AAEF,MAAM,yBAAyB,GAAyC,CAAC,EACrE,KAAK,EACL,SAAS,EACT,IAAI,EACJ,OAAO,GACV,EAAE,EAAE;IACD,OAAO,CACH,oBAAC,IAAI,oBAAK,KAAK;QACX,oBAAC,IAAI,oBAAK,SAAS;YACd,IAAI;YACJ,OAAO,CACL,CACJ,CACV,CAAC;AACN,CAAC,CAAC;AAEF,MAAM,sBAAsB,GAA2C,KAAK,CAAC,EAAE;IAE3E,MAAM,EACF,kBAAkB,EAClB,SAAS,EACT,OAAO,EACP,kBAAkB,EAClB,WAAW,EACX,OAAO,EACP,8BAA8B,EACjC,GAAG,KAAK,CAAC;IAEV,OAAO,CACH,oBAAC,MAAM,oBAAK,kBAAkB;QACzB,SAAS,CAAC,aAAa,IAAI,oBAAC,IAAI,oBAAK,kBAAkB,EAAI;QAC3D,SAAS,CAAC,aAAa,IAAI,oBAAC,yBAAyB,oBAAK,OAAO,EAAI;QACtE,oBAAC,IAAI,oBAAK,WAAW;YAChB,OAAO;YACP,YAAY,CAAC,8BAA8B,CAAC,CAC1C,CACF,CACZ,CAAC;AACN,CAAC,CAAC;AAEF,eAAe,sBAAsB,CAAC","sourcesContent":["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nimport * as React from 'react';\n\nimport { Module, Node } from '@msdyn365-commerce-modules/utilities';\n\nimport {\n    IAccountProfileEditItem, IAccountProfileEditLoading, IAccountProfileEditLocalAccount,\n    IAccountProfileEditViewProps\n} from './account-profile-edit';\n\nconst AccountProfileEditItem: React.FC<IAccountProfileEditItem> = ({\n    wrapper,\n    label,\n    errorMessage,\n    input\n}) => {\n\n    return (\n        <Node {...wrapper}>\n            {label}\n            {errorMessage}\n            {input}\n        </Node>\n    );\n};\n\nconst LocalAccount: React.FC<IAccountProfileEditLocalAccount> = ({\n    localAccount,\n    items,\n    errorMessage,\n    buttonsWrapper,\n    buttons,\n    verificationSuccessModal,\n    verificationSuccessModalMessage\n}) => {\n\n    return (\n        <Node {...localAccount}>\n            {items && items.map((item: IAccountProfileEditItem) => {\n                return (\n                    <AccountProfileEditItem key={item.key} {...item} />\n                );\n            })}\n            {errorMessage && errorMessage.map((error: React.ReactNode, index: number) => {\n                return (\n                    <React.Fragment key={index}>\n                        {error}\n                    </React.Fragment>\n                );\n            })}\n            <Node {...buttonsWrapper}>\n                {buttons && buttons.map((button: React.ReactNode, index: number) => {\n                    return (\n                        <React.Fragment key={index}>\n                            {button}\n                        </React.Fragment>\n                    );\n                })}\n            </Node>\n\n            <Node {...verificationSuccessModal}>\n                <Node {...verificationSuccessModalMessage} />\n            </Node>\n        </Node>\n    );\n};\n\nconst AccountProfileEditLoading: React.FC<IAccountProfileEditLoading> = ({\n    modal,\n    modalBody,\n    icon,\n    message,\n}) => {\n    return (\n        <Node {...modal}>\n            <Node {...modalBody}>\n                {icon}\n                {message}\n            </Node>\n        </Node>\n    );\n};\n\nconst AccountProfileEditView: React.FC<IAccountProfileEditViewProps> = props => {\n\n    const {\n        accountProfileEdit,\n        viewState,\n        loading,\n        defaultAADConainer,\n        aadConainer,\n        heading,\n        accountProfileEditLocalAccount\n    } = props;\n\n    return (\n        <Module {...accountProfileEdit}>\n            {viewState.isShowLoading && <Node {...defaultAADConainer} />}\n            {viewState.isShowLoading && <AccountProfileEditLoading {...loading} />}\n            <Node {...aadConainer}>\n                {heading}\n                {LocalAccount(accountProfileEditLocalAccount)}\n            </Node>\n        </Module>\n    );\n};\n\nexport default AccountProfileEditView;\n"]}