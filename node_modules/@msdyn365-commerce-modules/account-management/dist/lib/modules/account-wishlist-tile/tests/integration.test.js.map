{"version":3,"file":"integration.test.js","sourceRoot":"./src/","sources":["modules/account-wishlist-tile/tests/integration.test.tsx"],"names":[],"mappings":"AAIA,OAAO,EAAE,MAAM,EAAE,MAAM,QAAQ,CAAC;AAChC,OAAO,KAAK,KAAK,MAAM,OAAO,CAAC;AAE/B,OAAO,EAAE,yBAAyB,EAAE,MAAM,2CAA2C,CAAC;AACtF,OAAO,EAAE,oBAAoB,EAAE,MAAM,yBAAyB,CAAC;AAG/D,OAAO,yBAAyB,MAAM,0BAA0B,CAAC;AAKjE,OAAO,uBAAuB,MAAM,+BAA+B,CAAC;AAEpE,MAAM,aAAa,GAAG;IAClB,8BAA8B,EAAE,qCAAqC;CACxE,CAAC;AAEF,MAAM,SAAS,GAAe;IAC1B,QAAQ,EAAE,mBAAmB;IAC7B,OAAO,EAAE;QACL,cAAc,EAAE,kBAAkB;KACrC;IACD,SAAS,EAAE,sBAAsB;CACpC,CAAC;AAEF,MAAM,YAAY,GAAiB;IAC/B,IAAI,EAAE,gBAAgB;IACtB,GAAG,MAAe;CACrB,CAAC;AAEF,MAAM,4BAA4B,GAA+B;IAC7D,SAAS,EAAE,eAAe;IAC1B,OAAO,EAAE,YAAY;IACrB,KAAK,EAAE,CAAC,SAAS,CAAC;CACrB,CAAC;AAEF,MAAM,oCAAoC,GAA+B;IACrE,SAAS,EAAE,eAAe;IAC1B,OAAO,EAAE,YAAY;IACrB,KAAK,EAAE,CAAC,SAAS,EAAE,SAAS,EAAE;CACjC,CAAC;AAEF,MAAM,gBAAgB,GAA6B;IAC/C,SAAS,EAAE,yBAAyB,CAAC,CAAC,EAAE,CAAmB,CAAC;CAC/D,CAAC;AAEF,QAAQ,CAAC,yCAAyC,EAAE,GAAG,EAAE;IACrD,EAAE,CAAC,mBAAmB,EAAE,GAAG,EAAE;QACzB,MAAM,WAAW,GAAwD;YACrE,GAAI,oBAAoB,CAAC,gBAAgB,EAAE,EAAE,EAAE,4BAA4B,CAAyD;YACpI,SAAS,EAAE,aAAa;YAExB,UAAU,EAAE,uBAAuB;SACtC,CAAC;QAEF,MAAM,SAAS,GAAG,MAAM,CAAC,oBAAC,yBAAyB,oBAAK,WAAW,EAAI,CAAC,CAAC;QACzE,MAAM,CAAC,SAAS,CAAC,CAAC,eAAe,EAAE,CAAC;IACxC,CAAC,CAAC,CAAC;IAEH,EAAE,CAAC,uCAAuC,EAAE,GAAG,EAAE;QAC7C,MAAM,WAAW,GAAwD;YACrE,GAAI,oBAAoB,CAAC,gBAAgB,EAAE,EAAE,EAAE,oCAAoC,CAAyD;YAC5I,SAAS,EAAE,aAAa;YAExB,UAAU,EAAE,uBAAuB;SACtC,CAAC;QAEF,MAAM,SAAS,GAAG,MAAM,CAAC,oBAAC,yBAAyB,oBAAK,WAAW,EAAI,CAAC,CAAC;QACzE,MAAM,CAAC,SAAS,CAAC,CAAC,eAAe,EAAE,CAAC;IACxC,CAAC,CAAC,CAAC;AACP,CAAC,CAAC,CAAC","sourcesContent":["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nimport { render } from 'enzyme';\nimport * as React from 'react';\n\nimport { wrapInResolvedAsyncResult } from '@msdyn365-commerce-modules/retail-actions';\nimport { buildMockModuleProps } from '@msdyn365-commerce/core';\nimport { CommerceList } from '@msdyn365-commerce/retail-proxy';\n\nimport AccountWishlistTileModule from '../account-wishlist-tile';\nimport { IAccountWishlistTileData } from '../account-wishlist-tile.data';\nimport {\n    HeadingTag, IAccountWishlistTileConfig, IAccountWishlistTileProps, IHeadingData, ILinksData\n} from '../account-wishlist-tile.props.autogenerated';\nimport AccountWishlistTileView from '../account-wishlist-tile.view';\n\nconst mockResources = {\n    accountWishlistTileDescription: 'You have {0} items in the Wishlist.'\n};\n\nconst mockLink1: ILinksData = {\n    linkText: 'Mock link 1 title',\n    linkUrl: {\n        destinationUrl: 'Mock link 1 href'\n    },\n    ariaLabel: 'Mock link 1 alt text'\n};\n\nconst mockHeading1: IHeadingData = {\n    text: 'Mock heading 1',\n    tag: HeadingTag.h1\n};\n\nconst mockConfigWithHeadingAndLink: IAccountWishlistTileConfig = {\n    className: 'testClassName',\n    heading: mockHeading1,\n    links: [mockLink1]\n};\n\nconst mockConfigWithHeadingAndMultipleLink: IAccountWishlistTileConfig = {\n    className: 'testClassName',\n    heading: mockHeading1,\n    links: [mockLink1, mockLink1,]\n};\n\nconst mockWishlistData: IAccountWishlistTileData = {\n    wishlists: wrapInResolvedAsyncResult([{}] as CommerceList[])\n};\n\ndescribe('Account-Wishlist-Tile integration tests', () => {\n    it('renders correctly', () => {\n        const moduleProps: IAccountWishlistTileProps<IAccountWishlistTileData> = {\n            ...(buildMockModuleProps(mockWishlistData, {}, mockConfigWithHeadingAndLink) as IAccountWishlistTileProps<IAccountWishlistTileData>),\n            resources: mockResources,\n            // @ts-ignore\n            renderView: AccountWishlistTileView\n        };\n\n        const component = render(<AccountWishlistTileModule {...moduleProps} />);\n        expect(component).toMatchSnapshot();\n    });\n\n    it('renders correctly with multiple links', () => {\n        const moduleProps: IAccountWishlistTileProps<IAccountWishlistTileData> = {\n            ...(buildMockModuleProps(mockWishlistData, {}, mockConfigWithHeadingAndMultipleLink) as IAccountWishlistTileProps<IAccountWishlistTileData>),\n            resources: mockResources,\n            // @ts-ignore\n            renderView: AccountWishlistTileView\n        };\n\n        const component = render(<AccountWishlistTileModule {...moduleProps} />);\n        expect(component).toMatchSnapshot();\n    });\n});"]}