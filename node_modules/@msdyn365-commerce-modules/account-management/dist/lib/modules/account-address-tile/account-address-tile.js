import * as Msdyn365 from '@msdyn365-commerce/core';
import classnames from 'classnames';
import * as React from 'react';
import { format, getTelemetryObject } from '@msdyn365-commerce-modules/utilities';
import DescriptionComponent from './components/account-address-tile-description';
import LinksComponent from './components/account-address-tile-links';
class AccountAddressTile extends React.PureComponent {
    constructor(props) {
        super(props);
        this.handleHeadingChange = (event) => this.props.config.heading.text = event.target.value;
        this.handleLinkTextChange = (linkIndex) => (event) => {
            if (this.props.config.links && this.props.config.links[linkIndex]) {
                this.props.config.links[linkIndex].linkText = event.target.value;
            }
        };
        this.telemetryContent = getTelemetryObject(this.props.context.request.telemetryPageName, this.props.friendlyName, this.props.telemetry);
    }
    render() {
        const { config, resources, data } = this.props;
        const { className, heading, links } = config;
        const { accountAddressTileDescription } = resources;
        const { address } = data;
        const addressCount = (address && address.result && address.result.length) || 0;
        const description = format(accountAddressTileDescription || 'You have {0} addresses.', addressCount);
        const viewProps = {
            ...this.props,
            className: className,
            AccountAddressTile: {
                moduleProps: this.props,
                className: classnames('ms-account-address-tile', config.className)
            },
            heading: heading && heading.text && (React.createElement(Msdyn365.Text, { className: 'ms-account-address-tile__heading', tag: heading.tag || 'h2', text: heading.text, editProps: { onEdit: this.handleHeadingChange, requestContext: this.props.context.request } })),
            links: links && links.length > 0 && React.createElement(LinksComponent, Object.assign({}, { links: links, onTextChange: this.handleLinkTextChange, requestContext: this.props.context.request, telemetryContent: this.telemetryContent })),
            description: React.createElement(DescriptionComponent, { description: description })
        };
        return this.props.renderView(viewProps);
    }
}
export default AccountAddressTile;
//# sourceMappingURL=account-address-tile.js.map