{"version":3,"file":"account-address-tile.test.js","sourceRoot":"./src/","sources":["modules/account-address-tile/tests/unit/account-address-tile.test.tsx"],"names":[],"mappings":"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","sourcesContent":["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nimport { wrapInResolvedAsyncResult } from '@msdyn365-commerce-modules/retail-actions';\nimport { buildMockRequest, IRequestContext } from '@msdyn365-commerce/core';\nimport { Address } from '@msdyn365-commerce/retail-proxy';\nimport { shallow } from 'enzyme';\nimport * as React from 'react';\n\nimport AccountAddressTileModule from '../../account-address-tile';\nimport { IAccountAddressTileData } from '../../account-address-tile.data';\nimport {\n    HeadingTag, IAccountAddressTileConfig, IAccountAddressTileProps, IHeadingData, ILinksData\n} from '../../account-address-tile.props.autogenerated';\n\nconst mockResources = {\n    accountAddressDescription: 'You have {0} address.'\n};\n\nconst mockLink1: ILinksData = {\n    linkText: 'Mock link 1 title',\n    linkUrl: {\n        destinationUrl: 'Mock link 1 href'\n    },\n    ariaLabel: 'Mock link 1 alt text'\n};\n\nconst mockHeading1: IHeadingData = {\n    text: 'Mock heading 1',\n    tag: HeadingTag.h1\n};\n\nconst mockConfigWithHeadingAndLink: IAccountAddressTileConfig = {\n    className: 'testClassName',\n    heading: mockHeading1,\n    links: [mockLink1]\n};\n\nconst mockRequest: IRequestContext = buildMockRequest();\n// @ts-ignore\nconst mockContext: ICoreContext = {\n    request: mockRequest,\n    app: {\n        config: {\n            hideRating: false\n        },\n    },\n    // @ts-ignore: Using partial for testing\n    cultureFormatter: {\n        formatCurrency: jest.fn(price => `$${price}`)\n    }\n};\n\nconst mockConfigWithHeading: IAccountAddressTileConfig = {\n    className: 'testClassName',\n    heading: mockHeading1,\n    links: []\n};\n\nconst mockAddressEmptyData: IAccountAddressTileData = {\n    address: wrapInResolvedAsyncResult([] as Address[])\n};\n\nconst mockAddressData: IAccountAddressTileData = {\n    address: wrapInResolvedAsyncResult([{}] as Address[])\n};\n\nconst mockProps = {\n    resources: mockResources,\n    renderView: jest.fn(),\n    renderModuleAttributes: jest.fn()\n};\n\ndescribe('Account-Address-Tile unit tests - Container', () => {\n    it('renders correctly if all props is provided ', () => {\n        // @ts-ignore mock partial data\n        const moduleProps: IAccountAddressTileProps<IAccountAddressTileData> = {\n            config: mockConfigWithHeadingAndLink,\n            data: mockAddressData,\n            context: mockContext,\n            ...mockProps\n        };\n        shallow(<AccountAddressTileModule {...moduleProps} />);\n        expect(moduleProps.renderView).toMatchSnapshot();\n    });\n\n    it('renders correctly if address has no records', () => {\n        // @ts-ignore mock partial data\n        const moduleProps: IAccountAddressTileProps<IAccountAddressTileData> = {\n            config: mockConfigWithHeadingAndLink,\n            data: mockAddressEmptyData,\n            context: mockContext,\n            ...mockProps\n        };\n        shallow(<AccountAddressTileModule {...moduleProps} />);\n        expect(moduleProps.renderView).toMatchSnapshot();\n    });\n\n    it('renders correctly if links collection is empty', () => {\n        // @ts-ignore mock partial data\n        const moduleProps: IAccountAddressTileProps<IAccountAddressTileData> = {\n            config: mockConfigWithHeading,\n            data: mockAddressData,\n            context: mockContext,\n            ...mockProps\n        };\n        shallow(<AccountAddressTileModule {...moduleProps} />);\n        expect(moduleProps.renderView).toMatchSnapshot();\n    });\n});\n"]}