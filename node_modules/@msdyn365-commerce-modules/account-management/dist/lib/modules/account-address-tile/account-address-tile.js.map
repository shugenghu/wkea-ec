{"version":3,"file":"account-address-tile.js","sourceRoot":"./src/","sources":["modules/account-address-tile/account-address-tile.tsx"],"names":[],"mappings":"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","sourcesContent":["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nimport * as Msdyn365 from '@msdyn365-commerce/core';\nimport classnames from 'classnames';\nimport * as React from 'react';\n\nimport { format, getTelemetryObject, IModuleProps, ITelemetryContent } from '@msdyn365-commerce-modules/utilities';\n\nimport { IAccountAddressTileData } from './account-address-tile.data';\nimport { IAccountAddressTileProps } from './account-address-tile.props.autogenerated';\nimport DescriptionComponent from './components/account-address-tile-description';\nimport LinksComponent from './components/account-address-tile-links';\n\nexport interface IAccountAddressTileViewProps extends IAccountAddressTileProps<IAccountAddressTileData> {\n    AccountAddressTile: IModuleProps;\n    className: string;\n    heading?: React.ReactNode;\n    links?: React.ReactNode;\n    description?: React.ReactNode;\n}\n\n/**\n *\n * AccountAddress component\n * @extends {React.PureComponent<IAccountAddressTileProps<IAccountAddressTileData>>}\n */\nclass AccountAddressTile extends React.PureComponent<IAccountAddressTileProps<IAccountAddressTileData>> {\n\n    private telemetryContent: ITelemetryContent;\n\n    constructor(props: IAccountAddressTileProps<IAccountAddressTileData>) {\n        super(props);\n        this.telemetryContent = getTelemetryObject(this.props.context.request.telemetryPageName!, this.props.friendlyName, this.props.telemetry);\n    }\n\n    public render(): JSX.Element {\n        const { config, resources, data } = this.props;\n        const { className, heading, links } = config;\n        const { accountAddressTileDescription } = resources;\n        const { address } = data;\n\n        const addressCount = (address && address.result && address.result.length) || 0;\n        const description = format(accountAddressTileDescription || 'You have {0} addresses.', addressCount);\n\n        const viewProps = {\n            ...this.props,\n            className: className,\n            AccountAddressTile: {\n                moduleProps: this.props,\n                className: classnames('ms-account-address-tile', config.className)\n            },\n            heading: heading && heading.text && (\n                <Msdyn365.Text\n                    className='ms-account-address-tile__heading'\n                    tag={heading.tag || 'h2'}\n                    text={heading.text}\n                    editProps = {{onEdit: this.handleHeadingChange, requestContext: this.props.context.request}}\n                />\n            ),\n            links: links && links.length > 0 && <LinksComponent {...{ links: links, onTextChange: this.handleLinkTextChange, requestContext: this.props.context.request, telemetryContent: this.telemetryContent }} />,\n            description: <DescriptionComponent description={description} />\n        };\n\n        return this.props.renderView(viewProps) as React.ReactElement;\n    }\n\n    public handleHeadingChange = (event: Msdyn365.ContentEditableEvent) => this.props.config.heading.text = event.target.value;\n    public handleLinkTextChange = (linkIndex: number) => (event: Msdyn365.ContentEditableEvent) => {\n        if(this.props.config.links && this.props.config.links[linkIndex]) {\n            this.props.config.links[linkIndex].linkText = event.target.value;\n        }\n    };\n}\n\nexport default AccountAddressTile;\n"]}