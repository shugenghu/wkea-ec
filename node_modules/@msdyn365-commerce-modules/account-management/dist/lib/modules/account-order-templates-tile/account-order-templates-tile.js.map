{"version":3,"file":"account-order-templates-tile.js","sourceRoot":"./src/","sources":["modules/account-order-templates-tile/account-order-templates-tile.tsx"],"names":[],"mappings":"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","sourcesContent":["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nimport { format, getTelemetryObject, IModuleProps, ITelemetryContent } from '@msdyn365-commerce-modules/utilities';\nimport * as Msdyn365 from '@msdyn365-commerce/core';\nimport classnames from 'classnames';\nimport * as React from 'react';\n\nimport { IAccountOrderTemplatesTileData } from './account-order-templates-tile.data';\nimport { IAccountOrderTemplatesTileProps } from './account-order-templates-tile.props.autogenerated';\nimport { AccountOrderTemplatesTileDescription, AccountOrderTemplatesTileLinks } from './components';\n\nexport interface IAccountOrderTemplatesTileViewProps extends IAccountOrderTemplatesTileProps<IAccountOrderTemplatesTileData> {\n    AccountOrderTemplatesTile: IModuleProps;\n    className: string;\n    heading?: React.ReactNode;\n    links?: React.ReactNode;\n    description?: React.ReactNode;\n}\n\n/**\n *\n * AccountOrderTemplatesTile component\n * @extends {React.PureComponent<IAccountOrderTemplatesTileProps<IAccountOrderTemplatesTileData>>}\n */\nexport class AccountOrderTemplatesTile extends React.PureComponent<IAccountOrderTemplatesTileProps<IAccountOrderTemplatesTileData>> {\n\n    private telemetryContent: ITelemetryContent;\n\n    constructor(props: IAccountOrderTemplatesTileProps<IAccountOrderTemplatesTileData>) {\n        super(props);\n        this.telemetryContent = getTelemetryObject(this.props.context.request.telemetryPageName!, this.props.friendlyName, this.props.telemetry);\n    }\n\n    public render(): JSX.Element {\n        const { config, resources, data } = this.props;\n        const RetailB2BEcommerceFeatureState = this.props.data.featureState.result?.find(featureState => featureState.Name === 'Dynamics.AX.Application.RetailB2BEcommerceFeature');\n        if (!RetailB2BEcommerceFeatureState?.IsEnabled || !this.props.data.customerInformation?.result?.IsB2b) {\n            return <React.Fragment />;\n        }\n\n        const { className, heading, links } = config;\n        const { accountOrderTemplatesTileDescription } = resources;\n        const orderTemplates = data.orderTemplates;\n\n        const orderTemplatesCount = (orderTemplates?.result || []).length;\n        const description = format(accountOrderTemplatesTileDescription, orderTemplatesCount);\n\n        const viewProps = {\n            ...this.props,\n            className: className,\n            AccountOrderTemplatesTile: {\n                moduleProps: this.props,\n                className: classnames('ms-account-order-templates-tile', config.className)\n            },\n            heading: heading && heading.text && (\n                <Msdyn365.Text\n                    className='ms-account-order-templates-tile__heading'\n                    tag={heading.tag}\n                    text={heading.text}\n                    editProps = {{onEdit: this.handleHeadingChange, requestContext: this.props.context.request}}\n                />\n            ),\n            links: links && links.length > 0 && <AccountOrderTemplatesTileLinks {...{ links: links, onTextChange: this.handleLinkTextChange, requestContext: this.props.context.request, telemetryContent: this.telemetryContent }} />,\n            description: <AccountOrderTemplatesTileDescription description={description} />\n        };\n\n        return this.props.renderView(viewProps) as React.ReactElement;\n    }\n\n    public handleHeadingChange = (event: Msdyn365.ContentEditableEvent) => {\n        this.props.config.heading.text = event.target.value;\n    };\n\n    public handleLinkTextChange = (linkIndex: number) => (event: Msdyn365.ContentEditableEvent) => {\n        if(this.props.config.links && this.props.config.links[linkIndex]) {\n          this.props.config.links[linkIndex].linkText = event.target.value;\n        }\n    };\n}\n\nexport default AccountOrderTemplatesTile;\n"]}