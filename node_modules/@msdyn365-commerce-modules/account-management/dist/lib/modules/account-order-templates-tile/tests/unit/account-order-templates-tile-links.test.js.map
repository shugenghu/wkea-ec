{"version":3,"file":"account-order-templates-tile-links.test.js","sourceRoot":"./src/","sources":["modules/account-order-templates-tile/tests/unit/account-order-templates-tile-links.test.tsx"],"names":[],"mappings":"AAIA,OAAO,EAAE,gBAAgB,EAAE,MAAM,yBAAyB,CAAC;AAC3D,OAAO,EAAE,OAAO,EAAE,MAAM,QAAQ,CAAC;AACjC,OAAO,KAAK,KAAK,MAAM,OAAO,CAAC;AAE/B,OAAO,EAAE,8BAA8B,EAAmC,MAAM,kBAAkB,CAAC;AAEnG,QAAQ,CAAC,gDAAgD,EAAE,GAAG,EAAE;IAC5D,EAAE,CAAC,6CAA6C,EAAE,GAAG,EAAE;QACnD,MAAM,SAAS,GAAoC,EAAE,KAAK,EAAE,EAAE,EAAE,cAAc,EAAE,gBAAgB,EAAE,EAAE,CAAC;QACrG,MAAM,SAAS,GAAG,OAAO,CAAC,oBAAC,8BAA8B,oBAAK,SAAS,EAAI,CAAC,CAAC;QAC7E,MAAM,CAAC,SAAS,CAAC,CAAC,eAAe,EAAE,CAAC;IACxC,CAAC,CAAC,CAAC;IAEH,EAAE,CAAC,iDAAiD,EAAE,GAAG,EAAE;QACvD,MAAM,SAAS,GAAG;YACd,KAAK,EAAE;gBACH;oBACI,QAAQ,EAAE,QAAQ;oBAClB,OAAO,EAAE;wBACL,cAAc,EAAE,QAAQ;qBAC3B;oBACD,SAAS,EAAE,mBAAmB;oBAC9B,YAAY,EAAE,KAAK;iBACtB;aACJ;YACD,cAAc,EAAE,gBAAgB,EAAE;SACrC,CAAC;QACF,MAAM,SAAS,GAAG,OAAO,CAAC,oBAAC,8BAA8B,oBAAK,SAAS,EAAI,CAAC,CAAC;QAC7E,MAAM,CAAC,SAAS,CAAC,CAAC,eAAe,EAAE,CAAC;IACxC,CAAC,CAAC,CAAC;IAEH,EAAE,CAAC,mDAAmD,EAAE,GAAG,EAAE;QACzD,MAAM,SAAS,GAAG;YACd,KAAK,EAAE;gBACH;oBACI,QAAQ,EAAE,QAAQ;oBAClB,OAAO,EAAE;wBACL,cAAc,EAAE,QAAQ;qBAC3B;oBACD,SAAS,EAAE,mBAAmB;oBAC9B,YAAY,EAAE,KAAK;iBACtB;gBACD;oBACI,QAAQ,EAAE,QAAQ;oBAClB,OAAO,EAAE;wBACL,cAAc,EAAE,QAAQ;qBAC3B;oBACD,SAAS,EAAE,mBAAmB;oBAC9B,YAAY,EAAE,IAAI;iBACrB;aACJ;YACD,cAAc,EAAE,gBAAgB,EAAE;SACrC,CAAC;QACF,MAAM,SAAS,GAAG,OAAO,CAAC,oBAAC,8BAA8B,oBAAK,SAAS,EAAI,CAAC,CAAC;QAC7E,MAAM,CAAC,SAAS,CAAC,CAAC,eAAe,EAAE,CAAC;IACxC,CAAC,CAAC,CAAC;AAEP,CAAC,CAAC,CAAC","sourcesContent":["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nimport { buildMockRequest } from '@msdyn365-commerce/core';\nimport { shallow } from 'enzyme';\nimport * as React from 'react';\n\nimport { AccountOrderTemplatesTileLinks, IAccountOrderTemplatesTileLinks } from '../../components';\n\ndescribe('Account-OrderTemplates-Tile unit tests - Links', () => {\n    it('renders correctly if no links is provideded', () => {\n        const mockProps: IAccountOrderTemplatesTileLinks = { links: [], requestContext: buildMockRequest() };\n        const component = shallow(<AccountOrderTemplatesTileLinks {...mockProps} />);\n        expect(component).toMatchSnapshot();\n    });\n\n    it('renders correctly if single links is provideded', () => {\n        const mockProps = {\n            links: [\n                {\n                    linkText: 'Link 1',\n                    linkUrl: {\n                        destinationUrl: '/page1'\n                    },\n                    ariaLabel: 'Link 1 aria label',\n                    openInNewTab: false\n                }\n            ],\n            requestContext: buildMockRequest()\n        };\n        const component = shallow(<AccountOrderTemplatesTileLinks {...mockProps} />);\n        expect(component).toMatchSnapshot();\n    });\n\n    it('renders correctly if multiple links is provideded', () => {\n        const mockProps = {\n            links: [\n                {\n                    linkText: 'Link 1',\n                    linkUrl: {\n                        destinationUrl: '/page1'\n                    },\n                    ariaLabel: 'Link 1 aria label',\n                    openInNewTab: false\n                },\n                {\n                    linkText: 'Link 2',\n                    linkUrl: {\n                        destinationUrl: '/page2'\n                    },\n                    ariaLabel: 'Link 2 aria label',\n                    openInNewTab: true\n                }\n            ],\n            requestContext: buildMockRequest()\n        };\n        const component = shallow(<AccountOrderTemplatesTileLinks {...mockProps} />);\n        expect(component).toMatchSnapshot();\n    });\n\n});\n"]}