{"version":3,"file":"account-order-templates-tile.test.js","sourceRoot":"./src/","sources":["modules/account-order-templates-tile/tests/unit/account-order-templates-tile.test.tsx"],"names":[],"mappings":"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","sourcesContent":["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nimport { shallow } from 'enzyme';\nimport * as React from 'react';\n\nimport { wrapInResolvedAsyncResult } from '@msdyn365-commerce-modules/retail-actions';\nimport { buildMockRequest, ICoreContext, IRequestContext } from '@msdyn365-commerce/core';\nimport { Customer, FeatureState, ProductList } from '@msdyn365-commerce/retail-proxy';\n\nimport AccountOrderTemplatesTileModule from '../../account-order-templates-tile';\nimport { IAccountOrderTemplatesTileData } from '../../account-order-templates-tile.data';\nimport {\n    HeadingTag, IAccountOrderTemplatesTileConfig, IAccountOrderTemplatesTileProps, IHeadingData, ILinksData\n} from '../../account-order-templates-tile.props.autogenerated';\n\nconst mockResources = {\n    accountAddressDescription: 'You have {0} address.'\n};\n\nconst mockLink1: ILinksData = {\n    linkText: 'Mock link 1 title',\n    linkUrl: {\n        destinationUrl: 'Mock link 1 href'\n    },\n    ariaLabel: 'Mock link 1 alt text'\n};\n\nconst mockHeading1: IHeadingData = {\n    text: 'Mock heading 1',\n    tag: HeadingTag.h1\n};\n\nconst mockConfigWithHeadingAndLink: IAccountOrderTemplatesTileConfig = {\n    featureName: 'Dynamics.AX.Application.RetailB2BEcommerceFeature',\n    className: 'testClassName',\n    heading: mockHeading1,\n    links: [mockLink1]\n};\n\nconst mockConfigWithHeading: IAccountOrderTemplatesTileConfig = {\n    featureName: 'Dynamics.AX.Application.RetailB2BEcommerceFeature',\n    className: 'testClassName',\n    heading: mockHeading1,\n    links: []\n};\n\nconst mockOrderTemplatesEmptyData: IAccountOrderTemplatesTileData = {\n    customerInformation: wrapInResolvedAsyncResult({ IsB2b: true } as Customer),\n    featureState: wrapInResolvedAsyncResult([{ Name: 'Dynamics.AX.Application.RetailB2BEcommerceFeature', IsEnabled: true }] as FeatureState[]),\n    orderTemplates: wrapInResolvedAsyncResult([] as ProductList[])\n};\n\nconst mockOrderTemplatesData: IAccountOrderTemplatesTileData = {\n    customerInformation: wrapInResolvedAsyncResult({ IsB2b: true } as Customer),\n    featureState: wrapInResolvedAsyncResult([{ Name: 'Dynamics.AX.Application.RetailB2BEcommerceFeature', IsEnabled: true }] as FeatureState[]),\n    orderTemplates: wrapInResolvedAsyncResult([{ ProductListLines: [{}] }] as ProductList[])\n};\n\nconst mockProps = {\n    resources: mockResources,\n    renderView: jest.fn(),\n    renderModuleAttributes: jest.fn()\n};\n\nconst mockRequest: IRequestContext = buildMockRequest();\n\n// @ts-ignore: Using partial for testing\nconst mockContext: ICoreContext = {\n    request: mockRequest\n};\n\ndescribe('Account-OrderTemplates-Tile unit tests - Container', () => {\n    it('renders correctly if all props is provided ', () => {\n        // @ts-ignore mock partial data\n        const moduleProps: IAccountOrderTemplatesTileProps<IAccountOrderTemplatesTileData> = {\n            config: mockConfigWithHeadingAndLink,\n            data: mockOrderTemplatesData,\n            context: mockContext,\n            ...mockProps\n        };\n        shallow(<AccountOrderTemplatesTileModule {...moduleProps} />);\n        expect(moduleProps.renderView).toMatchSnapshot();\n    });\n\n    it('renders correctly if address has no records', () => {\n        // @ts-ignore mock partial data\n        const moduleProps: IAccountOrderTemplatesTileProps<IAccountOrderTemplatesTileData> = {\n            config: mockConfigWithHeadingAndLink,\n            data: mockOrderTemplatesEmptyData,\n            context: mockContext,\n            ...mockProps\n        };\n        shallow(<AccountOrderTemplatesTileModule {...moduleProps} />);\n        expect(moduleProps.renderView).toMatchSnapshot();\n    });\n\n    it('renders correctly if links collection is empty', () => {\n        // @ts-ignore mock partial data\n        const moduleProps: IAccountOrderTemplatesTileProps<IAccountOrderTemplatesTileData> = {\n            config: mockConfigWithHeading,\n            data: mockOrderTemplatesData,\n            context: mockContext,\n            ...mockProps\n        };\n        shallow(<AccountOrderTemplatesTileModule {...moduleProps} />);\n        expect(moduleProps.renderView).toMatchSnapshot();\n    });\n});\n"]}