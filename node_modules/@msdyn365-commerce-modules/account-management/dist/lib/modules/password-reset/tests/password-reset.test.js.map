{"version":3,"file":"password-reset.test.js","sourceRoot":"./src/","sources":["modules/password-reset/tests/password-reset.test.tsx"],"names":[],"mappings":"AAOA,OAAO,KAAK,KAAK,MAAM,OAAO,CAAC;AAC/B,OAAO,KAAK,QAAQ,MAAM,qBAAqB,CAAC;AAEhD,OAAO,EAAE,oBAAoB,EAAE,MAAM,yBAAyB,CAAC;AAE/D,OAAO,aAAa,MAAM,mBAAmB,CAAC;AAQ9C,MAAM,UAAU,GAAyB;IACvC,OAAO,EAAE;QACP,IAAI,EAAE,gBAAgB;QACtB,GAAG,MAAe;KACnB;CACF,CAAC;AAEF,MAAM,aAAa,GAA4B;IAC7C,oBAAoB,EAAE,cAAc;IACpC,wBAAwB,EAAE,kBAAkB;IAC5C,cAAc,EAAE,MAAM;IACtB,mBAAmB,EAAE,MAAM;IAC3B,gBAAgB,EAAE,QAAQ;IAC1B,qBAAqB,EAAE,QAAQ;IAC/B,0BAA0B,EAAE,sGAAsG;IAClI,yBAAyB,EAAE,iFAAiF;IAC5G,mBAAmB,EAAE,yFAAyF;IAC9G,oBAAoB,EAAE,gCAAgC;IACtD,cAAc,EAAE,aAAa;CAC9B,CAAC;AAEF,MAAM,WAAW,GAAG,EAAE,CAAC;AAEvB,QAAQ,CAAC,eAAe,EAAE,GAAG,EAAE;IAC7B,IAAI,WAAsD,CAAC;IAC3D,SAAS,CAAC,GAAG,EAAE;QACb,WAAW,GAAG,EAAC,GAAG,oBAAoB,CAAC,EAAE,EAAE,WAAW,EAAE,UAAU,CAA8C,EAAC,SAAS,EAAE,aAAa,EAAC,CAAC;IAC7I,CAAC,CAAC,CAAC;IACH,EAAE,CAAC,mBAAmB,EAAE,GAAG,EAAE;QAC3B,MAAM,SAAS,GAA+B,QAAQ,CAAC,MAAM,CAC3D,oBAAC,aAAa,oBAAK,WAAW,EAAI,CACnC,CAAC;QACF,MAAM,IAAI,GAAG,SAAS,CAAC,MAAM,EAAE,CAAC;QAChC,MAAM,CAAC,IAAI,CAAC,CAAC,eAAe,EAAE,CAAC;IACjC,CAAC,CAAC,CAAC;AACL,CAAC,CAAC,CAAC","sourcesContent":["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\n/// <reference types='jest' />\n// tslint:disable-next-line:no-unused-variable\nimport * as React from 'react';\nimport * as renderer from 'react-test-renderer';\n\nimport { buildMockModuleProps } from '@msdyn365-commerce/core';\n\nimport PasswordReset from '../password-reset';\nimport {\n  HeadingTag,\n  IPasswordResetConfig,\n  IPasswordResetProps,\n  IPasswordResetResources\n} from '../password-reset.props.autogenerated';\n\nconst mockConfig: IPasswordResetConfig = {\n  heading: {\n    text: 'Reset password',\n    tag: HeadingTag.h2,\n  }\n};\n\nconst mockResources: IPasswordResetResources = {\n  newPasswordLabelText: 'New Password',\n  confirmPasswordLabelText: 'Confirm Password',\n  saveButtonText: 'Save',\n  saveButtonAriaLabel: 'Save',\n  cancelButtonText: 'Cancel',\n  cancelButtonAriaLabel: 'Cancel',\n  passwordEntryMismatchError: 'The password entry fields do not match. Please enter the same password in both fields and try again.',\n  requiredFieldMissingError: 'A required field is missing. Please fill out all required fields and try again.',\n  fieldIncorrectError: 'One or more fields are filled out incorrectly. Please check your entries and try again.',\n  invalidPasswordError: 'Please enter a valid password.',\n  loadingMessage: 'Please wait'\n};\n\nconst mockActions = {};\n\ndescribe('PasswordReset', () => {\n  let moduleProps: IPasswordResetProps<IPasswordResetConfig>;\n  beforeAll(() => {\n    moduleProps = {...buildMockModuleProps({}, mockActions, mockConfig) as IPasswordResetProps<IPasswordResetConfig>,resources: mockResources};\n  });\n  it('renders correctly', () => {\n    const component: renderer.ReactTestRenderer = renderer.create(\n      <PasswordReset {...moduleProps} />\n    );\n    const tree = component.toJSON();\n    expect(tree).toMatchSnapshot();\n  });\n});\n"]}