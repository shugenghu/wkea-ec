{"version":3,"file":"loyalty-terms.view.test.js","sourceRoot":"./src/","sources":["modules/loyalty-terms/tests/loyalty-terms.view.test.tsx"],"names":[],"mappings":"AAIA,OAAO,EAAE,yBAAyB,EAAE,MAAM,2CAA2C,CAAC;AACtF,OAAO,EAAG,oBAAoB,EAAE,MAAM,yBAAyB,CAAC;AAEhE,OAAO,EAAE,MAAM,EAAE,MAAM,QAAQ,CAAC;AAChC,OAAO,KAAK,KAAK,MAAM,OAAO,CAAC;AAI/B,OAAO,iBAAiB,MAAM,uBAAuB,CAAC;AAEtD,MAAM,aAAa,GAAsB;IACrC,WAAW,EAAE,yBAAyB,CAAc,SAAS,CAAC;CACjE,CAAC;AACF,MAAM,QAAQ,GAAsB;IAChC,WAAW,EAAE,yBAAyB,CAAc,EAAC,UAAU,EAAE,QAAQ,EAAgB,CAAC;CAC7F,CAAC;AACF,IAAI,SAAiC,CAAC;AAEtC,MAAM,SAAS,GAAG;IACd,KAAK,EAAE,EAAC,SAAS,EAAE,OAAO,EAAC;IAC3B,WAAW,EAAE,EAAC,SAAS,EAAE,cAAc,EAAC;IACxC,WAAW,EAAE,EAAC,SAAS,EAAE,cAAc,EAAC;IACxC,SAAS,EAAE,EAAC,SAAS,EAAE,YAAY,EAAC;IACpC,OAAO,EAAE,yCAAc;IACvB,YAAY,EAAE,6CAAuB;IACrC,YAAY,EAAE,6CAAuB;IACrC,KAAK,EAAE,uCAAY;IACnB,QAAQ,EAAE,kCAAQ;IAClB,SAAS,EAAE,qDAA0B;IACrC,YAAY,EAAE,EAAC,SAAS,EAAE,cAAc,EAAC;CAC5C,CAAC;AAEF,QAAQ,CAAC,mBAAmB,EAAE,GAAG,EAAE;IAC/B,EAAE,CAAC,qCAAqC,EAAE,GAAG,EAAE;QAC3C,MAAM,WAAW,GAA2B,oBAAoB,CAAC,EAAE,EAAE,QAAQ,CAA2B,CAAC;QACzG,WAAW,CAAC,OAAO,CAAC,OAAO,CAAC,IAAI,CAAC,eAAe,GAAG,IAAI,CAAC;QACxD,SAAS,GAAG;YACR,GAAG,WAAW;YACd,YAAY,EAAE;gBACV,WAAW,EAAE,WAAW;gBACxB,SAAS,EAAE,KAAK;aACnB;YACD,IAAI,EAAE,QAAQ;YACd,OAAO,EAAE,IAAI;YACb,WAAW,EAAE,mDAA6B;YAC1C,KAAK,EAAE,SAAS;SACnB,CAAC;QAEF,MAAM,SAAS,GAAG,MAAM,CAAC,oBAAC,iBAAiB,oBAAK,SAAS,EAAI,CAAC,CAAC;QAC/D,MAAM,CAAC,SAAS,CAAC,IAAI,EAAE,CAAC,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;IACxC,CAAC,CAAC,CAAC;IAEH,EAAE,CAAC,mBAAmB,EAAE,GAAG,EAAE;QACzB,MAAM,WAAW,GAA2B,oBAAoB,CAAC,EAAE,EAAE,EAAE,CAA2B,CAAC;QACnG,WAAW,CAAC,OAAO,CAAC,OAAO,CAAC,IAAI,CAAC,eAAe,GAAG,IAAI,CAAC;QACxD,SAAS,GAAG;YACR,GAAG,WAAW;YACd,YAAY,EAAE;gBACV,WAAW,EAAE,WAAW;gBACxB,SAAS,EAAE,KAAK;aACnB;YACD,IAAI,EAAE,aAAa;YACnB,OAAO,EAAE,KAAK;YACd,WAAW,EAAE,mDAA6B;YAC1C,KAAK,EAAE,SAAS;SACnB,CAAC;QAEF,MAAM,SAAS,GAAG,MAAM,CAAC,oBAAC,iBAAiB,oBAAK,SAAS,EAAI,CAAC,CAAC;QAC/D,MAAM,CAAC,SAAS,CAAC,IAAI,EAAE,CAAC,CAAC,GAAG,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;QACxC,MAAM,CAAC,SAAS,CAAC,CAAC,eAAe,EAAE,CAAC;IACxC,CAAC,CAAC,CAAC;AACP,CAAC,CAAC,CAAC","sourcesContent":["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nimport { wrapInResolvedAsyncResult } from '@msdyn365-commerce-modules/retail-actions';\nimport {  buildMockModuleProps } from '@msdyn365-commerce/core';\nimport {  LoyaltyCard } from '@msdyn365-commerce/retail-proxy';\nimport { render } from 'enzyme';\nimport * as React from 'react';\nimport {ILoyaltyTermsViewProps} from '../loyalty-terms';\nimport {ILoyaltyTermsData} from '../loyalty-terms.data';\nimport { ILoyaltyTermsProps } from '../loyalty-terms.props.autogenerated';\nimport LoyaltySignUpView from '../loyalty-terms.view';\n\nconst emptyMockData: ILoyaltyTermsData = {\n    loyaltyCard: wrapInResolvedAsyncResult<LoyaltyCard>(undefined)\n};\nconst mockData: ILoyaltyTermsData = {\n    loyaltyCard: wrapInResolvedAsyncResult<LoyaltyCard>({CardNumber: 'carddd'} as LoyaltyCard)\n};\nlet mockProps: ILoyaltyTermsViewProps;\n\nconst mockModal = {\n    modal: {className: 'modal'},\n    modalHeader: {className: 'modal-header'},\n    modalFooter: {className: 'modal-footer'},\n    modalBody: {className: 'modal-body'},\n    heading: <p>heading</p>,\n    cancelButton: <button>Cancel</button>,\n    submitButton: <button>Submit</button>,\n    terms: <p>terms</p>,\n    checkbox: <input/>,\n    agreeText: <p>agree to terms text</p>,\n    agreeSection: {className: 'agreeSection'}\n};\n\ndescribe('LoyaltySignUpView', () => {\n    it('Returns null when module is loading', () => {\n        const moduleProps: ILoyaltyTermsProps<{}> = buildMockModuleProps({}, mockData) as ILoyaltyTermsProps<{}>;\n        moduleProps.context.request.user.isAuthenticated = true;\n        mockProps = {\n            ...moduleProps,\n            LoyaltyTerms: {\n                moduleProps: moduleProps,\n                className: 'foo'\n            },\n            data: mockData,\n            loading: true,\n            modalToggle: <button>Modal toggle</button>,\n            modal: mockModal\n        };\n\n        const component = render(<LoyaltySignUpView {...mockProps} />);\n        expect(component.html()).toBe(null);\n    });\n\n    it('Renders correctly', () => {\n        const moduleProps: ILoyaltyTermsProps<{}> = buildMockModuleProps({}, {}) as ILoyaltyTermsProps<{}>;\n        moduleProps.context.request.user.isAuthenticated = true;\n        mockProps = {\n            ...moduleProps,\n            LoyaltyTerms: {\n                moduleProps: moduleProps,\n                className: 'foo'\n            },\n            data: emptyMockData,\n            loading: false,\n            modalToggle: <button>Modal toggle</button>,\n            modal: mockModal\n        };\n\n        const component = render(<LoyaltySignUpView {...mockProps} />);\n        expect(component.html()).not.toBe(null);\n        expect(component).toMatchSnapshot();\n    });\n});"]}