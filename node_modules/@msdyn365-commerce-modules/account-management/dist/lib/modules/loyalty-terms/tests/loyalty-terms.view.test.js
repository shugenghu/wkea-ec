import { wrapInResolvedAsyncResult } from '@msdyn365-commerce-modules/retail-actions';
import { buildMockModuleProps } from '@msdyn365-commerce/core';
import { render } from 'enzyme';
import * as React from 'react';
import LoyaltySignUpView from '../loyalty-terms.view';
const emptyMockData = {
    loyaltyCard: wrapInResolvedAsyncResult(undefined)
};
const mockData = {
    loyaltyCard: wrapInResolvedAsyncResult({ CardNumber: 'carddd' })
};
let mockProps;
const mockModal = {
    modal: { className: 'modal' },
    modalHeader: { className: 'modal-header' },
    modalFooter: { className: 'modal-footer' },
    modalBody: { className: 'modal-body' },
    heading: React.createElement("p", null, "heading"),
    cancelButton: React.createElement("button", null, "Cancel"),
    submitButton: React.createElement("button", null, "Submit"),
    terms: React.createElement("p", null, "terms"),
    checkbox: React.createElement("input", null),
    agreeText: React.createElement("p", null, "agree to terms text"),
    agreeSection: { className: 'agreeSection' }
};
describe('LoyaltySignUpView', () => {
    it('Returns null when module is loading', () => {
        const moduleProps = buildMockModuleProps({}, mockData);
        moduleProps.context.request.user.isAuthenticated = true;
        mockProps = {
            ...moduleProps,
            LoyaltyTerms: {
                moduleProps: moduleProps,
                className: 'foo'
            },
            data: mockData,
            loading: true,
            modalToggle: React.createElement("button", null, "Modal toggle"),
            modal: mockModal
        };
        const component = render(React.createElement(LoyaltySignUpView, Object.assign({}, mockProps)));
        expect(component.html()).toBe(null);
    });
    it('Renders correctly', () => {
        const moduleProps = buildMockModuleProps({}, {});
        moduleProps.context.request.user.isAuthenticated = true;
        mockProps = {
            ...moduleProps,
            LoyaltyTerms: {
                moduleProps: moduleProps,
                className: 'foo'
            },
            data: emptyMockData,
            loading: false,
            modalToggle: React.createElement("button", null, "Modal toggle"),
            modal: mockModal
        };
        const component = render(React.createElement(LoyaltySignUpView, Object.assign({}, mockProps)));
        expect(component.html()).not.toBe(null);
        expect(component).toMatchSnapshot();
    });
});
//# sourceMappingURL=loyalty-terms.view.test.js.map