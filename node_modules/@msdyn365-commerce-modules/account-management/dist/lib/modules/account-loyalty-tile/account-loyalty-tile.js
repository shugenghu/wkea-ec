import * as Msdyn365 from '@msdyn365-commerce/core';
import classnames from 'classnames';
import * as React from 'react';
import { format, getTelemetryObject } from '@msdyn365-commerce-modules/utilities';
import DescriptionComponent from './components/account-loyalty-tile-description';
import LinksComponent from './components/account-loyalty-tile-links';
class AccountLoyaltyTile extends React.PureComponent {
    constructor(props) {
        super(props);
        this.handleHeadingChange = (event) => this.props.config.heading.text = event.target.value;
        this.handleLinkTextChange = (linkIndex) => (event) => {
            if (this.props.config.signUpLinkText && this.props.config.viewLinkText) {
                this.props.config.viewLinkText = event.target.value;
            }
        };
        this.telemetryContent = getTelemetryObject(this.props.context.request.telemetryPageName, this.props.friendlyName, this.props.telemetry);
    }
    render() {
        const { config, data, resources, context } = this.props;
        const { className, heading, signUpLinkText, signUpLinkAriaLabel, viewLinkText, viewLinkAriaLabel } = config;
        const { accountLoyaltySummary, accountLoyaltyMemberSummary } = resources;
        const { loyaltyCard } = data;
        let description = accountLoyaltySummary;
        let url = Msdyn365.getUrlSync('loyaltyJoin', context.actionContext) || '';
        const link = { linkText: signUpLinkText, linkUrl: { destinationUrl: url }, ariaLabel: signUpLinkAriaLabel };
        if (loyaltyCard && loyaltyCard.result && loyaltyCard.result.CardNumber) {
            let points = 0;
            if (loyaltyCard.result.RewardPoints && loyaltyCard.result.RewardPoints.length > 0) {
                loyaltyCard.result.RewardPoints.forEach((rewardPoint) => {
                    points += rewardPoint.ActivePoints;
                });
            }
            link.ariaLabel = viewLinkAriaLabel;
            link.linkText = viewLinkText;
            url = Msdyn365.getUrlSync('loyalty', context.actionContext) || '';
            link.linkUrl.destinationUrl = url;
            description = format(accountLoyaltyMemberSummary, points);
        }
        const viewProps = {
            ...this.props,
            className: className,
            AccountLoyaltyTile: {
                moduleProps: this.props,
                className: classnames('ms-account-loyalty-tile', config.className)
            },
            heading: heading && heading.text && (React.createElement(Msdyn365.Text, { className: 'ms-account-loyalty-tile__heading', tag: heading.tag || 'h2', text: heading.text, editProps: { onEdit: this.handleHeadingChange, requestContext: this.props.context.request } })),
            links: React.createElement(LinksComponent, Object.assign({}, { links: [link], onTextChange: this.handleLinkTextChange, requestContext: this.props.context.request, telemetryContent: this.telemetryContent })),
            description: React.createElement(DescriptionComponent, { description: description })
        };
        return this.props.renderView(viewProps);
    }
}
export default AccountLoyaltyTile;
//# sourceMappingURL=account-loyalty-tile.js.map