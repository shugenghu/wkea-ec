{"version":3,"file":"account-loyalty-tile.test.js","sourceRoot":"./src/","sources":["modules/account-loyalty-tile/tests/unit/account-loyalty-tile.test.tsx"],"names":[],"mappings":"AAIA,OAAO,EAAE,MAAM,EAAE,MAAM,QAAQ,CAAC;AAChC,OAAO,KAAK,KAAK,MAAM,OAAO,CAAC;AAE/B,OAAO,EAAE,yBAAyB,EAAE,MAAM,2CAA2C,CAAC;AACtF,OAAO,EAAE,oBAAoB,EAAE,MAAM,yBAAyB,CAAC;AAG/D,OAAO,wBAAwB,MAAM,4BAA4B,CAAC;AAKlE,OAAO,sBAAsB,MAAM,iCAAiC,CAAC;AAErE,MAAM,aAAa,GAAG;IAClB,qBAAqB,EAAE,gDAAgD;IACvE,2BAA2B,EAAE,gCAAgC;CAChE,CAAC;AAEF,MAAM,YAAY,GAAiB;IAC/B,IAAI,EAAE,gBAAgB;IACtB,GAAG,MAAe;CACrB,CAAC;AAEF,MAAM,4BAA4B,GAA8B;IAC5D,SAAS,EAAE,eAAe;IAC1B,OAAO,EAAE,YAAY;IACrB,cAAc,EAAE,SAAS;IACzB,mBAAmB,EAAE,oBAAoB;IACzC,YAAY,EAAE,MAAM;IACpB,iBAAiB,EAAE,iBAAiB;CACvC,CAAC;AAEF,MAAM,qBAAqB,GAA8B;IACrD,SAAS,EAAE,eAAe;IAC1B,OAAO,EAAE,YAAY;IACrB,cAAc,EAAE,SAAS;IACzB,mBAAmB,EAAE,oBAAoB;IACzC,YAAY,EAAE,MAAM;IACpB,iBAAiB,EAAE,iBAAiB;CACvC,CAAC;AAEF,MAAM,oBAAoB,GAA4B;IAClD,WAAW,EAAE,yBAAyB,CAAC,CAAC,EAAE,CAAgB,CAAC;CAC9D,CAAC;AAEF,MAAM,eAAe,GAA4B;IAC7C,WAAW,EAAE,yBAAyB,CAAC,CAAC;YACpC,YAAY,EAAE,CAAC;oBACX,YAAY,EAAE,EAAE;iBACnB,CAAC;SACL,CAAgB,CAAC;CACrB,CAAC;AAEF,QAAQ,CAAC,6CAA6C,EAAE,GAAG,EAAE;IACzD,EAAE,CAAC,6CAA6C,EAAE,GAAG,EAAE;QACnD,MAAM,WAAW,GAAG;YAChB,GAAG,oBAAoB,CAAC,eAAe,EAAE,EAAE,EAAE,eAAe,CAAsD;YAClH,SAAS,EAAE,aAAa;YAExB,UAAU,EAAE,sBAAqD;SACpE,CAAC;QACF,MAAM,MAAM,GAAG,MAAM,CAAC,oBAAC,wBAAwB,oBAAK,WAAW,EAAI,CAAC,CAAC;QACrE,MAAM,CAAC,MAAM,CAAC,CAAC,eAAe,EAAE,CAAC;IACrC,CAAC,CAAC,CAAC;IAEH,EAAE,CAAC,6CAA6C,EAAE,GAAG,EAAE;QACnD,MAAM,WAAW,GAAG;YAChB,GAAG,oBAAoB,CAAC,oBAAoB,EAAE,EAAE,EAAE,4BAA4B,CAAsD;YACpI,SAAS,EAAE,aAAa;YAExB,UAAU,EAAE,sBAAqD;SACpE,CAAC;QACF,MAAM,MAAM,GAAG,MAAM,CAAC,oBAAC,wBAAwB,oBAAK,WAAW,EAAI,CAAC,CAAC;QACrE,MAAM,CAAC,MAAM,CAAC,CAAC,eAAe,EAAE,CAAC;IACrC,CAAC,CAAC,CAAC;IAEH,EAAE,CAAC,gDAAgD,EAAE,GAAG,EAAE;QACtD,MAAM,WAAW,GAAG;YAChB,GAAG,oBAAoB,CAAC,eAAe,EAAE,EAAE,EAAE,qBAAqB,CAAsD;YACxH,SAAS,EAAE,aAAa;YAExB,UAAU,EAAE,sBAAqD;SACpE,CAAC;QACF,MAAM,MAAM,GAAG,MAAM,CAAC,oBAAC,wBAAwB,oBAAK,WAAW,EAAI,CAAC,CAAC;QACrE,MAAM,CAAC,MAAM,CAAC,CAAC,eAAe,EAAE,CAAC;IACrC,CAAC,CAAC,CAAC;AACP,CAAC,CAAC,CAAC","sourcesContent":["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nimport { render } from 'enzyme';\nimport * as React from 'react';\n\nimport { wrapInResolvedAsyncResult } from '@msdyn365-commerce-modules/retail-actions';\nimport { buildMockModuleProps } from '@msdyn365-commerce/core';\nimport { LoyaltyCard } from '@msdyn365-commerce/retail-proxy';\n\nimport AccountLoyaltyTileModule from '../../account-loyalty-tile';\nimport { IAccountLoyaltyTileData } from '../../account-loyalty-tile.data';\nimport {\n    HeadingTag, IAccountLoyaltyTileConfig, IAccountLoyaltyTileProps, IHeadingData\n} from '../../account-loyalty-tile.props.autogenerated';\nimport AccountLoyaltyTileView from '../../account-loyalty-tile.view';\n\nconst mockResources = {\n    accountLoyaltySummary: 'You have not signed up for our loyalty program',\n    accountLoyaltyMemberSummary: 'You have {0} points available.'\n};\n\nconst mockHeading1: IHeadingData = {\n    text: 'Mock heading 1',\n    tag: HeadingTag.h1\n};\n\nconst mockConfigWithHeadingAndLink: IAccountLoyaltyTileConfig = {\n    className: 'testClassName',\n    heading: mockHeading1,\n    signUpLinkText: 'sign up',\n    signUpLinkAriaLabel: 'sign up aria label',\n    viewLinkText: 'view',\n    viewLinkAriaLabel: 'view aria label',\n};\n\nconst mockConfigWithHeading: IAccountLoyaltyTileConfig = {\n    className: 'testClassName',\n    heading: mockHeading1,\n    signUpLinkText: 'sign up',\n    signUpLinkAriaLabel: 'sign up aria label',\n    viewLinkText: 'view',\n    viewLinkAriaLabel: 'view aria label',\n};\n\nconst mockLoyaltyEmptyData: IAccountLoyaltyTileData = {\n    loyaltyCard: wrapInResolvedAsyncResult([{}] as LoyaltyCard)\n};\n\nconst mockLoyaltyData: IAccountLoyaltyTileData = {\n    loyaltyCard: wrapInResolvedAsyncResult([{\n        RewardPoints: [{\n            ActivePoints: 10\n        }]\n    }] as LoyaltyCard)\n};\n\ndescribe('Account-Loyalty-Tile unit tests - Container', () => {\n    it('renders correctly if all props is provided ', () => {\n        const moduleProps = {\n            ...buildMockModuleProps(mockLoyaltyData, {}, mockLoyaltyData) as IAccountLoyaltyTileProps<IAccountLoyaltyTileData>,\n            resources: mockResources,\n            // @ts-ignore\n            renderView: AccountLoyaltyTileView as IAccountLoyaltyTileVewProps\n        };\n        const module = render(<AccountLoyaltyTileModule {...moduleProps} />);\n        expect(module).toMatchSnapshot();\n    });\n\n    it('renders correctly if address has no records', () => {\n        const moduleProps = {\n            ...buildMockModuleProps(mockLoyaltyEmptyData, {}, mockConfigWithHeadingAndLink) as IAccountLoyaltyTileProps<IAccountLoyaltyTileData>,\n            resources: mockResources,\n            // @ts-ignore\n            renderView: AccountLoyaltyTileView as IAccountLoyaltyTileVewProps\n        };\n        const module = render(<AccountLoyaltyTileModule {...moduleProps} />);\n        expect(module).toMatchSnapshot();\n    });\n\n    it('renders correctly if links collection is empty', () => {\n        const moduleProps = {\n            ...buildMockModuleProps(mockLoyaltyData, {}, mockConfigWithHeading) as IAccountLoyaltyTileProps<IAccountLoyaltyTileData>,\n            resources: mockResources,\n            // @ts-ignore\n            renderView: AccountLoyaltyTileView as IAccountLoyaltyTileVewProps\n        };\n        const module = render(<AccountLoyaltyTileModule {...moduleProps} />);\n        expect(module).toMatchSnapshot();\n    });\n});\n"]}