import { render } from 'enzyme';
import * as React from 'react';
import { wrapInResolvedAsyncResult } from '@msdyn365-commerce-modules/retail-actions';
import { buildMockModuleProps } from '@msdyn365-commerce/core';
import AccountLoyaltyTileModule from '../../account-loyalty-tile';
import AccountLoyaltyTileView from '../../account-loyalty-tile.view';
const mockResources = {
    accountLoyaltySummary: 'You have not signed up for our loyalty program',
    accountLoyaltyMemberSummary: 'You have {0} points available.'
};
const mockHeading1 = {
    text: 'Mock heading 1',
    tag: "h1"
};
const mockConfigWithHeadingAndLink = {
    className: 'testClassName',
    heading: mockHeading1,
    signUpLinkText: 'sign up',
    signUpLinkAriaLabel: 'sign up aria label',
    viewLinkText: 'view',
    viewLinkAriaLabel: 'view aria label',
};
const mockConfigWithHeading = {
    className: 'testClassName',
    heading: mockHeading1,
    signUpLinkText: 'sign up',
    signUpLinkAriaLabel: 'sign up aria label',
    viewLinkText: 'view',
    viewLinkAriaLabel: 'view aria label',
};
const mockLoyaltyEmptyData = {
    loyaltyCard: wrapInResolvedAsyncResult([{}])
};
const mockLoyaltyData = {
    loyaltyCard: wrapInResolvedAsyncResult([{
            RewardPoints: [{
                    ActivePoints: 10
                }]
        }])
};
describe('Account-Loyalty-Tile unit tests - Container', () => {
    it('renders correctly if all props is provided ', () => {
        const moduleProps = {
            ...buildMockModuleProps(mockLoyaltyData, {}, mockLoyaltyData),
            resources: mockResources,
            renderView: AccountLoyaltyTileView
        };
        const module = render(React.createElement(AccountLoyaltyTileModule, Object.assign({}, moduleProps)));
        expect(module).toMatchSnapshot();
    });
    it('renders correctly if address has no records', () => {
        const moduleProps = {
            ...buildMockModuleProps(mockLoyaltyEmptyData, {}, mockConfigWithHeadingAndLink),
            resources: mockResources,
            renderView: AccountLoyaltyTileView
        };
        const module = render(React.createElement(AccountLoyaltyTileModule, Object.assign({}, moduleProps)));
        expect(module).toMatchSnapshot();
    });
    it('renders correctly if links collection is empty', () => {
        const moduleProps = {
            ...buildMockModuleProps(mockLoyaltyData, {}, mockConfigWithHeading),
            resources: mockResources,
            renderView: AccountLoyaltyTileView
        };
        const module = render(React.createElement(AccountLoyaltyTileModule, Object.assign({}, moduleProps)));
        expect(module).toMatchSnapshot();
    });
});
//# sourceMappingURL=account-loyalty-tile.test.js.map