import * as React from 'react';
import { format, getTelemetryObject } from '@msdyn365-commerce-modules/utilities';
import * as Msdyn365 from '@msdyn365-commerce/core';
import classnames from 'classnames';
import { AccountOrganizationUsersTileDescription, AccountOrganizationUsersTileLinks } from './components';
class OrganizationUsersTile extends React.PureComponent {
    constructor(props) {
        super(props);
        this.handleHeadingChange = (event) => {
            this.props.config.heading.text = event.target.value;
        };
        this.handleLinkTextChange = (linkIndex) => (event) => {
            if (this.props.config.links && this.props.config.links[linkIndex]) {
                this.props.config.links[linkIndex].linkText = event.target.value;
            }
        };
        this.telemetryContent = getTelemetryObject(this.props.context.request.telemetryPageName, this.props.friendlyName, this.props.telemetry);
    }
    render() {
        const { config, resources, data } = this.props;
        const { className, heading, links } = config;
        const { accountOrganizationUsersTileDescription } = resources;
        const numUsers = data.users && data.users.result;
        const viewProps = {
            ...this.props,
            className: className,
            OrganizationUsersTile: {
                moduleProps: this.props,
                className: classnames('ms-account-organization-users-tile', config.className)
            },
            heading: heading && heading.text && (React.createElement(Msdyn365.Text, { className: 'ms-account-organization-users-tile__heading', tag: heading.tag, text: heading.text, editProps: { onEdit: this.handleHeadingChange, requestContext: this.props.context.request } })),
            links: links && links.length > 0 && React.createElement(AccountOrganizationUsersTileLinks, Object.assign({}, { links: links, onTextChange: this.handleLinkTextChange, requestContext: this.props.context.request, telemetryContent: this.telemetryContent })),
            description: React.createElement(AccountOrganizationUsersTileDescription, { description: format(accountOrganizationUsersTileDescription, numUsers || 0) })
        };
        return this.props.renderView(viewProps);
    }
}
export default OrganizationUsersTile;
//# sourceMappingURL=organization-users-tile.js.map