{"version":3,"file":"sign-up.view.js","sourceRoot":"./src/","sources":["modules/sign-up/sign-up.view.tsx"],"names":[],"mappings":"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","sourcesContent":["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nimport * as React from 'react';\n\nimport { Module, Node } from '@msdyn365-commerce-modules/utilities';\n\nimport {\n    ISignUpEmailVerification, ISignUpItem, ISignUpLoading, ISignUpLocalAccount, ISignUpViewProps\n} from './sign-up';\n\nconst SignUpItem: React.FC<ISignUpItem> = ({\n    wrapper,\n    label,\n    errorMessage,\n    input\n}) => {\n\n    return (\n        <Node {...wrapper}>\n            {label}\n            {errorMessage}\n            {input}\n        </Node>\n    );\n};\n\nconst SignUpEmailVerification: React.FC<ISignUpEmailVerification> = ({\n    email,\n    buttonWrapper,\n    buttons,\n    successMessage,\n    errorMessage\n}) => {\n    return (\n        <>\n            <SignUpItem key={email.key} {...email} />\n            {successMessage && successMessage.map((message: React.ReactNode) => {\n                return (\n                    <>\n                        {message}\n                    </>\n                );\n            })}\n            {errorMessage && errorMessage.map((message: React.ReactNode) => {\n                return (\n                    <>\n                        {message}\n                    </>\n                );\n            })}\n            <Node {...buttonWrapper}>\n                {buttons && buttons.map((button: React.ReactNode) => {\n                    return (\n                        <>\n                            {button}\n                        </>\n                    );\n                })}\n            </Node>\n        </>\n    );\n};\n\nconst LocalAccount: React.FC<ISignUpLocalAccount> = ({\n    localAccount,\n    items,\n    emailVerification,\n    buttons,\n    errorMessage,\n    disclaimer\n}) => {\n\n    return (\n        <Node {...localAccount}>\n            {items && items.map((item: ISignUpItem) => {\n                if (item.key === 'email' && emailVerification.isRequired) {\n                    return (\n                        <>\n                            <SignUpItem key={item.key} {...item} />\n                            <SignUpEmailVerification {...emailVerification} />\n                        </>\n                    );\n                }\n                return (\n                    <SignUpItem key={item.key} {...item} />\n                );\n            })}\n            {errorMessage && errorMessage.map((error: React.ReactNode, index: number) => {\n                return (\n                    <React.Fragment key={index}>\n                        {error}\n                    </React.Fragment>\n                );\n            })}\n            {buttons && buttons.map((button: React.ReactNode, index: number) => {\n                return (\n                    <React.Fragment key={index}>\n                        {button}\n                    </React.Fragment>\n                );\n            })}\n            {disclaimer}\n        </Node>\n    );\n};\n\nconst SignUpLoading: React.FC<ISignUpLoading> = ({\n    modal,\n    modalBody,\n    icon,\n    message,\n}) => {\n    return (\n        <Node {...modal}>\n            <Node {...modalBody}>\n                {icon}\n                {message}\n            </Node>\n        </Node>\n    );\n};\n\nconst SignUpView: React.FC<ISignUpViewProps> = props => {\n\n    const {\n        signUp,\n        viewState,\n        loading,\n        defaultAADConainer,\n        aadConainer,\n        heading,\n        signUpLocalAccount\n    } = props;\n\n    return (\n        <Module {...signUp}>\n            {viewState.isShowLoading && <Node {...defaultAADConainer} />}\n            {viewState.isShowLoading && <SignUpLoading {...loading} />}\n            <Node {...aadConainer}>\n                {heading}\n                {LocalAccount(signUpLocalAccount)}\n            </Node>\n        </Module>\n    );\n};\n\nexport default SignUpView;\n"]}