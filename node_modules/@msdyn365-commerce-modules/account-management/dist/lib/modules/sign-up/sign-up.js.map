{"version":3,"file":"sign-up.js","sourceRoot":"./src/","sources":["modules/sign-up/sign-up.tsx"],"names":[],"mappings":";AAIA,OAAO,UAAU,MAAM,YAAY,CAAC;AACpC,OAAO,EAAE,UAAU,EAAE,MAAM,MAAM,CAAC;AAClC,OAAO,EAAE,QAAQ,EAAE,MAAM,YAAY,CAAC;AACtC,OAAO,KAAK,KAAK,MAAM,OAAO,CAAC;AAE/B,OAAO,EACuB,KAAK,EAAE,SAAS,EAC7C,MAAM,sCAAsC,CAAC;AAC9C,OAAO,KAAK,QAAQ,MAAM,yBAAyB,CAAC;AAEpD,OAAO,qBAAqB,MAAM,6BAA6B,CAAC;AAChE,OAAO,oBAAoB,MAAM,4BAA4B,CAAC;AAC9D,OAAO,oBAAoB,MAAM,4BAA4B,CAAC;AAC9D,OAAO,oBAAoB,MAAM,4BAA4B,CAAC;AAC9D,OAAO,0BAA0B,MAAM,mCAAmC,CAAC;AAC3E,OAAO,6BAA6B,MAAM,sCAAsC,CAAC;AACjF,OAAO,sBAAsB,MAAM,8BAA8B,CAAC;AA2DlE,IAAM,MAAM,GAAZ,MAAM,MAAO,SAAQ,KAAK,CAAC,SAAsC;IAW7D,YAAY,KAAkC;QAC1C,KAAK,CAAC,KAAK,CAAC,CAAC;QAXT,oBAAe,GAAW,YAAY,CAAC;QAwExC,wBAAmB,GAAG,CAAC,KAAoC,EAAE,EAAE,CAAC,IAAI,CAAC,KAAK,CAAC,MAAM,CAAC,OAAO,CAAC,IAAI,GAAE,KAAK,CAAC,MAAM,CAAC,KAAK,CAAC;QACnH,0BAAqB,GAAG,CAAC,KAAoC,EAAE,EAAE,CAAC,IAAI,CAAC,KAAK,CAAC,MAAM,CAAC,UAAU,GAAG,KAAK,CAAC,MAAM,CAAC,KAAK,CAAC;QAEpH,YAAO,GAAG,GAAG,EAAE;YAClB,IAAI,CAAC,gBAAgB,EAAE,CAAC;YACxB,IAAI,CAAC,mBAAmB,EAAE,CAAC;YAE3B,IAAI,CAAC,mBAAmB,GAAG,WAAW,CAAC,GAAG,EAAE,GAAG,IAAI,CAAC,2BAA2B,EAAE,CAAC,CAAC,CAAC,EAAE,GAAG,CAAC,CAAC;YAC3F,UAAU,CAAC,GAAG,EAAE,GAAG,aAAa,CAAC,IAAI,CAAC,mBAAmB,CAAC,CAAC,CAAC,CAAC,EAAE,KAAK,CAAC,CAAC;QAC1E,CAAC,CAAA;QAGO,gCAA2B,GAAG,GAAG,EAAE;YAEvC,IAAI,MAAM,IAAI,MAAM,CAAC,QAAQ,CAAC,IAAI,MAAM,CAAC,QAAQ,CAAC,CAAC,0BAA0B,CAAC,EAAE;gBAC5E,aAAa,CAAC,IAAI,CAAC,mBAAmB,CAAC,CAAC;gBACxC,IAAI,CAAC,aAAa,GAAG,IAAI,CAAC;aAC7B;QACL,CAAC,CAAA;QAEO,qBAAgB,GAAG,GAAG,EAAE;YAC5B,MAAM,SAAS,GAAqB,IAAI,CAAC,KAAK,CAAC,SAAS,IAAI,EAAE,CAAC;YAG/D,IAAI,MAAM,CAAC,WAAW,CAAC,IAAI,MAAM,CAAC,WAAW,CAAC,CAAC,iBAAiB,CAAC,EAAE;gBAE/D,MAAM,CAAC,WAAW,CAAC,CAAC,iBAAiB,CAAC,CAAC,GAAG,CAAC,CAAC,GAA0F,EAAE,EAAE;oBACtI,QAAQ,GAAG,CAAC,EAAE,CAAC,WAAW,EAAE,EAAE;wBAC1B,KAAK,OAAO,CAAC,CAAC;4BACV,IAAI,CAAC,UAAU,GAAG,GAAG,CAAC,GAAG,CAAC;4BAC1B,IAAI,CAAC,2BAA2B,GAAG,GAAG,CAAC,MAAM,CAAC;4BAC9C,MAAM;yBACT;wBACD,KAAK,aAAa,CAAC,CAAC;4BAChB,IAAI,CAAC,gBAAgB,GAAG,GAAG,CAAC,GAAG,CAAC;4BAChC,MAAM;yBACT;wBACD,KAAK,iBAAiB,CAAC,CAAC;4BACpB,IAAI,CAAC,oBAAoB,GAAG,GAAG,CAAC,GAAG,CAAC;4BACpC,MAAM;yBACT;wBACD,QAAQ;qBACX;oBAED,QAAQ,GAAG,CAAC,aAAa,CAAC,WAAW,EAAE,EAAE;wBACrC,KAAK,UAAU,CAAC,CAAC;4BACb,GAAG,CAAC,QAAQ,GAAG,SAAS,CAAC,oBAAoB,CAAC;4BAC9C,MAAM;yBACT;wBACD,KAAK,UAAU,CAAC,CAAC;4BACb,GAAG,CAAC,QAAQ,GAAG,SAAS,CAAC,wBAAwB,CAAC;4BAClD,MAAM;yBACT;wBACD,QAAQ;qBACX;gBACL,CAAC,CAAC,CAAC;aACN;QACL,CAAC,CAAA;QAEO,wBAAmB,GAAG,GAAG,EAAE;YAC/B,MAAM,SAAS,GAAqB,IAAI,CAAC,KAAK,CAAC,SAAS,IAAI,EAAE,CAAC;YAG/D,IAAI,MAAM,IAAI,MAAM,CAAC,SAAS,CAAC,EAAE;gBAC7B,MAAM,aAAa,GAAG;oBAClB,cAAc,EAAE,SAAS,CAAC,yBAAyB;iBACtD,CAAC;gBAGF,MAAM,CAAC,MAAM,CAAC,MAAM,CAAC,SAAS,CAAC,EAAE,aAAa,CAAC,CAAC;aACnD;QACL,CAAC,CAAA;QAlIG,MAAM,oBAAoB,GAAG,8NAA8N,CAAC;QAC5P,IAAI,CAAC,UAAU,GAAG,kEAAkE,CAAC;QACrF,IAAI,CAAC,gBAAgB,GAAG,oBAAoB,CAAC;QAC7C,IAAI,CAAC,oBAAoB,GAAG,oBAAoB,CAAC;QACjD,IAAI,CAAC,2BAA2B,GAAG,KAAK,CAAC;QACzC,IAAI,CAAC,aAAa,GAAG,KAAK,CAAC;IAC/B,CAAC;IAEM,iBAAiB;QACpB,IAAI,CAAC,OAAO,EAAE,CAAC;IACnB,CAAC;IAGM,kBAAkB;QAErB,IAAI,IAAI,CAAC,aAAa,IAAI,MAAM,IAAI,MAAM,CAAC,UAAU,CAAC,IAAI,MAAM,CAAC,UAAU,CAAC,CAAC,YAAY,CAAC,EAAE;YAExF,MAAM,CAAC,UAAU,CAAC,CAAC,YAAY,CAAC,EAAE,CAAC;SACtC;IACL,CAAC;IAEM,MAAM;QACT,MAAM,EAAE,MAAM,EAAE,SAAS,EAAE,GAAG,IAAI,CAAC,KAAK,CAAC;QAEzC,MAAM,SAAS,GAAG;YACd,GAAG,IAAI,CAAC,KAAK;YACb,SAAS,EAAE;gBACP,aAAa,EAAE,CAAC,IAAI,CAAC,aAAa;aACrC;YACD,MAAM,EAAE;gBACJ,WAAW,EAAE,IAAI,CAAC,KAAK;gBACvB,SAAS,EAAE,UAAU,CAAC,IAAI,CAAC,eAAe,EAAE,MAAM,CAAC,SAAS,CAAC;aAChE;YACD,OAAO,EAAE;gBACL,KAAK,EAAE;oBACH,GAAG,EAAE,KAAK;oBACV,MAAM,EAAE,IAAI;iBACf;gBACD,SAAS,EAAE;oBACP,GAAG,EAAE,SAAS;iBACjB;gBACD,IAAI,EAAE,oBAAC,0BAA0B,IAAC,SAAS,EAAE,IAAI,CAAC,eAAe,GAAI;gBACrE,OAAO,EAAE,oBAAC,6BAA6B,IAAC,SAAS,EAAE,IAAI,CAAC,eAAe,EAAE,OAAO,EAAE,SAAS,CAAC,cAAc,GAAI;aACjH;YACD,kBAAkB,EAAE;gBAChB,EAAE,EAAE,KAAK;gBACT,KAAK,EAAE,EAAE,OAAO,EAAE,MAAM,EAAE;aAC7B;YACD,WAAW,EAAE;gBACT,EAAE,EAAE,IAAI,CAAC,aAAa,CAAC,CAAC,CAAC,KAAK,CAAC,CAAC,CAAC,IAAI;gBACrC,SAAS,EAAE,GAAG,IAAI,CAAC,eAAe,aAAa;aAClD;YACD,OAAO,EAAE,oBAAC,QAAQ,CAAC,IAAI,kBAAC,SAAS,EAAE,GAAG,IAAI,CAAC,eAAe,WAAW,IAAM,MAAM,CAAC,OAAO,IAAE,SAAS,EAAI,EAAC,MAAM,EAAE,IAAI,CAAC,mBAAmB,EAAE,cAAc,EAAE,IAAI,CAAC,KAAK,CAAC,OAAO,CAAC,OAAO,EAAC,IAAI;YAC1L,kBAAkB,EAAE,IAAI,CAAC,mBAAmB,EAAE;SACjD,CAAC;QAEF,OAAO,IAAI,CAAC,KAAK,CAAC,UAAU,CAAC,SAAS,CAAuB,CAAC;IAClE,CAAC;IA2EO,mBAAmB;QACvB,MAAM,EAAE,MAAM,EAAE,SAAS,EAAE,GAAG,IAAI,CAAC,KAAK,CAAC;QACzC,OAAO;YACH,YAAY,EAAE;gBACV,EAAE,EAAE,eAAe;gBACnB,SAAS,EAAE,GAAG,IAAI,CAAC,eAAe,sBAAsB;aAC3D;YACD,KAAK,EAAE;gBACH,IAAI,CAAC,YAAY,CAAC,WAAW,EAAE,MAAM,EAAE,SAAS,CAAC,kBAAkB,EAAE,SAAS,CAAC,kBAAkB,CAAC;gBAClG,IAAI,CAAC,YAAY,CAAC,SAAS,EAAE,MAAM,EAAE,SAAS,CAAC,iBAAiB,EAAE,SAAS,CAAC,iBAAiB,CAAC;gBAC9F,IAAI,CAAC,YAAY,CAAC,OAAO,EAAE,OAAO,EAAE,SAAS,CAAC,qBAAqB,EAAE,SAAS,EAAE,IAAI,CAAC,UAAU,CAAC;gBAChG,IAAI,CAAC,YAAY,CAAC,aAAa,EAAE,UAAU,EAAE,SAAS,CAAC,iBAAiB,EAAE,SAAS,EAAE,IAAI,CAAC,gBAAgB,CAAC;gBAC3G,IAAI,CAAC,YAAY,CAAC,iBAAiB,EAAE,UAAU,EAAE,SAAS,CAAC,wBAAwB,EAAE,SAAS,EAAE,IAAI,CAAC,oBAAoB,CAAC;aAC7H;YACD,iBAAiB,EAAE;gBACf,UAAU,EAAE,IAAI,CAAC,2BAA2B;gBAC5C,KAAK,EAAE,IAAI,CAAC,YAAY,CAAC,iBAAiB,EAAE,MAAM,EAAE,SAAS,CAAC,yBAAyB,CAAC;gBACxF,aAAa,EAAE;oBACX,SAAS,EAAE,GAAG,IAAI,CAAC,eAAe,qCAAqC;oBACvE,eAAe,EAAE,OAAO;iBAC3B;gBACD,OAAO,EAAE;oBACL,CACI,oBAAC,qBAAqB,IAClB,GAAG,EAAC,oBAAoB,EACxB,EAAE,EAAC,oBAAoB,EACvB,SAAS,EAAE,GAAG,IAAI,CAAC,eAAe,+BAA+B,IAAI,CAAC,eAAe,uCAAuC,EAC5H,SAAS,EAAE,SAAS,CAAC,uBAAuB,EAC5C,IAAI,EAAE,SAAS,CAAC,kBAAkB,GACpC,CACL;oBACD,CACI,oBAAC,qBAAqB,IAClB,GAAG,EAAC,sBAAsB,EAC1B,EAAE,EAAC,sBAAsB,EACzB,SAAS,EAAE,GAAG,IAAI,CAAC,eAAe,+BAA+B,IAAI,CAAC,eAAe,2CAA2C,EAChI,SAAS,EAAE,SAAS,CAAC,yBAAyB,EAC9C,IAAI,EAAE,SAAS,CAAC,oBAAoB,GACtC,CACL;oBACD,CACI,oBAAC,qBAAqB,IAClB,GAAG,EAAC,sBAAsB,EAC1B,EAAE,EAAC,sBAAsB,EACzB,SAAS,EAAE,GAAG,IAAI,CAAC,eAAe,+BAA+B,IAAI,CAAC,eAAe,yCAAyC,EAC9H,SAAS,EAAE,SAAS,CAAC,yBAAyB,EAC9C,IAAI,EAAE,SAAS,CAAC,oBAAoB,GACtC,CACL;oBACD,CACI,oBAAC,qBAAqB,IAClB,GAAG,EAAC,oBAAoB,EACxB,EAAE,EAAC,oBAAoB,EACvB,SAAS,EAAE,GAAG,IAAI,CAAC,eAAe,+BAA+B,IAAI,CAAC,eAAe,uCAAuC,EAC5H,SAAS,EAAE,SAAS,CAAC,0BAA0B,EAC/C,IAAI,EAAE,SAAS,CAAC,qBAAqB,GACvC,CACL;iBACJ;gBACD,cAAc,EAAE;oBACZ,oBAAC,sBAAsB,IAAC,GAAG,EAAC,YAAY,EAAC,EAAE,EAAC,YAAY,EAAC,SAAS,EAAE,IAAI,CAAC,eAAe,EAAE,OAAO,EAAE,SAAS,CAAC,2BAA2B,GAAI;oBAC5I,oBAAC,sBAAsB,IAAC,GAAG,EAAC,eAAe,EAAC,EAAE,EAAC,eAAe,EAAC,SAAS,EAAE,IAAI,CAAC,eAAe,EAAE,OAAO,EAAE,SAAS,CAAC,2BAA2B,GAAI;iBACrJ;gBACD,YAAY,EAAE;oBACV,oBAAC,oBAAoB,IAAC,GAAG,EAAC,kBAAkB,EAAC,EAAE,EAAC,kBAAkB,EAAC,SAAS,EAAE,IAAI,CAAC,eAAe,EAAE,OAAO,EAAE,SAAS,CAAC,UAAU,GAAI;oBACrI,oBAAC,oBAAoB,IAAC,GAAG,EAAC,qBAAqB,EAAC,EAAE,EAAC,qBAAqB,EAAC,SAAS,EAAE,IAAI,CAAC,eAAe,EAAE,OAAO,EAAE,SAAS,CAAC,oBAAoB,GAAI;oBACrJ,oBAAC,oBAAoB,IAAC,GAAG,EAAC,sBAAsB,EAAC,EAAE,EAAC,sBAAsB,EAAC,SAAS,EAAE,IAAI,CAAC,eAAe,EAAE,OAAO,EAAE,SAAS,CAAC,cAAc,GAAI;oBACjJ,oBAAC,oBAAoB,IAAC,GAAG,EAAC,yBAAyB,EAAC,EAAE,EAAC,yBAAyB,EAAC,SAAS,EAAE,IAAI,CAAC,eAAe,EAAE,OAAO,EAAE,SAAS,CAAC,gBAAgB,GAAI;oBACzJ,oBAAC,oBAAoB,IAAC,GAAG,EAAC,mBAAmB,EAAC,EAAE,EAAC,mBAAmB,EAAC,SAAS,EAAE,IAAI,CAAC,eAAe,EAAE,OAAO,EAAE,SAAS,CAAC,WAAW,GAAI;oBACxI,oBAAC,oBAAoB,IAAC,GAAG,EAAC,wBAAwB,EAAC,EAAE,EAAC,wBAAwB,EAAC,SAAS,EAAE,IAAI,CAAC,eAAe,EAAE,OAAO,EAAE,SAAS,CAAC,iBAAiB,GAAI;iBAC3J;aACJ;YACD,OAAO,EAAE;gBACL,oBAAC,qBAAqB,IAAC,GAAG,EAAC,UAAU,EAAC,EAAE,EAAC,UAAU,EAAC,SAAS,EAAE,GAAG,IAAI,CAAC,eAAe,iBAAiB,EAAE,SAAS,EAAE,SAAS,CAAC,qBAAqB,EAAE,IAAI,EAAE,SAAS,CAAC,gBAAgB,GAAI;gBACzL,oBAAC,qBAAqB,IAAC,GAAG,EAAC,QAAQ,EAAC,EAAE,EAAC,QAAQ,EAAC,SAAS,EAAE,GAAG,IAAI,CAAC,eAAe,iBAAiB,EAAE,SAAS,EAAE,SAAS,CAAC,qBAAqB,EAAE,IAAI,EAAE,SAAS,CAAC,gBAAgB,GAAI;aACxL;YACD,YAAY,EAAE;gBACV,oBAAC,oBAAoB,IAAC,GAAG,EAAC,uBAAuB,EAAC,EAAE,EAAC,uBAAuB,EAAC,SAAS,EAAE,IAAI,CAAC,eAAe,EAAE,OAAO,EAAE,SAAS,CAAC,0BAA0B,GAAI;gBAC/J,oBAAC,oBAAoB,IAAC,GAAG,EAAC,sBAAsB,EAAC,EAAE,EAAC,sBAAsB,EAAC,SAAS,EAAE,IAAI,CAAC,eAAe,EAAE,OAAO,EAAE,SAAS,CAAC,gCAAgC,GAAI;gBACnK,oBAAC,oBAAoB,IAAC,GAAG,EAAC,gBAAgB,EAAC,EAAE,EAAC,gBAAgB,EAAC,SAAS,EAAE,IAAI,CAAC,eAAe,EAAE,OAAO,EAAE,SAAS,CAAC,mBAAmB,GAAI;gBAC1I,oBAAC,oBAAoB,IAAC,GAAG,EAAC,8BAA8B,EAAC,EAAE,EAAC,8BAA8B,EAAC,SAAS,EAAE,IAAI,CAAC,eAAe,GAAI;aACjI;YACD,UAAU,EAAE,MAAM,CAAC,UAAU,IAAI,CACjC,oBAAC,QAAQ,CAAC,iBAAiB,IACvB,SAAS,EAAE,GAAG,IAAI,CAAC,eAAe,sBAAsB,EACxD,IAAI,EAAE,MAAM,CAAC,UAAU,EACvB,SAAS,EAAE,EAAC,MAAM,EAAE,IAAI,CAAC,qBAAqB,EAAE,cAAc,EAAE,IAAI,CAAC,KAAK,CAAC,OAAO,CAAC,OAAO,EAAC,GAC7F,CACD;SACJ,CAAC;IACN,CAAC;IAEO,YAAY,CAAC,EAAU,EAAE,IAAY,EAAE,SAAiB,EAAE,SAAkB,EAAE,OAAgB;QAClG,MAAM,SAAS,GAAG,GAAG,IAAI,CAAC,eAAe,gBAAgB,CAAC;QAC1D,OAAO,CACH;YACI,OAAO,EAAE;gBACL,SAAS,EAAE,UAAU,CAAC,SAAS,EAAE,GAAG,SAAS,IAAI,EAAE,EAAE,EAAE,YAAY,EAAE,WAAW,CAAC;aACpF;YACD,GAAG,EAAE,EAAE;YACP,KAAK,EAAE,CACH,oBAAC,oBAAoB,oBAEd;gBACC,EAAE,EAAE,EAAE;gBACN,KAAK,EAAE,EAAE;gBACT,SAAS,EAAE,SAAS;gBACpB,IAAI,EAAE,SAAS;aAClB,EAEH,CACL;YACD,YAAY,EAAE,CACV,oBAAC,oBAAoB,oBAEd;gBACC,SAAS,EAAE,IAAI,CAAC,eAAe;gBAC/B,IAAI,EAAE,MAAM;aACf,EAEH,CACL;YACD,KAAK,EAAE,CACH,oBAAC,oBAAoB,oBAEd;gBACC,EAAE,EAAE,EAAE;gBACN,IAAI,EAAE,IAAI;gBACV,SAAS,EAAE,SAAS;gBACpB,OAAO,EAAE,OAAO;gBAChB,SAAS,EAAE,SAAS;aACvB,EAEH,CACL;SAEJ,CACJ,CAAC;IACN,CAAC;CACJ,CAAA;AA3Re;IAAX,UAAU;0CAA4B;AAC3B;IAAX,UAAU;gDAAkC;AACjC;IAAX,UAAU;oDAAsC;AACrC;IAAX,UAAU;2DAA8C;AAC7C;IAAX,UAAU;6CAAgC;AANzC,MAAM;IADX,QAAQ;GACH,MAAM,CA6RX;AAED,eAAe,MAAM,CAAC","sourcesContent":["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nimport classnames from 'classnames';\nimport { observable } from 'mobx';\nimport { observer } from 'mobx-react';\nimport * as React from 'react';\n\nimport {\n    IModuleProps, INodeProps, Modal, ModalBody\n} from '@msdyn365-commerce-modules/utilities';\nimport * as Msdyn365 from '@msdyn365-commerce/core';\n\nimport SignUpButtonComponent from './components/sign-up-button';\nimport SignUpErrorComponent from './components/sign-up-error';\nimport SignUpInputComponent from './components/sign-up-input';\nimport SignUpLabelComponent from './components/sign-up-label';\nimport SignUpLoadingIconComponent from './components/sign-up-loading-icon';\nimport SignUpLoadingMessageComponent from './components/sign-up-loading-message';\nimport SignUpSuccessComponent from './components/sign-up-success';\nimport { ISignUpConfig, ISignUpProps, ISignUpResources } from './sign-up.props.autogenerated';\n\nexport interface ISignUpViewState {\n    isShowLoading: boolean;\n}\n\nexport interface ISignUpItem {\n    wrapper: INodeProps;\n    key: string;\n    label: React.ReactNode;\n    errorMessage: React.ReactNode;\n    input: React.ReactNode;\n}\n\nexport interface ISignUpEmailVerification {\n    isRequired: boolean;\n    email: ISignUpItem;\n    buttonWrapper: INodeProps;\n    buttons: React.ReactNode[];\n    successMessage: React.ReactNode[];\n    errorMessage: React.ReactNode[];\n}\n\nexport interface ISignUpLocalAccount {\n    localAccount: INodeProps;\n    items: ISignUpItem[];\n    emailVerification: ISignUpEmailVerification;\n    buttons: React.ReactNode[];\n    errorMessage: React.ReactNode[];\n    disclaimer: React.ReactNode;\n}\n\nexport interface ISignUpLoading {\n    modal: INodeProps;\n    modalBody: INodeProps;\n    icon: React.ReactNode;\n    message: React.ReactNode;\n}\n\nexport interface ISignUpViewProps {\n    className: string;\n    viewState: ISignUpViewState;\n    loading: ISignUpLoading;\n    signUp: IModuleProps;\n    defaultAADConainer: INodeProps;\n    aadConainer: INodeProps;\n    heading: React.ReactNode;\n    signUpLocalAccount: ISignUpLocalAccount;\n}\n\n/**\n *\n * SignUp component\n * All AAD related module is rendered on AAD page and we need to respect HTML contract provide by AAD.\n * Please ensure any change in module don't break contract with AAD.\n * @extends {React.Component<ISignUpProps<ISignUpConfig>>}\n */\n@observer\nclass SignUp extends React.Component<ISignUpProps<ISignUpConfig>> {\n    private moduleClassName: string = 'ms-sign-up';\n    @observable private emailRegex: string;\n    @observable private newPasswordRegex: string;\n    @observable private reenterPasswordRegex: string;\n    @observable private isEmailVerificationRequried: boolean;\n    @observable private isInitialized: boolean;\n\n    // tslint:disable-next-line:no-any\n    private initializationTimer: any;\n\n    constructor(props: ISignUpProps<ISignUpConfig>) {\n        super(props);\n        // tslint:disable-next-line:max-line-length\n        const passwordDefaultRegex = '^((?=.*[a-z])(?=.*[A-Z])(?=.*\\\\d)|(?=.*[a-z])(?=.*[A-Z])(?=.*[^A-Za-z0-9])|(?=.*[a-z])(?=.*\\\\d)(?=.*[^A-Za-z0-9])|(?=.*[A-Z])(?=.*\\\\d)(?=.*[^A-Za-z0-9]))([A-Za-z\\\\d@#$%^&*\\\\-_+=[\\\\]{}|\\\\\\\\:\\',?/`~\\'();!]|\\\\.(?!@)){8,16}$';\n        this.emailRegex = '^[a-zA-Z0-9.!#$%&\\'^_`{}~-]+@[a-zA-Z0-9-]+(?:\\\\.[a-zA-Z0-9-]+)*$';\n        this.newPasswordRegex = passwordDefaultRegex;\n        this.reenterPasswordRegex = passwordDefaultRegex;\n        this.isEmailVerificationRequried = false;\n        this.isInitialized = false;\n    }\n\n    public componentDidMount(): void {\n        this._onInit();\n    }\n\n    // After successful AAD initialization, call initialize method provided by AAD to attach events.\n    public componentDidUpdate(): void {\n        // tslint:disable-next-line:no-string-literal\n        if (this.isInitialized && window && window['$element'] && window['$element']['initialize']) {\n            // tslint:disable-next-line:no-string-literal\n            window['$element']['initialize']();\n        }\n    }\n\n    public render(): JSX.Element {\n        const { config, resources } = this.props;\n\n        const viewProps = {\n            ...this.props,\n            viewState: {\n                isShowLoading: !this.isInitialized\n            },\n            signUp: {\n                moduleProps: this.props,\n                className: classnames(this.moduleClassName, config.className)\n            },\n            loading: {\n                modal: {\n                    tag: Modal,\n                    isOpen: true\n                },\n                modalBody: {\n                    tag: ModalBody\n                },\n                icon: <SignUpLoadingIconComponent className={this.moduleClassName} />,\n                message: <SignUpLoadingMessageComponent className={this.moduleClassName} message={resources.loadingMessage} />,\n            },\n            defaultAADConainer: {\n                id: 'api',\n                style: { display: 'none' }\n            },\n            aadConainer: {\n                id: this.isInitialized ? 'api' : null,\n                className: `${this.moduleClassName}__container`\n            },\n            heading: <Msdyn365.Text className={`${this.moduleClassName}__heading`} {...config.heading} editProps = {{onEdit: this.handleHeadingChange, requestContext: this.props.context.request}} />,\n            signUpLocalAccount: this._renderLocalAccount()\n        };\n\n        return this.props.renderView(viewProps) as React.ReactElement;\n    }\n\n    public handleHeadingChange = (event: Msdyn365.ContentEditableEvent) => this.props.config.heading.text= event.target.value;\n    public handleParagraphChange = (event: Msdyn365.ContentEditableEvent) => this.props.config.disclaimer = event.target.value;\n\n    public _onInit = () => {\n        this._prePopulateData();\n        this._updateErrorMessage();\n        // Check if AAD initialization is complete. AAD do not provide any event to subscribe so we need to check variable set by AAD to check initialization status.\n        this.initializationTimer = setInterval(() => { this._isInitializationSuccessful(); }, 100);\n        setTimeout(() => { clearInterval(this.initializationTimer); }, 10000);\n    }\n\n    // After successful AAD initialization, remove waiting and preload any data, if needed.\n    private _isInitializationSuccessful = () => {\n        // tslint:disable-next-line:no-string-literal\n        if (window && window['$diags'] && window['$diags']['initializationSuccessful']) {\n            clearInterval(this.initializationTimer);\n            this.isInitialized = true;\n        }\n    }\n\n    private _prePopulateData = () => {\n        const resources: ISignUpResources = this.props.resources || {};\n\n        // tslint:disable-next-line:no-string-literal\n        if (window['SA_FIELDS'] && window['SA_FIELDS']['AttributeFields']) {\n            // tslint:disable-next-line:no-string-literal\n            window['SA_FIELDS']['AttributeFields'].map((obj: { ID: string; PAT: string; UX_INPUT_TYPE: string; PAT_DESC: string; VERIFY: boolean }) => {\n                switch (obj.ID.toLowerCase()) {\n                    case 'email': {\n                        this.emailRegex = obj.PAT;\n                        this.isEmailVerificationRequried = obj.VERIFY;\n                        break;\n                    }\n                    case 'newpassword': {\n                        this.newPasswordRegex = obj.PAT;\n                        break;\n                    }\n                    case 'reenterpassword': {\n                        this.reenterPasswordRegex = obj.PAT;\n                        break;\n                    }\n                    default:\n                }\n\n                switch (obj.UX_INPUT_TYPE.toLowerCase()) {\n                    case 'password': {\n                        obj.PAT_DESC = resources.invalidPasswordError;\n                        break;\n                    }\n                    case 'emailbox': {\n                        obj.PAT_DESC = resources.invalidEmailAddressError;\n                        break;\n                    }\n                    default:\n                }\n            });\n        }\n    }\n\n    private _updateErrorMessage = () => {\n        const resources: ISignUpResources = this.props.resources || {};\n\n        // tslint:disable-next-line:no-string-literal\n        if (window && window['CONTENT']) {\n            const errorMessages = {\n                required_field: resources.requiredFieldMissingError\n            };\n\n            // tslint:disable-next-line:no-string-literal\n            Object.assign(window['CONTENT'], errorMessages);\n        }\n    }\n\n    private _renderLocalAccount(): ISignUpLocalAccount {\n        const { config, resources } = this.props;\n        return {\n            localAccount: {\n                id: 'attributeList',\n                className: `${this.moduleClassName}__account-items attr`\n            },\n            items: [\n                this._renderInput('givenName', 'text', resources.firstNameLabelText, resources.firstNameMaxLength),\n                this._renderInput('surname', 'text', resources.lastNameLabelText, resources.lastNameMaxLength),\n                this._renderInput('email', 'email', resources.emailAddressLabelText, undefined, this.emailRegex),\n                this._renderInput('newPassword', 'password', resources.passwordLabelText, undefined, this.newPasswordRegex),\n                this._renderInput('reenterPassword', 'password', resources.confirmPasswordLabelText, undefined, this.reenterPasswordRegex)\n            ],\n            emailVerification: {\n                isRequired: this.isEmailVerificationRequried,\n                email: this._renderInput('email_ver_input', 'text', resources.verificationCodeLabelText),\n                buttonWrapper: {\n                    className: `${this.moduleClassName}__email-verification-buttons verify`,\n                    'data-claim_id': 'email'\n                },\n                buttons: [\n                    (\n                        <SignUpButtonComponent\n                            key='email_ver_but_send'\n                            id='email_ver_but_send'\n                            className={`${this.moduleClassName}__email-verification-button ${this.moduleClassName}__verify-email-send-button sendButton`}\n                            ariaLabel={resources.sendCodeButtonAriaLabel}\n                            text={resources.sendCodeButtonText}\n                        />\n                    ),\n                    (\n                        <SignUpButtonComponent\n                            key='email_ver_but_verify'\n                            id='email_ver_but_verify'\n                            className={`${this.moduleClassName}__email-verification-button ${this.moduleClassName}__verify-email-verify-button verifyButton`}\n                            ariaLabel={resources.verifyCodeButtonAriaLabel}\n                            text={resources.verifyCodeButtonText}\n                        />\n                    ),\n                    (\n                        <SignUpButtonComponent\n                            key='email_ver_but_resend'\n                            id='email_ver_but_resend'\n                            className={`${this.moduleClassName}__email-verification-button ${this.moduleClassName}__verify-email-resend-button sendButton`}\n                            ariaLabel={resources.resendCodeButtonAriaLabel}\n                            text={resources.resendCodeButtonText}\n                        />\n                    ),\n                    (\n                        <SignUpButtonComponent\n                            key='email_ver_but_edit'\n                            id='email_ver_but_edit'\n                            className={`${this.moduleClassName}__email-verification-button ${this.moduleClassName}__verify-email-edit-button editButton`}\n                            ariaLabel={resources.changeEmailButtonAriaLabel}\n                            text={resources.changeEmailButtonText}\n                        />\n                    )\n                ],\n                successMessage: [\n                    <SignUpSuccessComponent key='email_info' id='email_info' className={this.moduleClassName} message={resources.verificationCodeSendSuccess} />,\n                    <SignUpSuccessComponent key='email_success' id='email_success' className={this.moduleClassName} message={resources.emailAddressVerifiedSuccess} />\n                ],\n                errorMessage: [\n                    <SignUpErrorComponent key='email_fail_retry' id='email_fail_retry' className={this.moduleClassName} message={resources.retryError} />,\n                    <SignUpErrorComponent key='email_fail_no_retry' id='email_fail_no_retry' className={this.moduleClassName} message={resources.retryNotAllowedError} />,\n                    <SignUpErrorComponent key='email_fail_throttled' id='email_fail_throttled' className={this.moduleClassName} message={resources.throttledError} />,\n                    <SignUpErrorComponent key='email_fail_code_expired' id='email_fail_code_expired' className={this.moduleClassName} message={resources.codeExpiredError} />,\n                    <SignUpErrorComponent key='email_fail_server' id='email_fail_server' className={this.moduleClassName} message={resources.serverError} />,\n                    <SignUpErrorComponent key='email_incorrect_format' id='email_incorrect_format' className={this.moduleClassName} message={resources.invalidEmailError} />\n                ]\n            },\n            buttons: [\n                <SignUpButtonComponent key='continue' id='continue' className={`${this.moduleClassName}__create-button`} ariaLabel={resources.signUpButtonArialabel} text={resources.signUpButtonText} />,\n                <SignUpButtonComponent key='cancel' id='cancel' className={`${this.moduleClassName}__cancel-button`} ariaLabel={resources.cancelButtonArialabel} text={resources.cancelButtonText} />\n            ],\n            errorMessage: [\n                <SignUpErrorComponent key='passwordEntryMismatch' id='passwordEntryMismatch' className={this.moduleClassName} message={resources.passwordEntryMismatchError} />,\n                <SignUpErrorComponent key='requiredFieldMissing' id='requiredFieldMissing' className={this.moduleClassName} message={resources.requiredFieldMissingSummaryError} />,\n                <SignUpErrorComponent key='fieldIncorrect' id='fieldIncorrect' className={this.moduleClassName} message={resources.fieldIncorrectError} />,\n                <SignUpErrorComponent key='claimVerificationServerError' id='claimVerificationServerError' className={this.moduleClassName} />\n            ],\n            disclaimer: config.disclaimer && (\n            <Msdyn365.RichTextComponent\n                className={`${this.moduleClassName}__sign-up-disclaimer`}\n                text={config.disclaimer}\n                editProps={{onEdit: this.handleParagraphChange, requestContext: this.props.context.request}}\n            />\n            ),\n        };\n    }\n\n    private _renderInput(id: string, type: string, labelText: string, maxLength?: string, pattern?: string): ISignUpItem {\n        const className = `${this.moduleClassName}__account-item`;\n        return (\n            {\n                wrapper: {\n                    className: classnames(className, `${className}-${id}`, 'entry-item', 'attrEntry')\n                },\n                key: id,\n                label: (\n                    <SignUpLabelComponent\n                        {\n                        ...{\n                            id: id,\n                            forId: id,\n                            className: className,\n                            text: labelText\n                        }\n                        }\n                    />\n                ),\n                errorMessage: (\n                    <SignUpErrorComponent\n                        {\n                        ...{\n                            className: this.moduleClassName,\n                            type: 'item'\n                        }\n                        }\n                    />\n                ),\n                input: (\n                    <SignUpInputComponent\n                        {\n                        ...{\n                            id: id,\n                            type: type,\n                            maxLength: maxLength,\n                            pattern: pattern,\n                            className: className\n                        }\n                        }\n                    />\n                )\n\n            }\n        );\n    }\n}\n\nexport default SignUp;\n"]}