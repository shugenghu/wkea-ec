import * as React from 'react';
import * as renderer from 'react-test-renderer';
import { buildMockModuleProps, buildMockRequest } from '@msdyn365-commerce/core';
import SignIn from '../sign-in';
const mockRequest = buildMockRequest();
const mockContext = {
    request: mockRequest
};
const mockConfig = {
    signInHeading: {
        text: 'Sign in'
    },
    signUpHeading: {
        tag: "h2",
        text: 'Donâ€™t have an account?'
    },
    signInDisclaimer: '<p>By signing in to your account, you accept our <a href="privacypolicy" class="c-hyperlink">Privacy Policy</a>.</p>',
    facebookIcon: {
        src: 'https://img-prod-cms-mr-microsoft-com.akamaized.net/cms/api/fabrikam/imageFileData/MA1Lgg?ver=edce',
        altText: 'Facebook'
    },
    microsoftIcon: {
        src: 'https://img-prod-cms-mr-microsoft-com.akamaized.net/cms/api/fabrikam/imageFileData/MA1G3L?ver=e411',
        altText: 'Facebook'
    }
};
const mockResources = {
    signUpDescriptionText: 'Create an account with us to get Fabrikam membership points and to save your favorites to the Wishlist.',
    facebookButtonText: 'Sign in with Facebook',
    facebookButtonAriaLabel: 'Sign in with Facebook',
    microsoftButtonText: 'Sign in with Microsoft',
    microsoftButtonAriaLabel: 'Sign in with Microsoft',
    emailAddressLabelText: 'Email address',
    passwordLabelText: 'Password',
    loginButtonText: 'Sign in',
    loginButtonAriaLabel: 'Sign in',
    signUpButtonText: 'Sign Up',
    signUpButtonAriaLabel: 'Sign Up',
    forgotPasswordButtonText: 'Forgotten password?',
    forgotPasswordButtonAriaLabel: 'Forgotten password?',
    loadingMessage: 'Please wait.',
    requriedEmailError: 'Please enter your email address.',
    requriedPasswordError: 'Please enter your password.',
    invalidEmailError: 'Please enter a valid email address.',
    invalidPasswordError: 'The password you entered is not in the expected format.',
    unknownError: 'We are having trouble signing you in. Please try again later.',
    passwordAriaLabel: 'Password',
    emailAddressAriaLabel: 'Email',
};
const mockActions = {};
describe('SignIn', () => {
    let moduleProps;
    beforeAll(() => {
        moduleProps = { ...buildMockModuleProps({}, mockActions, mockConfig, mockContext), resources: mockResources };
    });
    it('renders correctly', () => {
        const component = renderer.create(React.createElement(SignIn, Object.assign({}, moduleProps)));
        const tree = component.toJSON();
        expect(tree).toMatchSnapshot();
    });
});
//# sourceMappingURL=sign-in.test.js.map