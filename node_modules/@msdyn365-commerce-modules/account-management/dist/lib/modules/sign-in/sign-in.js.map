{"version":3,"file":"sign-in.js","sourceRoot":"./src/","sources":["modules/sign-in/sign-in.tsx"],"names":[],"mappings":"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","sourcesContent":["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nimport classnames from 'classnames';\nimport { observable } from 'mobx';\nimport { observer } from 'mobx-react';\nimport * as React from 'react';\n\nimport {\n    getTelemetryObject, IModuleProps, INodeProps, ITelemetryContent, Modal, ModalBody\n} from '@msdyn365-commerce-modules/utilities';\n\nimport * as Msdyn365 from '@msdyn365-commerce/core';\nimport SignInButtonComponent from './components/sign-in-button';\nimport SignInDescriptionComponent from './components/sign-in-description';\nimport SignInErrorComponent from './components/sign-in-error';\nimport SignInInputComponent from './components/sign-in-input';\nimport SignInLabelComponent from './components/sign-in-label';\nimport SignInLinkComponent from './components/sign-in-link';\nimport SignInLoadingIconComponent from './components/sign-in-loading-icon';\nimport SignInLoadingMessageComponent from './components/sign-in-loading-message';\nimport SignInTextComponent from './components/sign-in-text';\nimport { ISignInConfig, ISignInProps, ISignInResources } from './sign-in.props.autogenerated';\n\nexport interface ISignInViewState {\n    isShowLoading: boolean;\n}\n\nexport interface ISignInItem {\n    wrapper: INodeProps;\n    key: string;\n    label: React.ReactNode;\n    error: React.ReactNode;\n    input: React.ReactNode;\n}\n\nexport interface ISignInSocialItem {\n    key: string;\n    button: INodeProps;\n    image: React.ReactNode;\n    text: React.ReactNode;\n}\n\nexport interface ISignInSocialAccount {\n    socialAccounts: INodeProps;\n    items: ISignInSocialItem[];\n}\n\nexport interface ISignInLocalAccount {\n    localAccount: INodeProps;\n    items: ISignInItem[];\n    forgetPassword: React.ReactNode;\n    disclaimer: React.ReactNode;\n    error: React.ReactNode;\n    signInButton: React.ReactNode;\n}\n\nexport interface ISignInLoading {\n    modal: INodeProps;\n    modalBody: INodeProps;\n    icon: React.ReactNode;\n    message: React.ReactNode;\n}\n\nexport interface ISignInViewProps {\n    className: string;\n    viewState: ISignInViewState;\n    signIn: IModuleProps;\n    loading: ISignInLoading;\n    defaultAADConainer: INodeProps;\n    aadConainer: INodeProps;\n    signInSection: INodeProps;\n    signInSectionHeading: React.ReactNode;\n    signInLocalAccount: ISignInLocalAccount;\n    signInSocialAccount: ISignInSocialAccount;\n    signUpSection: INodeProps;\n    signUpSectionHeading: React.ReactNode;\n    signUpDescription: React.ReactNode;\n    signUpLink: React.ReactNode;\n}\n\n/**\n * SignIn component\n * All AAD related module is rendered on AAD page and we need to respect HTML contract provide by AAD.\n * Please ensure any change in module don't break contract with AAD.\n * @extends {React.Component<ISignInProps<ISignInData>>}\n */\n@observer\nclass SignIn extends React.Component<ISignInProps<ISignInConfig>> {\n\n    private moduleClassName: string = 'ms-sign-in';\n    private telemetryContent?: ITelemetryContent;\n    @observable private emailRegex: string;\n    @observable private isInitialized: boolean;\n    // tslint:disable-next-line:no-any\n    private initializationTimer: any;\n\n    constructor(props: ISignInProps<ISignInConfig>) {\n        super(props);\n        this.emailRegex = '^[a-zA-Z0-9.!#$%&\\^_`{}~-]+@[a-zA-Z0-9-]+(?:\\.[a-zA-Z0-9-]+)*$';\n        this.isInitialized = false;\n        this.telemetryContent = getTelemetryObject(this.props.context.request.telemetryPageName!, this.props.friendlyName, this.props.telemetry);\n    }\n\n    public componentDidMount(): void {\n        this._onInit();\n    }\n\n    // After successful AAD initialization, call initialize method provided by AAD to attach events.\n    public componentDidUpdate(): void {\n        // tslint:disable-next-line:no-string-literal\n        if (this.isInitialized && window && window['$element'] && window['$element']['initialize']) {\n            // tslint:disable-next-line:no-string-literal\n            window['$element']['initialize']();\n        }\n    }\n\n    public render(): JSX.Element {\n        const config: ISignInConfig = this.props.config || {};\n        const resources: ISignInResources = this.props.resources || {};\n\n        const viewProps = {\n            ...this.props,\n            viewState: {\n                isShowLoading: !this.isInitialized\n            },\n            signIn: {\n                moduleProps: this.props,\n                className: classnames(this.moduleClassName, config.className)\n            },\n            loading: {\n                modal: {\n                    tag: Modal,\n                    isOpen: true\n                },\n                modalBody: {\n                    tag: ModalBody\n                },\n                icon: <SignInLoadingIconComponent className={this.moduleClassName} />,\n                message: <SignInLoadingMessageComponent className={this.moduleClassName} message={resources.loadingMessage} />,\n            },\n            defaultAADConainer: {\n                id: 'api',\n                style: { display: 'none' }\n            },\n            aadConainer: {\n                id: this.isInitialized ? 'api' : null,\n                className: `${this.moduleClassName}__container`\n            },\n            signInSection: {\n                className: `${this.moduleClassName}__sign-in-section`\n            },\n            signInSectionHeading: <Msdyn365.Text className={`${this.moduleClassName}__sign-in-heading`} {...config.signInHeading}  editProps = {{onEdit: this.handleSignInHeadingChange, requestContext: this.props.context.request}} />,\n            signInLocalAccount: {\n                localAccount: {\n                    className: `${this.moduleClassName}__account-items localAccount`\n                },\n                items: [\n                    this._renderInput('logonIdentifier', 'email', resources.emailAddressLabelText, resources.emailAddressAriaLabel,this.emailRegex),\n                    this._renderInput('password', 'password', resources.passwordLabelText,resources.passwordAriaLabel)\n                ],\n                forgetPassword: (\n                                <SignInLinkComponent\n                                    id='forgotPassword'\n                                    className={`${this.moduleClassName}__forget-password`}\n                                    href='#'\n                                    ariaLabel={resources.forgotPasswordButtonAriaLabel}\n                                    text={resources.forgotPasswordButtonText}\n                                    telemetryContent={this.telemetryContent}\n                                />),\n                disclaimer: config.signInDisclaimer && (\n                <Msdyn365.RichTextComponent\n                    className={`${this.moduleClassName}__sign-in-disclaimer`}\n                    text={config.signInDisclaimer}\n                    editProps={{onEdit: this.handleParagraphChange, requestContext: this.props.context.request}}\n                />\n                ),\n                error: <SignInErrorComponent className={this.moduleClassName} />,\n                signInButton: <SignInButtonComponent id='next' className={`${this.moduleClassName}__sign-in-button`} ariaLabel={resources.loginButtonAriaLabel} text={resources.loginButtonText} telemetryContent={this.telemetryContent}/>\n            },\n            signInSocialAccount: {\n                socialAccounts: {\n                    className: `${this.moduleClassName}__social-accounts`\n                },\n                items: [\n                    this._renderSocialAccount('FacebookExchange', resources.facebookButtonText, resources.facebookButtonAriaLabel, config.facebookIcon),\n                    this._renderSocialAccount('MicrosoftAccountExchange', resources.microsoftButtonText, resources.microsoftButtonAriaLabel, config.microsoftIcon)\n                ]\n            },\n            signUpSection: {\n                className: `${this.moduleClassName}__sign-up-section`\n            },\n            signUpSectionHeading: <Msdyn365.Text className={`${this.moduleClassName}__sign-up-heading`} {...config.signUpHeading}  editProps = {{onEdit: this.handleSignUpHeadingChange, requestContext: this.props.context.request}}/>,\n            signUpDescription: <SignInDescriptionComponent className={`${this.moduleClassName}__sign-up-description`} description={resources.signUpDescriptionText} />,\n            signUpLink: (\n                <SignInLinkComponent\n                    id='createAccount'\n                    href='#'\n                    className={`${this.moduleClassName}__sign-up-link msc-btn`}\n                    ariaLabel={resources.signUpButtonAriaLabel}\n                    text={resources.signUpButtonText}\n                    telemetryContent={this.telemetryContent}\n                />)\n        };\n\n        return this.props.renderView(viewProps) as React.ReactElement;\n    }\n\n    public handleParagraphChange = (event: Msdyn365.ContentEditableEvent) => this.props.config.signInDisclaimer = event.target.value;\n    public handleSignInHeadingChange = (event: Msdyn365.ContentEditableEvent) => this.props.config.signInHeading.text= event.target.value;\n    public handleSignUpHeadingChange = (event: Msdyn365.ContentEditableEvent) => this.props.config.signUpHeading.text= event.target.value;\n\n    private _onInit = () => {\n        this._prePopulateData();\n        this._updateErrorMessage();\n        // Check if AAD initialization is complete. AAD do not provide any event to subscribe so we need to check variable set by AAD to check initialization status.\n        this.initializationTimer = setInterval(() => { this._isInitializationSuccessful(); }, 100);\n        setTimeout(() => { clearInterval(this.initializationTimer); }, 10000);\n    }\n\n    // After successful AAD initialization, remove waiting and preload any data, if needed.\n    private _isInitializationSuccessful = () => {\n        // tslint:disable-next-line:no-string-literal\n        if (window && window['$diags'] && window['$diags']['initializationSuccessful']) {\n            clearInterval(this.initializationTimer);\n            this.isInitialized = true;\n        }\n    }\n\n    private _prePopulateData = () => {\n        // tslint:disable-next-line:no-string-literal\n        if (window && window['CONTENT'] && window['CONTENT']['email_pattern']) {\n            // tslint:disable-next-line:no-string-literal\n            this.emailRegex = window['CONTENT']['email_pattern'];\n        }\n    }\n\n    private _updateErrorMessage = () => {\n        const resources: ISignInResources = this.props.resources || {};\n\n        // tslint:disable-next-line:no-string-literal\n        if (window && window['CONTENT']) {\n            const errorMessages = {\n                requiredField_email: resources.requriedEmailError,\n                requiredField_password: resources.requriedPasswordError,\n                invalid_email: resources.invalidEmailError,\n                invalid_password: resources.invalidPasswordError,\n                unknown_error: resources.unknownError,\n            };\n\n            // tslint:disable-next-line:no-string-literal\n            Object.assign(window['CONTENT'], errorMessages);\n        }\n    }\n\n    private _renderInput(id: string, type: string, labelText: string,ariaLabel:string,pattern?: string): ISignInItem {\n        const className = `${this.moduleClassName}__account-item`;\n        return (\n            {\n                wrapper: {\n                    className: classnames(className, `${className}-${id}`, 'entry-item', 'attrEntry')\n                },\n                key: id,\n                label: (\n                    <SignInLabelComponent\n                        {\n                        ...{\n                            id,\n                            forId: id,\n                            className: className,\n                            text: labelText\n                        }\n                        }\n                    />\n                ),\n                error: (\n                    <SignInErrorComponent\n                        {\n                        ...{\n                            className: this.moduleClassName,\n                            type: 'item'\n                        }\n                        }\n                    />\n                ),\n                input: (\n                    <SignInInputComponent\n                        {\n                        ...{\n                            id: id,\n                            type: type,\n                            pattern: pattern,\n                            className: className,\n                            ariaLabel:ariaLabel\n\n                        }\n                        }\n                    />\n                )\n\n            }\n        );\n    }\n\n    private _renderSocialAccount(id: string, text: string, ariaLabel: string, iconImage?: Msdyn365.IImageData): ISignInSocialItem {\n        return {\n            key: id,\n            button: {\n                id: id,\n                tag: 'button',\n                className: classnames(`${this.moduleClassName}__social-account`, `${this.moduleClassName}__social-account-${id}`, 'accountButton', 'msc-btn'),\n                'aria-label': ariaLabel\n            },\n            image: this._createImageMarkup(iconImage),\n            text: <SignInTextComponent className={`${this.moduleClassName}__social-account-text`} text={text} />\n        };\n    }\n\n    private _createImageMarkup(iconImage?: Msdyn365.IImageData): React.ReactNode | null {\n        if (iconImage) {\n            const imageProps = {\n                gridSettings: this.props.context.request.gridSettings || {},\n                imageSettings: iconImage && iconImage.imageSettings\n            };\n            return <Msdyn365.Image className={`${this.moduleClassName}__social-account-picture`} {...iconImage} {...imageProps} editProps ={{key:iconImage || {}, requestContext: this.props.context.request}}/>;\n        }\n        return null;\n    }\n}\n\nexport default SignIn;\n"]}