import * as React from 'react';
import { IModuleProps, INodeProps } from '@msdyn365-commerce-modules/utilities';
import * as Msdyn365 from '@msdyn365-commerce/core';
import { ISignUpConfig, ISignUpProps } from './sign-up.props.autogenerated';
export interface ISignUpViewState {
    isShowLoading: boolean;
}
export interface ISignUpItem {
    wrapper: INodeProps;
    key: string;
    label: React.ReactNode;
    errorMessage: React.ReactNode;
    input: React.ReactNode;
}
export interface ISignUpEmailVerification {
    isRequired: boolean;
    email: ISignUpItem;
    buttonWrapper: INodeProps;
    buttons: React.ReactNode[];
    successMessage: React.ReactNode[];
    errorMessage: React.ReactNode[];
}
export interface ISignUpLocalAccount {
    localAccount: INodeProps;
    items: ISignUpItem[];
    emailVerification: ISignUpEmailVerification;
    buttons: React.ReactNode[];
    errorMessage: React.ReactNode[];
    disclaimer: React.ReactNode;
}
export interface ISignUpLoading {
    modal: INodeProps;
    modalBody: INodeProps;
    icon: React.ReactNode;
    message: React.ReactNode;
}
export interface ISignUpViewProps {
    className: string;
    viewState: ISignUpViewState;
    loading: ISignUpLoading;
    signUp: IModuleProps;
    defaultAADConainer: INodeProps;
    aadConainer: INodeProps;
    heading: React.ReactNode;
    signUpLocalAccount: ISignUpLocalAccount;
}
declare class SignUp extends React.Component<ISignUpProps<ISignUpConfig>> {
    private moduleClassName;
    private emailRegex;
    private newPasswordRegex;
    private reenterPasswordRegex;
    private isEmailVerificationRequried;
    private isInitialized;
    private initializationTimer;
    constructor(props: ISignUpProps<ISignUpConfig>);
    componentDidMount(): void;
    componentDidUpdate(): void;
    render(): JSX.Element;
    handleHeadingChange: (event: Msdyn365.ContentEditableEvent) => string;
    handleParagraphChange: (event: Msdyn365.ContentEditableEvent) => string;
    _onInit: () => void;
    private _isInitializationSuccessful;
    private _prePopulateData;
    private _updateErrorMessage;
    private _renderLocalAccount;
    private _renderInput;
}
export default SignUp;
