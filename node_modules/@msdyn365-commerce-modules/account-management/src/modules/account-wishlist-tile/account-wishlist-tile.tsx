/*---------------------------------------------------------------------------------------------
 *  Copyright (c) Microsoft Corporation. All rights reserved.
 *  Licensed under the MIT License. See License.txt in the project root for license information.
 *--------------------------------------------------------------------------------------------*/
import classnames from 'classnames';
import * as React from 'react';

import { format, getTelemetryObject, IModuleProps, ITelemetryContent } from '@msdyn365-commerce-modules/utilities';
import * as Msdyn365 from '@msdyn365-commerce/core';

import { IAccountWishlistTileData } from './account-wishlist-tile.data';
import { IAccountWishlistTileProps } from './account-wishlist-tile.props.autogenerated';
import DescriptionComponent from './components/account-wishlist-tile-description';
import LinksComponent from './components/account-wishlist-tile-links';

export interface IAccountWishlistTileViewProps extends IAccountWishlistTileProps<IAccountWishlistTileData> {
    AccountWishlistTile: IModuleProps;
    className: string;
    heading?: React.ReactNode;
    links?: React.ReactNode;
    description?: React.ReactNode;
}

/**
 *
 * AccountWishlist component
 * @extends {React.PureComponent<IAccountWishlistTileProps<IAccountWishlistTileData>>}
 */
class AccountWishlistTile extends React.PureComponent<IAccountWishlistTileProps<IAccountWishlistTileData>> {

    private telemetryContent?: ITelemetryContent;

    constructor(props: IAccountWishlistTileProps<IAccountWishlistTileData>) {
        super(props);
        this.telemetryContent = getTelemetryObject(this.props.context.request.telemetryPageName!, this.props.friendlyName, this.props.telemetry);
    }

    public render(): JSX.Element {
        const { config, resources, data } = this.props;
        const { className, heading, links } = config;
        const { accountWishlistTileDescription } = resources;
        const wishlists = data.wishlists.result;

        const wishlistsCount = (wishlists && wishlists.length && wishlists[0].CommerceListLines || []).length;
        const description = format(accountWishlistTileDescription || 'You have {0} items in the Wishlist.', wishlistsCount);

        const viewProps = {
            ...this.props,
            className: className,
            AccountWishlistTile: {
                moduleProps: this.props,
                className: classnames('ms-account-wishlist-tile', config.className)
            },
            heading: heading && heading.text && (
                <Msdyn365.Text
                    className='ms-account-wishlist-tile__heading'
                    tag={heading.tag}
                    text={heading.text}
                    editProps = {{onEdit: this.handleHeadingChange, requestContext: this.props.context.request}}
                />
            ),
            links: links && links.length > 0 && <LinksComponent {...{ links: links, onTextChange: this.handleLinkTextChange, requestContext: this.props.context.request, telemetryContent: this.telemetryContent }} />,
            description: <DescriptionComponent description={description} />
        };

        return this.props.renderView(viewProps) as React.ReactElement;
    }

    public handleHeadingChange = (event: Msdyn365.ContentEditableEvent) => this.props.config.heading.text= event.target.value;
    public handleLinkTextChange = (linkIndex: number) => (event: Msdyn365.ContentEditableEvent) => {
        if(this.props.config.links && this.props.config.links[linkIndex]) {
          this.props.config.links[linkIndex].linkText = event.target.value;
        }
      };
}

export default AccountWishlistTile;
