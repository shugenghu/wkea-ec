// tslint:disable-next-line:no-unused-variable
import * as React from 'react';
import * as renderer from 'react-test-renderer';

import { buildMockModuleProps } from '@msdyn365-commerce/core';

import SignUp from '../sign-up';
import {
    HeadingTag, ISignUpConfig, ISignUpProps, ISignUpResources
} from '../sign-up.props.autogenerated';

const mockConfig: ISignUpConfig = {
    heading: {
        tag: HeadingTag.h2,
        text: 'Sign up'
    },
    disclaimer: '<p>By creating an account, you agree to Fabrikamâ€™s <a href="TermsOfUser" class="c-hyperlink">Terms of Use</a> and accept our <a href="privacypolicy" class="c-hyperlink">Privacy Policy</a>.</p>'
};

const mockResources: ISignUpResources = {
    firstNameLabelText: 'First Name',
    firstNameMaxLength: '20',
    lastNameLabelText: 'Last Name',
    lastNameMaxLength: '20',
    emailAddressLabelText: 'Email Address',
    verificationCodeLabelText: 'Verification code',
    passwordLabelText: 'Password',
    confirmPasswordLabelText: 'Confirm Password',
    sendCodeButtonText: 'Send verification code',
    sendCodeButtonAriaLabel: 'Send verification code',
    resendCodeButtonText: 'Send new code',
    resendCodeButtonAriaLabel: 'Send new code',
    verifyCodeButtonText: 'Verify code',
    verifyCodeButtonAriaLabel: 'Verify code',
    changeEmailButtonText: 'Change e-mail',
    changeEmailButtonAriaLabel: 'Change e-mail',
    signUpButtonText: 'Sign up',
    signUpButtonArialabel: 'Sign up',
    cancelButtonText: 'Cancel',
    cancelButtonArialabel: 'Cancel',
    verificationCodeSendSuccess: 'Verification code has been sent to your inbox. Please copy it to the verification code input box.',
    emailAddressVerifiedSuccess: 'E-mail address verified. You can now continue',
    passwordEntryMismatchError: 'The password entry fields do not match. Please enter the same password in both fields and try again.',
    requiredFieldMissingSummaryError: 'A required field is missing. Please fill out all required fields and try again.',
    requiredFieldMissingError: 'This information is required.',
    fieldIncorrectError: 'One or more fields are filled out incorrectly. Please check your entries and try again.',
    invalidEmailAddressError: ' Please enter a valid email address.',
    invalidPasswordError: 'Please enter a valid password.',
    invalidEmailError: 'Incorrect format',
    retryError: 'That code is incorrect. Please try again',
    retryNotAllowedError: 'You have made too many incorrect attempts. Please try again later',
    throttledError: 'There have been too many requests to verify this email address. Please wait a while, then try again.',
    codeExpiredError: 'That code is expired. Please request a new code',
    serverError: 'We are having trouble verifying your email address. Please enter a valid email address and try again',
    loadingMessage: 'Please wait.'
};

const mockActions = {};

describe('SignUp', () => {
    let moduleProps: ISignUpProps<ISignUpConfig>;
    beforeAll(() => {
        moduleProps = { ...buildMockModuleProps({}, mockActions, mockConfig) as ISignUpProps<ISignUpConfig>, resources: mockResources };
    });
    it('renders correctly', () => {
        const component: renderer.ReactTestRenderer = renderer.create(<SignUp {...moduleProps} />);
        const tree = component.toJSON();
        expect(tree).toMatchSnapshot();
    });
});
