/*---------------------------------------------------------------------------------------------
 *  Copyright (c) Microsoft Corporation. All rights reserved.
 *  Licensed under the MIT License. See License.txt in the project root for license information.
 *--------------------------------------------------------------------------------------------*/
import { render } from 'enzyme';
import * as React from 'react';

import { wrapInResolvedAsyncResult } from '@msdyn365-commerce-modules/retail-actions';
import { buildMockModuleProps } from '@msdyn365-commerce/core';
import { LoyaltyCard } from '@msdyn365-commerce/retail-proxy';

import AccountLoyaltyTileModule from '../account-loyalty-tile';
import { IAccountLoyaltyTileData } from '../account-loyalty-tile.data';
import {
    HeadingTag, IAccountLoyaltyTileConfig, IAccountLoyaltyTileProps, IHeadingData
} from '../account-loyalty-tile.props.autogenerated';
import AccountLoyaltyTileView from '../account-loyalty-tile.view';

const mockResources = {
    accountLoyaltySummary: 'You have not signed up for our loyalty program',
    accountLoyaltyMemberSummary: 'You have {0} points available.'
};

const mockHeading1: IHeadingData = {
    text: 'Mock heading 1',
    tag: HeadingTag.h1
};

const mockConfigWithHeadingAndLink: IAccountLoyaltyTileConfig = {
    className: 'testClassName',
    heading: mockHeading1,
    signUpLinkText: 'sign up',
    signUpLinkAriaLabel: 'sign up aria label',
    viewLinkText: 'view',
    viewLinkAriaLabel: 'view aria label',
};

const mockLoyaltyData: IAccountLoyaltyTileData = {
    loyaltyCard: wrapInResolvedAsyncResult({
        CardNumber: 'cardnumber',
        RewardPoints: [{
            ActivePoints: 10
        }]
    } as LoyaltyCard)
};

const mockLoyaltyEmptyData: IAccountLoyaltyTileData = {
    loyaltyCard: wrapInResolvedAsyncResult([{}] as LoyaltyCard)
};

describe('Account-Loyalty-Tile integration tests', () => {
    it('renders correctly', () => {
        const moduleProps: IAccountLoyaltyTileProps<IAccountLoyaltyTileData> = {
            ...(buildMockModuleProps(mockLoyaltyData, {}, mockConfigWithHeadingAndLink) as IAccountLoyaltyTileProps<IAccountLoyaltyTileData>),
            resources: mockResources,
            // @ts-ignore
            renderView: AccountLoyaltyTileView
        };

        const component = render(<AccountLoyaltyTileModule {...moduleProps} />);
        expect(component).toMatchSnapshot();
    });

    it('renders correctly with sign up link', () => {
        const moduleProps: IAccountLoyaltyTileProps<IAccountLoyaltyTileData> = {
            ...(buildMockModuleProps(mockLoyaltyEmptyData, {}, mockConfigWithHeadingAndLink) as IAccountLoyaltyTileProps<IAccountLoyaltyTileData>),
            resources: mockResources,
            // @ts-ignore
            renderView: AccountLoyaltyTileView
        };

        const component = render(<AccountLoyaltyTileModule {...moduleProps} />);
        expect(component).toMatchSnapshot();
    });
});