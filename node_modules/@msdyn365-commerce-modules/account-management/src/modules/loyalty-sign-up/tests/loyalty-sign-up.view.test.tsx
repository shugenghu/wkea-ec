/*---------------------------------------------------------------------------------------------
 *  Copyright (c) Microsoft Corporation. All rights reserved.
 *  Licensed under the MIT License. See License.txt in the project root for license information.
 *--------------------------------------------------------------------------------------------*/
import { wrapInResolvedAsyncResult } from '@msdyn365-commerce-modules/retail-actions';
import {  buildMockModuleProps } from '@msdyn365-commerce/core';
import {  LoyaltyCard } from '@msdyn365-commerce/retail-proxy';
import { render } from 'enzyme';
import * as React from 'react';
import {ILoyaltySignUpViewProps} from '../loyalty-sign-up';
import {ILoyaltySignUpData} from '../loyalty-sign-up.data';
import { ILoyaltySignUpProps } from '../loyalty-sign-up.props.autogenerated';
import LoyaltySignUpView from '../loyalty-sign-up.view';

const emptyMockData: ILoyaltySignUpData = {
    loyaltyCard: wrapInResolvedAsyncResult<LoyaltyCard>(undefined)
};
const mockData: ILoyaltySignUpData = {
    loyaltyCard: wrapInResolvedAsyncResult<LoyaltyCard>({CardNumber: 'carddd'} as LoyaltyCard)
};
let mockProps: ILoyaltySignUpViewProps;

describe('LoyaltySignUpView', () => {
    it('Does not render when loading', () => {
        const moduleProps: ILoyaltySignUpProps<{}> = buildMockModuleProps({}, {}) as ILoyaltySignUpProps<{}>;
        mockProps = {
            ...moduleProps,
            LoyaltySignUp: {
                moduleProps: moduleProps,
                className: 'foo'
            },
            loading: true,
            data: emptyMockData,
            heading: <h4>Heading</h4>,
            memberHeading: <h4>Member heading</h4>,
            signInLink: <button>Sign in</button>,
            signUpText: <p>please sign up</p>,
            signUpButton: <button>Sign up</button>,
            detailsLink: <a>link</a>,
            termsLink: <a>terms</a>
        };

        const component = render(<LoyaltySignUpView {...mockProps} />);
        expect(component).toMatchSnapshot();
    });

    it('Renders when not loading', () => {
        const moduleProps: ILoyaltySignUpProps<{}> = buildMockModuleProps({}, {}) as ILoyaltySignUpProps<{}>;
        moduleProps.context.request.user.customerAccountNumber = 'usernumber';
        moduleProps.context.request.user.isAuthenticated = true;

        mockProps = {
            ...moduleProps,
            LoyaltySignUp: {
                moduleProps: moduleProps,
                className: 'foo'
            },
            data: mockData,
            loading: false,
            heading: <h4>Heading</h4>,
            memberHeading: <h4>Member heading</h4>,
            signInLink: <button>Sign in</button>,
            signUpText: <p>please sign up</p>,
            signUpButton: <button>Sign up</button>,
            detailsLink: <a>link</a>,
            termsLink: <a>terms</a>
        };

        const component = render(<LoyaltySignUpView {...mockProps} />);
        expect(component).toMatchSnapshot();
    });
});