/*---------------------------------------------------------------------------------------------
 *  Copyright (c) Microsoft Corporation. All rights reserved.
 *  Licensed under the MIT License. See License.txt in the project root for license information.
 *--------------------------------------------------------------------------------------------*/
import * as React from 'react';

import { format, getTelemetryObject, IModuleProps, ITelemetryContent } from '@msdyn365-commerce-modules/utilities';
import * as Msdyn365 from '@msdyn365-commerce/core';
import classnames from 'classnames';
import { AccountOrganizationUsersTileDescription, AccountOrganizationUsersTileLinks } from './components';
import { IOrganizationUsersTileData } from './organization-users-tile.data';
import { IOrganizationUsersTileProps } from './organization-users-tile.props.autogenerated';

export interface IOrganizationUsersTileViewProps extends IOrganizationUsersTileProps<IOrganizationUsersTileData> {
    OrganizationUsersTile: IModuleProps;
    className: string;
    heading?: React.ReactNode;
    links?: React.ReactNode;
    description?: React.ReactNode;
}

/**
 *
 * OrganizationUsersTile component
 * @extends {React.PureComponent<IOrganizationUsersTileProps<IOrganizationUsersTileData>>}
 */
class OrganizationUsersTile extends React.PureComponent<IOrganizationUsersTileProps<IOrganizationUsersTileData>> {

    private telemetryContent?: ITelemetryContent;

    constructor(props: IOrganizationUsersTileProps<IOrganizationUsersTileData>) {
        super(props);
        this.telemetryContent = getTelemetryObject(this.props.context.request.telemetryPageName!, this.props.friendlyName, this.props.telemetry);
    }

    public render(): JSX.Element | null {
        const { config, resources, data } = this.props;
        const { className, heading, links } = config;
        const { accountOrganizationUsersTileDescription } = resources;
        const numUsers = data.users && data.users.result;

        const viewProps = {
            ...this.props,
            className: className,
            OrganizationUsersTile: {
                moduleProps: this.props,
                className: classnames('ms-account-organization-users-tile', config.className)
            },
            heading: heading && heading.text && (
                <Msdyn365.Text
                    className='ms-account-organization-users-tile__heading'
                    tag={heading.tag}
                    text={heading.text}
                    editProps = {{onEdit: this.handleHeadingChange, requestContext: this.props.context.request}}
                />
            ),
            links: links && links.length > 0 && <AccountOrganizationUsersTileLinks {...{ links: links, onTextChange: this.handleLinkTextChange, requestContext: this.props.context.request, telemetryContent: this.telemetryContent }} />,
            description: <AccountOrganizationUsersTileDescription description={format(accountOrganizationUsersTileDescription, numUsers || 0)} />
        };

        return this.props.renderView(viewProps) as React.ReactElement;
    }

    public handleHeadingChange = (event: Msdyn365.ContentEditableEvent) => {
        this.props.config.heading.text = event.target.value;
    };

    public handleLinkTextChange = (linkIndex: number) => (event: Msdyn365.ContentEditableEvent) => {
        if(this.props.config.links && this.props.config.links[linkIndex]) {
          this.props.config.links[linkIndex].linkText = event.target.value;
        }
    };
}

export default OrganizationUsersTile;
