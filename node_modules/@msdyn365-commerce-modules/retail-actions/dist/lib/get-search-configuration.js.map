{"version":3,"file":"get-search-configuration.js","sourceRoot":"","sources":["../../src/get-search-configuration.ts"],"names":[],"mappings":"AACA,OAAO,EAAE,0BAA0B,EAAwD,MAAM,yBAAyB,CAAC;AAE3H,OAAO,EAAE,aAAa,EAAE,MAAM,GAAG,CAAC;AAElC,OAAO,EAAE,2BAA2B,EAAE,MAAM,+EAA+E,CAAC;AAQ5H;;GAEG;AACH,MAAM,OAAO,wBAAwB;IAGjC,YAAY,WAAiC;QAItC,gBAAW,GAAG,GAAG,EAAE,CAAC,aAAa,CAAC,cAAc,EAAE,IAAI,CAAC,WAAW,CAAC,CAAC;QACpE,uBAAkB,GAAG,GAAG,EAAE,CAAC,qBAAqB,CAAC;QACjD,kBAAa,GAAG,GAAc,EAAE,CAAC,SAAS,CAAC;QALhD,IAAI,CAAC,WAAW,GAAG,WAAW,CAAC;IACjC,CAAC;CAKJ;AAED;;GAEG;AACH,MAAM,CAAC,MAAM,8BAA8B,GAAG,CAAC,SAA+C,EAAgB,EAAE;IAC5G,OAAO,IAAI,wBAAwB,CAAC,SAAS,CAAC,cAAc,CAAC,WAAW,CAAC,CAAC;AAC9E,CAAC,CAAC;AAEF;;GAEG;AACH,MAAM,CAAC,KAAK,UAAU,4BAA4B,CAAC,KAA+B,EAAE,GAAmB;IACnG,OAAO,2BAA2B,CAAC,EAAE,aAAa,EAAE,GAAG,EAAE,CAAC,CAAC;AAC/D,CAAC;AAED,eAAe,0BAA0B,CAAC;IACtC,EAAE,EAAE,qEAAqE;IACzE,MAAM,EAAgC,4BAA4B;IAClE,KAAK,EAAE,8BAA8B;CACxC,CAAC,CAAC","sourcesContent":["import { CacheType, IAction, IActionInput, ICommerceApiSettings } from '@msdyn365-commerce/core';\nimport { createObservableDataAction, IActionContext, IAny, ICreateActionContext, IGeneric } from '@msdyn365-commerce/core';\nimport { SortColumn } from '@msdyn365-commerce/retail-proxy';\nimport { buildCacheKey } from '.';\n\nimport { getSearchConfigurationAsync } from '@msdyn365-commerce/retail-proxy/dist/DataActions/StoreOperationsDataActions.g';\n\n// TODO: import from commerce entities when available\n// tslint:disable-next-line:interface-name\ninterface SearchConfiguration {\n    ProductSortColumns?: SortColumn[];\n}\n\n/**\n * Action Input class for the getSearchConfiguration data action\n */\nexport class SearchConfigurationInput implements IActionInput {\n    private apiSettings: ICommerceApiSettings;\n\n    constructor(apiSettings: ICommerceApiSettings) {\n      this.apiSettings = apiSettings;\n    }\n\n    public getCacheKey = () => buildCacheKey('SearchConfig', this.apiSettings);\n    public getCacheObjectType = () => 'SearchConfiguration';\n    public dataCacheType = (): CacheType => 'request';\n}\n\n/**\n * Creates the input required to make the retail api call\n */\nexport const createSearchConfigurationInput = (inputData: ICreateActionContext<IGeneric<IAny>>): IActionInput => {\n    return new SearchConfigurationInput(inputData.requestContext.apiSettings);\n};\n\n/**\n * Calls the Retail API\n */\nexport async function getSearchConfigurationAction(input: SearchConfigurationInput, ctx: IActionContext): Promise<SearchConfiguration> {\n    return getSearchConfigurationAsync({ callerContext: ctx });\n}\n\nexport default createObservableDataAction({\n    id: '@msdyn365-commerce-modules/retail-actions/get-search-configurations',\n    action: <IAction<SearchConfiguration>>getSearchConfigurationAction,\n    input: createSearchConfigurationInput\n});\n"]}