import { createObservableDataAction } from '@msdyn365-commerce/core';
import { getCustomerBalanceAsync } from '@msdyn365-commerce/retail-proxy/dist/DataActions/StoreOperationsDataActions.g';
import getCustomer, { GetCustomerInput } from './get-customer';
import { buildCacheKey } from './index';
/**
 *  Input class for the GetCustomerBalance data action
 */
export class GetCustomerBalanceInput {
    constructor(apiSettings, customerAccountNumber) {
        this.getCacheKey = () => buildCacheKey(`CustomerBalance-${this.customerAccountNumber}`, this.apiSettings);
        this.getCacheObjectType = () => 'GetCustomerBalance';
        this.dataCacheType = () => 'request';
        this.customerAccountNumber = customerAccountNumber;
        this.apiSettings = apiSettings;
    }
}
/**
 * createInput method for the GetCustomerBalance method
 * @param inputData The input data passed to the createInput method
 */
export const createGetCustomerBalanceInput = (inputData) => {
    const { requestContext } = inputData;
    if (!requestContext.user.isAuthenticated) {
        throw new Error('Unable to create get customer balance input. User is not authenticated.');
    }
    return new GetCustomerBalanceInput(requestContext.apiSettings);
};
/**
 * The action method for the GetCustomerBalance data action
 * @param input The action input
 * @param ctx The action context
 */
export async function getCustomerBalanceAction(input, ctx) {
    const customerInput = new GetCustomerInput(input.apiSettings, input.customerAccountNumber);
    const customer = await getCustomer(customerInput, ctx);
    if (!customer) {
        ctx.telemetry.error('Not able to get customer', new Error('Not able to get customer'));
    }
    return getCustomerBalanceAsync({
        callerContext: ctx,
        queryResultSettings: {}
    }, customer.AccountNumber, customer.InvoiceAccount);
}
/**
 * The GetCustomerBalance data action
 * Returns the customer's balance
 */
export default createObservableDataAction({
    id: '@msdyn365-commerce-modules/retail-actions/get-customer-balance',
    action: getCustomerBalanceAction,
    input: createGetCustomerBalanceInput
});
//# sourceMappingURL=get-customer-balance.js.map