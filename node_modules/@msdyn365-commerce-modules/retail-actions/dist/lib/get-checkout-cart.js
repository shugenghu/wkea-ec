import { msdyn365Commerce } from '@msdyn365-commerce/core';
import { createObservableDataAction } from '@msdyn365-commerce/core';
import Cookie from 'js-cookie';
import { copyAsync } from '@msdyn365-commerce/retail-proxy/dist/DataActions/CartsDataActions.g';
import { buildCacheKey } from './utilities/utils';
import { getCartState } from '@msdyn365-commerce/global-state';
/**
 * Input class for getCheckoutCart data action
 */
export class GetCheckoutCartInput {
    constructor(apiSettings) {
        this.getCacheKey = () => buildCacheKey(`ActiveCheckoutCart`, this.apiSettings);
        this.getCacheObjectType = () => 'ActiveCheckoutCart';
        this.dataCacheType = () => 'request';
        this.apiSettings = apiSettings;
    }
}
const createInput = (inputData) => {
    return new GetCheckoutCartInput(inputData.requestContext.apiSettings);
};
// @ts-ignore
const CartCookieName = msdyn365Commerce.CartCookie || 'cart';
/**
 * Data action to copy the cart for checkout actions
 */
export async function getCheckoutCart(input, ctx) {
    const cartId = Cookie.get(CartCookieName) || '';
    if (cartId) {
        const currentCartState = await getCartState(ctx);
        const activeCart = currentCartState.cart;
        // check if there is an active cart and it isn't empty
        if (activeCart && Object.keys(activeCart).length > 0) {
            const checkoutCart = await copyAsync({ callerContext: ctx }, activeCart.Id, 2);
            if (checkoutCart) {
                return Array.isArray(checkoutCart) ? checkoutCart[0] : checkoutCart;
            }
        }
        else {
            ctx.trace(`[get-checkout-cart] Can't create a checkout cart since active cart is empty`);
        }
    }
    return {};
}
export default createObservableDataAction({
    id: '@msdyn365-commerce-modules/retail-actions/get-checkout-cart',
    action: getCheckoutCart,
    input: createInput
});
//# sourceMappingURL=get-checkout-cart.js.map