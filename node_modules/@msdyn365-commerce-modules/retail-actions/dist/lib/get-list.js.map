{"version":3,"file":"get-list.js","sourceRoot":"","sources":["../../src/get-list.ts"],"names":[],"mappings":"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","sourcesContent":["import { Image, ISubList, List } from '@msdyn365-commerce-modules/data-types';\nimport { IAction, IActionContext, IActionInput } from '@msdyn365-commerce/core';\nimport { createObservableDataAction, IAny, ICreateActionContext, IGeneric } from '@msdyn365-commerce/core';\nimport { SimpleProduct } from '@msdyn365-commerce/retail-proxy';\n\nimport GetProducts, { ProductInput } from './get-simple-products';\n\n/**\n * List Input action\n */\nexport class ListInput implements IActionInput {\n    public DocumentId: string;\n    public Title: string;\n    public Description: string;\n    public ShortDescription: string;\n    public BackgroundColor: string;\n    public ForegroundColor: string;\n    public Images: Image[];\n    public Items: (IProductItem[] | ISubList)[];\n    public ProductItems: IProductItem[];\n    public ItemsCount: number;\n    public ItemsPerPage: number;\n    public SkipCount: number;\n\n    constructor(\n        documentId: string,\n        title: string,\n        description: string,\n        shortDescription: string,\n        backgroundColor: string,\n        foregroundColor: string,\n        images: Image[],\n        items: (IProductItem[] | ISubList)[],\n        productItems: IProductItem[],\n        itemsCount: number,\n        itemsPerPage: number,\n        skipCount: number\n    ) {\n        this.DocumentId = documentId;\n        this.Title = title;\n        this.Description = description;\n        this.ShortDescription = shortDescription;\n        this.BackgroundColor = backgroundColor;\n        this.ForegroundColor = foregroundColor;\n        this.Images = images;\n        this.Items = items;\n        this.ProductItems = productItems;\n        this.ItemsCount = itemsCount;\n        this.ItemsPerPage = itemsPerPage;\n        this.SkipCount = skipCount;\n    }\n\n    public shouldCacheOutput = () => true;\n    public getCacheObjectType = () => 'LIST';\n    public getCacheKey = () => `${this.DocumentId}-${this.ItemsCount}-${this.ItemsPerPage}-${this.SkipCount}`;\n}\n\nexport interface IProductItem {\n    RecordId: string;\n    CatalogId: string;\n}\n\n/**\n * List item type enum\n */\nconst enum ListItemType {\n    list = 'list',\n    product = 'product'\n}\n\n/**\n * Calls to getSimpleProducts to get product array by ID's in list.\n */\nexport async function getListData(input: ListInput, ctx: IActionContext): Promise<List> {\n    ctx.trace(`List Title: ${input.Title}`);\n\n    // @ts-ignore\n    const { apiSettings } = ctx.requestContext;\n\n    const sublists: (SimpleProduct | ISubList)[] = [];\n    const result: List = {\n        Title: input.Title,\n        Description: input.Description,\n        ShortDescription: input.ShortDescription,\n        BackgroundColor: input.BackgroundColor,\n        ForegroundColor: input.ForegroundColor,\n        Items: sublists,\n        ItemsCount: input.ItemsCount\n    };\n\n    if (input && input.Items && input.Items.length) {\n        // get all products\n        let products: SimpleProduct[] = [];\n        if (input.ProductItems && input.ProductItems.length) {\n            const inputArray = input.ProductItems.map(item => new ProductInput(+item.RecordId, apiSettings));\n            products = <SimpleProduct[]>await GetProducts(inputArray, ctx);\n        }\n\n        // build map from recordId to product, which will be used later when build the output.\n        const productMap: { [recordId: string]: SimpleProduct } = {};\n        products.forEach(item => {\n            if (item) {\n                productMap[`${item.RecordId}`] = item;\n            }\n        });\n\n        for (const listitem of input.Items) {\n            if (isSublist(listitem)) {\n                result.Items.push(listitem);\n            } else {\n                listitem.forEach(item => {\n                    if (productMap[item.RecordId]) {\n                        result.Items.push(productMap[item.RecordId]);\n                    }\n                });\n            }\n        }\n    }\n\n    return result;\n}\n\n/**\n * Check if an item is sublist.\n */\nfunction isSublist(listItem: IProductItem[] | ISubList): listItem is ISubList {\n    return (<ISubList>listItem).Images !== undefined;\n}\n\n/**\n * Get images.\n */\nfunction getImages(images: IGeneric<IAny>[]): Image[] {\n    const resultImageList: Image[] = [];\n\n    if (!images) {\n        return resultImageList;\n    }\n\n    images.forEach(item => {\n        if (item && item.image && item.image.href) {\n            // add image item\n            const imageItem: Image = {\n                href: item.image.href,\n                altText: item.image.altText,\n                title: item.image.title,\n                width: item.image.width,\n                height: item.image.height\n            };\n\n            resultImageList.push(imageItem);\n        }\n    });\n\n    return resultImageList;\n}\n\n/**\n * Get the url of sub list.\n */\nfunction getSubListUrl(listName: string, sitePath: string): string {\n    if (!listName) {\n        return '';\n    }\n\n    if(!sitePath) {\n        return `/${listName}.l`;\n    }\n\n    // sitePath has a leading '/'\n    return `${sitePath}/${listName}.l`;\n}\n\n/**\n * Get input list data.\n */\nfunction getInutListData(inputData: ICreateActionContext<IGeneric<IAny>, IGeneric<IAny>>): IGeneric<IAny> {\n    let listData =\n        !inputData || !inputData.requestContext || !inputData.requestContext.pageData ? null : inputData.requestContext.pageData.list;\n    if (\n        !inputData ||\n        !inputData.requestContext ||\n        !inputData.requestContext.pageData ||\n        !inputData.requestContext.pageData.list ||\n        !inputData.requestContext.pageData.list.content ||\n        !inputData.requestContext.pageData.list.content.items ||\n        !inputData.requestContext.pageData.list.content.title ||\n        !inputData.requestContext.pageData.list._id\n    ) {\n        if (\n            !inputData ||\n            !inputData.data ||\n            !inputData.data.list ||\n            !inputData.data.list.content ||\n            !inputData.data.list.content.items ||\n            !inputData.data.list.content.title ||\n            !inputData.data.list._id\n        ) {\n            console.error('data is not well defined for list action input');\n            throw new Error('data is not well defined for list action input');\n        }\n\n        listData = inputData.data.list;\n    }\n    return listData;\n}\n\n/**\n * Get sub list item.\n */\nfunction getSubListItem(item: IGeneric<IAny>, sitePathOfRequest: string): ISubList {\n    const imageList: Image[] = getImages(item.fields.content.images);\n\n    const sublistHref = getSubListUrl(item.fields._name, sitePathOfRequest);\n    return {\n        Title: item.fields.content.title,\n        Description: item.fields.content.description,\n        ShortDescription: item.fields.content.shortDescription,\n        BackgroundColor: item.fields.content.backgroundColor,\n        ForegroundColor: item.fields.content.foregroundColor,\n        Href: sublistHref,\n        Images: imageList\n    };\n}\n\n/**\n * Get site path\n */\nfunction getSitePath(inputData: ICreateActionContext<IGeneric<IAny>, IGeneric<IAny>>): string {\n    // @ts-ignore\n    return inputData && inputData.requestContext && inputData.requestContext.sitePath ? inputData.requestContext.sitePath : '';\n}\n\n/**\n * Get items per page\n */\nfunction getItemsPerPage(inputData: ICreateActionContext<IGeneric<IAny>, IGeneric<IAny>>): number {\n    if (!inputData || !inputData.config || !inputData.config.itemsPerPage) {\n        return 50;\n    }\n\n    const result = Number(inputData.config.itemsPerPage);\n    if (isNaN(result)) {\n        return 50;\n    }\n\n    return result;\n}\n\n/**\n * Get skip count\n */\nfunction getSkipCount(inputData: ICreateActionContext<IGeneric<IAny>, IGeneric<IAny>>): number {\n    return inputData && inputData.requestContext && inputData.requestContext.query && inputData.requestContext.query.skipCount\n        ? Number(inputData.requestContext.query.skipCount)\n        : 0;\n}\n\n/**\n * Creates the input required to make the list call to get products.\n */\nconst createListInput = (inputData: ICreateActionContext<IGeneric<IAny>, IGeneric<IAny>>): IActionInput => {\n    const listData: IGeneric<IAny> = getInutListData(inputData);\n    const listItems: (IProductItem[] | ISubList)[] = [];\n    let productList: IProductItem[] = [];\n\n    const parentImageList: Image[] = getImages(listData.content.images);\n\n    const itemsPerPage = getItemsPerPage(inputData);\n    const skipCount = getSkipCount(inputData);\n\n    // This is the list contains all product and will be used to call getSimpleProducts data action.\n    const productItems: IProductItem[] = [];\n    const sum = skipCount + itemsPerPage;\n    for (let index = skipCount; index < listData.content.items.length && index < sum; index++) {\n        const item = listData.content.items[index];\n        if (item.type === ListItemType.list) {\n            if (!item.fields || !item.fields.content || !item.fields.content.title) {\n                console.error(`sublist item fields, content or title missing in list ${listData._id}`);\n                continue;\n            }\n\n            // if any elements in product list, then copy it and add to list items\n            if (!(productList.length === 0)) {\n                const clonedList = [...productList];\n                listItems.push(clonedList);\n                productList = [];\n            }\n\n            // build and add sublist item\n            listItems.push(getSubListItem(item, getSitePath(inputData)));\n        }\n\n        if (item.type === ListItemType.product) {\n            if (!item.fields || !item.fields.recordId) {\n                console.error(`product item missing recordId in list ${listData._id}`);\n                continue;\n            }\n\n            // add product item\n            const productItem: IProductItem = {\n                RecordId: item.fields.recordId,\n                CatalogId: item.fields.catalogId || '0'\n            };\n\n            productList.push(productItem);\n            productItems.push(productItem);\n        }\n    }\n\n    // save the last portion of product items.\n    if (!(productList.length === 0)) {\n        listItems.push(productList);\n    }\n\n    return new ListInput(\n        listData._id,\n        listData.content.title,\n        listData.content.description,\n        listData.content.shortDescription,\n        listData.content.backgroundColor,\n        listData.content.foregroundColor,\n        parentImageList,\n        listItems,\n        productItems,\n        listData.content.items.length,\n        itemsPerPage,\n        skipCount\n    );\n};\n\nexport default createObservableDataAction({\n    id: '@msdyn365-commerce-modules/retail-actions/get-list',\n    action: <IAction<List>>getListData,\n    input: createListInput\n});\n"]}