import { createObservableDataAction } from '@msdyn365-commerce/core';
import { createAddressManagementInput, doAddressManagementOperation } from './add-address';
// TODO: Centralize this logic in a common utility area
export function updateAddressHandler(customer, address) {
    customer.Addresses = customer.Addresses || [];
    if (address.IsPrimary) {
        customer.Addresses.forEach(cur => cur.IsPrimary = false);
    }
    customer.Addresses = [...customer.Addresses.filter(cur => cur.RecordId !== address.RecordId), address];
    return customer;
}
export async function updateAddressAction(input, ctx) {
    return doAddressManagementOperation(input, ctx, updateAddressHandler);
}
/**
 * The updateAddress data action
 * Calls the read RetailServer API to get information about a customer
 * Merge the passed address information with the address information from
 * the retireved customer, and then updates that customer via the update RetailServer API.
 */
export default createObservableDataAction({
    id: '@msdyn365-commerce-modules/retail-actions/update-address',
    action: updateAddressAction,
    input: createAddressManagementInput
});
//# sourceMappingURL=update-address.js.map