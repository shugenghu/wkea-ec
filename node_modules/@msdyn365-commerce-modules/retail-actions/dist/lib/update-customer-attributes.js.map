{"version":3,"file":"update-customer-attributes.js","sourceRoot":"","sources":["../../src/update-customer-attributes.ts"],"names":[],"mappings":"AAAA,OAAO,EACQ,0BAA0B,EAExC,MAAM,yBAAyB,CAAC;AAEjC,OAAO,EACH,SAAS,EAAE,WAAW,EACzB,MAAM,yEAAyE,CAAC;AAEjF,OAAO,EAAE,gBAAgB,EAAE,MAAM,gBAAgB,CAAC;AAClD,OAAO,EAAE,aAAa,EAAE,MAAM,SAAS,CAAC;AAUxC;;GAEG;AACH,MAAM,OAAO,6BAA6B;IAOtC,YAAY,iBAAyB,EAAE,kBAAuC,EAAE,WAAiC,EAAE,KAAc,EAAE,SAAkB;QAQ9I,gBAAW,GAAG,GAAW,EAAE,CAAC,aAAa,CAAC,GAAG,IAAI,CAAC,iBAAiB,EAAE,EAAE,IAAI,CAAC,WAAW,CAAC,CAAC;QACzF,uBAAkB,GAAG,GAAG,EAAE,CAAC,UAAU,CAAC;QACtC,kBAAa,GAAG,GAAc,EAAE,CAAC,MAAM,CAAC;QAT3C,IAAI,CAAC,iBAAiB,GAAG,iBAAiB,CAAC;QAC3C,IAAI,CAAC,WAAW,GAAG,WAAW,CAAC;QAC/B,IAAI,CAAC,kBAAkB,GAAG,kBAAkB,CAAC;QAC7C,IAAI,CAAC,KAAK,GAAG,KAAK,CAAC;QACnB,IAAI,CAAC,SAAS,GAAG,SAAS,CAAC;IAC/B,CAAC;CAKJ;AAED;;;;GAIG;AACH,MAAM,CAAC,KAAK,UAAU,8BAA8B,CAAC,KAAqC,EAAE,GAAmB;IAC3G,MAAM,EAAE,kBAAkB,EAAE,KAAK,EAAE,SAAS,EAAE,iBAAiB,EAAE,GAAG,KAAK,CAAC;IAE1E,MAAM,QAAQ,GAAG,MAAM,SAAS,CAAC,EAAE,aAAa,EAAE,GAAG,EAAE,EAAE,iBAAiB,CAAC,CAAC;IAE5E,IAAI,CAAC,QAAQ,EAAE;QACX,GAAG,CAAC,SAAS,CAAC,KAAK,CAAC,sDAAsD,CAAC,CAAC;QAC5E,MAAM,IAAI,KAAK,CAAC,yBAAyB,CAAC,CAAC;KAC9C;IAED,MAAM,WAAW,GAAG,EAAE,GAAG,QAAQ,EAAE,CAAC;IACpC,WAAW,CAAC,KAAK,GAAG,KAAK,CAAC;IAC1B,WAAW,CAAC,SAAS,GAAG,SAAS,CAAC;IAClC,WAAW,CAAC,UAAU,GAAG,kBAAkB,CAAC;IAE5C,MAAM,eAAe,GAAG,MAAM,WAAW,CAAC,EAAE,aAAa,EAAE,GAAG,EAAE,EAAE,WAAW,CAAC,CAAC;IAE/E,IAAI,CAAC,eAAe,EAAE;QAClB,GAAG,CAAC,SAAS,CAAC,KAAK,CAAC,mEAAmE,CAAC,CAAC;QACzF,MAAM,IAAI,KAAK,CAAC,sCAAsC,CAAC,CAAC;KAC3D;IAED,GAAG,CAAC,MAAM,CAAC,IAAI,gBAAgB,CAAC,GAAG,CAAC,cAAc,CAAC,WAAW,CAAC,EAAE,eAAe,CAAC,CAAC;IAElF,OAAO,eAAe,CAAC;AAC3B,CAAC;AAED;;;GAGG;AACH,eAAe,0BAA0B,CAAW;IAChD,EAAE,EAAE,sEAAsE;IAC1E,MAAM,EAAqB,8BAA8B;CAC5D,CAAC,CAAC","sourcesContent":["import {\n    CacheType, createObservableDataAction, IAction, IActionContext, IActionInput,\n    ICommerceApiSettings\n} from '@msdyn365-commerce/core';\nimport { Customer, CustomerAttribute } from '@msdyn365-commerce/retail-proxy';\nimport {\n    readAsync, updateAsync\n} from '@msdyn365-commerce/retail-proxy/dist/DataActions/CustomersDataActions.g';\n\nimport { GetCustomerInput } from './get-customer';\nimport { buildCacheKey } from './index';\n\nexport interface IUpdateCustomerAttributesInput extends IActionInput {\n    phone?: string,\n    vatNumber?: string;\n    customerAttributes: CustomerAttribute[];\n    userAccountNumber: string;\n    apiSettings: ICommerceApiSettings;\n}\n\n/**\n *  Input class for the updateCustomerAttributes\n */\nexport class updateCustomerAttributesInput implements IUpdateCustomerAttributesInput {\n    public userAccountNumber: string;\n    public customerAttributes: CustomerAttribute[];\n    public apiSettings: ICommerceApiSettings;\n    public phone?: string;\n    public vatNumber?: string;\n\n    constructor(userAccountNumber: string, customerAttributes: CustomerAttribute[], apiSettings: ICommerceApiSettings, phone?: string, vatNumber?: string) {\n        this.userAccountNumber = userAccountNumber;\n        this.apiSettings = apiSettings;\n        this.customerAttributes = customerAttributes;\n        this.phone = phone;\n        this.vatNumber = vatNumber;\n    }\n\n    public getCacheKey = (): string => buildCacheKey(`${this.userAccountNumber}`, this.apiSettings);\n    public getCacheObjectType = () => 'Customer';\n    public dataCacheType = (): CacheType => 'none';\n}\n\n/**\n * The action method for the updateCustomerAttributes data action\n * @param input The action input\n * @param ctx The action context\n */\nexport async function updateCustomerAttributesAction(input: IUpdateCustomerAttributesInput, ctx: IActionContext): Promise<Customer> {\n    const { customerAttributes, phone, vatNumber, userAccountNumber } = input;\n\n    const customer = await readAsync({ callerContext: ctx }, userAccountNumber);\n\n    if (!customer) {\n        ctx.telemetry.debug('[update-customer-attributes] Unable to find customer');\n        throw new Error('Unable to find customer');\n    }\n\n    const newCustomer = { ...customer };\n    newCustomer.Phone = phone;\n    newCustomer.VatNumber = vatNumber;\n    newCustomer.Attributes = customerAttributes;\n\n    const updatedCustomer = await updateAsync({ callerContext: ctx }, newCustomer);\n\n    if (!updatedCustomer) {\n        ctx.telemetry.debug('[update-customer-attributes] Unable to update customer attributes');\n        throw new Error('Unable to update customer attributes');\n    }\n\n    ctx.update(new GetCustomerInput(ctx.requestContext.apiSettings), updatedCustomer);\n\n    return updatedCustomer;\n}\n\n/**\n * The updateCustomerAttributes data action\n * Returns the updated customer\n */\nexport default createObservableDataAction<Customer>({\n    id: '@msdyn365-commerce-modules/retail-actions/update-customer-attributes',\n    action: <IAction<Customer>>updateCustomerAttributesAction\n});"]}