import { createObservableDataAction } from '@msdyn365-commerce/core';
import { getAttributeDefinitionsAsync } from '@msdyn365-commerce/retail-proxy/dist/DataActions/StoreOperationsDataActions.g';
import { buildCacheKey } from './utilities/utils';
/**
 * Input class for get attribute definitions data action
 */
export class GetAttributeDefinitionsInput {
    constructor(apiSettings, attributeDefinitionCriteria) {
        this.getCacheKey = () => buildCacheKey('AttributeDefinitions', this.apiSettings);
        this.getCacheObjectType = () => 'CustomerAttribute';
        this.dataCacheType = () => 'request';
        this.attributeDefinitionCriteria = attributeDefinitionCriteria;
        this.apiSettings = apiSettings;
    }
}
/**
 * Creates the input required to make the retail api call
 */
const createInput = (inputData) => {
    const { apiSettings, channel } = inputData.requestContext;
    if (!channel || !channel.CustomerAttributeGroupId) {
        throw new Error('[getAttributeDefinitions][createInput]: Customer attribute group id is not found.');
    }
    return new GetAttributeDefinitionsInput(apiSettings, { AttributeGroupIdentifier: channel.CustomerAttributeGroupId });
};
const getAttributeDefinitionsAction = async (input, ctx) => {
    if (input && ctx.requestContext.channel && ctx.requestContext.channel.CustomerAttributeGroupId) {
        return getAttributeDefinitionsAsync({ callerContext: ctx }, input.attributeDefinitionCriteria || null).then(response => {
            return response;
        });
    }
    ctx.trace('[getAttributeDefinitions]Invalid input passed to action');
    return [];
};
export default createObservableDataAction({
    id: '@msdyn365-commerce-modules/retail-actions/get-custom-attributes',
    action: getAttributeDefinitionsAction,
    input: createInput
});
//# sourceMappingURL=get-attribute-definitions.js.map