{"version":3,"file":"get-delivery-options-for-selected-variant.js","sourceRoot":"","sources":["../../src/get-delivery-options-for-selected-variant.ts"],"names":[],"mappings":"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","sourcesContent":["import { CacheType, createObservableDataAction, IAction, IActionContext, IActionInput, IAny, ICreateActionContext, IGeneric } from '@msdyn365-commerce/core';\nimport { ProductDeliveryOptions, SimpleProduct } from '@msdyn365-commerce/retail-proxy/dist/Entities/CommerceTypes.g';\n\nimport { getDeliveryOptionsAsync } from '@msdyn365-commerce/retail-proxy/dist/DataActions/ProductsDataActions.g';\nimport { getSelectedProductIdFromActionInput, getSelectedVariant, SelectedVariantInput } from './index';\n\n/**\n * Input class for the GetDeliveryOptionsForSelectedVariant Data Action\n */\nexport class GetDeliveryOptionsForSelectedVariantInput implements IActionInput {\n    public productId: number;\n    public channelId: number;\n    public selectedProduct: SimpleProduct | undefined;\n    public customerId: string;\n\n    constructor(productId: number, channelId: number, selectedProduct?: SimpleProduct, customerId?: string) {\n        this.productId = productId;\n        this.channelId = channelId;\n        this.selectedProduct = selectedProduct;\n        this.customerId = customerId || '';\n    }\n\n    public getCacheKey = () => `DeliveryOptionsForSelectedVariant`;\n    public getCacheObjectType = () => 'DeliveryOptions';\n    public dataCacheType = (): CacheType => 'none';\n}\n\n/**\n * The createInput method for the GetDeliveryOptionsForSelectedVariant Data Action\n * @param inputData The input data for the createInput method\n */\nexport const createDeliveryOptionsForSelectedVariantInput = (inputData: ICreateActionContext<IGeneric<IAny>>): GetDeliveryOptionsForSelectedVariantInput => {\n    const productId = getSelectedProductIdFromActionInput(inputData);\n\n    if (productId) {\n        return new GetDeliveryOptionsForSelectedVariantInput(\n            +productId,\n            +inputData.requestContext.apiSettings.channelId,\n            undefined\n            );\n    } else {\n        throw new Error('Unable to create PriceForSelectedVariantInput, no productId found on module config or query');\n    }\n};\n\n/**\n * The Action Method for the GetDeliveryOptionsForSelectedVariant Data Action\n * Pulls the currently selected variant from the cache using the getSelectedVariant data action, and gets it's supported delivery options\n * via the getDeliveryOptionsAsync RetailServer API\n */\nexport async function getDeliveryOptionsForSelectedVariantAction(\n    input: GetDeliveryOptionsForSelectedVariantInput,\n    ctx: IActionContext\n): Promise<ProductDeliveryOptions | undefined> {\n    return Promise.resolve()\n        // @ts-ignore: Promise vs. ObservablePromise typing conflict\n        .then(() => {\n            const activeProduct: SimpleProduct | undefined = input.selectedProduct;\n\n            if (!activeProduct) {\n                const selectedVariantInput = new SelectedVariantInput(input.productId, input.channelId);\n\n                return getSelectedVariant(selectedVariantInput, ctx);\n            }\n\n            return activeProduct;\n        })\n        .then((productResult: SimpleProduct | null) => {\n            const activeProduct: SimpleProduct | undefined = <SimpleProduct | undefined>productResult;\n\n            if (activeProduct) {\n                return getDeliveryOptionsAsync(\n                    { callerContext: ctx, queryResultSettings: {} },\n                    [activeProduct.RecordId],\n                    {},\n                    null\n                ).then(response => {\n                    if(response && response.length > 0) {\n                        return response[0];\n                    }\n\n                    return undefined;\n                });\n            }\n\n            return undefined;\n        })\n        .catch((error: Error) => {\n            ctx.trace(error.message);\n            ctx.telemetry.exception(error);\n            ctx.telemetry.debug(`[getDeliveryOptionsForSelectedVariantAction]Error executing action`);\n            throw new Error('[getDeliveryOptionsForSelectedVariantAction]Error executing action');\n        });\n}\n\nexport default createObservableDataAction({\n    id: '@msdyn365-commerce-modules/retail-actions/get-delivery-options-for-selected-variant',\n    action: <IAction<ProductDeliveryOptions | undefined>>getDeliveryOptionsForSelectedVariantAction,\n    input: createDeliveryOptionsForSelectedVariantInput\n});\n"]}