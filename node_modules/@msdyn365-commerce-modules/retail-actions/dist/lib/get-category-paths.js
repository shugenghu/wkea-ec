import { getCategoriesUrlSync } from '@msdyn365-commerce/core';
import { createObservableDataAction } from '@msdyn365-commerce/core';
import { getCategoryPathsAsync } from '@msdyn365-commerce/retail-proxy/dist/DataActions/ProductsDataActions.g';
import { getSelectedProductIdFromActionInput, buildCacheKey } from './utilities/utils';
/**
 * Category path input
 */
export class GetCategoryPathsInput {
    constructor(context, categoryPathLooksups) {
        this.getCacheKey = () => buildCacheKey(this.constructedCacheKey, this.apiSettings);
        this.getCacheObjectType = () => 'CategoryPath';
        this.dataCacheType = () => 'request';
        this.ChannelId = context.apiSettings.channelId;
        this.CatalogId = context.apiSettings.catalogId | 0;
        this.categoryPathLooksups = categoryPathLooksups;
        this.apiSettings = context.apiSettings;
        this.constructedCacheKey = ``;
        categoryPathLooksups.forEach(categoryPath => {
            this.constructedCacheKey += `${categoryPath.ProductId && categoryPath.ProductId.toString()}|`;
        });
        this.constructedCacheKey += `${this.ChannelId.toString()}|`;
        this.constructedCacheKey += `${this.CatalogId.toString()}|`;
    }
    ;
}
/**
 * Creates the input required to make the getCategoryPath retail api call
 */
export const createGetCategoryPathsInput = (inputData) => {
    const productId = getSelectedProductIdFromActionInput(inputData);
    if (productId) {
        return new GetCategoryPathsInput(inputData.requestContext, [{ ProductId: +productId }]);
    }
    else {
        throw new Error('Unable to create SelectedVariantInput, no productId found on module config or query');
    }
};
/**
 * Calls the Retail API and returns the category path for a product
 */
export async function getCategoryPathsAction(input, ctx) {
    const categoryPathResults = await getCategoryPathsAsync({ callerContext: ctx }, input.ChannelId, input.CatalogId, input.categoryPathLooksups);
    const categoryPath = categoryPathResults[0].CategoryPath && categoryPathResults[0].CategoryPath[0];
    const categoryUrl = getCategoriesUrlSync(categoryPath, ctx);
    if (categoryUrl) {
        return categoryUrl;
    }
    return [];
}
export default createObservableDataAction({
    id: '@msdyn365-commerce-modules/retail-actions/get-category-paths',
    action: getCategoryPathsAction,
    input: createGetCategoryPathsInput,
});
//# sourceMappingURL=get-category-paths.js.map