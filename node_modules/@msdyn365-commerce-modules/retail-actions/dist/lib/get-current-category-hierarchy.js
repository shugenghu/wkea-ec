import { createObservableDataAction } from '@msdyn365-commerce/core';
import getCategoriesHierarchy, { CategoriesInput } from './get-categories-hierarchy';
/**
 * Action Input Class for get-current-category-hierarchy
 */
export class CurrentCategoryHierarchyInput extends CategoriesInput {
    constructor(context, mappedToHierarchy, maxItems, activeCategoryId) {
        super(context, mappedToHierarchy, maxItems);
        // @ts-ignore: Overriding cache object type
        this.getCacheObjectType = () => 'CurrentCategoryHierarchy';
        this.getCacheKey = () => `${this.activeCategoryId}-${this.channelId}`;
        this.activeCategoryId = activeCategoryId || 0;
    }
}
/**
 * Creates the input required for the data action
 */
export const createCategoriesHierarchyInput = (inputData) => {
    const topItems = inputData.config && inputData.config.topCategories && parseInt(inputData.config.topCategories, 10);
    const activeCategoryId = (inputData.requestContext.urlTokens && inputData.requestContext.urlTokens.pageType === 'Category' && inputData.requestContext.urlTokens.itemId) ||
        (inputData.requestContext.query && inputData.requestContext.query.categoryId) ||
        0;
    return new CurrentCategoryHierarchyInput(inputData.requestContext, true, topItems, +activeCategoryId);
};
/**
 * Get the hierarchy of categories that are currently active as a parent -> child array.
 * Return will be as follows: [ParentCategory, Child, SubChild, SubSubChild]
 */
export async function getCurrentCategoryHierarchyAction(input, ctx) {
    const fullCategoryHierarchy = await getCategoriesHierarchy(new CategoriesInput(ctx.requestContext, true, input.maxItems), ctx);
    const categoryArray = [];
    const findCategory = (category) => {
        if (category.RecordId === input.activeCategoryId) {
            categoryArray.push(category);
            return true;
        }
        else if (category.Children && category.Children.length) {
            category.Children.forEach((childCategory) => {
                if (findCategory(childCategory)) {
                    categoryArray.push(category);
                }
            });
        }
        else {
            return false;
        }
    };
    fullCategoryHierarchy.forEach((categoryHierarchy) => {
        findCategory(categoryHierarchy);
    });
    return categoryArray.reverse();
}
export default createObservableDataAction({
    id: '@msdyn365-commerce-modules/retail-actions/get-current-category-hierarchy',
    action: getCurrentCategoryHierarchyAction,
    input: createCategoriesHierarchyInput
});
//# sourceMappingURL=get-current-category-hierarchy.js.map