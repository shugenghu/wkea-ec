import { createObservableDataAction } from '@msdyn365-commerce/core';
import { readAsync, updateAsync } from '@msdyn365-commerce/retail-proxy/dist/DataActions/CustomersDataActions.g';
import { GetCustomerInput } from './get-customer';
import { buildCacheKey } from './index';
/**
 *  Input class for the updateCustomerPersonalization
 */
export class updateCustomerPersonalizationInput {
    constructor(userAccountNumber, isOptOut, apiSettings, preferenceType) {
        this.getCacheKey = () => buildCacheKey(`${this.userAccountNumber}`, this.apiSettings);
        this.getCacheObjectType = () => 'Customer';
        this.dataCacheType = () => 'none';
        this.userAccountNumber = userAccountNumber;
        this.apiSettings = apiSettings;
        this.isOptOut = isOptOut;
        this.preferenceType = preferenceType;
    }
}
/**
 * The action method for the updateCustomerPersonalization data action
 * @param input The action input
 * @param ctx The action context
 */
export async function updateCustomerPersonalizationAction(input, ctx) {
    const { userAccountNumber, isOptOut, preferenceType } = input;
    const customer = await readAsync({ callerContext: ctx }, userAccountNumber);
    if (!customer) {
        throw new Error('Unable to find customer');
    }
    const newCustomer = { ...customer };
    switch (preferenceType) {
        case 'web-tracking':
            newCustomer.OptOutWebActivityTracking = isOptOut;
            break;
        case undefined:
        case 'personalization':
        default:
            newCustomer.OptOutPersonalization = isOptOut;
    }
    const updatedCustomer = await updateAsync({ callerContext: ctx }, newCustomer);
    if (!updatedCustomer) {
        throw new Error('Unable to update customer');
    }
    ctx.update(new GetCustomerInput(ctx.requestContext.apiSettings), updatedCustomer);
    return updatedCustomer;
}
/**
 * The updateCustomerPersonalization data action
 * Returns the updated customer
 */
export default createObservableDataAction({
    id: '@msdyn365-commerce-modules/retail-actions/update-customer-personalization',
    action: updateCustomerPersonalizationAction
});
//# sourceMappingURL=update-customer-personalization.js.map