{"version":3,"file":"get-attribute-definitions.js","sourceRoot":"","sources":["../../src/get-attribute-definitions.ts"],"names":[],"mappings":"AACA,OAAO,EAAE,0BAA0B,EAAwD,MAAM,yBAAyB,CAAC;AAC3H,OAAO,EACH,4BAA4B,EAC/B,MAAM,+EAA+E,CAAC;AAEvF,OAAO,EAAE,aAAa,EAAE,MAAM,mBAAmB,CAAC;AAElD;;GAEG;AACH,MAAM,OAAO,4BAA4B;IAIrC,YAAY,WAAiC,EAAE,2BAAyD;QAKjG,gBAAW,GAAG,GAAG,EAAE,CAAC,aAAa,CAAC,sBAAsB,EAAE,IAAI,CAAC,WAAW,CAAC,CAAC;QAC5E,uBAAkB,GAAG,GAAG,EAAE,CAAC,mBAAmB,CAAC;QAC/C,kBAAa,GAAG,GAAc,EAAE,CAAC,SAAS,CAAC;QAN9C,IAAI,CAAC,2BAA2B,GAAG,2BAA2B,CAAC;QAC/D,IAAI,CAAC,WAAW,GAAG,WAAW,CAAC;IACnC,CAAC;CAKJ;AAED;;GAEG;AACH,MAAM,WAAW,GAAG,CAAC,SAA+C,EAAgC,EAAE;IAClG,MAAM,EAAE,WAAW,EAAE,OAAO,EAAE,GAAG,SAAS,CAAC,cAAc,CAAC;IAC1D,IAAI,CAAC,OAAO,IAAI,CAAC,OAAO,CAAC,wBAAwB,EAAE;QAC/C,MAAM,IAAI,KAAK,CAAC,mFAAmF,CAAC,CAAC;KACxG;IAED,OAAO,IAAI,4BAA4B,CAAC,WAAW,EAAE,EAAC,wBAAwB,EAAE,OAAO,CAAC,wBAAwB,EAAC,CAAC,CAAC;AACvH,CAAC,CAAC;AAEF,MAAM,6BAA6B,GAAG,KAAK,EAAE,KAAmC,EAAE,GAAmB,EAAkC,EAAE;IACrI,IAAI,KAAK,IAAI,GAAG,CAAC,cAAc,CAAC,OAAO,IAAI,GAAG,CAAC,cAAc,CAAC,OAAO,CAAC,wBAAwB,EAAE;QAC5F,OAAO,4BAA4B,CAAC,EAAE,aAAa,EAAE,GAAG,EAAE,EAAE,KAAK,CAAC,2BAA2B,IAAI,IAAI,CAAC,CAAC,IAAI,CAAC,QAAQ,CAAC,EAAE;YACnH,OAAQ,QAAQ,CAAC;QACrB,CAAC,CAAC,CAAC;KACN;IAED,GAAG,CAAC,KAAK,CAAC,yDAAyD,CAAC,CAAC;IACrE,OAAO,EAAE,CAAC;AACd,CAAC,CAAC;AAEF,eAAe,0BAA0B,CAAC;IACtC,EAAE,EAAE,iEAAiE;IACrE,MAAM,EAAkC,6BAA6B;IACrE,KAAK,EAAE,WAAW;CACrB,CAAC,CAAC","sourcesContent":["import { CacheType, IAction, IActionInput, ICommerceApiSettings } from '@msdyn365-commerce/core';\nimport { createObservableDataAction, IActionContext, IAny, ICreateActionContext, IGeneric } from '@msdyn365-commerce/core';\nimport {\n    getAttributeDefinitionsAsync\n} from '@msdyn365-commerce/retail-proxy/dist/DataActions/StoreOperationsDataActions.g';\nimport { AttributeDefinition, AttributeDefinitionCriteria} from '@msdyn365-commerce/retail-proxy/dist/Entities/CommerceTypes.g';\nimport { buildCacheKey } from './utilities/utils';\n\n/**\n * Input class for get attribute definitions data action\n */\nexport class GetAttributeDefinitionsInput implements IActionInput {\n    public attributeDefinitionCriteria?: AttributeDefinitionCriteria;\n    private apiSettings: ICommerceApiSettings;\n\n    constructor(apiSettings: ICommerceApiSettings, attributeDefinitionCriteria?: AttributeDefinitionCriteria) {\n        this.attributeDefinitionCriteria = attributeDefinitionCriteria;\n        this.apiSettings = apiSettings;\n    }\n\n    public getCacheKey = () => buildCacheKey('AttributeDefinitions', this.apiSettings);\n    public getCacheObjectType = () => 'CustomerAttribute';\n    public dataCacheType = (): CacheType => 'request';\n}\n\n/**\n * Creates the input required to make the retail api call\n */\nconst createInput = (inputData: ICreateActionContext<IGeneric<IAny>>): GetAttributeDefinitionsInput => {\n    const { apiSettings, channel } = inputData.requestContext;\n    if (!channel || !channel.CustomerAttributeGroupId) {\n        throw new Error('[getAttributeDefinitions][createInput]: Customer attribute group id is not found.');\n    }\n\n    return new GetAttributeDefinitionsInput(apiSettings, {AttributeGroupIdentifier: channel.CustomerAttributeGroupId});\n};\n\nconst getAttributeDefinitionsAction = async (input: GetAttributeDefinitionsInput, ctx: IActionContext): Promise<AttributeDefinition[]> => {\n    if (input && ctx.requestContext.channel && ctx.requestContext.channel.CustomerAttributeGroupId) {\n        return getAttributeDefinitionsAsync({ callerContext: ctx }, input.attributeDefinitionCriteria || null).then(response => {\n            return  response;\n        });\n    }\n\n    ctx.trace('[getAttributeDefinitions]Invalid input passed to action');\n    return [];\n};\n\nexport default createObservableDataAction({\n    id: '@msdyn365-commerce-modules/retail-actions/get-custom-attributes',\n    action: <IAction<AttributeDefinition[]>>getAttributeDefinitionsAction,\n    input: createInput\n});\n"]}