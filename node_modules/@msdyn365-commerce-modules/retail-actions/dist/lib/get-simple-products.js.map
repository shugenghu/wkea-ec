{"version":3,"file":"get-simple-products.js","sourceRoot":"","sources":["../../src/get-simple-products.ts"],"names":[],"mappings":"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","sourcesContent":["import { CacheType, IAction, IActionInput } from '@msdyn365-commerce/core';\nimport { createObservableDataAction, IActionContext, IAny, ICommerceApiSettings, ICreateActionContext, IDictionary, IGeneric } from '@msdyn365-commerce/core';\nimport { getByIdsAsync } from '@msdyn365-commerce/retail-proxy/dist/DataActions/ProductsDataActions.g';\nimport { SimpleProduct } from '@msdyn365-commerce/retail-proxy/dist/Entities/CommerceTypes.g';\n\nimport { QueryResultSettingsProxy } from './utilities/QueryResultSettingsProxy';\nimport { buildCacheKey, generateProductImageUrl } from './utilities/utils';\n\n/**\n * Product Input\n */\nexport class ProductInput implements IActionInput {\n    public productId: number;\n    public channelId: number;\n    private apiSettings: ICommerceApiSettings;\n\n    constructor(productId: number | string, apiSettings: ICommerceApiSettings, channelId?: number) {\n        this.apiSettings = apiSettings;\n        this.productId = +productId;\n        this.channelId = channelId || apiSettings.channelId;\n    }\n\n    public getCacheKey = () =>  buildCacheKey(`RecordId-${this.productId.toString()}-ChannelId-${this.channelId.toString()}`, this.apiSettings);\n    public getCacheObjectType = () => 'SimpleProduct';\n    public dataCacheType = (): CacheType => 'application';\n}\n\n/**\n * Creates the input required to make the retail api call\n */\nexport const createSimpleProductsInput = (inputData: ICreateActionContext<IGeneric<IAny>>): IActionInput[] => {\n    let productIds = inputData.config && inputData.config.productIds;\n    if (!productIds) {\n        return [];\n    }\n\n    productIds = typeof productIds === 'string' ? productIds.split(',') : productIds;\n    return !Array.isArray(productIds)\n        ? []\n        : productIds.map((productId: string) => {\n              return new ProductInput(productId, inputData.requestContext.apiSettings);\n          });\n};\n\n/**\n * Calls the Retail API and returns the product based on the passed ProductInput\n */\nexport async function getSimpleProductsAction(inputs: ProductInput[], ctx: IActionContext): Promise<SimpleProduct[]> {\n    if (!Array.isArray(inputs) || inputs.length === 0) {\n        ctx.trace('[getSimpleProductsAction] Invalid or empty inputs passed.');\n        return [];\n    }\n\n    const productIdMapping: IDictionary<number> = {};\n    const productIds = inputs.map((input, idx) => {\n        productIdMapping[input.productId] = idx;\n        return input.productId;\n    });\n\n    return getByIdsAsync({ callerContext: ctx, queryResultSettings: QueryResultSettingsProxy.getDefault().QueryResultSettings }, inputs[0].channelId, productIds).then(products => {\n        const mappedProducts = products.map(product => {\n                try {\n                    const newImageUrl = generateProductImageUrl(product, ctx.requestContext.apiSettings);\n\n                    if (newImageUrl) {\n                        product.PrimaryImageUrl = newImageUrl;\n                    }\n\n                    return product;\n                } catch (e) {\n                    ctx.trace('[getSimpleProductsAction] Unable to update ImageURL for Product');\n                }\n            })\n            .reduce((memo: SimpleProduct[], product: SimpleProduct | undefined) => {\n                if (!product) {\n                    return memo;\n                }\n                const idx = productIdMapping[product.RecordId];\n                memo[idx] = product;\n                return memo;\n            }, []);\n\n        // NOTE: <ZAFINE> This is not an ideal fix, but will resolve all current issues\n        return inputs.map(input => {\n            const foundProduct = mappedProducts.find(product => product && product.RecordId === input.productId);\n            return foundProduct || <SimpleProduct>{};\n        });\n    });\n}\n\nexport default createObservableDataAction({\n    id: '@msdyn365-commerce-modules/retail-actions/get-simple-products',\n    action: <IAction<SimpleProduct[]>>getSimpleProductsAction,\n    input: createSimpleProductsInput,\n    isBatched: true\n});\n"]}