import { createObservableDataAction } from '@msdyn365-commerce/core';
import { getCartState } from '@msdyn365-commerce/global-state';
import { getDeliveryOptionsAsync } from '@msdyn365-commerce/retail-proxy/dist/DataActions/ProductsDataActions.g';
import { buildCacheKey, } from './index';
import { ActiveCartProductsInput, getActiveCartProductsAction } from './index';
/**
 * Input class for delivery options for items in cart
 */
export class ProductDeliveryOptionsForCartLineItems {
    constructor(apiSettings) {
        this.getCacheKey = () => buildCacheKey(`ActiveCartLineItemsDeliveryOptions`, this.apiSettings);
        this.getCacheObjectType = () => 'ActiveCartLineItemsDeliveryOptions';
        this.dataCacheType = () => 'request';
        this.apiSettings = apiSettings;
    }
}
const createInput = (inputData) => {
    return new ProductDeliveryOptionsForCartLineItems(inputData.requestContext.apiSettings);
};
/**
 * Calls the Retail API to get the delivery options for items in the cart
 */
export async function getDeliveryOptionsForCartLineItems(input, ctx) {
    // If no input is provided fail out
    if (!input) {
        throw new Error('[getDeliveryOptionsForCartLineItems]No valid Input was provided, failing');
    }
    const cartState = await getCartState(ctx);
    const cart = cartState.cart;
    const products = await getActiveCartProductsAction(new ActiveCartProductsInput(), ctx);
    if (!cart || !products || products.length === 0) {
        console.log('[getDeliveryOptionsForCartLineItems] Not able to get cart OR channelConfiguration or no products in cart');
        ctx.trace('[getDeliveryOptionsForCartLineItems] Not able to get cart OR channelConfiguration or no products in cart');
        return [];
    }
    return getDeliveryOptionsAsync({ callerContext: ctx, queryResultSettings: {} }, products.map(x => x.RecordId), {}, null)
        .then(result => {
        return result;
    }).catch((error) => {
        ctx.trace(error.message);
        ctx.telemetry.exception(error);
        ctx.telemetry.debug(`[getDeliveryOptionsForCartLineItems]Error executing action`);
        throw new Error('[getDeliveryOptionsForCartLineItems]Error executing action');
    });
}
export default createObservableDataAction({
    id: '@msdyn365-commerce-modules/retail-actions/get-delivery-options-for-cartlines',
    action: getDeliveryOptionsForCartLineItems,
    input: createInput
});
//# sourceMappingURL=get-delivery-options-for-cartlines.js.map