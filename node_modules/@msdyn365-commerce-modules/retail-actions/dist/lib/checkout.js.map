{"version":3,"file":"checkout.js","sourceRoot":"","sources":["../../src/checkout.ts"],"names":[],"mappings":"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","sourcesContent":["import {\n    CacheType,\n    createObservableDataAction,\n    IAction,\n    IActionContext,\n    IActionInput,\n    IHTTPRequestOptions,\n    IHTTPResponse,\n    sendCommerceRequest\n} from '@msdyn365-commerce/core';\nimport { Address, CartTenderLine, SalesOrder } from '@msdyn365-commerce/retail-proxy';\n\n/**\n * Check Out action Input\n */\nexport class CheckOutInput implements IActionInput {\n    public cartId: string;\n    public cartVersion: number;\n    public receiptEmail?: string;\n    public cartTenderLines?: CartTenderLine[];\n    public billingAddress?: Address;\n\n    constructor(cartId: string, cartVersion: number, receiptEmail?: string, cartTenderLines?: CartTenderLine[], billingAddress?: Address) {\n        this.cartId = cartId;\n        this.cartVersion = cartVersion;\n        this.receiptEmail = receiptEmail;\n        this.cartTenderLines = cartTenderLines;\n        this.billingAddress = billingAddress;\n    }\n\n    public getCacheKey = () => `${this.cartId}-${this.cartVersion}`;\n    public getCacheObjectType = () => 'CheckOut';\n    public dataCacheType = (): CacheType => 'none';\n}\n\n/**\n * Calls the Retail API to check out and returns sales order\n */\nexport async function checkOutAction(input: CheckOutInput, ctx: IActionContext): Promise<SalesOrder> {\n    const { apiSettings } = ctx.requestContext;\n    const requestUrl = `${apiSettings.baseUrl}Commerce/Carts('${input.cartId}')/Checkout?api-version=7.3`;\n    const requestOptions: IHTTPRequestOptions = {\n        headers: {\n            oun: apiSettings.oun,\n            'Content-Type': 'application/json'\n        }\n    };\n\n    if (requestOptions.headers && ctx.requestContext.user.token) {\n        requestOptions.headers.Authorization = `id_token ${ctx.requestContext.user.token}`;\n    }\n\n    if (input.cartTenderLines && input.cartTenderLines.length) {\n        input.cartTenderLines = input.cartTenderLines.map((cartTenderLineItem: CartTenderLine) => {\n            // @ts-ignore\n            // tslint:disable-next-line:prefer-type-cast\n            cartTenderLineItem['@odata.type'] = '#Microsoft.Dynamics.Commerce.Runtime.DataModel.CartTenderLine';\n            // @ts-ignore\n            // tslint:disable-next-line:prefer-type-cast\n            cartTenderLineItem['Amount@odata.type'] = '#Decimal';\n\n            if (cartTenderLineItem.TokenizedPaymentCard) {\n                // @ts-ignore\n                // tslint:disable-next-line:prefer-type-cast\n                cartTenderLineItem.TokenizedPaymentCard['@odata.type'] =\n                    '#Microsoft.Dynamics.Commerce.Runtime.DataModel.TokenizedPaymentCard';\n\n                // Force the House prop to be set, so that call succeeds\n                // @ts-ignore: House prop not yet typed\n                if (!cartTenderLineItem.TokenizedPaymentCard.House) {\n                    // @ts-ignore: House prop not yet typed\n                    cartTenderLineItem.TokenizedPaymentCard.House = 'N/A';\n                }\n\n                if (cartTenderLineItem.TokenizedPaymentCard.CardTokenInfo) {\n                    // @ts-ignore\n                    // tslint:disable-next-line:prefer-type-cast\n                    cartTenderLineItem.TokenizedPaymentCard.CardTokenInfo['@odata.type'] =\n                        '#Microsoft.Dynamics.Commerce.Runtime.DataModel.CardTokenInfo';\n                }\n\n                if (input.billingAddress) {\n                    const { Phone, ThreeLetterISORegionName = '', Street, City, State, ZipCode } = input.billingAddress;\n                    cartTenderLineItem.TokenizedPaymentCard = {\n                        ...cartTenderLineItem.TokenizedPaymentCard,\n                        Phone,\n                        Country: ThreeLetterISORegionName.toUpperCase(),\n                        Address1: Street,\n                        City,\n                        State,\n                        Zip: ZipCode\n                    };\n                }\n            }\n\n            return cartTenderLineItem;\n        });\n    }\n\n    const requestBody = {\n        receiptEmail: input.receiptEmail,\n        cartVersion: input.cartVersion || null,\n        ...(input.cartTenderLines && { cartTenderLines: input.cartTenderLines })\n    };\n\n    // Perform check-out operation\n    return sendCommerceRequest<SalesOrder>(requestUrl, 'post', requestBody, requestOptions).then((response: IHTTPResponse<SalesOrder>) => {\n        if (response.status >= 200 && response.status < 300 && response.data) {\n            return response.data;\n        } else if (response.data) {\n            throw response.data;\n        }\n        throw new Error('[checkOutAction] Invalid response recieved from RetailServer');\n    });\n}\n\nexport default createObservableDataAction({\n    id: '@msdyn365-commerce-modules/retail-actions/checkout',\n    action: <IAction<SalesOrder>>checkOutAction\n});\n"]}