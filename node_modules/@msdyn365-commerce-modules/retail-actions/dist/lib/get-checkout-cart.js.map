{"version":3,"file":"get-checkout-cart.js","sourceRoot":"","sources":["../../src/get-checkout-cart.ts"],"names":[],"mappings":"AAAA,OAAO,EAA0E,gBAAgB,EAAE,MAAM,yBAAyB,CAAC;AACnI,OAAO,EAAE,0BAA0B,EAAwB,MAAM,yBAAyB,CAAC;AAE3F,OAAO,MAAM,MAAM,WAAW,CAAC;AAE/B,OAAO,EAAE,SAAS,EAAE,MAAM,qEAAqE,CAAC;AAChG,OAAO,EAAE,aAAa,EAAE,MAAM,mBAAmB,CAAC;AAElD,OAAO,EAAE,YAAY,EAAE,MAAM,iCAAiC,CAAC;AAE/D;;GAEG;AACH,MAAM,OAAO,oBAAoB;IAG7B,YAAY,WAAiC;QAItC,gBAAW,GAAG,GAAG,EAAE,CAAC,aAAa,CAAC,oBAAoB,EAAE,IAAI,CAAC,WAAW,CAAC,CAAC;QAC1E,uBAAkB,GAAG,GAAG,EAAE,CAAC,oBAAoB,CAAC;QAChD,kBAAa,GAAG,GAAc,EAAE,CAAC,SAAS,CAAC;QAL9C,IAAI,CAAC,WAAW,GAAG,WAAW,CAAC;IACnC,CAAC;CAKJ;AAED,MAAM,WAAW,GAAG,CAAC,SAA+B,EAAE,EAAE;IACpD,OAAO,IAAI,oBAAoB,CAAC,SAAS,CAAC,cAAc,CAAC,WAAW,CAAC,CAAC;AAC1E,CAAC,CAAC;AAEF,aAAa;AACb,MAAM,cAAc,GAAW,gBAAgB,CAAC,UAAU,IAAI,MAAM,CAAC;AAErE;;GAEG;AACH,MAAM,CAAC,KAAK,UAAU,eAAe,CAAC,KAA2B,EAAE,GAAmB;IAClF,MAAM,MAAM,GAAG,MAAM,CAAC,GAAG,CAAC,cAAc,CAAC,IAAI,EAAE,CAAC;IAChD,IAAI,MAAM,EAAE;QACR,MAAM,gBAAgB,GAAG,MAAM,YAAY,CAAC,GAAG,CAAC,CAAC;QACjD,MAAM,UAAU,GAAG,gBAAgB,CAAC,IAAI,CAAC;QAEzC,sDAAsD;QACtD,IAAI,UAAU,IAAI,MAAM,CAAC,IAAI,CAAC,UAAU,CAAC,CAAC,MAAM,GAAG,CAAC,EAAE;YAClD,MAAM,YAAY,GAAG,MAAM,SAAS,CAAC,EAAE,aAAa,EAAE,GAAG,EAAE,EAAE,UAAU,CAAC,EAAE,EAAE,CAAC,CAAC,CAAC;YAE/E,IAAI,YAAY,EAAE;gBACd,OAAO,KAAK,CAAC,OAAO,CAAC,YAAY,CAAC,CAAC,CAAC,CAAC,YAAY,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,YAAY,CAAC;aACvE;SACJ;aAAM;YACH,GAAG,CAAC,KAAK,CAAC,6EAA6E,CAAC,CAAC;SAC5F;KACJ;IAED,OAAa,EAAE,CAAC;AACpB,CAAC;AAED,eAAe,0BAA0B,CAAC;IACtC,EAAE,EAAE,6DAA6D;IACjE,MAAM,EAAiB,eAAe;IACtC,KAAK,EAAE,WAAW;CACrB,CAAC,CAAC","sourcesContent":["import { CacheType, IAction, IActionContext, IActionInput, ICommerceApiSettings, msdyn365Commerce } from '@msdyn365-commerce/core';\nimport { createObservableDataAction, ICreateActionContext } from '@msdyn365-commerce/core';\nimport { Cart } from '@msdyn365-commerce/retail-proxy';\nimport Cookie from 'js-cookie';\n\nimport { copyAsync } from '@msdyn365-commerce/retail-proxy/dist/DataActions/CartsDataActions.g';\nimport { buildCacheKey } from './utilities/utils';\n\nimport { getCartState } from '@msdyn365-commerce/global-state';\n\n/**\n * Input class for getCheckoutCart data action\n */\nexport class GetCheckoutCartInput implements IActionInput {\n    private apiSettings: ICommerceApiSettings;\n\n    constructor(apiSettings: ICommerceApiSettings) {\n        this.apiSettings = apiSettings;\n    }\n\n    public getCacheKey = () => buildCacheKey(`ActiveCheckoutCart`, this.apiSettings);\n    public getCacheObjectType = () => 'ActiveCheckoutCart';\n    public dataCacheType = (): CacheType => 'request';\n}\n\nconst createInput = (inputData: ICreateActionContext) => {\n    return new GetCheckoutCartInput(inputData.requestContext.apiSettings);\n};\n\n// @ts-ignore\nconst CartCookieName: string = msdyn365Commerce.CartCookie || 'cart';\n\n/**\n * Data action to copy the cart for checkout actions\n */\nexport async function getCheckoutCart(input: GetCheckoutCartInput, ctx: IActionContext): Promise<Cart> {\n    const cartId = Cookie.get(CartCookieName) || '';\n    if (cartId) {\n        const currentCartState = await getCartState(ctx);\n        const activeCart = currentCartState.cart;\n\n        // check if there is an active cart and it isn't empty\n        if (activeCart && Object.keys(activeCart).length > 0) {\n            const checkoutCart = await copyAsync({ callerContext: ctx }, activeCart.Id, 2);\n\n            if (checkoutCart) {\n                return Array.isArray(checkoutCart) ? checkoutCart[0] : checkoutCart;\n            }\n        } else {\n            ctx.trace(`[get-checkout-cart] Can't create a checkout cart since active cart is empty`);\n        }\n    }\n\n    return <Cart>{};\n}\n\nexport default createObservableDataAction({\n    id: '@msdyn365-commerce-modules/retail-actions/get-checkout-cart',\n    action: <IAction<Cart>>getCheckoutCart,\n    input: createInput\n});\n"]}