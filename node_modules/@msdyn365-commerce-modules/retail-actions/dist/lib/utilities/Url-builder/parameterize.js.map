{"version":3,"file":"parameterize.js","sourceRoot":"","sources":["../../../../src/utilities/Url-builder/parameterize.ts"],"names":[],"mappings":"AAAA,OAAO,gBAA+C,MAAM,yBAAyB,CAAC;AAEtF,MAAM,UAAU,YAAY,CAAC,OAAe,EAAE,EAAE,GAAG,GAAG,GAAG,EAAE,2BAAqD,EAAE,EAAE,eAAuB;IACvI,8EAA8E;IAC9E,MAAM,aAAa,GAAG,CAAC,gBAAgB,CAAC,gBAAgB,IAAI,gBAAgB,CAAC,gBAAgB,CAAC,qBAAqB,IAAI,wBAAwB,CAAC,qBAAqB,CAAC,CAAA,CAAC,CAAC,IAAI,CAAA,CAAC,CAAC,eAAe,IAAI,IAAI,CAAC;IACtM;;;;;;;;MAQE;IACF,IAAI,wBAAwB,CAAC,iBAAiB,IAAI,gBAAgB,CAAC,gBAAgB,IAAI,gBAAgB,CAAC,gBAAgB,CAAC,iBAAiB,EAAE;QACxI,4EAA4E;QAC5E,4EAA4E;QAC5E,OAAO,kBAAkB,CAAC,aAAa,CAAC,WAAW,EAAE,CAAC,OAAO,CAAC,cAAc,EAAE,GAAG,CAAC,CAAC,IAAI,EAAE,CAAC,OAAO,CAAC,MAAM,EAAE,GAAG,CAAC,CAAC,OAAO,CAAC,YAAY,EAAE,EAAE,CAAC,CAAC,CAAC;KAC7I;IACD,OAAO,IAAI;SACN,WAAW,EAAE;SACb,OAAO,CAAC,gBAAgB,EAAE,GAAG,CAAC;SAC9B,IAAI,EAAE;SACN,OAAO,CAAC,MAAM,EAAE,GAAG,CAAC,CAAC;AAC9B,CAAC","sourcesContent":["import msdyn365Commerce, { IParameterizeFeatureFlags } from '@msdyn365-commerce/core';\n\nexport function parameterize(name: string = '', sep = '-', parameterizeFeatureFlags:IParameterizeFeatureFlags = {}, neutralizedName?:string) {\n    // if neutralizedName flag enabled, we use neutralizedName to construct string\n    const candidateName = (msdyn365Commerce.platformSettings && msdyn365Commerce.platformSettings.enableUrlLocalization || parameterizeFeatureFlags.enableUrlLocalization)? name: neutralizedName || name;\n    /*\n    1\t‘ ‘ (space)\t-> (single dash)\n    3\tAny character disallowed in URLs -> URL-encode\n    5\t‘ & ‘ (space ampersand space) -> (single dash)\n    6\t‘ - ‘ (space dash space) -> (single dash)\n    7\t‘  ‘ (2+ spaces) -> (single dash)\n    10\t[A-Z] (capital letters) -> [a-z] (lower-case)\n    12\tAny non-ASCII character outside of the set of disallowed  characters -> URL-encode\n    */\n    if (parameterizeFeatureFlags.enableUrlEncoding || msdyn365Commerce.platformSettings && msdyn365Commerce.platformSettings.enableUrlEncoding) {\n        // replace url reserved characters with dash, and remove front and end dash;\n        // &*!() reserved characters that can not be encoded by encodeURIComponent()\n        return encodeURIComponent(candidateName.toLowerCase().replace(/[\\s&*!()']+/g, '-').trim().replace(/\\-+/g, '-').replace(/^\\-+|\\-+$/g, ''));\n    }\n    return name\n        .toLowerCase()\n        .replace(/[^a-z0-9\\-_]+/g, ' ')\n        .trim()\n        .replace(/\\s+/g, sep);\n}\n"]}