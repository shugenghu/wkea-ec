{"version":3,"file":"QueryResultSettingsProxy.test.js","sourceRoot":"","sources":["../../../../src/utilities/__tests__/QueryResultSettingsProxy.test.ts"],"names":[],"mappings":"AAAA,OAAO,MAAM,CAAC;AACd,OAAO,EAAE,wBAAwB,EAAE,MAAM,6BAA6B,CAAC;AAEvE,OAAO,EAAE,gBAAgB,EAAE,MAAM,yBAAyB,CAAC;AAG3D,QAAQ,CAAC,0BAA0B,EAAE,GAAG,EAAE;IACtC,EAAE,CAAC,oCAAoC,EAAE,GAAG,EAAE;QAC1C,MAAM,MAAM,GAAG,wBAAwB,CAAC,UAAU,EAAE,CAAC;QACrD,MAAM,CAAC,MAAM,CAAC,CAAC,WAAW,EAAE,CAAC;QAC7B,MAAM,CAAC,MAAM,CAAC,mBAAmB,CAAC,CAAC,WAAW,EAAE,CAAC;QACjD,MAAM,CAAC,MAAM,CAAC,mBAAmB,CAAC,MAAM,CAAC,CAAC,OAAO,CAAC,EAAE,CAAC,CAAC;QACtD,MAAM,CAAC,MAAM,CAAC,mBAAmB,CAAC,OAAO,CAAC,CAAC,OAAO,CAAC,EAAE,CAAC,CAAC;QACvD,MAAM,CAAC,MAAM,CAAC,YAAY,CAAC,CAAC,OAAO,CAAC,+CAA+C,CAAC,CAAC;IACzF,CAAC,CAAC,CAAC;IAEH,EAAE,CAAC,oDAAoD,EAAE,GAAG,EAAE;QAC1D,IAAI,WAAW,GAAG,gBAAgB,CAAC,EAAC,KAAK,EAAE,EAAC,GAAG,EAAE,IAAI,EAAE,IAAI,EAAE,GAAG,EAAC,EAAC,CAAC,CAAC;QACpE,MAAM,SAAS,GAAyC;YACpD,cAAc,EAAE,WAAW;YAC3B,MAAM,EAAE,EAAC,YAAY,EAAE,EAAE,EAAC;SAC7B,CAAC;QAEF,MAAM,MAAM,GAAG,wBAAwB,CAAC,aAAa,CAAC,SAAS,CAAC,CAAC;QACjE,MAAM,CAAC,MAAM,CAAC,CAAC,WAAW,EAAE,CAAC;QAC7B,MAAM,CAAC,MAAM,CAAC,mBAAmB,CAAC,CAAC,WAAW,EAAE,CAAC;QACjD,MAAM,CAAC,MAAM,CAAC,mBAAmB,CAAC,MAAM,CAAC,CAAC,WAAW,EAAE,CAAC;QACxD,MAAM,CAAC,MAAM,CAAC,mBAAmB,CAAC,MAAO,CAAC,GAAG,CAAC,CAAC,OAAO,CAAC,EAAE,CAAC,CAAC;QAC3D,MAAM,CAAC,MAAM,CAAC,mBAAmB,CAAC,MAAO,CAAC,IAAI,CAAC,CAAC,OAAO,CAAC,CAAC,CAAC,CAAC;QAC3D,MAAM,CAAC,MAAM,CAAC,mBAAmB,CAAC,OAAO,CAAC,CAAC,OAAO,CAAC,EAAE,CAAC,CAAC;QACvD,MAAM,CAAC,MAAM,CAAC,YAAY,CAAC,CAAC,OAAO,CAAC,gCAAgC,CAAC,CAAC;IAC1E,CAAC,CAAC,CAAC;IAEH,EAAE,CAAC,sEAAsE,EAAE,GAAG,EAAE;QAC5E,MAAM,WAAW,GAAG,gBAAgB,CAAC,EAAC,KAAK,EAAE,EAAC,GAAG,EAAE,IAAI,EAAE,IAAI,EAAE,GAAG,EAAC,EAAC,CAAC,CAAC;QACtE,MAAM,mBAAmB,GAAgB,EAAC,OAAO,EAAE,CAAC,EAAE,UAAU,EAAE,kBAAkB,EAAE,YAAY,EAAE,KAAK,EAAC,CAAC,EAAC,CAAC;QAC7G,MAAM,SAAS,GAAyC;YACpD,cAAc,EAAE,WAAW;YAC3B,MAAM,EAAE,EAAC,YAAY,EAAE,EAAE,EAAE,eAAe,EAAE,mBAAmB,EAAC;SACnE,CAAC;QAEF,MAAM,MAAM,GAAG,wBAAwB,CAAC,aAAa,CAAC,SAAS,CAAC,CAAC;QACjE,MAAM,CAAC,MAAM,CAAC,CAAC,WAAW,EAAE,CAAC;QAC7B,MAAM,CAAC,MAAM,CAAC,mBAAmB,CAAC,CAAC,WAAW,EAAE,CAAC;QACjD,MAAM,CAAC,MAAM,CAAC,mBAAmB,CAAC,MAAM,CAAC,CAAC,WAAW,EAAE,CAAC;QACxD,MAAM,CAAC,MAAM,CAAC,mBAAmB,CAAC,MAAO,CAAC,GAAG,CAAC,CAAC,OAAO,CAAC,EAAE,CAAC,CAAC;QAC3D,MAAM,CAAC,MAAM,CAAC,mBAAmB,CAAC,MAAO,CAAC,IAAI,CAAC,CAAC,OAAO,CAAC,CAAC,CAAC,CAAC;QAC3D,MAAM,CAAC,MAAM,CAAC,mBAAmB,CAAC,OAAO,CAAC,CAAC,WAAW,EAAE,CAAC;QACzD,MAAM,CAAC,MAAM,CAAC,mBAAmB,CAAC,OAAQ,CAAC,OAAO,CAAC,CAAC,WAAW,EAAE,CAAC;QAClE,MAAM,CAAC,MAAM,CAAC,mBAAmB,CAAC,OAAQ,CAAC,OAAQ,CAAC,MAAM,CAAC,CAAC,OAAO,CAAC,CAAC,CAAC,CAAC;QACvE,MAAM,CAAC,MAAM,CAAC,mBAAmB,CAAC,OAAQ,CAAC,OAAQ,CAAC,CAAC,CAAC,CAAC,CAAC,OAAO,CAAC,EAAC,UAAU,EAAE,kBAAkB,EAAE,YAAY,EAAE,KAAK,EAAC,CAAC,CAAC;QACvH,MAAM,CAAC,MAAM,CAAC,YAAY,CAAC,CAAC,OAAO,CAAC,4CAA4C,CAAC,CAAC;IACtF,CAAC,CAAC,CAAC;IAEH,EAAE,CAAC,iFAAiF,EAAE,GAAG,EAAE;QACvF,MAAM,WAAW,GAAG,gBAAgB,CAAC,EAAC,KAAK,EAAE,EAAC,GAAG,EAAE,IAAI,EAAE,IAAI,EAAE,GAAG,EAAC,EAAC,CAAC,CAAC;QACtE,MAAM,mBAAmB,GAAgB,EAAC,OAAO,EAAE,CAAC,EAAE,UAAU,EAAE,kBAAkB,EAAE,YAAY,EAAE,IAAI,EAAC,CAAC,EAAC,CAAC;QAC5G,MAAM,SAAS,GAAyC;YACpD,cAAc,EAAE,WAAW;YAC3B,MAAM,EAAE,EAAC,YAAY,EAAE,EAAE,EAAE,eAAe,EAAE,mBAAmB,EAAC;SACnE,CAAC;QAEF,MAAM,MAAM,GAAG,wBAAwB,CAAC,aAAa,CAAC,SAAS,CAAC,CAAC;QACjE,MAAM,CAAC,MAAM,CAAC,CAAC,WAAW,EAAE,CAAC;QAC7B,MAAM,CAAC,MAAM,CAAC,mBAAmB,CAAC,CAAC,WAAW,EAAE,CAAC;QACjD,MAAM,CAAC,MAAM,CAAC,mBAAmB,CAAC,MAAM,CAAC,CAAC,WAAW,EAAE,CAAC;QACxD,MAAM,CAAC,MAAM,CAAC,mBAAmB,CAAC,MAAO,CAAC,GAAG,CAAC,CAAC,OAAO,CAAC,EAAE,CAAC,CAAC;QAC3D,MAAM,CAAC,MAAM,CAAC,mBAAmB,CAAC,MAAO,CAAC,IAAI,CAAC,CAAC,OAAO,CAAC,CAAC,CAAC,CAAC;QAC3D,MAAM,CAAC,MAAM,CAAC,mBAAmB,CAAC,OAAO,CAAC,CAAC,WAAW,EAAE,CAAC;QACzD,MAAM,CAAC,MAAM,CAAC,mBAAmB,CAAC,OAAQ,CAAC,OAAO,CAAC,CAAC,WAAW,EAAE,CAAC;QAClE,MAAM,CAAC,MAAM,CAAC,mBAAmB,CAAC,OAAQ,CAAC,OAAQ,CAAC,MAAM,CAAC,CAAC,OAAO,CAAC,CAAC,CAAC,CAAC;QACvE,MAAM,CAAC,MAAM,CAAC,mBAAmB,CAAC,OAAQ,CAAC,OAAQ,CAAC,CAAC,CAAC,CAAC,CAAC,OAAO,CAAC,EAAC,UAAU,EAAE,kBAAkB,EAAE,YAAY,EAAE,IAAI,EAAC,CAAC,CAAC;QACtH,MAAM,CAAC,MAAM,CAAC,YAAY,CAAC,CAAC,OAAO,CAAC,6CAA6C,CAAC,CAAC;IACvF,CAAC,CAAC,CAAC;IAEH,EAAE,CAAC,+EAA+E,EAAE,GAAG,EAAE;QACrF,MAAM,WAAW,GAAG,gBAAgB,CAAC,EAAC,KAAK,EAAE,EAAC,GAAG,EAAE,IAAI,EAAE,IAAI,EAAE,GAAG,EAAC,EAAC,CAAC,CAAC;QACtE,MAAM,mBAAmB,GAAgB,EAAC,OAAO,EAAE;gBAC/C,EAAE,UAAU,EAAE,kBAAkB,EAAE,YAAY,EAAE,IAAI,EAAC;gBACrD,EAAE,UAAU,EAAE,sBAAsB,EAAE,YAAY,EAAE,KAAK,EAAC;aAC7D,EAAC,CAAC;QACH,MAAM,SAAS,GAAyC;YACpD,cAAc,EAAE,WAAW;YAC3B,MAAM,EAAE,EAAC,YAAY,EAAE,EAAE,EAAE,eAAe,EAAE,mBAAmB,EAAC;SACnE,CAAC;QAEF,MAAM,MAAM,GAAG,wBAAwB,CAAC,aAAa,CAAC,SAAS,CAAC,CAAC;QACjE,MAAM,CAAC,MAAM,CAAC,CAAC,WAAW,EAAE,CAAC;QAC7B,MAAM,CAAC,MAAM,CAAC,mBAAmB,CAAC,CAAC,WAAW,EAAE,CAAC;QACjD,MAAM,CAAC,MAAM,CAAC,mBAAmB,CAAC,MAAM,CAAC,CAAC,WAAW,EAAE,CAAC;QACxD,MAAM,CAAC,MAAM,CAAC,mBAAmB,CAAC,MAAO,CAAC,GAAG,CAAC,CAAC,OAAO,CAAC,EAAE,CAAC,CAAC;QAC3D,MAAM,CAAC,MAAM,CAAC,mBAAmB,CAAC,MAAO,CAAC,IAAI,CAAC,CAAC,OAAO,CAAC,CAAC,CAAC,CAAC;QAC3D,MAAM,CAAC,MAAM,CAAC,mBAAmB,CAAC,OAAO,CAAC,CAAC,WAAW,EAAE,CAAC;QACzD,MAAM,CAAC,MAAM,CAAC,mBAAmB,CAAC,OAAQ,CAAC,OAAO,CAAC,CAAC,WAAW,EAAE,CAAC;QAClE,MAAM,CAAC,MAAM,CAAC,mBAAmB,CAAC,OAAQ,CAAC,OAAQ,CAAC,MAAM,CAAC,CAAC,OAAO,CAAC,CAAC,CAAC,CAAC;QACvE,MAAM,CAAC,MAAM,CAAC,YAAY,CAAC,CAAC,OAAO,CAAC,uEAAuE,CAAC,CAAC;IACjH,CAAC,CAAC,CAAC;IAEH,EAAE,CAAC,mEAAmE,EAAE,GAAG,EAAE;QACzE,IAAI,WAAW,GAAG,gBAAgB,CAAC,EAAC,KAAK,EAAE,EAAC,GAAG,EAAE,IAAI,EAAE,IAAI,EAAE,GAAG,EAAC,EAAC,CAAC,CAAC;QACpE,MAAM,SAAS,GAAyC;YACpD,cAAc,EAAE,WAAW;SAC9B,CAAC;QAEF,MAAM,MAAM,GAAG,wBAAwB,CAAC,aAAa,CAAC,SAAS,CAAC,CAAC;QACjE,MAAM,CAAC,MAAM,CAAC,CAAC,WAAW,EAAE,CAAC;QAC7B,MAAM,CAAC,MAAM,CAAC,mBAAmB,CAAC,CAAC,WAAW,EAAE,CAAC;QACjD,MAAM,CAAC,MAAM,CAAC,mBAAmB,CAAC,MAAM,CAAC,CAAC,WAAW,EAAE,CAAC;QACxD,MAAM,CAAC,MAAM,CAAC,mBAAmB,CAAC,MAAO,CAAC,GAAG,CAAC,CAAC,OAAO,CAAC,EAAE,CAAC,CAAC;QAC3D,MAAM,CAAC,MAAM,CAAC,mBAAmB,CAAC,MAAO,CAAC,IAAI,CAAC,CAAC,OAAO,CAAC,CAAC,CAAC,CAAC;QAC3D,MAAM,CAAC,MAAM,CAAC,mBAAmB,CAAC,OAAO,CAAC,CAAC,OAAO,CAAC,EAAE,CAAC,CAAC;QACvD,MAAM,CAAC,MAAM,CAAC,YAAY,CAAC,CAAC,OAAO,CAAC,gCAAgC,CAAC,CAAC;IAC1E,CAAC,CAAC,CAAC;IAEH,EAAE,CAAC,qDAAqD,EAAE,GAAG,EAAE;QAC3D,IAAI,WAAW,GAAG,gBAAgB,CAAC,EAAC,KAAK,EAAE,EAAC,GAAG,EAAE,IAAI,EAAE,IAAI,EAAE,GAAG,EAAC,EAAC,CAAC,CAAC;QACpE,MAAM,MAAM,GAAG,wBAAwB,CAAC,cAAc,CAAC,WAAW,EAAE,EAAC,YAAY,EAAE,EAAE,EAAC,CAAC,CAAC;QACxF,MAAM,CAAC,MAAM,CAAC,CAAC,WAAW,EAAE,CAAC;QAC7B,MAAM,CAAC,MAAM,CAAC,mBAAmB,CAAC,CAAC,WAAW,EAAE,CAAC;QACjD,MAAM,CAAC,MAAM,CAAC,mBAAmB,CAAC,MAAM,CAAC,CAAC,WAAW,EAAE,CAAC;QACxD,MAAM,CAAC,MAAM,CAAC,mBAAmB,CAAC,MAAO,CAAC,GAAG,CAAC,CAAC,OAAO,CAAC,EAAE,CAAC,CAAC;QAC3D,MAAM,CAAC,MAAM,CAAC,mBAAmB,CAAC,MAAO,CAAC,IAAI,CAAC,CAAC,OAAO,CAAC,CAAC,CAAC,CAAC;QAC3D,MAAM,CAAC,MAAM,CAAC,mBAAmB,CAAC,OAAO,CAAC,CAAC,OAAO,CAAC,EAAE,CAAC,CAAC;QACvD,MAAM,CAAC,MAAM,CAAC,YAAY,CAAC,CAAC,OAAO,CAAC,gCAAgC,CAAC,CAAC;IAC1E,CAAC,CAAC,CAAC;AACP,CAAC,CAAC,CAAC","sourcesContent":["import 'jest';\nimport { QueryResultSettingsProxy } from '../QueryResultSettingsProxy';\nimport { ICreateActionContext, IGeneric, IAny } from '@msdyn365-commerce/core';\nimport { buildMockRequest } from '@msdyn365-commerce/core';\nimport { SortingInfo } from '@msdyn365-commerce/retail-proxy';\n\ndescribe('QueryResultSettingsProxy', () => {\n    it('Should return correct default data', () => {\n        const target = QueryResultSettingsProxy.getDefault();\n        expect(target).toBeDefined();\n        expect(target.QueryResultSettings).toBeDefined();\n        expect(target.QueryResultSettings.Paging).toEqual({});\n        expect(target.QueryResultSettings.Sorting).toEqual({});\n        expect(target.cacheKeyHint).toEqual('top-undefined|skip-undefined|sortBy-undefined');\n    });\n\n    it('Should return correct query settings for inputData', () => {\n        let mockRequest = buildMockRequest({query: {top: '25', skip: '2'}});\n        const inputData: ICreateActionContext<IGeneric<IAny>> = { \n            requestContext: mockRequest,\n            config: {itemsPerPage: 50}\n        };\n\n        const target = QueryResultSettingsProxy.fromInputData(inputData);\n        expect(target).toBeDefined();\n        expect(target.QueryResultSettings).toBeDefined();\n        expect(target.QueryResultSettings.Paging).toBeDefined();\n        expect(target.QueryResultSettings.Paging!.Top).toEqual(25);\n        expect(target.QueryResultSettings.Paging!.Skip).toEqual(2);\n        expect(target.QueryResultSettings.Sorting).toEqual({});\n        expect(target.cacheKeyHint).toEqual('top-25|skip-2|sortBy-undefined');\n    });\n\n    it('Should return correct query settings for inputData with sorting info', () => {\n        const mockRequest = buildMockRequest({query: {top: '25', skip: '2'}});\n        const mockSortingCriteria: SortingInfo = {Columns: [{ ColumnName: 'SortByTestColumn', IsDescending: false}]};\n        const inputData: ICreateActionContext<IGeneric<IAny>> = { \n            requestContext: mockRequest,\n            config: {itemsPerPage: 50, sortingCriteria: mockSortingCriteria}\n        };\n\n        const target = QueryResultSettingsProxy.fromInputData(inputData);\n        expect(target).toBeDefined();\n        expect(target.QueryResultSettings).toBeDefined();\n        expect(target.QueryResultSettings.Paging).toBeDefined();\n        expect(target.QueryResultSettings.Paging!.Top).toEqual(25);\n        expect(target.QueryResultSettings.Paging!.Skip).toEqual(2);\n        expect(target.QueryResultSettings.Sorting).toBeDefined();\n        expect(target.QueryResultSettings.Sorting!.Columns).toBeDefined();\n        expect(target.QueryResultSettings.Sorting!.Columns!.length).toEqual(1);\n        expect(target.QueryResultSettings.Sorting!.Columns![0]).toEqual({ColumnName: 'SortByTestColumn', IsDescending: false});\n        expect(target.cacheKeyHint).toEqual('top-25|skip-2|sortBy-SortByTestColumn--asc');\n    });\n\n    it('Should return correct query settings for inputData with descending sorting info', () => {\n        const mockRequest = buildMockRequest({query: {top: '25', skip: '2'}});\n        const mockSortingCriteria: SortingInfo = {Columns: [{ ColumnName: 'SortByTestColumn', IsDescending: true}]};\n        const inputData: ICreateActionContext<IGeneric<IAny>> = { \n            requestContext: mockRequest,\n            config: {itemsPerPage: 50, sortingCriteria: mockSortingCriteria}\n        };\n\n        const target = QueryResultSettingsProxy.fromInputData(inputData);\n        expect(target).toBeDefined();\n        expect(target.QueryResultSettings).toBeDefined();\n        expect(target.QueryResultSettings.Paging).toBeDefined();\n        expect(target.QueryResultSettings.Paging!.Top).toEqual(25);\n        expect(target.QueryResultSettings.Paging!.Skip).toEqual(2);\n        expect(target.QueryResultSettings.Sorting).toBeDefined();\n        expect(target.QueryResultSettings.Sorting!.Columns).toBeDefined();\n        expect(target.QueryResultSettings.Sorting!.Columns!.length).toEqual(1);\n        expect(target.QueryResultSettings.Sorting!.Columns![0]).toEqual({ColumnName: 'SortByTestColumn', IsDescending: true});\n        expect(target.cacheKeyHint).toEqual('top-25|skip-2|sortBy-SortByTestColumn--desc');\n    });\n\n    it('Should return correct query settings for inputData with multiple sorting info', () => {\n        const mockRequest = buildMockRequest({query: {top: '25', skip: '2'}});\n        const mockSortingCriteria: SortingInfo = {Columns: [\n            { ColumnName: 'SortByTestColumn', IsDescending: true},\n            { ColumnName: 'AnotherSortingColumn', IsDescending: false}\n        ]};\n        const inputData: ICreateActionContext<IGeneric<IAny>> = { \n            requestContext: mockRequest,\n            config: {itemsPerPage: 50, sortingCriteria: mockSortingCriteria}\n        };\n\n        const target = QueryResultSettingsProxy.fromInputData(inputData);\n        expect(target).toBeDefined();\n        expect(target.QueryResultSettings).toBeDefined();\n        expect(target.QueryResultSettings.Paging).toBeDefined();\n        expect(target.QueryResultSettings.Paging!.Top).toEqual(25);\n        expect(target.QueryResultSettings.Paging!.Skip).toEqual(2);\n        expect(target.QueryResultSettings.Sorting).toBeDefined();\n        expect(target.QueryResultSettings.Sorting!.Columns).toBeDefined();\n        expect(target.QueryResultSettings.Sorting!.Columns!.length).toEqual(2);\n        expect(target.cacheKeyHint).toEqual('top-25|skip-2|sortBy-SortByTestColumn--desc,AnotherSortingColumn--asc');\n    });\n\n    it('Should return correct query settings for inputData missing config', () => {\n        let mockRequest = buildMockRequest({query: {top: '25', skip: '2'}});\n        const inputData: ICreateActionContext<IGeneric<IAny>> = { \n            requestContext: mockRequest\n        };\n\n        const target = QueryResultSettingsProxy.fromInputData(inputData);\n        expect(target).toBeDefined();\n        expect(target.QueryResultSettings).toBeDefined();\n        expect(target.QueryResultSettings.Paging).toBeDefined();\n        expect(target.QueryResultSettings.Paging!.Top).toEqual(25);\n        expect(target.QueryResultSettings.Paging!.Skip).toEqual(2);\n        expect(target.QueryResultSettings.Sorting).toEqual({});\n        expect(target.cacheKeyHint).toEqual('top-25|skip-2|sortBy-undefined');\n    });\n\n    it('Should return correct query settings for moduleData', () => {\n        let mockRequest = buildMockRequest({query: {top: '25', skip: '2'}});\n        const target = QueryResultSettingsProxy.fromModuleData(mockRequest, {itemsPerPage: 50});\n        expect(target).toBeDefined();\n        expect(target.QueryResultSettings).toBeDefined();\n        expect(target.QueryResultSettings.Paging).toBeDefined();\n        expect(target.QueryResultSettings.Paging!.Top).toEqual(25);\n        expect(target.QueryResultSettings.Paging!.Skip).toEqual(2);\n        expect(target.QueryResultSettings.Sorting).toEqual({});\n        expect(target.cacheKeyHint).toEqual('top-25|skip-2|sortBy-undefined');\n    });\n});\n"]}