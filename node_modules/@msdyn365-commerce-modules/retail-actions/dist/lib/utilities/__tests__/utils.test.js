import 'jest';
import { generateKey } from '../utils';
describe('utils', () => {
    const input1 = ['hello', false, 'world', 'there', 1234, null];
    const input2 = ['foo', 'bar', 456, null, 'baz', undefined, true];
    it('can generate unique keys', () => {
        const result1 = generateKey(input1);
        const result2 = generateKey(input2);
        expect(result1).not.toEqual(result2);
    });
    it('can use custom separator', () => {
        const result1 = generateKey(input1, { separator: '!' });
        const result2 = generateKey(input2);
        expect(result1).not.toEqual(result2);
        expect(result1).toMatchSnapshot();
        expect(result2).toMatchSnapshot();
    });
    it('can user replacer', () => {
        const result1 = generateKey(input2);
        const result2 = generateKey(input2, { handler: (input) => {
                if (input === null) {
                    return 'I_AM_NULL';
                }
                return 'I_AM_UNDEFINED';
            } });
        expect(result1).not.toEqual(result2);
        expect(result2).toContain('I_AM_NULL');
        expect(result2).toContain('I_AM_UNDEFINED');
        expect(result2).toMatchSnapshot();
    });
});
//# sourceMappingURL=utils.test.js.map