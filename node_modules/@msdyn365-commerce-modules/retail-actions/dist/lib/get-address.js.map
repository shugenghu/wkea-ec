{"version":3,"file":"get-address.js","sourceRoot":"","sources":["../../src/get-address.ts"],"names":[],"mappings":"AACA,OAAO,EAAE,0BAA0B,EAAwB,MAAM,yBAAyB,CAAC;AAG3F,OAAO,EAAE,aAAa,EAAE,MAAM,mBAAmB,CAAC;AAClD,OAAO,WAAW,EAAE,EAAE,gBAAgB,EAAE,MAAM,gBAAgB,CAAC;AAE/D;;GAEG;AACH,MAAM,OAAO,YAAY;IAIrB,YAAY,WAAiC,EAAE,iBAA0B;QAKlE,gBAAW,GAAG,GAAG,EAAE,CAAC,aAAa,CAAC,cAAc,IAAI,CAAC,iBAAiB,EAAE,EAAE,IAAI,CAAC,WAAW,CAAC,CAAC;QAC5F,uBAAkB,GAAG,GAAG,EAAE,CAAC,YAAY,CAAC;QACxC,kBAAa,GAAG,GAAc,EAAE,CAAC,SAAS,CAAC;QAN9C,IAAI,CAAC,iBAAiB,GAAG,iBAAiB,CAAC;QAC3C,IAAI,CAAC,WAAW,GAAG,WAAW,CAAC;IACnC,CAAC;CAKJ;AAED;;;GAGG;AACH,MAAM,CAAC,MAAM,qBAAqB,GAAG,CAAC,SAA+B,EAAgB,EAAE;IACnF,MAAM,EAAE,cAAc,EAAE,GAAG,SAAS,CAAC;IACrC,IAAI,CAAC,cAAc,CAAC,IAAI,CAAC,eAAe,EAAE;QACtC,MAAM,IAAI,KAAK,CAAC,6DAA6D,CAAC,CAAC;KAClF;IAED,OAAO,IAAI,YAAY,CAAC,SAAS,CAAC,cAAc,CAAC,WAAW,CAAC,CAAC;AAClE,CAAC,CAAC;AAEF;;;;GAIG;AACH,MAAM,CAAC,KAAK,UAAU,gBAAgB,CAAC,KAAmB,EAAE,GAAmB;IAC3E,MAAM,aAAa,GAAG,IAAI,gBAAgB,CAAC,GAAG,CAAC,cAAc,CAAC,WAAW,EAAE,KAAK,CAAC,iBAAiB,CAAC,CAAC;IACpG,MAAM,QAAQ,GAAG,MAAM,WAAW,CAAC,aAAa,EAAE,GAAG,CAAC,CAAC;IAEvD,IAAI,CAAC,QAAQ,EAAE;QACX,MAAM,IAAI,KAAK,CAAC,0BAA0B,CAAC,CAAC;KAC/C;IAED,OAAO,QAAQ,CAAC,SAAS,IAAI,EAAE,CAAC;AACpC,CAAC;AAED;;;;GAIG;AACH,eAAe,0BAA0B,CAAY;IACjD,EAAE,EAAE,uDAAuD;IAC3D,MAAM,EAAsB,gBAAgB;IAC5C,KAAK,EAAgD,qBAAqB;CAC7E,CAAC,CAAC","sourcesContent":["import { CacheType, IAction, IActionContext, IActionInput, ICommerceApiSettings } from '@msdyn365-commerce/core';\nimport { createObservableDataAction, ICreateActionContext } from '@msdyn365-commerce/core';\nimport { Address } from '@msdyn365-commerce/retail-proxy';\n\nimport { buildCacheKey } from './utilities/utils';\nimport getCustomer, { GetCustomerInput } from './get-customer';\n\n/**\n *  Input class for the getAddress data action\n */\nexport class AddressInput implements IActionInput {\n    public userAccountNumber?: string;\n    private apiSettings: ICommerceApiSettings;\n\n    constructor(apiSettings: ICommerceApiSettings, userAccountNumber?: string) {\n        this.userAccountNumber = userAccountNumber;\n        this.apiSettings = apiSettings;\n    }\n\n    public getCacheKey = () => buildCacheKey(`GetAddress-${this.userAccountNumber}`, this.apiSettings);\n    public getCacheObjectType = () => 'GetAddress';\n    public dataCacheType = (): CacheType => 'request';\n}\n\n/**\n * createInput method for the getAddress method\n * @param inputData The input data passed to the createInput method\n */\nexport const createGetAddressInput = (inputData: ICreateActionContext): IActionInput => {\n    const { requestContext } = inputData;\n    if (!requestContext.user.isAuthenticated) {\n        throw new Error('Unable to create address input.  User is not authenticated.');\n    }\n\n    return new AddressInput(inputData.requestContext.apiSettings);\n};\n\n/**\n * The action method for the getAddress data action\n * @param input The action input\n * @param ctx The action context\n */\nexport async function getAddressAction(input: AddressInput, ctx: IActionContext): Promise<Address[]> {\n    const customerInput = new GetCustomerInput(ctx.requestContext.apiSettings, input.userAccountNumber);\n    const customer = await getCustomer(customerInput, ctx);\n\n    if (!customer) {\n        throw new Error('Not able to get customer');\n    }\n\n    return customer.Addresses || [];\n}\n\n/**\n * The getAddress data action\n * Gets a customers information via the read RetailServer API\n * Returns address information associated with the retrieved customer\n */\nexport default createObservableDataAction<Address[]>({\n    id: '@msdyn365-commerce-modules/retail-actions/get-address',\n    action: <IAction<Address[]>>getAddressAction,\n    input: <(args: ICreateActionContext) => IActionInput>createGetAddressInput\n});"]}