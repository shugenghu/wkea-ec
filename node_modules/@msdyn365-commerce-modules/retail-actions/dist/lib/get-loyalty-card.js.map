{"version":3,"file":"get-loyalty-card.js","sourceRoot":"","sources":["../../src/get-loyalty-card.ts"],"names":[],"mappings":"AAAA,OAAO,EAAa,0BAA0B,EAAqF,MAAM,yBAAyB,CAAC;AAEnK,OAAO,EAAE,4BAA4B,EAAE,mBAAmB,EAAE,MAAM,+EAA+E,CAAC;AAClJ,OAAO,EAAE,aAAa,EAAE,MAAM,SAAS,CAAC;AAExC;;GAEG;AACH,MAAM,OAAO,mBAAmB;IAI5B,YAAY,WAAiC,EAAE,iBAA0B;QAMlE,gBAAW,GAAG,GAAG,EAAE,CAAC,aAAa,CAAC,kBAAkB,IAAI,CAAC,iBAAiB,EAAE,EAAE,IAAI,CAAC,WAAW,CAAC,CAAC;QAChG,uBAAkB,GAAG,GAAG,EAAE,CAAC,gBAAgB,CAAC;QAC5C,kBAAa,GAAG,GAAc,EAAE,CAAC,SAAS,CAAC;QAP9C,IAAI,CAAC,iBAAiB,GAAG,iBAAiB,CAAC;QAC3C,IAAI,CAAC,WAAW,GAAG,WAAW,CAAC;IAEnC,CAAC;CAKJ;AAED;;;GAGG;AACH,MAAM,CAAC,MAAM,yBAAyB,GAAG,CAAC,SAA+B,EAAuB,EAAE;IAC9F,MAAM,EAAE,cAAc,EAAE,GAAG,SAAS,CAAC;IACrC,IAAI,CAAC,cAAc,CAAC,IAAI,CAAC,eAAe,EAAE;QACtC,MAAM,IAAI,KAAK,CAAC,sEAAsE,CAAC,CAAC;KAC3F;IAED,OAAO,IAAI,mBAAmB,CAAC,SAAS,CAAC,cAAc,CAAC,WAAW,CAAC,CAAC;AACzE,CAAC,CAAC;AAEF;;;;GAIG;AACH,MAAM,CAAC,KAAK,UAAU,gBAAgB,CAAC,KAA0B,EAAE,GAAmB;IAClF,OAAO,4BAA4B,CAAC,EAAE,aAAa,EAAE,GAAG,EAAE,mBAAmB,EAAE,EAAE,EAAE,EAAE,KAAK,CAAC,iBAAiB,IAAI,IAAI,CAAC;SAC5G,IAAI,CAAC,KAAK,CAAC,EAAE;QACV,IAAI,CAAC,KAAK,IAAI,KAAK,CAAC,MAAM,GAAG,CAAC,EAAE;YAC5B,OAAoB,EAAE,CAAC;SAC1B;QAED,MAAM,SAAS,GAAG,KAAK,CAAC,CAAC,CAAC,CAAC;QAE3B,OAAO,mBAAmB,CAAC,EAAE,aAAa,EAAE,GAAG,EAAE,EAAE,SAAS,CAAC,UAAW,CAAC;aACpE,IAAI,CAAC,IAAI,CAAC,EAAE;YACT,IAAI,CAAC,qBAAqB,GAAG,SAAS,CAAC,qBAAqB,CAAC;YAC7D,IAAI,CAAC,0BAA0B,GAAG,SAAS,CAAC,0BAA0B,CAAC;YACvE,OAAO,IAAI,CAAC;QAChB,CAAC,CAAC;aAED,KAAK,CAAC,KAAK,CAAC,EAAE;YACX,GAAG,CAAC,SAAS,CAAC,SAAS,CAAC,KAAK,CAAC,CAAC;YAC/B,GAAG,CAAC,SAAS,CAAC,KAAK,CAAC,4BAA4B,CAAC,CAAC;YAClD,MAAM,IAAI,KAAK,CAAC,4BAA4B,CAAC,CAAC;QAClD,CAAC,CAAC,CAAC;IACX,CAAC,CAAC;SACD,KAAK,CAAC,KAAK,CAAC,EAAE;QACX,GAAG,CAAC,SAAS,CAAC,SAAS,CAAC,KAAK,CAAC,OAAO,CAAC,CAAC;QACvC,GAAG,CAAC,SAAS,CAAC,KAAK,CAAC,sCAAsC,CAAC,CAAC;QAC5D,MAAM,IAAI,KAAK,CAAC,sCAAsC,CAAC,CAAC;IAC5D,CAAC,CAAC,CAAC;AACf,CAAC;AAED;;;GAGG;AACH,eAAe,0BAA0B,CAAc;IACnD,EAAE,EAAE,4DAA4D;IAChE,MAAM,EAAwB,gBAAgB;IAC9C,KAAK,EAAgD,yBAAyB;CACjF,CAAC,CAAC","sourcesContent":["import { CacheType, createObservableDataAction, IAction, IActionContext, IActionInput, ICommerceApiSettings, ICreateActionContext } from '@msdyn365-commerce/core';\nimport { LoyaltyCard } from '@msdyn365-commerce/retail-proxy';\nimport { getCustomerLoyaltyCardsAsync, getLoyaltyCardAsync } from '@msdyn365-commerce/retail-proxy/dist/DataActions/StoreOperationsDataActions.g';\nimport { buildCacheKey } from './index';\n\n/**\n *  Input class for the getLoyaltyCard data action\n */\nexport class GetLoyaltyCardInput implements IActionInput {\n    public userAccountNumber?: string;\n    public apiSettings: ICommerceApiSettings;\n\n    constructor(apiSettings: ICommerceApiSettings, userAccountNumber?: string) {\n        this.userAccountNumber = userAccountNumber;\n        this.apiSettings = apiSettings;\n\n    }\n\n    public getCacheKey = () => buildCacheKey(`GetLoyaltyCard-${this.userAccountNumber}`, this.apiSettings);\n    public getCacheObjectType = () => 'GetLoyaltyCard';\n    public dataCacheType = (): CacheType => 'request';\n}\n\n/**\n * createInput method for the getLoyaltyCard method\n * @param inputData The input data passed to the createInput method\n */\nexport const createGetLoyaltyCardInput = (inputData: ICreateActionContext): GetLoyaltyCardInput => {\n    const { requestContext } = inputData;\n    if (!requestContext.user.isAuthenticated) {\n        throw new Error('Unable to create get loyalty card input.  User is not authenticated.');\n    }\n\n    return new GetLoyaltyCardInput(inputData.requestContext.apiSettings);\n};\n\n/**\n * The action method for the getLoyaltyCard data action\n * @param input The action input\n * @param ctx The action context\n */\nexport async function getLoyaltyAction(input: GetLoyaltyCardInput, ctx: IActionContext): Promise<LoyaltyCard> {\n    return getCustomerLoyaltyCardsAsync({ callerContext: ctx, queryResultSettings: {} }, input.userAccountNumber || null)\n            .then(cards => {\n                if (!cards || cards.length < 1) {\n                    return <LoyaltyCard>{};\n                }\n\n                const firstCard = cards[0];\n\n                return getLoyaltyCardAsync({ callerContext: ctx }, firstCard.CardNumber!)\n                    .then(card => {\n                        card.LoyaltyEnrollmentDate = firstCard.LoyaltyEnrollmentDate;\n                        card.LoyaltyEnrollmentDateLocal = firstCard.LoyaltyEnrollmentDateLocal;\n                        return card;\n                    })\n\n                    .catch(error => {\n                        ctx.telemetry.exception(error);\n                        ctx.telemetry.debug(`Unable to get loyalty card`);\n                        throw new Error('Unable to get loyalty card');\n                    });\n            })\n            .catch(error => {\n                ctx.telemetry.exception(error.message);\n                ctx.telemetry.debug(`Unable to get customers loyalty card`);\n                throw new Error('Unable to get customers loyalty card');\n            });\n}\n\n/**\n * The getLoyaltyCard data action\n * Returns the loyalty card belonging to the customer\n */\nexport default createObservableDataAction<LoyaltyCard>({\n    id: '@msdyn365-commerce-modules/retail-actions/get-loyalty-card',\n    action: <IAction<LoyaltyCard>>getLoyaltyAction,\n    input: <(args: ICreateActionContext) => IActionInput>createGetLoyaltyCardInput\n});\n"]}