{"version":3,"file":"get-items-in-wishlist.js","sourceRoot":"","sources":["../../src/get-items-in-wishlist.ts"],"names":[],"mappings":"AACA,OAAO,EAAa,0BAA0B,EAA+D,MAAM,yBAAyB,CAAC;AAG7I,OAAO,EAAE,kBAAkB,EAAE,MAAM,6EAA6E,CAAC;AACjH,OAAO,EAAE,gBAAgB,EAAE,eAAe,EAAE,wCAAwC,EAAE,MAAM,SAAS,CAAC;AAEtG;;GAEG;AACH,MAAM,OAAO,mBAAmB;IAAhC;QACW,gBAAW,GAAG,GAAG,EAAE,CAAC,qBAAqB,CAAC;QAC1C,uBAAkB,GAAG,GAAG,EAAE,CAAC,qBAAqB,CAAC;QACjD,kBAAa,GAAG,GAAc,EAAE,CAAC,MAAM,CAAC;IACnD,CAAC;CAAA;AAED,MAAM,WAAW,GAAG,CAAC,SAA+B,EAAE,EAAE;IACpD,OAAO,IAAI,mBAAmB,EAAE,CAAC;AACrC,CAAC,CAAC;AAEF;;GAEG;AACH,MAAM,CAAC,KAAK,UAAU,sBAAsB,CAAC,KAA0B,EAAE,GAAmB;IACxF,sEAAsE;IACtE,IAAI,CAAC,KAAK,EAAE;QACR,MAAM,IAAI,KAAK,CAAC,8DAA8D,CAAC,CAAC;KACnF;IAED,IAAG,GAAG,CAAC,cAAc,CAAC,IAAI,CAAC,eAAe,EAAE;QACxC,MAAM,SAAS,GAAG,MAAM,kBAAkB,CAAC,EAAE,aAAa,EAAE,GAAG,EAAE,mBAAmB,EAAE,EAAE,EAAE,EAAE,IAAI,CAAC,CAAC;QAElG,IAAG,SAAS,IAAI,SAAS,CAAC,MAAM,GAAG,CAAC,EAAE;YAClC,MAAM,aAAa,GAAuB,EAAE,CAAC;YAC7C,IAAG,SAAS,CAAC,CAAC,CAAC,CAAC,iBAAiB,EAAE;gBAC/B,SAAS,CAAC,CAAC,CAAC,CAAC,iBAAiB,CAAC,OAAO,CAAC,CAAC,gBAAkC,EAAE,EAAE;oBAC1E,IAAG,gBAAgB,CAAC,SAAS,EAAE;wBAC3B,aAAa,CAAC,IAAI,CAAC,IAAI,gBAAgB,CAAC,gBAAgB,CAAC,SAAS,EAAE,GAAG,CAAC,cAAc,CAAC,WAAW,EAAE,wCAAwC,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC;qBACvJ;gBACL,CAAC,CAAC,CAAC;aACN;YAED,IAAG,aAAa,CAAC,MAAM,GAAG,CAAC,EAAE;gBACzB,OAAO,eAAe,CAAC,aAAa,EAAE,GAAG,CAAC;qBACrC,IAAI,CAAC,QAAQ,CAAC,EAAE;oBACb,IAAI,QAAQ,EAAE;wBACV,OAAO,QAAQ,CAAC;qBACnB;yBAAM;wBACH,OAAsB,EAAE,CAAC;qBAC5B;gBACL,CAAC,CAAC;qBACD,KAAK,CAAC,KAAK,CAAC,EAAE;oBACX,GAAG,CAAC,KAAK,CAAC,KAAK,CAAC,CAAC;oBACjB,GAAG,CAAC,SAAS,CAAC,SAAS,CAAC,KAAK,CAAC,CAAC;oBAC/B,GAAG,CAAC,SAAS,CAAC,KAAK,CAAC,yEAAyE,CAAC,CAAC;oBAC/F,MAAM,IAAI,KAAK,CAAC,yEAAyE,CAAC,CAAC;gBAC/F,CAAC,CAAC,CAAC;aACV;iBAAM;gBACH,GAAG,CAAC,KAAK,CAAC,kCAAkC,CAAC,CAAC;aACjD;SACJ;aAAM;YACH,GAAG,CAAC,KAAK,CAAC,oEAAoE,CAAC,CAAC;YAChF,OAAsB,EAAE,CAAC;SAC5B;KACJ;IACD,GAAG,CAAC,KAAK,CAAC,4DAA4D,CAAC,CAAC;IACxE,OAAsB,EAAE,CAAC;AAC7B,CAAC;AAED,eAAe,0BAA0B,CAAC;IACtC,EAAE,EAAE,iEAAiE;IACrE,MAAM,EAA0B,sBAAsB;IACtD,KAAK,EAAE,WAAW;CACrB,CAAC,CAAC","sourcesContent":["import { FullProduct } from '@msdyn365-commerce/commerce-entities';\nimport { CacheType, createObservableDataAction, IAction, IActionContext, IActionInput, ICreateActionContext } from '@msdyn365-commerce/core';\nimport { CommerceListLine } from '@msdyn365-commerce/retail-proxy';\n\nimport { getByCustomerAsync } from '@msdyn365-commerce/retail-proxy/dist/DataActions/CommerceListsDataActions.g';\nimport { FullProductInput, getFullProducts, getProductDetailsCriteriaFromActionInput } from './index';\n\n/**\n * Input class for getActiveWishlistItems data action\n */\nexport class ActiveWishlistInput implements IActionInput {\n    public getCacheKey = () => `ActiveWishlistItems`;\n    public getCacheObjectType = () => 'ActiveWishlistItems';\n    public dataCacheType = (): CacheType => 'none';\n}\n\nconst createInput = (inputData: ICreateActionContext) => {\n    return new ActiveWishlistInput();\n};\n\n/**\n * Calls the Retail API and returns a CommerceList object based on the passed GetCartInput\n */\nexport async function getActiveWishlistItems(input: ActiveWishlistInput, ctx: IActionContext): Promise<FullProduct[]> {\n    // If no cart ID is provided in input, we need to create a cart object\n    if (!input) {\n        throw new Error('[getActiveWishlistItems]No valid Input was provided, failing');\n    }\n\n    if(ctx.requestContext.user.isAuthenticated) {\n        const wishlists = await getByCustomerAsync({ callerContext: ctx, queryResultSettings: {} }, null);\n\n        if(wishlists && wishlists.length > 0) {\n            const productInputs: FullProductInput[] = [];\n            if(wishlists[0].CommerceListLines) {\n                wishlists[0].CommerceListLines.forEach((commerceListLine: CommerceListLine) => {\n                    if(commerceListLine.ProductId) {\n                        productInputs.push(new FullProductInput(commerceListLine.ProductId, ctx.requestContext.apiSettings, getProductDetailsCriteriaFromActionInput(ctx)));\n                    }\n                });\n            }\n\n            if(productInputs.length > 0) {\n                return getFullProducts(productInputs, ctx)\n                    .then(products => {\n                        if (products) {\n                            return products;\n                        } else {\n                            return <FullProduct[]>[];\n                        }\n                    })\n                    .catch(error => {\n                        ctx.trace(error);\n                        ctx.telemetry.exception(error);\n                        ctx.telemetry.debug(`[getActiveWishlistItems]Unable to hydrate cart with product information`);\n                        throw new Error('[getActiveWishlistItems]Unable to hydrate cart with product information');\n                    });\n            } else {\n                ctx.trace('No productIds found for wishlist');\n            }\n        } else {\n            ctx.trace('[getActiveWishlistItems]Not able to get wishlists for the customer');\n            return <FullProduct[]>[];\n        }\n    }\n    ctx.trace('[getActiveWishlistItems]User token not found for wishlists');\n    return <FullProduct[]>[];\n}\n\nexport default createObservableDataAction({\n    id: '@msdyn365-commerce-modules/retail-actions/get-items-in-wishlist',\n    action: <IAction<FullProduct[]>>getActiveWishlistItems,\n    input: createInput\n});\n"]}