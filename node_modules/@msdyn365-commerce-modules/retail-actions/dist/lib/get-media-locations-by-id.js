import { createObservableDataAction } from '@msdyn365-commerce/core';
import { generateImageUrl, buildCacheKey } from './utilities/utils';
import { getMediaLocationsAsync } from '@msdyn365-commerce/retail-proxy/dist/DataActions/ProductsDataActions.g';
/**
 * Product Input
 */
export class MediaLocationsByIdInput {
    constructor(apiSettings, productId, catalogId) {
        this.getCacheKey = () => buildCacheKey(`MediaLocationID-${this.productId && this.productId.toString()}`, this.apiSettings);
        this.getCacheObjectType = () => 'MediaLocations';
        this.dataCacheType = () => 'none';
        this.productId = productId;
        this.channelId = +apiSettings.channelId;
        this.catalogId = catalogId || 0;
        this.apiSettings = apiSettings;
    }
}
/**
 * Creates the input required to make the retail api call
 */
export const createMediaLocationsByIdInput = (inputData) => {
    const productId = inputData.config && +inputData.config.productId || undefined;
    return new MediaLocationsByIdInput(inputData.requestContext.apiSettings, productId, undefined);
};
/**
 * Calls the Retail API and returns the product based on the passed MediaLocationsByIdInput
 */
export async function getMediaLocationsByIdAction(input, ctx) {
    if (input.productId) {
        return getMediaLocationsAsync({ callerContext: ctx, queryResultSettings: {} }, input.productId, input.channelId, input.catalogId).then(response => {
            return response.map((mediaLocation) => {
                mediaLocation.Uri = generateImageUrl(mediaLocation.Uri, ctx.requestContext.apiSettings);
                mediaLocation.AltText = mediaLocation.AltText ? mediaLocation.AltText : '';
                return mediaLocation;
            });
        });
    }
    return [];
}
export default createObservableDataAction({
    id: '@msdyn365-commerce-modules/retail-actions/get-media-locations-by-id',
    action: getMediaLocationsByIdAction,
    input: createMediaLocationsByIdInput
});
//# sourceMappingURL=get-media-locations-by-id.js.map