import { createObservableDataAction } from '@msdyn365-commerce/core';
import { getFeatureStatesAsync } from '@msdyn365-commerce/retail-proxy/dist/DataActions/StoreOperationsDataActions.g';
/**
 *  Input class for the getFeatureState data action
 */
export class FeatureStateInput {
    constructor(featureName) {
        this.getCacheKey = () => `${this.featureName}`;
        this.getCacheObjectType = () => 'FeatureState';
        this.dataCacheType = () => 'instance';
        this.featureName = featureName;
    }
}
/**
 * createInput method for the getFeatureState method
 * @param inputData The input data passed to the createInput method
 */
export const createGetFeatureStateInput = (inputData) => {
    // Ensure your module has a config property 'featureName'
    if (inputData.config && inputData.config.featureName) {
        // Create and return an input for the data action using the module configuration data.
        return new FeatureStateInput(inputData.config.featureName);
    }
    else {
        throw new Error(`Default data definition for a feature check must also include config parameter "featureName" in your module.`);
    }
};
/**
 * The action method for the getFeatureState data action
 * @param input The action input
 * @param ctx The action context
 */
export async function getFeatureStateAction(input, ctx) {
    const featureNames = input.featureName ? input.featureName.split(",").map(featureName => featureName.trim())
        : ['Dynamics.AX.Application.RetailB2BEcommerceFeature'];
    const featureState = await getFeatureStatesAsync({ callerContext: ctx }, featureNames);
    return featureState;
}
/**
 * The getFeatureState data action
 * Gets the feature state via the read RetailServer API
 * Returns address information associated with the retrieved customer
 */
export default createObservableDataAction({
    id: '@msdyn365-commerce-modules/retail-actions/get-feature-state',
    action: getFeatureStateAction,
    input: createGetFeatureStateInput
});
//# sourceMappingURL=get-feature-state.js.map