{"version":3,"file":"get-selected-variant.js","sourceRoot":"","sources":["../../src/get-selected-variant.ts"],"names":[],"mappings":"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","sourcesContent":["import { CacheType, IAction, IActionInput } from '@msdyn365-commerce/core';\nimport { createObservableDataAction, IActionContext, IAny, ICreateActionContext, IGeneric } from '@msdyn365-commerce/core';\nimport { generateProductImageUrl, getSelectedProductIdFromActionInput } from './utilities/utils';\n\nimport { getByIdAsync, getVariantsByDimensionValuesAsync } from '@msdyn365-commerce/retail-proxy/dist/DataActions/ProductsDataActions.g';\nimport { ProductDimension, SimpleProduct } from '@msdyn365-commerce/retail-proxy/dist/Entities/CommerceTypes.g';\n\n/**\n * Get selected variant action input class\n */\nexport class SelectedVariantInput implements IActionInput {\n    public productId: number;\n    public channelId: number;\n    public matchingDimensionValues: ProductDimension[];\n\n    constructor(productId: number, channelId: number, matchingDimensionValues?: ProductDimension[]) {\n        this.productId = productId;\n        this.channelId = channelId;\n        this.matchingDimensionValues = matchingDimensionValues || [];\n    }\n\n    public getCacheKey = () => `SelectedVariant`;\n    public getCacheObjectType = () => 'SimpleProduct';\n    public dataCacheType = (): CacheType => 'none';\n}\n\n/**\n * CreateInput method for the getSelectedVariant data action\n * @param inputData The input data passed to the createInput method\n */\nconst createInput = (inputData: ICreateActionContext<IGeneric<IAny>>): SelectedVariantInput => {\n    const productId = getSelectedProductIdFromActionInput(inputData);\n\n    if (productId) {\n        return new SelectedVariantInput(+productId, +inputData.requestContext.apiSettings.channelId, []);\n    } else {\n        throw new Error('Unable to create SelectedVariantInput, no productId found on module config or query');\n    }\n};\n\n/**\n * Action method for the getSelectedVariant data aciton\n * @param input The action input class\n * @param ctx The action context\n */\nasync function getSelectedVariantAction(input: SelectedVariantInput, ctx: IActionContext): Promise<SimpleProduct | null> {\n    let product: SimpleProduct | null = null;\n\n    const response = await getByIdAsync({ callerContext: ctx }, input.productId, input.channelId);\n\n    const baseProduct: SimpleProduct = Array.isArray(response) ? response[0] : response;\n\n    // Need to dereference this before editing it. Otherwise we might not\n    // properly get the mobx events because if things aren't properly observable\n    // they won't fire when you set them, and then if you don't deref the value in\n    // the cache will match the value when you try to save it, so it won't detect any\n    // changes there either\n    product = { ...baseProduct };\n\n    if (product) {\n        let baseProductHadUnmatchedDimension: boolean = false;\n        if (product.Dimensions) {\n            product.Dimensions.map(dimension => {\n                const matchedTargetDimension = input.matchingDimensionValues.find(\n                    targetDimension => targetDimension.DimensionTypeValue === dimension.DimensionTypeValue\n                );\n\n                if (matchedTargetDimension) {\n                    dimension.DimensionValue = matchedTargetDimension.DimensionValue;\n                } else {\n                    baseProductHadUnmatchedDimension = true;\n                }\n            });\n        }\n\n        if (!baseProductHadUnmatchedDimension && input.matchingDimensionValues.length > 0) {\n            const variants = await getVariantsByDimensionValuesAsync(\n                { callerContext: ctx, queryResultSettings: {} },\n                baseProduct.RecordId,\n                input.channelId,\n                input.matchingDimensionValues\n            );\n\n            if (variants && variants.length > 0) {\n                product = variants[0];\n            }\n        }\n\n        const newImageUrl = generateProductImageUrl(product, ctx.requestContext.apiSettings);\n\n        if (newImageUrl) {\n            product.PrimaryImageUrl = newImageUrl;\n        }\n    }\n\n    return product;\n}\n\n/**\n * The complete getSelectedVariant data action\n */\nexport default createObservableDataAction({\n    id: '@msdyn365-commerce-modules/retail-actions/get-selected-variant',\n    action: <IAction<SimpleProduct | null>>getSelectedVariantAction,\n    input: createInput\n});\n"]}