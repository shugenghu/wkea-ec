{"version":3,"file":"get-media-locations-by-id.js","sourceRoot":"","sources":["../../src/get-media-locations-by-id.ts"],"names":[],"mappings":"AACA,OAAO,EAAE,0BAA0B,EAAwD,MAAM,yBAAyB,CAAC;AAE3H,OAAO,EAAE,gBAAgB,EAAE,aAAa,EAAE,MAAM,mBAAmB,CAAC;AACpE,OAAO,EAAE,sBAAsB,EAAE,MAAM,wEAAwE,CAAC;AAChH;;GAEG;AACH,MAAM,OAAO,uBAAuB;IAMhC,YAAY,WAAiC,EAAE,SAAkB,EAAE,SAAkB;QAO9E,gBAAW,GAAG,GAAG,EAAE,CAAC,aAAa,CAAC,mBAAmB,IAAI,CAAC,SAAS,IAAI,IAAI,CAAC,SAAS,CAAC,QAAQ,EAAE,EAAE,EAAE,IAAI,CAAC,WAAW,CAAC,CAAC;QACtH,uBAAkB,GAAG,GAAG,EAAE,CAAC,gBAAgB,CAAC;QAC5C,kBAAa,GAAG,GAAc,EAAE,CAAC,MAAM,CAAC;QAR3C,IAAI,CAAC,SAAS,GAAG,SAAS,CAAC;QAC3B,IAAI,CAAC,SAAS,GAAG,CAAC,WAAW,CAAC,SAAS,CAAC;QACxC,IAAI,CAAC,SAAS,GAAG,SAAS,IAAI,CAAC,CAAC;QAChC,IAAI,CAAC,WAAW,GAAG,WAAW,CAAC;IACnC,CAAC;CAKJ;AAED;;GAEG;AACH,MAAM,CAAC,MAAM,6BAA6B,GAAG,CAAC,SAA+C,EAA2B,EAAE;IACtH,MAAM,SAAS,GAAG,SAAS,CAAC,MAAM,IAAI,CAAC,SAAS,CAAC,MAAM,CAAC,SAAS,IAAI,SAAS,CAAC;IAC/E,OAAO,IAAI,uBAAuB,CAAC,SAAS,CAAC,cAAc,CAAC,WAAW,EAAE,SAAS,EAAE,SAAS,CAAC,CAAC;AACnG,CAAC,CAAC;AAEF;;GAEG;AACH,MAAM,CAAC,KAAK,UAAU,2BAA2B,CAAC,KAA8B,EAAE,GAAmB;IACjG,IAAI,KAAK,CAAC,SAAS,EAAE;QACjB,OAAO,sBAAsB,CAAC,EAAE,aAAa,EAAE,GAAG,EAAE,mBAAmB,EAAE,EAAE,EAAE,EAAE,KAAK,CAAC,SAAS,EAAE,KAAK,CAAC,SAAS,EAAE,KAAK,CAAC,SAAS,CAAC,CAAC,IAAI,CAAC,QAAQ,CAAC,EAAE;YAC9I,OAAO,QAAQ,CAAC,GAAG,CACf,CAAC,aAA4B,EAAiB,EAAE;gBAC5C,aAAa,CAAC,GAAG,GAAG,gBAAgB,CAAC,aAAa,CAAC,GAAG,EAAE,GAAG,CAAC,cAAc,CAAC,WAAW,CAAC,CAAC;gBACxF,aAAa,CAAC,OAAO,GAAG,aAAa,CAAC,OAAO,CAAC,CAAC,CAAC,aAAa,CAAC,OAAO,CAAC,CAAC,CAAC,EAAE,CAAC;gBAC3E,OAAO,aAAa,CAAC;YACzB,CAAC,CACJ,CAAC;QACN,CAAC,CAAC,CAAC;KACN;IACD,OAAO,EAAE,CAAC;AACd,CAAC;AAED,eAAe,0BAA0B,CAAC;IACtC,EAAE,EAAE,qEAAqE;IACzE,MAAM,EAAmC,2BAA2B;IACpE,KAAK,EAAE,6BAA6B;CACvC,CAAC,CAAC","sourcesContent":["import { CacheType, IAction, IActionInput, ICommerceApiSettings } from '@msdyn365-commerce/core';\nimport { createObservableDataAction, IActionContext, IAny, ICreateActionContext, IGeneric } from '@msdyn365-commerce/core';\nimport { MediaLocation } from '@msdyn365-commerce/retail-proxy/dist/Entities/CommerceTypes.g';\nimport { generateImageUrl, buildCacheKey } from './utilities/utils';\nimport { getMediaLocationsAsync } from '@msdyn365-commerce/retail-proxy/dist/DataActions/ProductsDataActions.g';\n/**\n * Product Input\n */\nexport class MediaLocationsByIdInput implements IActionInput {\n    public productId?: number;\n    public channelId: number;\n    public catalogId: number;\n    private apiSettings: ICommerceApiSettings;\n\n    constructor(apiSettings: ICommerceApiSettings, productId?: number, catalogId?: number) {\n        this.productId = productId;\n        this.channelId = +apiSettings.channelId;\n        this.catalogId = catalogId || 0;\n        this.apiSettings = apiSettings;\n    }\n\n    public getCacheKey = () => buildCacheKey(`MediaLocationID-${this.productId && this.productId.toString()}`, this.apiSettings);\n    public getCacheObjectType = () => 'MediaLocations';\n    public dataCacheType = (): CacheType => 'none';\n}\n\n/**\n * Creates the input required to make the retail api call\n */\nexport const createMediaLocationsByIdInput = (inputData: ICreateActionContext<IGeneric<IAny>>): MediaLocationsByIdInput => {\n    const productId = inputData.config && +inputData.config.productId || undefined;\n    return new MediaLocationsByIdInput(inputData.requestContext.apiSettings, productId, undefined);\n};\n\n/**\n * Calls the Retail API and returns the product based on the passed MediaLocationsByIdInput\n */\nexport async function getMediaLocationsByIdAction(input: MediaLocationsByIdInput, ctx: IActionContext): Promise<MediaLocation[]> {\n    if (input.productId) {\n        return getMediaLocationsAsync({ callerContext: ctx, queryResultSettings: {} }, input.productId, input.channelId, input.catalogId).then(response => {\n            return response.map(\n                (mediaLocation: MediaLocation): MediaLocation => {\n                    mediaLocation.Uri = generateImageUrl(mediaLocation.Uri, ctx.requestContext.apiSettings);\n                    mediaLocation.AltText = mediaLocation.AltText ? mediaLocation.AltText : '';\n                    return mediaLocation;\n                }\n            );\n        });\n    }\n    return [];\n}\n\nexport default createObservableDataAction({\n    id: '@msdyn365-commerce-modules/retail-actions/get-media-locations-by-id',\n    action: <IAction<MediaLocation[] | null>>getMediaLocationsByIdAction,\n    input: createMediaLocationsByIdInput\n});\n"]}