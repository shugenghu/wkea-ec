/*---------------------------------------------------------------------------------------------
 *  Copyright (c) Microsoft Corporation. All rights reserved.
 *  Licensed under the MIT License. See License.txt in the project root for license information.
 *--------------------------------------------------------------------------------------------*/
import { createObservableDataAction, sendRequest } from '@msdyn365-commerce/core';
import { GetRatingsSummaryInput, getSelectedProductIdFromActionInput } from './index';
import { getRnrEndpointId, getRnrPartnerId } from './utilities/getRnrKeys';
export const createInput = (input) => {
    const productId = getSelectedProductIdFromActionInput(input);
    if (productId) {
        return new GetRatingsSummaryInput(productId, getRnrPartnerId(input), getRnrEndpointId(input));
    }
    throw new Error('[GetRatingsSummary] Not all necessary parameters found while creating Input for getRatingsSummaryApi');
};
/**
 * This function gets the ratings summary
 */
async function getRatingsSummary(input, ctx) {
    if (!inputIsValid(input)) {
        ctx.trace(`[GetRatingsSummary] Failed to get ratings summary for product`);
        return {};
    }
    const requestUrl = `${input.serviceEndpoint}/v2.0/ratings/product/${input.productId}/summary?` +
        `tenantId=${input.tenantId}`;
    return sendRequest(requestUrl, 'get').then((response) => {
        return response.data;
    }).catch((error) => {
        ctx.trace(`[GetRatingsSummary] Failed to get ratings summary for product`);
        throw error;
    });
}
function inputIsValid(input) {
    return input && input.productId.length > 0 && input.tenantId.length > 0;
}
export default createObservableDataAction({
    id: '@msdyn365-commerce-modules/retail-actions/get-ratings-summary',
    action: getRatingsSummary,
    input: createInput
});
//# sourceMappingURL=get-ratings-summary.js.map