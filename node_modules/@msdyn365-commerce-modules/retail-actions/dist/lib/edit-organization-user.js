import { createObservableDataAction } from '@msdyn365-commerce/core';
import { updateAsync } from '@msdyn365-commerce/retail-proxy/dist/DataActions/BusinessPartnerUsersDataActions.g';
/**
 * Input class for edit organization user data action
 */
export class EditOrganizationUserInput {
    constructor(newUser) {
        this.getCacheKey = () => `EditOrganizationUser`;
        this.getCacheObjectType = () => 'EditOrganizationUser';
        this.dataCacheType = () => 'none';
        this.user = newUser;
    }
}
/**
 * Input class for edit organization user data action
 */
export const createEditOrganizationUserInput = (inputData, newUser) => {
    const { requestContext } = inputData;
    // Check if the user is authenticated.
    if (!requestContext.user.isAuthenticated) {
        throw new Error('User is not logged in.');
    }
    return new EditOrganizationUserInput(newUser);
};
export async function editOrganizationUser(input, ctx) {
    const { user } = input;
    return updateAsync({ callerContext: ctx }, user)
        .then(updatedUser => {
        return updatedUser;
    })
        .catch(() => {
        ctx.telemetry.debug('[Edit-organization-user] Unable to update BusinessPartnerUser account');
        throw new Error('[Edit-organization-user] Unable to update BusinessPartnerUser account');
    });
}
/**
 * The EditOrganizationUser data action
 * Takes in an instance of a BusinessPartnerUser and updates the
 * same user with the new information.
 */
export default createObservableDataAction({
    id: '@msdyn365-commerce-modules/retail-actions/Edit-organization-user',
    action: editOrganizationUser,
    input: createEditOrganizationUserInput,
});
//# sourceMappingURL=edit-organization-user.js.map