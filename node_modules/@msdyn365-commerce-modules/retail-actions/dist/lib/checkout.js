import { createObservableDataAction, sendCommerceRequest } from '@msdyn365-commerce/core';
/**
 * Check Out action Input
 */
export class CheckOutInput {
    constructor(cartId, cartVersion, receiptEmail, cartTenderLines, billingAddress) {
        this.getCacheKey = () => `${this.cartId}-${this.cartVersion}`;
        this.getCacheObjectType = () => 'CheckOut';
        this.dataCacheType = () => 'none';
        this.cartId = cartId;
        this.cartVersion = cartVersion;
        this.receiptEmail = receiptEmail;
        this.cartTenderLines = cartTenderLines;
        this.billingAddress = billingAddress;
    }
}
/**
 * Calls the Retail API to check out and returns sales order
 */
export async function checkOutAction(input, ctx) {
    const { apiSettings } = ctx.requestContext;
    const requestUrl = `${apiSettings.baseUrl}Commerce/Carts('${input.cartId}')/Checkout?api-version=7.3`;
    const requestOptions = {
        headers: {
            oun: apiSettings.oun,
            'Content-Type': 'application/json'
        }
    };
    if (requestOptions.headers && ctx.requestContext.user.token) {
        requestOptions.headers.Authorization = `id_token ${ctx.requestContext.user.token}`;
    }
    if (input.cartTenderLines && input.cartTenderLines.length) {
        input.cartTenderLines = input.cartTenderLines.map((cartTenderLineItem) => {
            // @ts-ignore
            // tslint:disable-next-line:prefer-type-cast
            cartTenderLineItem['@odata.type'] = '#Microsoft.Dynamics.Commerce.Runtime.DataModel.CartTenderLine';
            // @ts-ignore
            // tslint:disable-next-line:prefer-type-cast
            cartTenderLineItem['Amount@odata.type'] = '#Decimal';
            if (cartTenderLineItem.TokenizedPaymentCard) {
                // @ts-ignore
                // tslint:disable-next-line:prefer-type-cast
                cartTenderLineItem.TokenizedPaymentCard['@odata.type'] =
                    '#Microsoft.Dynamics.Commerce.Runtime.DataModel.TokenizedPaymentCard';
                // Force the House prop to be set, so that call succeeds
                // @ts-ignore: House prop not yet typed
                if (!cartTenderLineItem.TokenizedPaymentCard.House) {
                    // @ts-ignore: House prop not yet typed
                    cartTenderLineItem.TokenizedPaymentCard.House = 'N/A';
                }
                if (cartTenderLineItem.TokenizedPaymentCard.CardTokenInfo) {
                    // @ts-ignore
                    // tslint:disable-next-line:prefer-type-cast
                    cartTenderLineItem.TokenizedPaymentCard.CardTokenInfo['@odata.type'] =
                        '#Microsoft.Dynamics.Commerce.Runtime.DataModel.CardTokenInfo';
                }
                if (input.billingAddress) {
                    const { Phone, ThreeLetterISORegionName = '', Street, City, State, ZipCode } = input.billingAddress;
                    cartTenderLineItem.TokenizedPaymentCard = {
                        ...cartTenderLineItem.TokenizedPaymentCard,
                        Phone,
                        Country: ThreeLetterISORegionName.toUpperCase(),
                        Address1: Street,
                        City,
                        State,
                        Zip: ZipCode
                    };
                }
            }
            return cartTenderLineItem;
        });
    }
    const requestBody = {
        receiptEmail: input.receiptEmail,
        cartVersion: input.cartVersion || null,
        ...(input.cartTenderLines && { cartTenderLines: input.cartTenderLines })
    };
    // Perform check-out operation
    return sendCommerceRequest(requestUrl, 'post', requestBody, requestOptions).then((response) => {
        if (response.status >= 200 && response.status < 300 && response.data) {
            return response.data;
        }
        else if (response.data) {
            throw response.data;
        }
        throw new Error('[checkOutAction] Invalid response recieved from RetailServer');
    });
}
export default createObservableDataAction({
    id: '@msdyn365-commerce-modules/retail-actions/checkout',
    action: checkOutAction
});
//# sourceMappingURL=checkout.js.map