{"version":3,"file":"delete-organization-user.js","sourceRoot":"","sources":["../../src/delete-organization-user.ts"],"names":[],"mappings":"AAAA,OAAO,EAAa,0BAA0B,EAA+E,MAAM,yBAAyB,CAAC;AAE7J,OAAO,EAAE,WAAW,EAAE,MAAM,oFAAoF,CAAC;AACjH;;GAEG;AACH,MAAM,OAAO,2BAA2B;IAGpC,YAAY,OAA4B;QAIjC,gBAAW,GAAG,GAAG,EAAE,CAAC,wBAAwB,CAAC;QAC7C,uBAAkB,GAAG,GAAG,EAAE,CAAC,wBAAwB,CAAC;QACpD,kBAAa,GAAG,GAAc,EAAE,CAAC,MAAM,CAAC;QAL3C,IAAI,CAAC,IAAI,GAAG,OAAO,CAAC;IACxB,CAAC;CAKJ;AAED;;GAEG;AACH,MAAM,CAAC,MAAM,iCAAiC,GAAG,CAAC,SAA+C,EAAE,OAA4B,EAAgB,EAAE;IAC7I,MAAM,EAAE,cAAc,EAAE,GAAG,SAAS,CAAC;IAErC,sCAAsC;IACtC,IAAI,CAAC,cAAc,CAAC,IAAI,CAAC,eAAe,EAAE;QACtC,MAAM,IAAI,KAAK,CAAC,wBAAwB,CAAC,CAAC;KAC7C;IAED,OAAO,IAAI,2BAA2B,CAAC,OAAO,CAAC,CAAC;AACpD,CAAC,CAAC;AAEF;;;;;;GAMG;AACH,MAAM,CAAC,KAAK,UAAU,sBAAsB,CAAC,KAAkC,EAAE,GAAmB;IAChG,MAAM,EAAE,IAAI,EAAE,GAAG,KAAK,CAAC;IAEvB,OAAO,WAAW,CAAC,EAAE,aAAa,EAAE,GAAG,EAAC,EAAE,IAAI,CAAC;SAC1C,KAAK,CAAC,KAAK,CAAC,EAAE;QACX,OAAO,CAAC,GAAG,CAAC,KAAK,CAAC,CAAC;QACnB,GAAG,CAAC,SAAS,CAAC,KAAK,CAAC,yEAAyE,CAAC,CAAC;QAC/F,MAAM,IAAI,KAAK,CAAC,yEAAyE,CAAC,CAAC;IAC/F,CAAC,CAAC,CAAC;AACX,CAAC;AAED;;;;;;GAMG;AACH,eAAe,0BAA0B,CAAsB;IAC3D,EAAE,EAAE,oEAAoE;IACxE,MAAM,EAAgC,sBAAsB;IAC5D,KAAK,EAAuD,iCAAkC;CACjG,CAAC,CAAC","sourcesContent":["import { CacheType, createObservableDataAction, IAction, IActionContext, IActionInput, IAny, ICreateActionContext, IGeneric } from '@msdyn365-commerce/core';\nimport { BusinessPartnerUser, NullResult } from '@msdyn365-commerce/retail-proxy';\nimport { deleteAsync } from '@msdyn365-commerce/retail-proxy/dist/DataActions/BusinessPartnerUsersDataActions.g';\n/**\n * Input class for DeleteOrganizationUser data action\n */\nexport class DeleteOrganizationUserInput implements IActionInput {\n    public user: BusinessPartnerUser;\n\n    constructor(newUser: BusinessPartnerUser) {\n        this.user = newUser;\n    }\n\n    public getCacheKey = () => `DeleteOrganizationUser`;\n    public getCacheObjectType = () => 'DeleteOrganizationUser';\n    public dataCacheType = (): CacheType => 'none';\n}\n\n/**\n * Input class for DeleteOrganizationUser data action\n */\nexport const createDeleteOrganizationUserInput = (inputData: ICreateActionContext<IGeneric<IAny>>, newUser: BusinessPartnerUser): IActionInput => {\n    const { requestContext } = inputData;\n\n    // Check if the user is authenticated.\n    if (!requestContext.user.isAuthenticated) {\n        throw new Error('User is not logged in.');\n    }\n\n    return new DeleteOrganizationUserInput(newUser);\n};\n\n/**\n * The DeleteOrganizationUser data action\n * Calls getCurrent() to get a businessPartnerId from the user requesting the action.\n * It then maps the newUsers' businessPartnerId to the same as the above user.\n * Calls the createBusinessPartner to then create a new entitiy in the database with the\n * information passed into through newUser\n */\nexport async function deleteOrganizationUser(input: DeleteOrganizationUserInput, ctx: IActionContext): Promise<NullResult> {\n    const { user } = input;\n\n    return deleteAsync({ callerContext: ctx}, user)\n        .catch(error => {\n            console.log(error);\n            ctx.telemetry.debug('[Delete-organization-user] Unable to delete BusinessPartnerUser account');\n            throw new Error('[Delete-organization-user] Unable to delete BusinessPartnerUser account');\n        });\n}\n\n/**\n * The DeleteOrganizationUser data action\n * Calls the read RetailServer API to get the BusinessPartnerId from the admin\n * account and Deletes that businessPartner to the recieved input (new User)/\n * We then send this new User through the RetailServer API so that the database\n * is updated.\n */\nexport default createObservableDataAction<BusinessPartnerUser>({\n    id: '@msdyn365-commerce-modules/retail-actions/delete-organization-user',\n    action: <IAction<BusinessPartnerUser>>deleteOrganizationUser,\n    input: <(args: ICreateActionContext) => IActionInput>(<IAny>createDeleteOrganizationUserInput),\n});"]}