import { createObservableDataAction } from '@msdyn365-commerce/core';
import { createAddressManagementInput, doAddressManagementOperation } from './add-address';
export function updatePrimaryAddressHandler(customer, address) {
    customer.Addresses = setPrimaryAddress({ ...address }, [...(customer.Addresses || [])]);
    return customer;
}
export async function updatePrimaryAddressAction(input, ctx) {
    return doAddressManagementOperation(input, ctx, updatePrimaryAddressHandler);
}
/**
 * The updatePrimaryAddress data action
 * Calls the read RetailServer API to get information about a customer
 * Merge the passed address information with the address information from
 * the retireved customer, and then updates that customer via the update RetailServer API.
 */
export default createObservableDataAction({
    id: '@msdyn365-commerce-modules/retail-actions/update-primary-address',
    action: updatePrimaryAddressAction,
    input: createAddressManagementInput,
    isBatched: false
});
const setPrimaryAddress = (primaryAddresses, addresses) => {
    return addresses.map(addr => {
        if (addr.RecordId === primaryAddresses.RecordId) {
            addr.IsPrimary = true;
        }
        else {
            addr.IsPrimary = false;
        }
        return addr;
    });
};
//# sourceMappingURL=update-primary-address.js.map