{"version":3,"file":"update-order-template-line.js","sourceRoot":"","sources":["../../../src/order-templates/update-order-template-line.ts"],"names":[],"mappings":"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","sourcesContent":["import { CacheType,\n    createObservableDataAction,\n    IAction,\n    IActionContext,\n    IActionInput,\n    ICreateActionContext } from '@msdyn365-commerce/core';\nimport { updateProductListLinesAsync } from '@msdyn365-commerce/retail-proxy/dist/DataActions/ProductListsDataActions.g';\nimport { ProductListLine } from '@msdyn365-commerce/retail-proxy/dist/Entities/CommerceTypes.g';\nimport getPaginatedOrderTemplateLines, { GetPaginatedOrderTemplateLinesInput } from './get-paginated-order-template-lines';\n\n/**\n *  Input class for the UpdateOrderTemplate data action.\n */\nexport class UpdateOrderTemplateInput implements IActionInput {\n    public readonly orderTemplateId: string;\n    public readonly productId: number;\n    public readonly quantity: number;\n    public readonly unitOfMeasure: string;\n\n    constructor(orderTemplateId: string, productId: number, quantity: number, unitOfMeasure: string) {\n        this.orderTemplateId = orderTemplateId;\n        this.productId = productId;\n        this.quantity = quantity;\n        this.unitOfMeasure = unitOfMeasure || 'ea';\n    }\n\n    public getCacheKey = () => 'UpdateOrderTemplateInput';\n    public getCacheObjectType = () => 'UpdateOrderTemplateInput';\n    public dataCacheType = (): CacheType => 'none';\n}\n\n/**\n * createInput method for the UpdateOrderTemplate method.\n * @param {ICreateActionContext} inputData The input data passed to the createInput method.\n * @param {string} orderTemplateId The id of order template to update.\n * @param {number} productId The id of a product to add.\n * @param {number} quantity How many items of this product to add.\n */\nexport const updateOrderTemplateInput = (\n    inputData: ICreateActionContext, orderTemplateId: string, productId: number, quantity: number, unitOfMeasure: string): UpdateOrderTemplateInput => {\n\n    const { requestContext } = inputData;\n    if (!requestContext.user.isAuthenticated) {\n        throw new Error('Unable to create order template. User is not authenticated.');\n    }\n    return new UpdateOrderTemplateInput(orderTemplateId, productId, quantity, unitOfMeasure);\n};\n\n/**\n * The action method for the UpdateOrderTemplate data action.\n * @param {UpdateOrderTemplateInput} input The action input.\n * @param {IActionContext} ctx The action context.\n */\nexport async function updateOrderTemplateAction(input: UpdateOrderTemplateInput, ctx: IActionContext): Promise<ProductListLine> {\n    try {\n        if (!ctx.requestContext.user.isAuthenticated) {\n            throw Error('User token was not found when updating the order template');\n        }\n        const getLinesInput = new GetPaginatedOrderTemplateLinesInput(input.orderTemplateId, {}, input.productId.toString());\n        const linesState = await getPaginatedOrderTemplateLines(getLinesInput, ctx);\n        if (!linesState) {\n            throw Error('Order template was not found when updating the order template');\n        }\n\n        const linesToUpdate = linesState.lines.filter(line => line.productListLine.ProductId === input.productId);\n        if (linesToUpdate.length !== 1) {\n            throw Error('Unable to find the line to update when updating the order template');\n        }\n\n        const lineToUpdate = linesToUpdate[0].productListLine;\n\n        lineToUpdate.UnitOfMeasure = input.unitOfMeasure;\n        lineToUpdate.Quantity = input.quantity;\n\n        const updatedLines: ProductListLine[] = await updateProductListLinesAsync({\n            callerContext: ctx\n        }, input.orderTemplateId, [lineToUpdate]);\n\n        if (!updatedLines || updatedLines.length !== 1) {\n            throw Error('Server returned invalid lines when updating order template');\n        }\n        const updatedLine = updatedLines.filter(line => line.ProductId === input.productId);\n        if (updatedLine.length !== 1 || updatedLine[0].Quantity !== input.quantity || updatedLine[0].UnitOfMeasure !== input.unitOfMeasure) {\n            throw Error('Server did not update the line when updating order template');\n        }\n        return updatedLine[0];\n    } catch (error) {\n        ctx.telemetry.error('Not able to add an item to order template', error);\n        throw error;\n    }\n}\n\n/**\n * The UpdateOrderTemplate Data Action.\n * Returns product list line that was added to the order template.\n */\nexport default createObservableDataAction<ProductListLine>({\n    id: '@msdyn365-commerce-modules/retail-actions/order-templates/update-order-template-line',\n    action: <IAction<ProductListLine>>updateOrderTemplateAction,\n    input: updateOrderTemplateInput\n});"]}