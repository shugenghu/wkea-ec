{"version":3,"file":"add-order-template-to-cart.js","sourceRoot":"","sources":["../../../src/order-templates/add-order-template-to-cart.ts"],"names":[],"mappings":"AAAA,OAAO,EAAE,oCAAoC,EAAE,mCAAmC,EAAE,MAAM,sCAAsC,CAAA;AAChI,OAAO,EAEH,0BAA0B,EAK7B,MAAM,yBAAyB,CAAC;AACjC,OAAO,EAAE,YAAY,EAAE,MAAM,iCAAiC,CAAC;AAE/D,OAAO,EAAE,iBAAiB,EAAE,MAAM,qEAAqE,CAAC;AAExG;;GAEG;AACH,MAAM,OAAO,2BAA2B;IAGpC,YAAY,eAAuB;QAI5B,gBAAW,GAAG,GAAG,EAAE,CAAC,6BAA6B,CAAC;QAClD,uBAAkB,GAAG,GAAG,EAAE,CAAC,6BAA6B,CAAC;QACzD,kBAAa,GAAG,GAAc,EAAE,CAAC,MAAM,CAAC;QAL3C,IAAI,CAAC,eAAe,GAAG,eAAe,CAAC;IAC3C,CAAC;CAKJ;AAED;;;;GAIG;AACH,MAAM,CAAC,MAAM,2BAA2B,GAAG,CAAC,SAA+B,EAAE,eAAuB,EAA+B,EAAE;IACjI,MAAM,EAAE,cAAc,EAAE,GAAG,SAAS,CAAC;IACrC,IAAI,CAAC,cAAc,CAAC,IAAI,CAAC,eAAe,EAAE;QACtC,MAAM,IAAI,KAAK,CAAC,6DAA6D,CAAC,CAAC;KAClF;IACD,OAAO,IAAI,2BAA2B,CAAC,eAAe,CAAC,CAAC;AAC5D,CAAC,CAAC;AAEF;;;;GAIG;AACH,MAAM,CAAC,KAAK,UAAU,4BAA4B,CAAC,KAAkC,EAAE,OAAuB;IAC1G,MAAM,SAAS,GAAG,MAAM,YAAY,CAAC,OAAO,CAAC,CAAC;IAC9C,MAAM,UAAU,GAAG,IAAI,CAAC;IACxB,MAAM,mBAAmB,GAAwB;QAC7C,MAAM,EAAE;YACJ,GAAG,EAAE,UAAU;YACf,IAAI,EAAE,CAAC;SACV;KACJ,CAAC;IACF,MAAM,mCAAmC,GAAG,IAAI,mCAAmC,CAAC,KAAK,CAAC,eAAe,EAAE,mBAAmB,CAAC,CAAC;IAChI,IAAI,kBAAkB,GAAG,MAAM,oCAAoC,CAAC,mCAAmC,EAAE,OAAO,CAAC,CAAC;IAClH,IAAI,cAAc,GAAe,EAAE,CAAC;IACpC,KAAK,IAAI,IAAI,GAAG,UAAU,EAAE,kBAAkB,CAAC,KAAK,CAAC,MAAM,KAAK,CAAC,EAAE,IAAI,IAAI,UAAU,EAAE;QACnF,MAAM,SAAS,GAAe,kBAAkB,CAAC,KAAK,CAAC,GAAG,CAAC,WAAW,CAAC,EAAE;YACrE,yDAAyD;YACzD,MAAM,QAAQ,GAAa;gBACvB,MAAM,EAAE,WAAW,CAAC,WAAW,EAAE,cAAc,CAAC,MAAM;gBACtD,SAAS,EAAE,WAAW,CAAC,eAAe,CAAC,SAAS;gBAChD,QAAQ,EAAE,WAAW,CAAC,eAAe,CAAC,QAAQ;gBAC9C,UAAU,EAAE,EAAE;gBACd,mBAAmB,EAAE,WAAW,CAAC,eAAe,CAAC,aAAa;aACjE,CAAC;YACF,OAAO,QAAQ,CAAC;QACpB,CAAC,CAAC,CAAC;QACH,MAAM,iBAAiB,CAAC,EAAE,aAAa,EAAE,OAAO,EAAE,EAAE,SAAS,CAAC,IAAI,CAAC,EAAE,EAAE,SAAS,EAAE,SAAS,CAAC,IAAI,CAAC,OAAQ,CAAC,CAAC,KAAK,CAAC,KAAK,CAAC,EAAE;YACrH,OAAO,CAAC,SAAS,CAAC,KAAK,CAAC,KAAK,CAAC,CAAC;YAC/B,OAAO,CAAC,SAAS,CAAC,KAAK,CAAC,uCAAuC,CAAC,CAAC;YACjE,MAAM,KAAK,CAAC;QAChB,CAAC,CAAC,CAAC;QACH,cAAc,GAAG,cAAc,CAAC,MAAM,CAAC,SAAS,CAAC,CAAC;QAClD,mCAAmC,CAAC,mBAAmB,CAAC,MAAO,CAAC,IAAI,GAAG,IAAI,CAAC;QAC5E,kBAAkB,GAAG,MAAM,oCAAoC,CAAC,mCAAmC,EAAE,OAAO,CAAC,CAAC;KACjH;IACD,MAAM,SAAS,CAAC,WAAW,CAAC,EAAE,CAAC,CAAC;IAChC,OAAO,cAAc,CAAC;AAC1B,CAAC;AAED;;;GAGG;AACH,eAAe,0BAA0B,CAAa;IAClD,EAAE,EAAE,sFAAsF;IAC1F,MAAM,EAAuB,4BAA4B;IACzD,KAAK,EAAE,2BAA2B;CACrC,CAAC,CAAC","sourcesContent":["import { getPaginatedOrderTemplateLinesAction, GetPaginatedOrderTemplateLinesInput } from './get-paginated-order-template-lines'\nimport {\n    CacheType,\n    createObservableDataAction,\n    IAction,\n    IActionContext,\n    IActionInput,\n    ICreateActionContext\n} from '@msdyn365-commerce/core';\nimport { getCartState } from '@msdyn365-commerce/global-state';\nimport { CartLine, QueryResultSettings } from '@msdyn365-commerce/retail-proxy';\nimport { addCartLinesAsync } from '@msdyn365-commerce/retail-proxy/dist/DataActions/CartsDataActions.g';\n\n/**\n *  Input class for the AddOrderTemplateToCart data action.\n */\nexport class AddOrderTemplateToCartInput implements IActionInput {\n    public readonly orderTemplateId: string;\n\n    constructor(orderTemplateId: string) {\n        this.orderTemplateId = orderTemplateId;\n    }\n\n    public getCacheKey = () => 'AddOrderTemplateToCartInput';\n    public getCacheObjectType = () => 'AddOrderTemplateToCartInput';\n    public dataCacheType = (): CacheType => 'none';\n}\n\n/**\n * createInput method for the AddOrderTemplateToCart method.\n * @param {ICreateActionContext} inputData The input data passed to the createInput method.\n * @param {string} orderTemplateId The id of template.\n */\nexport const addOrderTemplateToCartInput = (inputData: ICreateActionContext, orderTemplateId: string): AddOrderTemplateToCartInput => {\n    const { requestContext } = inputData;\n    if (!requestContext.user.isAuthenticated) {\n        throw new Error('Unable to create order template. User is not authenticated.');\n    }\n    return new AddOrderTemplateToCartInput(orderTemplateId);\n};\n\n/**\n * The action method for the AddOrderTemplateToCart data action.\n * @param {AddOrderTemplateToCartInput} input The action input.\n * @param {IActionContext} ctx The action context.\n */\nexport async function addOrderTemplateToCartAction(input: AddOrderTemplateToCartInput, context: IActionContext): Promise<CartLine[]> {\n    const cartState = await getCartState(context);\n    const chunkCount = 1000;\n    const queryResultSettings: QueryResultSettings = {\n        Paging: {\n            Top: chunkCount,\n            Skip: 0\n        }\n    };\n    const getPaginatedOrderTemplateLinesInput = new GetPaginatedOrderTemplateLinesInput(input.orderTemplateId, queryResultSettings);\n    let orderTemplateLines = await getPaginatedOrderTemplateLinesAction(getPaginatedOrderTemplateLinesInput, context);\n    let addedCartLines: CartLine[] = [];\n    for (let skip = chunkCount; orderTemplateLines.lines.length !== 0; skip += chunkCount) {\n        const cartLines: CartLine[] = orderTemplateLines.lines.map(productLine => {\n            // tslint:disable-next-line:no-unnecessary-local-variable\n            const cartLine: CartLine = {\n                ItemId: productLine.fullProduct?.ProductDetails.ItemId,\n                ProductId: productLine.productListLine.ProductId,\n                Quantity: productLine.productListLine.Quantity,\n                TrackingId: '',\n                UnitOfMeasureSymbol: productLine.productListLine.UnitOfMeasure\n            };\n            return cartLine;\n        });\n        await addCartLinesAsync({ callerContext: context }, cartState.cart.Id, cartLines, cartState.cart.Version!).catch(error => {\n            context.telemetry.trace(error);\n            context.telemetry.trace('Unable to add order template to cart.');\n            throw error;\n        });\n        addedCartLines = addedCartLines.concat(cartLines);\n        getPaginatedOrderTemplateLinesInput.queryResultSettings.Paging!.Skip = skip;\n        orderTemplateLines = await getPaginatedOrderTemplateLinesAction(getPaginatedOrderTemplateLinesInput, context);\n    }\n    await cartState.refreshCart({});\n    return addedCartLines;\n}\n\n/**\n * The AddOrderTemplateToCart Data Action.\n * Returns created order template.\n */\nexport default createObservableDataAction<CartLine[]>({\n    id: '@msdyn365-commerce-modules/retail-actions/order-templates/add-order-template-to-cart',\n    action: <IAction<CartLine[]>>addOrderTemplateToCartAction,\n    input: addOrderTemplateToCartInput\n});"]}