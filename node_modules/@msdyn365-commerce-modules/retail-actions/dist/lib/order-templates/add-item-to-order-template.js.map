{"version":3,"file":"add-item-to-order-template.js","sourceRoot":"","sources":["../../../src/order-templates/add-item-to-order-template.ts"],"names":[],"mappings":"AAAA,OAAO,EACH,0BAA0B,EAIJ,MAAM,yBAAyB,CAAC;AAC1D,OAAO,EAAE,wBAAwB,EAAE,MAAM,4EAA4E,CAAC;AAGtH;;GAEG;AACH,MAAM,OAAO,2BAA2B;IAMpC,YAAY,eAAuB,EAAE,SAAiB,EAAE,QAAgB,EAAE,aAAqB;QAOxF,gBAAW,GAAG,GAAG,EAAE,CAAC,6BAA6B,CAAC;QAClD,uBAAkB,GAAG,GAAG,EAAE,CAAC,6BAA6B,CAAC;QACzD,kBAAa,GAAG,GAAc,EAAE,CAAC,MAAM,CAAC;QAR3C,IAAI,CAAC,eAAe,GAAG,eAAe,CAAC;QACvC,IAAI,CAAC,SAAS,GAAG,SAAS,CAAC;QAC3B,IAAI,CAAC,QAAQ,GAAG,QAAQ,CAAC;QACzB,IAAI,CAAC,aAAa,GAAG,aAAa,IAAI,IAAI,CAAC;IAC/C,CAAC;CAKJ;AAED;;;;;;GAMG;AACH,MAAM,CAAC,MAAM,2BAA2B,GAAG,CACvC,SAA+B,EAAE,eAAuB,EAAE,SAAiB,EAAE,QAAgB,EAAE,aAAqB,EAA+B,EAAE;IAErJ,MAAM,EAAE,cAAc,EAAE,GAAG,SAAS,CAAC;IACrC,IAAI,CAAC,cAAc,CAAC,IAAI,CAAC,eAAe,EAAE;QACtC,MAAM,IAAI,KAAK,CAAC,6DAA6D,CAAC,CAAC;KAClF;IACD,OAAO,IAAI,2BAA2B,CAAC,eAAe,EAAE,SAAS,EAAE,QAAQ,EAAE,aAAa,CAAC,CAAC;AAChG,CAAC,CAAC;AAEF;;;;GAIG;AACH,MAAM,CAAC,KAAK,UAAU,4BAA4B,CAAC,KAAkC,EAAE,GAAmB;IACtG,IAAI;QACA,MAAM,oBAAoB,GAAoB;YAC1C,aAAa,EAAE,KAAK,CAAC,eAAe;YACpC,SAAS,EAAE,KAAK,CAAC,SAAS;YAC1B,QAAQ,EAAE,KAAK,CAAC,QAAQ;YACxB,aAAa,EAAE,KAAK,CAAC,aAAa;SACrC,CAAC;QAEF,MAAM,eAAe,GAAsB,MAAM,wBAAwB,CAAC;YACtE,aAAa,EAAE,GAAG;SACrB,EAAE,KAAK,CAAC,eAAe,EAAE,CAAC,oBAAoB,CAAC,CAAC,CAAC;QAElD,IAAI,eAAe,IAAI,eAAe,CAAC,MAAM,KAAK,CAAC,IAAI,eAAe,CAAC,CAAC,CAAC,IAAI,eAAe,CAAC,CAAC,CAAC,CAAC,aAAa,EAAE;YAC3G,OAAO,eAAe,CAAC,CAAC,CAAC,CAAC;SAC7B;aAAM;YACH,GAAG,CAAC,SAAS,CAAC,KAAK,CAAC,qEAAqE,CAAC,CAAC;YAC3F,MAAM,KAAK,CAAC,qEAAqE,CAAC,CAAC;SACtF;KACJ;IAAC,OAAO,KAAK,EAAE;QACZ,GAAG,CAAC,SAAS,CAAC,KAAK,CAAC,2CAA2C,EAAE,KAAK,CAAC,CAAC;QACxE,MAAM,KAAK,CAAC;KACf;AACL,CAAC;AAED;;;GAGG;AACH,eAAe,0BAA0B,CAAkB;IACvD,EAAE,EAAE,sFAAsF;IAC1F,MAAM,EAA4B,4BAA4B;IAC9D,KAAK,EAAE,2BAA2B;CACrC,CAAC,CAAC","sourcesContent":["import { CacheType,\n    createObservableDataAction,\n    IAction,\n    IActionContext,\n    IActionInput,\n    ICreateActionContext } from '@msdyn365-commerce/core';\nimport { addProductListLinesAsync } from '@msdyn365-commerce/retail-proxy/dist/DataActions/ProductListsDataActions.g';\nimport { ProductListLine } from '@msdyn365-commerce/retail-proxy/dist/Entities/CommerceTypes.g';\n\n/**\n *  Input class for the AddItemToOrderTemplate data action.\n */\nexport class AddItemToOrderTemplateInput implements IActionInput {\n    public readonly orderTemplateId: string;\n    public readonly productId: number;\n    public readonly quantity: number;\n    public readonly unitOfMeasure: string;\n\n    constructor(orderTemplateId: string, productId: number, quantity: number, unitOfMeasure: string) {\n        this.orderTemplateId = orderTemplateId;\n        this.productId = productId;\n        this.quantity = quantity;\n        this.unitOfMeasure = unitOfMeasure || 'ea';\n    }\n\n    public getCacheKey = () => 'AddItemToOrderTemplateInput';\n    public getCacheObjectType = () => 'AddItemToOrderTemplateInput';\n    public dataCacheType = (): CacheType => 'none';\n}\n\n/**\n * createInput method for the AddItemToOrderTemplate method.\n * @param {ICreateActionContext} inputData The input data passed to the createInput method.\n * @param {string} orderTemplateId The id of order template to update.\n * @param {number} productId The id of a product to add.\n * @param {number} quantity How many items of this product to add.\n */\nexport const addItemToOrderTemplateInput = (\n    inputData: ICreateActionContext, orderTemplateId: string, productId: number, quantity: number, unitOfMeasure: string): AddItemToOrderTemplateInput => {\n\n    const { requestContext } = inputData;\n    if (!requestContext.user.isAuthenticated) {\n        throw new Error('Unable to create order template. User is not authenticated.');\n    }\n    return new AddItemToOrderTemplateInput(orderTemplateId, productId, quantity, unitOfMeasure);\n};\n\n/**\n * The action method for the AddItemToOrderTemplate data action.\n * @param {AddItemToOrderTemplateInput} input The action input.\n * @param {IActionContext} ctx The action context.\n */\nexport async function addItemToOrderTemplateAction(input: AddItemToOrderTemplateInput, ctx: IActionContext): Promise<ProductListLine> {\n    try {\n        const productListLineToAdd: ProductListLine = {\n            ProductListId: input.orderTemplateId,\n            ProductId: input.productId,\n            Quantity: input.quantity,\n            UnitOfMeasure: input.unitOfMeasure\n        };\n\n        const productListLine: ProductListLine[] = await addProductListLinesAsync({\n            callerContext: ctx\n        }, input.orderTemplateId, [productListLineToAdd]);\n\n        if (productListLine && productListLine.length === 1 && productListLine[0] && productListLine[0].ProductListId) {\n            return productListLine[0];\n        } else {\n            ctx.telemetry.error('Product list line was not returned when adding it to order template');\n            throw Error('Product list line was not returned when adding it to order template');\n        }\n    } catch (error) {\n        ctx.telemetry.error('Not able to add an item to order template', error);\n        throw error;\n    }\n}\n\n/**\n * The AddItemToOrderTemplate Data Action.\n * Returns product list line that was added to the order template.\n */\nexport default createObservableDataAction<ProductListLine>({\n    id: '@msdyn365-commerce-modules/retail-actions/order-templates/add-item-to-order-template',\n    action: <IAction<ProductListLine>>addItemToOrderTemplateAction,\n    input: addItemToOrderTemplateInput\n});"]}