{"version":3,"file":"get-full-order-template.js","sourceRoot":"","sources":["../../../src/order-templates/get-full-order-template.ts"],"names":[],"mappings":"AAAA,OAAO,EACH,0BAA0B,EAIJ,MAAM,yBAAyB,CAAC;AAG1D,OAAO,EAAE,iBAAiB,EAAE,sBAAsB,EAAE,wBAAwB,EAAE,MAAM,IAAI,CAAC;AACzF,OAAO,EAAE,oCAAoC,EAAE,mCAAmC,EAAE,MAAM,IAAI,CAAC;AAC/F,OAAO,EAAE,aAAa,EAAE,MAAM,8BAA8B,CAAC;AAE7D;;GAEG;AACH,MAAM,OAAO,yBAAyB;IAIlC,YAAY,eAAuB,EAAE,mBAAyC;QAKvE,gBAAW,GAAG,GAAG,EAAE,CAAC,wBAAwB,IAAI,CAAC,eAAe,EAAE,CAAC;QACnE,uBAAkB,GAAG,GAAG,EAAE,CAAC,sBAAsB,CAAC;QAClD,kBAAa,GAAG,GAAc,EAAE,CAAC,MAAM,CAAC;QAN3C,IAAI,CAAC,eAAe,GAAG,eAAe,CAAC;QACvC,IAAI,CAAC,mBAAmB,GAAG,mBAAmB,CAAC;IACnD,CAAC;CAKJ;AAED;;;GAGG;AACH,MAAM,CAAC,MAAM,+BAA+B,GAAG,CAAC,SAA+B,EAAE,eAAuB,EAA6B,EAAE;IACnI,MAAM,EAAE,cAAc,EAAE,GAAG,SAAS,CAAC;IACrC,IAAI,CAAC,cAAc,CAAC,IAAI,CAAC,eAAe,EAAE;QACtC,MAAM,IAAI,KAAK,CAAC,gEAAgE,CAAC,CAAC;KACrF;IACD,MAAM,mBAAmB,GAAyB,wBAAwB,CAAC,aAAa,CAAC,SAAS,CAAC,CAAC,mBAAmB,CAAC;IACxH,mBAAmB,CAAC,KAAK,GAAG,IAAI,CAAC;IAEjC,OAAO,IAAI,yBAAyB,CAAC,eAAe,EAAE,mBAAmB,CAAC,CAAC;AAC/E,CAAC,CAAC;AAEF;;;;GAIG;AACH,MAAM,CAAC,KAAK,UAAU,0BAA0B,CAAC,KAAgC,EAAE,GAAmB;IAClG,IAAI,CAAC,GAAG,CAAC,cAAc,CAAC,IAAI,CAAC,eAAe,EAAE;QAC1C,MAAM,IAAI,KAAK,CAAC,+DAA+D,CAAC,CAAC;KACpF;IAED,MAAM,WAAW,GAAG,IAAI,sBAAsB,CAAC,KAAK,CAAC,eAAe,CAAC,CAAC;IACtE,MAAM,YAAY,GAAkB,MAAM,iBAAiB,CAAC,WAAW,EAAE,GAAG,CAAC,CAAC;IAE9E,IAAI,CAAC,YAAY,IAAI,YAAY,CAAC,MAAM,KAAK,CAAC,EAAE;QAC5C,MAAM,IAAI,KAAK,CAAC,kEAAkE,CAAC,CAAC;KACvF;IAED,MAAM,UAAU,GAAG,IAAI,mCAAmC,CAAC,YAAY,CAAC,CAAC,CAAC,CAAC,EAAE,EAAE,KAAK,CAAC,mBAAmB,CAAC,CAAC;IAC1G,MAAM,UAAU,GAAG,MAAM,oCAAoC,CAAC,UAAU,EAAE,GAAG,CAAC,CAAC;IAC/E,OAAO,IAAI,aAAa,CAAC,YAAY,CAAC,CAAC,CAAC,EAAE,UAAU,CAAC,KAAK,EAAE,UAAU,CAAC,UAAU,CAAC,CAAC;AACvF,CAAC;AAED;;;GAGG;AACH,eAAe,0BAA0B,CAAgB;IACrD,EAAE,EAAE,mFAAmF;IACvF,MAAM,EAA0B,0BAA0B;IAC1D,KAAK,EAAE,+BAA+B;CACzC,CAAC,CAAC","sourcesContent":["import { CacheType,\n    createObservableDataAction,\n    IAction,\n    IActionContext,\n    IActionInput,\n    ICreateActionContext } from '@msdyn365-commerce/core';\nimport { IQueryResultSettings } from '@msdyn365-commerce/retail-proxy';\nimport { ProductList } from '@msdyn365-commerce/retail-proxy/dist/Entities/CommerceTypes.g';\nimport { getOrderTemplates, GetOrderTemplatesInput, QueryResultSettingsProxy } from '..';\nimport { getPaginatedOrderTemplateLinesAction, GetPaginatedOrderTemplateLinesInput } from '..';\nimport { OrderTemplate } from '../utilities/order-templates';\n\n/**\n *  Input class for the GetOrderTemplates data action\n */\nexport class GetFullOrderTemplateInput implements IActionInput {\n    public orderTemplateId: string;\n    public queryResultSettings: IQueryResultSettings;\n\n    constructor(orderTemplateId: string, queryResultSettings: IQueryResultSettings) {\n        this.orderTemplateId = orderTemplateId;\n        this.queryResultSettings = queryResultSettings;\n    }\n\n    public getCacheKey = () => `GetFullOrderTemplate|${this.orderTemplateId}`;\n    public getCacheObjectType = () => 'GetFullOrderTemplate';\n    public dataCacheType = (): CacheType => 'none';\n}\n\n/**\n * createInput method for the GetOrderTemplate method\n * @param inputData The input data passed to the createInput method.\n */\nexport const createGetFullOrderTemplateInput = (inputData: ICreateActionContext, orderTemplateId: string): GetFullOrderTemplateInput => {\n    const { requestContext } = inputData;\n    if (!requestContext.user.isAuthenticated) {\n        throw new Error('Unable to get full order templates. User is not authenticated.');\n    }\n    const queryResultSettings: IQueryResultSettings = QueryResultSettingsProxy.fromInputData(inputData).QueryResultSettings;\n    queryResultSettings.count = true;\n\n    return new GetFullOrderTemplateInput(orderTemplateId, queryResultSettings);\n};\n\n/**\n * The action method for the GetFullOrderTemplate data action\n * @param input The action input\n * @param ctx The action context\n */\nexport async function getFullOrderTemplateAction(input: GetFullOrderTemplateInput, ctx: IActionContext): Promise<OrderTemplate> {\n    if (!ctx.requestContext.user.isAuthenticated) {\n        throw new Error('Unable to get full order template. User is not authenticated.');\n    }\n\n    const inputParams = new GetOrderTemplatesInput(input.orderTemplateId);\n    const productLists: ProductList[] = await getOrderTemplates(inputParams, ctx);\n\n    if (!productLists || productLists.length !== 1) {\n        throw new Error('Unable to get full order template. Order template was not found.');\n    }\n\n    const inputLines = new GetPaginatedOrderTemplateLinesInput(productLists[0].Id, input.queryResultSettings);\n    const linesState = await getPaginatedOrderTemplateLinesAction(inputLines, ctx);\n    return new OrderTemplate(productLists[0], linesState.lines, linesState.totalCount);\n}\n\n/**\n * The GetFullOrderTemplate Data Action\n * Returns order templates\n */\nexport default createObservableDataAction<OrderTemplate>({\n    id: '@msdyn365-commerce-modules/retail-actions/order-templates/get-full-order-template',\n    action: <IAction<OrderTemplate>>getFullOrderTemplateAction,\n    input: createGetFullOrderTemplateInput\n});"]}