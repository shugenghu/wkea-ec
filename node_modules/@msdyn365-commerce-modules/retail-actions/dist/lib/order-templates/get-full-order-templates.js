import { createObservableDataAction } from '@msdyn365-commerce/core';
import { getOrderTemplates, GetOrderTemplatesInput, QueryResultSettingsProxy } from '..';
import { getPaginatedOrderTemplateLinesAction, GetPaginatedOrderTemplateLinesInput } from '..';
import { OrderTemplate } from '../utilities/order-templates';
/**
 *  Input class for the GetOrderTemplates data action
 */
export class GetFullOrderTemplatesInput {
    constructor(queryResultSettings) {
        this.getCacheKey = () => `GetFullOrderTemplates`;
        this.getCacheObjectType = () => 'GetFullOrderTemplates';
        this.dataCacheType = () => 'none';
        this.queryResultSettings = queryResultSettings;
    }
}
/**
 * createInput method for the GetOrderTemplate method
 * @param inputData The input data passed to the createInput method.
 */
export const createGetFullOrderTemplatesInput = (inputData) => {
    const { requestContext } = inputData;
    if (!requestContext.user.isAuthenticated) {
        throw new Error('Unable to get full order templates. User is not authenticated.');
    }
    const queryResultSettings = QueryResultSettingsProxy.fromInputData(inputData).QueryResultSettings;
    queryResultSettings.count = true;
    return new GetFullOrderTemplatesInput(queryResultSettings);
};
/**
 * The action method for the GetFullOrderTemplates data action
 * @param input The action input
 * @param ctx The action context
 */
export async function getFullOrderTemplatesAction(input, ctx) {
    if (!ctx.requestContext.user.isAuthenticated) {
        throw new Error('Unable to get full order templates. User is not authenticated.');
    }
    const orderTemplates = [];
    const inputParams = new GetOrderTemplatesInput();
    const productLists = await getOrderTemplates(inputParams, ctx);
    if (!productLists || productLists.length === 0) {
        return orderTemplates;
    }
    for (let i = 0; i < productLists.length; ++i) {
        const list = productLists[i];
        const inputLines = new GetPaginatedOrderTemplateLinesInput(list.Id, input.queryResultSettings);
        const linesState = await getPaginatedOrderTemplateLinesAction(inputLines, ctx);
        orderTemplates.push(new OrderTemplate(list, linesState.lines, linesState.totalCount));
    }
    ctx.trace(orderTemplates.length.toString());
    return orderTemplates;
}
/**
 * The GetFullOrderTemplates Data Action
 * Returns order templates
 */
export default createObservableDataAction({
    id: '@msdyn365-commerce-modules/retail-actions/order-templates/get-full-order-templates',
    action: getFullOrderTemplatesAction,
    input: createGetFullOrderTemplatesInput
});
//# sourceMappingURL=get-full-order-templates.js.map