{"version":3,"file":"get-paginated-order-template-lines.js","sourceRoot":"","sources":["../../../src/order-templates/get-paginated-order-template-lines.ts"],"names":[],"mappings":"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","sourcesContent":["import { FullProduct } from '@msdyn365-commerce/commerce-entities';\nimport { CacheType,\n    createObservableDataAction,\n    IAction,\n    IActionContext,\n    IActionInput,\n    ICreateActionContext } from '@msdyn365-commerce/core';\nimport { convertToString, IQueryResultSettings } from '@msdyn365-commerce/retail-proxy';\nimport { getProductListLinesAsync } from '@msdyn365-commerce/retail-proxy/dist/DataActions/ProductListsDataActions.g';\nimport { FullProductInput, getFullProducts, getProductDetailsCriteriaFromActionInput, QueryResultSettingsProxy } from '..';\nimport { IOrderTemplateLinesState, OrderTemplateLine } from '../utilities/order-templates';\n/**\n *  Input class for the GetOrderTemplates data action\n */\nexport class GetPaginatedOrderTemplateLinesInput implements IActionInput {\n    public orderTemplateId: string;\n    public queryResultSettings: IQueryResultSettings;\n    public searchText: string;\n\n    constructor(orderTemplateId: string, queryResultSettings: IQueryResultSettings, searchText?: string) {\n        this.orderTemplateId = orderTemplateId;\n        this.queryResultSettings = queryResultSettings;\n        this.searchText = searchText || '';\n    }\n\n    public getCacheKey = () => `GetPaginatedOrderTemplateLines|${this.orderTemplateId}|${convertToString(this.queryResultSettings)}|${this.searchText}`;\n    public getCacheObjectType = () => 'GetPaginatedOrderTemplateLines';\n    public dataCacheType = (): CacheType => 'none';\n}\n\n/**\n * createInput method for the GetOrderTemplate method\n * @param inputData The input data passed to the createInput method.\n */\nexport const createGetPaginatedOrderTemplateLinesInput = (\n    inputData: ICreateActionContext, orderTemplateId: string, searchText?: string): GetPaginatedOrderTemplateLinesInput => {\n\n    const queryResultSettings: IQueryResultSettings = QueryResultSettingsProxy.fromInputData(inputData).QueryResultSettings;\n    queryResultSettings.count = true;\n    return new GetPaginatedOrderTemplateLinesInput(orderTemplateId, queryResultSettings, searchText);\n};\n\n/**\n * The action method for the GetPaginatedOrderTemplateLines data action\n * @param input The action input\n * @param context The action context\n */\nexport async function getPaginatedOrderTemplateLinesAction(input: GetPaginatedOrderTemplateLinesInput, context: IActionContext): Promise<IOrderTemplateLinesState> {\n    if (!context.requestContext.user.isAuthenticated) {\n        throw new Error('Unable to get full order templates. User is not authenticated.');\n    }\n\n    const orderTemplateLinesState: IOrderTemplateLinesState = {\n        lines: [],\n        totalCount: 0\n    };\n    const promise = getProductListLinesAsync({\n        callerContext: context, queryResultSettings: input.queryResultSettings\n    }, input.orderTemplateId, input.searchText); // tslint:disable-line:align\n    const productListLines = await promise;\n    const productInputs: FullProductInput[] = [];\n    if (productListLines && productListLines.length > 0) {\n        orderTemplateLinesState.totalCount = promise.metadata.count || orderTemplateLinesState.lines.length;\n        productListLines.forEach((listLine) => {\n            if (listLine.ProductId) {\n                orderTemplateLinesState.lines.push(new OrderTemplateLine(listLine));\n                productInputs.push(new FullProductInput(listLine.ProductId, context.requestContext.apiSettings, getProductDetailsCriteriaFromActionInput(context)));\n            }\n        });\n        if (productInputs.length > 0) {\n            const fullProductsInfo = await getFullProducts(productInputs, context)\n                .then((products: FullProduct[]) => {\n                    if (products) {\n                        return products;\n                    } else {\n                        return <FullProduct[]>[];\n                    }\n                })\n                .catch(error => {\n                    context.trace(error);\n                    context.telemetry.error(error.message);\n                    throw new Error('[getPaginatedOrderTemplateLinesAction]Unable to retrieve product info');\n                });\n            orderTemplateLinesState.lines.forEach(line => {\n                const fullProduct = fullProductsInfo.find(product => product.ProductDetails.RecordId === line.productListLine.ProductId);\n                if (!fullProduct) {\n                    throw new Error('Unable to find product info for an order template line');\n                }\n                line.fullProduct = fullProduct;\n            });\n            return orderTemplateLinesState;\n        }\n        context.trace(orderTemplateLinesState.lines.length.toString());\n        return orderTemplateLinesState;\n    }\n    return orderTemplateLinesState;\n}\n\n/**\n * The GetPaginatedOrderTemplateLines Data Action\n * Returns order templates\n */\nexport default createObservableDataAction<IOrderTemplateLinesState>({\n    id: '@msdyn365-commerce-modules/retail-actions/order-templates/get-paginated-order-template-lines',\n    action: <IAction<IOrderTemplateLinesState>>getPaginatedOrderTemplateLinesAction,\n    input: createGetPaginatedOrderTemplateLinesInput\n});"]}