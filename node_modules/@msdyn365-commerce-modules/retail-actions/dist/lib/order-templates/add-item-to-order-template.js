import { createObservableDataAction } from '@msdyn365-commerce/core';
import { addProductListLinesAsync } from '@msdyn365-commerce/retail-proxy/dist/DataActions/ProductListsDataActions.g';
/**
 *  Input class for the AddItemToOrderTemplate data action.
 */
export class AddItemToOrderTemplateInput {
    constructor(orderTemplateId, productId, quantity, unitOfMeasure) {
        this.getCacheKey = () => 'AddItemToOrderTemplateInput';
        this.getCacheObjectType = () => 'AddItemToOrderTemplateInput';
        this.dataCacheType = () => 'none';
        this.orderTemplateId = orderTemplateId;
        this.productId = productId;
        this.quantity = quantity;
        this.unitOfMeasure = unitOfMeasure || 'ea';
    }
}
/**
 * createInput method for the AddItemToOrderTemplate method.
 * @param {ICreateActionContext} inputData The input data passed to the createInput method.
 * @param {string} orderTemplateId The id of order template to update.
 * @param {number} productId The id of a product to add.
 * @param {number} quantity How many items of this product to add.
 */
export const addItemToOrderTemplateInput = (inputData, orderTemplateId, productId, quantity, unitOfMeasure) => {
    const { requestContext } = inputData;
    if (!requestContext.user.isAuthenticated) {
        throw new Error('Unable to create order template. User is not authenticated.');
    }
    return new AddItemToOrderTemplateInput(orderTemplateId, productId, quantity, unitOfMeasure);
};
/**
 * The action method for the AddItemToOrderTemplate data action.
 * @param {AddItemToOrderTemplateInput} input The action input.
 * @param {IActionContext} ctx The action context.
 */
export async function addItemToOrderTemplateAction(input, ctx) {
    try {
        const productListLineToAdd = {
            ProductListId: input.orderTemplateId,
            ProductId: input.productId,
            Quantity: input.quantity,
            UnitOfMeasure: input.unitOfMeasure
        };
        const productListLine = await addProductListLinesAsync({
            callerContext: ctx
        }, input.orderTemplateId, [productListLineToAdd]);
        if (productListLine && productListLine.length === 1 && productListLine[0] && productListLine[0].ProductListId) {
            return productListLine[0];
        }
        else {
            ctx.telemetry.error('Product list line was not returned when adding it to order template');
            throw Error('Product list line was not returned when adding it to order template');
        }
    }
    catch (error) {
        ctx.telemetry.error('Not able to add an item to order template', error);
        throw error;
    }
}
/**
 * The AddItemToOrderTemplate Data Action.
 * Returns product list line that was added to the order template.
 */
export default createObservableDataAction({
    id: '@msdyn365-commerce-modules/retail-actions/order-templates/add-item-to-order-template',
    action: addItemToOrderTemplateAction,
    input: addItemToOrderTemplateInput
});
//# sourceMappingURL=add-item-to-order-template.js.map