import { createObservableDataAction } from '@msdyn365-commerce/core';
import { readAsync, updateAsync } from '@msdyn365-commerce/retail-proxy/dist/DataActions/CustomersDataActions.g';
import { GetCustomerInput } from './get-customer';
import { buildCacheKey } from './index';
/**
 *  Input class for the updateCustomerAttributes
 */
export class updateCustomerAttributesInput {
    constructor(userAccountNumber, customerAttributes, apiSettings, phone, vatNumber) {
        this.getCacheKey = () => buildCacheKey(`${this.userAccountNumber}`, this.apiSettings);
        this.getCacheObjectType = () => 'Customer';
        this.dataCacheType = () => 'none';
        this.userAccountNumber = userAccountNumber;
        this.apiSettings = apiSettings;
        this.customerAttributes = customerAttributes;
        this.phone = phone;
        this.vatNumber = vatNumber;
    }
}
/**
 * The action method for the updateCustomerAttributes data action
 * @param input The action input
 * @param ctx The action context
 */
export async function updateCustomerAttributesAction(input, ctx) {
    const { customerAttributes, phone, vatNumber, userAccountNumber } = input;
    const customer = await readAsync({ callerContext: ctx }, userAccountNumber);
    if (!customer) {
        ctx.telemetry.debug('[update-customer-attributes] Unable to find customer');
        throw new Error('Unable to find customer');
    }
    const newCustomer = { ...customer };
    newCustomer.Phone = phone;
    newCustomer.VatNumber = vatNumber;
    newCustomer.Attributes = customerAttributes;
    const updatedCustomer = await updateAsync({ callerContext: ctx }, newCustomer);
    if (!updatedCustomer) {
        ctx.telemetry.debug('[update-customer-attributes] Unable to update customer attributes');
        throw new Error('Unable to update customer attributes');
    }
    ctx.update(new GetCustomerInput(ctx.requestContext.apiSettings), updatedCustomer);
    return updatedCustomer;
}
/**
 * The updateCustomerAttributes data action
 * Returns the updated customer
 */
export default createObservableDataAction({
    id: '@msdyn365-commerce-modules/retail-actions/update-customer-attributes',
    action: updateCustomerAttributesAction
});
//# sourceMappingURL=update-customer-attributes.js.map