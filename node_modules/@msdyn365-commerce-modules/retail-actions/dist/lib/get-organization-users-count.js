import { createObservableDataAction } from '@msdyn365-commerce/core';
import { getCurrentAsync, getUsersAsync } from '@msdyn365-commerce/retail-proxy/dist/DataActions/BusinessPartnersDataActions.g';
/**
 * Input class for get customer data action
 */
export class OrganizationUsersCountInput {
    constructor() {
        this.getCacheKey = () => 'OrganizationUsersCount';
        this.getCacheObjectType = () => 'BusinessPartner';
        this.dataCacheType = () => 'none';
    }
}
export const createGetOrganizationUsersCountInput = (inputData) => {
    const { requestContext } = inputData;
    // Check if the user is authenticated.
    if (!requestContext.user.isAuthenticated) {
        throw new Error('User is not logged in.');
    }
    return new OrganizationUsersCountInput();
};
export async function getOrganizationUsersCount(input, ctx) {
    return getCurrentAsync({ callerContext: ctx })
        .then(businessPartner => {
        if (!businessPartner) {
            return 0;
        }
        return getUsersAsync({ callerContext: ctx }, businessPartner.BusinessPartnerId)
            .then((users) => {
            return users.length;
        })
            .catch(error => {
            ctx.telemetry.exception(error);
            ctx.trace('[get-organization-users-count] Unable to load users');
            throw new Error('[get-organization-users-count] Unable to load users');
        });
    })
        .catch(error => {
        ctx.telemetry.exception(error);
        ctx.telemetry.debug('[get-organization-users-count] Unable to get BusinessPartner');
        throw new Error('[get-organization-users-count] Unable to get BusinessPartner');
    });
}
export default createObservableDataAction({
    id: 'get-organization-users-count',
    action: getOrganizationUsersCount,
    input: createGetOrganizationUsersCountInput
});
//# sourceMappingURL=get-organization-users-count.js.map