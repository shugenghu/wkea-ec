{"version":3,"file":"get-dimensions-for-selected-variant.js","sourceRoot":"","sources":["../../src/get-dimensions-for-selected-variant.ts"],"names":[],"mappings":"AAEA,OAAO,EAAE,0BAA0B,EAAwC,MAAM,yBAAyB,CAAC;AAE3G,OAAO,kBAAkB,EAAE,EAAE,oBAAoB,EAAE,MAAM,wBAAwB,CAAC;AAClF,OAAO,EAAE,mCAAmC,EAAE,MAAM,mBAAmB,CAAC;AAExE,OAAO,EAAE,uBAAuB,EAAE,MAAM,wEAAwE,CAAC;AAEjH;;GAEG;AACH,MAAM,OAAO,oCAAoC;IAK7C,YAAY,SAAiB,EAAE,SAAiB,EAAE,uBAA4C;QAMvF,gBAAW,GAAG,GAAG,EAAE,CAAC,8BAA8B,CAAC;QACnD,uBAAkB,GAAG,GAAG,EAAE,CAAC,mCAAmC,CAAC;QAC/D,kBAAa,GAAG,GAAc,EAAE,CAAC,MAAM,CAAC;QAP3C,IAAI,CAAC,SAAS,GAAG,SAAS,CAAC;QAC3B,IAAI,CAAC,SAAS,GAAG,SAAS,CAAC;QAC3B,IAAI,CAAC,uBAAuB,GAAG,uBAAuB,IAAI,EAAE,CAAC;IACjE,CAAC;CAKJ;AAED;;;GAGG;AACH,MAAM,uCAAuC,GAAG,CAAC,SAA+C,EAAwB,EAAE;IACtH,MAAM,SAAS,GAAG,mCAAmC,CAAC,SAAS,CAAC,CAAC;IAEjE,IAAI,SAAS,EAAE;QACX,OAAO,IAAI,oCAAoC,CAAC,CAAC,SAAS,EAAE,CAAC,SAAS,CAAC,cAAc,CAAC,WAAW,CAAC,SAAS,EAAE,EAAE,CAAC,CAAC;KACpH;SAAM;QACH,MAAM,IAAI,KAAK,CAAC,kGAAkG,CAAC,CAAC;KACvH;AACL,CAAC,CAAC;AAEF;;GAEG;AACH,KAAK,UAAU,qCAAqC,CAChD,KAA2C,EAC3C,GAAmB;IAEnB,MAAM,oBAAoB,GAAG,IAAI,oBAAoB,CAAC,KAAK,CAAC,SAAS,EAAE,KAAK,CAAC,SAAS,EAAE,KAAK,CAAC,uBAAuB,CAAC,CAAC;IAEvH,MAAM,aAAa,GAAyB,MAAM,kBAAkB,CAAC,oBAAoB,EAAE,GAAG,CAAC,CAAC;IAEhG,IAAI,aAAa,IAAI,aAAa,CAAC,UAAU,IAAI,aAAa,CAAC,UAAU,CAAC,MAAM,GAAG,CAAC,EAAE;QAClF,MAAM,OAAO,GAA2B,EAAE,CAAC;QAE3C,KAAK,MAAM,SAAS,IAAI,aAAa,CAAC,UAAU,EAAE;YAC9C,MAAM,eAAe,GAAG,MAAM,uBAAuB,CACjD,EAAE,aAAa,EAAE,GAAG,EAAE,mBAAmB,EAAE,EAAE,EAAE,EAC/C,aAAa,CAAC,eAAe,CAAC,CAAC,CAAC,aAAa,CAAC,eAAe,CAAC,CAAC,CAAC,aAAa,CAAC,QAAQ,EACtF,KAAK,CAAC,SAAS,EACf,SAAS,CAAC,kBAAkB,EAC5B,KAAK,CAAC,uBAAuB,CAAC,MAAM,CAAC,KAAK,CAAC,EAAE,CAAC,KAAK,CAAC,kBAAkB,KAAK,SAAS,CAAC,kBAAkB,CAAC;YACxG,8DAA8D;YAC9D,IAAI,CACP,CAAC;YAEF,MAAM,aAAa,GAAyB;gBACxC,GAAG,SAAS;gBACZ,eAAe,EAAE,eAAe;aACnC,CAAC;YAEF,OAAO,CAAC,IAAI,CAAC,aAAa,CAAC,CAAC;SAC/B;QAED,OAAO,OAAO,CAAC;KAClB;IAED,OAAO,EAAE,CAAC;AACd,CAAC;AAED;;;;GAIG;AACH,eAAe,0BAA0B,CAAC;IACtC,EAAE,EAAE,+EAA+E;IACnF,MAAM,EAAmC,qCAAqC;IAC9E,KAAK,EAAE,uCAAuC;CACjD,CAAC,CAAC","sourcesContent":["import { ProductDimensionFull } from '@msdyn365-commerce/commerce-entities';\nimport { CacheType, IAction, IActionContext, IActionInput } from '@msdyn365-commerce/core';\nimport { createObservableDataAction, IAny, ICreateActionContext, IGeneric } from '@msdyn365-commerce/core';\nimport { ProductDimension, SimpleProduct } from '@msdyn365-commerce/retail-proxy/dist/Entities/CommerceTypes.g';\nimport getSelectedVariant, { SelectedVariantInput } from './get-selected-variant';\nimport { getSelectedProductIdFromActionInput } from './utilities/utils';\n\nimport { getDimensionValuesAsync } from '@msdyn365-commerce/retail-proxy/dist/DataActions/ProductsDataActions.g';\n\n/**\n * Input class for the getDimensionsForSelectedVariant data action\n */\nexport class GetDimensionsForSelectedVariantInput implements IActionInput {\n    public productId: number;\n    public channelId: number;\n    public matchingDimensionValues: ProductDimension[];\n\n    constructor(productId: number, channelId: number, matchingDimensionValues?: ProductDimension[]) {\n        this.productId = productId;\n        this.channelId = channelId;\n        this.matchingDimensionValues = matchingDimensionValues || [];\n    }\n\n    public getCacheKey = () => `DimensionsForSelectedVariant`;\n    public getCacheObjectType = () => 'DimensionsForSelectedVariantInput';\n    public dataCacheType = (): CacheType => 'none';\n}\n\n/**\n * Create input method for the getDimensionsForSelectedVariant data action\n * @param inputData The input data passed to the createInput method\n */\nconst createDimensionsForSelectedVariantInput = (inputData: ICreateActionContext<IGeneric<IAny>>): SelectedVariantInput => {\n    const productId = getSelectedProductIdFromActionInput(inputData);\n\n    if (productId) {\n        return new GetDimensionsForSelectedVariantInput(+productId, +inputData.requestContext.apiSettings.channelId, []);\n    } else {\n        throw new Error('Unable to create DimensionsForSelectedVariantInput, no productId found on module config or query');\n    }\n};\n\n/**\n * Action Method for the getDimensionsForSelectedVariant Data Action\n */\nasync function getDimensionsForSelectedVariantAction(\n    input: GetDimensionsForSelectedVariantInput,\n    ctx: IActionContext\n): Promise<ProductDimensionFull[]> {\n    const selectedVariantInput = new SelectedVariantInput(input.productId, input.channelId, input.matchingDimensionValues);\n\n    const activeProduct: SimpleProduct | null = await getSelectedVariant(selectedVariantInput, ctx);\n\n    if (activeProduct && activeProduct.Dimensions && activeProduct.Dimensions.length > 0) {\n        const results: ProductDimensionFull[] = [];\n\n        for (const dimension of activeProduct.Dimensions) {\n            const dimensionValues = await getDimensionValuesAsync(\n                { callerContext: ctx, queryResultSettings: {} },\n                activeProduct.MasterProductId ? activeProduct.MasterProductId : activeProduct.RecordId,\n                input.channelId,\n                dimension.DimensionTypeValue,\n                input.matchingDimensionValues.filter(value => value.DimensionTypeValue !== dimension.DimensionTypeValue),\n                // @ts-ignore: KitVariantResolution context should be nullable\n                null\n            );\n\n            const fullDimension: ProductDimensionFull = {\n                ...dimension,\n                DimensionValues: dimensionValues,\n            };\n\n            results.push(fullDimension);\n        }\n\n        return results;\n    }\n\n    return [];\n}\n\n/**\n * The GetDimensionsForSelectedVariantDataAction\n * Get the currently selected Variant via the getSelectedVariant data action, and the gets the\n * available product dimensions for the variant via the getDimensionValues RetailServer API\n */\nexport default createObservableDataAction({\n    id: '@msdyn365-commerce-modules/retail-actions/get-dimensions/for-selected-variant',\n    action: <IAction<ProductDimensionFull[]>>getDimensionsForSelectedVariantAction,\n    input: createDimensionsForSelectedVariantInput\n});\n"]}