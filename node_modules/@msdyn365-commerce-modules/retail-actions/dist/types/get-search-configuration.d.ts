import { CacheType, IActionInput, ICommerceApiSettings } from '@msdyn365-commerce/core';
import { IActionContext, ICreateActionContext } from '@msdyn365-commerce/core';
import { SortColumn } from '@msdyn365-commerce/retail-proxy';
interface SearchConfiguration {
    ProductSortColumns?: SortColumn[];
}
/**
 * Action Input class for the getSearchConfiguration data action
 */
export declare class SearchConfigurationInput implements IActionInput {
    private apiSettings;
    constructor(apiSettings: ICommerceApiSettings);
    getCacheKey: () => string;
    getCacheObjectType: () => string;
    dataCacheType: () => CacheType;
}
/**
 * Creates the input required to make the retail api call
 */
export declare const createSearchConfigurationInput: (inputData: ICreateActionContext<{
    [x: string]: any;
}, {}>) => IActionInput;
/**
 * Calls the Retail API
 */
export declare function getSearchConfigurationAction(input: SearchConfigurationInput, ctx: IActionContext): Promise<SearchConfiguration>;
declare const _default: import("@msdyn365-commerce/core").IObservableAction<SearchConfiguration>;
export default _default;
