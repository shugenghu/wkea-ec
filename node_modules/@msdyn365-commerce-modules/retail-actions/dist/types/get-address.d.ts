import { CacheType, IActionContext, IActionInput, ICommerceApiSettings } from '@msdyn365-commerce/core';
import { ICreateActionContext } from '@msdyn365-commerce/core';
import { Address } from '@msdyn365-commerce/retail-proxy';
/**
 *  Input class for the getAddress data action
 */
export declare class AddressInput implements IActionInput {
    userAccountNumber?: string;
    private apiSettings;
    constructor(apiSettings: ICommerceApiSettings, userAccountNumber?: string);
    getCacheKey: () => string;
    getCacheObjectType: () => string;
    dataCacheType: () => CacheType;
}
/**
 * createInput method for the getAddress method
 * @param inputData The input data passed to the createInput method
 */
export declare const createGetAddressInput: (inputData: ICreateActionContext<{}, {}>) => IActionInput;
/**
 * The action method for the getAddress data action
 * @param input The action input
 * @param ctx The action context
 */
export declare function getAddressAction(input: AddressInput, ctx: IActionContext): Promise<Address[]>;
declare const _default: import("@msdyn365-commerce/core").IObservableAction<Address[]>;
/**
 * The getAddress data action
 * Gets a customers information via the read RetailServer API
 * Returns address information associated with the retrieved customer
 */
export default _default;
