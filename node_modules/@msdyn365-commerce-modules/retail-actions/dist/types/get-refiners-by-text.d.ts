import { CacheType, IActionInput, ICommerceApiSettings } from '@msdyn365-commerce/core';
import { IActionContext, ICreateActionContext } from '@msdyn365-commerce/core';
import { ProductRefiner } from '@msdyn365-commerce/retail-proxy';
import { QueryResultSettingsProxy } from './utilities/QueryResultSettingsProxy';
/**
 * Action Input class for the getRefinersByText data action
 */
export declare class RefinersByTextInput implements IActionInput {
    readonly catalogId: number;
    readonly searchText: string;
    readonly queryResultSettingsProxy: QueryResultSettingsProxy;
    private apiSettings;
    constructor(searchText: string, catalogId: number, queryResultSettingsProxy: QueryResultSettingsProxy, apiSettings: ICommerceApiSettings);
    getCacheKey: () => string;
    getCacheObjectType: () => string;
    dataCacheType: () => CacheType;
}
/**
 * Creates the input required to make the retail api call
 */
export declare const createRefinersByTextInput: (inputData: ICreateActionContext<{
    [x: string]: any;
}, {}>) => IActionInput;
/**
 * Calls the Retail API and returns all refiners by text
 */
export declare function getRefinersByTextAction(input: RefinersByTextInput, ctx: IActionContext): Promise<ProductRefiner[]>;
declare const _default: import("@msdyn365-commerce/core").IObservableAction<ProductRefiner[]>;
export default _default;
