import { CacheType, IActionInput, IRequestContext, ICommerceApiSettings } from '@msdyn365-commerce/core';
import { IActionContext, ICreateActionContext } from '@msdyn365-commerce/core';
import { CategoryPathLookup } from '@msdyn365-commerce/retail-proxy/dist/Entities/CommerceTypes.g';
import { ICategoryUrl } from '@msdyn365-commerce/core-internal/dist/types/interfaces/ICategoryPathInterfaces';
/**
 * Category path input
 */
export declare class GetCategoryPathsInput implements IActionInput {
    readonly ChannelId: number;
    readonly CatalogId: number;
    readonly categoryPathLooksups: CategoryPathLookup[];
    private constructedCacheKey;
    readonly apiSettings: ICommerceApiSettings;
    constructor(context: IRequestContext, categoryPathLooksups: CategoryPathLookup[]);
    getCacheKey: () => string;
    getCacheObjectType: () => string;
    dataCacheType: () => CacheType;
}
/**
 * Creates the input required to make the getCategoryPath retail api call
 */
export declare const createGetCategoryPathsInput: (inputData: ICreateActionContext<{
    [x: string]: any;
}, {}>) => IActionInput;
/**
 * Calls the Retail API and returns the category path for a product
 */
export declare function getCategoryPathsAction(input: GetCategoryPathsInput, ctx: IActionContext): Promise<ICategoryUrl[]>;
declare const _default: import("@msdyn365-commerce/core").IObservableAction<ICategoryUrl[]>;
export default _default;
