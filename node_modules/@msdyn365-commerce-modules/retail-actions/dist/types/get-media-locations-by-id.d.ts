import { CacheType, IActionInput, ICommerceApiSettings } from '@msdyn365-commerce/core';
import { IActionContext, ICreateActionContext } from '@msdyn365-commerce/core';
import { MediaLocation } from '@msdyn365-commerce/retail-proxy/dist/Entities/CommerceTypes.g';
/**
 * Product Input
 */
export declare class MediaLocationsByIdInput implements IActionInput {
    productId?: number;
    channelId: number;
    catalogId: number;
    private apiSettings;
    constructor(apiSettings: ICommerceApiSettings, productId?: number, catalogId?: number);
    getCacheKey: () => string;
    getCacheObjectType: () => string;
    dataCacheType: () => CacheType;
}
/**
 * Creates the input required to make the retail api call
 */
export declare const createMediaLocationsByIdInput: (inputData: ICreateActionContext<{
    [x: string]: any;
}, {}>) => MediaLocationsByIdInput;
/**
 * Calls the Retail API and returns the product based on the passed MediaLocationsByIdInput
 */
export declare function getMediaLocationsByIdAction(input: MediaLocationsByIdInput, ctx: IActionContext): Promise<MediaLocation[]>;
declare const _default: import("@msdyn365-commerce/core").IObservableAction<MediaLocation[] | null>;
export default _default;
