import { CacheType, IActionContext, IActionInput, ICreateActionContext } from '@msdyn365-commerce/core';
import { ProductDeliveryOptions, SimpleProduct } from '@msdyn365-commerce/retail-proxy/dist/Entities/CommerceTypes.g';
/**
 * Input class for the GetDeliveryOptionsForSelectedVariant Data Action
 */
export declare class GetDeliveryOptionsForSelectedVariantInput implements IActionInput {
    productId: number;
    channelId: number;
    selectedProduct: SimpleProduct | undefined;
    customerId: string;
    constructor(productId: number, channelId: number, selectedProduct?: SimpleProduct, customerId?: string);
    getCacheKey: () => string;
    getCacheObjectType: () => string;
    dataCacheType: () => CacheType;
}
/**
 * The createInput method for the GetDeliveryOptionsForSelectedVariant Data Action
 * @param inputData The input data for the createInput method
 */
export declare const createDeliveryOptionsForSelectedVariantInput: (inputData: ICreateActionContext<{
    [x: string]: any;
}, {}>) => GetDeliveryOptionsForSelectedVariantInput;
/**
 * The Action Method for the GetDeliveryOptionsForSelectedVariant Data Action
 * Pulls the currently selected variant from the cache using the getSelectedVariant data action, and gets it's supported delivery options
 * via the getDeliveryOptionsAsync RetailServer API
 */
export declare function getDeliveryOptionsForSelectedVariantAction(input: GetDeliveryOptionsForSelectedVariantInput, ctx: IActionContext): Promise<ProductDeliveryOptions | undefined>;
declare const _default: import("@msdyn365-commerce/core").IObservableAction<ProductDeliveryOptions | undefined>;
export default _default;
