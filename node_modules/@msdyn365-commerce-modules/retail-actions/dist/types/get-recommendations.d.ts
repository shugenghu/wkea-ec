import { FullProduct } from '@msdyn365-commerce/commerce-entities';
import { IActionInput, ICommerceApiSettings } from '@msdyn365-commerce/core';
import { CacheType, IActionContext, ICreateActionContext } from '@msdyn365-commerce/core';
import { ProductDetailsCriteria } from './get-full-products';
/**
 * GetRecommendations Input Action
 */
export declare class GetRecommendationsInput implements IActionInput {
    readonly customerAccountNumber: string;
    readonly productIds: number[];
    readonly catalogId: number;
    readonly categoryIds: number[];
    readonly recommendationType: string;
    readonly skipItems: number;
    readonly maxItems: number;
    readonly channelId: number;
    readonly apiSettings: ICommerceApiSettings;
    ProductDetailsCriteria: ProductDetailsCriteria;
    private constructedCacheKey;
    constructor(customerAccountNumber: string, productIds: number[], categoryIds: number[], recommendationType: string, skipItems: number, maxItems: number, criteria: ProductDetailsCriteria, apiSettings: ICommerceApiSettings);
    getCacheKey: () => string;
    getCacheObjectType: () => string;
    dataCacheType: () => CacheType;
}
/**
 * Creates the input required to make the retail api call to get recommendations
 */
export declare const createInput: (inputData: ICreateActionContext<{
    [x: string]: any;
}, {}>) => IActionInput;
/**
 * Get recommended elements(products/contents) from RS
 */
export declare function getRecommendationsAction(input: GetRecommendationsInput, ctx: IActionContext): Promise<FullProduct[]>;
declare const _default: import("@msdyn365-commerce/core").IObservableAction<FullProduct[]>;
export default _default;
