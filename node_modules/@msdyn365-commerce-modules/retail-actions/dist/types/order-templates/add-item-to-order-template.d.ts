import { CacheType, IActionContext, IActionInput, ICreateActionContext } from '@msdyn365-commerce/core';
import { ProductListLine } from '@msdyn365-commerce/retail-proxy/dist/Entities/CommerceTypes.g';
/**
 *  Input class for the AddItemToOrderTemplate data action.
 */
export declare class AddItemToOrderTemplateInput implements IActionInput {
    readonly orderTemplateId: string;
    readonly productId: number;
    readonly quantity: number;
    readonly unitOfMeasure: string;
    constructor(orderTemplateId: string, productId: number, quantity: number, unitOfMeasure: string);
    getCacheKey: () => string;
    getCacheObjectType: () => string;
    dataCacheType: () => CacheType;
}
/**
 * createInput method for the AddItemToOrderTemplate method.
 * @param {ICreateActionContext} inputData The input data passed to the createInput method.
 * @param {string} orderTemplateId The id of order template to update.
 * @param {number} productId The id of a product to add.
 * @param {number} quantity How many items of this product to add.
 */
export declare const addItemToOrderTemplateInput: (inputData: ICreateActionContext<{}, {}>, orderTemplateId: string, productId: number, quantity: number, unitOfMeasure: string) => AddItemToOrderTemplateInput;
/**
 * The action method for the AddItemToOrderTemplate data action.
 * @param {AddItemToOrderTemplateInput} input The action input.
 * @param {IActionContext} ctx The action context.
 */
export declare function addItemToOrderTemplateAction(input: AddItemToOrderTemplateInput, ctx: IActionContext): Promise<ProductListLine>;
declare const _default: import("@msdyn365-commerce/core").IObservableAction<ProductListLine>;
/**
 * The AddItemToOrderTemplate Data Action.
 * Returns product list line that was added to the order template.
 */
export default _default;
