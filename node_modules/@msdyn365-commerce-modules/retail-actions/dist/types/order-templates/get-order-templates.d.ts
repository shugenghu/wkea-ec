import { CacheType, IActionContext, IActionInput, ICreateActionContext } from '@msdyn365-commerce/core';
import { QueryResultSettings } from '@msdyn365-commerce/retail-proxy';
import { ProductList } from '@msdyn365-commerce/retail-proxy/dist/Entities/CommerceTypes.g';
/**
 *  Input class for the GetOrderTemplates data action
 */
export declare class GetOrderTemplatesInput implements IActionInput {
    readonly productListId: string;
    readonly queryResultSettings?: QueryResultSettings;
    constructor(productListId?: string, queryResultSettings?: QueryResultSettings);
    getCacheKey: () => string;
    getCacheObjectType: () => string;
    dataCacheType: () => CacheType;
    shouldCacheOutput: () => boolean;
}
/**
 * createInput method for the GetOrderTemplate method
 * @param inputData The input data passed to the createInput method.
 * @param productListId? The product list identifier.
 * @param queryResultSettings? The query result setting required for pagination/ordering.
 */
export declare const createGetOrderTemplatesInput: (inputData: ICreateActionContext<{}, {}>, productListId?: string | undefined, queryResultSettings?: QueryResultSettings | undefined) => GetOrderTemplatesInput;
/**
 * The action method for the GetOrderTemplates data action
 * @param input The action input
 * @param ctx The action context
 */
export declare function getOrderTemplatesAction(input: GetOrderTemplatesInput, ctx: IActionContext): Promise<ProductList[]>;
declare const _default: import("@msdyn365-commerce/core").IObservableAction<ProductList[]>;
/**
 * The GetOrderTemplates Data Action
 * Returns order templates
 */
export default _default;
