import { IRefineFullProductSearchOutput } from '@msdyn365-commerce/commerce-entities';
import { CacheType, IActionInput } from '@msdyn365-commerce/core';
import { IActionContext, ICreateActionContext } from '@msdyn365-commerce/core';
import { ProductRefinerValue } from '@msdyn365-commerce/retail-proxy';
import { ProductDetailsCriteria } from './get-full-products';
import { QueryResultSettingsProxy } from './utilities/QueryResultSettingsProxy';
import { IRefinableProductsInput } from './utilities/refiner-utils';
/**
 * Input for refining products returned by the search text.
 */
export declare class FullProductsRefineSearchByTextInput implements IActionInput, IRefinableProductsInput {
    readonly searchText: string;
    readonly channelId?: number;
    readonly refinementCriteria: ProductRefinerValue[];
    readonly itemsPerPage?: number;
    readonly skipCount?: number;
    readonly catalogId: number;
    productDetailsCriteria?: ProductDetailsCriteria;
    readonly queryResultSettingsProxy: QueryResultSettingsProxy;
    constructor(queryResultSettingsProxy: QueryResultSettingsProxy, searchText?: string, channelId?: number, refinementCriteria?: ProductRefinerValue[], catalogId?: number, criteria?: ProductDetailsCriteria);
    getCacheKey: () => string;
    getCacheObjectType: () => string;
    dataCacheType: () => CacheType;
}
/**
 * Creates the input required to make the core action calls
 */
export declare const createFullProductsRefineSearchByTextInput: (inputData: ICreateActionContext<{
    [x: string]: any;
}, {}>) => IActionInput;
/**
 * Calls the refine-search-by-text action.
 * Based on search result calls get-full-products to get all the product details.
 */
export declare function getFullProductsByRefineSearchTextAction(input: FullProductsRefineSearchByTextInput, ctx: IActionContext): Promise<IRefineFullProductSearchOutput>;
declare const _default: import("@msdyn365-commerce/core").IObservableAction<IRefineFullProductSearchOutput>;
export default _default;
