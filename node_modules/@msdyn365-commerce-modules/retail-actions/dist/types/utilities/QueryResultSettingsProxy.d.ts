import { IAny, ICreateActionContext, IGeneric, IRequestContext } from '@msdyn365-commerce/core';
import { QueryResultSettings } from '@msdyn365-commerce/retail-proxy';
import { IQueryResultSettingsModuleConfig } from './IQueryResultSettingsModuleConfig';
/**
 * Wrapper for query result settings, which guarantees some properties that are optional in the real subject
 * and includes some common utilities for data actions
 */
export declare class QueryResultSettingsProxy {
    private queryResultSettings;
    get QueryResultSettings(): QueryResultSettings;
    /**
     * Gets the hints for the cache key based on query result settings
     */
    get cacheKeyHint(): string;
    /**
     * Factory method for data actions
     * @param inputData input data
     */
    static fromInputData(inputData: ICreateActionContext<IGeneric<IAny>>): QueryResultSettingsProxy;
    /**
     * Factory method for modules
     * @param requestContext requestContext
     * @param config module config from props
     */
    static fromModuleData(requestContext: IRequestContext, config: IQueryResultSettingsModuleConfig): QueryResultSettingsProxy;
    /**
     * Factory method
     */
    static getDefault(): QueryResultSettingsProxy;
    /**
     * private constructor, expect instances to be created with the factory method
     */
    private constructor();
}
