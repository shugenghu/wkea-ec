import { IRefineFullProductSearchOutput } from '@msdyn365-commerce/commerce-entities';
import { CacheType, IActionInput } from '@msdyn365-commerce/core';
import { IActionContext, ICreateActionContext } from '@msdyn365-commerce/core';
import { ProductRefinerValue } from '@msdyn365-commerce/retail-proxy';
import { ProductDetailsCriteria } from './get-full-products';
import { QueryResultSettingsProxy } from './utilities/QueryResultSettingsProxy';
/**
 * Refine search for full products input
 */
export declare class FullProductsRefineSearchByCategoryInput implements IActionInput {
    readonly categoryId?: number;
    readonly channelId?: number;
    readonly refinementCriteria: ProductRefinerValue[];
    readonly catalogId: number;
    ProductDetailsCriteria?: ProductDetailsCriteria;
    readonly queryResultSettingsProxy: QueryResultSettingsProxy;
    constructor(queryResultSettingsProxy: QueryResultSettingsProxy, categoryId?: number, channelId?: number, refinementCriteria?: ProductRefinerValue[], catalogId?: number, criteria?: ProductDetailsCriteria);
    getCacheKey: () => string;
    getCacheObjectType: () => string;
    dataCacheType: () => CacheType;
}
/**
 * Creates the input required to make the core action calls
 */
export declare const createFullProductsRefineSearchByCategoryInput: (inputData: ICreateActionContext<{
    [x: string]: any;
}, {}>) => IActionInput;
/**
 * Calls the refine-search-by-category action.
 * Based on search result calls get-full-products to get all the product details.
 */
export declare function getFullProductsByRefineSearchCategoryAction(input: FullProductsRefineSearchByCategoryInput, ctx: IActionContext): Promise<IRefineFullProductSearchOutput>;
declare const _default: import("@msdyn365-commerce/core").IObservableAction<IRefineFullProductSearchOutput>;
export default _default;
