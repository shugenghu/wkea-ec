import { CacheType, IActionContext, IActionInput, ICreateActionContext } from '@msdyn365-commerce/core';
import { IFullOrgUnitAvailability } from './utilities/full-org-unit-availability';
/**
 * Get selected variant action input class
 */
export declare class GetOrgUnitLocationsByAreaInput implements IActionInput {
    Latitude?: number;
    Longitude?: number;
    Radius?: number;
    DistanceUnitValue?: number;
    IgnoreLocation?: boolean;
    constructor(_Latitude?: number, _Longitude?: number, _Radius?: number, _DistanceUnitValue?: number, _IgnoreLocation?: boolean);
    getCacheKey: () => string;
    getCacheObjectType: () => string;
    dataCacheType: () => CacheType;
}
/**
 * CreateInput method for the getSelectedVariant data action
 * @param inputData The input data passed to the createInput method
 */
export declare const createGetOrgUnitLocationsByAreaInput: (inputData: ICreateActionContext<{
    [x: string]: any;
}, {}>) => GetOrgUnitLocationsByAreaInput;
/**
 * Action method for the getSelectedVariant data action
 * @param input The action input class
 * @param ctx The action context
 */
export declare function getOrgUnitLocationsByArea(input: GetOrgUnitLocationsByAreaInput, ctx: IActionContext): Promise<IFullOrgUnitAvailability[] | undefined>;
declare const _default: import("@msdyn365-commerce/core").IObservableAction<IFullOrgUnitAvailability[] | undefined>;
/**
 * The complete getOrgUnitLocationsByArea data action
 */
export default _default;
