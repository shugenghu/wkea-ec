import { FullProduct } from '@msdyn365-commerce/commerce-entities';
import { CacheType, IActionContext, IActionInput, ICommerceApiSettings } from '@msdyn365-commerce/core';
import { ICreateActionContext } from '@msdyn365-commerce/core';
import { ProductDetailsCriteria } from './get-full-products';
import { QueryResultSettingsProxy } from './utilities/QueryResultSettingsProxy';
/**
 * get-full-products-by-search-text data action input
 */
export declare class FullProductBySearchTextInput implements IActionInput {
    readonly catalogId: number;
    readonly channelId: number;
    readonly searchText: string;
    ProductDetailsCriteria: ProductDetailsCriteria;
    readonly queryResultSettingsProxy: QueryResultSettingsProxy;
    readonly apiSettings: ICommerceApiSettings;
    constructor(searchText: string, criteria: ProductDetailsCriteria, queryResultSettingsProxy: QueryResultSettingsProxy, apiSettings: ICommerceApiSettings);
    getCacheKey: () => string;
    getCacheObjectType: () => string;
    dataCacheType: () => CacheType;
}
/**
 * Creates the input required to make the retail api call
 *   Requires: query string ?q={searchText}
 */
export declare const createFullProductSearchByTextInput: (inputData: ICreateActionContext<{
    [x: string]: any;
}, {}>) => IActionInput;
export declare function fullProductSearchByTextAction(input: FullProductBySearchTextInput, ctx: IActionContext): Promise<FullProduct[]>;
declare const _default: import("@msdyn365-commerce/core").IObservableAction<FullProduct[]>;
export default _default;
