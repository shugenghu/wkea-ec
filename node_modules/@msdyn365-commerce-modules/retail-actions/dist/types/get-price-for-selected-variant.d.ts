import { CacheType, IActionContext, IActionInput, ICreateActionContext } from '@msdyn365-commerce/core';
import { ProductPrice, SimpleProduct } from '@msdyn365-commerce/retail-proxy/dist/Entities/CommerceTypes.g';
/**
 * Input class for the GetPriceForSelectedVariant Data Action
 */
export declare class PriceForSelectedVariantInput implements IActionInput {
    productId: number;
    channelId: number;
    selectedProduct: SimpleProduct | undefined;
    customerId?: string;
    constructor(productId: number, channelId: number, selectedProduct?: SimpleProduct, customerId?: string);
    getCacheKey: () => string;
    getCacheObjectType: () => string;
    dataCacheType: () => CacheType;
}
/**
 * The createInput method for the GetPriceForSelectedVariantDataAction
 * @param inputData The input data for the createInput method
 */
export declare const createActivePriceForSelectedVariantInput: (inputData: ICreateActionContext<{
    [x: string]: any;
}, {}>) => PriceForSelectedVariantInput;
/**
 * The Action Method for the GetPriceForSelectedVariant Data Action
 * Pulls the currently selected variant from the cache using the getSelectedVariant data action, and gets it's current contextual price
 * via the getActivePrice RetailServer API
 */
export declare function getPriceForSelectedVariantAction(input: PriceForSelectedVariantInput, ctx: IActionContext): Promise<ProductPrice | null>;
declare const _default: import("@msdyn365-commerce/core").IObservableAction<ProductPrice | null>;
export default _default;
