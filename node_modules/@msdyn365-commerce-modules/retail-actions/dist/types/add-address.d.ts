import { CacheType, IActionContext, IActionInput, ICreateActionContext } from '@msdyn365-commerce/core';
import { Address, Customer } from '@msdyn365-commerce/retail-proxy';
export interface IAddressManagementData {
    address: Address;
}
export interface IAddressManagementInput extends IActionInput {
    address: Address;
    userAccountNumber?: string;
}
/**
* The input class for the addAddress data action
*/
export declare class AddressManagementInput implements IAddressManagementInput {
    address: Address;
    userAccountNumber?: string;
    constructor(address: Address, userAccountNumber?: string);
    getCacheKey: () => string;
    getCacheObjectType: () => string;
    dataCacheType: () => CacheType;
}
/**
* The createInput method for the addAddress data action
* @param inputData The input data passed to the createInput method
*/
export declare const createAddressManagementInput: (inputData: ICreateActionContext<{
    [x: string]: any;
}, IAddressManagementData>) => IAddressManagementInput;
export declare function doAddressManagementOperation(input: IAddressManagementInput, ctx: IActionContext, operationHandler: (customer: Customer, address: Address) => Customer): Promise<Address[]>;
export declare function addAddressHandler(customer: Customer, address: Address): Customer;
export declare function addAddressAction(input: IAddressManagementInput, ctx: IActionContext): Promise<Address[]>;
declare const _default: import("@msdyn365-commerce/core").IObservableAction<Address[]>;
/**
* The addAddress data action
* Calls the read RetailServer API to get information about a customer
* Adds the passed address information to the retireved customer, and
* then updates that customer via the update RetailServer API.
*/
export default _default;
