{"version":3,"file":"business-sign-up.js","sourceRoot":"./src/","sources":["modules/business-sign-up/business-sign-up.tsx"],"names":[],"mappings":"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","sourcesContent":["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nimport * as React from 'react';\n\nimport { getTelemetryObject, Heading, IModuleProps, INodeProps, ITelemetryContent } from '@msdyn365-commerce-modules/utilities';\nimport { getUrlSync, RichTextComponent } from '@msdyn365-commerce/core';\nimport { Address, BusinessPartnerProspect } from '@msdyn365-commerce/retail-proxy';\nimport { createProspectAsync } from '@msdyn365-commerce/retail-proxy/dist/DataActions/BusinessPartnersDataActions.g';\nimport classnames from 'classnames';\nimport { IBusinessSignUpConfig, IBusinessSignUpProps } from './business-sign-up.props.autogenerated';\nimport { SignUpButton, SignUpError, SignUpInput, SignUpLabel } from './components';\n\nexport interface IBusinessSignUpExtendedProps extends IBusinessSignUpProps<IBusinessSignUpConfig> {\n    formItems?: IFormItem[];\n}\n\nexport interface IBusinessSignUpItem {\n    wrapper: INodeProps;\n    isAddressInput?: boolean;\n    id: string;\n    label: React.ReactNode;\n    errorMessage: React.ReactNode;\n    input?: React.ReactNode;\n}\n\nexport interface IBusinessState {\n    isReady: boolean;\n    formItems: IFormItem[];\n    addressHasErrors: boolean;\n    showAddressErrors: boolean;\n    hasSubmitErrors: boolean;\n}\n\nexport interface IBusinessSignUpLocalAccount {\n    FormWrapper: INodeProps;\n    items: IBusinessSignUpItem[];\n    buttons: React.ReactNode[];\n    errorMessage: React.ReactNode[];\n    disclaimer: React.ReactNode;\n}\n\nexport interface IBusinessSignUpViewProps {\n    className: string;\n    businessSignUp: IModuleProps;\n    ContainerWrapper: INodeProps;\n    heading: React.ReactNode;\n    businessSignUpForm: IBusinessSignUpLocalAccount;\n    formItems: IFormItem[];\n}\n\nexport interface IFormItem {\n    id: string;\n    type: InputType;\n    label: string;\n    value: string;\n    maxChars?: string;\n    isRequired: boolean;\n    pattern?: string;\n    address?: Address;\n    customClass?: string;\n}\n\nexport enum InputType {\n    Text = 'text',\n    Address = 'address',\n    Email = 'email',\n    TextArea = 'textarea'\n}\n\nexport enum InputID {\n    FirstName = 'FirstName',\n    LastName = 'LastName',\n    Email = 'CompanyEmail',\n    CompanyName = 'CompanyName',\n    Address = 'CompanyAddress',\n    JobTitle = 'JobTitle',\n    Size = 'CompanySize',\n    Department = 'Department',\n    Comment = 'Comment'\n}\n\nexport const renderInputSection = (inputs: IFormItem[], className: string, needToReset: boolean, onInputChange: (event: React.ChangeEvent<HTMLInputElement | HTMLTextAreaElement>) => void,\n                                   showErrors: boolean, addressForm?: React.ReactNode, updateAddress?: (errors: boolean, currAddress?: Address) => void): IBusinessSignUpItem[] => {\n    return inputs.map((element, index) => {\n        const { id, type, label, maxChars, isRequired, pattern, customClass, value } = element;\n\n        const baseSignUpItem: IBusinessSignUpItem = {\n            wrapper: {\n                className: classnames(className, `${className}-${id}`, customClass)\n            },\n            id: id,\n            label: <SignUpLabel { ...{ id, forId: id, className, text: label }} />,\n            errorMessage: <SignUpError { ...{ className: className, type: 'item' }} />,\n        };\n\n        if (type === InputType.Address) {\n            if (addressForm) {\n                baseSignUpItem.isAddressInput = true;\n                baseSignUpItem.input = (\n                    <React.Fragment>\n                        {React.cloneElement(addressForm as React.ReactElement, { updateForm: updateAddress, hasError: showErrors, isRequired: isRequired === undefined ? false : isRequired, resetAddress: needToReset })}\n                    </React.Fragment>\n                );\n            } else {\n                // if the address slot is not filled, remove this input from the form\n                inputs.splice(index, 1);\n            }\n        } else {\n            baseSignUpItem.input = (\n                <SignUpInput\n                    {\n                    ...{\n                            id: id,\n                            type: type,\n                            value: value,\n                            maxLength: maxChars,\n                            pattern: pattern,\n                            className: className,\n                            isRequired: isRequired === undefined ? false : isRequired,\n                            onChange: onInputChange\n                        }\n                    }\n                />\n            );\n        }\n\n        return baseSignUpItem;\n    });\n};\n\n/**\n *\n * Business Request Form Modules\n * Form that a business can use to submit a request to become a partner with Microsoft.\n * @extends {React.Component<IBusinessSignUpProps<IBusinessSignUpConfig>>}\n */\nclass BusinessSignUp extends React.Component<IBusinessSignUpExtendedProps, IBusinessState> {\n    // used as default data\n    public BusinessSignUpDefaultInputs: IFormItem[] = [\n        {\n            id: InputID.FirstName,\n            type: InputType.Text,\n            label: this.props.resources.firstNameLabel,\n            value: '',\n            isRequired: true,\n            customClass: 'width-25'\n        },\n        {\n            id: InputID.LastName,\n            type: InputType.Text,\n            label: this.props.resources.lastNameLabel,\n            value: '',\n            isRequired: true,\n            customClass: 'width-25'\n        },\n        {\n            id: InputID.Email,\n            type: InputType.Email,\n            label: this.props.resources.emailAddressLabel,\n            value: '',\n            isRequired: true,\n            pattern: '^[a-zA-Z0-9.!#$%&\\'^_`{}~-]+@[a-zA-Z0-9-]+(?:\\\\.[a-zA-Z0-9-]+)*$',\n            customClass: 'width-50'\n        },\n        {\n            id: InputID.CompanyName,\n            type: InputType.Text,\n            label: this.props.resources.companyLabel,\n            value: '',\n            isRequired: true,\n            customClass: 'width-50'\n        },\n        {\n            id: InputID.Department,\n            type: InputType.Text,\n            label: this.props.resources.departmentLabel,\n            value: '',\n            isRequired: false,\n            customClass: 'width-50'\n        },\n        {\n            id: InputID.JobTitle,\n            type: InputType.Text,\n            label: this.props.resources.jobTitleLabel,\n            value: '',\n            isRequired: false,\n            customClass: 'width-50'\n        },\n        {\n            id: InputID.Size,\n            type: InputType.Text,\n            label: this.props.resources.companySizeLabel,\n            value: '',\n            isRequired: false,\n            customClass: 'width-50'\n        },\n        {\n            id: InputID.Address,\n            type: InputType.Address,\n            label: this.props.resources.companyAddressLabel,\n            value: '',\n            isRequired: false,\n            customClass: 'width-100'\n        },\n        {\n            id: InputID.Comment,\n            type: InputType.TextArea,\n            label: this.props.resources.commentLabel,\n            value: '',\n            isRequired: false,\n            customClass: 'width-100'\n        }\n    ];\n\n    private moduleClassName: string = 'ms-business-sign-up';\n    private needsToReset: boolean = false;\n    private telemetryContent: ITelemetryContent;\n\n    constructor(props: IBusinessSignUpExtendedProps) {\n        super(props);\n\n        this.state = {\n            isReady: false,\n            formItems: this.props.formItems || this.BusinessSignUpDefaultInputs,\n            addressHasErrors: false,\n            showAddressErrors: false,\n            hasSubmitErrors: false\n        };\n        this.telemetryContent = getTelemetryObject(this.props.context.request.telemetryPageName!, this.props.friendlyName, this.props.telemetry);\n    }\n\n    public render(): JSX.Element {\n        const { config } = this.props;\n        const { formItems } = this.state;\n        const { className, heading } = config;\n\n        const viewProps = {\n            ...this.props,\n            businessSignUp: {\n                moduleProps: this.props,\n                className: classnames(this.moduleClassName, className)\n            },\n            ContainerWrapper: {\n                className: `${this.moduleClassName}__container`\n            },\n            heading: <Heading className={`${this.moduleClassName}__heading`} {...heading} />,\n            businessSignUpForm: this._renderForm(),\n            formItems: formItems\n        };\n\n        return this.props.renderView(viewProps) as React.ReactElement;\n    }\n\n    private _renderForm(): IBusinessSignUpLocalAccount {\n        const { config, resources, slots } = this.props;\n        const { showAddressErrors, hasSubmitErrors, isReady, formItems } = this.state;\n        const { signUpButtonArialabel, signUpButtonText, cancelButtonArialabel, cancelButtonText, errorMessage, partialAddressErrorMessage } = resources;\n        const addressForm = slots && slots.addressSlot && slots.addressSlot.length > 0 && slots.addressSlot[0] || undefined;\n        const successPageURL = config.confirmationLink && config.confirmationLink.linkUrl && config.confirmationLink.linkUrl.destinationUrl || getUrlSync('home', this.props.context.actionContext);\n\n        const form = {\n            FormWrapper: {\n                className: `${this.moduleClassName}__form `\n            },\n            items: renderInputSection(formItems, `${this.moduleClassName}__form-item`, this.needsToReset, this._onInputChange, showAddressErrors, addressForm, this._onAddressChange),\n            buttons: [\n                // tslint:disable-next-line:max-line-length\n                <SignUpButton key='continue' id='continue' className={`${this.moduleClassName}__create-button`} link={successPageURL} ariaLabel={signUpButtonArialabel} text={signUpButtonText} disabled={!isReady} onClick={this._onSubmit} telemetryContent={this.telemetryContent}/>,\n                <SignUpButton key='cancel' id='cancel' className={`${this.moduleClassName}__cancel-button`} ariaLabel={cancelButtonArialabel} text={cancelButtonText} onClick={this._onCancel} telemetryContent={this.telemetryContent}/>\n            ],\n            errorMessage: [\n                hasSubmitErrors && <SignUpError key='error' id='error' className={this.moduleClassName} message={errorMessage} />,\n                showAddressErrors && <SignUpError key='error' id='error' className={this.moduleClassName} message={partialAddressErrorMessage} />\n            ],\n            disclaimer: config.disclaimer && <RichTextComponent className={`${this.moduleClassName}__disclaimer`} text={config.disclaimer} />,\n        };\n\n        if (this.needsToReset) {\n            this.needsToReset = false;\n        }\n\n        return form;\n    }\n\n    private _onInputChange = (event: React.ChangeEvent<HTMLInputElement | HTMLTextAreaElement>): void => {\n        const newForm = this.state.formItems;\n        newForm.forEach(item => {\n            if (item.id === event.target.id) {\n                item.value = event.target.value;\n            }\n        });\n\n        // check if form is ready, update state object with latest values, values have changed so reset hasSubmitErrros\n        this.setState({\n            isReady: this._isFormReady(),\n            formItems: newForm,\n            hasSubmitErrors: false\n        });\n    }\n\n    private _onAddressChange = (errors: boolean, currentAddress?: Address): void => {\n        // find address item\n        const newForm = this.state.formItems;\n        const addressItem = newForm.find((item) => {\n            return item.type === InputType.Address;\n        });\n\n        // if found --> set to currentAddress\n        if (addressItem) {\n            addressItem.address = currentAddress;\n\n            // update state with new values and set errors to false if address is not required field\n            this.setState({\n                isReady: this._isFormReady(),\n                formItems: newForm,\n                addressHasErrors: errors,\n                showAddressErrors: false\n            });\n        }\n    }\n\n    private _isFormReady = (): boolean => {\n        const { formItems } = this.state;\n\n        for (let i = 0; i < formItems.length; i++) {\n            // will return FALSE if:\n            //  - input field is required\n            //      IF is address AND addressHasErrors === true\n            //      ELSE value is undefined OR empty\n            //  OR\n            //  - pattern provided and value does not match pattern\n            const currentInput = formItems[i];\n\n            if (currentInput.isRequired) {\n                if (currentInput.type === InputType.Address) {\n                    if (this.state.addressHasErrors) {\n                        return false;\n                    }\n                } else {\n                    if (currentInput.value === undefined || currentInput.value === '') {\n                        return false;\n                    }\n                }\n            }\n            if (currentInput.pattern !== undefined && currentInput.value.match(formItems[i].pattern as string) === null) {\n                return false;\n            }\n        }\n\n        return true;\n    }\n\n    private _onSubmit = (event: React.MouseEvent<HTMLElement, MouseEvent>) => {\n        if (this.state.addressHasErrors) {\n            this.setState({\n                showAddressErrors: true\n            });\n\n            event.preventDefault();\n            return;\n        }\n\n        const { context } = this.props;\n\n        // check for matching id and if not empty\n        const firstName = this._getItem(InputID.FirstName);\n        const lastName =  this._getItem(InputID.LastName);\n        const companyName =  this._getItem(InputID.CompanyName);\n        const companyEmail =  this._getItem(InputID.Email);\n        const companyAddress = this._getItem(InputID.Address, true);\n        const jobTitle =  this._getItem(InputID.JobTitle);\n        const department =  this._getItem(InputID.Department);\n        const companySize =  this._getItem(InputID.Size);\n        const comments =  this._getItem(InputID.Comment);\n\n        // API gets email as part of the address object, but I do not use the email input from the address component, thus we need to copy it over\n        if (companyEmail && companyEmail.value && companyAddress && companyAddress.address) {\n            companyAddress.address.Email = companyEmail.value;\n        }\n\n        const newPartner: BusinessPartnerProspect = {\n            FirstName: firstName && firstName.value,\n            LastName: lastName && lastName.value,\n            CompanyName: companyName && companyName.value,\n            Address: companyAddress && companyAddress.address && companyAddress.address,\n            JobTitle: jobTitle && jobTitle.value,\n            Department: department && department.value,\n            CompanySize: companySize && parseInt(companySize.value, 10) || 0,\n            Comments: comments && comments.value,\n        };\n\n        // create business partner request\n        createProspectAsync({ callerContext: context.actionContext }, newPartner)\n            .catch(() => {\n                this.setState({\n                    hasSubmitErrors: true,\n                    isReady: false\n                });\n            });\n    }\n\n    private _onCancel = () => {\n        // reset values of the form\n        const cleanForm = this.state.formItems;\n        cleanForm.forEach(input => {input.value = '';});\n\n        // set reset flag so address input will get reset on next renderInputSection() call\n        this.needsToReset = true;\n\n        this.setState({\n            isReady: false,\n            formItems: cleanForm,\n            addressHasErrors: true,\n            showAddressErrors: false,\n            hasSubmitErrors: false\n        });\n    }\n\n    private _getItem = (id: string, isAddress: boolean = false) => {\n        if (isAddress) {\n            return this.state.formItems.find((item) => { return item.id === id && item.address;});\n        }\n        return this.state.formItems.find((item) => { return item.id === id && item.value !== '';});\n    }\n}\n\nexport default BusinessSignUp;\n"]}