{"version":3,"file":"breadcrumb.view.js","sourceRoot":"./src/","sources":["modules/breadcrumb/breadcrumb.view.tsx"],"names":[],"mappings":"AAAA;;;GAGG;AAEH,OAAO,EAAE,MAAM,EAAE,IAAI,EAAE,MAAM,sCAAsC,CAAC;AACpE,OAAO,UAAU,MAAM,YAAY,CAAC;AACpC,OAAO,KAAK,KAAK,MAAM,OAAO,CAAC;AAG/B,MAAM,cAAc,GAAmC,KAAK,CAAC,EAAE;IAC3D,MAAM,EAAE,IAAI,EAAE,KAAK,EAAE,UAAU,EAAE,mBAAmB,EAAE,cAAc,EAAE,kBAAkB,EAAE,SAAS,EAAE,GAAG,KAAK,CAAC;IAC9G,IAAI,CAAC,IAAI,IAAI,CAAC,KAAK,IAAI,CAAC,UAAU,EAAE;QAChC,KAAK,CAAC,OAAO,CAAC,SAAS,CAAC,KAAK,CAAC,iDAAiD,CAAC,CAAC;QACjF,OAAO,IAAI,CAAC;KACf;IACD,OAAO,CACH,oBAAC,MAAM,oBAAK,mBAAmB;QAC3B,oBAAC,IAAI,oBAAK,cAAc;YACnB,IAAI;gBACD,oBAAC,IAAI,oBAAK,kBAAkB;oBACvB,IAAI;oBACJ,KAAK,IAAI,SAAS,CAChB;YAEV,UAAU;gBACP,oBAAC,IAAI,oBAAK,kBAAkB,GACvB,UAAU,CACR;YAEV,KAAK,IAAI,KAAK,CAAC,GAAG,CAAC,CAAC,IAAI,EAAE,KAAK,EAAE,EAAE,CAAC,CACjC,oBAAC,KAAK,CAAC,QAAQ,IAAC,GAAG,EAAE,KAAK;gBACtB,oBAAC,IAAI,oBAAK,kBAAkB,IAAE,SAAS,EAAE,UAAU,CAAC,kBAAkB,CAAC,SAAS,EAAE,KAAK,KAAG,KAAK,CAAC,MAAM,GAAC,CAAC,CAAA,CAAC,CAAA,yBAAyB,CAAA,CAAC,CAAC,EAAE,CAAC;oBAClI,IAAI;oBACJ,KAAK,CAAC,KAAK,GAAG,CAAC,CAAC,IAAI,SAAS,CAC3B,CACM,CACpB,CAAC,CACC,CACF,CACZ,CAAC;AACN,CAAC,CAAC;AAEF,eAAe,cAAc,CAAC","sourcesContent":["/*!\n * Copyright (c) Microsoft Corporation.\n * All rights reserved. See LICENSE in the project root for license information.\n */\n\nimport { Module, Node } from '@msdyn365-commerce-modules/utilities';\nimport classnames from 'classnames';\nimport * as React from 'react';\nimport { IBreadcrumbViewProps } from './breadcrumb';\n\nconst BreadCrumbView: React.FC<IBreadcrumbViewProps> = props => {\n    const { root, links, backButton, BreadcrumbContainer, BreadcrumbList, BreadcrumbListItem, separator } = props;\n    if (!root && !links && !backButton) {\n        props.context.telemetry.error('BreadCrumb content is empty, module wont render');\n        return null;\n    }\n    return (\n        <Module {...BreadcrumbContainer}>\n            <Node {...BreadcrumbList}>\n                {root &&\n                    <Node {...BreadcrumbListItem}>\n                        {root}\n                        {links && separator}\n                    </Node>\n                }\n                {backButton &&\n                    <Node {...BreadcrumbListItem}>\n                        {backButton}\n                    </Node>\n                }\n                {links && links.map((link, index) => (\n                    <React.Fragment key={index}>\n                        <Node {...BreadcrumbListItem} className={classnames(BreadcrumbListItem.className, index===links.length-1?'breadcrumb_item-current': '')}>\n                            {link}\n                            {links[index + 1] && separator}\n                        </Node>\n                    </React.Fragment>\n                ))}\n            </Node>\n        </Module>\n    );\n};\n\nexport default BreadCrumbView;"]}