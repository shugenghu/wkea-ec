import { buildMockRequest, buildMockTelemetry } from '@msdyn365-commerce/core';
import { render } from 'enzyme';
import * as React from 'react';
import { PromoBannerLinks } from '../../components';
describe('PromoBanner unit tests - Link', () => {
    const telemetry = buildMockTelemetry();
    const telemetryContent = { pageName: 'Homepage', moduleName: 'Product Collection', telemetry: telemetry };
    it('renders correctly without any link', () => {
        const mockProps = {
            links: [],
            requestContext: buildMockRequest(),
            telemetryContent: telemetryContent
        };
        const component = render(React.createElement(PromoBannerLinks, Object.assign({}, mockProps)));
        expect(component).toMatchSnapshot();
    });
    it('renders correctly with one link', () => {
        const mockProps = {
            links: [
                {
                    linkText: 'See details.',
                    linkUrl: {
                        destinationUrl: '#'
                    },
                    ariaLabel: 'See details',
                    openInNewTab: false
                }
            ],
            requestContext: buildMockRequest(),
            telemetryContent: telemetryContent
        };
        const component = render(React.createElement(PromoBannerLinks, Object.assign({}, mockProps)));
        expect(component).toMatchSnapshot();
    });
    it('renders correctly with multiple links', () => {
        const mockProps = {
            links: [
                {
                    linkText: 'See details',
                    linkUrl: {
                        destinationUrl: '#'
                    },
                    ariaLabel: 'See details',
                    openInNewTab: false
                },
                {
                    linkText: 'New',
                    linkUrl: {
                        destinationUrl: '#'
                    },
                    ariaLabel: 'New products',
                    openInNewTab: true
                }
            ],
            requestContext: buildMockRequest(),
            telemetryContent: telemetryContent
        };
        const component = render(React.createElement(PromoBannerLinks, Object.assign({}, mockProps)));
        expect(component).toMatchSnapshot();
    });
});
//# sourceMappingURL=link.test.js.map