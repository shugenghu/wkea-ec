{"version":3,"file":"promo-banner.test.js","sourceRoot":"./src/","sources":["modules/promo-banner/__tests__/unit/promo-banner.test.tsx"],"names":[],"mappings":"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","sourcesContent":["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { buildHydratedMockActionContext, buildMockModuleProps} from '@msdyn365-commerce/core';\nimport { mount, render, shallow } from 'enzyme';\n// tslint:disable-next-line:no-unused-variable\nimport * as React from 'react';\nimport PromoBannerModule from '../../promo-banner';\nimport { ILinksData, IPromoBannerConfig, IPromoBannerProps } from '../../promo-banner.props.autogenerated';\nimport renderView from '../../promo-banner.view';\n\nconst mockActionContext = buildHydratedMockActionContext();\n\n// @ts-ignore partial mock\nconst mockContext: ICoreContext = {\n    actionContext: mockActionContext,\n    requestContext: {locale: 'en-us'},\n    app: {\n      routes: {\n        home: '/fedev'\n      }\n    }\n};\n\nconst mockResources = {\n    closeButtonAriaLabel: 'Close promo-banner',\n    closeButtonLabel: 'Close'\n};\n\nconst mockLink1: ILinksData = {\n    linkText: 'Mock link 1 title',\n    linkUrl: {\n        destinationUrl: 'Mock link 1 href'\n    },\n    ariaLabel: 'Mock link 1 alt text'\n};\n\nconst mockLink2: ILinksData = {\n    linkText: 'Mock link 2 title',\n    linkUrl: {\n        destinationUrl: 'Mock link 2 href'\n    },\n    ariaLabel: 'Mock link 2 alt text'\n};\n\nconst mockLinks: ILinksData[] = [mockLink1, mockLink2];\n\nconst mockConfigWithoutBanner: IPromoBannerConfig = {\n    dismissEnabled: false,\n    bannerMessages: []\n};\n\nconst mockConfigTextOnly: IPromoBannerConfig = {\n    dismissEnabled: false,\n    bannerMessages: [{text: 'text'}]\n};\n\nconst mockConfigLinkOnly: IPromoBannerConfig = {\n    dismissEnabled: false,\n    bannerMessages: [{links: mockLinks}]\n};\n\nconst mockConfigTextAndLink: IPromoBannerConfig = {\n    dismissEnabled: false,\n    bannerMessages: [{text: 'text', links: mockLinks}]\n};\n\nconst mockConfigMultipleTextAndLink: IPromoBannerConfig = {\n    dismissEnabled: false,\n    bannerMessages: [{text: 'text', links: mockLinks}, {text: 'text', links: mockLinks}]\n};\n\nconst mockConfigDismissEnabled: IPromoBannerConfig = {\n    dismissEnabled: true,\n    bannerMessages: [{text: 'text', links: mockLinks}]\n};\n\nconst mockProps = {\n    className: 'ms-promo-banner',\n    resources: mockResources,\n    renderView: renderView,\n    renderModuleAttributes: jest.fn()\n};\n\nconst mockPropsMockRenderView = {\n    resources: mockResources,\n    // @ts-ignore\n    renderView: jest.fn(props => { return <div props={props} />;}),\n    renderModuleAttributes: jest.fn()\n};\n\ndescribe('PromoBanner unit tests - Container', () => {\n    it('renders correctly with text only', () => {\n        // @ts-ignore mock partial data\n        const moduleProps: IPromoBannerProps<{}> = {\n            ...buildMockModuleProps(mockContext, {}, mockConfigTextOnly),\n            ...mockProps\n        };\n        const wrapper = render(<PromoBannerModule {...moduleProps} />);\n        expect(wrapper).toMatchSnapshot();\n    });\n\n    it('renders correctly with link only', () => {\n        // @ts-ignore mock partial data\n        const moduleProps: IPromoBannerProps<{}> = {\n            ...buildMockModuleProps(mockContext, {}, mockConfigLinkOnly),\n            ...mockProps\n        };\n        const wrapper =  render(<PromoBannerModule {...moduleProps} />);\n        expect(wrapper).toMatchSnapshot();\n    });\n\n    it('renders correctly with text and link', () => {\n        // @ts-ignore mock partial data\n        const moduleProps: IPromoBannerProps<{}> = {\n            ...buildMockModuleProps(mockContext, {}, mockConfigTextAndLink),\n            ...mockProps\n        };\n        const wrapper = render(<PromoBannerModule {...moduleProps} />);\n        expect(wrapper).toMatchSnapshot();\n    });\n\n    it('renders correctly with dismissEnabled', () => {\n        // @ts-ignore mock partial data\n        const moduleProps: IPromoBannerProps<{}> = {\n            ...buildMockModuleProps(mockContext, {}, mockConfigDismissEnabled),\n            ...mockProps\n        };\n        const wrapper = render(<PromoBannerModule {...moduleProps} />);\n        expect(wrapper).toMatchSnapshot();\n    });\n\n    it('handles _onDismiss correctly', () => {\n        // @ts-ignore mock partial data\n        const moduleProps: IPromoBannerProps<{}> = {\n            ...buildMockModuleProps(mockContext, {}, mockConfigDismissEnabled),\n            ...mockPropsMockRenderView\n        };\n        const component = shallow(<PromoBannerModule {...moduleProps} />);\n        const promoBannerInstance = component.instance();\n        // @ts-ignore ignore private method\n        promoBannerInstance._onDismiss();\n        // State iVisible set to false\n        expect(component.state('isVisible')).toBe(false);\n        // It returns null\n        expect(component.type()).toBe(null);\n    });\n\n    it('handles _next correctly', () => {\n        // @ts-ignore mock partial data\n        const moduleProps: IPromoBannerProps<{}> = {\n            ...buildMockModuleProps(mockContext, {}, mockConfigMultipleTextAndLink),\n            ...mockPropsMockRenderView\n        };\n        const component = shallow(<PromoBannerModule {...moduleProps} />);\n        const promoBannerInstance = component.instance();\n        // @ts-ignore ignore private method\n        promoBannerInstance._next();\n        // State iVisible set to false\n        expect(component.state('activeIndex')).toBe(1);\n        // @ts-ignore ignore private method\n        promoBannerInstance._next();\n        // State iVisible set to false\n        expect(component.state('activeIndex')).toBe(0);\n        // @ts-ignore ignore private method\n        promoBannerInstance._previous();\n        // State iVisible set to false\n        expect(component.state('activeIndex')).toBe(1);\n\n    });\n\n    it('handles _previous correctly', () => {\n        // @ts-ignore mock partial data\n        const moduleProps: IPromoBannerProps<{}> = {\n            ...buildMockModuleProps(mockContext, {}, mockConfigMultipleTextAndLink),\n            ...mockPropsMockRenderView\n        };\n        const component = shallow(<PromoBannerModule {...moduleProps} />);\n        const promoBannerInstance = component.instance();\n        // @ts-ignore ignore private method\n        promoBannerInstance._previous();\n        // State iVisible set to false\n        expect(component.state('activeIndex')).toBe(1);\n        // @ts-ignore ignore private method\n        promoBannerInstance._next();\n        // State iVisible set to false\n        expect(component.state('activeIndex')).toBe(0);\n        // @ts-ignore ignore private method\n        promoBannerInstance._previous();\n        // State iVisible set to false\n        expect(component.state('activeIndex')).toBe(1);\n        // @ts-ignore ignore private method\n        promoBannerInstance._previous();\n        // State iVisible set to false\n        expect(component.state('activeIndex')).toBe(0);\n    });\n\n    it('handles textChange and LinkTextChange event ', () => {\n        // @ts-ignore mock partial data\n        const moduleProps: IPromoBannerProps<{}> = {\n            ...buildMockModuleProps(mockContext, {}, mockConfigMultipleTextAndLink),\n            ...mockPropsMockRenderView,\n        };\n        const component = mount(<PromoBannerModule {...moduleProps} />);\n        const promoBannerInstance = component.instance();\n        const event = {currentTarget: { value: 'foo1'}, target: { value: 'foo'}};\n        // @ts-ignore ignore private method\n        promoBannerInstance.handleTextChange(event);\n        // @ts-ignore ignore private method\n        promoBannerInstance.handleLinkTextChange(1, event);\n        // @ts-ignore ignore private method\n        ((e: event) => promoBannerInstance.handleLinkTextChange(1));\n        promoBannerInstance.setState({ animating: true });\n        // @ts-ignore ignore private method\n        promoBannerInstance._next();\n        // State iVisible set to false\n        expect(component.state('activeIndex')).toBe(0);\n        // @ts-ignore ignore private method\n        promoBannerInstance._previous();\n        // State iVisible set to false\n        expect(component.state('activeIndex')).toBe(0);\n        // const viewProps: IPromoBannerViewProps = component.props();\n        // const input = mount(viewProps.PromoBannerTextProps.textInput);\n        // const changeEvent = {\n        //     target: { value: 'foo' }\n        // };\n        // input.simulate('change', changeEvent);\n        // expect(component.state('userReviewText')).toBe('foo');\n        // input.unmount();\n    });\n\n    it('renders correctly without text & link', () => {\n        // @ts-ignore mock partial data\n        const moduleProps: IPromoBannerProps<{}> = {\n            ...buildMockModuleProps(mockContext, {}, mockConfigWithoutBanner),\n            ...mockPropsMockRenderView,\n            ...mockProps\n        };\n        const component = mount(<PromoBannerModule {...moduleProps} />);\n        const promoBannerInstance = component.instance();\n        const event = {currentTarget: { value: 'foo1'}, target: { value: 'foo'}};\n        // @ts-ignore ignore private method\n        promoBannerInstance.handleTextChange(event);\n    });\n});\n"]}