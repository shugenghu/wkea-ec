{"version":3,"file":"link.test.js","sourceRoot":"./src/","sources":["modules/promo-banner/__tests__/unit/link.test.tsx"],"names":[],"mappings":"AAKA,OAAO,EAAE,gBAAgB,EAAE,kBAAkB,EAAE,MAAM,yBAAyB,CAAC;AAC/E,OAAO,EAAE,MAAM,EAAE,MAAM,QAAQ,CAAC;AAChC,OAAO,KAAK,KAAK,MAAM,OAAO,CAAC;AAC/B,OAAO,EAAE,gBAAgB,EAAE,MAAM,kBAAkB,CAAC;AAEpD,QAAQ,CAAC,+BAA+B,EAAE,GAAG,EAAE;IAC3C,MAAM,SAAS,GAAG,kBAAkB,EAAE,CAAC;IACvC,MAAM,gBAAgB,GAAG,EAAG,QAAQ,EAAE,UAAU,EAAE,UAAU,EAAE,oBAAoB,EAAE,SAAS,EAAE,SAAS,EAAsB,CAAC;IAC/H,EAAE,CAAC,oCAAoC,EAAE,GAAG,EAAE;QAC1C,MAAM,SAAS,GAAG;YACd,KAAK,EAAE,EAAE;YACT,cAAc,EAAE,gBAAgB,EAAE;YAClC,gBAAgB,EAAE,gBAAgB;SACrC,CAAC;QACF,MAAM,SAAS,GAAG,MAAM,CAAC,oBAAC,gBAAgB,oBAAK,SAAS,EAAK,CAAC,CAAC;QAC/D,MAAM,CAAC,SAAS,CAAC,CAAC,eAAe,EAAE,CAAC;IACxC,CAAC,CAAC,CAAC;IAEH,EAAE,CAAC,iCAAiC,EAAE,GAAG,EAAE;QACvC,MAAM,SAAS,GAAG;YACd,KAAK,EAAE;gBACH;oBACI,QAAQ,EAAE,cAAc;oBACxB,OAAO,EAAE;wBACL,cAAc,EAAE,GAAG;qBACtB;oBACD,SAAS,EAAE,aAAa;oBACxB,YAAY,EAAE,KAAK;iBACtB;aACJ;YACD,cAAc,EAAE,gBAAgB,EAAE;YAClC,gBAAgB,EAAE,gBAAgB;SACrC,CAAC;QACF,MAAM,SAAS,GAAG,MAAM,CAAC,oBAAC,gBAAgB,oBAAK,SAAS,EAAI,CAAC,CAAC;QAC9D,MAAM,CAAC,SAAS,CAAC,CAAC,eAAe,EAAE,CAAC;IACxC,CAAC,CAAC,CAAC;IAEH,EAAE,CAAC,uCAAuC,EAAE,GAAG,EAAE;QAC7C,MAAM,SAAS,GAAG;YACd,KAAK,EAAE;gBACH;oBACI,QAAQ,EAAE,aAAa;oBACvB,OAAO,EAAE;wBACL,cAAc,EAAE,GAAG;qBACtB;oBACD,SAAS,EAAE,aAAa;oBACxB,YAAY,EAAE,KAAK;iBACtB;gBACD;oBACI,QAAQ,EAAE,KAAK;oBACf,OAAO,EAAE;wBACL,cAAc,EAAE,GAAG;qBACtB;oBACD,SAAS,EAAE,cAAc;oBACzB,YAAY,EAAE,IAAI;iBACrB;aACJ;YACD,cAAc,EAAE,gBAAgB,EAAE;YAClC,gBAAgB,EAAE,gBAAgB;SACrC,CAAC;QACF,MAAM,SAAS,GAAG,MAAM,CAAC,oBAAC,gBAAgB,oBAAK,SAAS,EAAI,CAAC,CAAC;QAC9D,MAAM,CAAC,SAAS,CAAC,CAAC,eAAe,EAAE,CAAC;IACxC,CAAC,CAAC,CAAC;AACP,CAAC,CAAC,CAAC","sourcesContent":["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nimport { ITelemetryContent } from '@msdyn365-commerce-modules/utilities';\nimport { buildMockRequest, buildMockTelemetry } from '@msdyn365-commerce/core';\nimport { render } from 'enzyme';\nimport * as React from 'react';\nimport { PromoBannerLinks } from '../../components';\n\ndescribe('PromoBanner unit tests - Link', () => {\n    const telemetry = buildMockTelemetry();\n    const telemetryContent = {  pageName: 'Homepage', moduleName: 'Product Collection', telemetry: telemetry} as ITelemetryContent;\n    it('renders correctly without any link', () => {\n        const mockProps = {\n            links: [],\n            requestContext: buildMockRequest(),\n            telemetryContent: telemetryContent\n        };\n        const component = render(<PromoBannerLinks {...mockProps}  />);\n        expect(component).toMatchSnapshot();\n    });\n\n    it('renders correctly with one link', () => {\n        const mockProps = {\n            links: [\n                {\n                    linkText: 'See details.',\n                    linkUrl: {\n                        destinationUrl: '#'\n                    },\n                    ariaLabel: 'See details',\n                    openInNewTab: false\n                }\n            ],\n            requestContext: buildMockRequest(),\n            telemetryContent: telemetryContent\n        };\n        const component = render(<PromoBannerLinks {...mockProps} />);\n        expect(component).toMatchSnapshot();\n    });\n\n    it('renders correctly with multiple links', () => {\n        const mockProps = {\n            links: [\n                {\n                    linkText: 'See details',\n                    linkUrl: {\n                        destinationUrl: '#'\n                    },\n                    ariaLabel: 'See details',\n                    openInNewTab: false\n                },\n                {\n                    linkText: 'New',\n                    linkUrl: {\n                        destinationUrl: '#'\n                    },\n                    ariaLabel: 'New products',\n                    openInNewTab: true\n                }\n            ],\n            requestContext: buildMockRequest(),\n            telemetryContent: telemetryContent\n        };\n        const component = render(<PromoBannerLinks {...mockProps} />);\n        expect(component).toMatchSnapshot();\n    });\n});\n"]}