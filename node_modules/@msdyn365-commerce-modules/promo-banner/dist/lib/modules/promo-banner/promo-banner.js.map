{"version":3,"file":"promo-banner.js","sourceRoot":"./src/","sources":["modules/promo-banner/promo-banner.tsx"],"names":[],"mappings":"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","sourcesContent":["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nimport { getTelemetryObject, IModuleProps, INodeProps, ITelemetryContent } from '@msdyn365-commerce-modules/utilities';\nimport { Carousel } from '@msdyn365-commerce/components';\nimport * as Msdyn365 from '@msdyn365-commerce/core';\nimport classnames from 'classnames';\nimport * as React from 'react';\nimport { PromoBannerCloseButton, PromoBannerLinks, PromoBannerText } from './components';\nimport { IBannerMessagesData, IPromoBannerProps } from './promo-banner.props.autogenerated';\n\nexport interface IPromoBannerState {\n    animating: boolean;\n    isVisible: boolean;\n    activeIndex: number;\n}\n\nexport interface IPromoBannerViewProps extends IPromoBannerProps<{}>, IPromoBannerState {\n    promoBannerProps: IModuleProps;\n    contentProps: INodeProps ;\n    bannerMessages: IBannerMessagesData[];\n    PromoBannerTextProps: INodeProps;\n    PromoBannerLinksProps: INodeProps;\n    CarouselProps: INodeProps;\n    closeButton?: React.ReactNode;\n    className: string;\n    onDismiss(): void;\n    handleText(): void;\n    handleLinks(): void;\n}\n\n/**\n *\n * PromoBannerModule component\n * @extends {React.PureComponent<IPromoBannerProps<IPromoBannerState>>}\n */\nclass PromoBanner extends React.PureComponent<IPromoBannerProps<{}>, IPromoBannerState> {\n    public state: IPromoBannerState = {\n        animating: false,\n        isVisible: true,\n        activeIndex: 0\n    };\n\n    private telemetryContent: ITelemetryContent = getTelemetryObject(this.props.context.request.telemetryPageName!,\n                                                                     this.props.friendlyName,\n                                                                     this.props.telemetry);\n\n    public render(): JSX.Element | null {\n        const { bannerMessages, dismissEnabled, interval, hideFlipper, autoplay, className= '' } = this.props.config;\n        const { closeButtonAriaLabel, closeButtonLabel } = this.props.resources;\n        const { isVisible, activeIndex } = this.state;\n\n        if (!isVisible) {\n            this.props.context.telemetry.error('Promo banner content is empty, module wont render.');\n            return null;\n        }\n\n        const viewProps = {\n            // Context for telemetry and raw data for C1 to do customization\n            // Including computed data, state data and methods\n            ...this.props,\n            className: classnames('ms-promo-banner', className),\n            isVisible, // state data\n            onDismiss: this._onDismiss, // methods\n            handleLinks: this.handleLinkTextChange,\n            handleText: this.handleTextChange,\n\n            promoBannerProps: { className: classnames('ms-promo-banner', className), moduleProps: this.props, role: 'banner' },\n            PromoBannerTextProps: {\n                tag: PromoBannerText\n            },\n            PromoBannerLinksProps: {\n                tag: PromoBannerLinks,\n                telemetryContent: this.telemetryContent\n            },\n            contentProps: { className: 'ms-promo-banner__content' },\n            bannerMessages: bannerMessages,\n            activeIndex: activeIndex,\n            CarouselProps: {\n                tag: Carousel,\n                className: 'ms-promo-banner__carousel',\n                activeIndex: activeIndex,\n                next: this._next,\n                previous: this._previous,\n                onIndicatorsClickHandler: this._goToIndex,\n                hideIndicator: hideFlipper,\n                interval: interval,\n                hideFlipper: hideFlipper,\n                autoplay: autoplay\n            },\n            closeButton: dismissEnabled && <PromoBannerCloseButton {...{ onClose: this._onDismiss, label: closeButtonLabel, closeButtonAriaLabel, telemetryContent: this.telemetryContent }} />\n        };\n\n        return this.props.renderView(viewProps) as React.ReactElement;\n    }\n    public handleTextChange = (event: Msdyn365.ContentEditableEvent) => {\n        if(this.props.config.bannerMessages && this.props.config.bannerMessages[0]) {\n            this.props.config.bannerMessages[0].text = event.target.value;\n        }\n    }\n    public handleLinkTextChange = (linkIndex: number) => (event: Msdyn365.ContentEditableEvent) => {\n        if(this.props.config.bannerMessages && this.props.config.bannerMessages[1]) {\n            const links = this.props.config.bannerMessages[1].links;\n            if(links) {\n                links[linkIndex].linkText = event.target.value;\n            }\n        }\n    };\n\n    private _next = (): void => {\n        const nextIndex = this._isLastItem() ? 0 : this.state.activeIndex + 1;\n        this._goToIndex(nextIndex);\n    };\n\n    private _previous = (): void => {\n        const nextIndex = this._isFirstItem() ? (this.props.config.bannerMessages ? this.props.config.bannerMessages.length - 1 : 0) : this.state.activeIndex - 1;\n        this._goToIndex(nextIndex);\n    };\n\n    private _goToIndex = (index: number): void => {\n        if (this.state.animating) {\n            return;\n        }\n        this.setState({ activeIndex: index });\n    };\n\n    private _isFirstItem = () => this.state.activeIndex === 0;\n\n    private _isLastItem = () => this.props.config.bannerMessages && this.state.activeIndex === this.props.config.bannerMessages.length - 1;\n\n    private _onDismiss = (): void => {\n        this.setState({ isVisible: false });\n    };\n}\n\nexport default PromoBanner;\n"]}