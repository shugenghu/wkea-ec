{"version":3,"file":"order-template-list.js","sourceRoot":"./src/","sources":["modules/order-template-list/components/order-template-list.tsx"],"names":[],"mappings":"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","sourcesContent":["import { getFallbackImageUrl, OrderTemplate, OrderTemplateLine } from '@msdyn365-commerce-modules/retail-actions';\nimport { Alert, Button, ITelemetryContent } from '@msdyn365-commerce-modules/utilities';\nimport { AddOrderTemplateToCartComponent, ILinesAddedToCartDialogResources } from '@msdyn365-commerce/components';\nimport { getUrlSync, ICoreContext, IImageSettings, Image, ITelemetry } from '@msdyn365-commerce/core';\nimport { ProductList } from '@msdyn365-commerce/retail-proxy/dist/Entities/CommerceTypes.g';\nimport classNames from 'classnames';\nimport * as React from 'react';\nimport { IOrderTemplateActionMessageState } from '../order-template-list';\n\nexport interface ISingleOrderTemplateProps extends ProductList {\n    orderTemplateState: IOrderTemplateActionMessageState;\n    name?: string;\n    orderTemplate: OrderTemplate;\n    context: ICoreContext;\n    imageSettings?: IImageSettings;\n    removeFromOrderTemplateListText: string;\n    addToBagText: string;\n    index: number;\n    itemKey: string;\n    telemetry: ITelemetry;\n    moduleId: string;\n    moduleTypeName: string;\n    handlers: {\n        onRemoveOrderTemplate(id: string): void | undefined;\n        onDismiss(): void;\n    };\n    resources: {\n        closeWindowButtonText: string;\n        addToCartFailureMessage: string;\n        addToCartSuccessMessage: string;\n        addToCartProcessMessage: string;\n        linesAddedToCartDialogResources: ILinesAddedToCartDialogResources;\n    };\n    telemetryContent?: ITelemetryContent;\n}\n\nexport interface ISingleOrderTemplateViewProps {\n    key: string;\n    orderTemplateImage: React.ReactNode;\n    addToCartButton?: React.ReactNode;\n    removeButton?: React.ReactNode;\n    orderTemplateStatusMessage?: React.ReactNode;\n    orderTemplateName?: React.ReactNode;\n    orderTemplateAriaLabel?: string;\n    orderTemplateHeaderDivider?: React.ReactNode;\n}\n\nconst _removeItemFromOrderTemplateList = (props: ISingleOrderTemplateProps): void => {\n    const { onRemoveOrderTemplate } = props.handlers;\n    const { itemKey } = props;\n\n    onRemoveOrderTemplate && itemKey && onRemoveOrderTemplate(itemKey);\n};\n\nconst OrderTemplateActions = {\n    removeOrderTemplate: _removeItemFromOrderTemplateList,\n};\n\nexport const OrderTemplateRender = (input: ISingleOrderTemplateProps): ISingleOrderTemplateViewProps | null => {\n    const { Id, orderTemplate, removeFromOrderTemplateListText, orderTemplateState, handlers, name, imageSettings, context, telemetryContent } = input;\n\n    if (!Id) {\n        return null;\n    }\n\n    const _getOrderTemplatePageUrl = (): string => {\n        const url = getUrlSync('ordertemplate', context.actionContext) || '';\n        const separator = url.includes('?') ? '&' : '?';\n        if (Id) {\n            return `${url}${separator}id=${Id}`;\n        } else {\n            return '';\n        }\n    };\n\n    const removeOrderTemplateAction = (event: React.MouseEvent<HTMLElement>) => { return OrderTemplateActions.removeOrderTemplate(input); };\n    const { onDismiss } = handlers;\n\n    return {\n        key: `${Id}-template`,\n        orderTemplateImage: _renderOrderTemplateImages(input.context, orderTemplate.orderTemplateLines, imageSettings),\n        orderTemplateAriaLabel: _renderAriaLabel(input),\n        orderTemplateName:\n        (\n            <div>\n                <div className='ms-order-template__list-item-title'><a href={_getOrderTemplatePageUrl()}>{name}</a></div>\n                <div className='ms-order-template__line-count'>{orderTemplate.totalLines} line items</div>\n                <hr color='#F9F9F9'/>\n            </div>\n        ),\n        addToCartButton:\n        (\n            <div className = 'ms-order-template__add-to-bag-button-div'>\n                <AddOrderTemplateToCartComponent\n                    id={Id}\n                    context={context}\n                    typeName={input.moduleTypeName}\n                    data={{\n                        orderTemplate: input.orderTemplate\n                    }}\n                    className='ms-order-template__add-to-bag-button'\n                    addToCartText={input.addToBagText}\n                    dialogStrings={input.resources}\n                    telemetryContent={telemetryContent}\n                />\n            </div>\n        ),\n        removeButton:\n        (\n            <Button\n                className='ms-order-template__remove-list'\n                aria-label={ removeFromOrderTemplateListText }\n                onClick={ removeOrderTemplateAction }\n            />\n        ),\n        orderTemplateStatusMessage: orderTemplateState && orderTemplateState.isOpen && orderTemplateState.userMessage &&\n        (\n            <div className='ms-orderTemplate__status'>\n                <Alert color={orderTemplateState.statusCssString} isOpen={orderTemplateState.isOpen} toggle={onDismiss}>\n                    <span>{orderTemplateState.userMessage}</span>\n                </Alert>\n            </div>\n        )\n\n    };\n\n};\n\nconst _renderOrderTemplateImages = (context: ICoreContext, orderTemplateLines?: OrderTemplateLine[],\n                                    imageSettings?: IImageSettings): JSX.Element | null => {\n    const defaultImageSettings: IImageSettings = {\n            viewports: {\n                xs: { q: `w=140&h=140&m=6`, w: 0, h: 0 },\n                lg: { q: `w=140&h=140&m=6`, w: 0, h: 0 },\n                xl: { q: `w=140&h=140&m=6`, w: 0, h: 0 }\n            },\n            lazyload: true\n        };\n    if (orderTemplateLines) {\n    return (\n            <div className='ms-order-template__image-container'>\n                <div className='row'>\n                    <div className={classNames(classNames, 'column')}>\n                        <div className='ms-order-template__image-props'>\n                    { orderTemplateLines.length > 0 &&\n                        <Image\n                            src={orderTemplateLines[0].fullProduct?.ProductDetails.PrimaryImageUrl || ''}\n                            fallBackSrc = {getFallbackImageUrl(orderTemplateLines[0].fullProduct?.ProductDetails.ItemId, context.actionContext.requestContext.apiSettings)\n                                || ''}\n                            gridSettings={context.request.gridSettings!}\n                            imageSettings={imageSettings || defaultImageSettings}\n                            loadFailureBehavior='empty'\n                        />\n                    }\n                    </div>\n                    </div>\n                    <div className={classNames(classNames, 'column')}>\n                    <div className='ms-order-template__image-props'>\n                    { orderTemplateLines.length > 1 &&\n                        <Image\n                            src={orderTemplateLines[1].fullProduct?.ProductDetails.PrimaryImageUrl || ''}\n                            fallBackSrc = {getFallbackImageUrl(orderTemplateLines[1].fullProduct?.ProductDetails.ItemId, context.actionContext.requestContext.apiSettings)\n                                || ''}\n                            gridSettings={context.request.gridSettings!}\n                            imageSettings={imageSettings || defaultImageSettings}\n                            loadFailureBehavior='empty'\n                        />\n                    }\n                    </div>\n                    </div>\n                </div>\n                <div className='row'>\n                <div className={classNames(classNames, 'column')}>\n                <div className='ms-order-template__image-props'>\n                    { orderTemplateLines.length > 2 &&\n                        <Image\n                            src={orderTemplateLines[2].fullProduct?.ProductDetails.PrimaryImageUrl || ''}\n                            fallBackSrc = {getFallbackImageUrl(orderTemplateLines[2].fullProduct?.ProductDetails.ItemId, context.actionContext.requestContext.apiSettings)\n                                || ''}\n                            gridSettings={context.request.gridSettings!}\n                            imageSettings={imageSettings || defaultImageSettings}\n                            loadFailureBehavior='empty'\n                        />\n                    }\n                    </div>\n                    </div>\n                    <div className={classNames(classNames, 'column')}>\n                    <div className='ms-order-template__image-props'>\n                    { orderTemplateLines.length > 3 &&\n                        <Image\n                            src={orderTemplateLines[3].fullProduct?.ProductDetails.PrimaryImageUrl || ''}\n                            fallBackSrc = {getFallbackImageUrl(orderTemplateLines[3].fullProduct?.ProductDetails.ItemId, context.actionContext.requestContext.apiSettings)\n                                || ''}\n                            gridSettings={context.request.gridSettings!}\n                            imageSettings={imageSettings || defaultImageSettings}\n                            loadFailureBehavior='empty'\n                        />\n                    }\n                    </div>\n                    </div>\n                </div>\n            </div>\n        );\n                } else {\n                    return (\n                        <div className='ms-order-template__image-container'/>\n                    );\n                }\n};\n\nconst _renderAriaLabel = (props: ISingleOrderTemplateProps): string => {\n    const { name } = props;\n    return (`${name}`);\n};"]}