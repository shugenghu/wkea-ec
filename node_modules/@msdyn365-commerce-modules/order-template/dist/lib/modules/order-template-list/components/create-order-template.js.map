{"version":3,"file":"create-order-template.js","sourceRoot":"./src/","sources":["modules/order-template-list/components/create-order-template.tsx"],"names":[],"mappings":"AAIA,OAAO,EAAE,MAAM,EAAE,MAAM,sCAAsC,CAAC;AAC9D,OAAO,EAAqC,uBAAuB,EAAE,MAAM,+BAA+B,CAAC;AAE3G,OAAO,KAAK,EAAE,EAAE,QAAQ,EAAE,MAAM,OAAO,CAAC;AAQxC,MAAM,yBAAyB,GAA8C,CAAC,KAAK,EAAE,EAAE;IACnF,MAAM,QAAQ,GAAG,GAAG,EAAE;QAClB,OAAO;IACX,CAAC,CAAC;IACF,MAAM,CAAC,6BAA6B,EAAE,8BAA8B,CAAC,GAAG,QAAQ,CAAC,KAAK,CAAC,CAAC;IACxF,MAAM,mBAAmB,GAAG,GAAG,EAAE;QAC7B,8BAA8B,CAAC,IAAI,CAAC,CAAC;IACzC,CAAC,CAAC;IAEF,OAAO,CACH;QACI,oBAAC,MAAM,IACH,SAAS,EAAC,wCAAwC,EAClD,KAAK,EAAC,SAAS,EACf,OAAO,EAAE,mBAAmB,IAE3B,KAAK,CAAC,uBAAuB,CACzB;QACT,oBAAC,uBAAuB,IACpB,SAAS,EAAE,gCAAgC,EAC3C,SAAS,EAAE,6BAA6B,EACxC,cAAc,EAAE,KAAK,EACrB,YAAY,EAAE,8BAA8B,EAC5C,OAAO,EAAE,KAAK,CAAC,OAAO,EACtB,EAAE,EAAE,KAAK,CAAC,EAAE,EACZ,IAAI,EAAE,EAAE,EACR,QAAQ,EAAE,KAAK,CAAC,QAAQ,EACxB,aAAa,EAAE,KAAK,CAAC,kCAAkC,EACvD,QAAQ,EAAE,QAAQ,EAClB,SAAS,EAAE,KAAK,CAAC,sBAAsB,GACzC,CACH,CACN,CAAC;AACN,CAAC,CAAC;AAEF,eAAe,yBAAyB,CAAC","sourcesContent":["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nimport { Button } from '@msdyn365-commerce-modules/utilities';\nimport { IOrderTemplateNameDialogResources, OrderTemplateNameDialog } from '@msdyn365-commerce/components';\nimport { IComponentProps } from '@msdyn365-commerce/core';\nimport React, { useState } from 'react';\n\nexport interface ICreateOrderTemplateButtonProps extends IComponentProps {\n    createOrderTemplateText: string;\n    createOrderTemplateDialogResources: IOrderTemplateNameDialogResources;\n    onOrderTemplateCreated(): Promise<void>;\n}\n\nconst CreateOrderTemplateButton: React.FC<ICreateOrderTemplateButtonProps> = (props) => {\n    const onCancel = () => {\n        return;\n    };\n    const [createOrderTemplateDialogOpen, setOrderTemplateNameDialogOpen] = useState(false);\n    const onCreateButtonClick = () => {\n        setOrderTemplateNameDialogOpen(true);\n    };\n\n    return (\n        <>\n            <Button\n                className='ms-order-template__add-template-button'\n                color='primary'\n                onClick={onCreateButtonClick}\n            >\n                {props.createOrderTemplateText}\n            </Button>\n            <OrderTemplateNameDialog\n                className={'msc-order-template-name-dialog'}\n                modalOpen={createOrderTemplateDialogOpen}\n                isUpdateDialog={false}\n                setModalOpen={setOrderTemplateNameDialogOpen}\n                context={props.context}\n                id={props.id}\n                data={{}}\n                typeName={props.typeName}\n                dialogStrings={props.createOrderTemplateDialogResources}\n                onCancel={onCancel}\n                onSuccess={props.onOrderTemplateCreated}\n            />\n        </>\n    );\n};\n\nexport default CreateOrderTemplateButton;"]}