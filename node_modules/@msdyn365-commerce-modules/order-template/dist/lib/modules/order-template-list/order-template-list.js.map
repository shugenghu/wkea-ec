{"version":3,"file":"order-template-list.js","sourceRoot":"./src/","sources":["modules/order-template-list/order-template-list.tsx"],"names":[],"mappings":"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","sourcesContent":["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nimport { OrderTemplate } from '@msdyn365-commerce-modules/retail-actions';\nimport { Alert, Heading, IModuleProps, INodeProps } from '@msdyn365-commerce-modules/utilities';\nimport { IOrderTemplateNameDialogResources } from '@msdyn365-commerce/components';\nimport { deleteAsync } from '@msdyn365-commerce/retail-proxy/dist/DataActions/ProductListsDataActions.g';\nimport classnames from 'classnames';\nimport { observer } from 'mobx-react';\nimport * as React from 'react';\nimport { ISingleOrderTemplateProps, ISingleOrderTemplateViewProps, OrderTemplateListStatusMessage, OrderTemplateRender } from './components/';\nimport CreateNewTemplateButtonComponent from './components/create-order-template';\nimport { IOrderTemplateListData } from './order-template-list.data';\nimport { IOrderTemplateListProps, IOrderTemplateListResources } from './order-template-list.props.autogenerated';\n\nexport interface IOrderTemplateActionMessageState {\n    itemKey: string;\n    userMessage: string;\n    statusCssString: string;\n    messageGlyph: string;\n    isOpen: boolean;\n    headerStatusMessage: string;\n}\n\nexport type orderTemplateListStatus = 'LOADING' | 'SUCCESS' | 'FAILED' | 'EMPTY';\n\nexport interface IOrderTemplateListViewProps extends IOrderTemplateListProps<IOrderTemplateListData> {\n    OrderTemplateList: IModuleProps;\n    status?: orderTemplateListStatus;\n    statusMessage?: React.ReactNode;\n    heading?: React.ReactNode;\n    OrderTemplates?: INodeProps;\n    OrderTemplate?: INodeProps;\n    orderTemplates?: ISingleOrderTemplateViewProps[];\n    createOrderTemplateButton?: React.ReactNode;\n    templateHeaderStatusMessage?: React.ReactNode;\n}\n\n/**\n *\n * OrderTemplateList component\n * @extends {React.PureComponent<IOrderTemplateListProps<IOrderTemplateListData>, IOrderTemplateListActionMessageState>}\n */\n@observer\nclass OrderTemplateList extends React.Component<IOrderTemplateListProps<IOrderTemplateListData>, IOrderTemplateActionMessageState> {\n\n    constructor(props: IOrderTemplateListProps<IOrderTemplateListData>) {\n        super(props);\n        this.state = {\n            itemKey: '',\n            userMessage: '',\n            headerStatusMessage: '',\n            statusCssString: 'success',\n            messageGlyph: 'fas fa-check',\n            isOpen: false,\n        };\n    }\n\n    public async componentDidMount(): Promise<void> {\n        this.setState({});\n    }\n\n    public render(): JSX.Element | null {\n        const { className } = this.props.config;\n        const { emptyOrderTemplateText, createNewTemplateButtonText } = this.props.resources;\n        const { orderTemplates } = this.props.data;\n        const orderTemplatesData = orderTemplates && (orderTemplates).result;\n\n        if (orderTemplates.status === 'LOADING') {\n            const errorProps: IOrderTemplateListViewProps = {\n                ...(this.props as IOrderTemplateListProps<IOrderTemplateListData>),\n                OrderTemplateList: {\n                    moduleProps: this.props,\n                    className: classnames('ms-order-template', className),\n                },\n                status: 'LOADING',\n                statusMessage: <OrderTemplateListStatusMessage errorType='LOADING' text='Loading...'/>,\n                heading: (\n                    <Heading\n                        className='ms-order-template__heading'\n                        text={this.props.resources.orderTemplateListTitle}\n                    />\n                ),\n            };\n            return this.props.renderView(errorProps);\n        }\n\n        if (!!orderTemplatesData && orderTemplatesData.length === 0) {\n            // when no order templates are found for customer\n            const emptyViewProps: IOrderTemplateListViewProps = {\n                ...(this.props as IOrderTemplateListProps<IOrderTemplateListData>),\n                OrderTemplateList: {\n                    moduleProps: this.props,\n                    className: classnames('ms-order-template', className),\n                },\n                status: 'EMPTY',\n                statusMessage: <OrderTemplateListStatusMessage errorType='EMPTY' text={ emptyOrderTemplateText }/>,\n                heading: (\n                    <Heading\n                        className='ms-order-template__heading'\n                        text={this.props.resources.orderTemplateListTitle}\n                    />\n                ),\n            };\n\n            return this.props.renderView(emptyViewProps);\n        }\n\n        const viewProps: IOrderTemplateListViewProps = {\n            ...(this.props as IOrderTemplateListProps<IOrderTemplateListData>),\n            OrderTemplateList: {\n                moduleProps: this.props,\n                className: classnames('ms-order-template', className),\n            },\n            status: 'SUCCESS',\n            heading: (\n                <Heading\n                    className='ms-order-template__heading'\n                    text={this.props.resources.orderTemplateListTitle}\n                />\n            ),\n            createOrderTemplateButton: (\n                <CreateNewTemplateButtonComponent\n                    context={this.props.context}\n                    id={this.props.id}\n                    typeName={this.props.typeName}\n                    data={{}}\n                    createOrderTemplateText={createNewTemplateButtonText}\n                    onOrderTemplateCreated={this._reloadPage}\n                    createOrderTemplateDialogResources={this._generateOrderTemplateNameDialogResources(this.props.resources)}\n                />\n            ),\n            templateHeaderStatusMessage: this.state.isOpen && this.state.headerStatusMessage && (\n                <div className='ms-order-template__products-status'>\n                    <Alert color={this.state.statusCssString} isOpen={this.state.isOpen} toggle={this._onDismiss}>\n                        <span>{this.state.headerStatusMessage}</span>\n                    </Alert>\n                </div>\n            ),\n            OrderTemplates: {\n                className: 'ms-order-template__list-item',\n                tag: 'ul',\n            },\n            OrderTemplate: {\n                className: 'ms-order-template__tile',\n                tag: 'li',\n            },\n            orderTemplates: orderTemplatesData && this._renderOrderTemplateList(orderTemplatesData)\n        };\n\n        return this.props.renderView(viewProps) as React.ReactElement;\n    }\n\n    private _generateOrderTemplateNameDialogResources(resources: IOrderTemplateListResources): IOrderTemplateNameDialogResources {\n        return {\n            orderTemplateHeaderLabel: resources.createOrderTemplateHeader,\n            orderTemplateTitleLabel: resources.orderTemplateTitle,\n            orderTemplateNameAriaLabel: resources.orderTemplateNameAriaLabel,\n            orderTemplateDescription: resources.createOrderTemplateDescription,\n\n            defaultOrderTemplateName: resources.defaultOrderTemplateName,\n\n            orderTemplateButtonLabel: resources.createOrderTemplateButtonText,\n            orderTemplateCancelButtonLabel: resources.cancelNewOrderTemplateCreationButtonText\n        };\n    }\n\n    private _renderOrderTemplateList(orderTemplates: OrderTemplate[]): ISingleOrderTemplateViewProps[] {\n        const { context, telemetry } = this.props;\n        const { imageSettings } = this.props.config;\n        return orderTemplates.map((orderTemplate: OrderTemplate, index) => {\n            const currentTemplateProps: ISingleOrderTemplateProps = {\n                orderTemplateState: this.state,\n                Id: orderTemplate.productList.Id,\n                name: orderTemplate.productList.Name,\n                orderTemplate: orderTemplate,\n                context: context,\n                imageSettings: imageSettings,\n                removeFromOrderTemplateListText: 'remove',\n                addToBagText: this.props.resources.addToBagButtonText,\n                index: index,\n                itemKey: orderTemplate.productList.Id,\n                telemetry: telemetry,\n                moduleId: this.props.id,\n                moduleTypeName:  this.props.typeName,\n                handlers: {\n                    onRemoveOrderTemplate: this._onRemoveFromOrderTemplateList,\n                    onDismiss: this._onDismiss,\n                },\n                resources: {\n                    closeWindowButtonText: this.props.resources.closeWindowButtonText,\n                    addToCartFailureMessage: this.props.resources.addToCartFailureMessage,\n                    addToCartSuccessMessage: this.props.resources.addToCartSuccessMessage,\n                    addToCartProcessMessage: this.props.resources.addToCartProcessMessage,\n                    linesAddedToCartDialogResources: {\n                        viewCartButtonText: this.props.resources.viewCartButtonText,\n                        orderTemplateCloseButtonText: this.props.resources.orderTemplateCloseButtonText,\n                        linesAddedToCartHeaderItemsOneText: this.props.resources.linesAddedToCartHeaderItemsOneText,\n                        linesAddedToCartHeaderLinesOneText: this.props.resources.linesAddedToCartHeaderLinesOneText,\n                        linesAddedToCartHeaderLinesFormatText: this.props.resources.linesAddedToCartHeaderLinesFormatText,\n                        linesAddedToCartHeaderMessageText: this.props.resources.linesAddedToCartHeaderMessageText\n                    }\n                }\n            };\n\n            return (\n                OrderTemplateRender(currentTemplateProps)!\n            );\n        });\n    }\n\n    private _onDismiss = () => {\n        this.setState({\n            isOpen: false\n        });\n    }\n\n    private _reloadPage = async () => {\n        window.location.reload();\n    }\n\n    private _onRemoveFromOrderTemplateList = (productListId: string): void | undefined => {\n        const { context, data, telemetry, resources } = this.props;\n        const { orderTemplates } = data;\n\n        if (context && context.actionContext) {\n            const userToken = context.request.user.isAuthenticated && context.request.user.token;\n            if (userToken && orderTemplates.result && orderTemplates.result[0] && productListId) {\n                const orderTemplate = orderTemplates.result.find(p => p.productList.Id === productListId);\n                if (orderTemplate) {\n                    deleteAsync({ callerContext: context.actionContext }, orderTemplate.productList)\n                    .then()\n                    .catch((error: string) => {\n                            telemetry.warning('[order-template-list] Unable to delete order template.');\n                            telemetry.error(error);\n                            this.setState({\n                                itemKey: productListId,\n                                headerStatusMessage: resources.deleteOrderTemplateFailedText,\n                                statusCssString: 'danger',\n                                messageGlyph: 'fas fa-exclamation-triangle',\n                                isOpen: true\n                            });\n                    }).then(this._reloadPage);\n                } else {\n                telemetry.warning('[order-template-list] Failed to delete order template. Order template was not found');\n                }\n            } else {\n                    telemetry.warning('[order-template-list] Failed to delete order template.');\n            }\n        }\n    }\n\n}\n\nexport default OrderTemplateList;\n"]}