{"version":3,"file":"order-template-list.view.js","sourceRoot":"./src/","sources":["modules/order-template-list/order-template-list.view.tsx"],"names":[],"mappings":"AAAA;;;GAGG;AAEH,OAAO,KAAK,KAAK,MAAM,OAAO,CAAC;AAE/B,OAAO,EAAa,MAAM,EAAE,IAAI,EAAE,MAAM,sCAAsC,CAAC;AAI/E,MAAM,CAAC,MAAM,qBAAqB,GAA0C,KAAK,CAAC,EAAE;IAChF,MAAM,EAAE,iBAAiB,EAAE,MAAM,EAAE,aAAa,EAAE,OAAO,EAAE,cAAc,EAAE,cAAc,EAAE,aAAa,EAAE,yBAAyB,EAAE,2BAA2B,EAAE,GAAG,KAAK,CAAC;IAE3K,OAAO,CACH,oBAAC,MAAM,oBAAK,iBAAiB;QACxB,OAAO;QACP,MAAM,KAAK,SAAS,IAAI,aAAa;QACtC,oBAAC,IAAI,IAAC,SAAS,EAAC,EAAE;YACb,yBAAyB;YACzB,2BAA2B,CACzB;QACL,cAAc,IAAI,cAAc,IAAI,cAAc,CAAC,MAAM,GAAG,CAAC;YAC3D,oBAAC,IAAI,kBAAC,SAAS,EAAE,cAAc,CAAC,SAAS,IAAM,cAAc,GACxD,cAAc,IAAI,cAAc,CAAC,GAAG,CAAC,CAAC,aAAa,EAAE,EAAE;gBACpD,OAAO,oBAAoB,CAAC,aAAa,EAAE,aAAa,CAAC,CAAC;YAC9D,CAAC,CAAC,CACC,CAEN,CACZ,CAAC;AACN,CAAC,CAAC;AAEF,MAAM,oBAAoB,GAAG,CAAC,aAA4C,EAAE,aAA0B,EAAsB,EAAE;IAE1H,MAAM,EAAE,GAAG,EAAE,eAAe,EAAE,kBAAkB,EAAE,0BAA0B,EAAE,YAAY,EAAE,iBAAiB,EAAE,GAAG,aAAa,CAAC;IAChI,OAAO,CACH,oBAAC,IAAI,kBAAC,GAAG,EAAE,GAAG,EAAE,SAAS,EAAE,aAAc,CAAC,SAAS,IAAM,aAAa;QACjE,iBAAiB;QACjB,kBAAkB;QAClB,eAAe;QACf,YAAY;QACZ,0BAA0B,CACxB,CACV,CAAC;AACN,CAAC,CAAC;AAEF,eAAe,qBAAqB,CAAC","sourcesContent":["/*!\n * Copyright (c) Microsoft Corporation.\n * All rights reserved. See LICENSE in the project root for license information.\n */\n\nimport * as React from 'react';\n\nimport {INodeProps, Module, Node } from '@msdyn365-commerce-modules/utilities';\nimport { ISingleOrderTemplateViewProps } from './components';\nimport { IOrderTemplateListViewProps } from './order-template-list';\n\nexport const OrderTemplateListView: React.FC<IOrderTemplateListViewProps> = props => {\n    const { OrderTemplateList, status, statusMessage, heading, OrderTemplates, orderTemplates, OrderTemplate, createOrderTemplateButton, templateHeaderStatusMessage } = props;\n\n    return (\n        <Module {...OrderTemplateList}>\n            {heading}\n            {status !== 'SUCCESS' && statusMessage}\n            <Node className=''>\n                {createOrderTemplateButton}\n                {templateHeaderStatusMessage}\n            </Node>\n            { OrderTemplates && orderTemplates && orderTemplates.length > 0 &&\n                <Node className={OrderTemplates.className} {...OrderTemplates}>\n                    {orderTemplates && orderTemplates.map((orderTemplate) => {\n                        return _renderOrderTemplate(orderTemplate, OrderTemplate);\n                    })}\n                </Node>\n            }\n        </Module>\n    );\n};\n\nconst _renderOrderTemplate = (orderTemplate: ISingleOrderTemplateViewProps, OrderTemplate?: INodeProps): JSX.Element | null => {\n\n    const { key, addToCartButton, orderTemplateImage, orderTemplateStatusMessage, removeButton, orderTemplateName } = orderTemplate;\n    return (\n        <Node key={key} className={OrderTemplate!.className} {...OrderTemplate}>\n            {orderTemplateName}\n            {orderTemplateImage}\n            {addToCartButton}\n            {removeButton}\n            {orderTemplateStatusMessage}\n        </Node>\n    );\n};\n\nexport default OrderTemplateListView;"]}