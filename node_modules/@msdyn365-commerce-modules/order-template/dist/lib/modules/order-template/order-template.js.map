{"version":3,"file":"order-template.js","sourceRoot":"./src/","sources":["modules/order-template/order-template.tsx"],"names":[],"mappings":"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","sourcesContent":["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { getPriceForSelectedVariant, getProductUrlSync, OrderTemplate, OrderTemplateLine, PriceForSelectedVariantInput } from '@msdyn365-commerce-modules/retail-actions';\nimport { Alert, getTelemetryObject, Heading, IModuleProps, INodeProps, ITelemetryContent, UncontrolledPagination } from '@msdyn365-commerce-modules/utilities';\nimport { IItemAddedToCartDialogData, IItemAddedToCartDialogResources, ILinesAddedToCartDialogResources, IOrderTemplateNameDialogResources, ItemAddedToCartDialog } from '@msdyn365-commerce/components';\nimport MsDyn365, { AsyncResult, getUrlSync, IRequestContext } from '@msdyn365-commerce/core';\nimport { getCartState } from '@msdyn365-commerce/global-state';\nimport { CartLine, ProductList, ProductListLine } from '@msdyn365-commerce/retail-proxy';\nimport { addCartLinesAsync } from '@msdyn365-commerce/retail-proxy/dist/DataActions/CartsDataActions.g';\nimport {\n    deleteAsync,\n    removeProductListLinesAsync,\n    updateProductListLinesAsync\n} from '@msdyn365-commerce/retail-proxy/dist/DataActions/ProductListsDataActions.g';\nimport { SimpleProduct } from '@msdyn365-commerce/retail-proxy/dist/Entities/CommerceTypes.g';\nimport classnames from 'classnames';\nimport debounce from 'lodash/debounce';\nimport { action } from 'mobx';\nimport { observer } from 'mobx-react';\nimport * as React from 'react';\nimport {\n    IOrderTemplateActionsProps,\n    IOrderTemplateActionsViewProps,\n    IOrderTemplateData,\n    IOrderTemplateLineProps,\n    IOrderTemplateLineViewProps,\n    IOrderTemplateProps,\n    IOrderTemplateResources,\n    IOrderTemplateTableHeading,\n    OrderTemplateActionsView,\n    OrderTemplateBulkActions,\n    OrderTemplateLinesStatusMessage,\n    OrderTemplateLineView,\n    OrderTemplateTableHeading\n} from '../../';\nimport { ActiveOrderTemplateLinesInput } from './actions/get-order-template';\n\nexport interface IOrderTemplateLineActionMessageState {\n    itemKey: string;\n    userMessage: string;\n    statusCssString: string;\n    messageGlyph: string;\n    isOpen: boolean;\n    isItemAddedToOrderTemplateOpen: boolean;\n    itemAddedToCartDialogData?: IItemAddedToCartDialogData;\n    productSelection: IOrderTemplateLineViewModel[];\n}\n\nexport type orderTemplateLinesStatus = 'LOADING' | 'SUCCESS' | 'FAILED' | 'EMPTY';\n\nexport interface IOrderTemplateViewProps extends IOrderTemplateProps<IOrderTemplateData> {\n    OrderTemplateLines: IModuleProps;\n    callbacks?: IOrderTemplateLinesCallbacks;\n    status?: orderTemplateLinesStatus;\n    statusMessage?: React.ReactNode;\n    heading?: React.ReactNode;\n    OrderTemplateActions?: INodeProps;\n    ProductsTable?: INodeProps;\n    ProductsTableRow?: INodeProps;\n    ProductsTableHeading?: React.ReactNode;\n    ProductDetails?: INodeProps;\n    orderLines?: IOrderTemplateLineViewProps[];\n    productListLines?: ProductListLine[];\n    productsStatusMessage?: React.ReactNode;\n    orderActions?: IOrderTemplateActionsViewProps | null;\n    resources: IOrderTemplateResources;\n    pagination?: React.ReactNode;\n    itemAddedToCartDialog?: React.ReactNode;\n    bulkOrderLineActions?: React.ReactNode;\n}\n\nexport interface IOrderTemplateLinesCallbacks {\n    updateQuantity(itemKey: string, quantity: number): void;\n}\n\nexport interface IOrderTemplateLineViewModel extends OrderTemplateLine {\n    isChecked: boolean;\n}\n\n/**\n *\n * OrderTemplateLines component\n * @extends {React.PureComponent<IOrderTemplateProps<IOrderTemplateData>, IOrderTemplateLineActionMessageState>}\n */\n@observer\nclass OrderTemplateLines extends React.Component<IOrderTemplateProps<IOrderTemplateData>, IOrderTemplateLineActionMessageState> {\n    private readonly className: string;\n    private telemetryContent?: ITelemetryContent;\n\n    constructor(props: IOrderTemplateProps<IOrderTemplateData>, state: IOrderTemplateLineActionMessageState) {\n        super(props);\n        this.className = 'ms-order-template';\n        this.state = {\n            itemKey: '',\n            userMessage: '',\n            statusCssString: 'success',\n            messageGlyph: 'fas fa-check',\n            isOpen: false,\n            isItemAddedToOrderTemplateOpen: false,\n            productSelection: []\n        };\n        this.telemetryContent = getTelemetryObject(this.props.context.request.telemetryPageName!, this.props.friendlyName, this.props.telemetry);\n    }\n\n    @action\n    public async componentDidMount(): Promise<void> {\n        this.setState({});\n        const orderTemplate = await this.props.data.orderTemplate;\n        this.props.config.heading!.text = orderTemplate.productList.Name || '';\n        this.setState({\n            productSelection: orderTemplate.orderTemplateLines as IOrderTemplateLineViewModel[]\n        });\n    }\n\n    public render(): JSX.Element | null {\n        const { heading, className } = this.props.config;\n        const { emptyOrderTemplateLinesText, errorGettingOrderTemplateLines } = this.props.resources;\n        const { orderTemplate, cart } = this.props.data;\n\n        if (cart.status === 'LOADING' || orderTemplate.status === 'LOADING') {\n            const errorProps: IOrderTemplateViewProps = {\n                ...(this.props as IOrderTemplateProps<IOrderTemplateData>),\n                OrderTemplateLines: {\n                    moduleProps: this.props,\n                    className: classnames(this.className, className)\n                },\n                status: 'LOADING',\n                statusMessage: <OrderTemplateLinesStatusMessage errorType='LOADING' text='Loading...' />,\n                heading: heading && <Heading className={`${this.className}__heading`} {...heading} />,\n                resources: this.props.resources\n            };\n            return this.props.renderView(errorProps);\n        }\n\n        if (cart.status === 'FAILED' || orderTemplate.status === 'FAILED') {\n            const errorProps: IOrderTemplateViewProps = {\n                ...(this.props as IOrderTemplateProps<IOrderTemplateData>),\n                OrderTemplateLines: {\n                    moduleProps: this.props,\n                    className: classnames(`${this.className}`, className)\n                },\n                status: 'FAILED',\n                statusMessage: <OrderTemplateLinesStatusMessage errorType='FAILED' text={errorGettingOrderTemplateLines} />,\n                heading: heading && <Heading className={`${this.className}__heading`} {...heading} />,\n                resources: this.props.resources\n            };\n\n            return this.props.renderView(errorProps);\n        }\n\n        const orderTemplateResult = orderTemplate && orderTemplate.result;\n        const orderTemplateLines= orderTemplateResult && orderTemplateResult.orderTemplateLines;\n\n        if (!orderTemplateResult || !orderTemplateLines || orderTemplateLines.length === 0) {\n            const emptyViewProps: IOrderTemplateViewProps = {\n                ...(this.props as IOrderTemplateProps<IOrderTemplateData>),\n                OrderTemplateLines: {\n                    moduleProps: this.props,\n                    className: classnames(`${this.className}`, className)\n                },\n                status: 'EMPTY',\n                statusMessage: <OrderTemplateLinesStatusMessage errorType='EMPTY' text={emptyOrderTemplateLinesText} />,\n                heading: heading && <Heading className={`${this.className}__heading`} {...heading} />,\n                resources: this.props.resources\n            };\n\n            return this.props.renderView(emptyViewProps);\n        }\n\n        const viewProps: IOrderTemplateViewProps = {\n            ...(this.props as IOrderTemplateProps<IOrderTemplateData>),\n            OrderTemplateLines: {\n                moduleProps: this.props,\n                className: classnames(`${this.className}`, className)\n            },\n            resources: this.props.resources,\n            status: 'SUCCESS',\n            productsStatusMessage: this.state.isOpen && (\n                <div className={`${this.className}-products-status`}>\n                    <Alert color={this.state.statusCssString} isOpen={this.state.isOpen} toggle={this._onDismiss}>\n                        <span>{this.state.userMessage}</span>\n                    </Alert>\n                </div>\n            ),\n            heading: heading && <Heading className={`${this.className}__heading`} {...heading} />,\n            OrderTemplateActions: {\n                className: `${this.className}-action-bar`,\n                tag: 'div'\n            },\n            ProductsTable: {\n                className: `${this.className}__table`,\n                tag: 'table'\n            },\n            ProductsTableRow: {\n                className: `${this.className}-table-line`,\n                tag: 'tr'\n            },\n            ProductsTableHeading: this._renderProductListHeader(this.props.resources),\n            ProductDetails: {\n                className: `${this.className}-table-line__link`,\n                tag: 'a'\n            },\n            orderLines: this._renderProductList(),\n            callbacks: { updateQuantity: debounce(this._changeQuantity, 2000) },\n            orderActions: this._renderOrderActions(orderTemplateResult),\n            pagination: this._renderPagination(),\n            itemAddedToCartDialog: this._renderItemAddedToCartDialog(),\n            bulkOrderLineActions: this._getBulkActions(orderTemplateResult.productList.Id)\n        };\n\n        return this.props.renderView(viewProps) as React.ReactElement;\n    }\n\n    public onSelect(line: IOrderTemplateLineViewModel, isChecked: boolean): void {\n        line.isChecked = isChecked;\n\n        const updated = this.state.productSelection.map(product => {\n            if (product.fullProduct?.ProductDetails.ItemId === line.fullProduct?.ProductDetails.ItemId) {\n                line.isChecked = isChecked;\n            }\n            return product;\n        }) || [];\n\n        this.setState({\n            productSelection: updated\n        });\n    }\n\n    public onSelectAll(isChecked: boolean): void {\n        const updated = this.state.productSelection.map(line => {\n            line.isChecked = isChecked;\n            return line;\n        }) || [];\n\n        this.setState({\n            productSelection: updated\n        });\n    }\n\n    private _renderProductListHeader(resources: IOrderTemplateResources): React.ReactNode {\n        const { productNumberText, productText, productUnitPriceText, productUOMText, productQuantityText, productActionsText } = resources;\n        const headers: IOrderTemplateTableHeading = {\n            productNumber: productNumberText,\n            productName: productText,\n            productUnitPrice: productUnitPriceText,\n            productUOM: productUOMText,\n            productQuantity: productQuantityText,\n            productActions: productActionsText,\n            clickHandler: (isChecked: boolean) => this.onSelectAll(isChecked)\n        };\n\n        return <OrderTemplateTableHeading {...headers}/>;\n    }\n\n    private _getBulkActions(orderTemplateId: string): React.ReactNode {\n        return OrderTemplateBulkActions({\n            ...this.props,\n            orderTemplateId: orderTemplateId,\n            onAddSelectionToBag: this._onAddSelectionToBag,\n            onRemoveSelection: this._onRemoveSelection\n        });\n    }\n\n    private _generateLinesAddedToCartDialogResources(): ILinesAddedToCartDialogResources {\n        return {\n            viewCartButtonText: this.props.resources.viewCartButtonText,\n            orderTemplateCloseButtonText: this.props.resources.orderTemplateCloseButtonText,\n            linesAddedToCartHeaderItemsOneText: this.props.resources.linesAddedToCartHeaderItemsOneText,\n            linesAddedToCartHeaderLinesOneText: this.props.resources.linesAddedToCartHeaderLinesOneText,\n            linesAddedToCartHeaderLinesFormatText: this.props.resources.linesAddedToCartHeaderLinesFormatText,\n            linesAddedToCartHeaderMessageText: this.props.resources.linesAddedToCartHeaderMessageText\n        };\n    }\n\n    private _generateItemAddedToCartDialogResources(): IItemAddedToCartDialogResources {\n        return {\n            viewCartButtonText: this.props.resources.viewCartButtonText,\n            orderTemplateCloseButtonText: this.props.resources.orderTemplateCloseButtonText,\n            itemAddedToCartHeaderItemOneText: this.props.resources.itemAddedToCartHeaderItemOneText,\n            itemAddedToCartHeaderItemFormatText: this.props.resources.itemAddedToCartHeaderItemFormatText,\n            itemAddedToCartHeaderMessageText: this.props.resources.itemAddedToCartHeaderMessageText,\n            freePriceText: this.props.resources.freePriceText,\n            originalPriceText: this.props.resources.originalPriceText,\n            currentPriceText: this.props.resources.currentPriceText\n        };\n    }\n\n    /**\n     * @TODO user progress notification - current implementation is to refresh page upon XHR success\n     * @param event React.MouseEvent\n     */\n    private _onRemoveSelection = (event: React.MouseEvent<HTMLElement>) => {\n        const { context, resources } = this.props;\n        const { telemetry } = context;\n        const { removeSelectedFailureMessage, removeSelectedSuccessMessage } = resources;\n        const lines = this.state.productSelection;\n        const productListLines = lines && lines.length && lines\n            .filter(line => line.isChecked)\n            .map(line => line.productListLine);\n\n        if (productListLines && productListLines.length) {\n            const productListId = productListLines[0].ProductListId;\n\n            removeProductListLinesAsync({ callerContext: context.actionContext }, productListId!, productListLines)\n                .then(() => {\n                    this.setState({\n                        userMessage: removeSelectedSuccessMessage,\n                        statusCssString: 'success',\n                        messageGlyph: 'fas fa-check',\n                        isOpen: true\n                    });\n                    window.location.reload();\n                })\n                .catch(error => {\n                    telemetry.warning('[order-template-lines] Unable remove items from the order template lines');\n                    telemetry.error(error);\n                    this.setState({\n                        userMessage: removeSelectedFailureMessage,\n                        statusCssString: 'success',\n                        messageGlyph: 'fas fa-check',\n                        isOpen: true\n                    });\n                });\n        }\n    }\n\n    private _onAddSelectionToBag = async (event: React.MouseEvent<HTMLElement>) => {\n        const { context, resources } = this.props;\n        const { addedToCartFailureMessage, addedToCartSuccessMessage } = resources;\n        const lines = this.state.productSelection;\n        const cartState = await getCartState(context.actionContext);\n        const selectedLines = lines.filter(line => line.isChecked);\n\n        if (selectedLines.length) {\n            const cartLines = selectedLines.map(productLine => {\n                return {\n                    ItemId: productLine.fullProduct?.ProductDetails.ItemId,\n                    ProductId: productLine.productListLine.ProductId,\n                    Quantity: productLine.productListLine.Quantity || 1,\n                    TrackingId: '',\n                    UnitOfMeasureSymbol: productLine.productListLine.UnitOfMeasure || productLine.fullProduct?.ProductDetails.DefaultUnitOfMeasure\n                } as CartLine ;\n            }) || [];\n\n            return addCartLinesAsync({ callerContext: context.actionContext }, cartState.cart.Id, cartLines, cartState.cart.Version!)\n                .then(async res => {\n                    context.telemetry.trace(`Order template; selected line items (${cartLines.map(line => line.ItemId).join(',')}) added to cart: ${cartState.cart.Id}`);\n                    await cartState.refreshCart({});\n                    this.setState({\n                        userMessage: addedToCartSuccessMessage,\n                        statusCssString: 'success',\n                        messageGlyph: 'fas fa-check',\n                        isOpen: true\n                    });\n                })\n                .catch(error => {\n                    context.telemetry.trace('Unable to add order template to cart.');\n                    this.setState({\n                        userMessage: addedToCartFailureMessage,\n                        statusCssString: 'danger',\n                        messageGlyph: 'fas fa-exclamation-triangle',\n                        isOpen: true\n                    });\n                });\n        }\n    };\n\n    private _renderOrderActions(orderTemplate: OrderTemplate): IOrderTemplateActionsViewProps {\n        const { id, typeName, context, resources } = this.props;\n        const {\n            addTemplateToBagButtonText,\n            renameTemplateButtonText,\n            deleteTemplateButtonText,\n            closeWindowButtonText,\n            addToCartFailureMessage,\n            addToCartSuccessMessage,\n            addToCartProcessMessage\n        } = resources;\n\n        const orderTemplateActions: IOrderTemplateActionsProps = {\n            data: { orderTemplate },\n            id: id,\n            typeName: typeName,\n            context: context,\n            telemetryContent: this.telemetryContent,\n            handlers: {\n                onRenameTemplate: this._renameTemplate,\n                onRemoveTemplate: this._removeTemplate\n            },\n            renameOrderTemplateDialogStrings: this._generateOrderTemplateNameDialogResources(resources),\n            resources: {\n                addTemplateToBagButtonText: addTemplateToBagButtonText,\n                renameTemplateButtonText: renameTemplateButtonText,\n                deleteTemplateButtonText: deleteTemplateButtonText,\n                addToCartFailureMessage: addToCartFailureMessage,\n                addToCartSuccessMessage: addToCartSuccessMessage,\n                addToCartProcessMessage: addToCartProcessMessage,\n                closeWindowButtonText: closeWindowButtonText,\n                linesAddedToCartDialogResources: this._generateLinesAddedToCartDialogResources()\n            }\n        };\n\n        return OrderTemplateActionsView(orderTemplateActions);\n    }\n\n    private _generateOrderTemplateNameDialogResources(resources: IOrderTemplateResources): IOrderTemplateNameDialogResources {\n        return {\n            orderTemplateHeaderLabel: resources.renameOrderTemplateTitleText,\n            orderTemplateTitleLabel: resources.orderTemplateTitle,\n            orderTemplateNameAriaLabel: resources.orderTemplateTitle,\n            orderTemplateDescription: '',\n            defaultOrderTemplateName: resources.defaultOrderTemplateName,\n            orderTemplateButtonLabel: resources.renameOrderTemplateButtonText,\n            orderTemplateCancelButtonLabel: resources.cancelBtnLabel\n        };\n    }\n\n    private _getCurrentUrl = (reqContext: IRequestContext): URL=> {\n        if (MsDyn365.isBrowser) {\n            return new URL(window.location.href);\n        }\n        return new URL(reqContext.url.requestUrl.href);\n    }\n\n    private _renderItemAddedToCartDialog = (): React.ReactNode | null => {\n        if (!this.state.itemAddedToCartDialogData) {\n            return null;\n        }\n\n        const onClose = () => {\n            this.setState({\n                itemKey: this.state.itemKey,\n                userMessage: this.state.userMessage,\n                statusCssString: this.state.statusCssString,\n                messageGlyph: this.state.messageGlyph,\n                isOpen: this.state.isOpen,\n                isItemAddedToOrderTemplateOpen: false\n            });\n        };\n\n        return (\n            <ItemAddedToCartDialog\n                className={'msc-item-added-to-cart-dialog'}\n                id={this.props.id}\n                typeName={this.props.typeName}\n                context={this.props.context}\n                dialogStrings={this._generateItemAddedToCartDialogResources()}\n                data={this.state.itemAddedToCartDialogData}\n                modalOpen={this.state.isItemAddedToOrderTemplateOpen}\n                onClose={onClose}\n            />\n        );\n    }\n\n    private _renderPagination = (): React.ReactNode | null => {\n        const { config, context, data, resources } = this.props;\n        const orderTemplate = data && data.orderTemplate && data.orderTemplate.result;\n        if (!orderTemplate) {\n            return null;\n        }\n\n        const fullUrl = this._getCurrentUrl(context.request);\n        const itemsPerPage = config.itemsPerPage || 50;\n        const currentPageNumber = this.props.context.request.query && (+this.props.context.request.query.skip / itemsPerPage) || 0;\n        const skipCount = currentPageNumber * itemsPerPage;\n        const totalItems = orderTemplate && orderTemplate.totalLines;\n        const previousText = resources.flipperPrevious;\n        const nextText = resources.flipperNext;\n\n        if (totalItems <= itemsPerPage) {\n            return null;\n        }\n\n        return (\n            <UncontrolledPagination\n                className={`${this.className}__pagination`}\n                role='navigation'\n                aria-label={resources.paginationAriaLabel}\n                url={fullUrl.href}\n                qsp={'skip'}\n                items={totalItems}\n                itemsPerPage={itemsPerPage}\n                startingItem={skipCount}\n                previousText={<div className='msc-pagination__prev'><span className={`${this.props.config.className}__pagination-left`} aria-hidden='true'/><span className='prev-text'>{previousText}</span></div>}\n                nextText={<div className='msc-pagination__next'><span className='next-text'>{nextText}</span><span className={`${this.props.config.className}__pagination-right`} aria-hidden='true'/></div>}\n                previousAriaLabel={previousText}\n                nextAriaLabel={nextText}\n            />\n        );\n    }\n\n    private _renderProductList(): IOrderTemplateLineViewProps[] {\n        const {\n            priceFree,\n            originalPriceText,\n            currentPriceText,\n            addOrderTemplateItemToBagButtonText,\n            removeItemFromOrderTemplateButtonText,\n            productDimensionTypeColor,\n            productDimensionTypeSize,\n            productDimensionTypeStyle,\n            inputQuantityAriaLabel\n        } = this.props.resources;\n\n        const { context, telemetry } = this.props;\n        const { imageSettings } = this.props.config;\n\n        return this.state.productSelection?.map((line, index) => {\n            const currentProductProps: IOrderTemplateLineProps = {\n                orderTemplateLine: line,\n                productListLine: line.productListLine ,\n                price: line.fullProduct?.ProductPrice,\n                context: context,\n                productUrl: getProductUrlSync(line.fullProduct!.ProductDetails, context.actionContext, undefined),\n                imageSettings: imageSettings,\n                telemetry: telemetry,\n                moduleId: this.props.id,\n                moduleTypeName: this.props.typeName,\n                quantity: line.productListLine.Quantity!,\n                handlers: {\n                    onAddToBag: this._addItemToBag,\n                    onRemoveItem: this._removeItemFromOrderTemplateLines,\n                    onChangeQuantity: debounce(this._changeQuantity, 2000),\n                    onSelect: this.onSelect.bind(this)\n                },\n                resources: {\n                    productDimensionTypeColor: productDimensionTypeColor,\n                    productDimensionTypeSize: productDimensionTypeSize,\n                    productDimensionTypeStyle: productDimensionTypeStyle,\n                    freePriceText: priceFree,\n                    originalPriceText: originalPriceText,\n                    currentPriceText: currentPriceText,\n                    inputQuantityAriaLabel: inputQuantityAriaLabel,\n                    removeFromOrderTemplateLinesText: removeItemFromOrderTemplateButtonText,\n                    addToBagButtonText: addOrderTemplateItemToBagButtonText\n                }\n            };\n\n            return OrderTemplateLineView(currentProductProps)!;\n        });\n    }\n\n    // dismiss alert when addingToCart/removeItem\n    private _onDismiss = () => {\n        this.setState({\n            isOpen: false\n        });\n    };\n\n    private _changeQuantity = (itemKey: string, quantity: number) => {\n        const { context, data, telemetry, config } = this.props;\n        const { orderTemplate } = data;\n\n        if (context) {\n            if (orderTemplate.result) {\n                const orderTemplateLinesData = orderTemplate && orderTemplate.result && orderTemplate.result.orderTemplateLines;\n                if (orderTemplateLinesData) {\n                    const orderLineIndex = orderTemplateLinesData.findIndex(lines => lines.productListLine.LineId === itemKey);\n                    const newProductListLine = { ...orderTemplateLinesData[orderLineIndex] };\n                    if (orderTemplateLinesData[orderLineIndex].productListLine.Quantity === quantity) {\n                        return;\n                    }\n\n                    newProductListLine.productListLine.Quantity = quantity;\n                    const { fullProduct, ...line } = newProductListLine;\n\n                    updateProductListLinesAsync({ callerContext: context.actionContext }, orderTemplate.result.productList.Id, [line.productListLine])\n                        .then(list => {\n                            this.setState({\n                                itemKey: itemKey,\n                                userMessage: '',\n                                statusCssString: 'success',\n                                messageGlyph: 'fas fa-check',\n                                isOpen: false\n                            });\n                            if (list) {\n                                const newLine = list.find(lines => lines.LineId === itemKey);\n                                orderTemplateLinesData[orderLineIndex].productListLine = newLine!;\n                                const updatedLines = [...orderTemplateLinesData];\n                                updatedLines[orderLineIndex] = { fullProduct, productListLine: newLine! };\n                                const updatedOrderTemplate = { ...orderTemplate.result, ProductListLines: updatedLines };\n                                context.actionContext.update(new ActiveOrderTemplateLinesInput(context.actionContext.requestContext, config), updatedOrderTemplate);\n                            }\n                        })\n                        .catch(error => {\n                            telemetry.warning('[order-template-lines] Unable to update product quantity.');\n                            telemetry.error(error);\n                            this.setState({\n                                itemKey: itemKey,\n                                userMessage: 'Failed to update quantity value.',\n                                statusCssString: 'danger',\n                                messageGlyph: 'fas fa-exclamation-triangle',\n                                isOpen: true\n                            });\n                        });\n                }\n            }\n        }\n    };\n\n    private _addItemToBag = (product: SimpleProduct, quantity: number, itemKey: string): void => {\n        const { context, data, resources, telemetry } = this.props;\n        const { cart } = data;\n        const { maxQuantityLimitText, addedToCartFailureMessage } = resources;\n\n        if (context) {\n            if (cart.result) {\n                const addProductToCartInput = {\n                    product: product,\n                    count: quantity\n                };\n\n                cart.result\n                    .addProductToCart(addProductToCartInput)\n                    .then(result => {\n                        if (result.status === 'SUCCESS') {\n                            return getPriceForSelectedVariant(\n                                new PriceForSelectedVariantInput(\n                                    product.RecordId,\n                                    this.props.context.actionContext.requestContext.apiSettings.channelId,\n                                    product),\n                                this.props.context.actionContext).then(priceResult => {\n                                    if (!priceResult) {\n                                        return AsyncResult.reject('Failed to retrieve product price');\n                                    }\n                                    this.setState({\n                                        itemKey: itemKey,\n                                        userMessage: '',\n                                        statusCssString: 'success',\n                                        messageGlyph: 'fas fa-check',\n                                        isOpen: false,\n                                        isItemAddedToOrderTemplateOpen: true,\n                                        itemAddedToCartDialogData: {\n                                            product: product,\n                                            productPrice: priceResult,\n                                            quantity: quantity\n                                        }\n                                    });\n                                    return AsyncResult.resolve();\n                                });\n                        } else if (result.substatus === 'MAXQUANTITY') {\n                            this.setState({\n                                itemKey: itemKey,\n                                userMessage:\n                                    maxQuantityLimitText\n                                        .replace('{curQuantity}', quantity.toString())\n                                        .replace('{maxQuantity}', context.app.config.maxQuantityForProductListLineItem.toString()) ||\n                                    `You can only add ${context.app.config.maxQuantityForProductListLineItem} of this item to your shopping bag`,\n                                statusCssString: 'danger',\n                                messageGlyph: 'fas fa-exclamation-triangle',\n                                isOpen: true\n                            });\n                            return AsyncResult.resolve();\n                        } else {\n                            telemetry.debug('[order-template-lines] Unable to Update Cart Line from the order template lines');\n                            this.setState({\n                                itemKey: itemKey,\n                                userMessage: addedToCartFailureMessage,\n                                statusCssString: 'danger',\n                                messageGlyph: 'fas fa-exclamation-triangle',\n                                isOpen: true\n                            });\n                            return AsyncResult.resolve();\n                        }\n                    })\n                    .catch(error => {\n                        telemetry.warning(error);\n                        telemetry.debug('[order-template-lines] Error trying to Update Cart Line from the order template lines');\n                        this.setState({\n                            itemKey: itemKey,\n                            userMessage: addedToCartFailureMessage,\n                            statusCssString: 'danger',\n                            messageGlyph: 'fas fa-exclamation-triangle',\n                            isOpen: true\n                        });\n                    });\n            }\n        }\n    };\n\n    private _removeItemFromOrderTemplateLines = (listLineId: string): void | undefined => {\n        const { context, data, telemetry } = this.props;\n        const { orderTemplate } = data;\n\n        if (context && context.actionContext) {\n            const userToken = context.request.user.isAuthenticated && context.request.user.token;\n            if (userToken && orderTemplate.result && orderTemplate.result && listLineId) {\n                const listLine = orderTemplate.result.orderTemplateLines.find(l => l.productListLine.LineId === listLineId);\n                if (listLine) {\n                    const productListId = listLine.productListLine.ProductListId;\n                    const { fullProduct, ...line } = listLine;\n                    removeProductListLinesAsync({ callerContext: context.actionContext }, productListId!, [line.productListLine])\n                        .then(() => {\n                            window.location.reload(false);\n                        })\n                        .catch(error => {\n                            telemetry.warning('[order-template-lines] Unable remove items from the order template lines');\n                            telemetry.error(error);\n                        });\n                }\n            } else {\n                telemetry.warning(\n                    '[order-template-lines] Unable remove items from the order template lines user token or lineItemID was not found'\n                );\n            }\n        }\n    };\n\n    private  _renameTemplate = async (_template: ProductList): Promise<void> => {\n        window.location.reload(false);\n        return Promise.resolve();\n    };\n\n    private _removeTemplate = () => {\n        const { context, data, telemetry, resources } = this.props;\n        const { orderTemplate } = data;\n\n        if (context && context.actionContext) {\n            const userToken = context.request.user.isAuthenticated && context.request.user.token;\n            if (userToken && orderTemplate && orderTemplate.result) {\n                deleteAsync({ callerContext: context.actionContext }, orderTemplate.result.productList)\n                .then()\n                .catch((error: string) => {\n                        telemetry.warning('[order-template] Unable to delete order template.');\n                        telemetry.error(error);\n                        this.setState({\n                            itemKey: orderTemplate.result?.productList.Id || '',\n                            userMessage: resources.deleteOrderTemplateFailedText,\n                            statusCssString: 'danger',\n                            messageGlyph: 'fas fa-exclamation-triangle',\n                            isOpen: true\n                        });\n                });\n                const newLink = getUrlSync('ordertemplatelist', this.props.context.actionContext);\n                if (newLink) {\n                    window.location.assign(newLink);\n                }\n            } else {\n            telemetry.warning('[order-template] Failed to delete order template. Order template was not found');\n            }\n        } else {\n                telemetry.warning('[order-template] Failed to delete order template.');\n        }\n    };\n}\n\nexport default OrderTemplateLines;\n"]}