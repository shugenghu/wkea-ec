{"version":3,"file":"order-template-quantity.js","sourceRoot":"./src/","sources":["modules/order-template/components/common/order-template-quantity.tsx"],"names":[],"mappings":"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","sourcesContent":["import { debounce } from 'lodash';\nimport { reaction } from 'mobx';\nimport { observer } from 'mobx-react';\nimport * as React from 'react';\n\ninterface IQuantityProps {\n    min?: number;\n    max: number;\n    currentCount?: number;\n    disabled?: boolean;\n    incrementGlyphClass?:string;\n    decrementGlyphClass?:string;\n    decrementButtonAriaLabel?: string;\n    incrementButtonAriaLabel?: string;\n    inputQuantityAriaLabel?: string;\n    id?: string;\n    onChange?(newValue: number):void;\n}\n\ninterface IQuantityState {\n    currentInput: number;\n}\n/**\n * Quantity Component - This component is used to add or remove quantity\n */\n@observer\nexport default class OrderTemplateQuantity extends React.PureComponent<IQuantityProps, IQuantityState> {\n    public static defaultProps: Partial<IQuantityProps> = {\n        min: 1,\n        decrementGlyphClass: 'fas fa-minus',\n        incrementGlyphClass: 'fas fa-plus'\n    };\n\n    private inputRef: React.RefObject<HTMLInputElement> = React.createRef<HTMLInputElement>();\n\n    constructor(props: IQuantityProps) {\n        super(props);\n        this.state = { currentInput: props.currentCount || 1 };\n        this._handleChange = this._handleChange.bind(this);\n\n        reaction(\n            () => this.props.currentCount,\n            () => {\n                this.setState({ currentInput: this.props.currentCount || 1 });\n            }\n        );\n    }\n\n    public render(): JSX.Element {\n        const glyphMinusClassName: string = `${this.props.decrementGlyphClass!} quantity__controls-glyph`;\n        const glyphPlusClassName: string = `${this.props.incrementGlyphClass!} quantity__controls-glyph`;\n        const disabled = this.props.currentCount === this.props.min;\n        const incDisabled = this.props.currentCount === this.props.max;\n        const currentValue = this.state.currentInput;\n        let extraClass = '';\n        if(disabled) {\n            // The quantity has reached its boundaries (max or min)\n            extraClass ='disabled';\n\n        } else if(this.props.disabled) {\n            // this.props.disabled shows if the state is not succeded yet\n            extraClass = 'transition';\n        }\n        const getChangeHandler = (amount: number) => () => this._onIncrementalChange(amount);\n\n        return (\n            <div className='quantity'/* id={this.props.id}*/>\n                <button\n                    disabled={this.props.disabled || disabled}\n                    title= {disabled ? '' : this.props.decrementButtonAriaLabel}\n                    className={`decrement quantity__controls ${extraClass}`}\n                    onClick={getChangeHandler(-1)}\n                    aria-hidden={true}\n                    aria-label={`${this.props.decrementButtonAriaLabel}`}\n                    tabIndex={-1}\n                    color={'secondary'}\n                >\n                    <span className={glyphMinusClassName} />\n                </button>\n                <input\n                    type='number'\n                    className='quantity-input'\n                    pattern='[0-9]*'\n                    value={currentValue}\n                    onChange={this._handleChange}\n                    onBlur={this._validateMin}\n                    aria-live='polite'\n                    aria-label={`${this.props.inputQuantityAriaLabel}`}\n                    role='spinbutton'\n                    aria-valuemin={1}\n                    aria-valuemax={this.props.max}\n                    aria-valuenow={currentValue}\n                    ref={this.inputRef}\n                    disabled={this.props.disabled}\n                />\n                <button\n                    disabled={this.props.disabled || incDisabled}\n                    title={incDisabled ? '' : this.props.incrementButtonAriaLabel}\n                    className={`increment quantity__controls ${incDisabled ? 'disabled' : ''}`}\n                    onClick={getChangeHandler(1)}\n                    aria-hidden={true}\n                    aria-label={`${this.props.incrementButtonAriaLabel}`}\n                    tabIndex={-1}\n                    color={'secondary'}\n                >\n                    <span className={glyphPlusClassName} />\n                </button>\n            </div>\n        );\n    }\n\n    private _onIncrementalChange(amount: number): void {\n        const updatedQuantity = this.state.currentInput + amount;\n\n        if (updatedQuantity >= 1 && updatedQuantity <= this.props.max) {\n            this.props.onChange && this.props.onChange(updatedQuantity);\n        }\n    }\n\n    private _handleChange(e: React.ChangeEvent<HTMLInputElement>): void {\n        const currentValue = parseInt((e.target.value), 10);\n        const minValue = this.props.min === undefined ? 1 : this.props.min;\n        const inputElement = this.inputRef && this.inputRef.current && this.inputRef.current instanceof HTMLInputElement && this.inputRef.current;\n\n        if (currentValue > this.props.max) {\n            this.setState(\n                { currentInput: this.props.max },\n                () => {\n                    debounce(\n                        () => {\n                            this.props.onChange && this.props.onChange(this.state.currentInput);\n                        },\n                        200)();\n                }\n            );\n        } else {\n            this.setState(\n                { currentInput: currentValue },\n                () => {\n                    debounce(\n                        () => {\n                            if(!isNaN(this.state.currentInput) && !(this.state.currentInput < minValue)) {\n                                this.props.onChange && this.props.onChange(this.state.currentInput);\n\n                                if (inputElement) {\n                                    inputElement.setAttribute('aria-valuenow', currentValue.toString());\n                                    inputElement.setAttribute('value', currentValue.toString());\n                                }\n                            }\n                        },\n                        200)();\n                }\n            );\n        }\n    }\n\n    private _validateMin = (): void => {\n        const minValue = this.props.min === undefined ? 1 : this.props.min;\n\n        if (isNaN(this.state.currentInput) || (this.state.currentInput < minValue)) {\n            this.props.onChange && this.props.onChange(minValue);\n        } else {\n            this.props.onChange && this.props.onChange(this.state.currentInput);\n        }\n    }\n}"]}