import { Button } from '@msdyn365-commerce-modules/utilities';
import * as React from 'react';
import { AddLineToTemplate } from '.';
export const OrderTemplateBulkActions = (props) => {
    const { addLineModalLinkText, searchButtonAriaLabel, searchInputAriaLabel, searchModalPlaceholderText, selectProductButtonText, addItemToTemplateText, addLineProductUnitPricePrefix, backButtonText, decrementButtonAriaLabel, incrementButtonAriaLabel, quantitySelectLabel, addLineProductUnitOfMeasurePrefix, notFoundSearchErrorNotice, notFoundSearchErrorRedediation, searchErrorMessage, productDimensionTypeColor, productDimensionTypeConfiguration, productDimensionTypeSize, productDimensionTypeStyle, addSelectedToBagButtonText, removeSelectedToBagButtonText, searchResultsCountVerbage, searchResultsCountSubject, addToTemplateConfirmation, totalPriceLabel, progressNotificationText, addToTemplateError } = props.resources;
    const addLineProps = {
        context: props.context,
        resources: {
            addLineModalLinkText,
            searchButtonAriaLabel,
            searchInputAriaLabel,
            searchModalPlaceholderText,
            selectProductButtonText,
            addItemToTemplateText,
            addLineProductUnitPricePrefix,
            backButtonText,
            decrementButtonAriaLabel,
            incrementButtonAriaLabel,
            quantitySelectLabel,
            addLineProductUnitOfMeasurePrefix,
            notFoundSearchErrorNotice,
            notFoundSearchErrorRedediation,
            searchErrorMessage,
            productDimensionTypeColor,
            productDimensionTypeConfiguration,
            productDimensionTypeSize,
            productDimensionTypeStyle,
            searchResultsCountVerbage,
            searchResultsCountSubject,
            addToTemplateConfirmation,
            totalPriceLabel,
            progressNotificationText,
            addToTemplateError
        },
        imageSettings: props.config.imageSettings,
        orderTemplateId: props.orderTemplateId
    };
    return (React.createElement(React.Fragment, null,
        React.createElement(AddLineToTemplate, Object.assign({}, addLineProps)),
        React.createElement(Button, { onClick: props.onAddSelectionToBag, className: 'add-selected-to-bag', "aria-label": addSelectedToBagButtonText },
            React.createElement("span", null),
            addSelectedToBagButtonText),
        React.createElement(Button, { onClick: props.onRemoveSelection, className: 'remove-selected', "aria-label": removeSelectedToBagButtonText },
            React.createElement("span", null),
            removeSelectedToBagButtonText)));
};
//# sourceMappingURL=bulk-actions.js.map