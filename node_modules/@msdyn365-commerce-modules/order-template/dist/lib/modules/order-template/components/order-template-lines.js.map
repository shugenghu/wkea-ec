{"version":3,"file":"order-template-lines.js","sourceRoot":"./src/","sources":["modules/order-template/components/order-template-lines.tsx"],"names":[],"mappings":"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","sourcesContent":["import { getFallbackImageUrl } from '@msdyn365-commerce-modules/retail-actions';\nimport { Button, INodeProps } from '@msdyn365-commerce-modules/utilities';\nimport { PriceComponent } from '@msdyn365-commerce/components';\nimport { ICoreContext, IImageSettings, Image, ITelemetry } from '@msdyn365-commerce/core';\nimport { ProductListLine } from '@msdyn365-commerce/retail-proxy';\nimport { ProductPrice, SimpleProduct } from '@msdyn365-commerce/retail-proxy/dist/Entities/CommerceTypes.g';\nimport * as React from 'react';\nimport { IOrderTemplateLineViewModel } from '../order-template';\nimport OrderTemplateQuantity from './common/order-template-quantity';\n\nexport interface IOrderTemplateLineProps extends ProductListLine {\n    orderTemplateLine: IOrderTemplateLineViewModel;\n    productListLine: ProductListLine;\n    price?: ProductPrice;\n    context: ICoreContext;\n    productUrl: string;\n    imageSettings?: IImageSettings;\n    telemetry: ITelemetry;\n    moduleId: string;\n    moduleTypeName: string;\n    quantity: number;\n    handlers: {\n        onAddToBag(product: SimpleProduct, quantity: number, itemKey: string): void;\n        onRemoveItem(itemKey: string): void | undefined;\n        onChangeQuantity(orderTemplateLineId: string, quantity: number): void;\n        onSelect(line: IOrderTemplateLineViewModel, isChecked: boolean): void;\n    };\n    resources: {\n        productDimensionTypeColor: string;\n        productDimensionTypeSize: string;\n        productDimensionTypeStyle: string;\n        originalPriceText: string;\n        currentPriceText: string;\n        freePriceText: string;\n        inputQuantityAriaLabel: string;\n        removeFromOrderTemplateLinesText: string;\n        addToBagButtonText: string;\n    };\n}\n\nexport interface IOrderTemplateLineViewProps {\n    key: string;\n    productImage: React.ReactNode;\n    productPrice?: React.ReactNode;\n    addToBagButton?: React.ReactNode;\n    removeButton?: React.ReactNode;\n    productName?: string;\n    productNumber?: React.ReactNode;\n    productInfo?: React.ReactNode;\n    productLabel?: React.ReactNode;\n    productUnitOfMeasure?: React.ReactNode;\n    productQuantity?: number;\n    productQuantityView?: React.ReactNode;\n    productListId: string;\n    selectLine: React.ReactNode;\n}\n\nconst _addItemToBag = (props: IOrderTemplateLineProps): void => {\n    const { orderTemplateLine, productListLine, quantity, handlers } = props;\n    const { LineId } = productListLine;\n    const { onAddToBag } = handlers;\n\n    onAddToBag && orderTemplateLine && LineId && onAddToBag(orderTemplateLine.fullProduct!.ProductDetails, quantity, LineId);\n};\n\nconst _removeItemFromOrderTemplateLines = (props: IOrderTemplateLineProps): void => {\n    const { onRemoveItem } = props.handlers;\n    const { productListLine } = props;\n    const { LineId } = productListLine;\n\n    onRemoveItem && LineId && onRemoveItem(LineId);\n};\n\nconst OrderTemplateLineActions = {\n    addToBag: _addItemToBag,\n    removeItem: _removeItemFromOrderTemplateLines\n};\n\nexport const OrderTemplateLineView = (input: IOrderTemplateLineProps): IOrderTemplateLineViewProps | null => {\n    const { orderTemplateLine, productListLine, price, context, imageSettings, quantity, resources } = input;\n    const product = orderTemplateLine.fullProduct;\n    const { LineId, UnitOfMeasure } = productListLine;\n    const { removeFromOrderTemplateLinesText, addToBagButtonText } = resources;\n    if (!product) {\n        return null;\n    }\n\n    const addItemAction = (event: React.MouseEvent<HTMLElement>) => {\n        return OrderTemplateLineActions.addToBag(input);\n    };\n    const removeItemAction = (event: React.MouseEvent<HTMLElement>) => {\n        return OrderTemplateLineActions.removeItem(input);\n    };\n    const onSelectLine = (event: React.ChangeEvent<HTMLInputElement>) => {\n        orderTemplateLine.isChecked = !orderTemplateLine.isChecked;\n\n        input.handlers.onSelect(orderTemplateLine, event.target.checked);\n    };\n    const { ItemId, Name, PrimaryImageUrl } = product.ProductDetails;\n    const fallbackImage = getFallbackImageUrl(ItemId, context.actionContext.requestContext.apiSettings);\n\n    return {\n        selectLine: (\n            <input type='checkbox' className='bulk-selection-field' checked={orderTemplateLine.isChecked} aria-checked={orderTemplateLine.isChecked} onChange={onSelectLine}/>\n        ),\n        key: LineId!,\n        productImage: PrimaryImageUrl && Name && (\n            <div className='ms-order-template-table-line__product-image'>\n                {_renderProductImage(context, product.ProductDetails.Name!, PrimaryImageUrl, fallbackImage, imageSettings)}\n            </div>\n        ),\n        productInfo: _renderProductInfo(input),\n        productPrice: price && _renderPrice(input),\n        productNumber: product && <div className='ms-order-template-table-line__product-number'>{ItemId}</div>,\n        productUnitOfMeasure: price ? (\n            <div className='ms-order-template-table-line__product-unit-of-measure'>{UnitOfMeasure || price.UnitOfMeasure}</div>\n        ) : (\n            undefined\n        ),\n        productListId: LineId!,\n        removeButton: (\n            <Button\n                className='ms-order-template-table-line__product-remove-button'\n                onClick={removeItemAction}\n                title={removeFromOrderTemplateLinesText}\n            />\n        ),\n        productQuantityView: <div>{_generateQuantity(input, LineId!)}</div>,\n        productQuantity: quantity,\n        addToBagButton: (\n            <Button className='ms-order-template-table-line__product-add-button' onClick={addItemAction} title={addToBagButtonText} />\n        )\n    };\n};\n\nexport interface IOrderTemplateProductQuantityViewProps {\n    ContainerProps: INodeProps;\n    input: React.ReactNode;\n}\n\nconst _generateQuantity = (props: IOrderTemplateLineProps, itemKey: string): React.ReactNode => {\n    const { handlers, resources, quantity } = props;\n\n    const { onChangeQuantity } = handlers;\n    const onChange = (newValue: number) => {\n        if (onChangeQuantity) {\n            onChangeQuantity(itemKey, newValue);\n        }\n    };\n    return (\n        <OrderTemplateQuantity\n            currentCount={quantity}\n            onChange={onChange}\n            inputQuantityAriaLabel={resources.inputQuantityAriaLabel}\n        />\n    );\n};\n\nconst _renderProductImage = (\n    context: ICoreContext,\n    heading: string,\n    image?: string,\n    fallbackImage?: string,\n    imageSettings?: IImageSettings\n): JSX.Element | null => {\n    const defaultImageSettings: IImageSettings = {\n        viewports: {\n            xs: { q: `w=64&h=64&m=6`, w: 0, h: 0 },\n            lg: { q: `w=64&h=64&m=6`, w: 0, h: 0 },\n            xl: { q: `w=64&h=64&m=6`, w: 0, h: 0 }\n        },\n        lazyload: true\n    };\n\n    if (image) {\n        return (\n            <Image\n                className='ms-order-template-table-line__product-image'\n                altText={heading}\n                title={heading}\n                src={image}\n                fallBackSrc={fallbackImage}\n                gridSettings={context.request.gridSettings!}\n                imageSettings={imageSettings || defaultImageSettings}\n                loadFailureBehavior='empty'\n            />\n        );\n    }\n    return null;\n};\n\nconst _renderPrice = (props: IOrderTemplateLineProps): JSX.Element | null => {\n    const { price, context, moduleId, moduleTypeName, resources } = props;\n\n    if (price) {\n        return (\n            <PriceComponent\n                id={moduleId}\n                typeName={moduleTypeName}\n                data={{ price: price }}\n                className='ms-order-template-table-line__product-price'\n                freePriceText={resources.freePriceText}\n                originalPriceText={resources.originalPriceText}\n                currentPriceText={resources.currentPriceText}\n                context={context}\n            />\n        );\n    }\n    return null;\n};\n\nconst _renderProductDimensions = (props: IOrderTemplateLineProps): (string | undefined)[] => {\n    const { orderTemplateLine } = props;\n\n    if (!orderTemplateLine.fullProduct || !orderTemplateLine.fullProduct.ProductDetails.Dimensions) {\n        return [];\n    }\n\n    return orderTemplateLine.fullProduct.ProductDetails.Dimensions.map((dimension) => {\n        if (!dimension.DimensionValue || !dimension.DimensionValue.Value) {\n            return undefined;\n        }\n\n        return dimension.DimensionValue.Value;\n    });\n};\n\nconst _renderProductInfo = (props: IOrderTemplateLineProps): React.ReactNode | undefined => {\n    const { orderTemplateLine, productUrl } = props;\n    const { Name } = orderTemplateLine.fullProduct!.ProductDetails;\n\n    const dimensions = _renderProductDimensions(props);\n    if (!orderTemplateLine.fullProduct || !orderTemplateLine.fullProduct.ProductDetails.Dimensions) {\n        return [];\n    }\n\n    const productName = productUrl ? (\n        <a className='ms-order-template-table-line__product-info-name' href={productUrl}>\n            {Name}\n        </a>\n    ) : (\n        <div className='ms-order-template-table-line__product-info-name'>{Name}</div>\n    );\n\n    return (\n        <div className='ms-order-template-table-line__product-info'>\n            <div className='ms-order-template-table-line__product-info-name'>{productName}</div>\n            <div className='ms-order-template-table-line__product-info-dimension'>\n                {dimensions.length && dimensions.join(', ')}\n            </div>\n        </div>\n    );\n};\n"]}