{"version":3,"file":"add-line.js","sourceRoot":"./src/","sources":["modules/order-template/components/add-line/add-line.tsx"],"names":[],"mappings":"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","sourcesContent":["import {\n    addItemToOrderTemplate,\n    AddItemToOrderTemplateInput,\n    getDimensionsForSelectedVariant,\n    GetDimensionsForSelectedVariantInput,\n    getSelectedVariant,\n    SelectedVariantInput\n} from '@msdyn365-commerce-modules/retail-actions';\nimport { Button, Modal, ModalBody } from '@msdyn365-commerce-modules/utilities';\nimport { ProductDimensionFull } from '@msdyn365-commerce/commerce-entities';\nimport { ICoreContext, IImageSettings } from '@msdyn365-commerce/core';\nimport { ProductListLine, ProductSearchCriteria, ProductSearchResult } from '@msdyn365-commerce/retail-proxy';\nimport { searchByCriteriaAsync } from '@msdyn365-commerce/retail-proxy/dist/DataActions/ProductsDataActions.g';\nimport { SimpleProduct } from '@msdyn365-commerce/retail-proxy/dist/Entities/CommerceTypes.g';\nimport { get } from 'lodash';\nimport { computed } from 'mobx';\nimport React from 'react';\nimport { IProductConfigurationState, NotFoundComponent, ProductConfiguration, ProductList } from './';\n\nexport interface IAddLineToTemplateProps {\n    context: ICoreContext;\n    resources: IAddLineToTemplateResources;\n    orderTemplateId: string;\n    imageSettings?: IImageSettings;\n}\n\nexport interface IAddLineToTemplateResources {\n    addLineModalLinkText: string;\n    searchButtonAriaLabel: string;\n    searchInputAriaLabel: string;\n    searchModalPlaceholderText: string;\n    selectProductButtonText: string;\n    addItemToTemplateText: string;\n    addLineProductUnitPricePrefix: string;\n    backButtonText: string;\n    decrementButtonAriaLabel: string;\n    incrementButtonAriaLabel: string;\n    quantitySelectLabel: string;\n    addLineProductUnitOfMeasurePrefix: string;\n    notFoundSearchErrorNotice: string;\n    notFoundSearchErrorRedediation: string;\n    searchErrorMessage: string;\n    productDimensionTypeColor: string;\n    productDimensionTypeConfiguration: string;\n    productDimensionTypeSize: string;\n    productDimensionTypeStyle: string;\n    searchResultsCountVerbage: string;\n    searchResultsCountSubject: string;\n    addToTemplateConfirmation: string;\n    totalPriceLabel: string;\n    progressNotificationText: string;\n    addToTemplateError: string;\n}\n\nenum CONTENT {\n    Search,\n    ProductList,\n    ProductConfiguration,\n    NotFound,\n    Error,\n    Loading\n}\n\ninterface IAddLineToTemplateState {\n    isOpen: boolean;\n    query: string;\n    products: ProductSearchResult[];\n    content: number;\n    selectedProduct: SimpleProduct | null;\n    selectedProductDimensions?: ProductDimensionFull[];\n    selectedQuantity?: number;\n    reloadPage?: boolean;\n}\n\n/**\n * Add Lines to order template\n */\nexport class AddLineToTemplate extends React.Component<IAddLineToTemplateProps, IAddLineToTemplateState> {\n    public state: IAddLineToTemplateState = {\n        isOpen: false,\n        query: '',\n        products: [],\n        content: CONTENT.Search,\n        selectedProduct: null,\n    };\n    public defaultImageSettings: IImageSettings = {\n        viewports: {\n            xs: { q: `w=64&h=64&m=6`, w: 0, h: 0 },\n            lg: { q: `w=64&h=64&m=6`, w: 0, h: 0 },\n            xl: { q: `w=64&h=64&m=6`, w: 0, h: 0 }\n        },\n        lazyload: true\n    };\n    public searchTextInput: React.RefObject<HTMLInputElement> = React.createRef();// @TODO public/private\n\n    constructor(props: IAddLineToTemplateProps) {\n        super(props);\n    }\n\n    public onComponentDidMount(): void {\n        this.searchTextInput.current?.focus();\n    }\n\n    public onComponentDidUpdate(): void {\n        this.searchTextInput.current?.focus();\n    }\n\n    // @ts-ignore\n    @computed get showBackArrow(): boolean {\n        return this.state.content === CONTENT.ProductConfiguration;\n    }\n\n    public render(): JSX.Element {\n        const {\n            resources: { addLineModalLinkText, searchButtonAriaLabel, searchInputAriaLabel, searchModalPlaceholderText }\n         } = this.props;\n\n        const modalProps = {\n             ...this.props,\n            className: 'msc-add-line-to-template',\n            toggle: this._toggleModalHandler,\n            isOpen: this.state.isOpen\n        };\n\n        return (\n            <>\n                <Modal {...modalProps}>\n                    <div className='msc-modal__header'>\n                    {this.showBackArrow && <button\n                        type='button'\n                        className='msc-modal__back-button'\n                        aria-label='Back to search results'\n                        onClick={this._onBackButtonClickHandler}\n                    />}<h5 className='msc-modal__title'>{addLineModalLinkText}\n                    </h5><button\n                        type='button'\n                        className='msc-modal__close-button'\n                        aria-label='Close'\n                        onClick={this._toggleModalHandler}\n                    />\n                    </div>\n                    <ModalBody>\n                        <form\n                            className='msc-add-line-to-template__search-form'\n                            aria-label={searchButtonAriaLabel}\n                            name='add-line-to-template-search-form'\n                            role='form'\n                            autoComplete='off'\n                            onSubmit={this._onSearchSubmit}\n                        >\n                            <input\n                                type='text'\n                                autoFocus\n                                aria-label={searchInputAriaLabel}\n                                className={'msc-form-control msc-add-line-to-template__search-input'}\n                                placeholder={searchModalPlaceholderText}\n                                value={this.state.query}\n                                onChange={this._onInputChange}\n                                ref={this.searchTextInput}\n                            />\n                            <button\n                                className={'msc-add-line-to-template__search-button'}\n                                aria-label={'Add To Template Search Button'}\n                                color={'primary'}\n                            />\n                        </form>\n                        {this._renderContent()}\n                    </ModalBody>\n                </Modal>\n                <Button className={'msc-add-line-to-template__button'} aria-label={addLineModalLinkText} onClick={this._toggleModalHandler}><span/>{addLineModalLinkText}</Button>\n            </>\n        );\n    }\n\n    private _onSearchSubmit = (event: React.FormEvent): void => {\n        event.preventDefault();\n\n        const query = get(this, 'searchTextInput.current.value', null);\n\n        if (!query) {\n            return;\n        }\n\n        this.setState({\n            content: CONTENT.Loading,\n        });\n\n        this._getSearchResults(query)\n            .then(result => {\n                if (result.length === 0) {\n                    this.setState({\n                        content: CONTENT.NotFound,\n                    });\n                } else {\n                    this.setState({\n                        products: result,\n                        content: CONTENT.ProductList,\n                    });\n                }\n            })\n            .catch(error => {\n                this.setState({\n                    content: CONTENT.Error,\n                });\n            });\n    };\n\n    private _onQuantityChangeHandler = (event: React.ChangeEvent<HTMLInputElement>) => {\n        this.setState({\n            selectedQuantity: +event.target.value\n        });\n    }\n\n    private _onSelectItem = async (product: ProductSearchResult): Promise<void> => {\n        const {\n            actionContext,\n            request: { apiSettings: { channelId } }\n        } = this.props.context;\n        const varianteInput = new SelectedVariantInput(product.RecordId, channelId, []);\n        const productVariant = await getSelectedVariant(varianteInput, actionContext);\n\n        if (!productVariant) {\n            this.props.context.telemetry.error('Error retrieving product variant');\n            return;\n        }\n\n        const dimensions = await this._getProductDimensions(product as SimpleProduct);\n\n        this.setState({\n            selectedProductDimensions: dimensions,\n            content: CONTENT.ProductConfiguration,\n            selectedProduct: productVariant\n        });\n    };\n\n    private _onInputChange = (event: React.ChangeEvent<HTMLInputElement>): void => {\n        this.setState({\n            query: event.target.value\n        });\n    };\n\n    private _onBackButtonClickHandler = (): void => {\n        console.log('on back button');\n        this.setState({\n            content: CONTENT.ProductList\n        });\n    }\n\n    private _highlightSearchTerm = (name: string) => {\n        const parsedName = name && unescape(name.replace(new RegExp(this.state.query, 'i'), '<span>$&</span>'));\n        // tslint:disable-next-line:react-no-dangerous-html\n        return <div className='msc-add-line-to-template__product__name' dangerouslySetInnerHTML={{__html: parsedName || ''}}/>;\n    };\n\n    private _renderContent(): React.ReactNode | null {\n        switch (this.state.content) {\n            case CONTENT.ProductConfiguration:\n                const { selectedProduct, selectedProductDimensions } = this.state;\n                const viewProps = {\n                    ...this.props,\n                    imageSettings: this.props.imageSettings || this.defaultImageSettings,\n                    product: selectedProduct!,\n                    dimensions: selectedProductDimensions!,\n                    addToTemplateHandler: this._addItemToTemplateHandler,\n                    onQuantityChangeHandler: this._onQuantityChangeHandler,\n                    highlightSearchTerm: this._highlightSearchTerm\n                };\n                return <ProductConfiguration {...viewProps}/>;\n\n            case CONTENT.ProductList:\n                const productProps = {\n                    ...this.props,\n                    imageSettings: this.props.imageSettings || this.defaultImageSettings,\n                    clickHandler: this._onSelectItem,\n                    products: this.state.products,\n                    highlightSearchTerm: this._highlightSearchTerm\n                };\n\n                return <ProductList {...productProps}/>;\n\n            case CONTENT.Loading:\n                return <Loader msg={this.props.resources.progressNotificationText}/>;\n\n            case CONTENT.NotFound:\n                const { notFoundSearchErrorNotice, notFoundSearchErrorRedediation } = this.props.resources;\n\n                return <NotFoundComponent error={notFoundSearchErrorNotice} msg={notFoundSearchErrorRedediation}/>;\n\n            case CONTENT.Error:\n                return <div className='msc-alert-danger'>{this.props.resources.searchErrorMessage}</div>;\n\n            default:\n                return null;\n        }\n    }\n\n    // tslint:disable-next-line:no-any\n    private _addItemToTemplateHandler = async (config: IProductConfigurationState): Promise<ProductListLine> => {\n        const { orderTemplateId, context: { actionContext } } = this.props;\n        const input = new AddItemToOrderTemplateInput(\n            orderTemplateId,\n            config.product.RecordId,\n            config.quantity,\n            config.product.DefaultUnitOfMeasure || 'ea'\n        );\n\n        const result = await addItemToOrderTemplate(input, actionContext);\n\n        this.setState({\n            reloadPage: true\n        });\n\n        return result;\n    }\n\n    private _getSearchResults(searchText: string): Promise<ProductSearchResult[]> {\n        const {\n            context: {\n                actionContext,\n                request: {\n                    apiSettings: { channelId, catalogId }\n                }\n            }\n        } = this.props;\n        const searchCriteriaInput: ProductSearchCriteria = {};\n\n        searchCriteriaInput.Context = {\n            ChannelId: channelId,\n            CatalogId: catalogId\n        };\n        searchCriteriaInput.IncludeAttributes = true;\n        searchCriteriaInput.SearchCondition = searchText;\n\n        return searchByCriteriaAsync({ callerContext: actionContext }, searchCriteriaInput);\n    }\n\n    private async _getProductDimensions(product: SimpleProduct): Promise<ProductDimensionFull[]> {\n        const {\n            context: {\n                actionContext,\n                request: {\n                    apiSettings: { channelId }\n                }\n            }\n        } = this.props;\n        const id = product.MasterProductId ? product.MasterProductId : product.RecordId;\n\n        return getDimensionsForSelectedVariant(\n            new GetDimensionsForSelectedVariantInput(id, channelId, []),\n            actionContext\n        );\n    }\n\n    private _toggleModalHandler = () => {\n        this.setState({\n            isOpen: !this.state.isOpen,\n            content: CONTENT.Search\n        });\n\n        if (this.state.reloadPage) {\n            window.location.reload();\n            this.setState({\n                reloadPage: false\n            });\n        }\n\n    };\n}\n\nconst Loader = (props: { msg: string }) => (\n    <>\n        <div className='msc-add-line-to-template__loading__icon'/>\n        <div className='msc-add-line-to-template__loading__msg'>{props.msg}</div>\n    </>\n);\n"]}