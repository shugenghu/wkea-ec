{"version":3,"file":"product-configuration.js","sourceRoot":"./src/","sources":["modules/order-template/components/add-line/product-configuration.tsx"],"names":[],"mappings":"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","sourcesContent":["import {\n    getDimensionsForSelectedVariant,\n    GetDimensionsForSelectedVariantInput,\n    getFallbackImageUrl,\n    getPriceForSelectedVariant,\n    getProductAvailabilitiesForSelectedVariant,\n    getSelectedVariant,\n    IProductInventoryInformation,\n    PriceForSelectedVariantInput,\n    ProductAvailabilitiesForSelectedVariantInput,\n    SelectedVariantInput\n } from '@msdyn365-commerce-modules/retail-actions';\nimport { Button, ITelemetryContent } from '@msdyn365-commerce-modules/utilities';\nimport { ProductDimensionFull } from '@msdyn365-commerce/commerce-entities';\nimport { IImageSettings, Image } from '@msdyn365-commerce/core';\nimport { ProductDimensionValue, ProductListLine } from '@msdyn365-commerce/retail-proxy';\nimport { SimpleProduct } from '@msdyn365-commerce/retail-proxy/dist/Entities/CommerceTypes.g';\nimport classnames from 'classnames';\nimport React from 'react';\nimport { Dropdown, IAddLineToTemplateProps, IAddLineToTemplateResources, IDropdownItemProps, IDropdownOnSelection } from '.';\nimport OrderTemplateQuantity from '../common/order-template-quantity';\n\nexport interface IProductCnnfigurationProps extends IAddLineToTemplateProps {\n    product: SimpleProduct;\n    dimensions: ProductDimensionFull[];\n    imageSettings: IImageSettings;\n    telemetryContent?: ITelemetryContent;\n    addToTemplateHandler(params: IProductConfigurationState): Promise<ProductListLine>;\n    highlightSearchTerm(name: string): React.ReactNode;\n}\n\nexport interface IProductConfigurationState {\n    quantity: number;\n    unitPrice: number;\n    totalPrice: number;\n    product: SimpleProduct;\n    dimensions: ProductDimensionFull[];\n    selectedDimensions: {};\n    productAvailableQuantity?: IProductInventoryInformation;\n    buttonDisabled: boolean;\n    showAddConfirmation: boolean;\n    showAddError: boolean;\n    isBusy: boolean;\n}\n\n/**\n * Configure selected product for addition to order template\n */\nexport class ProductConfiguration extends React.Component<IProductCnnfigurationProps, IProductConfigurationState> {\n    private selectedDimensions: {};\n\n    constructor(props: IProductCnnfigurationProps) {\n        super(props);\n\n        this.state = {\n            quantity: 1,\n            unitPrice: props.product.Price,\n            totalPrice: props.product.Price,\n            product: props.product,\n            dimensions: props.dimensions,\n            selectedDimensions: {},\n            buttonDisabled: false,\n            showAddConfirmation: false,\n            showAddError: false\n        } as IProductConfigurationState;\n\n        this.selectedDimensions = props.dimensions.reduce((result, d) => {\n            result[`${d.DimensionTypeValue}`] = d.DimensionValues![0].Value;\n            return result;\n        },                                                {});\n    }\n\n    public render(): JSX.Element {\n        const {\n            context: {\n                actionContext: {\n                    requestContext: { apiSettings }\n                },\n                request: { gridSettings }\n             },\n             resources: {\n                addItemToTemplateText,\n                addLineProductUnitPricePrefix,\n                decrementButtonAriaLabel,\n                incrementButtonAriaLabel,\n                quantitySelectLabel,\n                addLineProductUnitOfMeasurePrefix,\n                addToTemplateConfirmation,\n                addToTemplateError,\n                totalPriceLabel\n            },\n            imageSettings,\n            highlightSearchTerm\n        } = this.props;\n        const { buttonDisabled, product, quantity, unitPrice, totalPrice, showAddConfirmation, showAddError } = this.state;\n\n        const confirmationMessage = addToTemplateConfirmation\n            .replace('{count}', this.state.quantity.toString())\n            .replace('{productAndDimensions}', `${this.state.product.Name}, ${Object.values(this.selectedDimensions).join(', ')}`);\n\n        return (\n            <>\n                <div className='msc-add-line-to-template__product-config'>\n                    <Image\n                        src={product?.PrimaryImageUrl || ''}\n                        fallBackSrc={\n                            getFallbackImageUrl(product?.ItemId, apiSettings) || ''\n                        }\n                        className={'thumbnail'}\n                        imageSettings={imageSettings}\n                        gridSettings={gridSettings!}\n                        loadFailureBehavior='empty'\n                    />\n                    <div className='msc-add-line-to-template__product__attributes'>\n                        <div>\n                            <div className='msc-add-line-to-template__product__id'>{product?.RecordId}</div>\n                            <div className='msc-add-line-to-template__product__name'>{highlightSearchTerm(product?.Name || '')}</div>\n                            <div className='msc-add-line-to-template__product__unit-price'>{addLineProductUnitPricePrefix} {this._formatPrice(unitPrice)}</div>\n                            <div className='msc-add-line-to-template__product__uom'>{addLineProductUnitOfMeasurePrefix} {product?.DefaultUnitOfMeasure}</div>\n                        </div>\n                        <div className='msc-add-line-to-template__product-config__dimensions'>\n                            {this._getDimensionsNodes()}\n                        </div>\n                    </div>\n                    <div>\n                        <div className='quantity-container'>\n                            <div>{quantitySelectLabel}</div>\n                            <OrderTemplateQuantity\n                                id={'msc-add-line-to-template__product-config__quantity'}\n                                currentCount={quantity}\n                                onChange={this._onQuantityChange}\n                                inputQuantityAriaLabel='Press to increment quantity by 1'\n                                max={Number.MAX_VALUE}\n                                decrementButtonAriaLabel={decrementButtonAriaLabel}\n                                incrementButtonAriaLabel={incrementButtonAriaLabel}\n                            />\n                        </div>\n                        <div className='msc-add-line-to-template__product__total-price'>{totalPriceLabel} {this._formatPrice(totalPrice)}</div>\n                    </div>\n                </div>\n                {showAddConfirmation && <div className='msc-add-line-to-template__add-success msc-alert-success msc-alert'><span aria-hidden='true'/>{confirmationMessage}</div>}\n                {showAddError && <div className='msc-add-line-to-template__add-error msc-alert-danger msc-alert'><span className='msi-exclamation-triangle' aria-hidden='true'/>{addToTemplateError}</div>}\n                    <Button\n                        className={classnames('msc-add-line-to-template__add-configured-product-button', { 'is-busy': this.state.isBusy })}\n                        aria-label={addItemToTemplateText}\n                        onClick={this._addToTemplateHandler}\n                        disabled={buttonDisabled}\n                    >\n                        {addItemToTemplateText}\n                    </Button>\n            </>\n        );\n    }\n\n    private _getDimensionsNodes(): React.ReactElement[] {\n        const { dimensions } = this.state;\n        const { resources } = this.props;\n\n        return dimensions?.map((dimension: ProductDimensionFull) => {\n            const { DimensionValues, DimensionTypeValue } = dimension;\n            const mapDimensions = (value: ProductDimensionValue): IDropdownItemProps => ({\n                id: value.RecordId,\n                value: value.Value || ''\n            });\n            const dropdownList: IDropdownItemProps[] = DimensionValues ? DimensionValues.map<IDropdownItemProps>(mapDimensions) : [];\n\n            return (\n                <div key={DimensionTypeValue}>\n                    <div>{this._getDropdownName(DimensionTypeValue, resources)}</div>\n                    <Dropdown\n                        dropdownId={DimensionTypeValue}\n                        dropdownName={this._getDropdownName(DimensionTypeValue, resources)}\n                        dropdownList={dropdownList}\n                        onChange={this._onDimensionChanged}\n                    />\n                </div>\n            );\n        });\n    }\n\n    private _addToTemplateHandler = async (event: React.MouseEvent<HTMLButtonElement, MouseEvent>) => {\n        // hide confirmation when adding multiple items\n        this.setState({\n            isBusy: true,\n            showAddConfirmation: false,\n            showAddError: false\n        });\n\n        this.props.addToTemplateHandler({...this.state})\n            .then(status => {\n                // validate against the existance of a ProductListId\n                if (status.ProductListId) {\n                    this.setState({\n                        isBusy: false,\n                        showAddConfirmation: true\n                    });\n                }\n            }).catch(error => {\n                this.setState({\n                    isBusy: false,\n                    showAddError: true\n                });\n                this.props.context.telemetry.error('Error adding item to order template');\n            });\n    };\n\n    private _onQuantityChange = (newValue: number) => {\n        this.setState({\n            quantity: newValue,\n            totalPrice: newValue * this.props.product.Price\n        });\n    }\n\n    // rehydrate the selected variants price, available dimensions & sizes\n    private _onDimensionChanged = async (selection: IDropdownOnSelection): Promise<void> => {\n        this.setState({\n            isBusy: false,\n            showAddConfirmation: false,\n            showAddError: false,\n            buttonDisabled: true\n        });\n\n        const { product, dimensions, context } = this.props;\n        const {\n            actionContext,\n            request: { apiSettings: { channelId } }\n        } = context;\n\n        const mappedDimensions = dimensions?.map(dimension => {\n            return {\n                DimensionTypeValue: dimension.DimensionTypeValue,\n                DimensionValue: dimension.DimensionValues?.find(value => value.RecordId === +selection.selectId),\n                ExtensionProperties: dimension.ExtensionProperties\n            };\n        }).filter(dimension => {\n            return dimension && dimension.DimensionValue;\n        });\n\n        mappedDimensions.forEach(dimension => {\n            this.state.selectedDimensions[dimension.DimensionTypeValue] = dimension.DimensionValue;\n        });\n\n        const variantProduct = (await getSelectedVariant(\n            new SelectedVariantInput(\n                product.MasterProductId ? product.MasterProductId : product.RecordId,\n                channelId,\n                mappedDimensions\n            ),\n            actionContext\n        ));\n\n        if (!variantProduct) {\n            this.props.context.telemetry.error(`Error retrieving variant product for product ${product.MasterProductId ? product.MasterProductId : product.RecordId}`);\n            return;\n        }\n\n        const dimensionInput = new GetDimensionsForSelectedVariantInput(\n            variantProduct.RecordId,\n            channelId,\n            mappedDimensions\n        );\n        const variantDimensions = await getDimensionsForSelectedVariant(dimensionInput, actionContext);\n\n        if (!variantDimensions) {\n            this.props.context.telemetry.error('Error retrieving dimensions for reconfigured product variant');\n            this.setState({\n                buttonDisabled: false\n            });\n            return;\n        }\n\n        const availabilityInput = new ProductAvailabilitiesForSelectedVariantInput(\n            product.MasterProductId ? product.MasterProductId : product.RecordId,\n            channelId\n        );\n        // @TODO sync UX quantity w/ actual availibility\n        const newAvailableQuantity = await getProductAvailabilitiesForSelectedVariant(availabilityInput, actionContext);\n        const priceInput = new PriceForSelectedVariantInput(product.RecordId, channelId);\n        const productPrice = await getPriceForSelectedVariant(priceInput, actionContext);\n\n        if (!productPrice) {\n            this.props.context.telemetry.error('Error retrieving price for reconfigured product variant');\n            this.setState({\n                buttonDisabled: false\n            });\n            return;\n        }\n\n        this.setState({\n            buttonDisabled: false,\n            productAvailableQuantity: newAvailableQuantity && newAvailableQuantity[0] || undefined,\n            unitPrice: +(productPrice.BasePrice || product.Price),\n            dimensions: variantDimensions,\n            product: variantProduct\n        });\n    }\n\n    private _getDropdownName = (dimensionType: number, resources: IAddLineToTemplateResources): string => {\n        switch (dimensionType) {\n            case 1: // Color\n                return resources.productDimensionTypeColor;\n            case 2: // Configuration\n                return resources.productDimensionTypeConfiguration;\n            case 3: // Size\n                return resources.productDimensionTypeSize;\n            case 4: // Style\n                return resources.productDimensionTypeStyle;\n            default:\n                return '';\n        }\n    };\n\n    private _formatPrice(price: number): string {\n        const {\n            context: {\n                cultureFormatter: {\n                    formatCurrency,\n                    // @ts-ignore\n                    currencyCode\n                }\n            }\n        } = this.props;\n\n        return formatCurrency(price.toFixed(2), currencyCode);\n    }\n}"]}