{"version":3,"file":"product-list.js","sourceRoot":"./src/","sources":["modules/order-template/components/add-line/product-list.tsx"],"names":[],"mappings":"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","sourcesContent":["import { getFallbackImageUrl } from '@msdyn365-commerce-modules/retail-actions';\nimport { Button } from '@msdyn365-commerce-modules/utilities';\nimport { IImageSettings, Image } from '@msdyn365-commerce/core';\nimport { ProductSearchResult } from '@msdyn365-commerce/retail-proxy';\nimport classnames from 'classnames';\nimport React, { useState } from 'react';\nimport { IAddLineToTemplateProps } from '.';\n\nexport interface IProductListProps extends IAddLineToTemplateProps {\n    products: ProductSearchResult[];\n    imageSettings: IImageSettings;\n    clickHandler(product: ProductSearchResult): Promise<void>;\n    highlightSearchTerm(name: string): React.ReactNode;\n}\n\nexport const ProductList = (props: IProductListProps) => {\n    const {\n        products,\n        context: {\n            actionContext: {\n                requestContext: { apiSettings }\n            },\n            request: {\n                gridSettings\n            },\n            cultureFormatter: {\n                formatCurrency,\n                // @ts-ignore\n                currencyCode\n            }\n        },\n        clickHandler,\n        highlightSearchTerm,\n        resources: { searchResultsCountVerbage, searchResultsCountSubject, selectProductButtonText },\n        imageSettings\n    } = props;\n    const resultCount = searchResultsCountVerbage\n        .replace('{count}', products.length.toString())\n        .replace('{subject}', `${searchResultsCountSubject}${(products.length > 1 ? 's' : '')}`);\n\n    return (\n        <>\n            <p className='msc-add-line-to-template__search-result-count'>{resultCount}</p>\n            <div className='msc-add-line-to-template__product-list-container'>\n                {products.map((product: ProductSearchResult, index: number) => {\n                    const { Price, ItemId, Name, PrimaryImageUrl, RecordId } = product;\n                    const price = formatCurrency(Price.toFixed(2), currencyCode);\n                    const fallBackImg = getFallbackImageUrl(ItemId, apiSettings) || '';\n\n                    return (\n                        <div key={`product-${index}`} className='msc-add-line-to-template__product'>\n                            <Image\n                                src={PrimaryImageUrl || ''}\n                                fallBackSrc={fallBackImg}\n                                className={'thumbnail'}\n                                gridSettings={gridSettings!}\n                                imageSettings={imageSettings}\n                                loadFailureBehavior='empty'\n                            />\n                            <div className='msc-add-line-to-template__product__attributes'>\n                                <div className='msc-add-line-to-template__product__id'>{RecordId}</div>\n                                {highlightSearchTerm(Name || '')}\n                            </div>\n                            <div className='msc-add-line-to-template__product-price-container'>\n                                <span>{price}</span>\n                                <ProductSelectButton product={product} buttonText={selectProductButtonText} clickHandler={clickHandler}/>\n                            </div>\n                        </div>\n                    );\n                })}\n            </div>\n        </>\n    );\n};\n\ninterface IProductSelectButton {\n    product: ProductSearchResult;\n    buttonText: string;\n    clickHandler(product: ProductSearchResult): Promise<void>;\n}\n\nexport const ProductSelectButton = (props: IProductSelectButton) => {\n    const [isBusy, setBusy] = useState(false);\n    const { product, buttonText, clickHandler } = props;\n    const getClickHandler = () => async () => {\n        setBusy(!isBusy);\n        await clickHandler(product);\n        setBusy(!isBusy);\n    };\n\n    return (\n        <Button\n            className={classnames('msc-add-line-to-template__product__select-button', { 'is-busy': isBusy })}\n            aria-label={buttonText}\n            onClick={getClickHandler()}\n        >\n            {buttonText}\n        </Button>\n    );\n};"]}