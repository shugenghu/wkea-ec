import { IProductInventoryInformation } from '@msdyn365-commerce-modules/retail-actions';
import { ITelemetryContent } from '@msdyn365-commerce-modules/utilities';
import { ProductDimensionFull } from '@msdyn365-commerce/commerce-entities';
import { IImageSettings } from '@msdyn365-commerce/core';
import { ProductListLine } from '@msdyn365-commerce/retail-proxy';
import { SimpleProduct } from '@msdyn365-commerce/retail-proxy/dist/Entities/CommerceTypes.g';
import React from 'react';
import { IAddLineToTemplateProps } from '.';
export interface IProductCnnfigurationProps extends IAddLineToTemplateProps {
    product: SimpleProduct;
    dimensions: ProductDimensionFull[];
    imageSettings: IImageSettings;
    telemetryContent?: ITelemetryContent;
    addToTemplateHandler(params: IProductConfigurationState): Promise<ProductListLine>;
    highlightSearchTerm(name: string): React.ReactNode;
}
export interface IProductConfigurationState {
    quantity: number;
    unitPrice: number;
    totalPrice: number;
    product: SimpleProduct;
    dimensions: ProductDimensionFull[];
    selectedDimensions: {};
    productAvailableQuantity?: IProductInventoryInformation;
    buttonDisabled: boolean;
    showAddConfirmation: boolean;
    showAddError: boolean;
    isBusy: boolean;
}
export declare class ProductConfiguration extends React.Component<IProductCnnfigurationProps, IProductConfigurationState> {
    private selectedDimensions;
    constructor(props: IProductCnnfigurationProps);
    render(): JSX.Element;
    private _getDimensionsNodes;
    private _addToTemplateHandler;
    private _onQuantityChange;
    private _onDimensionChanged;
    private _getDropdownName;
    private _formatPrice;
}
