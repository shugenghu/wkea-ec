import { ProductDimensionFull } from '@msdyn365-commerce/commerce-entities';
import { ICoreContext, IImageSettings } from '@msdyn365-commerce/core';
import { ProductSearchResult } from '@msdyn365-commerce/retail-proxy';
import { SimpleProduct } from '@msdyn365-commerce/retail-proxy/dist/Entities/CommerceTypes.g';
import React from 'react';
export interface IAddLineToTemplateProps {
    context: ICoreContext;
    resources: IAddLineToTemplateResources;
    orderTemplateId: string;
    imageSettings?: IImageSettings;
}
export interface IAddLineToTemplateResources {
    addLineModalLinkText: string;
    searchButtonAriaLabel: string;
    searchInputAriaLabel: string;
    searchModalPlaceholderText: string;
    selectProductButtonText: string;
    addItemToTemplateText: string;
    addLineProductUnitPricePrefix: string;
    backButtonText: string;
    decrementButtonAriaLabel: string;
    incrementButtonAriaLabel: string;
    quantitySelectLabel: string;
    addLineProductUnitOfMeasurePrefix: string;
    notFoundSearchErrorNotice: string;
    notFoundSearchErrorRedediation: string;
    searchErrorMessage: string;
    productDimensionTypeColor: string;
    productDimensionTypeConfiguration: string;
    productDimensionTypeSize: string;
    productDimensionTypeStyle: string;
    searchResultsCountVerbage: string;
    searchResultsCountSubject: string;
    addToTemplateConfirmation: string;
    totalPriceLabel: string;
    progressNotificationText: string;
    addToTemplateError: string;
}
interface IAddLineToTemplateState {
    isOpen: boolean;
    query: string;
    products: ProductSearchResult[];
    content: number;
    selectedProduct: SimpleProduct | null;
    selectedProductDimensions?: ProductDimensionFull[];
    selectedQuantity?: number;
    reloadPage?: boolean;
}
export declare class AddLineToTemplate extends React.Component<IAddLineToTemplateProps, IAddLineToTemplateState> {
    state: IAddLineToTemplateState;
    defaultImageSettings: IImageSettings;
    searchTextInput: React.RefObject<HTMLInputElement>;
    constructor(props: IAddLineToTemplateProps);
    onComponentDidMount(): void;
    onComponentDidUpdate(): void;
    get showBackArrow(): boolean;
    render(): JSX.Element;
    private _onSearchSubmit;
    private _onQuantityChangeHandler;
    private _onSelectItem;
    private _onInputChange;
    private _onBackButtonClickHandler;
    private _highlightSearchTerm;
    private _renderContent;
    private _addItemToTemplateHandler;
    private _getSearchResults;
    private _getProductDimensions;
    private _toggleModalHandler;
}
export {};
