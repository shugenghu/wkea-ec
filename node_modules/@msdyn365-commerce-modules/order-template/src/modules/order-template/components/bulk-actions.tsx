import { Button } from '@msdyn365-commerce-modules/utilities';
import * as React from 'react';
import { AddLineToTemplate } from '.';
import { IOrderTemplateData } from '../order-template.data';
import { IOrderTemplateProps } from '../order-template.props.autogenerated';

interface IOrderTemplateBulkActionsProps extends IOrderTemplateProps<IOrderTemplateData> {
    orderTemplateId: string;
    onAddSelectionToBag(event: React.MouseEvent<HTMLElement>): Promise<void>;
    onRemoveSelection(event: React.MouseEvent<HTMLElement>): void;
}

export const OrderTemplateBulkActions = (props: IOrderTemplateBulkActionsProps) => {
    const { addLineModalLinkText,
            searchButtonAriaLabel,
            searchInputAriaLabel,
            searchModalPlaceholderText,
            selectProductButtonText,
            addItemToTemplateText,
            addLineProductUnitPricePrefix,
            backButtonText,
            decrementButtonAriaLabel,
            incrementButtonAriaLabel,
            quantitySelectLabel,
            addLineProductUnitOfMeasurePrefix,
            notFoundSearchErrorNotice,
            notFoundSearchErrorRedediation,
            searchErrorMessage,
            productDimensionTypeColor,
            productDimensionTypeConfiguration,
            productDimensionTypeSize,
            productDimensionTypeStyle,
            addSelectedToBagButtonText,
            removeSelectedToBagButtonText,
            searchResultsCountVerbage,
            searchResultsCountSubject,
            addToTemplateConfirmation,
            totalPriceLabel,
            progressNotificationText,
            addToTemplateError
        } = props.resources;
    const addLineProps = {
        context: props.context,
        resources: {
            addLineModalLinkText,
            searchButtonAriaLabel,
            searchInputAriaLabel,
            searchModalPlaceholderText,
            selectProductButtonText,
            addItemToTemplateText,
            addLineProductUnitPricePrefix,
            backButtonText,
            decrementButtonAriaLabel,
            incrementButtonAriaLabel,
            quantitySelectLabel,
            addLineProductUnitOfMeasurePrefix,
            notFoundSearchErrorNotice,
            notFoundSearchErrorRedediation,
            searchErrorMessage,
            productDimensionTypeColor,
            productDimensionTypeConfiguration,
            productDimensionTypeSize,
            productDimensionTypeStyle,
            searchResultsCountVerbage,
            searchResultsCountSubject,
            addToTemplateConfirmation,
            totalPriceLabel,
            progressNotificationText,
            addToTemplateError
        },
        imageSettings: props.config.imageSettings,
        orderTemplateId: props.orderTemplateId
    };

    return (
        <>
            <AddLineToTemplate {...addLineProps}/>
            <Button
                onClick={props.onAddSelectionToBag}
                className='add-selected-to-bag'
                aria-label={addSelectedToBagButtonText}
            >
                <span/>{addSelectedToBagButtonText}
            </Button>
            <Button
                onClick={props.onRemoveSelection}
                className='remove-selected'
                aria-label={removeSelectedToBagButtonText}
            >
                <span/>{removeSelectedToBagButtonText}
            </Button>
        </>
    );
};