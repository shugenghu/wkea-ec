import * as React from 'react';
import { INodeProps, ITelemetryContent } from '@msdyn365-commerce-modules/utilities';
import { InputType } from '../business-organization-list';
export interface IBusinessForm {
    FormWrapper: INodeProps;
    message?: React.ReactNode;
    items: IBusinessFormItem[];
    buttons: React.ReactNode[];
    errorMessage: React.ReactNode[];
}
export interface IBusinessFormItem {
    wrapper: INodeProps;
    key: string;
    label: React.ReactNode;
    errorMessage: React.ReactNode;
    input: React.ReactNode;
}
export interface IBusinessFormInput {
    label: React.ReactNode;
    alert: React.ReactNode;
    input: React.ReactNode;
}
export interface IUserFormItem {
    id: string;
    type: InputType;
    label: string;
    value: string;
    maxChars?: string;
    isRequired: boolean;
    pattern?: string;
    isDisabled?: boolean;
    customClass?: string;
}
export interface IBusinessFormInputProps {
    id?: string;
    type: string;
    value?: string;
    pattern?: string;
    className: string;
    maxLength?: string;
    isRequired: boolean;
    isDisabled?: boolean;
    onChange?(event: React.ChangeEvent<HTMLInputElement | HTMLTextAreaElement>): void;
}
export declare const FormInput: React.FC<IBusinessFormInputProps>;
export interface IBusinessFormLabel {
    id: string;
    forId: string;
    className: string;
    text: string;
}
export declare const FormLabel: React.FC<IBusinessFormLabel>;
export interface IBusinessFormButton {
    id?: string;
    className: string;
    text: string;
    ariaLabel: string;
    disabled?: boolean;
    telemetryContent?: ITelemetryContent;
    onClick?(event: React.MouseEvent<HTMLElement>): void;
}
export declare const FormButton: React.FC<IBusinessFormButton>;
export interface IBusinessFormErrorProps {
    id?: string;
    className: string;
    type?: string;
    message?: string;
}
export declare const FormFieldError: React.FC<IBusinessFormErrorProps>;
