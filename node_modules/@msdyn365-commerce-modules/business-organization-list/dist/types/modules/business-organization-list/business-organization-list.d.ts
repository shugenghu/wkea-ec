import * as React from 'react';
import { IModuleProps, INodeProps } from '@msdyn365-commerce-modules/utilities';
import { BusinessPartnerUser } from '@msdyn365-commerce/retail-proxy';
import { IBusinessOrganizationListData } from './business-organization-list.data';
import { IBusinessOrganizationListProps, IBusinessOrganizationListResources } from './business-organization-list.props.autogenerated';
import { IBusinessFormItem, IUserFormItem } from './components';
export interface IBusinessOrganizationListViewProps extends IBusinessOrganizationListProps<IBusinessOrganizationListData> {
    OrganizationUserList: IModuleProps;
    moduleContainer: INodeProps;
    heading: React.ReactNode;
    noUsersText?: string;
    addUserButton?: React.ReactNode;
    search?: React.ReactNode;
    organizationListTable: React.ReactNode;
    form?: IFormViewProps;
    formItems?: IUserFormItem[];
    formType: FormType;
    deleteUserForm?: React.ReactNode;
    viewUserDetails?: React.ReactNode;
    modalHeading?: React.ReactNode;
    modalState?: boolean;
    toggleModal?(): void;
}
export interface IBusinessOrganizationListState {
    isReady: boolean;
    formItems: IUserFormItem[];
    isFormActive: boolean;
    formType: FormType;
    selectedUserData: BusinessPartnerUser;
    refresh: boolean;
    isModalOpen: boolean;
    hasFormError: boolean;
    hasActionError: boolean;
}
export declare enum FormType {
    None = "NONE",
    Edit = "EDIT",
    Remove = "REMOVE",
    View = "VIEW",
    Add = "ADD"
}
export declare enum InputType {
    Text = "text",
    Email = "email"
}
export declare enum InputID {
    FirstName = "FirstName",
    LastName = "LastName",
    Email = "Email",
    SpendingLimit = "SpendingLimit",
    Status = "Status",
    FullName = "Name"
}
export interface IFormViewProps {
    modalClassName: string;
    FormWrapper: INodeProps;
    modalHeading?: string;
    modalDescription?: React.ReactNode;
    inputs?: IBusinessFormItem[];
    selectedUser?: BusinessPartnerUser;
    buttons?: React.ReactNode[];
    errorMessage?: React.ReactNode[];
    resources: IBusinessOrganizationListResources;
    toggle?(): void;
}
export declare const renderInputSection: (inputs: IUserFormItem[], className: string, onInputChange: (event: React.ChangeEvent<HTMLInputElement | HTMLTextAreaElement>) => void) => IBusinessFormItem[];
declare class BusinessOrganizationList extends React.Component<IBusinessOrganizationListProps<IBusinessOrganizationListData>, IBusinessOrganizationListState> {
    BusinessFormDefaultInputs: IUserFormItem[];
    private moduleClassName;
    private mobileExcludedColumns;
    private _viewport;
    get isMobile(): boolean;
    private telemetryContent?;
    private payLoad;
    constructor(props: IBusinessOrganizationListProps<IBusinessOrganizationListData>);
    componentDidMount(): void;
    componentWillUnmount(): void;
    render(): JSX.Element | null;
    private _createTableProps;
    private _createTableItems;
    private _toggleModal;
    private _handleAddUserButtonClicked;
    private _handleAddEditFormSaveButton;
    private _createBusinessPartner;
    private _handleFormCancelButton;
    private _handleEditIcon;
    private _handleDeleteIcon;
    private _handleViewDetails;
    private _handleRemoveUserButton;
    private _renderUserDetails;
    private _renderUserForm;
    private _onInputChange;
    private _isFormReady;
    private _formatPrice;
    private _getCurrentUrl;
    private _updateViewport;
    private _getViewport;
}
export default BusinessOrganizationList;
