{"version":3,"file":"business-organization-list.test.js","sourceRoot":"./src/","sources":["modules/business-organization-list/tests/business-organization-list.test.tsx"],"names":[],"mappings":"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","sourcesContent":["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\n/// <reference types=\"jest\" />\nimport * as React from 'react';\n\nimport * as RetailActions from '@msdyn365-commerce-modules/retail-actions';\nimport { buildHydratedMockActionContext, buildMockModuleProps} from '@msdyn365-commerce/core';\nimport { BusinessPartnerUser } from '@msdyn365-commerce/retail-proxy';\nimport { mount, render } from 'enzyme';\nimport BusinessOrganizationList, { FormType } from '../business-organization-list';\nimport { IBusinessOrganizationListData } from '../business-organization-list.data';\nimport { HeadingTag, IBusinessOrganizationListConfig, IBusinessOrganizationListProps, IBusinessOrganizationListResources } from '../business-organization-list.props.autogenerated';\nimport BusinessOrganizationListView from '../business-organization-list.view';\n\nconst mockUser1: BusinessPartnerUser = {\n  Email: 'test@microsoft.com',\n  BusinessPartnerId: '00000',\n  FirstName: 'First',\n  LastName: 'Last',\n  StatusValue: 0\n};\n\nconst mockUser2: BusinessPartnerUser = {\n  Email: 'test2@microsoft.com',\n  BusinessPartnerId: '00000',\n  FirstName: 'Test2',\n  LastName: 'Test2',\n  StatusValue: 1\n};\n\nconst mockUser3: BusinessPartnerUser = {\n  Email: 'test3@microsoft.com',\n  BusinessPartnerId: '00000',\n  FirstName: 'Test3',\n  LastName: 'Test3',\n  StatusValue: 2\n};\n\nconst mockData: IBusinessOrganizationListData = {\n  // @ts-ignore partial mock\n  users: {\n    status: 'SUCCESS',\n    result: [ mockUser1, mockUser2, mockUser3 ]\n  }\n};\n\nconst mockConfig: IBusinessOrganizationListConfig = {\n  heading:{\n    tag: HeadingTag.h2,\n    text: 'Organization list',\n  },\n  tableSort: true,\n  showPagination: true,\n  paginationItemPerPage: 10\n};\n\nconst mockResources:IBusinessOrganizationListResources = {\n  addUserButtonText: 'Add a user',\n  firstNameLabelText: 'First name',\n  firstNameMaxLength: '20',\n  lastNameLabelText: 'Last name',\n  lastNameMaxLength: '20',\n  emailAddressLabelText: 'Email address',\n  spendingLimitLabelText: 'Spending limit',\n  saveButtonText: 'Save',\n  saveButtonArialabel: 'Save',\n  cancelButtonText: 'Cancel',\n  cancelButtonArialabel: 'Cancel',\n  removeUserButtonText: 'Yes, remove',\n  removeUserButtonArialabel: 'Remove User',\n  cancelRemoveUserButtonText: 'No',\n  cancelRemoveUserButtonArialabel: 'Cancel remove User',\n  editUserFormHeadingText: 'Edit user',\n  addUserFormHeadingText: 'Add user',\n  requiredFieldMissingSummaryError: 'A required field is missing. Please fill out all required fields and try again.',\n  fieldIncorrectErrorText: 'One or more fields are filled out incorrectly. Please check your entries and try again.',\n  actionErrorText: 'Sorry we are unable to perform that action at this moment, please try again later.',\n  paginationPreviousButtonText: 'Previous',\n  paginationAriaLabel : 'Text for pagination aria label',\n  paginationNextButtonText: 'Next',\n  editButtonText: 'Edit',\n  deleteButtonText: 'Delete',\n  actionButtonText: 'Actions',\n  activeStatusText: 'Active',\n  pendingStatusText: 'Pending',\n  removedStatusText: 'Removed',\n  removeModalHeaderText: 'Remove a user',\n  removeModalDescription: 'Are you sure you want to remove the user from the organization user list?',\n  viewModalHeaderText: 'User details',\n  emptyListMessage: 'No users',\n  loadingMessage: 'Loading...',\n  errorGettingUsersMessage: 'Sorry we are unable to load your organization at this moment, please try again later.',\n  errorUpdatingUsersMessage: 'Sorry we are unable to edit/remove this user, please try again later.',\n  allFieldsRequiredMessage: '*All Fields are required to add a user',\n  tableNameHeadingText: 'User name',\n  tableEmailHeadingText: 'Email',\n  tableStatusHeadingText: 'Status',\n  tableSpendingLimitHeadingText: 'Spending limit'\n};\n\nconst mockActions = {};\n\nconst mockActionContext = buildHydratedMockActionContext();\n// @ts-ignore\nconst mockContext: ICoreContext<{}> = {\n  actionContext: mockActionContext,\n  request: {\n    query: {\n      skip: 0\n    }\n  }\n};\n\ndescribe('BusinessOrganizationList', () => {\n  let moduleProps: IBusinessOrganizationListProps<IBusinessOrganizationListData>;\n\n  beforeAll(() => {\n    moduleProps =  { ...buildMockModuleProps(mockData, mockActions, mockConfig, mockContext) as IBusinessOrganizationListProps<IBusinessOrganizationListData>,\n      resources: mockResources,\n      // @ts-ignore\n      renderView: BusinessOrganizationListView\n    };\n  });\n\n  it('renders correctly', () => {\n    const component = render(<BusinessOrganizationList {...moduleProps}/>);\n    expect(component).toMatchSnapshot();\n  });\n\n  it('renders correctly when data call fails', () => {\n    const failedData = {\n      // @ts-ignore partial mock\n      users: {\n        status: 'FAILED',\n        result: {}\n      }\n    };\n    const failedDataModuleProps =  { ...buildMockModuleProps(failedData, mockActions, mockConfig) as IBusinessOrganizationListProps<IBusinessOrganizationListData>,\n      resources: mockResources,\n      // @ts-ignore\n      renderView: BusinessOrganizationListView\n    };\n\n    // @ts-ignore\n    const component = mount(<BusinessOrganizationList {...failedDataModuleProps}/>);\n    const errorMessage = component.find('.ms-business-organization-list__error-message');\n    expect(errorMessage).toBeDefined();\n  });\n\n  it('renders correctly when users list is empty', () => {\n    const emptyData = {\n      // @ts-ignore partial mock\n      users: {\n        status: 'SUCCESS',\n        result: [] as BusinessPartnerUser[]\n      }\n    };\n    const emptyDataModuleProps =  { ...buildMockModuleProps(emptyData, mockActions, mockConfig) as IBusinessOrganizationListProps<IBusinessOrganizationListData>,\n      resources: mockResources,\n      // @ts-ignore\n      renderView: BusinessOrganizationListView\n    };\n\n    // @ts-ignore\n    const component = mount(<BusinessOrganizationList {...emptyDataModuleProps}/>);\n    const errorMessage = component.find('.ms-business-organization-list__error-message');\n    expect(errorMessage).toBeDefined();\n  });\n\n  it('renders correctly when users list is loading', () => {\n    const loadingData = {\n      // @ts-ignore partial mock\n      users: {\n        status: 'LOADING',\n        result: {}\n      }\n    };\n    const loadingDataModuleProps =  { ...buildMockModuleProps(loadingData, mockActions, mockConfig) as IBusinessOrganizationListProps<IBusinessOrganizationListData>,\n      resources: mockResources,\n      // @ts-ignore\n      renderView: BusinessOrganizationListView\n    };\n\n    // @ts-ignore\n    const component = mount(<BusinessOrganizationList {...loadingDataModuleProps}/>);\n    const errorMessage = component.find('.ms-business-organization-list__error-message');\n    expect(errorMessage).toBeDefined();\n  });\n\n  it('add user form renders correctly', () => {\n    const component = mount(<BusinessOrganizationList {...moduleProps}/>);\n    expect(component.state('formType')).toBe(FormType.None);\n\n    // click on addUser button\n    const addUserButton = component.find('.ms-business-organization-list__add-user-button').first();\n    addUserButton.simulate('click');\n\n    // check that content and type is correctly set\n    expect(component.state('formType')).toBe(FormType.Add);\n    const form = component.find('.ms-business-organization-list__modal .msc-modal__content') as React.ReactNode;\n    const modalContent = render(form as React.ReactElement);\n    expect(modalContent).toMatchSnapshot();\n  });\n\n  it('add user form submits correctly', () => {\n    // @ts-ignore\n    jest.spyOn(RetailActions, 'addOrganizationUser').mockImplementation(() => Promise.resolve({}));\n\n    const component = mount(<BusinessOrganizationList {...moduleProps}/>);\n    expect(component.state('formType')).toBe(FormType.None);\n\n    // click on addUser button\n    const addUserButton = component.find('.ms-business-organization-list__add-user-button').first();\n    addUserButton.simulate('click');\n\n    // check formType\n    expect(component.state('formType')).toBe(FormType.Add);\n    const form = component.find('.ms-business-organization-list__modal .msc-modal__content');\n\n    // add valid inputs\n    const inputFields  = form.find('input');\n    inputFields.forEach(input => {\n      const elementId = input.props().id;\n      switch(elementId) {\n        case 'Email':\n            input.simulate('change', { target: { value: 'test@email.com', id: `${elementId}` }});\n            break;\n        case 'SpendingLimit':\n            input.simulate('change', { target: { value: '100', id: `${elementId}` }});\n            break;\n        default:\n            input.simulate('change', { target: { value: 'test value', id: `${elementId}` }});\n      }\n    });\n    expect(component.state('isReady')).toBeTruthy();\n\n    // click submit button\n    const submitButton = component.find('.ms-business-organization-list__form-save').first();\n    submitButton.simulate('click');\n  });\n\n  it('edit user form renders correctly', () => {\n    const component = mount(<BusinessOrganizationList {...moduleProps}/>);\n    expect(component.state('formType')).toBe(FormType.None);\n\n    // click on editUser button\n    const editUserButton = component.find('.ms-table__row-links-edit').first();\n    editUserButton.simulate('click');\n\n    // check that content and type is correctly set\n    expect(component.state('formType')).toBe(FormType.Edit);\n    const form = component.find('.ms-business-organization-list__modal .msc-modal__content') as React.ReactNode;\n    const modalContent = render(form as React.ReactElement);\n    expect(modalContent).toMatchSnapshot();\n  });\n\n  it('edit user form submits correctly', () => {\n    // @ts-ignore\n    jest.spyOn(RetailActions, 'editOrganizationUser').mockImplementation(() => Promise.resolve({}));\n\n    const component = mount(<BusinessOrganizationList {...moduleProps}/>);\n    expect(component.state('formType')).toBe(FormType.None);\n\n    // click on editUser button\n    const editUserButton = component.find('.ms-table__row-links-edit').first();\n    editUserButton.simulate('click');\n\n    // check formType\n    expect(component.state('formType')).toBe(FormType.Edit);\n    const form = component.find('.ms-business-organization-list__modal .msc-modal__content');\n\n    // add valid inputs\n    const inputFields  = form.find('input');\n    inputFields.forEach(input => {\n      const elementId = input.props().id;\n      switch(elementId) {\n        case 'Email':\n            break;\n        case 'SpendingLimit':\n            input.simulate('change', { target: { value: '100', id: `${elementId}` }});\n            break;\n        default:\n            input.simulate('change', { target: { value: 'test value', id: `${elementId}` }});\n      }\n    });\n    expect(component.state('isReady')).toBeTruthy();\n\n    // click submit button\n    const submitButton = component.find('.ms-business-organization-list__form-save').first();\n    submitButton.simulate('click');\n  });\n\n  it('delete user renders correctly', () => {\n    const component = mount(<BusinessOrganizationList {...moduleProps}/>);\n    expect(component.state('formType')).toBe(FormType.None);\n\n    // click on editUser button\n    const deleteUserButton = component.find('.ms-table__row-links-delete').first();\n    deleteUserButton.simulate('click');\n\n    // check that content and type is correctly set\n    expect(component.state('formType')).toBe(FormType.Remove);\n    const form = component.find('.ms-business-organization-list__modal .msc-modal__content');\n    expect(form).toMatchSnapshot();\n  });\n\n  it('delete user submits correctly', () => {\n    // @ts-ignore\n    jest.spyOn(RetailActions, 'deleteOrganizationUser').mockImplementation(() => Promise.resolve({}));\n\n    const component = mount(<BusinessOrganizationList {...moduleProps}/>);\n    expect(component.state('formType')).toBe(FormType.None);\n\n    // click on editUser button\n    const deleteUserButton = component.find('.ms-table__row-links-delete').first();\n    deleteUserButton.simulate('click');\n\n    // click submit button\n    const submitButton = component.find('.ms-business-organization-list__form-remove-user-button').first();\n    submitButton.simulate('click');\n  });\n\n  it('view user details renders correctly', () => {\n    // @ts-ignore\n    const mockMobileContext: ICoreContext<{}> = {\n      actionContext: mockActionContext,\n      request: {\n        device: {\n          Type: 'Mobile'\n        }\n      }\n    };\n\n    const mobileModuleProps =  { ...buildMockModuleProps(mockData, mockActions, mockConfig, mockMobileContext) as IBusinessOrganizationListProps<IBusinessOrganizationListData>,\n      resources: mockResources,\n      // @ts-ignore\n      renderView: BusinessOrganizationListView\n    } as IBusinessOrganizationListProps<IBusinessOrganizationListData>;\n\n    const component = mount(<BusinessOrganizationList {...mobileModuleProps}/>);\n    const row = component.find('.ms-table__row').first();\n    expect(row).toMatchSnapshot();\n    const toggleButton = row.find('.ms-table__row-links-toggle').first();\n    toggleButton.simulate('click', { event: {\n      target: { 'data-type': 'row-0'}}\n    });\n    expect(row).toMatchSnapshot();\n    const viewButton = component.find('.ms-table__row-links-view').first();\n    viewButton.simulate('click');\n    const cancelButton = component.find('.ms-business-organization-list__form-cancel').first();\n    cancelButton.simulate('click');\n  });\n});\n"]}