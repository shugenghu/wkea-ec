{"version":3,"file":"business-organization-list.view.js","sourceRoot":"./src/","sources":["modules/business-organization-list/business-organization-list.view.tsx"],"names":[],"mappings":"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","sourcesContent":["/*!\n * Copyright (c) Microsoft Corporation.\n * All rights reserved. See LICENSE in the project root for license information.\n */\nimport * as React from 'react';\n\nimport { Modal, ModalBody, ModalFooter, ModalHeader, Module, Node } from '@msdyn365-commerce-modules/utilities';\nimport { IBusinessOrganizationListViewProps, IFormViewProps, InputID  } from './business-organization-list';\nimport { IBusinessFormItem} from './components/small-components';\n\nconst BusinessFormItem: React.FC<IBusinessFormItem> = ({\n    wrapper,\n    label,\n    errorMessage,\n    input\n}) => {\n    return (\n        <Node {...wrapper}>\n            {label}\n            {errorMessage}\n            {input}\n        </Node>\n    );\n};\n\nconst BusinessUserForm: React.FC<IFormViewProps> = (props: IFormViewProps) => {\n    const { modalClassName, FormWrapper, modalHeading, modalDescription, inputs, buttons, errorMessage, toggle } = props;\n\n    const modalBody = (\n        <>\n            {modalDescription}\n            <Node {...FormWrapper}>\n                {inputs && inputs.map((item: IBusinessFormItem) => {\n                    return (\n                        <BusinessFormItem key={item.key} {...item} />\n                    );\n                })}\n                {errorMessage && errorMessage.map((error: React.ReactNode, index: number) => {\n                    return (\n                        <React.Fragment key={index}>\n                            {error}\n                        </React.Fragment>\n                    );\n                })}\n            </Node>\n        </>\n\n    );\n\n    const modalFooter = buttons && buttons.map((button: React.ReactNode, index: number) => {\n        return (\n            <React.Fragment key={index}>\n                {button}\n            </React.Fragment>\n        );\n    });\n\n    return _renderModal(modalClassName, true, modalHeading, modalBody, modalFooter, toggle);\n};\n\nconst BusinessUserDetails: React.FC<IFormViewProps> = (props: IFormViewProps) => {\n    const { modalClassName, FormWrapper, modalHeading, modalDescription, selectedUser, buttons, errorMessage, resources, toggle } = props;\n    let modalBody = null;\n\n    if (!selectedUser) {\n        modalBody = errorMessage;\n    } else {\n        const { FirstName, LastName } = selectedUser;\n        const userFullName = `${FirstName} ${LastName}`;\n\n        modalBody = (\n            <>\n                { modalDescription }\n                <ul className={`${FormWrapper.className}-list`}>\n                    <li className={`${FormWrapper.className}-list-item-name`}>{userFullName}</li>\n                    { Object.keys(selectedUser).map((data)=> {\n                        if (data === InputID.FirstName || data === InputID.LastName) {\n                            return null;\n                        } else {\n                            const label = resources[`table${data}HeadingText`] || data;\n                            return <li className={`${FormWrapper.className}-list-item`}>{label}: {selectedUser[data]}</li>;\n                        }\n                    })}\n                </ul>\n            </>\n        );\n    }\n\n    const modalFooter = buttons && buttons.map((button: React.ReactNode, index: number) => {\n        return (\n            <React.Fragment key={index}>\n                {button}\n            </React.Fragment>\n        );\n    });\n\n    return _renderModal(modalClassName, true, modalHeading, modalBody, modalFooter, toggle);\n};\n\nconst _getForm = (type: string, formProps: IFormViewProps, toggleModal?: () => void) => {\n    switch(type) {\n        case 'ADD':\n        case 'EDIT':\n            return <BusinessUserForm {...formProps} toggle={toggleModal}/>;\n        case 'VIEW':\n        case 'REMOVE':\n            return <BusinessUserDetails {...formProps} toggle={toggleModal}/>;\n        default:\n            return null;\n    }\n};\n\nconst _renderModal = (className: string, isModalOpen: boolean, headingSection: React.ReactNode, bodySection: React.ReactNode, footerSection: React.ReactNode, toggleModal?: () => void) => {\n    return (\n        <Modal\n            wrapClassName={className}\n            autoFocus={true}\n            fade={false}\n            applicationNode={'renderPage'}\n            isOpen={isModalOpen}\n            toggle ={toggleModal}\n        >\n            <ModalHeader toggle={toggleModal}>\n                {headingSection}\n            </ModalHeader>\n            <ModalBody>\n                {bodySection}\n            </ModalBody>\n            <ModalFooter>\n                {footerSection}\n            </ModalFooter>\n        </Modal>\n    );\n};\n\nconst BusinessOrganizationList: React.FC<IBusinessOrganizationListViewProps> = props => {\n    const { OrganizationUserList, moduleContainer, heading, noUsersText, addUserButton, organizationListTable, form, formType, toggleModal } = props;\n\n    if (noUsersText) {\n        return (\n            <Module {...OrganizationUserList}>\n                <Node {...moduleContainer}>\n                    {heading}\n                    {addUserButton}\n                    {noUsersText}\n                </Node>\n            </Module>\n        );\n    }\n\n    return (\n        <Module {...OrganizationUserList}>\n            <Node {...moduleContainer}>\n                {heading}\n                {addUserButton}\n                {organizationListTable}\n            </Node>\n            { form && _getForm(formType, form, toggleModal) }\n       </Module>\n    );\n};\n\nexport default BusinessOrganizationList;"]}