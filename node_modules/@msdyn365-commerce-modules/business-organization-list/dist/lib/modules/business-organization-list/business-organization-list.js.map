{"version":3,"file":"business-organization-list.js","sourceRoot":"./src/","sources":["modules/business-organization-list/business-organization-list.tsx"],"names":[],"mappings":"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","sourcesContent":["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport * as React from 'react';\n\nimport { addOrganizationUser, AddOrganizationUserInput, deleteOrganizationUser, DeleteOrganizationUserInput, editOrganizationUser, EditOrganizationUserInput } from '@msdyn365-commerce-modules/retail-actions';\nimport { Button, getPayloadObject, getTelemetryAttributes, getTelemetryObject, Heading, IDataTableProps, IHeadingsProperty, IModuleProps, INodeProps, IPayLoad,\n     ITableItemProps, ITableRowProps, ITelemetryContent, Table, TableDataType, TelemetryConstant } from '@msdyn365-commerce-modules/utilities';\nimport MsDyn365, { IRequestContext } from '@msdyn365-commerce/core';\nimport { BusinessPartnerUser } from '@msdyn365-commerce/retail-proxy';\nimport classnames from 'classnames';\nimport { computed, observable } from 'mobx';\nimport { observer } from 'mobx-react';\nimport { IBusinessOrganizationListData } from './business-organization-list.data';\nimport { IBusinessOrganizationListProps, IBusinessOrganizationListResources } from './business-organization-list.props.autogenerated';\nimport { FormButton, FormFieldError, FormInput, FormLabel, IBusinessFormItem, IUserFormItem } from './components';\n\nexport interface IBusinessOrganizationListViewProps extends IBusinessOrganizationListProps<IBusinessOrganizationListData> {\n    OrganizationUserList: IModuleProps;\n    moduleContainer: INodeProps;\n    heading: React.ReactNode;\n    noUsersText?: string;\n    addUserButton?: React.ReactNode;\n    search?: React.ReactNode;\n    organizationListTable: React.ReactNode;\n    form?: IFormViewProps;\n    formItems?: IUserFormItem[];\n    formType: FormType;\n    deleteUserForm?: React.ReactNode;\n    viewUserDetails?: React.ReactNode;\n    modalHeading?: React.ReactNode;\n    modalState?: boolean;\n    toggleModal?(): void;\n}\n\nexport interface IBusinessOrganizationListState {\n    isReady: boolean;\n    formItems: IUserFormItem[];\n    isFormActive: boolean;\n    formType: FormType;\n    selectedUserData: BusinessPartnerUser;\n    refresh: boolean;\n    isModalOpen: boolean;\n    hasFormError: boolean;\n    hasActionError: boolean;\n}\n\ntype GridSize = 'xs' | 'sm' | 'md' | 'lg' | 'xl';\n\nexport enum FormType {\n    None = 'NONE',\n    Edit = 'EDIT',\n    Remove = 'REMOVE',\n    View = 'VIEW',\n    Add = 'ADD'\n}\n\nexport enum InputType {\n    Text = 'text',\n    Email = 'email'\n}\n\nexport enum InputID {\n    FirstName = 'FirstName',\n    LastName = 'LastName',\n    Email = 'Email',\n    SpendingLimit = 'SpendingLimit',\n    Status = 'Status',\n    FullName = 'Name'\n}\n\nexport interface IFormViewProps {\n    modalClassName: string;\n    FormWrapper: INodeProps;\n    modalHeading?: string;\n    modalDescription?: React.ReactNode;\n    inputs?: IBusinessFormItem[];\n    selectedUser?: BusinessPartnerUser;\n    buttons?: React.ReactNode[];\n    errorMessage?: React.ReactNode[];\n    resources: IBusinessOrganizationListResources;\n    toggle?(): void;\n}\n\nexport const renderInputSection = (inputs: IUserFormItem[], className: string, onInputChange: (event: React.ChangeEvent<HTMLInputElement | HTMLTextAreaElement>) => void): IBusinessFormItem[] => {\n    return inputs.map((element) => {\n        const { customClass, id, type, label, maxChars, isRequired, pattern, value, isDisabled } = element;\n\n        return {\n            wrapper: {\n                className: classnames(className, id, customClass)\n            },\n            key: id,\n            label: <FormLabel { ...{ id, forId: id, className, text: label }} />,\n            errorMessage: <FormFieldError { ...{ className: className, type: 'item' }} />,\n            input: (\n                <FormInput\n                    {\n                    ...{\n                            id: id,\n                            type: type,\n                            maxLength: maxChars,\n                            pattern: pattern,\n                            value: value,\n                            className: className,\n                            isRequired: isRequired === undefined ? false : isRequired,\n                            onChange: onInputChange,\n                            isDisabled: isDisabled\n                        }\n                    }\n                />\n            )\n        };\n    });\n};\n\n/**\n *\n * BusinessOrganizationList component\n * @extends {React.PureComponent<IBusinessOrganizationListProps<IBusinessOrganizationListData>>}\n */\n@observer\nclass BusinessOrganizationList extends React.Component<IBusinessOrganizationListProps<IBusinessOrganizationListData>,IBusinessOrganizationListState> {\n    public BusinessFormDefaultInputs: IUserFormItem[] = [\n        {\n            id: InputID.FirstName,\n            type: InputType.Text,\n            label: this.props.resources.firstNameLabelText,\n            value: '',\n            isRequired: true,\n            customClass: 'width-50'\n        },\n        {\n            id: InputID.LastName,\n            type: InputType.Text,\n            label: this.props.resources.lastNameLabelText,\n            value: '',\n            isRequired: true,\n            customClass: 'width-50'\n        },\n        {\n            id: InputID.Email,\n            type: InputType.Email,\n            label: this.props.resources.emailAddressLabelText,\n            value: '',\n            isRequired: true,\n            pattern: '^[a-zA-Z0-9.!#$%&\\'^_`{}~-]+@[a-zA-Z0-9-]+(?:\\\\.[a-zA-Z0-9-]+)*$',\n            customClass: 'width-100'\n        },\n        {\n            id: InputID.SpendingLimit,\n            type: InputType.Text,\n            label: this.props.resources.spendingLimitLabelText,\n            value: '',\n            isRequired: true,\n            customClass: 'width-50'\n        },\n    ];\n\n    private moduleClassName: string = 'ms-business-organization-list';\n    private mobileExcludedColumns: string[];\n\n    @observable\n    private _viewport: GridSize;\n    @computed get isMobile(): boolean {\n        return (this._viewport === 'xs' || this._viewport === 'sm');\n    }\n    private telemetryContent?: ITelemetryContent;\n    private payLoad: IPayLoad;\n\n    constructor(props: IBusinessOrganizationListProps<IBusinessOrganizationListData>) {\n        super(props);\n        this._toggleModal = this._toggleModal.bind(this);\n        this._onInputChange = this._onInputChange.bind(this);\n        this._handleRemoveUserButton = this._handleRemoveUserButton.bind(this);\n\n        this.mobileExcludedColumns = [InputID.Email, InputID.Status, InputID.SpendingLimit];\n        this._viewport = props.context.request && props.context.request.device && props.context.request.device.Type === 'Mobile' ? 'xs' : 'lg';\n        this._updateViewport = this._updateViewport.bind(this);\n\n        this.state = {\n            isReady: false,\n            formItems: this.BusinessFormDefaultInputs,\n            isFormActive: false,\n            formType: FormType.None,\n            selectedUserData: {Email: ''},\n            refresh: true,\n            isModalOpen: false,\n            hasFormError: false,\n            hasActionError: false\n        };\n\n        this.telemetryContent = getTelemetryObject(this.props.context.request.telemetryPageName!, this.props.friendlyName, this.props.telemetry);\n        this.payLoad = getPayloadObject('click', this.telemetryContent, '');\n        this._updateViewport();\n    }\n\n    public componentDidMount(): void {\n        if (MsDyn365.isBrowser && window.addEventListener) {\n            window.addEventListener('resize', this._updateViewport);\n            this._updateViewport();\n        }\n    }\n\n    public componentWillUnmount(): void {\n        if (MsDyn365.isBrowser && window.removeEventListener) {\n            window.removeEventListener('resize', this._updateViewport);\n        }\n    }\n\n    public render(): JSX.Element | null {\n        const { config, resources, data: { users } } = this.props;\n        const { className, heading } = config;\n        const { addUserButtonText, loadingMessage, emptyListMessage, errorGettingUsersMessage } = resources;\n        const { formItems, isFormActive, formType, isModalOpen } = this.state;\n\n        const hasUsers = users && users.result && users.result.length > 0;\n        this.payLoad.contentAction.etext = TelemetryConstant.AddUser;\n        const addUserAttributes = getTelemetryAttributes(this.telemetryContent!, this.payLoad);\n\n        if (!hasUsers) {\n            let errorMessage = '';\n            if (users.status === 'LOADING') {\n                errorMessage = loadingMessage;\n            } else if (users.status === 'FAILED') {\n                errorMessage = errorGettingUsersMessage;\n            } else if (users.result && users.result.length === 0) {\n                errorMessage = emptyListMessage;\n            }\n\n            const errorProps = {\n                ...this.props,\n                className: className,\n                OrganizationUserList: {\n                    moduleProps: this.props,\n                    className: classnames(this.moduleClassName, className)\n                },\n                moduleContainer: {\n                    className: `${this.moduleClassName}__container`\n                },\n                heading: heading && <Heading className={`${this.moduleClassName}__heading`} headingTag={heading.tag} text={heading.text} />,\n                addUserButton: <Button className={`${this.moduleClassName}__add-user-button`} onClick={this._handleAddUserButtonClicked} {...addUserAttributes} >{addUserButtonText}</Button>,\n                noUsersText: <p className={`${this.moduleClassName}__error-message`}>{errorMessage}</p>\n            };\n\n            return this.props.renderView(errorProps) as React.ReactElement;\n        }\n\n        const viewProps = {\n            ...this.props,\n            className: className,\n            OrganizationUserList: {\n                moduleProps: this.props,\n                className: classnames(this.moduleClassName, className)\n            },\n            moduleContainer: {\n                className: `${this.moduleClassName}__container`\n            },\n            heading: heading && <Heading className={`${this.moduleClassName}__heading`} headingTag={heading.tag} text={heading.text} />,\n            modalState: isModalOpen,\n            addUserButton: <Button className={`${this.moduleClassName}__add-user-button`} onClick={this._handleAddUserButtonClicked} {...addUserAttributes} >{addUserButtonText}</Button>,\n            organizationListTable: <Table {...this._createTableProps()} />,\n            toggleModal: this._toggleModal,\n            formType: formType,\n            form: isFormActive && isModalOpen && (formType === FormType.Add || formType === FormType.Edit) ? this._renderUserForm() : this._renderUserDetails(),\n            formItems: formItems\n        } as IBusinessOrganizationListViewProps;\n\n        return this.props.renderView(viewProps) as React.ReactElement;\n    }\n\n    // _createTableProps: creates the props for the organization list table\n    private _createTableProps(): IDataTableProps {\n        const { config, resources, context } = this.props;\n        const { tableSort, showPagination, paginationItemPerPage } = config;\n        const { paginationNextButtonText, paginationPreviousButtonText, editButtonText, deleteButtonText, actionButtonText, paginationAriaLabel  } = resources;\n\n        const tableData = this._createTableItems();\n        const tableHeading = tableData.length > 0 && tableData[0].row.map((item) => {\n            if (this.isMobile && this.mobileExcludedColumns.includes(item.id)) {\n                return;\n            } else {\n                return {\n                    name: item.id,\n                    sortable: tableSort && tableSort || false\n                } as IHeadingsProperty;\n            }\n        }) || [];\n\n        return {\n            resources: resources,\n            headings: tableHeading,\n            rows: tableData,\n            className: `${this.moduleClassName}__table`,\n            editLinkText: this.isMobile ? editButtonText : '', // '' === showing just icon\n            deleteLinkText: this.isMobile ? deleteButtonText : '', // '' === showing just icon\n            viewLinkText: 'View details',\n            enableToModify: true,\n            actionLinkText: actionButtonText,\n            showCheckBoxes: false,\n            isSortable: tableSort,\n            showPagination: showPagination,\n            minifyActions: this.isMobile,\n            excludedColumns: this.isMobile ? this.mobileExcludedColumns : [],\n            paginationProperty: {\n                skipCount: context && context.request && context.request.query && context.request.query.skip && !isNaN(parseInt(context.request.query.skip, 10)) ? parseInt(context.request.query.skip, 10) : 0,\n                itemPerPage: paginationItemPerPage || 10,\n                prevText: paginationPreviousButtonText,\n                nextText: paginationNextButtonText,\n                paginationText: paginationAriaLabel,\n                url: context && this._getCurrentUrl(context.request).href || ''\n            },\n            actions: {\n                onDelete: this._handleDeleteIcon,\n                onEdit: this._handleEditIcon,\n                onView: this.isMobile && this._handleViewDetails || undefined\n            },\n            formatPrice: this._formatPrice\n        };\n    }\n\n    // _createTableItems: converts users recieved from the data-action(IBusinessParterUser[]) to tableRows(ITableItemProps[])\n    private _createTableItems(): ITableRowProps[] {\n        const { resources, data: { users } } = this.props;\n        const { activeStatusText, pendingStatusText, removedStatusText } = resources;\n        const usersList = users && users.result;\n\n        if (!usersList || usersList.length === 0) {\n            return [];\n        }\n\n        return usersList.map((user) => {\n            let statusString = '';\n\n            switch(user.StatusValue) {\n                case 0:\n                    statusString = pendingStatusText;\n                    break;\n                case 1:\n                    statusString = activeStatusText;\n                    break;\n                case 2:\n                default:\n                    statusString = removedStatusText;\n            }\n\n            return {\n                row: [\n                    {\n                        id: InputID.FullName,\n                        type: TableDataType.Text,\n                        value: `${user.FirstName} ${user.LastName}`\n                    },\n                    {\n                        id: InputID.Email,\n                        type: TableDataType.Text,\n                        value: user.Email\n                    },\n                    {\n                        id: InputID.Status,\n                        type: TableDataType.Text,\n                        value: statusString\n                    },\n                    {\n                        id: InputID.SpendingLimit,\n                        type: TableDataType.Price,\n                        value: user.SpendingLimit || 0\n                    }\n                ]\n            };\n        });\n    }\n\n    // _toggleModal: closes the modal and resets the form states\n    private _toggleModal():void {\n        this.setState({\n            isModalOpen: false,\n            isFormActive: false,\n            formType: FormType.None\n        });\n    }\n\n    // _handleAddUserButtonClicked: resets input fields, opens the modal, and sets the form states\n    private _handleAddUserButtonClicked = () => {\n        // reset form\n        const newForm = this.state.formItems;\n        newForm.forEach((input) => {\n            if (input.id === InputID.Email) {\n                // make sure email input is re enabled (it gets disabled when admin is editing user)\n                input.isDisabled = false;\n            }\n\n            input.value = '';\n        });\n\n        this.setState({\n            formItems: newForm,\n            isFormActive: true,\n            formType: FormType.Add,\n            isModalOpen: true,\n            hasFormError: false,\n            hasActionError: false\n        });\n    }\n\n    // _handleAddEditFormSaveButton: triggered on the save button for both add/edit forms. Calls the appropriate data-action and reloads the page when successful\n    private _handleAddEditFormSaveButton = async () => {\n        const { context } = this.props;\n        const { formType, formItems } = this.state;\n\n        const updatedUser = this._createBusinessPartner(formItems);\n\n        if (formType === FormType.Edit) {\n            editOrganizationUser(new EditOrganizationUserInput(updatedUser), context.actionContext)\n                .then(() => {\n                    window.location.reload(false);\n                })\n                .catch(error => {\n                    context.telemetry.trace(error);\n                    this.setState({\n                        hasActionError: true\n                    });\n                });\n        } else {\n            addOrganizationUser(new AddOrganizationUserInput(updatedUser), context.actionContext)\n                .then(() => {\n                    window.location.reload(false);\n                })\n                .catch(error => {\n                    context.telemetry.trace(error);\n                    this.setState({\n                        hasActionError: true\n                    });\n                });\n        }\n    }\n\n    // _createBusinessPartner: attempts to convert input values(IUserFormItem) to a new user(BusinessPartnerUser)\n    private _createBusinessPartner = (inputs: IUserFormItem[]): BusinessPartnerUser => {\n        const newUser: BusinessPartnerUser = {\n            Email: ''  // email is required field\n        };\n\n        inputs.forEach((input) => {\n            // deals with input values need need to be converted into numbers\n            if (input.id === InputID.SpendingLimit) {\n                newUser[input.id] = parseFloat(input.value) || 0;\n            } else {\n                newUser[input.id] = input.value;\n            }\n        });\n\n        return newUser;\n    }\n\n    // _handleFormCancelButton: closes the modal when clicking the Cancel button\n    private _handleFormCancelButton = () => {\n        this.setState({\n            isFormActive: false,\n            isModalOpen: false,\n            formType: FormType.None\n        });\n    }\n\n    // _handleEditIcon: converts the table row data(ITableItemProps[]) to input fields(IUserFormItem) and opens the edit form\n    private _handleEditIcon = (userData: ITableItemProps[]) => {\n        // split full name into first and last\n        const possibleName = userData.find(cell => {return cell.id === 'Name';});\n        const fullName = possibleName && possibleName.value as string || '';\n        const lastSpaceIndex = fullName.lastIndexOf(' ');\n        const firstName = fullName.substring(0, lastSpaceIndex);\n        // tslint:disable-next-line:restrict-plus-operands\n        const lastName = fullName.substring(lastSpaceIndex + 1);\n\n        // create clone of formItems, map users information, update state\n        const { formItems } = this.state;\n        const newForm = formItems;\n\n        newForm.forEach(input => {\n            switch (input.id) {\n                case InputID.FirstName:\n                    input.value = firstName;\n                    break;\n                case InputID.LastName:\n                    input.value = lastName;\n                    break;\n                case InputID.Email: // email can never be null/undefined as it is a required field\n                    input.isDisabled = true;\n                    const possibleCell = userData.find(cell => {return input.id === cell.id;});\n                    input.value = possibleCell && possibleCell.value as string || '';\n                    break;\n                default:\n                    const dataCell = userData.find(cell => {return input.id === cell.id;});\n                    input.value = dataCell && dataCell.value as string || '';\n            }\n        });\n\n        this.setState({\n            formItems: newForm,\n            isFormActive: true,\n            formType: FormType.Edit,\n            isModalOpen: true,\n            hasFormError: false,\n            hasActionError: false\n        });\n    }\n\n    // _handleDeleteIcon: opens removeUser confirmation window\n    private _handleDeleteIcon = (userData: ITableItemProps[]) => {\n        const newUser: BusinessPartnerUser = {\n            Email: ''\n        };\n\n        userData.forEach((cell: ITableItemProps) => {\n            if (cell.id === 'Name') {\n                // split full name into first and last\n                const fullName = cell.value as string;\n                const lastSpaceIndex = fullName.lastIndexOf(' ');\n                newUser.FirstName = fullName.substring(0, lastSpaceIndex);\n                // tslint:disable-next-line\n                newUser.LastName = fullName.substring(lastSpaceIndex + 1);\n            } else if (cell.type === TableDataType.Price) {\n                newUser[cell.id] = this.props.context.cultureFormatter.formatCurrency(cell.value as string);\n            } else {\n                newUser[cell.id] = cell.value;\n            }\n        });\n\n        this.setState({\n            selectedUserData: newUser,\n            formType: FormType.Remove,\n            isModalOpen: true,\n            isFormActive: false\n        });\n    }\n\n    // _handleViewDetails: opens user details window\n    private _handleViewDetails = (userData: ITableItemProps[]) => {\n        const newUser: BusinessPartnerUser = {\n            Email: ''\n        };\n\n        userData.forEach((cell: ITableItemProps) => {\n            if (cell.id === 'Name') {\n                // split full name into first and last\n                const fullName = cell.value as string;\n                const lastSpaceIndex = fullName.lastIndexOf(' ');\n                newUser.FirstName = fullName.substring(0, lastSpaceIndex);\n                // tslint:disable-next-line\n                newUser.LastName = fullName.substring(lastSpaceIndex + 1);\n            } else if (cell.type === TableDataType.Price) {\n                newUser[cell.id] = this.props.context.cultureFormatter.formatCurrency(cell.value as string);\n            } else {\n                newUser[cell.id] = cell.value;\n            }\n        });\n\n        this.setState({\n            selectedUserData: newUser,\n            formType: FormType.View,\n            isModalOpen: true,\n            isFormActive: false\n        });\n    }\n\n    // _handleRemoveUserButton: triggered on confirmation of removing a user.\n    private _handleRemoveUserButton = (records: BusinessPartnerUser) => {\n        // TODO\n        const { context } = this.props;\n        const { selectedUserData: deleteUserData } = this.state;\n\n        if (deleteUserData) {\n            deleteOrganizationUser(new DeleteOrganizationUserInput(deleteUserData), context.actionContext)\n                .then(() => {\n                    window.location.reload(false);\n                })\n                .catch((error) => {\n                    context.telemetry.trace(error);\n                });\n        }\n        this.setState({\n            formType: FormType.None,\n            isModalOpen: false\n        });\n    }\n\n    // _renderUserDetails: creates the remove/view form props\n    private _renderUserDetails(): IFormViewProps {\n        const { resources } = this.props;\n        const { formType, selectedUserData } = this.state;\n        const { removeModalHeaderText, removeModalDescription, viewModalHeaderText, cancelButtonText, cancelRemoveUserButtonText, removeUserButtonText, errorUpdatingUsersMessage } = resources;\n\n        const formClassName = `${this.moduleClassName}__form`;\n        const typeClassName = formType === FormType.Remove ? 'type-remove' : 'type-view';\n        const handleRemoveButton = (event: React.MouseEvent<HTMLButtonElement, MouseEvent>) => { this._handleRemoveUserButton(selectedUserData); };\n\n        return {\n            modalClassName: classnames(`${this.moduleClassName}__modal`, typeClassName),\n            FormWrapper: {\n                className: formClassName\n            },\n            modalHeading: formType === FormType.Remove ? removeModalHeaderText : viewModalHeaderText,\n            modalDescription: formType === FormType.Remove && <p className={`${formClassName}-description`}>{removeModalDescription}</p>,\n            selectedUser: selectedUserData,\n            buttons: [\n                // tslint:disable-next-line:react-this-binding-issue\n                formType === FormType.Remove && <Button key={'action-remove'} className={`${formClassName}-remove-user-button`} onClick={handleRemoveButton}>{removeUserButtonText}</Button>,\n                <Button key={'action-cancel'} className={`${formClassName}-cancel`} onClick={this._handleFormCancelButton}>{formType === FormType.Remove ? cancelRemoveUserButtonText : cancelButtonText}</Button>\n            ],\n            errorMessage: [\n                <FormFieldError key='fieldIncorrect' id='fieldIncorrect' className={`${formClassName}-error`} message={errorUpdatingUsersMessage}/>,\n            ],\n            resources: resources\n        };\n    }\n\n    // _renderUserForm: creates the add/edit form props\n    private _renderUserForm(): IFormViewProps {\n        const { resources } = this.props;\n        const { formType, formItems, hasFormError, hasActionError, isReady } = this.state;\n        const { editUserFormHeadingText, addUserFormHeadingText, saveButtonArialabel, saveButtonText, cancelButtonArialabel, cancelButtonText, fieldIncorrectErrorText, actionErrorText, allFieldsRequiredMessage } = resources;\n\n        const formClassName = `${this.moduleClassName}__form`;\n        const typeClassName = formType === FormType.Add ? 'type-add' : 'type-edit';\n\n        return {\n            modalClassName: classnames(`${this.moduleClassName}__modal`, typeClassName),\n            FormWrapper: {\n                className: formClassName\n            },\n            modalHeading: formType === FormType.Add ? addUserFormHeadingText : editUserFormHeadingText,\n            modalDescription: formType === FormType.Add && <p className={`${formClassName}-all-required-msg`}>{allFieldsRequiredMessage}</p>,\n            inputs: renderInputSection(formItems, `${formClassName}-item`, this._onInputChange),\n            buttons: [\n                (\n                    <FormButton\n                        key='continue'\n                        id='continue'\n                        className={`${formClassName}-save`}\n                        ariaLabel={saveButtonArialabel}\n                        text={saveButtonText}\n                        onClick={this._handleAddEditFormSaveButton}\n                        disabled={!isReady}\n                        telemetryContent={this.telemetryContent}\n                    />),\n                <FormButton key='cancel' id='cancel' className={`${formClassName}-cancel`} ariaLabel={cancelButtonArialabel} text={cancelButtonText} onClick={this._handleFormCancelButton} telemetryContent={this.telemetryContent}/>\n            ],\n            errorMessage: [\n                hasFormError && <FormFieldError key='fieldIncorrect' id='fieldIncorrect' className={this.moduleClassName} message={fieldIncorrectErrorText}/>,\n                hasActionError && <FormFieldError key='fieldIncorrect' id='fieldIncorrect' className={this.moduleClassName} message={actionErrorText}/>\n            ],\n            resources: resources\n        };\n    }\n\n    // _onInputChange: updates the fomrItems state on every input change\n    private _onInputChange = (event: React.ChangeEvent<HTMLInputElement | HTMLTextAreaElement>): void => {\n        const newForm = this.state.formItems;\n\n        newForm.forEach(item => {\n            if (item.id === event.target.id) {\n                item.value = event.target.value;\n            }\n        });\n\n        // update state object with latest values and check if form is ready\n        // TODO: remove !refresh\n        this.setState((prev) => ({\n            refresh: !prev.refresh,\n            isReady: this._isFormReady(),\n            formItems: newForm,\n            hasFormError: false,\n            hasActionError: false\n        }));\n    }\n\n    // _isFormReady: checks whether the current values in the input fields are valid for submission, this will also disable/enable the submit button.\n    private _isFormReady = (): boolean => {\n        const { formItems } = this.state;\n\n        for (let i = 0; i < formItems.length; i++) {\n            // will return TRUE if:\n            //  - input field is required and EMPTY\n            //  OR\n            //  - pattern provided and value does not match pattern\n            //  OR\n            //  - if spendingLimit input --> make sure value can be parsed into an NUMBER\n            if ((formItems[i].isRequired && formItems[i].value.length < 1)) {\n                return false;\n            } else if (formItems[i].pattern !== undefined && formItems[i].value.match(formItems[i].pattern as string) === null) {\n                return false;\n            } else if (formItems[i].id === InputID.SpendingLimit && isNaN(parseFloat(formItems[i].value))) {\n                this.setState({\n                    hasFormError: true\n                });\n                return false;\n            }\n        }\n\n        return true;\n    }\n\n    private _formatPrice = (price: number): string => {\n        return this.props.context.cultureFormatter ? this.props.context.cultureFormatter.formatCurrency(price) : price.toString();\n    }\n\n    private _getCurrentUrl = (reqContext: IRequestContext): URL=> {\n        if (MsDyn365.isBrowser) {\n            return new URL(window.location.href);\n        } else {\n            // NOTE: Typing on requestURL is incorrect\n            if (reqContext.url.requestUrl.href) {\n                return new URL(reqContext.url.requestUrl.href);\n            } else {\n                return new URL(reqContext.url.requestUrl.href);\n            }\n        }\n    }\n\n    private _updateViewport(): void {\n        this._viewport = this._getViewport();\n    }\n\n    private _getViewport = (): GridSize => {\n        const { context } = this.props;\n\n        // always render in mobile viewport on a mobile device\n        if (context.request && context.request.device && context.request.device.Type === 'Mobile') {\n            return 'xs';\n        }\n\n        if (typeof window !== undefined && window.innerWidth) {\n            const gridSettings = context.request.gridSettings;\n            if (gridSettings) {\n                if (gridSettings.xs && window.innerWidth <= gridSettings.xs.w) {\n                    return 'xs';\n                } else if (gridSettings.sm && window.innerWidth <= gridSettings.sm.w) {\n                    return 'sm';\n                } else if (gridSettings.md && window.innerWidth <= gridSettings.md.w) {\n                    return 'md';\n                } else if (gridSettings.lg && window.innerWidth <= gridSettings.lg.w) {\n                    return 'lg';\n                } else {\n                    return 'xl';\n                }\n            }\n        }\n\n        return 'xs';\n    }\n}\n\nexport default BusinessOrganizationList;\n"]}