{"version":3,"file":"small-components.js","sourceRoot":"./src/","sources":["modules/business-organization-list/components/small-components.tsx"],"names":[],"mappings":"AAAA,OAAO,KAAK,KAAK,MAAM,OAAO,CAAC;AAE/B,OAAO,EAAE,MAAM,EAAE,gBAAgB,EAAE,sBAAsB,EAAiC,MAAM,sCAAsC,CAAC;AACvI,OAAO,UAAU,MAAM,YAAY,CAAC;AAiDpC,MAAM,CAAC,MAAM,SAAS,GAAsC,CAAC,EAAE,EAAE,EAAE,IAAI,EAAE,KAAK,EAAE,OAAO,EAAE,SAAS,EAAE,SAAS,EAAE,UAAU,EAAE,UAAU,EAAE,QAAQ,EAAE,EAAE,EAAE,CAC9I,CACC,+BACI,EAAE,EAAE,EAAE,EACN,IAAI,EAAE,IAAI,EACV,KAAK,EAAE,KAAK,EACZ,SAAS,EAAE,GAAG,SAAS,QAAQ,EAC/B,OAAO,EAAE,OAAO,KAAK,EAAE,CAAC,CAAC,CAAC,OAAO,CAAC,CAAC,CAAC,SAAS,mBAC9B,UAAU,EACzB,QAAQ,EAAE,UAAU,EACpB,SAAS,EAAE,YAAY,CAAC,SAAS,CAAC,EAClC,QAAQ,EAAE,QAAQ,EAClB,QAAQ,EAAE,UAAU,GACtB,CACL,CAAC;AASN,MAAM,CAAC,MAAM,SAAS,GAAiC,CAAC,EAAE,EAAE,EAAE,KAAK,EAAE,SAAS,EAAE,IAAI,EAAE,EAAE,EAAE,CAAC,CACvF,+BAAO,EAAE,EAAE,GAAG,EAAE,QAAQ,EAAE,SAAS,EAAE,GAAG,SAAS,QAAQ,EAAE,OAAO,EAAE,KAAK,IACpE,IAAI,CACD,CACX,CAAC;AAYF,MAAM,CAAC,MAAM,UAAU,GAAkC,CAAC,EAAE,EAAE,EAAE,SAAS,EAAE,IAAI,EAAE,SAAS,EAAE,gBAAgB,EAAE,QAAQ,EAAE,OAAO,EAAE,EAAE,EAAE;IACjI,MAAM,OAAO,GAAG,gBAAgB,CAAC,OAAO,EAAE,gBAAiB,EAAE,IAAI,CAAC,CAAC;IACnE,MAAM,UAAU,GAAG,sBAAsB,CAAC,gBAAiB,EAAE,OAAO,CAAC,CAAC;IACtE,OAAO,CACP,oBAAC,MAAM,kBACH,EAAE,EAAE,EAAE,EACN,SAAS,EAAE,SAAS,gBACR,SAAS,EACrB,QAAQ,EAAE,QAAQ,EAClB,OAAO,EAAE,OAAO,IACZ,UAAU,GAEb,IAAI,CACA,CACR,CAAC;AACN,CAAC,CAAC;AASF,MAAM,CAAC,MAAM,cAAc,GAAsC,CAAC,EAAE,EAAE,EAAE,SAAS,EAAE,IAAI,GAAG,MAAM,EAAE,OAAO,EAAE,EAAE,EAAE;IACzG,MAAM,cAAc,GAAG,GAAG,SAAS,KAAK,IAAI,QAAQ,CAAC;IAErD,OAAO,CACL,6BAAK,EAAE,EAAE,EAAE,EAAE,SAAS,EAAE,UAAU,CAAC,cAAc,EAAE,OAAO,EAAE,GAAG,IAAI,OAAO,CAAC,EAAE,IAAI,EAAC,OAAO,eAAW,WAAW,iBAAa,MAAM,IAE1H,2BAAG,SAAS,EAAE,GAAG,cAAc,OAAO,IACjC,OAAO,CACR,CAEN,CACT,CAAC;AAEN,CAAC,CAAC;AAEF,MAAM,YAAY,GAAG,CAAC,SAAkB,EAAsB,EAAE;IAC5D,IAAI,SAAS,EAAE;QACX,MAAM,eAAe,GAAG,QAAQ,CAAC,SAAS,EAAE,EAAE,CAAC,CAAC;QAChD,IAAI,CAAC,KAAK,CAAC,eAAe,CAAC,EAAE;YACzB,OAAO,eAAe,CAAC;SAC1B;KACJ;IAED,OAAO,SAAS,CAAC;AACrB,CAAC,CAAC","sourcesContent":["import * as React from 'react';\n\nimport { Button, getPayloadObject, getTelemetryAttributes, INodeProps, ITelemetryContent } from '@msdyn365-commerce-modules/utilities';\nimport classnames from 'classnames';\nimport { InputType } from '../business-organization-list';\n\nexport interface IBusinessForm {\n    FormWrapper: INodeProps;\n    message?: React.ReactNode;\n    items: IBusinessFormItem[];\n    buttons: React.ReactNode[];\n    errorMessage: React.ReactNode[];\n}\n\nexport interface IBusinessFormItem {\n    wrapper: INodeProps;\n    key: string;\n    label: React.ReactNode;\n    errorMessage: React.ReactNode;\n    input: React.ReactNode;\n}\n\nexport interface IBusinessFormInput {\n    label: React.ReactNode;\n    alert: React.ReactNode;\n    input: React.ReactNode;\n}\n\nexport interface IUserFormItem {\n    id: string;\n    type: InputType;\n    label: string;\n    value: string;\n    maxChars?: string;\n    isRequired: boolean;\n    pattern?: string;\n    isDisabled?: boolean;\n    customClass?: string;\n}\n\nexport interface IBusinessFormInputProps {\n    id?: string;\n    type: string;\n    value?: string;\n    pattern?: string;\n    className: string;\n    maxLength?: string;\n    isRequired: boolean;\n    isDisabled?: boolean;\n    onChange?(event: React.ChangeEvent<HTMLInputElement | HTMLTextAreaElement>): void;\n}\n\nexport const FormInput: React.FC<IBusinessFormInputProps> = ({ id, type, value, pattern, className, maxLength, isRequired, isDisabled, onChange }) =>\n       (\n        <input\n            id={id}\n            type={type}\n            value={value}\n            className={`${className}-input`}\n            pattern={pattern !== '' ? pattern : undefined}\n            aria-required={isRequired}\n            required={isRequired}\n            maxLength={GetMaxLength(maxLength)}\n            onChange={onChange}\n            disabled={isDisabled}\n        />\n    );\n\nexport interface IBusinessFormLabel {\n    id: string;\n    forId: string;\n    className: string;\n    text: string;\n}\n\nexport const FormLabel: React.FC<IBusinessFormLabel> = ({ id, forId, className, text }) => (\n    <label id={`${id}_label`} className={`${className}-label`} htmlFor={forId}>\n        {text}\n    </label>\n);\n\nexport interface IBusinessFormButton {\n    id?: string;\n    className: string;\n    text: string;\n    ariaLabel: string;\n    disabled?: boolean;\n    telemetryContent?: ITelemetryContent;\n    onClick?(event: React.MouseEvent<HTMLElement>): void;\n}\n\nexport const FormButton: React.FC<IBusinessFormButton> = ({ id, className, text, ariaLabel, telemetryContent, disabled, onClick }) => {\n    const payLoad = getPayloadObject('click', telemetryContent!, text);\n    const attributes = getTelemetryAttributes(telemetryContent!, payLoad);\n    return (\n    <Button\n        id={id}\n        className={className}\n        aria-label={ariaLabel}\n        disabled={disabled}\n        onClick={onClick}\n        {...attributes}\n    >\n        {text}\n    </Button>\n    );\n};\n\nexport interface IBusinessFormErrorProps {\n    id?: string;\n    className: string;\n    type?: string;\n    message?: string;\n}\n\nexport const FormFieldError: React.FC<IBusinessFormErrorProps> = ({ id, className, type = 'page', message }) => {\n      const errorClassName = `${className}__${type}-error`;\n\n      return (\n        <div id={id} className={classnames(errorClassName, 'error', `${type}Level`)} role='alert' aria-live='assertive' aria-hidden='true'>\n            {\n                <p className={`${errorClassName}-text`}>\n                    {message}\n                </p>\n            }\n        </div>\n    );\n\n};\n\nconst GetMaxLength = (maxLength?: string): number | undefined => {\n    if (maxLength) {\n        const parsedMaxLength = parseInt(maxLength, 10);\n        if (!isNaN(parsedMaxLength)) {\n            return parsedMaxLength;\n        }\n    }\n\n    return undefined;\n};"]}