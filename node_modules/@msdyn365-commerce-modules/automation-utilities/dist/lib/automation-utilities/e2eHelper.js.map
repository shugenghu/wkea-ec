{"version":3,"file":"e2eHelper.js","sourceRoot":"","sources":["../../../src/automation-utilities/e2eHelper.ts"],"names":[],"mappings":"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","sourcesContent":["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { Selector } from 'testcafe';\nimport { BrowserWorkspace } from './browserWorkspace';\nimport { click, expectURL, exportSarif, hover, navigateTo, screenshot, typeText } from './eventHelper';\n\nconst timeout = 15000;\n\n// tslint:disable-next-line: completed-docs\nexport default class E2EHelper {\n    // tslint:disable-next-line: max-line-length\n    public async eventHelper(testController: TestController, deploymentEnv: string, testPage: string, selector: string, errorMessage: string, baseFolderPath: string, inputText: string = '', containsText: string = '', eventName?: string, testUrl: string = '', wait: number = 1000, moduleName: string = '', pageName: string = ''): Promise<void> {\n        switch (eventName) {\n            case 'click':\n              await click(testController, wait, selector);\n              break;\n            case 'hover':\n               await hover(testController, wait, selector);\n               break;\n            case 'typeText':\n                await typeText(testController, wait, selector, inputText);\n                break;\n            case 'expectURL':\n                await expectURL(testController, wait, containsText);\n                break;\n            case 'navigateTo':\n                await navigateTo(testController, wait, containsText, testUrl);\n                break;\n            case 'hasAttribute':\n                await testController\n                .expect(await Selector(selector).hasAttribute(inputText))\n                .ok(`Did not find ${inputText} attribute`);\n                break;\n            case 'valueCheck':\n                if (await Selector(selector).value) {\n                    await testController\n                        .expect(await Selector(selector).value)\n                        .eql(inputText, errorMessage);\n                }\n                if (await Selector(selector).textContent) {\n                    await testController\n                        .expect(await Selector(selector).textContent)\n                        .eql(inputText, errorMessage);\n                }\n\n                break;\n            case 'removeItem':\n                if (await Selector(selector).exists) {\n                    await testController\n                        .expect(await Selector(selector).exists)\n                        .ok('Either there is no item added in cart or the remove link is not rendering on cart page');\n                    await click(testController, wait, selector);\n\n                } else {\n                    await hover(testController, wait, inputText);\n                    await testController\n                        .expect(Selector(inputText).textContent)\n                        .eql(containsText, errorMessage);\n                }\n                break;\n            case 'screenshot':\n                if (moduleName.length === 0 || pageName.length === 0 || !baseFolderPath) {\n                    console.log('ModuleName or PageName or folder Path  is missing for VVT test');\n                    break;\n                }\n                await screenshot(testController,selector,timeout,pageName,moduleName,deploymentEnv,baseFolderPath);\n                break;\n            case 'a11y':\n                const pageUrl = await BrowserWorkspace.getDocumentURLHelper();\n                console.log('A11y Test for ', pageUrl);\n                await exportSarif(testController, pageName, baseFolderPath);\n                break;\n            default:\n                await testController\n                    .expect(Selector(selector).with({ visibilityCheck: true, timeout: timeout }))\n                    .ok(errorMessage);\n        }\n        if (testPage) {\n            console.log('A11y Test for ', testPage);\n            await exportSarif(testController, testPage, baseFolderPath);\n        }\n    }\n}"]}