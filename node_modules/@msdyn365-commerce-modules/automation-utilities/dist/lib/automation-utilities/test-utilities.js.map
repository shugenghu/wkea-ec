{"version":3,"file":"test-utilities.js","sourceRoot":"","sources":["../../../src/automation-utilities/test-utilities.ts"],"names":[],"mappings":"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","sourcesContent":["declare var test: TestFn;\nimport E2EHelper from './e2eHelper';\nimport { ITest } from './testData';\nimport { getFixtureUrl } from './vvt-test-utilities';\n\n// tslint:disable-next-line: max-func-body-length\nexport const testutilities = (testObj: ITest, testName: string)=> {\n    const e2eHelper = new E2EHelper();\n    const deploymentEnv = process.env.TESTENVIRONMENT || testObj.env || 'localhost';\n    const url = getFixtureUrl('', '', deploymentEnv);\n    const testPageURL = `${url}${testObj.pageUrl}`;\n    const fixtureName = `'${testName}' '${testObj.category}'`;\n    if ((process.env.TESTENVIRONMENT === 'localhost' || process.env.TESTENVIRONMENT === undefined) && testObj.env === 'localhost') {\n        if (testObj.pageUrl.length !== 0 && testObj.enabled !== false) {\n            fixture(fixtureName)\n                .page(testPageURL).beforeEach(async testController => {\n                    console.log(testPageURL);\n                    await testController.maximizeWindow();\n                });\n            if (testObj.category.includes('a11y')) {\n                test\n                    // tslint:disable-next-line:prefer-template\n                    ('Validate Accessibility Test for ' + testName, async (testController: TestController) => {\n                        if (testObj.enabled && testObj.testPage) {\n                            try {\n                                console.log(testPageURL);\n                                await e2eHelper.eventHelper(testController, testObj.env, testObj.testPage, testObj.baseFolderPath, '', '');\n                            } catch (e) {\n                                console.log({ error: e });\n                                await testController.expect(1).eql(2, 'parameters are missing');\n                            }\n                        }\n                    });\n            }\n\n            if (testObj.category.includes('dvt')) {\n                test\n                    // tslint:disable-next-line:prefer-template\n                    ('Validate Dvt Test for ' + testName, async t => {\n                        if (testObj.enabled) {\n                            try {\n\n                                for (const data of testObj.asserts) {\n                                    if (data.eventName === 'screenshot') {\n                                        console.log(data.eventName);\n                                    } else {\n                                        // tslint:disable-next-line: max-line-length\n                                        await e2eHelper.eventHelper(t, testObj.env, '', data.selector, data.errorMessage, testObj.baseFolderPath, data.inputText, data.containsText, data.eventName, data.urlText, data.wait, data.moduleName, data.page);\n                                    }\n                                }\n                            } catch (e) {\n                                console.log({ error: e });\n                                await t.expect(1).eql(2, 'parameters are missing or eventName');\n                            }\n                        }\n                    });\n            }\n\n            if (testObj.category.includes('vvt')) {\n                test\n                    // tslint:disable-next-line:prefer-template\n                    ('Validate Vvt Test for ' + testName, async t => {\n                        if (testObj.enabled) {\n                            try {\n                                console.log(testPageURL);\n                                for (const data of testObj.asserts) {\n                                    await e2eHelper.eventHelper(t, testObj.env, '', data.selector, data.errorMessage, testObj.baseFolderPath, data.inputText, data.urlText, data.eventName, data.urlText, data.wait, data.moduleName, data.page);\n                                }\n                            } catch (e) {\n                                console.log({ error: e });\n                                await t.expect(1).eql(2, 'parameters are missing');\n                            }\n                        }\n                    });\n            }\n        }\n    }\n    if (process.env.TESTENVIRONMENT !== 'localhost' && testObj.env !== 'localhost') {\n        fixture(fixtureName)\n            .page(testPageURL).beforeEach(async testController => {\n                console.log(testPageURL);\n                await testController.maximizeWindow();\n            });\n        if (testObj.category.includes('a11y')) {\n            test\n                // tslint:disable-next-line:prefer-template\n                ('Validate Accessibility Test for ' + testName, async (testController: TestController) => {\n                    if (testObj.testPage) {\n                        try {\n                            await e2eHelper.eventHelper(testController, testObj.env, testObj.testPage, testObj.baseFolderPath, '', '');\n                        } catch (e) {\n                            console.log({ error: e });\n                            await testController.expect(1).eql(2, 'parameters are missing');\n                        }\n                    }\n                });\n        }\n\n        if (testObj.category.includes('dvt')) {\n        test\n            // tslint:disable-next-line:prefer-template\n            ('Validate Dvt Test for ' + testName, async t => {\n                if (testObj.enabled) {\n                    try {\n                        for (const data of testObj.asserts) {\n                            if (data.eventName === 'screenshot') {\n                                console.log(data.eventName);\n                            } else {\n                                await e2eHelper.eventHelper(t, testObj.env, '', data.selector, data.errorMessage, testObj.baseFolderPath, data.inputText, data.containsText, data.eventName, data.urlText, data.wait, data.moduleName, data.page);\n                            }\n                        }\n                    } catch (e) {\n                        console.log({ error: e });\n                        await t.expect(1).eql(2, 'parameters are missing or eventName');\n                    }\n                }\n            });\n        }\n\n        if(testObj.category.includes('vvt')) {\n        test\n            // tslint:disable-next-line:prefer-template\n            ('Validate Vvt Test for ' + testName, async t => {\n                if (testObj.enabled) {\n                    try {\n                        for (const data of testObj.asserts) {\n                            await e2eHelper.eventHelper(t, testObj.env, '', data.selector, data.errorMessage, testObj.baseFolderPath, data.inputText, data.urlText, data.eventName, data.urlText, data.wait, data.moduleName, data.page);\n                        }\n                    } catch (e) {\n                        console.log({ error: e });\n                        await t.expect(1).eql(2, 'parameters are missing');\n                    }\n                }\n            });\n        }\n    }\n};"]}