import { NodeTag } from '@msdyn365-commerce-modules/utilities';
import { buildMockModuleProps } from '@msdyn365-commerce/core';
import { render } from 'enzyme';
import * as React from 'react';
import { ITabItemViewProps, TabItemType } from '../../tab-item';
import { ITabItemProps } from '../../tab-item.props.autogenerated';
import TabItemView from '../../tab-item.view';

const moduleProps: ITabItemProps<{}> = buildMockModuleProps({}, {}) as ITabItemProps<{}>;
const myReactNodeChild1: React.ReactNode = `whatever child module 1`;
const myReactNodeChild2: React.ReactNode = `whatever child module 2`;
const tabItemContent = [myReactNodeChild1, myReactNodeChild2];

const mockProps: ITabItemViewProps = {
  ...moduleProps,
  TabContentContainer: {
    moduleProps,
    className: 'ms-tab-content'
  },
  tabSlots: {
    tag: 'div' as NodeTag,
    className: 'ms-accordion-item-section',
    accordionItemContent: tabItemContent
  },
  TabHeaderContainer: {
    moduleProps,
    className: 'ms-tab-header'
  },
  tabHeader: <></>,
  TabItemContent: { className: 'ms-tab-item-content' },
};

describe('tab-item unit tests - View', () => {
  it('renders content', () => {
    const component = render(<TabItemView {...mockProps} tabItemType={TabItemType.TabContent} />);
    expect(component).toMatchSnapshot();
  });

  it('renders header', () => {
    const component = render(<TabItemView {...mockProps} tabItemType={TabItemType.TabHeader} />);
    expect(component).toMatchSnapshot();
  });

  it('renders nothing', () => {
    const component = render(<TabItemView {...mockProps} />);
    expect(component).toMatchSnapshot();
  });
});