{"version":3,"file":"tab-item.view.js","sourceRoot":"./src/","sources":["modules/tab-item/tab-item.view.tsx"],"names":[],"mappings":"AAIA,OAAO,EAAE,MAAM,EAAE,IAAI,EAAE,MAAM,sCAAsC,CAAC;AACpE,OAAO,KAAK,KAAK,MAAM,OAAO,CAAC;AAC/B,OAAO,EAAqB,WAAW,EAAE,MAAM,YAAY,CAAC;AAE5D,MAAM,WAAW,GAAgC,KAAK,CAAC,EAAE;IACrD,MAAM,EAAE,WAAW,EAAE,QAAQ,EAAE,mBAAmB,EAAE,kBAAkB,EAAE,cAAc,EAAE,SAAS,EAAE,GAAG,KAAK,CAAC;IAE5G,QAAQ,WAAW,EAAE;QACjB,KAAK,WAAW,CAAC,UAAU;YACvB,OAAO,CACH,oBAAC,MAAM,oBAAK,mBAAmB;gBAC3B,oBAAC,IAAI,oBAAK,cAAc,GACnB,QAAQ,IAAI,QAAQ,CAAC,cAAc,IAAI,QAAQ,CAAC,cAAc,CAAC,MAAM,IAAI,CAAC,qBAAqB,CAAC,QAAQ,CAAC,cAAc,CAAC,CAAC,CACvH,CACF,CACZ,CAAC;QACN,KAAK,WAAW,CAAC,SAAS;YACtB,OAAO,CACH,oBAAC,MAAM,oBAAK,kBAAkB,GACzB,SAAS,CACL,CACZ,CAAC;QACN;YACK,OAAO,IAAI,CAAC;KACpB;AACL,CAAC,CAAC;AAEF,MAAM,qBAAqB,GAAG,CAAC,KAAwB,EAAsB,EAAE;IAC3E,OAAO,CACH,0CACK,KAAK,IAAI,KAAK,CAAC,MAAM,CAAC,CAAC,CAAC,CACrB,KAAK,CAAC,GAAG,CAAC,CAAC,IAAqB,EAAE,KAAa,EAAE,EAAE;QAC/C,OAAO,CACH,oBAAC,KAAK,CAAC,QAAQ,IAAC,GAAG,EAAE,KAAK,IACrB,IAAI,CACQ,CACpB,CAAC;IACN,CAAC,CAAC,CACL,CAAC,CAAC,CAAC,IAAI,CACT,CACN,CAAC;AACN,CAAC,CAAC;AACF,eAAe,WAAW,CAAC","sourcesContent":["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nimport { Module, Node } from '@msdyn365-commerce-modules/utilities';\nimport * as React from 'react';\nimport { ITabItemViewProps, TabItemType } from './tab-item';\n\nconst TabItemView: React.FC<ITabItemViewProps> = props => {\n    const { tabItemType, tabSlots, TabContentContainer, TabHeaderContainer, TabItemContent, tabHeader } = props;\n\n    switch (tabItemType) {\n        case TabItemType.TabContent:\n            return (\n                <Module {...TabContentContainer} >\n                    <Node {...TabItemContent}>\n                        {tabSlots && tabSlots.tabItemContent && tabSlots.tabItemContent.length && (_renderTabItemContent(tabSlots.tabItemContent))}\n                    </Node>\n                </Module>\n            );\n        case TabItemType.TabHeader:\n            return (\n                <Module {...TabHeaderContainer} >\n                    {tabHeader}\n                </Module>\n            );\n        default:\n             return null;\n    }\n};\n\nconst _renderTabItemContent = (items: React.ReactNode[]): JSX.Element | null => {\n    return (\n        <>\n            {items && items.length ? (\n                items.map((item: React.ReactNode, index: number) => {\n                    return (\n                        <React.Fragment key={index}>\n                            {item}\n                        </React.Fragment>\n                    );\n                })\n            ) : null}\n        </>\n    );\n};\nexport default TabItemView;"]}