import { buildMockModuleProps } from '@msdyn365-commerce/core';
import { render } from 'enzyme';
import * as React from 'react';
import { TabItemType } from '../../tab-item';
import TabItemView from '../../tab-item.view';
const moduleProps = buildMockModuleProps({}, {});
const myReactNodeChild1 = `whatever child module 1`;
const myReactNodeChild2 = `whatever child module 2`;
const tabItemContent = [myReactNodeChild1, myReactNodeChild2];
const mockProps = {
    ...moduleProps,
    TabContentContainer: {
        moduleProps,
        className: 'ms-tab-content'
    },
    tabSlots: {
        tag: 'div',
        className: 'ms-accordion-item-section',
        accordionItemContent: tabItemContent
    },
    TabHeaderContainer: {
        moduleProps,
        className: 'ms-tab-header'
    },
    tabHeader: React.createElement(React.Fragment, null),
    TabItemContent: { className: 'ms-tab-item-content' },
};
describe('tab-item unit tests - View', () => {
    it('renders content', () => {
        const component = render(React.createElement(TabItemView, Object.assign({}, mockProps, { tabItemType: TabItemType.TabContent })));
        expect(component).toMatchSnapshot();
    });
    it('renders header', () => {
        const component = render(React.createElement(TabItemView, Object.assign({}, mockProps, { tabItemType: TabItemType.TabHeader })));
        expect(component).toMatchSnapshot();
    });
    it('renders nothing', () => {
        const component = render(React.createElement(TabItemView, Object.assign({}, mockProps)));
        expect(component).toMatchSnapshot();
    });
});
//# sourceMappingURL=tab-item.view.test.js.map