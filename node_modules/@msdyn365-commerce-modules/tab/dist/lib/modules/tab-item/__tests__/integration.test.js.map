{"version":3,"file":"integration.test.js","sourceRoot":"./src/","sources":["modules/tab-item/__tests__/integration.test.tsx"],"names":[],"mappings":"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","sourcesContent":["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { wrapInResolvedAsyncResult } from '@msdyn365-commerce-modules/retail-actions';\nimport { buildMockModuleProps} from '@msdyn365-commerce/core';\n/// <reference types=\"jest\" />\n\n// tslint:disable-next-line:no-unused-variable\nimport { render } from 'enzyme';\nimport * as React from 'react';\nimport { IActiveTabState } from '../../../data-actions/tab-state';\n// import { interactionStyle } from '../../tab/tab.props.autogenerated';\nimport TabItem, { ITabItemExtentedProps, TabItemType } from '../tab-item';\nimport { ITabItemData } from '../tab-item.data';\nimport {\n  ITabItemConfig\n} from '../tab-item.props.autogenerated';\nimport TabItemView from '../tab-item.view';\n\nconst mockDataWithInactiveContent: ITabItemData = {\n  activeTabState: wrapInResolvedAsyncResult({ activeContentIndex: 1 } as IActiveTabState)\n};\n\nconst mockDataWithActiveContent: ITabItemData = {\n  activeTabState: wrapInResolvedAsyncResult({ activeContentIndex: 0 } as IActiveTabState)\n};\n\nconst mockConfig: ITabItemConfig = {\n  tabItemTitle: 'Tab Item Title0',\n};\n\nconst myReactNodeChild1: React.ReactNode = 'whatever child module 1';\nconst slots = {\n  tabItemContent: [myReactNodeChild1]\n        };\n\nconst mockActions = {};\n\ndescribe('TabItem', () => {\n  it('renders correctly', () => {\n    let moduleProps: ITabItemExtentedProps;\n    moduleProps = {\n      slots: slots,\n      tabItemType: TabItemType.TabContent,\n      itemIndex: 0,\n      isSelected: true,\n       ...buildMockModuleProps(mockDataWithActiveContent, mockActions, mockConfig) as ITabItemExtentedProps,\n       // @ts-ignore\n       renderView: TabItemView\n    };\n\n    const component = render(<TabItem {...moduleProps} />);\n    expect(component).toMatchSnapshot();\n  });\n});\n\ndescribe('TabItemWithourDataAction', () => {\n  it('renders correctly', () => {\n    let moduleProps: ITabItemExtentedProps;\n    moduleProps = {\n      slots: slots,\n      tabItemType: TabItemType.TabContent,\n      itemIndex: 0,\n      isSelected: true,\n       ...buildMockModuleProps(mockActions, mockConfig) as ITabItemExtentedProps,\n       // @ts-ignore\n       renderView: TabItemView\n    };\n    // moduleProps.interactionStyle = interactionStyle.Independent;\n    const component = render(<TabItem {...moduleProps} />);\n    expect(component).toMatchSnapshot();\n  });\n});\n\ndescribe('TabItemWithInactiveContent', () => {\n  let moduleProps: ITabItemExtentedProps;\n\n  it('render hiddenContent ', () => {\n    moduleProps = {\n      slots: slots,\n      tabItemType: TabItemType.TabContent,\n      itemIndex: 0,\n      isSelected: true,\n       ...buildMockModuleProps(mockDataWithInactiveContent, mockActions, mockConfig) as ITabItemExtentedProps,\n       // @ts-ignore\n       renderView: TabItemView\n    };\n    // moduleProps.interactionStyle = interactionStyle.Independent;\n    const component = render(<TabItem {...moduleProps} />);\n    expect(component).toMatchSnapshot();\n  });\n});\n\ndescribe('TabItemHeader', () => {\n  let moduleProps: ITabItemExtentedProps;\n\n  it('render tabHeader ', () => {\n    moduleProps = {\n      slots: slots,\n      tabItemType: TabItemType.TabHeader,\n      itemIndex: 0,\n      isSelected: true,\n       ...buildMockModuleProps(mockDataWithInactiveContent, mockActions, mockConfig) as ITabItemExtentedProps,\n       // @ts-ignore\n       renderView: TabItemView\n    };\n    // moduleProps.interactionStyle = interactionStyle.Independent;\n    const component = render(<TabItem {...moduleProps} />);\n    expect(component).toMatchSnapshot();\n  });\n});\n"]}