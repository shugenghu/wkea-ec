{"version":3,"file":"integration.test.js","sourceRoot":"./src/","sources":["modules/tab/__tests__/integration.test.tsx"],"names":[],"mappings":"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","sourcesContent":["import { wrapInResolvedAsyncResult } from '@msdyn365-commerce-modules/retail-actions';\nimport { buildMockModuleProps } from '@msdyn365-commerce/core';\nimport { mount, render } from 'enzyme';\nimport * as React from 'react';\nimport { IActiveTabState } from '../../../data-actions/tab-state';\nimport TabItem, { ITabItemExtentedProps } from '../../tab-item/tab-item';\nimport { ITabItemConfig } from '../../tab-item/tab-item.props.autogenerated';\nimport TabItemView from '../../tab-item/tab-item.view';\nimport Tab from '../tab';\nimport { ITabData } from '../tab.data';\nimport {\n    HeadingTag,\n    ITabConfig,\n    ITabProps,\n} from '../tab.props.autogenerated';\nimport tabView from '../tab.view';\n\nconst mockTabData: ITabData = {\n    activeTabState: wrapInResolvedAsyncResult({\n        activeContentIndex: 2,\n        tabId: 'tab'\n    } as IActiveTabState)\n};\n\nconst mockTabData1: ITabData = {\n    activeTabState: wrapInResolvedAsyncResult({\n        activeContentIndex: 2,\n    } as IActiveTabState)\n};\n\nconst mockConfigWithoutTitle: ITabConfig = {\n    defaultTabIndex: 1,\n    className: 'tab'\n};\n\nconst mockConfigWithOutDefaultIndex: ITabConfig = {\n    heading: {\n        text: 'Mock heading 1',\n        tag: HeadingTag.h1\n    },\n    className: 'tab'\n};\n\nconst myReactNodeChild1: React.ReactNode = 'whatever child module 1';\nconst itemSlots = {\ntabItemContent: [myReactNodeChild1]\n        };\nconst itemmockConfig: ITabItemConfig = {\n    tabItemTitle: 'Tab Item Title0',\n    };\n\nlet tabItemmoduleProps: ITabItemExtentedProps;\ntabItemmoduleProps = {\n  slots: itemSlots,\n  ...buildMockModuleProps({}, itemmockConfig) as ITabItemExtentedProps,\n   // @ts-ignore\n   renderView: TabItemView\n};\nconst tabItemModule = <TabItem {...tabItemmoduleProps}/>;\n\nconst slots = {\n    tabItems: [tabItemModule]\n};\n\n// const mockConfigWithoutHeading: ITabConfig = {\n//     className: 'tab'\n// };\n\nconst myReactNodeChild2: React.ReactNode = 'whatever child module 2';\nconst itemSlots1 = {\ntabItemContent: [myReactNodeChild1, myReactNodeChild2]\n        };\n\nlet tabItemmoduleProps1: ITabItemExtentedProps;\ntabItemmoduleProps1 = {\n    slots: itemSlots1,\n    ...buildMockModuleProps({}, itemmockConfig) as ITabItemExtentedProps,\n    // @ts-ignore\n    renderView: TabItemView\n};\nconst tabItemModule1 = <TabItem {...tabItemmoduleProps1}/>;\nconst slots1 = {\n    tabItems: [tabItemModule, tabItemModule1]\n};\n\nconst mockActions = {};\n\ndescribe('Tab integration tests', () => {\n    it('renders correctly', () => {\n        const moduleProps: ITabProps<ITabData> = {\n            ...buildMockModuleProps(mockTabData, mockActions, mockConfigWithOutDefaultIndex) as ITabProps<ITabData>,\n            // @ts-ignore\n            renderView: tabView\n        };\n\n        const component = render(<Tab {...moduleProps} />);\n        expect(component).toMatchSnapshot();\n    });\n\n    it('renders correctly without title', () => {\n        const moduleProps: ITabProps<ITabData> = {\n            // slots: slots,\n            ...buildMockModuleProps(mockTabData, mockActions, mockConfigWithoutTitle) as ITabProps<ITabData>,\n            // @ts-ignore\n            renderView: tabView\n        };\n\n        const component = render(<Tab {...moduleProps} />);\n        expect(component).toMatchSnapshot();\n    });\n\n    it('componentDidUpdate doesn\\'t throw error -- Part 1', () => {\n        const moduleProps: ITabProps<ITabData> = {\n            slots: slots,\n            ...buildMockModuleProps(mockTabData, mockActions, mockConfigWithOutDefaultIndex) as ITabProps<ITabData>,\n            // @ts-ignore\n            renderView: tabView\n        };\n        moduleProps.id = 'tab';\n\n        const wrapper = mount((<Tab {...moduleProps} />));\n        const tab = wrapper.instance() as Tab;\n        expect(() => { tab.componentDidUpdate();}).not.toThrow();\n        wrapper.unmount();\n    });\n\n    it('componentDidUpdate doesn\\'t throw error -- Part 2', () => {\n        const moduleProps: ITabProps<ITabData> = {\n            slots: slots,\n            ...buildMockModuleProps(mockTabData1, mockActions, mockConfigWithOutDefaultIndex) as ITabProps<ITabData>,\n            // @ts-ignore\n            renderView: tabView\n        };\n        moduleProps.id = 'tab';\n\n        const wrapper = mount((<Tab {...moduleProps} />));\n        const tab = wrapper.instance() as Tab;\n        expect(() => { tab.componentDidUpdate();}).not.toThrow();\n        wrapper.unmount();\n    });\n\n    it('renders title and content', () => {\n        const moduleProps: ITabProps<ITabData> = {\n            slots: slots,\n            ...buildMockModuleProps(mockTabData, mockActions, mockConfigWithoutTitle) as ITabProps<ITabData>,\n            // @ts-ignore\n            renderView: tabView\n        };\n\n        const component = render(<Tab {...moduleProps} />);\n        expect(component).toMatchSnapshot();\n    });\n\n    it('should fire change active tab events', () => {\n        const moduleProps: ITabProps<ITabData> = {\n            slots: slots,\n            ...buildMockModuleProps(mockTabData, mockActions, mockConfigWithOutDefaultIndex) as ITabProps<ITabData>,\n            // @ts-ignore\n            renderView: tabView\n        };\n\n        const wrapper = mount((<Tab {...moduleProps} />));\n        const lis = wrapper.find('li');\n        expect(lis.length).toBe(1);\n        const tab1 = lis.first();\n\n        tab1.simulate('click');\n\n        wrapper.unmount();\n    });\n\n    it('should change tab index when left and right arrow is pressed', () => {\n        debugger;\n        const moduleProps: ITabProps<ITabData> = {\n            slots: slots1,\n            ...buildMockModuleProps(mockTabData, mockActions, mockConfigWithOutDefaultIndex) as ITabProps<ITabData>,\n            // @ts-ignore\n            renderView: tabView\n        };\n\n        const wrapper = mount((<Tab {...moduleProps} />));\n        const tabModule = wrapper.instance() as Tab;\n        const lis = wrapper.find('li');\n        expect(lis.length).toBe(2);\n        const tab1 = lis.first();\n        const tab2 = lis.last();\n\n        expect(tabModule.state.currentTabIndex).toBe(0);\n\n        tab1.simulate('keyDown', { keyCode: 13});\n        expect(tabModule.state.currentTabIndex).toBe(0);\n        tab1.simulate('keyDown', { keyCode: 39});\n        expect(tabModule.state.currentTabIndex).toBe(1);\n        tab2.simulate('keyDown', { keyCode: 37});\n        expect(tabModule.state.currentTabIndex).toBe(0);\n        wrapper.unmount();\n    });\n});"]}