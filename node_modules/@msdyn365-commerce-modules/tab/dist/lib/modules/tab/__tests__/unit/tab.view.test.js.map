{"version":3,"file":"tab.view.test.js","sourceRoot":"./src/","sources":["modules/tab/__tests__/unit/tab.view.test.tsx"],"names":[],"mappings":"AACA,OAAO,EAAE,oBAAoB,EAAE,MAAM,yBAAyB,CAAC;AAC/D,OAAO,EAAE,MAAM,EAAE,MAAM,QAAQ,CAAC;AAChC,OAAO,KAAK,KAAK,MAAM,OAAO,CAAC;AAG/B,OAAO,OAAO,MAAM,gBAAgB,CAAC;AAErC,QAAQ,CAAC,uBAAuB,EAAE,GAAG,EAAE;IACnC,EAAE,CAAC,mBAAmB,EAAE,GAAG,EAAE;QACzB,MAAM,WAAW,GAAkB,oBAAoB,CAAC,EAAE,EAAE,EAAE,CAAkB,CAAC;QACjF,MAAM,iBAAiB,GAAoB,yBAAyB,CAAC;QACrE,MAAM,iBAAiB,GAAoB,yBAAyB,CAAC;QACrE,WAAW,CAAC,KAAK,GAAG,EAAC,QAAQ,EAAE,CAAC,iBAAiB,EAAE,iBAAiB,CAAC,EAAC,CAAC;QACvE,MAAM,SAAS,GAAkB;YAC7B,GAAG,WAAW;YACd,OAAO,EAAE,oBAAoB;YAC3B,YAAY,EAAE;gBACZ,WAAW;gBACX,SAAS,EAAE,QAAQ;aACpB;YACD,aAAa,EAAE,EAAC,SAAS,EAAE,uBAAuB,EAAC;YACnD,gBAAgB,EAAE,EAAC,SAAS,EAAE,uBAAuB,EAAC;YACtD,WAAW,EAAE,EAAC,SAAS,EAAE,qBAAqB,EAAC;YAC/C,gBAAgB,EAAE;gBAChB,GAAG,EAAE,KAAgB;gBACrB,SAAS,EAAE,qBAAqB;aACjC;YACD,WAAW,EAAG,eAAe;YAC7B,UAAU,EAAE,cAAc;SAC/B,CAAC;QACF,MAAM,SAAS,GAAG,MAAM,CAAC,oBAAC,OAAO,oBAAK,SAAS,EAAI,CAAC,CAAC;QACrD,MAAM,CAAC,SAAS,CAAC,CAAC,eAAe,EAAE,CAAC;IACxC,CAAC,CAAC,CAAC;IACH,EAAE,CAAC,aAAa,EAAE,GAAG,EAAE;QACrB,MAAM,WAAW,GAAkB,oBAAoB,CAAC,EAAE,EAAE,EAAE,CAAkB,CAAC;QACjF,MAAM,iBAAiB,GAAoB,yBAAyB,CAAC;QACrE,MAAM,iBAAiB,GAAoB,yBAAyB,CAAC;QACrE,WAAW,CAAC,KAAK,GAAG,EAAC,QAAQ,EAAE,CAAC,iBAAiB,EAAE,iBAAiB,CAAC,EAAC,CAAC;QACvE,MAAM,SAAS,GAAkB;YAC7B,GAAG,WAAW;YACd,OAAO,EAAE,EAAE;YACT,YAAY,EAAE;gBACZ,WAAW;gBACX,SAAS,EAAE,QAAQ;aACpB;YACD,WAAW,EAAE,EAAC,SAAS,EAAE,qBAAqB,EAAC;YAC/C,gBAAgB,EAAE,EAAC,SAAS,EAAE,uBAAuB,EAAC;YACtD,aAAa,EAAE,EAAC,SAAS,EAAE,uBAAuB,EAAC;YACnD,gBAAgB,EAAE;gBAChB,GAAG,EAAE,KAAgB;gBACrB,SAAS,EAAE,qBAAqB;aACjC;YACD,WAAW,EAAG,EAAE;YAChB,UAAU,EAAE,EAAE;SACnB,CAAC;QACF,MAAM,SAAS,GAAG,MAAM,CAAC,oBAAC,OAAO,oBAAK,SAAS,EAAI,CAAC,CAAC;QACrD,MAAM,CAAC,SAAS,CAAC,CAAC,eAAe,EAAE,CAAC;IACxC,CAAC,CAAC,CAAC;AACL,CAAC,CAAC,CAAC","sourcesContent":["import { NodeTag } from '@msdyn365-commerce-modules/utilities';\nimport { buildMockModuleProps } from '@msdyn365-commerce/core';\nimport { render } from 'enzyme';\nimport * as React from 'react';\nimport { ITabViewProps } from '../../tab';\nimport { ITabProps } from '../../tab.props.autogenerated';\nimport TabView from '../../tab.view';\n\ndescribe('tab unit tests - View', () => {\n    it('renders correctly', () => {\n        const moduleProps: ITabProps<{}> = buildMockModuleProps({}, {}) as ITabProps<{}>;\n        const myReactNodeChild1: React.ReactNode = `whatever child module 1`;\n        const myReactNodeChild2: React.ReactNode = `whatever child module 1`;\n        moduleProps.slots = {tabItems: [myReactNodeChild1, myReactNodeChild2]};\n        const mockProps: ITabViewProps = {\n            ...moduleProps,\n            heading: '{HeadingComponent}',\n              TabContainer: {\n                moduleProps,\n                className: 'ms-tab'\n              },\n              headerSection: {className: 'ms-tab-header-section'},\n              tabHeaderSection: {className: 'ms-tab-header-section'},\n              tabsSection: {className: 'ms-tab-tabs-section'},\n              tabItemContainer: {\n                tag: 'div' as NodeTag,\n                className: 'ms-tab-item-section',\n              },\n              tabContents:  '{tabContents}',\n              tabHeaders: '{tabHeaders}',\n        };\n        const component = render(<TabView {...mockProps} />);\n        expect(component).toMatchSnapshot();\n    });\n    it('render null', () => {\n      const moduleProps: ITabProps<{}> = buildMockModuleProps({}, {}) as ITabProps<{}>;\n      const myReactNodeChild1: React.ReactNode = `whatever child module 1`;\n      const myReactNodeChild2: React.ReactNode = `whatever child module 1`;\n      moduleProps.slots = {tabItems: [myReactNodeChild1, myReactNodeChild2]};\n      const mockProps: ITabViewProps = {\n          ...moduleProps,\n          heading: '',\n            TabContainer: {\n              moduleProps,\n              className: 'ms-tab'\n            },\n            tabsSection: {className: 'ms-tab-tabs-section'},\n            tabHeaderSection: {className: 'ms-tab-header-section'},\n            headerSection: {className: 'ms-tab-header-section'},\n            tabItemContainer: {\n              tag: 'div' as NodeTag,\n              className: 'ms-tab-item-section',\n            },\n            tabContents:  '',\n            tabHeaders: '',\n      };\n      const component = render(<TabView {...mockProps} />);\n      expect(component).toMatchSnapshot();\n  });\n});"]}