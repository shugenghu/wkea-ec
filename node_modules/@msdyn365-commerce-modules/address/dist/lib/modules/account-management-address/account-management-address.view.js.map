{"version":3,"file":"account-management-address.view.js","sourceRoot":"./src/","sources":["modules/account-management-address/account-management-address.view.tsx"],"names":[],"mappings":"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","sourcesContent":["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nimport { Module, Node } from '@msdyn365-commerce-modules/utilities';\nimport * as React from 'react';\n\nimport { IAddressAddItem, IAddressAddUpdateProps } from '../../common/components/address-add';\nimport { IAddressList, IAddressListItem, IAddressListProps } from '../../common/components/address-list';\nimport { IAddressShowItem, IAddressShowProps } from '../../common/components/address-show';\nimport { IAccountManagementAddressViewProps } from './account-management-address';\n\nconst AddressShow: React.FC<IAddressShowProps> = ({\n    AddressDetail,\n    items\n}) => {\n\n    return (\n        <Node {...AddressDetail}>\n            {items && items.map((item: IAddressShowItem) => {\n                return (\n                    <>\n                        {item.description}\n                    </>\n                );\n            })}\n        </Node>\n    );\n};\n\nconst AddressList: React.FC<IAddressList> = ({\n    List,\n    isShowList,\n    heading,\n    items\n}) => {\n\n    if (!isShowList) {\n        return null;\n    }\n\n    return (\n        <Node {...List}>\n            {heading}\n            {items && items.map((item: IAddressListItem) => {\n                const { Item, key, error, showItems, isShowPrimaryButton, primaryButton, editButton, removeButton } = item;\n                const { Error, isShowError, title, message } = error;\n                return (<Node {...Item} key={key}>\n                    <AddressShow  {...showItems} />\n                    {isShowError && <Node {...Error}>\n                        {title}\n                        {message}\n                    </Node>}\n                    {isShowPrimaryButton && primaryButton}\n                    {editButton}\n                    {removeButton}\n                </Node>);\n            })}\n        </Node>\n    );\n};\n\nconst AddressLists: React.FC<IAddressListProps> = ({\n    ListAddress,\n    heading,\n    isShowEmptyListMessage,\n    emptyListMessage,\n    addButton,\n    primaryAddressList,\n    otherAddressList\n}) => {\n\n    return (\n        <Node {...ListAddress}>\n            {heading}\n            {isShowEmptyListMessage && emptyListMessage}\n            {addButton}\n            <AddressList {...primaryAddressList} />\n            <AddressList {...otherAddressList} />\n        </Node>\n    );\n};\n\nconst AddressAddUpdate: React.FC<IAddressAddUpdateProps> = ({\n    AddressForm,\n    heading,\n    items,\n    hasError,\n    error,\n    isShowSaveButton,\n    saveButton,\n    isShowCancelButton,\n    cancelButton,\n}) => {\n\n    return (\n        <Node {...AddressForm}>\n            {heading}\n            {items && items.map((item: IAddressAddItem) => {\n                const { AddressItem, key, label, alert, input } = item;\n                return (<Node {...AddressItem} key={key}>\n                    {label}\n                    {alert}\n                    {input}\n                </Node>);\n            })}\n            {hasError && <Node {...error.AddressError}>\n                {error.title}\n                {error.message}\n            </Node>}\n            {isShowSaveButton && saveButton}\n            {isShowCancelButton && cancelButton}\n        </Node>\n    );\n};\n\nconst AccountManagementAddressView: React.FC<IAccountManagementAddressViewProps> = props => {\n    const { AccountAddressManagement, viewState, showAddressList, showAddOrUpdateAddress } = props;\n\n    return (\n        <Module {...AccountAddressManagement}>\n            {viewState.isShowAddresList && <AddressLists {...showAddressList} />}\n            {viewState.isShowAddOrUpdateAddress && <AddressAddUpdate {...showAddOrUpdateAddress} />}\n        </Module>\n    );\n};\n\nexport default AccountManagementAddressView;\n"]}