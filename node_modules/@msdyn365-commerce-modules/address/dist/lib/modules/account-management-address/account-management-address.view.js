import { Module, Node } from '@msdyn365-commerce-modules/utilities';
import * as React from 'react';
const AddressShow = ({ AddressDetail, items }) => {
    return (React.createElement(Node, Object.assign({}, AddressDetail), items && items.map((item) => {
        return (React.createElement(React.Fragment, null, item.description));
    })));
};
const AddressList = ({ List, isShowList, heading, items }) => {
    if (!isShowList) {
        return null;
    }
    return (React.createElement(Node, Object.assign({}, List),
        heading,
        items && items.map((item) => {
            const { Item, key, error, showItems, isShowPrimaryButton, primaryButton, editButton, removeButton } = item;
            const { Error, isShowError, title, message } = error;
            return (React.createElement(Node, Object.assign({}, Item, { key: key }),
                React.createElement(AddressShow, Object.assign({}, showItems)),
                isShowError && React.createElement(Node, Object.assign({}, Error),
                    title,
                    message),
                isShowPrimaryButton && primaryButton,
                editButton,
                removeButton));
        })));
};
const AddressLists = ({ ListAddress, heading, isShowEmptyListMessage, emptyListMessage, addButton, primaryAddressList, otherAddressList }) => {
    return (React.createElement(Node, Object.assign({}, ListAddress),
        heading,
        isShowEmptyListMessage && emptyListMessage,
        addButton,
        React.createElement(AddressList, Object.assign({}, primaryAddressList)),
        React.createElement(AddressList, Object.assign({}, otherAddressList))));
};
const AddressAddUpdate = ({ AddressForm, heading, items, hasError, error, isShowSaveButton, saveButton, isShowCancelButton, cancelButton, }) => {
    return (React.createElement(Node, Object.assign({}, AddressForm),
        heading,
        items && items.map((item) => {
            const { AddressItem, key, label, alert, input } = item;
            return (React.createElement(Node, Object.assign({}, AddressItem, { key: key }),
                label,
                alert,
                input));
        }),
        hasError && React.createElement(Node, Object.assign({}, error.AddressError),
            error.title,
            error.message),
        isShowSaveButton && saveButton,
        isShowCancelButton && cancelButton));
};
const AccountManagementAddressView = props => {
    const { AccountAddressManagement, viewState, showAddressList, showAddOrUpdateAddress } = props;
    return (React.createElement(Module, Object.assign({}, AccountAddressManagement),
        viewState.isShowAddresList && React.createElement(AddressLists, Object.assign({}, showAddressList)),
        viewState.isShowAddOrUpdateAddress && React.createElement(AddressAddUpdate, Object.assign({}, showAddOrUpdateAddress))));
};
export default AccountManagementAddressView;
//# sourceMappingURL=account-management-address.view.js.map