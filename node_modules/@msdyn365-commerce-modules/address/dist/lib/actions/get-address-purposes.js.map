{"version":3,"file":"get-address-purposes.js","sourceRoot":"./src/","sources":["actions/get-address-purposes.ts"],"names":[],"mappings":"AAAA,OAAO,EAAE,aAAa,EAAE,MAAM,2CAA2C,CAAC;AAC1E,OAAO,EACQ,0BAA0B,EAExC,MAAM,yBAAyB,CAAC;AACjC,OAAO,EACH,uBAAuB,EAC1B,MAAM,+EAA+E,CAAC;AAMvF,MAAM,OAAO,uBAAuB;IAGhC,YAAY,WAAiC;QAItC,gBAAW,GAAG,GAAG,EAAE,CAAC,aAAa,CAAC,gBAAgB,EAAE,IAAI,CAAC,WAAW,CAAC,CAAC;QACtE,uBAAkB,GAAG,GAAG,EAAE,CAAC,gBAAgB,CAAC;QAC5C,kBAAa,GAAG,GAAc,EAAE,CAAC,SAAS,CAAC;QAL9C,IAAI,CAAC,WAAW,GAAG,WAAW,CAAC;IACnC,CAAC;CAKJ;AAKD,MAAM,WAAW,GAAG,CAAC,SAA+C,EAA2B,EAAE;IAC7F,OAAO,IAAI,uBAAuB,CAAC,SAAS,CAAC,cAAc,CAAC,WAAW,CAAC,CAAC;AAC7E,CAAC,CAAC;AAEF,MAAM,CAAC,KAAK,UAAU,wBAAwB,CAAC,KAA8B,EAAE,GAAmB;IAC9F,OAAO,uBAAuB,CAAC,EAAE,aAAa,EAAE,GAAG,EAAE,mBAAmB,EAAE,EAAE,EAAE,CAAC,CAAC;AACpF,CAAC;AAED,eAAe,0BAA0B,CAAC;IACtC,EAAE,EAAE,yDAAyD;IAC7D,MAAM,EAA6B,wBAAwB;IAC3D,KAAK,EAAE,WAAW;CACrB,CAAC,CAAC","sourcesContent":["import { buildCacheKey } from '@msdyn365-commerce-modules/retail-actions';\nimport {\n    CacheType, createObservableDataAction, IAction, IActionContext, IActionInput, IAny,\n    ICommerceApiSettings, ICreateActionContext, IGeneric\n} from '@msdyn365-commerce/core';\nimport {\n    getAddressPurposesAsync\n} from '@msdyn365-commerce/retail-proxy/dist/DataActions/StoreOperationsDataActions.g';\nimport { AddressPurpose } from '@msdyn365-commerce/retail-proxy/dist/Entities/CommerceTypes.g';\n\n/**\n * Input class for get Address Purposes data action\n */\nexport class GetAddressPurposesInput implements IActionInput {\n    private apiSettings: ICommerceApiSettings;\n\n    constructor(apiSettings: ICommerceApiSettings) {\n        this.apiSettings = apiSettings;\n    }\n\n    public getCacheKey = () => buildCacheKey('AddressPurpose', this.apiSettings);\n    public getCacheObjectType = () => 'AddressPurpose';\n    public dataCacheType = (): CacheType => 'request';\n}\n\n/**\n * Creates the input required to make the retail api call\n */\nconst createInput = (inputData: ICreateActionContext<IGeneric<IAny>>): GetAddressPurposesInput => {\n    return new GetAddressPurposesInput(inputData.requestContext.apiSettings);\n};\n\nexport async function getAddressPurposesAction(input: GetAddressPurposesInput, ctx: IActionContext): Promise<AddressPurpose[]> {\n    return getAddressPurposesAsync({ callerContext: ctx, queryResultSettings: {} });\n}\n\nexport default createObservableDataAction({\n    id: '@msdyn365-commerce-modules/address/get-address-purposes',\n    action: <IAction<AddressPurpose[]>>getAddressPurposesAction,\n    input: createInput\n});\n"]}