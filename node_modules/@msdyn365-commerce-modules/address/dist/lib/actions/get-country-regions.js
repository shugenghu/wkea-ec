import { buildCacheKey } from '@msdyn365-commerce-modules/retail-actions';
import { createObservableDataAction } from '@msdyn365-commerce/core';
import { getCountryRegionsByLanguageIdAsync } from '@msdyn365-commerce/retail-proxy/dist/DataActions/StoreOperationsDataActions.g';
export class GetCountryRegionsInput {
    constructor(locale, apiSettings) {
        this.getCacheKey = () => buildCacheKey(`CountryRegionInfo-${this.locale}`, this.apiSettings);
        this.getCacheObjectType = () => 'CountryRegionInfo';
        this.dataCacheType = () => 'request';
        this.locale = locale;
        this.apiSettings = apiSettings;
    }
}
const createInput = (inputData) => {
    if (!(inputData.requestContext && inputData.requestContext.locale)) {
        throw new Error('Unable to create country regions input.  Locale is not provided.');
    }
    return new GetCountryRegionsInput(inputData.requestContext.locale, inputData.requestContext.apiSettings);
};
export async function getCountryRegionsAction(input, ctx) {
    return getCountryRegionsByLanguageIdAsync({ callerContext: ctx, queryResultSettings: {} }, input.locale);
}
export default createObservableDataAction({
    action: getCountryRegionsAction,
    input: createInput
});
//# sourceMappingURL=get-country-regions.js.map