{"version":3,"file":"address-meta-data.js","sourceRoot":"./src/","sources":["common/address-meta-data.ts"],"names":[],"mappings":"AAAA,OAAO,EACH,sBAAsB,EAAE,eAAe,EAAE,yBAAyB,EAErE,MAAM,uBAAuB,CAAC;AAM/B,MAAM,OAAO,eAAe;IAUxB,YAAY,SAA2B,EAAE,QAA4B,EAAE,QAA4B;QAR3F,aAAQ,GAAmB,EAAE,CAAC;QAE9B,uBAAkB,GAAW,KAAK,CAAC;QACnC,oBAAe,GAAW,SAAS,CAAC;QACpC,cAAS,GAAW,EAAE,CAAC;QAK3B,IAAI,CAAC,SAAS,GAAG,SAAS,IAAI,EAAE,CAAC;QACjC,IAAI,CAAC,aAAa,GAAG,QAAQ,IAAI,EAAE,CAAC;QACpC,IAAI,CAAC,cAAc,GAAG,QAAQ,KAAK,SAAS,CAAC,CAAC,CAAC,QAAQ,CAAC,CAAC,CAAC,CAAC,eAAe,CAAC,IAAI,EAAE,eAAe,CAAC,OAAO,EAAE,eAAe,CAAC,IAAI,EAAE,eAAe,CAAC,KAAK,EAAE,eAAe,CAAC,wBAAwB,EAAE,eAAe,CAAC,MAAM,CAAC,CAAC;QACzN,IAAI,CAAC,KAAK,EAAE,CAAC;IACjB,CAAC;IAEM,aAAa,CAAC,EAAU;QAC3B,OAAO,IAAI,CAAC,QAAQ,CAAC,IAAI,CAAC,CAAC,IAAI,EAAE,EAAE;YAC/B,OAAO,IAAI,CAAC,IAAI,KAAK,EAAE,CAAC;QAC5B,CAAC,CAAC,CAAC;IACP,CAAC;IAEO,KAAK;QACT,IAAI,CAAC,QAAQ,CAAC,eAAe,CAAC,IAAI,EAAE,sBAAsB,CAAC,KAAK,CAAC,CAAC;QAClE,IAAI,CAAC,QAAQ,CAAC,eAAe,CAAC,KAAK,EAAE,sBAAsB,CAAC,KAAK,CAAC,CAAC;QACnE,IAAI,CAAC,QAAQ,CAAC,eAAe,CAAC,OAAO,EAAE,sBAAsB,CAAC,KAAK,CAAC,CAAC;QACrE,IAAI,CAAC,QAAQ,CAAC,eAAe,CAAC,IAAI,EAAE,sBAAsB,CAAC,KAAK,CAAC,CAAC;QAClE,IAAI,CAAC,QAAQ,CAAC,eAAe,CAAC,MAAM,EAAE,sBAAsB,CAAC,KAAK,CAAC,CAAC;QACpE,IAAI,CAAC,QAAQ,CAAC,eAAe,CAAC,KAAK,EAAE,sBAAsB,CAAC,QAAQ,CAAC,CAAC;QACtE,IAAI,CAAC,QAAQ,CAAC,eAAe,CAAC,wBAAwB,EAAE,sBAAsB,CAAC,QAAQ,CAAC,CAAC;QACzF,IAAI,CAAC,QAAQ,CAAC,eAAe,CAAC,MAAM,EAAE,sBAAsB,CAAC,KAAK,CAAC,CAAC;QACpE,IAAI,CAAC,QAAQ,CAAC,eAAe,CAAC,QAAQ,EAAE,sBAAsB,CAAC,KAAK,CAAC,CAAC;QACtE,IAAI,CAAC,QAAQ,CAAC,eAAe,CAAC,YAAY,EAAE,sBAAsB,CAAC,KAAK,CAAC,CAAC;QAC1E,IAAI,CAAC,QAAQ,CAAC,eAAe,CAAC,kBAAkB,EAAE,sBAAsB,CAAC,KAAK,CAAC,CAAC;QAChF,IAAI,CAAC,QAAQ,CAAC,eAAe,CAAC,OAAO,EAAE,sBAAsB,CAAC,KAAK,CAAC,CAAC;QACrE,IAAI,CAAC,QAAQ,CAAC,eAAe,CAAC,QAAQ,EAAE,sBAAsB,CAAC,KAAK,CAAC,CAAC;QACtE,IAAI,CAAC,QAAQ,CAAC,eAAe,CAAC,OAAO,EAAE,sBAAsB,CAAC,KAAK,CAAC,CAAC;QACrE,IAAI,CAAC,QAAQ,CAAC,eAAe,CAAC,kBAAkB,EAAE,sBAAsB,CAAC,KAAK,CAAC,CAAC;QAChF,IAAI,CAAC,QAAQ,CAAC,eAAe,CAAC,gBAAgB,EAAE,sBAAsB,CAAC,QAAQ,CAAC,CAAC;QACjF,IAAI,CAAC,QAAQ,CAAC,eAAe,CAAC,SAAS,EAAE,sBAAsB,CAAC,QAAQ,CAAC,CAAC;IAC9E,CAAC;IAEO,QAAQ,CAAC,IAAqB,EAAE,WAAmC;QACvE,IAAI,IAAI,CAAC,aAAa,CAAC,QAAQ,CAAC,IAAI,CAAC,EAAE;YACnC,OAAO;SACV;QAED,MAAM,OAAO,GAAG,eAAe,CAAC,IAAI,CAAC,CAAC,OAAO,CAAC,GAAG,EAAE,EAAE,CAAC,CAAC;QAGvD,MAAM,eAAe,GAAG,IAAI,CAAC,gBAAgB,CAAC,IAAI,EAAE,OAAO,CAAC,CAAC;QAC7D,IAAI,UAAU,GAAG,KAAK,CAAC;QACvB,eAAe,CAAC,OAAO,CAAC,IAAI,CAAC,EAAE;YAC3B,IAAI,IAAI,CAAC,IAAI,KAAK,yBAAyB,CAAC,QAAQ,EAAE;gBAClD,UAAU,GAAG,IAAI,CAAC;aACrB;QACL,CAAC,CAAC,CAAC;QAGH,MAAM,cAAc,GAAG,IAAI,CAAC,SAAS,CAAC,GAAG,IAAI,CAAC,eAAe,GAAG,OAAO,eAAe,CAAC,IAAI,IAAI,CAAC,SAAS,CAAC,GAAG,IAAI,CAAC,eAAe,GAAG,OAAO,OAAO,CAAC,CAAC;QACpJ,MAAM,IAAI,GAAiB;YACvB,IAAI;YACJ,WAAW;YACX,IAAI,EAAE,eAAe,CAAC,IAAI,CAAC;YAC3B,KAAK,EAAE,UAAU,CAAC,CAAC,CAAC,IAAI,CAAC,SAAS,CAAC,GAAG,IAAI,CAAC,eAAe,GAAG,OAAO,OAAO,CAAC,CAAC,CAAC,CAAC,cAAc;YAC7F,SAAS,EAAE,IAAI,CAAC,SAAS;YACzB,eAAe,EAAE,eAAe;YAChC,SAAS,EAAE,IAAI;SAClB,CAAC;QAEF,IAAI,CAAC,QAAQ,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;IAC7B,CAAC;IAEO,gBAAgB,CAAC,IAAqB,EAAE,IAAY;QACxD,MAAM,eAAe,GAA6B,EAAE,CAAC;QAErD,KAAK,MAAM,QAAQ,IAAI,MAAM,CAAC,IAAI,CAAC,yBAAyB,CAAC,EAAE;YAC3D,MAAM,GAAG,GAAG,GAAG,IAAI,CAAC,eAAe,GAAG,IAAI,GAAG,QAAQ,EAAE,CAAC;YACxD,MAAM,OAAO,GAAG,IAAI,CAAC,SAAS,CAAC,GAAG,GAAG,cAAc,CAAC,CAAC;YACrD,QAAQ,QAAQ,EAAE;gBACd,KAAK,yBAAyB,CAAC,QAAQ,CAAC,CAAC;oBACrC,IAAI,IAAI,CAAC,cAAc,CAAC,IAAI,CAAC,CAAC,QAAyB,EAAE,EAAE,CAAC,QAAQ,KAAK,IAAI,CAAC,EAAE;wBAC5E,eAAe,CAAC,IAAI,CAAC,IAAI,CAAC,eAAe,CAAC,QAAQ,EAAE,IAAI,CAAC,kBAAkB,EAAE,OAAO,CAAC,CAAC,CAAC;qBAC1F;oBACD,MAAM;iBACT;gBACD,QAAQ;aACX;SACJ;QACD,OAAO,eAAe,CAAC;IAC3B,CAAC;IAEO,eAAe,CAAC,IAA+B,EAAE,KAAa,EAAE,OAAe;QACnF,OAAO;YACH,IAAI;YACJ,KAAK;YACL,OAAO;SACV,CAAC;IACN,CAAC;CAEJ","sourcesContent":["import {\n    AddressItemDisplayType, AddressItemType, AddressValidationRuleType, IAddressItem,\n    IAddressValidationRule\n} from './address-format.data';\nimport { IAddressResource } from './address-module.data';\n\n/**\n * Address meta data\n */\nexport class AddressMetaData {\n\n    private metaData: IAddressItem[] = [];\n    private resources: IAddressResource;\n    private requiredFieldRegEx: string = '\\\\S';\n    private resourcesPrefix: string = 'address';\n    private maxLength: number = 64;\n    private requiredFields: AddressItemType[];\n    private excludedTypes: AddressItemType[];\n\n    constructor(resources: IAddressResource, excluded?: AddressItemType[], required?: AddressItemType[]) {\n        this.resources = resources || {};\n        this.excludedTypes = excluded || [];\n        this.requiredFields = required !== undefined ? required : [AddressItemType.Name, AddressItemType.ZipCode, AddressItemType.City, AddressItemType.State, AddressItemType.ThreeLetterISORegionName, AddressItemType.Street];\n        this._init();\n    }\n\n    public getItemFormat(id: number): IAddressItem | undefined {\n        return this.metaData.find((item) => {\n            return item.type === id;\n        });\n    }\n\n    private _init(): void {\n        this._addItem(AddressItemType.Name, AddressItemDisplayType.Input);\n        this._addItem(AddressItemType.Phone, AddressItemDisplayType.Input);\n        this._addItem(AddressItemType.ZipCode, AddressItemDisplayType.Input);\n        this._addItem(AddressItemType.City, AddressItemDisplayType.Input);\n        this._addItem(AddressItemType.County, AddressItemDisplayType.Input);\n        this._addItem(AddressItemType.State, AddressItemDisplayType.Dropdown);\n        this._addItem(AddressItemType.ThreeLetterISORegionName, AddressItemDisplayType.Dropdown);\n        this._addItem(AddressItemType.Street, AddressItemDisplayType.Input);\n        this._addItem(AddressItemType.District, AddressItemDisplayType.Input);\n        this._addItem(AddressItemType.StreetNumber, AddressItemDisplayType.Input);\n        this._addItem(AddressItemType.BuildingCompliment, AddressItemDisplayType.Input);\n        this._addItem(AddressItemType.Postbox, AddressItemDisplayType.Input);\n        this._addItem(AddressItemType.House_RU, AddressItemDisplayType.Input);\n        this._addItem(AddressItemType.Flat_RU, AddressItemDisplayType.Input);\n        this._addItem(AddressItemType.CountryOKSMCode_RU, AddressItemDisplayType.Input);\n        this._addItem(AddressItemType.AddressTypeValue, AddressItemDisplayType.Dropdown);\n        this._addItem(AddressItemType.IsPrimary, AddressItemDisplayType.Checkbox);\n    }\n\n    private _addItem(type: AddressItemType, displayType: AddressItemDisplayType): void {\n        if (this.excludedTypes.includes(type)) {\n            return;\n        }\n\n        const nameKey = AddressItemType[type].replace('_', '');\n\n        // find out if currentItem is required field\n        const validationRules = this._validationRules(type, nameKey);\n        let isRequired = false;\n        validationRules.forEach(rule => {\n            if (rule.type === AddressValidationRuleType.Required) {\n                isRequired = true;\n            }\n        });\n\n        // if no optional string is provided in resource file, use the original label text\n        const optionalString = this.resources[`${this.resourcesPrefix}${nameKey}LabelOptional`] || this.resources[`${this.resourcesPrefix}${nameKey}Label`];\n        const item: IAddressItem = {\n            type,\n            displayType,\n            name: AddressItemType[type],\n            label: isRequired ? this.resources[`${this.resourcesPrefix}${nameKey}Label`] : optionalString,\n            maxLength: this.maxLength,\n            validationRules: validationRules,\n            isNewLine: true\n        };\n\n        this.metaData.push(item);\n    }\n\n    private _validationRules(type: AddressItemType, name: string): IAddressValidationRule[] {\n        const validationRules: IAddressValidationRule[] = [];\n\n        for (const ruleType of Object.keys(AddressValidationRuleType)) {\n            const key = `${this.resourcesPrefix}${name}${ruleType}`;\n            const message = this.resources[`${key}ErrorMessage`];\n            switch (ruleType) {\n                case AddressValidationRuleType.Required: {\n                    if (this.requiredFields.find((itemType: AddressItemType) => itemType === type)) {\n                        validationRules.push(this._validationRule(ruleType, this.requiredFieldRegEx, message));\n                    }\n                    break;\n                }\n                default:\n            }\n        }\n        return validationRules;\n    }\n\n    private _validationRule(type: AddressValidationRuleType, regEx: string, message: string): IAddressValidationRule {\n        return {\n            type,\n            regEx,\n            message\n        };\n    }\n\n}"]}