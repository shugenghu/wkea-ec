{"version":3,"file":"address-select.js","sourceRoot":"./src/","sources":["common/components/address-select.tsx"],"names":[],"mappings":"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","sourcesContent":["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nimport * as React from 'react';\n\nimport { INodeProps, ITelemetryContent } from '@msdyn365-commerce-modules/utilities';\nimport { Address, AddressPurpose } from '@msdyn365-commerce/retail-proxy/dist/Entities/CommerceTypes.g';\n\nimport { AddressFormat } from '../../common/address-format';\nimport { IAddressResource } from '../../common/address-module.data';\nimport AddressButtonComponent from './address-button';\nimport AddressInputComponent from './address-input';\nimport { AddressShow, IAddressShowProps } from './address-show';\n\nexport interface IAddressSelectInputProps {\n    hasExternalSubmitGroup?: boolean;\n    addressFormat: AddressFormat;\n    addresses: Address[];\n    addressPurposes: AddressPurpose[];\n    resources: IAddressResource;\n    selectedAddress: Address;\n    telemetryContent?: ITelemetryContent;\n    onAddressOptionChange(event: React.ChangeEvent<HTMLInputElement>): void;\n    onAddAddress(): void;\n    onSave(): void;\n    onCancel(): void;\n}\n\nexport interface IAddressSelectItem {\n    key: number;\n    SelectItem: INodeProps;\n    input: React.ReactNode;\n    showItems: IAddressShowProps;\n}\n\nexport interface IAddressSelectProps {\n    SelectAddress: INodeProps;\n    addButton: React.ReactNode;\n    items: IAddressSelectItem[];\n    isShowSaveButton: boolean;\n    saveButton: React.ReactNode;\n    isShowCancelButton: boolean;\n    cancelButton: React.ReactNode;\n}\n\nconst getInput = (index: number, address: Address, props: IAddressSelectInputProps): React.ReactNode => {\n    const { addresses, onAddressOptionChange, selectedAddress } = props;\n\n    const ichecked = address.RecordId === selectedAddress.RecordId;\n    const additionalAttributes = {\n        checked: ichecked,\n        'aria-checked': ichecked,\n        'aria-setsize': addresses.length,\n        'aria-posinset': index + 1\n    };\n\n    return (\n        <AddressInputComponent\n            {\n            ...{\n                className: 'msc-address-select',\n                name: 'selectAddressOptions',\n                type: 'radio',\n                value: (address.RecordId || '').toString(),\n                onChange: onAddressOptionChange,\n                additionalAddributes: additionalAttributes,\n                telemetryContent: props.telemetryContent\n            }\n            }\n        />\n    );\n};\n\nconst getAddressSelectItems = (props: IAddressSelectInputProps): IAddressSelectItem[] => {\n    const { addresses, addressFormat, addressPurposes } = props;\n\n    return addresses.map((address, index) => {\n        return {\n            key: address.RecordId || 0,\n            SelectItem: { className: 'msc-address-select__item' },\n            input: getInput(index, address, props),\n            showItems: AddressShow({ addressFormat: addressFormat.getAddressFormat(address.ThreeLetterISORegionName || ''), address: address, addressPurposes: addressPurposes})\n        };\n    });\n};\n\nexport const AddressSelect = (props: IAddressSelectInputProps): IAddressSelectProps => {\n    const { resources, onCancel, onSave, onAddAddress, hasExternalSubmitGroup } = props;\n\n    return {\n        SelectAddress: { className: 'msc-address-select' },\n        addButton: (\n            <AddressButtonComponent\n                {\n                ...{\n                    className: 'msc-address-select__button-add',\n                    text: resources.addressAddButtonText,\n                    ariaLabel: resources.addressAddButtonAriaLabel,\n                    onClick: onAddAddress,\n                    telemetryContent: props.telemetryContent\n                }\n                }\n            />\n        ),\n        isShowSaveButton: !hasExternalSubmitGroup,\n        saveButton: (\n            <AddressButtonComponent\n                {\n                ...{\n                    className: 'msc-address-select__button-save',\n                    text: resources.addressSaveButtonText,\n                    ariaLabel: resources.addressSaveButtonAriaLabel,\n                    onClick: onSave,\n                    telemetryContent: props.telemetryContent\n                }\n                }\n            />\n        ),\n        isShowCancelButton: !hasExternalSubmitGroup,\n        cancelButton: (\n            <AddressButtonComponent\n                {\n                ...{\n                    className: 'msc-address-select__button-cancel',\n                    text: resources.addressCancelButtonText,\n                    ariaLabel: resources.addressCancelButtonAriaLabel,\n                    onClick: onCancel,\n                    telemetryContent: props.telemetryContent\n                }\n                }\n            />\n        ),\n        items: getAddressSelectItems(props)\n    };\n};"]}