{"version":3,"file":"address-dropdown.js","sourceRoot":"./src/","sources":["common/components/address-dropdown.tsx"],"names":[],"mappings":"AAIA,OAAO,KAAK,KAAK,MAAM,OAAO,CAAC;AAY/B,MAAM,eAAe,GAAG,CAAC,GAAqB,EAAE,KAAc,EAAG,aAA+B,EAAmB,EAAE;IACjH,IAAI,UAAmB,CAAC;IACxB,IAAI,OAAO,CAAC,GAAG,CAAC,KAAK,QAAQ,EAAG;QAC5B,UAAU,GAAI,GAAG,KAAK,aAAa,CAAC;KACvC;SAAM;QACH,UAAU,GAAG,OAAM,CAAC,aAAa,CAAC,KAAG,QAAQ,IAAI,CAAC,GAAG,IAAI,EAAE,CAAC,CAAC,WAAW,EAAE,KAAK,CAAC,aAAa,IAAI,EAAE,CAAC,CAAC,WAAW,EAAE,CAAC;KACtH;IAED,OAAO,CACH,gCAAQ,GAAG,EAAE,GAAG,EAAE,KAAK,EAAE,GAAG,mBAAiB,UAAU,IAClD,KAAK,CACD,CACZ,CAAC;AACN,CAAC,CAAC;AAEF,MAAM,cAAc,GAA8B,CAAC,EAC/C,EAAE,EACF,IAAI,EACJ,SAAS,EACT,KAAK,EACL,oBAAoB,EACpB,WAAW,EACX,QAAQ,EACX,EAAE,EAAE,CAAC,CACE,8CACI,EAAE,EAAE,EAAE,EACN,SAAS,EAAE,GAAG,SAAS,YAAY,EACnC,IAAI,EAAE,IAAI,EACV,KAAK,EAAE,KAAK,EACZ,QAAQ,EAAE,QAAQ,IACd,CAAC,oBAAoB,IAAI,EAAE,CAAC,GAE/B,WAAW,IAAI,WAAW,CAAC,GAAG,CAAC,IAAI,CAAC,EAAE,CACnC,CACI,eAAe,CAAC,IAAI,CAAC,GAAG,EAAE,IAAI,CAAC,KAAK,EAAE,KAAK,CAAC,CAC/C,CAAC,CAED,CACZ,CAAC;AAEN,eAAe,cAAc,CAAC","sourcesContent":["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nimport * as React from 'react';\n\nexport interface IAdressDropdown {\n    id: string;\n    name: string;\n    className: string;\n    value: string | number;\n    additionalAddributes?: object;\n    displayData: { key?: string | number; value?: string }[];\n    onChange(event: React.ChangeEvent<HTMLSelectElement>): void;\n}\n\nconst getDropdownItem = (key?: string | number, value?: string , selectedValue?: string | number): React.ReactNode => {\n    let isSelected: boolean;\n    if (typeof (key) === 'number')  {\n        isSelected =  key === selectedValue;\n    } else {\n        isSelected = typeof(selectedValue)==='string' && (key || '').toLowerCase() === (selectedValue || '').toLowerCase();\n    }\n\n    return (\n        <option key={key} value={key} aria-selected={isSelected}>\n            {value}\n        </option>\n    );\n};\n\nconst AdressDropdown: React.FC<IAdressDropdown> = ({\n    id,\n    name,\n    className,\n    value,\n    additionalAddributes,\n    displayData,\n    onChange\n}) => (\n        <select\n            id={id}\n            className={`${className}__dropdown`}\n            name={name}\n            value={value}\n            onChange={onChange}\n            {...(additionalAddributes || {})}\n        >\n            {displayData && displayData.map(item =>\n                (\n                    getDropdownItem(item.key, item.value, value)\n                ))\n            }\n        </select>\n    );\n\nexport default AdressDropdown;\n"]}