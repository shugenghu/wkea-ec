import * as React from 'react';
import { IModuleProps } from '@msdyn365-commerce-modules/utilities';
import { Address, StateProvinceInfo } from '@msdyn365-commerce/retail-proxy';
import { AddressOperation, IAddressResponse } from '../../common/address-module.data';
import { IAddressAddUpdateProps } from '../../common/components/address-add';
import { IBusinessAccountAddressData } from './business-account-address.data';
import { IBusinessAccountAddressProps } from './business-account-address.props.autogenerated';
export interface IBusinessAccountAddressExtendedProps extends IBusinessAccountAddressProps<IBusinessAccountAddressData> {
    hasError: boolean;
    isRequired: boolean;
    resetAddress: boolean;
    updateForm(errors: boolean, currentAddress?: Address): void;
}
export interface IBusinessAccountAddressState {
    countryId?: string;
    states?: StateProvinceInfo[];
}
export interface IBusinessAccountAddressViewProps {
    className: string;
    currentOperation: AddressOperation;
    selectedAddress?: Address;
    addUpdateAddress: Address;
    addressListSelectedAddress: Address;
    countryRegionId: string;
    stateProvinceInfo?: StateProvinceInfo[];
    customerAddresses: Address[];
    validationError: object;
    addressActionResponse?: IAddressResponse;
    BusinessAccountAddress: IModuleProps;
    isUpdating: boolean;
    hasError: boolean;
    showAddOrUpdateAddress: IAddressAddUpdateProps;
}
declare class BusinessAccountAddress extends React.Component<IBusinessAccountAddressExtendedProps, IBusinessAccountAddressState> {
    private addUpdateAddress;
    private countryRegionId;
    private stateProvinceInfo?;
    private validationError;
    private addressActionResponse?;
    private isUpdating?;
    private addressCommon;
    private addressFormat;
    private countryRegions;
    private addressPurposes;
    private resources;
    private defaultAddressType;
    private excludedList;
    private telemetryContent;
    constructor(props: IBusinessAccountAddressExtendedProps);
    componentDidMount(): void;
    render(): JSX.Element | null;
    _resetAddressFields: () => void;
    private _renderAddOrUpdateAddress;
    private _onAddressAddUpdateInputChange;
    private _onAddressAddUpdateDropdownChange;
    private _updateAddress;
    private _isEmpty;
    private _isInputRequired;
    private _setDefaultCountryRegionId;
    private _updateCountryRegionId;
}
export default BusinessAccountAddress;
