import * as React from 'react';
import { IModuleProps } from '@msdyn365-commerce-modules/utilities';
import { Address, StateProvinceInfo } from '@msdyn365-commerce/retail-proxy/dist/Entities/CommerceTypes.g';
import { AddressOperation, IAddressResponse } from '../../common/address-module.data';
import { IAddressAddUpdateProps } from '../../common/components/address-add';
import { IAddressListProps } from '../../common/components/address-list';
import { IAccountManagementAddressData } from './account-management-address.data';
import { IAccountManagementAddressProps } from './account-management-address.props.autogenerated';
export interface IAccountManagementAddressViewState {
    isShowAddresList: boolean;
    isShowAddOrUpdateAddress: boolean;
}
export interface IAccountManagementAddressViewProps extends React.Component<IAccountManagementAddressProps<IAccountManagementAddressData>> {
    className: string;
    currentOperation: AddressOperation;
    selectedAddress?: Address;
    addUpdateAddress: Address;
    countryRegionId: string;
    stateProvinceInfo?: StateProvinceInfo[];
    customerAddresses: Address[];
    validationError: object;
    addressActionResponse?: IAddressResponse;
    viewState: IAccountManagementAddressViewState;
    AccountAddressManagement: IModuleProps;
    isUpdating: boolean;
    showAddressList: IAddressListProps;
    showAddOrUpdateAddress: IAddressAddUpdateProps;
}
declare class AccountManagementAddress extends React.Component<IAccountManagementAddressProps<IAccountManagementAddressData>> {
    private currentOperation;
    private selectedAddress?;
    private countryRegionId;
    private stateProvinceInfo?;
    private customerAddresses;
    private addUpdateAddress;
    private validationError;
    private addressActionResponse?;
    private isUpdating?;
    private hasError?;
    private addressCommon;
    private addressFormat;
    private countryRegions;
    private addressPurposes;
    private resources;
    private defaultAddressType;
    private telemetryContent;
    constructor(props: IAccountManagementAddressProps<IAccountManagementAddressData>);
    componentDidMount(): void;
    render(): JSX.Element;
    private _renderAddOrUpdateAddress;
    private _renderListAddress;
    private onAddressAddUpdate;
    private _onAddressAddUpdateInputChange;
    private _onAddressAddUpdateDropdownChange;
    private _onAddressUpdate;
    private _onAddressAddUpdateSubmit;
    private _onCountryChange;
    private _getAddressFormatExcludeList;
    private _getStateProvinces;
    private _setDefaultCountryRegionId;
    private _updateCurrentOperation;
    private _onSubmitUpdatePrimaryAddress;
    private _goToEditAddress;
    private _onRemoveAddress;
    private _goToAddAddress;
    private _onAddOrUpdateSuccess;
    private _onUpdatePrimaryAddressSuccess;
    private _resetView;
}
export default AccountManagementAddress;
