import * as React from 'react';
import { Heading as HeadingData } from '@msdyn365-commerce-modules/data-types';
import { INodeProps, ITelemetryContent } from '@msdyn365-commerce-modules/utilities';
import { Address } from '@msdyn365-commerce/retail-proxy/dist/Entities/CommerceTypes.g';
import { AddressType, IAddressResource, IAddressResponse } from '../../common/address-module.data';
import { IAddressDropdownsData, IAddressItem } from '../address-format.data';
export interface IAddressAddInputProps {
    isUpdating?: boolean;
    hasError?: boolean;
    hasExternalSubmitGroup?: boolean;
    addressType: AddressType;
    addressFormat: IAddressItem[];
    defaultCountryRegionId: string;
    defaultAddressType: number;
    selectedAddress?: Address;
    dropdownDisplayData: IAddressDropdownsData;
    resources: IAddressResource;
    addressActionResponse?: IAddressResponse;
    addAddressHeading?: HeadingData;
    editAddressHeading?: HeadingData;
    validationError?: object;
    telemetryContent?: ITelemetryContent;
    onInputChange(event: React.ChangeEvent<HTMLInputElement>): void;
    onDropdownChange(event: React.ChangeEvent<HTMLSelectElement>): void;
    onSave?(): void;
    onCancel?(): void;
}
export interface IAddressError {
    AddressError: INodeProps;
    title: React.ReactNode;
    message: React.ReactNode;
}
export interface IAddressAddItem {
    key: string;
    AddressItem: INodeProps;
    label: React.ReactNode;
    alert: React.ReactNode;
    input: React.ReactNode;
}
export interface IAddressAddUpdateProps {
    AddressForm: INodeProps;
    heading: React.ReactNode;
    items: IAddressAddItem[];
    hasError: boolean;
    error: IAddressError;
    isShowSaveButton: boolean;
    saveButton: React.ReactNode;
    isShowCancelButton: boolean;
    cancelButton: React.ReactNode;
}
export declare const AddressAddUpdate: (props: IAddressAddInputProps) => IAddressAddUpdateProps;
