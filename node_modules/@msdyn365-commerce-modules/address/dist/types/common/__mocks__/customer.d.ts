declare const mockCustomer: {
    AddressFormatNameAccountNumber: string;
    RecordId: number;
    CreatedDateTime: string;
    ChargeGroup: string;
    PriceGroup: string;
    IsCustomerTaxInclusive: boolean;
    Phone: string;
    PhoneRecordId: number;
    PhoneExt: string;
    Cellphone: string;
    Email: string;
    EmailRecordId: number;
    Url: string;
    UrlRecordId: number;
    Name: string;
    PersonNameId: number;
    FirstName: string;
    MiddleName: string;
    LastName: string;
    DirectoryPartyRecordId: number;
    PartyNumber: string;
    CustomerTypeValue: number;
    Language: string;
    CustomerGroup: string;
    CurrencyCode: string;
    CNPJCPFNumber: string;
    IdentificationNumber: string;
    InvoiceAccount: string;
    MandatoryCreditLimit: boolean;
    CreditRating: string;
    Balance: number;
    Blocked: boolean;
    BlockedType: number;
    UseOrderNumberReference: boolean;
    OrganizationId: string;
    UsePurchaseRequest: boolean;
    MultilineDiscountGroup: string;
    TotalDiscountGroup: string;
    LineDiscountGroup: string;
    TaxGroup: string;
    SalesTaxGroup: string;
    TaxExemptNumber: string;
    VatNumber: string;
    TaxOffice: string;
    NonChargeableAccount: boolean;
    Tag: string;
    ReceiptSettings: number;
    ReceiptEmail: string;
    RetailCustomerTableRecordId: number;
    OfflineImage: string;
    IsAsyncCustomer: boolean;
    NewCustomerPartyNumber: null;
    CustomerAffiliations: never[];
    Addresses: {
        Name: string;
        FullAddress: string;
        RecordId: number;
        Street: string;
        StreetNumber: string;
        County: string;
        CountyName: string;
        City: string;
        DistrictName: string;
        State: string;
        StateName: string;
        ZipCode: string;
        ThreeLetterISORegionName: string;
        Phone: string;
        PhoneRecordId: number;
        PhoneExt: string;
        Email: string;
        EmailContent: string;
        EmailRecordId: number;
        Url: string;
        UrlRecordId: number;
        TwoLetterISORegionName: string;
        Deactivate: boolean;
        AttentionTo: string;
        BuildingCompliment: string;
        Postbox: string;
        TaxGroup: string;
        AddressTypeValue: number;
        IsPrimary: boolean;
        IsPrivate: boolean;
        PartyNumber: string;
        IsAsyncAddress: boolean;
        DirectoryPartyTableRecordId: number;
        DirectoryPartyLocationRecordId: number;
        DirectoryPartyLocationRoleRecordId: number;
        LogisticsLocationId: string;
        LogisticsLocationRecordId: number;
        LogisticsLocationExtRecordId: number;
        LogisticsLocationRoleRecordId: number;
        PhoneLogisticsLocationRecordId: number;
        PhoneLogisticsLocationId: string;
        EmailLogisticsLocationRecordId: number;
        EmailLogisticsLocationId: string;
        UrlLogisticsLocationRecordId: number;
        UrlLogisticsLocationId: string;
        ExpireRecordId: number;
        SortOrder: number;
        RoleCount: number;
        ExtensionProperties: never[];
    }[];
    Attributes: never[];
    Images: {
        Uri: string;
        AltText: null;
        IsDefault: boolean;
        IsSelfHosted: boolean;
        Priority: number;
        ExtensionProperties: never[];
    }[];
    IsFloorLimitBlocked: boolean;
    ExtensionProperties: never[];
};
export default mockCustomer;
