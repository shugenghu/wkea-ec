{"version":3,"file":"cookie-compliance.view.test.js","sourceRoot":"./src/","sources":["modules/cookie-compliance/tests/cookie-compliance.view.test.tsx"],"names":[],"mappings":"AAKC,OAAO,EAAE,oBAAoB,EAAE,MAAM,yBAAyB,CAAC;AAC/D,OAAO,EAAE,MAAM,EAAE,MAAM,QAAQ,CAAC;AAChC,OAAO,KAAK,KAAK,MAAM,OAAO,CAAC;AAE/B,OAAO,oBAAoB,MAAM,2BAA2B,CAAC;AAE7D,MAAM,UAAU,GAA4B;IACxC,SAAS,EAAE,sBAAsB;IACjC,OAAO,EAAE,aAAa;CACzB,CAAC;AAEF,QAAQ,CAAC,4BAA4B,EAAE,GAAG,EAAE;IACzC,EAAE,CAAC,wBAAwB,EAAE,GAAG,EAAE;QAC9B,MAAM,WAAW,GAAG,oBAAoB,CAAC,EAAE,EAAE,EAAE,EAAE,UAAU,CAAC,CAAC;QAG7D,MAAM,SAAS,GAA2B;YACtC,GAAG,WAAW;YACd,sBAAsB,EAAE;gBACpB,WAAW,EAAE,WAAW;gBACxB,SAAS,EAAE,UAAU,CAAC,OAAO;aAChC;YACD,UAAU,EAAE;gBACR,SAAS,EAAE,gCAAgC;gBAC3C,KAAK,EAAE,OAAO;aACjB;YACD,OAAO,EAAE;gBACL,SAAS,EAAE,+BAA+B;aAC7C;YACD,IAAI,EAAE,iDAAwB;YAC9B,KAAK,EACD,CACI;gBACI,sCAAW;gBACX,sCAAW;gBACX,sCAAW,CACT,CACT;YACL,YAAY,EAAE,gDAAuB;SACxC,CAAC;QAEF,MAAM,oBAAoB,GAAG,MAAM,CAAC,oBAAC,oBAAoB,oBAAK,SAAS,EAAI,CAAC,CAAC;QAC7E,MAAM,CAAC,oBAAoB,CAAC,CAAC,eAAe,EAAE,CAAC;IACnD,CAAC,CAAC,CAAC;AACN,CAAC,CAAC,CAAC","sourcesContent":["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\n import { buildMockModuleProps } from '@msdyn365-commerce/core';\n import { render } from 'enzyme';\n import * as React from 'react';\n import { ICookieComplianceConfig, ICookieComplianceProps } from '../cookie-compliance.props.autogenerated';\n import CookieComplianceView from '../cookie-compliance.view';\n\n const mockConfig: ICookieComplianceConfig = {\n     className: 'ms-cookie-compliance',\n     content: 'Simple text'\n };\n\n describe('CookieCompliance Unit Test', () => {\n    it('View renders correctly', () => {\n        const moduleProps = buildMockModuleProps({}, {}, mockConfig);\n\n        // @ts-ignore partial mock\n        const mockProps: ICookieComplianceProps = {\n            ...moduleProps,\n            CookieComplianceBanner: {\n                moduleProps: moduleProps,\n                className: mockConfig.content,\n            },\n            AlertProps: {\n                className: 'ms-cookie-compliace__container',\n                color: 'white',\n            },\n            Content: {\n                className: 'ms-cookie-compliance__content'\n            },\n            text: <div>TextComponent</div>,\n            links:\n                (\n                    <div>\n                        <a>Link</a>\n                        <a>Link</a>\n                        <a>Link</a>\n                    </div>\n                ),\n            acceptButton: <div>AcceptButton</div>\n        };\n\n        const cookieComplianceView = render(<CookieComplianceView {...mockProps} />);\n        expect(cookieComplianceView).toMatchSnapshot();\n    });\n });"]}