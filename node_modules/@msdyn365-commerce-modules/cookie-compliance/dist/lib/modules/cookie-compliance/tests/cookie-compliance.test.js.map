{"version":3,"file":"cookie-compliance.test.js","sourceRoot":"./src/","sources":["modules/cookie-compliance/tests/cookie-compliance.test.tsx"],"names":[],"mappings":"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","sourcesContent":["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { buildHydratedMockActionContext, buildMockModuleProps} from '@msdyn365-commerce/core';\nimport { mount, shallow } from 'enzyme';\nimport * as React from 'react';\nimport CookieCompliance, { ICookieComplianceViewProps } from '../cookie-compliance';\nimport { ICookieComplianceConfig, ICookieComplianceProps, ICookieComplianceResources } from '../cookie-compliance.props.autogenerated';\n\nconst mockConfig: ICookieComplianceConfig = {\n  className: 'cookie-compliance-container',\n  content: 'simple text'\n};\n\nconst mockResources: ICookieComplianceResources = {\n  acceptCookiesButtonText: 'Accept',\n  acceptCookiesAriaLabel: 'Accept cookies'\n};\n\nconst mockActionContext = buildHydratedMockActionContext();\n\n// @ts-ignore partial mock\nconst mockContext: ICoreContext = {\n    actionContext: mockActionContext,\n    requestContext: { locale: 'en-us' },\n    cookies: {\n      isConsentGiven: jest.fn(() => { return false; })\n    }\n};\n\n// @ts-ignore partial mock\nconst consentGivenContext: ICoreContext = {\n  actionContext: mockActionContext,\n  requestContext: { locale: 'en-us' },\n  cookies: {\n    isConsentGiven: jest.fn(() => { return true; })\n  }\n};\n\ndescribe('CookieCompliance', () => {\n  it('renders correctly in container', () => {\n    const moduleProps = {\n      ...buildMockModuleProps({}, {}, mockConfig) as ICookieComplianceProps<ICookieComplianceConfig>,\n      resources: mockResources,\n      // @ts-ignore\n      renderView: jest.fn(props => {return <div props={props}/>;})\n    };\n    const cookieCompliance = mount(<CookieCompliance {...moduleProps}/>);\n    cookieCompliance.setState({ visible: true });\n\n    expect(moduleProps.renderView).toBeCalled();\n    const viewProps: ICookieComplianceViewProps = cookieCompliance.childAt(0).props().props;\n    expect(viewProps).toBeDefined();\n    expect(viewProps.Content.className).toEqual('ms-cookie-compliance__content');\n  });\n\n  it('_onDismiss gets called', () => {\n    const moduleProps = {\n      ...buildMockModuleProps({}, {}, mockConfig) as ICookieComplianceProps<ICookieComplianceConfig>,\n      resources: mockResources,\n      // @ts-ignore\n      renderView: jest.fn(props => {return <div props={props}/>;})\n    };\n    const cookieCompliance = shallow(<CookieCompliance {...moduleProps}/>);\n    cookieCompliance.setState({ visible: true });\n\n    expect(moduleProps.renderView).toBeCalled();\n    const viewProps: ICookieComplianceViewProps = cookieCompliance.props().props;\n    expect(viewProps.acceptButton).toBeDefined();\n    // tslint:disable-next-line:no-any\n    const acceptButton = mount(viewProps.acceptButton as any as React.ReactElement);\n    expect(cookieCompliance.state('visible')).toBe(true);\n    acceptButton.simulate('click');\n    expect(cookieCompliance.state('visible')).toBe(false);\n  });\n});\n"]}