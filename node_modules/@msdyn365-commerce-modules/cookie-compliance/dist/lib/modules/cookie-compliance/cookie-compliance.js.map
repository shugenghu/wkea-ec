{"version":3,"file":"cookie-compliance.js","sourceRoot":"./src/","sources":["modules/cookie-compliance/cookie-compliance.tsx"],"names":[],"mappings":"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","sourcesContent":["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { getTelemetryObject, IAlertProps, IModuleProps, INodeProps, ITelemetryContent } from '@msdyn365-commerce-modules/utilities';\nimport * as MsDyn365 from '@msdyn365-commerce/core';\nimport classnames from 'classnames';\nimport * as React from 'react';\nimport { CookieComplianceAcceptButton, CookieComplianceLinks} from './components';\nimport { ICookieComplianceConfig, ICookieComplianceProps } from './cookie-compliance.props.autogenerated';\n\nexport interface IAlertState {\n    visible: boolean;\n}\n\nexport interface ICookieComplianceViewProps extends ICookieComplianceProps<{}> {\n    CookieComplianceBanner: IModuleProps;\n    AlertProps: IAlertProps;\n    Content: INodeProps;\n    text?: React.ReactNode;\n    links?: React.ReactNode;\n    acceptButton?: React.ReactNode;\n    className: string;\n    onDismiss(): void;\n}\n\n/**\n *\n * CookieCompliance component\n * @extends {React.PureComponent<ICookieComplianceProps<IHeroConfig>>}\n */\nclass CookieCompliance extends React.PureComponent<ICookieComplianceProps<ICookieComplianceConfig>, IAlertState> {\n    private cookieRef: React.RefObject<HTMLInputElement>;\n    private telemetryContent: ITelemetryContent = getTelemetryObject(this.props.context.request.telemetryPageName!,\n                                                                     this.props.friendlyName,\n                                                                     this.props.telemetry);\n    constructor(props: ICookieComplianceProps<ICookieComplianceConfig>) {\n        super(props);\n        this.state = {visible:false};\n        this.cookieRef = React.createRef();\n        this._onDismiss = this._onDismiss.bind(this);\n    }\n\n    public componentDidMount(): void {\n        const { context } = this.props;\n\n        if (context && context.request && context.request.cookies && !context.request.cookies.isConsentGiven()) {\n            this.setState({visible: true});\n        }\n    }\n\n    public render(): JSX.Element | null {\n\n        const { config, context, resources, telemetry } = this.props;\n        const { acceptCookiesButtonText, acceptCookiesAriaLabel } = resources;\n        const { visible } = this.state;\n\n        const isConsentGiven = context && context.request && context.request.cookies && context.request.cookies.isConsentGiven();\n        let moduleConfig: ICookieComplianceConfig;\n\n        try {\n            moduleConfig = config;\n        } catch(e) {\n            telemetry.error(`Something went wrong while rendering the alert module ------${e}`);\n            return <div>{e}</div>;\n        }\n\n        if (isConsentGiven && !visible) {\n            this.props.context.telemetry.error('Cookie Compliance content is empty, module wont render.');\n            return null;\n        }\n\n        const viewProps = {\n            ...this.props,\n            onDismiss: this._onDismiss,\n            CookieComplianceBanner: {\n                moduleProps: this.props,\n                className: classnames('ms-cookie-compliance', moduleConfig.className),\n                ref: this.cookieRef,\n            },\n            AlertProps: {\n                className: 'ms-cookie-compliance__container',\n                color: 'white',\n                fade: false\n            },\n            Content: {\n                className: 'ms-cookie-compliance__content'\n            },\n            text: moduleConfig.content && (\n                <MsDyn365.RichTextComponent\n                    className='ms-cookie-compliance__text'\n                    text={ moduleConfig.content }\n                    editProps= {{onEdit: this.handleContentChange, requestContext: this.props.context.request}}\n                />\n            ),\n            links: moduleConfig.actionLinks && moduleConfig.actionLinks.length  > 0 && (\n                <CookieComplianceLinks\n                    links={ moduleConfig.actionLinks }\n                    onTextChange= {this.handleLinkTextChange}\n                    requestContext= {this.props.context.request}\n                    telemetryContent= {this.telemetryContent}\n                />\n            ),\n            acceptButton: (\n                <CookieComplianceAcceptButton\n                    onClose={this._onDismiss}\n                    acceptCookiesButtonText={acceptCookiesButtonText}\n                    acceptCookiesButtonAriaLabel={acceptCookiesAriaLabel}\n                    telemetryContent={this.telemetryContent}\n                />)\n        };\n\n        return this.props.renderView(viewProps) as React.ReactElement;\n    }\n\n    /* Handle link text change*/\n    public handleLinkTextChange = (linkIndex: number) => (event: MsDyn365.ContentEditableEvent) => {\n        if(this.props.config.actionLinks && this.props.config.actionLinks[linkIndex]) {\n        this.props.config.actionLinks[linkIndex].linkText = event.target.value;\n        }\n    };\n\n    /* Handle text content change*/\n    public handleContentChange = (event: MsDyn365.ContentEditableEvent) => this.props.config.content = event.target.value;\n\n    private _onDismiss(): void {\n        const { context } = this.props;\n\n        if (context && context.request && context.request.cookies) {\n            context.request.cookies.setConsentCookie();\n            location.reload();\n        }\n        this.setState({visible: false});\n    }\n}\n\nexport default CookieCompliance;"]}