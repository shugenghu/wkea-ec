import { render } from 'enzyme';
import * as React from 'react';
import { Logo } from '../../components';
import * as MockUtillities from '../../utilities/mock-utilities';
const defaultImageSettings = {
    viewports: {
        xs: { q: `w=132&h=28&m=6`, w: 0, h: 0 },
        lg: { q: `w=160&h=48&m=6`, w: 0, h: 0 }
    },
    lazyload: true
};
describe('Logo component unit tests', () => {
    it('render correctly with image link, and class name', () => {
        const mockConfigs = {
            link: {
                linkUrl: {
                    destinationUrl: 'https://ppe.fabrikam.com/fe'
                }
            },
            image: {
                src: 'https://img-prod-cms-mr-microsoft-com.akamaized.net/cms/api/fabrikam/imageFileData/MA1G3L',
                imageSettings: defaultImageSettings
            },
            gridSettings: MockUtillities.mockAuthContext.request.gridSettings,
            className: '',
            requestContext: MockUtillities.mockAuthContext.request
        };
        const component = render(React.createElement(Logo, Object.assign({}, mockConfigs)));
        expect(component).toMatchSnapshot();
    });
    it('render correctly with image and link', () => {
        const mockConfigs = {
            link: {
                linkUrl: {
                    destinationUrl: 'https://ppe.fabrikam.com/fe'
                }
            },
            image: {
                src: 'https://img-prod-cms-mr-microsoft-com.akamaized.net/cms/api/fabrikam/imageFileData/MA1G3L',
                imageSettings: defaultImageSettings
            },
            gridSettings: MockUtillities.mockAuthContext.request.gridSettings,
            className: 'mock-class',
            requestContext: MockUtillities.mockAuthContext.request
        };
        const component = render(React.createElement(Logo, Object.assign({}, mockConfigs)));
        expect(component).toMatchSnapshot();
    });
    it('render correctly with image and no link', () => {
        const mockConfigs = {
            image: {
                src: 'https://img-prod-cms-mr-microsoft-com.akamaized.net/cms/api/fabrikam/imageFileData/MA1G3L',
                imageSettings: defaultImageSettings
            },
            gridSettings: MockUtillities.mockAuthContext.request.gridSettings,
            requestContext: MockUtillities.mockAuthContext.request
        };
        const component = render(React.createElement(Logo, Object.assign({}, mockConfigs)));
        expect(component).toMatchSnapshot();
    });
    it('render correctly without image settings', () => {
        const mockConfigs = {
            image: {
                src: 'https://img-prod-cms-mr-microsoft-com.akamaized.net/cms/api/fabrikam/imageFileData/MA1G3L',
                imageSettings: undefined
            },
            gridSettings: MockUtillities.mockAuthContext.request.gridSettings,
            requestContext: MockUtillities.mockAuthContext.request
        };
        const component = render(React.createElement(Logo, Object.assign({}, mockConfigs)));
        expect(component).toMatchSnapshot();
    });
});
//# sourceMappingURL=logo-component.test.js.map