{"version":3,"file":"logo-component.test.js","sourceRoot":"./src/","sources":["modules/header/__tests__/unit/logo-component.test.tsx"],"names":[],"mappings":"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","sourcesContent":["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { IImageSettings } from '@msdyn365-commerce/core';\nimport { render } from 'enzyme';\nimport * as React from 'react';\nimport { ILogoProps, Logo } from '../../components';\nimport * as MockUtillities from '../../utilities/mock-utilities';\n\nconst defaultImageSettings: IImageSettings = {\n    viewports: {\n        xs: { q: `w=132&h=28&m=6`, w: 0, h: 0 },\n        lg: { q: `w=160&h=48&m=6`, w: 0, h: 0 }\n    },\n    lazyload: true\n};\n\ndescribe('Logo component unit tests', () => {\n    it('render correctly with image link, and class name', () => {\n        const mockConfigs: ILogoProps = {\n            link:{\n                linkUrl: {\n                    destinationUrl: 'https://ppe.fabrikam.com/fe'\n                }\n            },\n            image: {\n                src: 'https://img-prod-cms-mr-microsoft-com.akamaized.net/cms/api/fabrikam/imageFileData/MA1G3L',\n                imageSettings: defaultImageSettings\n            },\n            gridSettings: MockUtillities.mockAuthContext.request.gridSettings,\n            className: '',\n            requestContext: MockUtillities.mockAuthContext.request\n        };\n        const component = render(<Logo {...mockConfigs}/>);\n        expect(component).toMatchSnapshot();\n    });\n\n    it('render correctly with image and link', () => {\n        const mockConfigs: ILogoProps = {\n            link:{\n                linkUrl: {\n                    destinationUrl: 'https://ppe.fabrikam.com/fe'\n                }\n            },\n            image: {\n                src: 'https://img-prod-cms-mr-microsoft-com.akamaized.net/cms/api/fabrikam/imageFileData/MA1G3L',\n                imageSettings: defaultImageSettings\n            },\n            gridSettings: MockUtillities.mockAuthContext.request.gridSettings,\n            className: 'mock-class',\n            requestContext: MockUtillities.mockAuthContext.request\n        };\n\n        const component = render(<Logo {...mockConfigs}/>);\n        expect(component).toMatchSnapshot();\n    });\n\n    it('render correctly with image and no link', () => {\n        const mockConfigs: ILogoProps = {\n            image: {\n                src: 'https://img-prod-cms-mr-microsoft-com.akamaized.net/cms/api/fabrikam/imageFileData/MA1G3L',\n                imageSettings: defaultImageSettings\n            },\n            gridSettings: MockUtillities.mockAuthContext.request.gridSettings,\n            requestContext: MockUtillities.mockAuthContext.request\n        };\n\n        const component = render(<Logo {...mockConfigs}/>);\n        expect(component).toMatchSnapshot();\n    });\n\n    it('render correctly without image settings', () => {\n        const mockConfigs: ILogoProps = {\n            image: {\n                src: 'https://img-prod-cms-mr-microsoft-com.akamaized.net/cms/api/fabrikam/imageFileData/MA1G3L',\n                imageSettings: undefined\n            },\n            gridSettings: MockUtillities.mockAuthContext.request.gridSettings,\n            requestContext: MockUtillities.mockAuthContext.request\n        };\n\n        const component = render(<Logo {...mockConfigs}/>);\n        expect(component).toMatchSnapshot();\n    });\n});"]}