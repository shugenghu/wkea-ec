{"version":3,"file":"header.view.test.js","sourceRoot":"./src/","sources":["modules/header/__tests__/unit/header.view.test.tsx"],"names":[],"mappings":"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","sourcesContent":["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { buildMockModuleProps } from '@msdyn365-commerce/core';\nimport { render } from 'enzyme';\nimport * as React from 'react';\nimport { IHeaderViewProps } from '../../header';\nimport { IHeaderData } from '../../header.data';\nimport { IHeaderProps } from '../../header.props.autogenerated';\nimport HeaderView from '../../header.view';\nimport * as MockUtillities from '../../utilities/mock-utilities';\n\ndescribe('Header view tests', () => {\n    it('render correctly no sign in info', () => {\n        const moduleProps: IHeaderProps<IHeaderData> = buildMockModuleProps({},{}, MockUtillities.mockHeaderConfig) as IHeaderProps<IHeaderData>;\n        const mockProps: IHeaderViewProps = {\n            ...buildMockModuleProps(MockUtillities.mockResources, MockUtillities.mockAnonContext),\n            ...moduleProps,\n            logo: '{LogoComponent}',\n            wishListIconDesktop: '{WishlistIconDesktop}',\n            wishListIconMobile: '{WishlistIconMobile}',\n            cartIcon: '{CartIcon}',\n            navIcon: '{NavIcon}',\n            mobileMenuCollapsed: false,\n            signinPopoverOpen: true,\n            className:'mock-class',\n            menuBar: ['{NavigationMenu}'],\n            search: ['{Search}'],\n            siteOptions:['{siteOptions}'],\n            HeaderTag: { moduleProps, className: 'module-class-HeaderTag' },\n            HeaderContainer: { className: 'module-class-HeaderContainer' },\n            HeaderTopBarContainer: { className: 'module-class-HeaderTopBar' },\n            MobileMenuContainer: { className: 'module-class-MobileMenu' },\n            MobileMenuBodyContainer: { className: 'module-class-MobileMenuBody' },\n            MobileMenuLinksContainer: { className: 'module-class-MobileMenuLinks' },\n            MobileMenuHeader: 'mobile-menu-header',\n            Divider: {className: 'module-class-Divider'}\n        };\n\n        const view = render(<HeaderView {...mockProps}/>);\n        expect(view).toMatchSnapshot();\n    });\n\n    it('render correctly no signed out', () => {\n        const moduleProps: IHeaderProps<IHeaderData> = buildMockModuleProps({},{}, MockUtillities.mockHeaderConfig) as IHeaderProps<IHeaderData>;\n        const mockProps: IHeaderViewProps = {\n            ...moduleProps,\n            logo: '{LogoComponent}',\n            wishListIconDesktop: '{WishlistIconDesktop}',\n            wishListIconMobile: '{WishlistIconMobile}',\n            cartIcon: '{CartIcon}',\n            navIcon: '{NavIcon}',\n            resources: MockUtillities.mockResources,\n            context: MockUtillities.mockAnonContext,\n            mobileMenuCollapsed: false,\n            signinPopoverOpen: true,\n            className:'mock-class',\n            menuBar: ['{NavigationMenu}'],\n            search: ['{Search}'],\n            siteOptions:['{SiteOptions}'],\n            MobileMenuContainer: { className: 'module-class-MobileMenu' },\n            MobileMenuBodyContainer: { className: 'module-class-MobileMenuBody' },\n            MobileMenuLinksContainer: { className: 'module-class-MobileMenuLinks' },\n            MobileMenuHeader: 'mobile-menu-header',\n            HeaderTag: { moduleProps, className: 'module-class-HeaderTag' },\n            HeaderContainer: { className: 'module-class-HeaderContainer' },\n            HeaderTopBarContainer: { className: 'module-class-HeaderTopBar' },\n            AccountInfoDropdownParentContainer: { className: 'module-class-AccountInfoDropdownParent' },\n            signInLink: '{SignIn}',\n            Divider: {className: 'module-class-Divider'}\n        };\n\n        const view = render(<HeaderView {...mockProps}/>);\n        expect(view).toMatchSnapshot();\n    });\n\n    it('render correctly signed in', () => {\n        const moduleProps: IHeaderProps<IHeaderData> = buildMockModuleProps({},{}, MockUtillities.mockHeaderConfig) as IHeaderProps<IHeaderData>;\n        const mockProps: IHeaderViewProps = {\n            ...moduleProps,\n            logo: '{LogoComponent}',\n            wishListIconDesktop: '{WishlistIconDesktop}',\n            wishListIconMobile: '{WishlistIconMobile}',\n            cartIcon: '{CartIcon}',\n            navIcon: '{NavIcon}',\n            resources: MockUtillities.mockResources,\n            context: MockUtillities.mockAnonContext,\n            mobileMenuCollapsed: false,\n            signinPopoverOpen: true,\n            className:'mock-class',\n            menuBar: ['{NavigationMenu}'],\n            search: ['{Search}'],\n            siteOptions:['{SiteOptions}'],\n            MobileMenuContainer: { className: 'module-class-MobileMenu' },\n            MobileMenuBodyContainer: { className: 'module-class-MobileMenuBody' },\n            MobileMenuLinksContainer: { className: 'module-class-MobileMenuLinks' },\n            MobileMenuHeader: 'mobile-menu-header',\n            HeaderTag: { moduleProps, className: 'module-class-HeaderTag' },\n            HeaderContainer: { className: 'module-class-HeaderContainer' },\n            HeaderTopBarContainer: { className: 'module-class-HeaderTopBar' },\n            AccountInfoDropdownParentContainer: { className: 'module-class-AccountInfoDropdownParent' },\n            AccountInfoDropdownPopoverConentContainer: { className: 'module-class-AccountInfoDropdownPopoverConent' },\n            accountInfoDropdownButton: '{accountInfoDropdownButton}',\n            signOutLink: '{SignOut}',\n            accountLinks: [\n                '{accountLink1}',\n                '{accountLink2}',\n                '{accountLink3}'\n            ],\n            Divider: {className: 'module-class-Divider'}\n        };\n\n        const view = render(<HeaderView {...mockProps}/>);\n        expect(view).toMatchSnapshot();\n    });\n});"]}