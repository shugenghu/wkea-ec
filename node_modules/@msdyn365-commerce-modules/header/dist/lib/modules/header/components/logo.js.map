{"version":3,"file":"logo.js","sourceRoot":"./src/","sources":["modules/header/components/logo.tsx"],"names":[],"mappings":"AAIA,OAAO,EAAE,gBAAgB,EAAE,sBAAsB,EAAqB,iBAAiB,EAAE,MAAM,sCAAsC,CAAC;AACtI,OAAO,KAAK,QAAQ,MAAM,yBAAyB,CAAC;AACpD,OAAO,KAAK,KAAK,MAAM,OAAO,CAAC;AAuB/B,MAAM,OAAO,IAAK,SAAQ,KAAK,CAAC,aAAyB;IAIrD,YAAY,KAAiB;QACzB,KAAK,CAAC,KAAK,CAAC,CAAC;QACb,MAAM,OAAO,GAAG,gBAAgB,CAAC,OAAO,EAAE,KAAK,CAAC,gBAAiB,EAAE,iBAAiB,CAAC,IAAI,CAAC,CAAC;QAC3F,IAAI,CAAC,UAAU,GAAG,sBAAsB,CAAC,KAAK,CAAC,gBAAiB,EAAE,OAAO,CAAC,CAAC;IAC/E,CAAC;IACM,MAAM;QACT,OAAM,CACF,6BAAK,SAAS,EAAE,IAAI,CAAC,KAAK,CAAC,SAAS,IAC/B,IAAI,CAAC,WAAW,CAAC,IAAI,CAAC,KAAK,CAAC,CAC3B,CACT,CAAC;IACN,CAAC;IAEO,WAAW,CAAC,MAAkB;QAClC,IAAG,MAAM,CAAC,IAAI,IAAI,MAAM,CAAC,IAAI,CAAC,OAAO,CAAC,cAAc,EAAE;YAClD,OAAM,CACF,yCACI,IAAI,EAAE,MAAM,CAAC,IAAI,CAAC,OAAO,CAAC,cAAc,gBAC5B,MAAM,CAAC,IAAI,CAAC,SAAS,EACjC,MAAM,EAAE,MAAM,CAAC,IAAI,CAAC,YAAY,CAAC,CAAC,CAAC,QAAQ,CAAC,CAAC,CAAC,SAAS,IACnD,IAAI,CAAC,UAAU,GAElB,IAAI,CAAC,YAAY,CAAC,MAAM,CAAC,CAC1B,CACP,CAAC;SACL;QACD,OAAM,CACH,IAAI,CAAC,YAAY,CAAC,MAAM,CAAC,CAC3B,CAAC;IACN,CAAC;IAEO,YAAY,CAAC,MAAkB;QACnC,MAAM,oBAAoB,GAA4B;YAClD,SAAS,EAAE;gBACP,EAAE,EAAE,EAAE,CAAC,EAAE,gBAAgB,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE;gBACvC,EAAE,EAAE,EAAE,CAAC,EAAE,gBAAgB,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE;aAC1C;YACD,QAAQ,EAAE,IAAI;SACjB,CAAC;QAEF,OAAQ,CACJ,oBAAC,QAAQ,CAAC,KAAK,oBACP,MAAM,CAAC,KAAK,IAChB,YAAY,EAAE,IAAI,CAAC,KAAK,CAAC,YAAa,EACtC,aAAa,EAAE,MAAM,IAAI,MAAM,CAAC,KAAK,IAAI,MAAM,CAAC,KAAK,CAAC,aAAa,IAAI,oBAAoB,EAC3F,mBAAmB,EAAC,SAAS,EAC7B,SAAS,EAAG,EAAC,GAAG,EAAE,MAAM,CAAC,KAAK,IAAI,EAAE,EAAE,cAAc,EAAE,IAAI,CAAC,KAAK,CAAC,cAAc,EAAC,IAClF,CACL,CAAC;IACN,CAAC;CACJ;AAED,eAAe,IAAI,CAAC","sourcesContent":["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nimport { getPayloadObject, getTelemetryAttributes, ITelemetryContent, TelemetryConstant } from '@msdyn365-commerce-modules/utilities';\nimport * as Msdyn365 from '@msdyn365-commerce/core';\nimport * as React from 'react';\n\nexport interface ILogoProps {\n    image: Msdyn365.IImageData;\n    gridSettings?: Msdyn365.IGridSettings;\n    link?: ILinkData;\n    className?: string;\n    telemetryContent?: ITelemetryContent;\n    requestContext: Msdyn365.IRequestContext;\n}\n\nexport interface ILinkData {\n    linkUrl: Msdyn365.ILinkData;\n    ariaLabel?: string;\n    openInNewTab?: boolean;\n    linkText?: string;\n}\n\n/**\n *\n * Logo component\n * @extends {React.PureComponent<ILogoConfig>}\n */\nexport class Logo extends React.PureComponent<ILogoProps> {\n\n    private attributes?: Msdyn365.IDictionary<string>;\n\n    constructor(props: ILogoProps) {\n        super(props);\n        const payLoad = getPayloadObject('click', props.telemetryContent!, TelemetryConstant.Logo);\n        this.attributes = getTelemetryAttributes(props.telemetryContent!, payLoad);\n    }\n    public render():JSX.Element {\n        return(\n            <div className={this.props.className}>\n                {this._renderLogo(this.props)}\n            </div>\n        );\n    }\n\n    private _renderLogo(config: ILogoProps):JSX.Element {\n        if(config.link && config.link.linkUrl.destinationUrl) {\n            return(\n                <a\n                    href={config.link.linkUrl.destinationUrl}\n                    aria-label={config.link.ariaLabel}\n                    target={config.link.openInNewTab ? '_blank' : undefined}\n                    {...this.attributes}\n                >\n                    {this._renderImage(config)}\n                </a>\n            );\n        }\n        return(\n           this._renderImage(config)\n        );\n    }\n\n    private _renderImage(config: ILogoProps): JSX.Element {\n        const defaultImageSettings: Msdyn365.IImageSettings = {\n            viewports: {\n                xs: { q: `w=132&h=28&m=6`, w: 0, h: 0 },\n                lg: { q: `w=160&h=48&m=6`, w: 0, h: 0 }\n            },\n            lazyload: true\n        };\n\n        return  (\n            <Msdyn365.Image\n                {...config.image}\n                gridSettings={this.props.gridSettings!}\n                imageSettings={config && config.image && config.image.imageSettings || defaultImageSettings}\n                loadFailureBehavior='default'\n                editProps= {{key: config.image || {}, requestContext: this.props.requestContext}}\n            />\n        );\n    }\n}\n\nexport default Logo;"]}