{"version":3,"file":"nav-icon.js","sourceRoot":"./src/","sources":["modules/header/components/nav-icon.tsx"],"names":[],"mappings":";AAIA,OAAO,EAAE,MAAM,EAAE,gBAAgB,EAAE,sBAAsB,EAAqB,iBAAiB,EAAE,MAAM,sCAAsC,CAAC;AAE9I,OAAO,EAAE,QAAQ,EAAE,MAAM,YAAY,CAAC;AACtC,OAAO,KAAK,KAAK,MAAM,OAAO,CAAC;AAkB/B,IAAa,OAAO,GAApB,MAAa,OAAQ,SAAQ,KAAK,CAAC,SAAwB;IAIvD,YAAY,KAAoB;QAC5B,KAAK,CAAC,KAAK,CAAC,CAAC;QACb,MAAM,OAAO,GAAG,gBAAgB,CAAC,OAAO,EAAE,KAAK,CAAC,gBAAiB,EAAE,iBAAiB,CAAC,OAAO,CAAC,CAAC;QAC9F,IAAI,CAAC,UAAU,GAAG,sBAAsB,CAAC,KAAK,CAAC,gBAAiB,EAAE,OAAO,CAAC,CAAC;IAC/E,CAAC;IAEM,MAAM;QACT,OAAO,CACH,oBAAC,MAAM,kBACH,SAAS,EAAC,qBAAqB,EAC/B,OAAO,EAAE,IAAI,CAAC,KAAK,CAAC,YAAY,EAChC,KAAK,EAAE,IAAI,CAAC,KAAK,CAAC,SAAS,CAAC,wBAAwB,gBACxC,IAAI,CAAC,KAAK,CAAC,SAAS,CAAC,wBAAwB,mBAC1C,IAAI,CAAC,KAAK,CAAC,UAAU,mBACrB,IAAI,CAAC,KAAK,CAAC,QAAQ,IAC9B,IAAI,CAAC,UAAU,EACrB,CACL,CAAC;IACN,CAAC;CACJ,CAAA;AAvBY,OAAO;IADnB,QAAQ;GACI,OAAO,CAuBnB;SAvBY,OAAO","sourcesContent":["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nimport { Button, getPayloadObject, getTelemetryAttributes, ITelemetryContent, TelemetryConstant } from '@msdyn365-commerce-modules/utilities';\nimport * as Msdyn365 from '@msdyn365-commerce/core';\nimport { observer } from 'mobx-react';\nimport * as React from 'react';\nimport { IHeaderResources } from '../header.props.autogenerated';\n\nexport interface INavIconProps {\n    resources: IHeaderResources;\n    isExpanded: boolean;\n    targetId: string;\n    telemetryContent?: ITelemetryContent;\n    toggleNavBar(): void;\n}\n\n/**\n *\n * NavIcon component\n * @extends {React.PureComponent<INavIconProps>}\n */\n\n@observer\nexport class NavIcon extends React.Component<INavIconProps> {\n\n    private attributes?: Msdyn365.IDictionary<string>;\n\n    constructor(props: INavIconProps) {\n        super(props);\n        const payLoad = getPayloadObject('click', props.telemetryContent!, TelemetryConstant.NavIcon);\n        this.attributes = getTelemetryAttributes(props.telemetryContent!, payLoad);\n    }\n\n    public render():JSX.Element {\n        return (\n            <Button\n                className='ms-header__nav-icon'\n                onClick={this.props.toggleNavBar}\n                title={this.props.resources.mobileHamburgerAriaLabel}\n                aria-label={this.props.resources.mobileHamburgerAriaLabel}\n                aria-expanded={this.props.isExpanded}\n                aria-controls={this.props.targetId}\n                {...this.attributes}\n            />\n        );\n    }\n}"]}