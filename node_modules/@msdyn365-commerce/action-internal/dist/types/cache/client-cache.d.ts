/*!
 * Copyright (c) Microsoft Corporation.
 * All rights reserved. See LICENSE in the project root for license information.
 */
import { ICache, ICacheItem } from '@msdyn365-commerce/core-internal';
/**
 * ClientCache implementation
 *
 * @class ClientCache
 * @implements {ICache}
 * @internal
 */
export declare class ClientCache implements ICache {
    private internalCache;
    /**
     * Gets an item from the cache, and returning it wrapped in a ICacheItem
     * @param type A string representing the type of the cache item
     * @param key The key of the cache item
     */
    Get<T>(type: string, key: string): ICacheItem<T> | null;
    /**
     * Puts an item into the cache
     * @param type A string representing the type of the cache item
     * @param key The key of the cache item
     * @param item The item to be put into the cache
     */
    Put<T>(type: string, key: string, item: T): ICacheItem<T>;
    /**
     * Gets the value only for a specific item from the cache
     * This differs from the Get() method as this will not return a MobX observable value
     * @param type A string representing the type of the cache item
     * @param key The key of the cache item
     */
    GetValue<T>(type: string, key: string): T | null;
    /**
     * Get the value out of a cache item
     * This returns the raw value of the item, it will *not* be a MobX observable value
     * @param item The observable cache item to retireve the value from
     */
    Value<T>(item: ICacheItem<T>): T;
}
export default ClientCache;
