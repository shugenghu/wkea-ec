{"version":3,"file":"create-data-action.js","sourceRoot":"","sources":["../../src/create-data-action.ts"],"names":[],"mappings":"AAAA;;;GAGG;AAGH,OAAO,EAAqB,cAAc,EAAE,MAAM,oBAAoB,CAAC;AACvE;;;;;GAKG;AACH,MAAM,CAAC,MAAM,gBAAgB,GAAG,CAAO,OAAgC,EAAiB,EAAE;IACtF,OAAsB,cAAc,CAChC,OAAO,EACP,CAAC,IAAmC,EAAE,IAAoB,EAAiB,EAAE;QACzE,OAAsB,IAAI,CAAC,WAAW,CAAO,OAAO,CAAC,MAAM,EAAE,IAAI,CAAC,CAAC;IACvE,CAAC,CACJ,CAAC;AACN,CAAC,CAAC","sourcesContent":["/*!\n * Copyright (c) Microsoft Corporation.\n * All rights reserved. See LICENSE in the project root for license information.\n */\n\nimport { IAction, IActionContext, IActionInput } from '@msdyn365-commerce/core-internal';\nimport { dataActionOptions, wrapDataAction } from './wrap-data-action';\n/**\n * Higher order function which exposes the current method as an action\n * @param action The action method\n * @param isBatched If the service call can handle batched requests efficiently\n * @param input Optional parameter of a single instance or an array of IActionInputs that will be passed to the action method.\n */\nexport const createDataAction = <TOut>(options: dataActionOptions<TOut>): IAction<TOut> => {\n    return <IAction<TOut>>wrapDataAction<TOut>(\n        options,\n        (arg1: IActionInput | IActionInput[], arg2: IActionContext): Promise<TOut> => {\n            return <Promise<TOut>>arg2.chainAction<TOut>(options.action, arg1);\n        }\n    );\n};\n"]}