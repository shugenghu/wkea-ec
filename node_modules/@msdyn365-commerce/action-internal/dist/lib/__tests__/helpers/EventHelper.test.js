/*!
 * Copyright (c) Microsoft Corporation.
 * All rights reserved. See LICENSE in the project root for license information.
 */
import EventHelper from '../../event-emitter';
/**
 * @jest-environment node
 */
describe('Event Helper Tests', () => {
    test('handlers get called when the subscribed even fires', () => {
        const eventHelper = EventHelper;
        let message = '';
        let message2 = '';
        eventHelper.on('started', (...args) => {
            message = args[0];
        });
        eventHelper.on('started', (...args) => {
            message2 = 'Message-' + args[0];
        });
        expect(message).toBe('');
        eventHelper.emit('started', 'Hello World');
        expect(message).toBe('Hello World');
        expect(message2).toBe('Message-Hello World');
        eventHelper.emit('started', 'Goodbye!!');
        expect(message).toBe('Goodbye!!');
        expect(message2).toBe('Message-Goodbye!!');
    });
    test('handlers called only when the subscribed event is called', () => {
        const eventHelper = EventHelper;
        let message = '';
        eventHelper.on('started', (...args) => {
            message = args[0];
        });
        expect(message).toBe('');
        eventHelper.emit('ended', 'Hello World');
        expect(message).toBe('');
    });
});
//# sourceMappingURL=EventHelper.test.js.map