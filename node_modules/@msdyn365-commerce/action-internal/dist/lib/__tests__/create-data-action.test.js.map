{"version":3,"file":"create-data-action.test.js","sourceRoot":"","sources":["../../../src/__tests__/create-data-action.test.ts"],"names":[],"mappings":"AAAA;;;GAGG;AAEH,OAAO,MAAM,CAAC;AAGd,OAAO,EAAE,SAAS,EAAE,MAAM,uCAAuC,CAAC;AAClE,OAAO,EAAE,gBAAgB,EAAE,MAAM,uBAAuB,CAAC;AAEzD,MAAM,eAAe,GAAiB;IAClC,kBAAkB,EAAE,GAAG,EAAE;QACrB,OAAO,EAAE,CAAC;IACd,CAAC;IACD,WAAW,EAAE,GAAG,EAAE;QACd,OAAO,EAAE,CAAC;IACd,CAAC;IACD,iBAAiB,EAAE,GAAG,EAAE;QACpB,OAAO,IAAI,CAAC;IAChB,CAAC;CACJ,CAAC;AAEF,MAAM,cAAc,GAAoB,CAAC,KAAoC,EAAE,GAAmB,EAAE,EAAE;IAClG,OAAO,OAAO,CAAC,OAAO,CAAC,KAAK,CAAC,CAAC;AAClC,CAAC,CAAC;AAEF,MAAM,uBAAuB,GAAG,GAAG,EAAE;IACjC,MAAM,GAAG,GAAmB;QACxB,SAAS,EAAE,IAAI,SAAS,EAAE;QAC1B,WAAW,EAAE,CAAC,MAAgB,EAAE,KAAmB,EAAE,EAAE;YACnD,OAAO,MAAM,CAAC,KAAK,EAAE,GAAG,CAAC,CAAC;QAC9B,CAAC;QACD,MAAM,EAAE,CAAC,KAAK,EAAE,IAAI,EAAE,EAAE,CAAC,SAAS;QAClC,GAAG,EAAE,CAAC,CAAC,EAAE,CAAC,EAAE,EAAE,CAAC,SAAS;QACxB,MAAM,EAAE,CAAC,CAAC,EAAE,CAAC,IAAI;QACjB,KAAK,EAAE,CAAC,OAAe,EAAE,EAAE,CAAC,SAAS;QACrC,cAAc,EAAmB,EAAE;QACnC,oBAAoB,EAAE,IAAI,CAAC,EAAE,EAAE;KAClC,CAAC;IACF,OAAO,GAAG,CAAC;AACf,CAAC,CAAC;AAEF,QAAQ,CAAC,+BAA+B,EAAE,GAAG,EAAE;IAC3C,EAAE,CAAC,4CAA4C,EAAE,KAAK,IAAI,EAAE;QACxD,MAAM,iBAAiB,GAAG,uBAAuB,EAAE,CAAC;QAEpD,MAAM,UAAU,GAAG,gBAAgB,CAAC,EAAE,MAAM,EAAE,cAAc,EAAE,CAAC,CAAC;QAEhE,MAAM,MAAM,GAAG,MAAM,iBAAiB,CAAC,WAAW,CAAC,UAAU,EAAE,eAAe,CAAC,CAAC;QAEhF,MAAM,CAAC,MAAM,CAAC,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC;IAC/B,CAAC,CAAC,CAAC;IAEH,EAAE,CAAC,2CAA2C,EAAE,KAAK,IAAI,EAAE;QACvD,MAAM,iBAAiB,GAAG,uBAAuB,EAAE,CAAC;QAEpD,MAAM,UAAU,GAAG,gBAAgB,CAAC,EAAE,MAAM,EAAE,cAAc,EAAE,CAAC,CAAC;QAEhE,MAAM,MAAM,GAAG,MAAM,UAAU,CAAC,eAAe,EAAE,iBAAiB,CAAC,CAAC;QAEpE,MAAM,CAAC,MAAM,CAAC,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC;IAC/B,CAAC,CAAC,CAAC;AACP,CAAC,CAAC,CAAC","sourcesContent":["/*!\n * Copyright (c) Microsoft Corporation.\n * All rights reserved. See LICENSE in the project root for license information.\n */\n\nimport 'jest';\n\nimport { IAction, IActionContext, IActionInput, IRequestContext } from '@msdyn365-commerce/core-internal';\nimport { Telemetry } from '@msdyn365-commerce/telemetry-internal';\nimport { createDataAction } from '../create-data-action';\n\nconst mockActionInput: IActionInput = {\n    getCacheObjectType: () => {\n        return '';\n    },\n    getCacheKey: () => {\n        return '';\n    },\n    shouldCacheOutput: () => {\n        return true;\n    }\n};\n\nconst mockActionFunc: IAction<string> = (input: IActionInput | IActionInput[], ctx: IActionContext) => {\n    return Promise.resolve('foo');\n};\n\nconst createMockActionContext = () => {\n    const ctx = <IActionContext>{\n        telemetry: new Telemetry(),\n        chainAction: (action: Function, input: IActionInput) => {\n            return action(input, ctx);\n        },\n        update: (input, data) => undefined,\n        get: (s, k) => undefined,\n        getAll: s => null,\n        trace: (message: string) => undefined,\n        requestContext: <IRequestContext>{},\n        runAllActionsInQueue: jest.fn()\n    };\n    return ctx;\n};\n\ndescribe('Create Data Action Unit Tests', () => {\n    it('Crrectly creates and runs standard actions', async () => {\n        const mockActionContext = createMockActionContext();\n\n        const dataAction = createDataAction({ action: mockActionFunc });\n\n        const result = await mockActionContext.chainAction(dataAction, mockActionInput);\n\n        expect(result).toBe('foo');\n    });\n\n    it('Correctly creates and runs direct actions', async () => {\n        const mockActionContext = createMockActionContext();\n\n        const dataAction = createDataAction({ action: mockActionFunc });\n\n        const result = await dataAction(mockActionInput, mockActionContext);\n\n        expect(result).toBe('foo');\n    });\n});\n"]}