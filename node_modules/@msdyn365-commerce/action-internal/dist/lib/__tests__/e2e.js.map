{"version":3,"file":"e2e.js","sourceRoot":"","sources":["../../../src/__tests__/e2e.ts"],"names":[],"mappings":"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","sourcesContent":["/*!\n * Copyright (c) Microsoft Corporation.\n * All rights reserved. See LICENSE in the project root for license information.\n */\n\nimport { AppCache, RequestCache } from '@msdyn365-commerce/cache-internal';\nimport { IAction, IObservableAction } from '@msdyn365-commerce/core-internal';\nimport { AsyncResult } from '@msdyn365-commerce/retail-proxy';\nimport 'jest';\nimport 'jest-extended';\nimport { ActionContext } from '../action-context';\nimport { ActionError } from '../action-error';\n\nimport getActionTimeout from '../__mocks__/actions/get-action-timeout';\nimport GetError from '../__mocks__/actions/get-error';\nimport GetListData, { numberOfTimesGetistDataCalledDuringTest } from '../__mocks__/actions/get-list-data';\nimport GetLongChain from '../__mocks__/actions/get-long-chain';\nimport { mockProductRatings } from '../__mocks__/actions/get-product-ratings';\nimport GetProducts, { mockProducts, numberOfTimesGetProductCalledDuringTest } from '../__mocks__/actions/get-products';\nimport GetRecoProducts, { mockChannelData } from '../__mocks__/actions/get-recommendation-products';\nimport GetDateTime from '../__mocks__/actions/get-datetime';\nimport getRecursiveChain from '../__mocks__/actions/get-recursive-chain';\nimport GetRepeatingChain from '../__mocks__/actions/get-repeating-chain';\nimport observableAction from '../__mocks__/actions/observable-action';\n\nimport GetProductByCategory, { productForCategoryIdC103, productForCategoryNameAA3 } from '../__mocks__/actions/get-products-by-category';\n\nimport GetCart, { mockGetCart } from '../__mocks__/actions/get-cart';\nimport GetCartError from '../__mocks__/actions/get-cart-hook-error';\nimport {\n    beforeCart,\n    afterCart,\n    preReadOnlyCart,\n    postReadOnlyCart,\n    preReadOnlyCartError,\n    postReadOnlyCartError,\n    afterCartError\n} from '../__mocks__/actions/get-cart-hook';\nimport { createDataActionHook } from '../create-data-action-hook';\n\ndescribe('E2E tests for action runtime', () => {\n    // Increase timeout for max depth tests\n    jest.setTimeout(45000);\n\n    afterAll(() => {\n        jest.resetModules();\n    });\n\n    test('test error hook', async () => {\n        console.log('\\n===== Test Case: testhook error =====  ');\n        const inputs: [IAction<any>, any, any][] = [\n            [GetCartError, { getCacheKey: () => 'ERR', getCacheObjectType: () => 'Error', shouldCacheOutput: () => false }, {}]\n        ];\n        const actionContext = new ActionContext({\n            id: 'T1',\n            requestContext: {},\n            requestCache: new RequestCache(),\n            appCache: null,\n            expectedActionCount: inputs.length\n        });\n\n        createDataActionHook({\n            actionId: 'TestHookError',\n            postHook: afterCartError\n        });\n\n        const promises = inputs.map((i, idx) =>\n            actionContext\n                .chainAction(i[0], i[0].prototype.inputFunc && i[0].prototype.inputFunc.call(i, { config: i[1], data: i[2] }))\n                .catch((err: Error) => {\n                    console.log('err is catched');\n                    console.log(err);\n                    expect(err.message).toBe('afterCartHookError');\n                })\n        );\n\n        await Promise.all(promises);\n    });\n\n    test('test hook', async () => {\n        console.log('\\n===== Test Case: testhook =====  ');\n\n        const inputs: [IAction<any>, any, any][] = [[GetCart, {}, {}]];\n        const actionContext = new ActionContext({\n            id: 'T1',\n            requestContext: {},\n            requestCache: new RequestCache(),\n            appCache: null,\n            expectedActionCount: inputs.length\n        });\n        const mockAfterCart = jest.fn(afterCart);\n        const mockBeforeCart = jest.fn(beforeCart);\n        const mockPreReadOnlyCart = jest.fn(preReadOnlyCart);\n        const mockPostReadOnlyCart = jest.fn(postReadOnlyCart);\n\n        // those error hook function wont afect the code flow\n        const MockPreReadOnlyCartError = jest.fn(preReadOnlyCartError);\n        const MockPostReadOnlyCartError = jest.fn(postReadOnlyCartError);\n\n        createDataActionHook({\n            actionId: 'TestHook',\n            postHook: mockAfterCart,\n            preHook: mockBeforeCart,\n            preReadonlyHook: mockPreReadOnlyCart,\n            postReadonlyHook: mockPostReadOnlyCart\n        });\n\n        createDataActionHook({\n            actionId: 'TestHook',\n            preReadonlyHook: MockPreReadOnlyCartError,\n            postReadonlyHook: MockPostReadOnlyCartError\n        });\n\n        const promises = inputs.map((i, idx) =>\n            actionContext\n                .chainAction(i[0], i[0].prototype.inputFunc && i[0].prototype.inputFunc.call(i, { config: i[1], data: i[2] }))\n                .catch((err: Error) => {\n                    expect(err.message).toBe('Get Error was called');\n                })\n        );\n        await Promise.all(promises);\n        expect(mockAfterCart).toHaveBeenCalledTimes(1);\n        expect(mockBeforeCart).toHaveBeenCalledTimes(1);\n        expect(mockPreReadOnlyCart).toHaveBeenCalledTimes(1);\n        expect(mockPostReadOnlyCart).toHaveBeenCalledTimes(1);\n\n        expect(mockBeforeCart).toHaveBeenCalledBefore(mockGetCart);\n        expect(mockGetCart).toHaveBeenCalledBefore(mockAfterCart);\n\n        // run the dataAction second times, this time, the action should be cached, and only preReadHook and postReadHook should be run\n        const promises2 = inputs.map((i, idx) =>\n            actionContext\n                .chainAction(i[0], i[0].prototype.inputFunc && i[0].prototype.inputFunc.call(i, { config: i[1], data: i[2] }))\n                .catch((err: Error) => {\n                    expect(idx).toBe(2);\n                    expect(err.message).toBe('Get Error was called');\n                })\n        );\n        await Promise.all(promises2);\n        // make sure only readOnly hooks run during the second round\n        expect(mockAfterCart).toHaveBeenCalledTimes(1);\n        expect(mockBeforeCart).toHaveBeenCalledTimes(1);\n        expect(mockPreReadOnlyCart).toHaveBeenCalledTimes(2);\n        expect(mockPostReadOnlyCart).toHaveBeenCalledTimes(2);\n    });\n    test('Batching de-duping work as expected', async () => {\n        console.log('\\n===== Test Case: General batching and de-duping of actions =====  ');\n        // tslint:disable:no-any\n        const inputs: [IAction<any>, any, any][] = [\n            [GetProducts, { productIds: ['100'] }, {}],\n            [GetProducts, { productIds: ['102'] }, {}],\n            [GetError, { getCacheKey: () => 'ERR', getCacheObjectType: () => 'Error', shouldCacheOutput: () => false }, {}],\n            [GetRecoProducts, { channel: 'top-free' }, {}],\n            [GetRecoProducts, { channel: 'trending' }, {}],\n            [GetListData, {}, { list: { $type: 'list', listType: 'Reco', channel: 'top-free' } }],\n            [GetListData, {}, { list: { $type: 'list', listType: 'Reco', channel: 'top-paid' } }],\n            [GetLongChain, {}, {}]\n        ];\n\n        const actionContext = new ActionContext({\n            id: 'T1',\n            requestContext: {},\n            requestCache: new RequestCache(),\n            appCache: null,\n            expectedActionCount: inputs.length\n        });\n\n        const promises = inputs.map((i, idx) =>\n            actionContext\n                .chainAction(i[0], i[0].prototype.inputFunc && i[0].prototype.inputFunc.call(i, { config: i[1], data: i[2] }))\n                .catch((err: Error) => {\n                    expect(idx).toBe(2);\n                    expect(err.message).toBe('Get Error was called');\n                })\n        );\n\n        const outputs = await Promise.all(promises);\n\n        // Verify response\n        compareJson(outputs[0][0], mockProducts['100']);\n        expect(outputs[0].length).toBe(1);\n        compareJson(outputs[1][0], mockProducts['102']);\n        expect(outputs[1].length).toBe(1);\n        compareJson(outputs[3], getRecoData('top-free'));\n        compareJson(outputs[4], getRecoData('trending'));\n        compareJson(outputs[5], getRecoData('top-free'));\n        compareJson(outputs[6], getRecoData('top-paid'));\n        expect(outputs[7].results).toBe(6);\n\n        // Verify number of times each action was called\n        expect(numberOfTimesGetProductCalledDuringTest).toBe(6);\n    });\n    test('Batched actions work when multiple calls are made', async () => {\n        console.log('\\n===== Batched action works when split across multiple action calls =====  ');\n        // tslint:disable:no-any\n        const inputs: [IAction<any>, any, any][] = [\n            [GetProducts, { productIds: ['100'] }, {}],\n            [GetProducts, { productIds: ['102'] }, {}],\n            [GetError, { getCacheKey: () => 'ERR', getCacheObjectType: () => 'Error', shouldCacheOutput: () => false }, {}],\n            [GetRecoProducts, { channel: 'top-free' }, {}],\n            [GetRecoProducts, { channel: 'trending' }, {}],\n            [GetListData, {}, { list: { $type: 'list', listType: 'Reco', channel: 'top-free' } }],\n            [GetListData, {}, { list: { $type: 'list', listType: 'Reco', channel: 'top-paid' } }],\n            [GetLongChain, {}, {}]\n        ];\n\n        const inputs2: [IAction<any>, any, any][] = [\n            [GetProducts, { productIds: ['107'] }, {}],\n            [GetProducts, { productIds: ['108'] }, {}]\n        ];\n\n        const actionContext = new ActionContext({\n            id: 'T1',\n            requestContext: {},\n            requestCache: new RequestCache(),\n            appCache: null,\n            expectedActionCount: inputs.length\n        });\n\n        const promises = inputs.map((i, idx) =>\n            actionContext\n                .chainAction(i[0], i[0].prototype.inputFunc && i[0].prototype.inputFunc.call(i, { config: i[1], data: i[2] }))\n                .catch((err: Error) => {\n                    expect(idx).toBe(2);\n                    expect(err.message).toBe('Get Error was called');\n                })\n        );\n\n        const promises2 = inputs2.map((i, idx) =>\n            actionContext.chainAction(i[0], i[0].prototype.inputFunc && i[0].prototype.inputFunc.call(i, { config: i[1], data: i[2] }))\n        );\n\n        const allPromises = promises.concat(promises2);\n        const outputs = await Promise.all(allPromises);\n\n        // Verify response\n        compareJson(outputs[0][0], mockProducts['100']);\n        expect(outputs[0].length).toBe(1);\n        compareJson(outputs[1][0], mockProducts['102']);\n        expect(outputs[1].length).toBe(1);\n        compareJson(outputs[3], getRecoData('top-free'));\n        compareJson(outputs[4], getRecoData('trending'));\n        compareJson(outputs[5], getRecoData('top-free'));\n        compareJson(outputs[6], getRecoData('top-paid'));\n        expect(outputs[7].results).toBe(6);\n        console.log(outputs);\n        compareJson(outputs[8][0], mockProducts['107']);\n        expect(outputs[8].length).toBe(1);\n        compareJson(outputs[9][0], mockProducts['108']);\n        expect(outputs[9].length).toBe(1);\n    });\n    test('Non-Batched de-duping work as expected', async () => {\n        console.log('\\n===== Test Case: de-duping of actions =====  ');\n        const inputs: [IAction<any>, any, any][] = [\n            [GetListData, {}, { list: { $type: 'list', listType: 'Reco', channel: 'top-free' } }],\n            [GetListData, {}, { list: { $type: 'list', listType: 'Reco', channel: 'top-paid' } }],\n            [GetListData, {}, { list: { $type: 'list', listType: 'Reco', channel: 'top-free' } }],\n            [GetListData, {}, { list: { $type: 'list', listType: 'Reco', channel: 'top-free' } }],\n            [GetLongChain, {}, {}]\n        ];\n\n        const actionContext = new ActionContext({\n            id: 'T2',\n            requestContext: {},\n            requestCache: new RequestCache(),\n            appCache: null,\n            expectedActionCount: inputs.length\n        });\n\n        // @ts-ignore\n        numberOfTimesGetistDataCalledDuringTest = 0;\n\n        const promises = inputs.map(i =>\n            actionContext.chainAction(i[0], i[0].prototype.inputFunc && i[0].prototype.inputFunc.call(i, { config: i[1], data: i[2] }))\n        );\n\n        const outputs = await Promise.all(promises);\n\n        // Verify response\n        compareJson(outputs[0], getRecoData('top-free'));\n        compareJson(outputs[1], getRecoData('top-paid'));\n        compareJson(outputs[2], getRecoData('top-free'));\n        compareJson(outputs[3], getRecoData('top-free'));\n\n        // Verify number of times each action was called\n        expect(numberOfTimesGetistDataCalledDuringTest).toBe(2);\n    });\n\n    test('inner chaining scenario inside an action', async () => {\n        console.log('\\n===== Test Case: chaining scenario =====  ');\n        const inputs: [IAction<any>, any][] = [\n            [GetProductByCategory, { categoryName: 'AA3' }], // have 3-chain action\n            [GetProductByCategory, { categoryId: 'C103' }] // have 2-chain action\n        ];\n\n        const actionContext = new ActionContext({\n            id: 'T0',\n            requestContext: {},\n            requestCache: new RequestCache(),\n            appCache: null,\n            expectedActionCount: inputs.length\n        });\n\n        const promises = inputs.map(i => {\n            return actionContext.chainAction(i[0], i[0].prototype.inputFunc && i[0].prototype.inputFunc.call(i, { config: i[1] }));\n        });\n\n        const outputs = await Promise.all(promises);\n\n        // Verify response\n        compareJson(outputs[0], productForCategoryNameAA3);\n        compareJson(outputs[1], productForCategoryIdC103);\n    });\n\n    test('inner chaining scenario inside an action with dedupe', async () => {\n        console.log('\\n===== Test Case: chaining scenario =====  ');\n        const inputs: [IAction<any>, any, any][] = [\n            [GetProductByCategory, { categoryName: 'AA3' }, {}], // have 3-chain action\n            [GetProductByCategory, { categoryId: 'C103' }, {}], // have 2-chain action\n            [GetListData, {}, { list: { $type: 'list', listType: 'Reco', channel: 'top-free' } }],\n            [GetListData, {}, { list: { $type: 'list', listType: 'Reco', channel: 'top-paid' } }],\n            [GetListData, {}, { list: { $type: 'list', listType: 'Reco', channel: 'top-free' } }],\n            [GetListData, {}, { list: { $type: 'list', listType: 'Reco', channel: 'top-free' } }],\n            [GetLongChain, {}, {}]\n        ];\n\n        const actionContext = new ActionContext({\n            id: 'T0',\n            requestContext: {},\n            requestCache: new RequestCache(),\n            appCache: null,\n            expectedActionCount: inputs.length\n        });\n\n        // @ts-ignore\n        numberOfTimesGetistDataCalledDuringTest = 0;\n\n        const promises = inputs.map(i => {\n            return actionContext.chainAction(\n                i[0],\n                i[0].prototype.inputFunc && i[0].prototype.inputFunc.call(i, { config: i[1], data: i[2] })\n            );\n        });\n\n        const outputs = await Promise.all(promises);\n\n        // Verify response\n        compareJson(outputs[0], productForCategoryNameAA3);\n        compareJson(outputs[1], productForCategoryIdC103);\n        compareJson(outputs[2], getRecoData('top-free'));\n        compareJson(outputs[3], getRecoData('top-paid'));\n        compareJson(outputs[4], getRecoData('top-free'));\n        compareJson(outputs[5], getRecoData('top-free'));\n\n        // Verify number of times each action was called\n        expect(numberOfTimesGetistDataCalledDuringTest).toBe(2);\n    });\n\n    test('Verify action execution when broken action in first slot', async () => {\n        console.log('\\n===== Test Case: Broken action in first slot =====  ');\n        const inputs: [IAction<any>, any][] = [\n            [GetError, { getCacheKey: () => 'ERR', getCacheObjectType: () => 'Error', shouldCacheOutput: () => false }],\n            [GetProducts, { productIds: ['102'] }],\n            [GetRecoProducts, { channel: 'top-free' }]\n        ];\n\n        const clientCache = new RequestCache();\n        const actionContext = new ActionContext({\n            id: 'T1',\n            requestContext: {},\n            requestCache: clientCache,\n            appCache: null,\n            expectedActionCount: inputs.length\n        });\n\n        const assertErrorCaught = jest.fn();\n        const promises = inputs.map((i, idx) =>\n            actionContext\n                .chainAction(i[0], i[0].prototype.inputFunc && i[0].prototype.inputFunc.call(i, { config: i[1] }))\n                .catch(assertErrorCaught)\n        );\n\n        const outputs = await Promise.all(promises);\n\n        expect((<AsyncResult<unknown>>clientCache.getValue({ typeName: 'Error', key: 'ERR' })).error).toEqual(\n            // @ts-ignore\n            new ActionError(new Error('Get Error was called'))\n        );\n        compareJson(outputs[1][0], mockProducts['102']);\n        expect(outputs[1].length).toBe(1);\n        compareJson(outputs[2], getRecoData('top-free'));\n\n        // Verify that the tier has ended\n        expect((<any>actionContext).hasRun).toBe(true);\n    });\n\n    test('Verify action execution when broken action in last slot', async () => {\n        console.log('\\n===== Test Case: Broken action in last slot ===== ');\n        const inputs: [IAction<any>, any][] = [\n            [GetProducts, { productIds: ['102'] }],\n            [GetRecoProducts, { channel: 'top-free' }],\n            [GetError, { getCacheKey: () => 'ERR', getCacheObjectType: () => 'Error', shouldCacheOutput: () => false }]\n        ];\n\n        const actionContext = new ActionContext({\n            id: 'T1',\n            requestContext: {},\n            requestCache: new RequestCache(),\n            appCache: null,\n            expectedActionCount: inputs.length\n        });\n\n        const promises = inputs.map((i, idx) =>\n            actionContext\n                .chainAction(i[0], i[0].prototype.inputFunc && i[0].prototype.inputFunc.call(i, { config: i[1] }))\n                .catch((e: Error) => {\n                    console.log('Error in E2E');\n                    console.log(e);\n                    expect(idx).toBe(2);\n                    expect(e.message).toBe('Get Error was called');\n                })\n        );\n        const outputs = await Promise.all(promises);\n\n        compareJson(outputs[0][0], mockProducts['102']);\n        expect(outputs[0].length).toBe(1);\n        compareJson(outputs[1], getRecoData('top-free'));\n\n        // Verify that the tier has ended\n        expect((<any>actionContext).hasRun).toBe(true);\n    });\n\n    test('Verify action execution spawns more children than maximum depth.', async () => {\n        const inputs: [IAction<any>, any][] = [];\n        for (let i = 0; i < 2000; i++) {\n            inputs.push([GetProducts, { productIds: ['102'] }]);\n        }\n\n        const actionContext = new ActionContext({\n            id: 'T1',\n            requestContext: {},\n            requestCache: new RequestCache(),\n            appCache: null,\n            expectedActionCount: inputs.length,\n            spawnChildOnExecute: true\n        });\n\n        const promises = inputs.map(i =>\n            actionContext.chainAction(i[0], i[0].prototype.inputFunc && i[0].prototype.inputFunc.call(i, { config: i[1] }))\n        );\n\n        const outputs = await Promise.all(promises);\n\n        compareJson(outputs[0][0], mockProducts['102']);\n        expect(outputs.length).toBe(2000);\n        compareJson(outputs[outputs.length - 1][0], mockProducts['102']);\n    });\n\n    test('Verify action execution stops when child tier recursively exceeds maximum.', async () => {\n        const inputs: [IAction<any>, any][] = [[getRecursiveChain, { loopCount: 200 }]];\n        const actionContext = new ActionContext({\n            id: 'Child-Tier-Max-Test',\n            requestContext: {},\n            requestCache: new RequestCache(),\n            appCache: null,\n            expectedActionCount: inputs.length,\n            spawnChildOnExecute: true\n        });\n\n        const promises = inputs.map(i =>\n            actionContext.chainAction(i[0], i[0].prototype.inputFunc && i[0].prototype.inputFunc.call(i, { config: i[1] }))\n        );\n\n        const outputs = await Promise.all(promises);\n\n        // completed recursions should match max depth\n        expect(outputs[0].recursionsComplete).toBe(200);\n    });\n\n    test('Verify action execution stops when child tier iteratively exceeds maximum', async () => {\n        console.log('\\n===== Test Case: Maximum exceeded within a zone ===== ');\n        const inputs: [IAction<any>, any][] = [[GetRepeatingChain, { loopCount: 200 }]];\n\n        const actionContext = new ActionContext({\n            id: 'T1',\n            requestContext: {},\n            requestCache: new RequestCache(),\n            appCache: null,\n            expectedActionCount: inputs.length,\n            spawnChildOnExecute: true\n        });\n\n        const promises = inputs.map(i =>\n            actionContext.chainAction(i[0], i[0].prototype.inputFunc && i[0].prototype.inputFunc.call(i, { config: i[1] }))\n        );\n\n        const outputs = await Promise.all(promises);\n\n        expect(outputs[0].iterationsCompleted).toBe(200);\n    });\n\n    test('Verify action execution stops when tier exceeds maximum inside of a zone.', async () => {\n        console.log('\\n===== Test Case: Maximum exceeded within a zone ===== ');\n        const inputs: [IAction<any>, any][] = [[GetRepeatingChain, { loopCount: 200 }]];\n\n        const actionContext = new ActionContext({\n            id: 'T1',\n            requestContext: {},\n            requestCache: new RequestCache(),\n            appCache: null,\n            expectedActionCount: inputs.length\n        });\n\n        const promises = inputs.map(i =>\n            actionContext.chainAction(i[0], i[0].prototype.inputFunc && i[0].prototype.inputFunc.call(i, { config: i[1] }))\n        );\n\n        const outputs = await Promise.all(promises);\n\n        expect(outputs[0].iterationsCompleted).toBe(200);\n    });\n\n    test('Verify action execution stops when child tier iteratively exceeds maximum set in app', async () => {\n        console.log('\\n===== Test Case: Maximum exceeded within a zone ===== ');\n        const inputs: [IAction<any>, any][] = [[GetRepeatingChain, { loopCount: 700 }]];\n\n        const actionContext = new ActionContext({\n            id: 'T1',\n            requestContext: {\n                app: {\n                    platform: {\n                        maxDepth: 250\n                    }\n                }\n            },\n            requestCache: new RequestCache(),\n            appCache: null,\n            expectedActionCount: inputs.length,\n            spawnChildOnExecute: true\n        });\n\n        const promises = inputs.map(i =>\n            actionContext.chainAction(i[0], i[0].prototype.inputFunc && i[0].prototype.inputFunc.call(i, { config: i[1] }))\n        );\n\n        const outputs = await Promise.all(promises);\n\n        expect(outputs[0].iterationsCompleted).toBe(250);\n    });\n\n    test('Verify action execution stops when action exceeds timeout.', async () => {\n        process.env.CURRENT_ENVIRONMENT = 'node';\n        const inputs: [IAction<any>, any][] = [\n            [getActionTimeout, { timeout: 2000 }],\n            [getActionTimeout, { timeout: 2 }]\n        ];\n\n        const actionContext = new ActionContext({\n            id: 'T1',\n            requestContext: {\n                query: {\n                    actionTimeout: 5\n                },\n                features: {\n                    action_timeout: true\n                }\n            },\n            requestCache: new RequestCache(),\n            appCache: null,\n            expectedActionCount: inputs.length\n        });\n\n        const promises = inputs.map(([action, input]) => {\n            return actionContext\n                .chainAction(action, action.prototype.inputFunc && action.prototype.inputFunc({ config: input }))\n                .catch(() => {\n                    console.log('Catching an error');\n                });\n        });\n        const outputs = await Promise.all(promises);\n        expect(outputs[0]).toBeUndefined();\n        expect(outputs[1]).toBe(2);\n    });\n    test('Verify action execution has no timeout in the browser.', async () => {\n        process.env.CURRENT_ENVIRONMENT = 'web';\n        const inputs: [IAction<any>, any][] = [[getActionTimeout, { timeout: 100 }]];\n\n        const actionContext = new ActionContext({\n            id: 'T1',\n            requestContext: {\n                query: {\n                    actionTimeout: 5\n                },\n                features: {\n                    action_timeout: true\n                }\n            },\n            requestCache: new RequestCache(),\n            appCache: null,\n            expectedActionCount: inputs.length\n        });\n\n        const promises = inputs.map(([action, input]) => {\n            return actionContext.chainAction(action, action.prototype.inputFunc && action.prototype.inputFunc({ config: input }));\n        });\n        const outputs = await Promise.all(promises);\n        expect(outputs[0]).toBe(100);\n    });\n\n    test.skip('Verify action retries execution if previous execution times out', async () => {\n        process.env.CURRENT_ENVIRONMENT = 'node';\n        const inputs: [IAction<any>, any][] = [[getActionTimeout, { timeout: 1000 }]];\n        const requestCache = new RequestCache();\n        const actionContext = new ActionContext({\n            id: 'T1',\n            requestContext: {\n                query: {\n                    actionTimeout: 1\n                },\n                features: {\n                    action_timeout: true\n                }\n            },\n            requestCache,\n            appCache: null,\n            expectedActionCount: inputs.length\n        });\n\n        const firstOutput = await Promise.all(\n            inputs.map(([action, input]) => {\n                return actionContext.chainAction(action, action.prototype.inputFunc && action.prototype.inputFunc({ config: input }));\n            })\n        );\n        expect(firstOutput[0]).toBeNull();\n\n        const secondContext = new ActionContext({\n            id: 'T2',\n            requestContext: {\n                query: {\n                    actionTimeout: 2000\n                },\n                features: {\n                    action_timeout: true\n                }\n            },\n            requestCache,\n            appCache: null,\n            expectedActionCount: inputs.length\n        });\n\n        const secondOutput = await Promise.all(\n            inputs.map(([action, input]) => {\n                return secondContext.chainAction(action, action.prototype.inputFunc && action.prototype.inputFunc({ config: input }));\n            })\n        );\n        expect(secondOutput[0]).toBe(1000);\n    });\n\n    test('Verify basic observable action functionality', async () => {\n        process.env.CURRENT_ENVIRONMENT = 'node';\n        const inputs: [IObservableAction<any>, any][] = [[observableAction, {}]];\n        const requestCache = new RequestCache();\n        const actionContext = new ActionContext({\n            id: 'T1',\n            requestContext: {},\n            requestCache,\n            appCache: null,\n            expectedActionCount: inputs.length\n        });\n\n        const output = await Promise.all(\n            inputs.map(([action, input]) => {\n                return action(action.prototype.inputFunc(input), actionContext);\n            })\n        );\n        expect(output).toEqual(['foo']);\n    });\n\n    test('validating action-context get and getAll from request-cache', async () => {\n        console.log('\\n===== Test Case: validating action-context get and getAll from request-cache =====  ');\n        // tslint:disable:no-any\n        const inputs: [IAction<any>, any, any][] = [\n            [GetProducts, { productIds: ['100'] }, {}],\n            [GetProducts, { productIds: ['102'] }, {}],\n            [GetError, { getCacheKey: () => 'ERR', getCacheObjectType: () => 'Error', shouldCacheOutput: () => false }, {}],\n            [GetRecoProducts, { channel: 'top-free' }, {}],\n            [GetRecoProducts, { channel: 'trending' }, {}],\n            [GetListData, {}, { list: { $type: 'list', listType: 'Reco', channel: 'top-free' } }],\n            [GetListData, {}, { list: { $type: 'list', listType: 'Reco', channel: 'top-paid' } }],\n            [GetLongChain, {}, {}]\n        ];\n\n        const actionContext = new ActionContext({\n            id: 'T1',\n            requestContext: {},\n            requestCache: new RequestCache(),\n            appCache: null,\n            expectedActionCount: inputs.length\n        });\n\n        const promises = inputs.map((i, idx) =>\n            actionContext\n                .chainAction(i[0], i[0].prototype.inputFunc && i[0].prototype.inputFunc.call(i, { config: i[1], data: i[2] }))\n                .catch((err: Error) => {\n                    expect(idx).toBe(2);\n                    expect(err.message).toBe('Get Error was called');\n                })\n        );\n\n        await Promise.all(promises);\n        // verify get\n        expect(actionContext.get('product', '100')).toEqual(mockProducts['100']);\n\n        // verify get for invalid product type\n        expect(actionContext.get('invalid_key', '100')).toBeNull();\n\n        // verify getAll\n        expect(actionContext.getAll('product')).toEqual(Object.keys(mockProducts).map(key => mockProducts[key]));\n\n        // verify getAll for invalid product type\n        expect(actionContext.getAll('invalid_key')).toBeNull();\n    });\n\n    test('validating action-context get and getAll from app-cache', done => {\n        console.log('\\n===== Test Case: validating action-context get and getAll from app-cache =====  ');\n        // tslint:disable:no-any\n        const inputs: [IAction<any>, any, any][] = [\n            [GetProducts, { productIds: ['100'] }, {}],\n            [GetProducts, { productIds: ['102'] }, {}],\n            [GetError, { getCacheKey: () => 'ERR', getCacheObjectType: () => 'Error', shouldCacheOutput: () => false }, {}],\n            [GetRecoProducts, { channel: 'top-free' }, {}],\n            [GetRecoProducts, { channel: 'trending' }, {}],\n            [GetListData, {}, { list: { $type: 'list', listType: 'Reco', channel: 'top-free' } }],\n            [GetListData, {}, { list: { $type: 'list', listType: 'Reco', channel: 'top-paid' } }],\n            [GetLongChain, {}, {}]\n        ];\n\n        const actionContext = new ActionContext({\n            id: 'T1',\n            requestContext: {\n                features: {\n                    disable_app_cache: false\n                }\n            },\n            requestCache: new RequestCache(),\n            appCache: new AppCache({\n                ttlInSeconds: {\n                    PRODUCT: 60\n                }\n            }),\n            expectedActionCount: inputs.length\n        });\n\n        const promises = inputs.map((i, idx) =>\n            actionContext\n                .chainAction(i[0], i[0].prototype.inputFunc && i[0].prototype.inputFunc.call(i, { config: i[1], data: i[2] }))\n                .catch((err: Error) => {\n                    expect(idx).toBe(2);\n                    expect(err.message).toBe('Get Error was called');\n                })\n        );\n\n        // tslint:disable-next-line: no-floating-promises\n        Promise.all(promises).then(() => {\n            // @ts-ignore\n            actionContext.requestCache = new RequestCache();\n\n            // verify get\n            expect(actionContext.get('product', '100')).toEqual(mockProducts['100']);\n            // verify get for invalid product type\n            expect(actionContext.get('invalid_key', '100')).toBeNull();\n\n            // verify getAll\n            const items = actionContext.getAll('product');\n            // @ts-ignore\n            items!.map(item => expect(mockProducts[item.Id]).toEqual(item));\n\n            // verify getAll for invalid product type\n            expect(actionContext.getAll('invalid_key')).toBeNull();\n\n            done();\n        });\n    });\n});\n\ntest('validating bypass cache option bypassing request cache as well', async () => {\n    const inputs1: [IAction<any>, any, any][] = [[GetDateTime, {}, {}]];\n\n    const requestCache = new RequestCache();\n    const actionContext1 = new ActionContext({\n        id: 'T1',\n        requestContext: {},\n        requestCache,\n        appCache: null,\n        expectedActionCount: inputs1.length\n    });\n\n    let promises = inputs1.map(([action, input]) => {\n        return actionContext1.chainAction(action, action.prototype.inputFunc && action.prototype.inputFunc({ config: input })).catch(() => {\n            console.log('Catching an error');\n        });\n    });\n\n    const outputs1 = await Promise.all(promises);\n\n    // re-run the action again with cachebypass flag set to true\n    const inputs2: [IAction<any>, any, any][] = [[GetDateTime, {}, {}]];\n\n    const actionContext2 = new ActionContext({\n        id: 'T1',\n        requestContext: { features: {}, query: { cachebypass: 'get' } },\n        requestCache,\n        appCache: null,\n        expectedActionCount: inputs2.length\n    });\n\n    promises = inputs2.map(([action, input]) => {\n        return actionContext2.chainAction(action, action.prototype.inputFunc && action.prototype.inputFunc({ config: input })).catch(() => {\n            console.log('Catching an error');\n        });\n    });\n    const outputs2 = await Promise.all(promises);\n    expect(outputs1[0]).not.toEqual(outputs2[0]);\n});\n\nfunction getRecoData(id: string): any {\n    return {\n        responseIds: mockChannelData[id],\n        products: (<string[]>mockChannelData[id]).map(p => {\n            return { product: mockProducts[p], rating: mockProductRatings[p].Rating };\n        })\n    };\n}\n\nfunction compareJson(actual: any, expected: any): void {\n    actual = JSON.stringify(actual);\n    expected = JSON.stringify(expected);\n    expect(actual).toBe(expected);\n}\n"]}