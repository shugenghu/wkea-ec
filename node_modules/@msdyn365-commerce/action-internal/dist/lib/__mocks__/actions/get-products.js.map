{"version":3,"file":"get-products.js","sourceRoot":"","sources":["../../../../src/__mocks__/actions/get-products.ts"],"names":[],"mappings":"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","sourcesContent":["/*!\n * Copyright (c) Microsoft Corporation.\n * All rights reserved. See LICENSE in the project root for license information.\n */\n\nimport { IAction, IActionContext, IActionInput, ICreateActionContext } from '@msdyn365-commerce/core-internal';\nimport { createDataAction } from '../../create-data-action';\n\n/*@internal*/\nexport let numberOfTimesGetProductCalledDuringTest: number = 0;\n\n/*@internal*/\nexport class ProductInput implements IActionInput {\n    public ProductId: string;\n\n    constructor(id: string) {\n        this.ProductId = id;\n    }\n\n    public shouldCacheOutput = () => true;\n    public getCacheObjectType = () => 'PRODUCT';\n    public getCacheKey = () => this.ProductId;\n}\n\nasync function GetProducts(inputs: ProductInput[], ctx: IActionContext): Promise<MockProduct[]> {\n    ctx.trace(`Calling GetProducts with ids: ${inputs.map(input => input.ProductId).join('|')}`);\n    const fetchIds: string[] = inputs.map(i => i.ProductId);\n\n    numberOfTimesGetProductCalledDuringTest++;\n    return fetchProducts(fetchIds, ctx);\n}\n\nasync function fetchProducts(productIds: string[], ctx: IActionContext): Promise<MockProduct[]> {\n    ctx.trace(`Fetching products: ${productIds.join('!')}`);\n    const products: MockProduct[] = [];\n    productIds.map(id => products.push(mockProducts[id] as MockProduct));\n    return Promise.resolve(products);\n}\n\nconst createGetProductsInput = (arg: ICreateActionContext<any>): IActionInput[] => {\n    if (arg.config && arg.config.productIds) {\n        return arg.config.productIds.map((pid: string) => new ProductInput(pid));\n    }\n\n    throw new Error('config is not well defined for product input');\n};\n\n//// MOCK data\n/*@internal*/\nexport interface MockProduct {\n    Id: string;\n    Title: string;\n    Description?: string;\n}\n\n/*@internal*/\nexport const mockProducts: any = {\n    100: { Id: '100', Title: 'Product 100', Description: 'Product Description for 100' },\n    101: { Id: '101', Title: 'Product 101', Description: 'Product Description for 101' },\n    102: { Id: '102', Title: 'Product 102', Description: 'Product Description for 102' },\n    103: { Id: '103', Title: 'Product 103', Description: 'Product Description for 103' },\n    104: { Id: '104', Title: 'Product 104', Description: 'Product Description for 104' },\n    105: { Id: '105', Title: 'Product 105', Description: 'Product Description for 105' },\n    106: { Id: '106', Title: 'Product 106', Description: 'Product Description for 106' },\n    107: { Id: '107', Title: 'Product 107', Description: 'Product Description for 107' },\n    108: { Id: '108', Title: 'Product 108', Description: 'Product Description for 108' },\n    109: { Id: '109', Title: 'Product 109', Description: 'Product Description for 109' },\n    110: { Id: '110', Title: 'Product 110', Description: 'Product Description for 110' },\n    111: { Id: '111', Title: 'Product 111', Description: 'Product Description for 111' },\n    112: { Id: '112', Title: 'Product 112', Description: 'Product Description for 112' }\n};\n\n/*@internal*/\nexport default createDataAction({\n    action: GetProducts as IAction<MockProduct[]>,\n    input: createGetProductsInput,\n    isBatched: true\n});\n"]}