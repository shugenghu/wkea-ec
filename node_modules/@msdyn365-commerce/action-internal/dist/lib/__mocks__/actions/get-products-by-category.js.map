{"version":3,"file":"get-products-by-category.js","sourceRoot":"","sources":["../../../../src/__mocks__/actions/get-products-by-category.ts"],"names":[],"mappings":"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","sourcesContent":["/*!\n * Copyright (c) Microsoft Corporation.\n * All rights reserved. See LICENSE in the project root for license information.\n */\n\nimport { IAction, IActionContext, IActionInput, ICreateActionContext } from '@msdyn365-commerce/core-internal';\nimport { createDataAction } from '../../create-data-action';\nimport getCategoriesAsync, { CategoryInput, IMockCategory } from './get-categories';\nimport GetProducts, { MockProduct, ProductInput } from './get-products';\nimport searchByCategoryAsync, { ProductSearch, ProductSearchInput } from './search-products-by-category';\n\n/*@internal*/\nexport class ProductsByCategoryInput implements IActionInput {\n    public categoryId?: string;\n    public categoryName?: string;\n\n    constructor(id: string, name: string) {\n        this.categoryId = id;\n        this.categoryName = name;\n    }\n\n    public shouldCacheOutput = () => true;\n    public getCacheObjectType = () => 'GetProductByCategory';\n    public getCacheKey = () => `${this.categoryId}|${this.categoryName}`;\n}\n\n/**\n * createInput method for the getProductsByCategory data aciton\n */\nexport const createGetProductsByCategoryInput = (arg: ICreateActionContext<any>): IActionInput => {\n    if (!arg.config || (!arg.config.categoryId && !arg.config.categoryName)) {\n        throw new Error('Please specify categoryId or categoryName.');\n    }\n\n    return new ProductsByCategoryInput(arg.config.categoryId, arg.config.categoryName);\n};\n\nasync function GetProductByCategory(input: ProductsByCategoryInput, ctx: IActionContext): Promise<MockProduct[]> {\n    ctx.trace(`Calling GetProductByCategory with category: ${input.categoryId}|${input.categoryName}`);\n\n    let categoryId = input.categoryId;\n    if (!categoryId) {\n        const categories = await getCategoriesAsync(new CategoryInput('mock-chanel-id'), ctx);\n        if (!categories || categories.length === 0) {\n            throw new Error(`get categories failed for channel ID`);\n        }\n        categories.forEach((category: IMockCategory) => {\n            if (category.Name.toLowerCase() === input.categoryName!.toLowerCase()) {\n                categoryId = category.Id;\n            }\n        });\n    }\n\n    if (!categoryId) {\n        throw new Error(`Invalid category name - '[${input.categoryName}]'`);\n    }\n\n    const productInputs = await searchByCategoryAsync(new ProductSearchInput(categoryId), ctx).then(productSearchResults => {\n        return productSearchResults.map((product: ProductSearch) => {\n            return new ProductInput(product.RecordId);\n        });\n    });\n\n    if (productInputs.length > 0) {\n        return GetProducts(productInputs, ctx);\n    } else {\n        return [] as MockProduct[];\n    }\n}\n\nexport const productForCategoryNameAA3 = [\n    { Id: '108', Title: 'Product 108', Description: 'Product Description for 108' },\n    { Id: '109', Title: 'Product 109', Description: 'Product Description for 109' },\n    { Id: '104', Title: 'Product 104', Description: 'Product Description for 104' },\n    { Id: '111', Title: 'Product 111', Description: 'Product Description for 111' }\n];\nexport const productForCategoryIdC103 = [\n    { Id: '103', Title: 'Product 103', Description: 'Product Description for 103' },\n    { Id: '106', Title: 'Product 106', Description: 'Product Description for 106' },\n    { Id: '108', Title: 'Product 108', Description: 'Product Description for 108' },\n    { Id: '112', Title: 'Product 112', Description: 'Product Description for 112' },\n    { Id: '107', Title: 'Product 107', Description: 'Product Description for 107' },\n    { Id: '104', Title: 'Product 104', Description: 'Product Description for 104' }\n];\n\n/*@internal*/\nexport default createDataAction({\n    action: GetProductByCategory as IAction<MockProduct[]>,\n    input: createGetProductsByCategoryInput\n});\n"]}