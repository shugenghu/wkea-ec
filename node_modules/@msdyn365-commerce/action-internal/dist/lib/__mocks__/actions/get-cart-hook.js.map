{"version":3,"file":"get-cart-hook.js","sourceRoot":"","sources":["../../../../src/__mocks__/actions/get-cart-hook.ts"],"names":[],"mappings":"AAAA;;;GAGG;AAGH,0DAA0D;AAE1D,MAAM,CAAC,MAAM,UAAU,GAAG,KAAK,EAAE,MAAqC,EAAE,EAAE;IACtE,uCAAuC;IACvC,OAAO,CAAC,IAAI,CAAC,UAAU,CAAC,CAAC;AAC7B,CAAC,CAAC;AAEF,MAAM,CAAC,MAAM,SAAS,GAAG,KAAK,EAAE,OAAsC,EAAE,QAA2B,EAAE,EAAE;IACnG,uCAAuC;IACvC,OAAO,CAAC,IAAI,CAAC,WAAW,CAAC,CAAC;AAC9B,CAAC,CAAC;AAEF,MAAM,CAAC,MAAM,eAAe,GAAG,KAAK,EAAE,MAAqC,EAAE,EAAE;IAC3E,uCAAuC;IACvC,OAAO,CAAC,IAAI,CAAC,mBAAmB,CAAC,CAAC;AACtC,CAAC,CAAC;AAEF,MAAM,CAAC,MAAM,gBAAgB,GAAG,KAAK,EAAE,OAAsC,EAAE,QAA2B,EAAE,EAAE;IAC1G,uCAAuC;IACvC,OAAO,CAAC,IAAI,CAAC,oBAAoB,CAAC,CAAC;AACvC,CAAC,CAAC;AAEF,MAAM,CAAC,MAAM,oBAAoB,GAAG,KAAK,EAAE,MAAqC,EAAE,EAAE;IAChF,uCAAuC;IACvC,MAAM,kBAAkB,CAAC;AAC7B,CAAC,CAAC;AAEF,MAAM,CAAC,MAAM,qBAAqB,GAAG,KAAK,EAAE,OAAsC,EAAE,QAA2B,EAAE,EAAE;IAC/G,uCAAuC;IACvC,MAAM,mBAAmB,CAAC;AAC9B,CAAC,CAAC;AAEF,MAAM,CAAC,MAAM,cAAc,GAAG,KAAK,EAAE,OAAsC,EAAE,QAA2B,EAAE,EAAE;IACxG,uCAAuC;IACvC,MAAM,IAAI,KAAK,CAAC,oBAAoB,CAAC,CAAC;AAC1C,CAAC,CAAC","sourcesContent":["/*!\n * Copyright (c) Microsoft Corporation.\n * All rights reserved. See LICENSE in the project root for license information.\n */\n\nimport { IActionInput } from '@msdyn365-commerce/core-internal';\n// import { Cart } from '@msdyn365-commerce/retail-proxy';\n\nexport const beforeCart = async (inputs: IActionInput | IActionInput[]) => {\n    // tslint:disable-next-line: no-console\n    console.info('Pre Hook');\n};\n\nexport const afterCart = async (_inputs: IActionInput | IActionInput[], cartName: string | string[]) => {\n    // tslint:disable-next-line: no-console\n    console.info('Post Hook');\n};\n\nexport const preReadOnlyCart = async (inputs: IActionInput | IActionInput[]) => {\n    // tslint:disable-next-line: no-console\n    console.info('Pre ReadOnly Hook');\n};\n\nexport const postReadOnlyCart = async (_inputs: IActionInput | IActionInput[], cartName: string | string[]) => {\n    // tslint:disable-next-line: no-console\n    console.info('Post ReadOnly Hook');\n};\n\nexport const preReadOnlyCartError = async (inputs: IActionInput | IActionInput[]) => {\n    // tslint:disable-next-line: no-console\n    throw 'PreReadOnlyError';\n};\n\nexport const postReadOnlyCartError = async (_inputs: IActionInput | IActionInput[], cartName: string | string[]) => {\n    // tslint:disable-next-line: no-console\n    throw 'PostReadOnlyError';\n};\n\nexport const afterCartError = async (_inputs: IActionInput | IActionInput[], cartName: string | string[]) => {\n    // tslint:disable-next-line: no-console\n    throw new Error('afterCartHookError');\n};\n"]}