/*!
 * Copyright (c) Microsoft Corporation.
 * All rights reserved. See LICENSE in the project root for license information.
 */
import { createDataAction } from '../../create-data-action';
/*@internal*/
export class ProductRatingInput {
    constructor(id) {
        this.shouldCacheOutput = () => true;
        this.getCacheObjectType = () => 'PRODUCT_RATING';
        this.getCacheKey = () => this.ProductId;
        this.ProductId = id;
    }
}
async function GetProductRatings(inputs, ctx) {
    const fetchIds = inputs.map(i => i.ProductId);
    return fetchProductRatings(fetchIds, ctx);
}
async function fetchProductRatings(productIds, ctx) {
    ctx.trace(`Fetching product ratings: ${productIds.join('!')}`);
    const productRatings = [];
    productIds.map(id => productRatings.push(mockProductRatings[id]));
    return Promise.resolve(productRatings);
}
const createGetProductRatingsInput = (arg) => {
    if (arg.config && arg.config.productIds) {
        return arg.config.productIds.map((pid) => new ProductRatingInput(pid));
    }
    throw new Error('config is not well defined for product rating input');
};
/*@internal*/
export const mockProductRatings = {
    100: { Id: '100', Rating: 4.2 },
    101: { Id: '101', Rating: 3.8 },
    102: { Id: '102', Rating: 4.1 },
    103: { Id: '103', Rating: 5 },
    104: { Id: '104', Rating: 1.8 },
    105: { Id: '105', Rating: 3.7 },
    106: { Id: '106', Rating: 4.4 },
    107: { Id: '107', Rating: 4.6 },
    108: { Id: '108', Rating: 2.9 },
    109: { Id: '109', Rating: 4.9 },
    110: { Id: '110', Rating: 3 },
    111: { Id: '111', Rating: 0.3 },
    112: { Id: '112', Rating: 0.9 }
};
/*@internal*/
export default createDataAction({
    action: GetProductRatings,
    input: createGetProductRatingsInput,
    isBatched: true
});
//# sourceMappingURL=get-product-ratings.js.map