{"version":3,"file":"get-categories.js","sourceRoot":"","sources":["../../../../src/__mocks__/actions/get-categories.ts"],"names":[],"mappings":"AAAA;;;GAGG;AAGH,OAAO,EAAE,gBAAgB,EAAE,MAAM,0BAA0B,CAAC;AAE5D,aAAa;AACb,MAAM,CAAC,MAAM,uCAAuC,GAAW,CAAC,CAAC;AAEjE;;GAEG;AACH,aAAa;AACb,MAAM,OAAO,aAAa;IAGtB,YAAY,EAAU;QAIf,sBAAiB,GAAG,GAAG,EAAE,CAAC,IAAI,CAAC;QAC/B,uBAAkB,GAAG,GAAG,EAAE,CAAC,UAAU,CAAC;QACtC,gBAAW,GAAG,GAAG,EAAE,CAAC,IAAI,CAAC,SAAS,CAAC;QALtC,IAAI,CAAC,SAAS,GAAG,EAAE,CAAC;IACxB,CAAC;CAKJ;AAED,KAAK,UAAU,aAAa,CAAC,MAAqB,EAAE,GAAyB;IACzE,GAAG,CAAC,KAAK,CAAC,wCAAwC,MAAM,CAAC,SAAS,EAAE,CAAC,CAAC;IACtE,OAAO,OAAO,CAAC,OAAO,CAAC,cAAc,CAAC,CAAC;AAC3C,CAAC;AASD,aAAa;AACb,MAAM,CAAC,MAAM,cAAc,GAAG;IAC1B,EAAE,EAAE,EAAE,MAAM,EAAE,IAAI,EAAE,KAAK,EAAE;IAC3B,EAAE,EAAE,EAAE,MAAM,EAAE,IAAI,EAAE,KAAK,EAAE;IAC3B,EAAE,EAAE,EAAE,MAAM,EAAE,IAAI,EAAE,KAAK,EAAE;IAC3B,EAAE,EAAE,EAAE,MAAM,EAAE,IAAI,EAAE,KAAK,EAAE;IAC3B,EAAE,EAAE,EAAE,MAAM,EAAE,IAAI,EAAE,KAAK,EAAE;CAC9B,CAAC;AAEF,aAAa;AACb,eAAe,gBAAgB,CAAC;IAC5B,MAAM,EAAE,aAA+C;IACvD,KAAK,EAAE,GAAG,EAAE,CAAC,IAAI,aAAa,CAAC,gBAAgB,CAAC;CACnD,CAAC,CAAC","sourcesContent":["/*!\n * Copyright (c) Microsoft Corporation.\n * All rights reserved. See LICENSE in the project root for license information.\n */\n\nimport * as Model from '@msdyn365-commerce/core-internal';\nimport { createDataAction } from '../../create-data-action';\n\n/*@internal*/\nexport const numberOfTimesGetProductCalledDuringTest: number = 0;\n\n/**\n * test class\n */\n/*@internal*/\nexport class CategoryInput implements Model.IActionInput {\n    public channelId: string;\n\n    constructor(id: string) {\n        this.channelId = id;\n    }\n\n    public shouldCacheOutput = () => true;\n    public getCacheObjectType = () => 'Category';\n    public getCacheKey = () => this.channelId;\n}\n\nasync function getCategories(inputs: CategoryInput, ctx: Model.IActionContext): Promise<IMockCategory[]> {\n    ctx.trace(`Calling GetCategories with category: ${inputs.channelId}`);\n    return Promise.resolve(mockCategories);\n}\n\n//// MOCK data\n/*@internal*/\nexport interface IMockCategory {\n    Id: string;\n    Name: string;\n}\n\n/*@internal*/\nexport const mockCategories = [\n    { Id: 'C100', Name: 'AA1' },\n    { Id: 'C101', Name: 'AA2' },\n    { Id: 'C102', Name: 'AA3' },\n    { Id: 'C103', Name: 'AA4' },\n    { Id: 'C104', Name: 'AA5' }\n];\n\n/*@internal*/\nexport default createDataAction({\n    action: getCategories as Model.IAction<IMockCategory[]>,\n    input: () => new CategoryInput('mock-chanel-id')\n});\n"]}