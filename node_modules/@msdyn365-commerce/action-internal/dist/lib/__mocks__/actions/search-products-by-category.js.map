{"version":3,"file":"search-products-by-category.js","sourceRoot":"","sources":["../../../../src/__mocks__/actions/search-products-by-category.ts"],"names":[],"mappings":"AAAA;;;GAGG;AAGH,OAAO,EAAE,gBAAgB,EAAE,MAAM,0BAA0B,CAAC;AAE5D,aAAa;AACb,MAAM,CAAC,IAAI,uCAAuC,GAAW,CAAC,CAAC;AAE/D,aAAa;AACb,MAAM,OAAO,kBAAkB;IAG3B,YAAY,EAAU;QAIf,sBAAiB,GAAG,GAAG,EAAE,CAAC,IAAI,CAAC;QAC/B,uBAAkB,GAAG,GAAG,EAAE,CAAC,eAAe,CAAC;QAC3C,gBAAW,GAAG,GAAG,EAAE,CAAC,IAAI,CAAC,UAAU,CAAC;QALvC,IAAI,CAAC,UAAU,GAAG,EAAE,CAAC;IACzB,CAAC;CAKJ;AAED,KAAK,UAAU,gBAAgB,CAAC,MAA0B,EAAE,GAAmB;IAC3E,GAAG,CAAC,KAAK,CAAC,mCAAmC,MAAM,CAAC,UAAU,EAAE,CAAC,CAAC;IAClE,MAAM,QAAQ,GACV,YAAY,IAAI,MAAM,CAAC,IAAI,CAAC,YAAY,CAAC,CAAC,OAAO,CAAC,MAAM,CAAC,UAAU,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,CAAC,YAAY,CAAC,MAAM,CAAC,UAAU,CAAC,CAAC,CAAC,CAAC,SAAS,CAAC;IAC5H,OAAO,OAAO,CAAC,OAAO,CAAC,QAAQ,CAAC,CAAC;AACrC,CAAC;AAED,MAAM,sBAAsB,GAAG,CAAC,GAA8B,EAAgB,EAAE;IAC5E,IAAI,GAAG,CAAC,MAAM,IAAI,GAAG,CAAC,MAAM,CAAC,UAAU,EAAE;QACrC,OAAO,IAAI,kBAAkB,CAAC,GAAG,CAAC,MAAM,CAAC,UAAU,CAAC,CAAC;KACxD;IAED,MAAM,IAAI,KAAK,CAAC,yDAAyD,CAAC,CAAC;AAC/E,CAAC,CAAC;AAQF,aAAa;AACb,MAAM,CAAC,MAAM,YAAY,GAAQ;IAC7B,IAAI,EAAE,CAAC,EAAE,QAAQ,EAAE,KAAK,EAAE,EAAE,EAAE,QAAQ,EAAE,KAAK,EAAE,EAAE,EAAE,QAAQ,EAAE,KAAK,EAAE,CAAC;IACrE,IAAI,EAAE,CAAC,EAAE,QAAQ,EAAE,KAAK,EAAE,EAAE,EAAE,QAAQ,EAAE,KAAK,EAAE,EAAE,EAAE,QAAQ,EAAE,KAAK,EAAE,EAAE,EAAE,QAAQ,EAAE,KAAK,EAAE,EAAE,EAAE,QAAQ,EAAE,KAAK,EAAE,CAAC;IAC/G,IAAI,EAAE,CAAC,EAAE,QAAQ,EAAE,KAAK,EAAE,EAAE,EAAE,QAAQ,EAAE,KAAK,EAAE,EAAE,EAAE,QAAQ,EAAE,KAAK,EAAE,EAAE,EAAE,QAAQ,EAAE,KAAK,EAAE,CAAC;IAC1F,IAAI,EAAE,CAAC,EAAE,QAAQ,EAAE,KAAK,EAAE,EAAE,EAAE,QAAQ,EAAE,KAAK,EAAE,EAAE,EAAE,QAAQ,EAAE,KAAK,EAAE,EAAE,EAAE,QAAQ,EAAE,KAAK,EAAE,EAAE,EAAE,QAAQ,EAAE,KAAK,EAAE,EAAE,EAAE,QAAQ,EAAE,KAAK,EAAE,CAAC;IACpI,IAAI,EAAE,CAAC,EAAE,QAAQ,EAAE,KAAK,EAAE,EAAE,EAAE,QAAQ,EAAE,KAAK,EAAE,CAAC;CACnD,CAAC;AAEF,aAAa;AACb,eAAe,gBAAgB,CAAC;IAC5B,MAAM,EAAE,gBAA4C;IACpD,KAAK,EAAE,sBAAsB;CAChC,CAAC,CAAC","sourcesContent":["/*!\n * Copyright (c) Microsoft Corporation.\n * All rights reserved. See LICENSE in the project root for license information.\n */\n\nimport { IAction, IActionContext, IActionInput, ICreateActionContext } from '@msdyn365-commerce/core-internal';\nimport { createDataAction } from '../../create-data-action';\n\n/*@internal*/\nexport let numberOfTimesGetProductCalledDuringTest: number = 0;\n\n/*@internal*/\nexport class ProductSearchInput implements IActionInput {\n    public categoryId: string;\n\n    constructor(id: string) {\n        this.categoryId = id;\n    }\n\n    public shouldCacheOutput = () => true;\n    public getCacheObjectType = () => 'ProductSearch';\n    public getCacheKey = () => this.categoryId;\n}\n\nasync function GetProductSearch(inputs: ProductSearchInput, ctx: IActionContext): Promise<ProductSearch[]> {\n    ctx.trace(`Calling GetProductSearch with : ${inputs.categoryId}`);\n    const products =\n        mockCategory && Object.keys(mockCategory).indexOf(inputs.categoryId) > -1 ? mockCategory[inputs.categoryId] : undefined;\n    return Promise.resolve(products);\n}\n\nconst createGetProductsInput = (arg: ICreateActionContext<any>): IActionInput => {\n    if (arg.config && arg.config.categoryId) {\n        return new ProductSearchInput(arg.config.categoryId);\n    }\n\n    throw new Error('config is not well defined for ProductSearchInput input');\n};\n\n//// MOCK data\n/*@internal*/\nexport interface ProductSearch {\n    RecordId: string;\n}\n\n/*@internal*/\nexport const mockCategory: any = {\n    C100: [{ RecordId: '100' }, { RecordId: '103' }, { RecordId: '105' }],\n    C101: [{ RecordId: '102' }, { RecordId: '106' }, { RecordId: '101' }, { RecordId: '103' }, { RecordId: '105' }],\n    C102: [{ RecordId: '108' }, { RecordId: '109' }, { RecordId: '104' }, { RecordId: '111' }],\n    C103: [{ RecordId: '103' }, { RecordId: '106' }, { RecordId: '108' }, { RecordId: '112' }, { RecordId: '107' }, { RecordId: '104' }],\n    C104: [{ RecordId: '109' }, { RecordId: '111' }]\n};\n\n/*@internal*/\nexport default createDataAction({\n    action: GetProductSearch as IAction<ProductSearch[]>,\n    input: createGetProductsInput\n});\n"]}