/*!
 * Copyright (c) Microsoft Corporation.
 * All rights reserved. See LICENSE in the project root for license information.
 */
import { createDataAction } from '../../create-data-action';
/*@internal*/
export let numberOfTimesGetProductCalledDuringTest = 0;
/*@internal*/
export class ProductInput {
    constructor(id) {
        this.shouldCacheOutput = () => true;
        this.getCacheObjectType = () => 'PRODUCT';
        this.getCacheKey = () => this.ProductId;
        this.ProductId = id;
    }
}
async function GetProducts(inputs, ctx) {
    ctx.trace(`Calling GetProducts with ids: ${inputs.map(input => input.ProductId).join('|')}`);
    const fetchIds = inputs.map(i => i.ProductId);
    numberOfTimesGetProductCalledDuringTest++;
    return fetchProducts(fetchIds, ctx);
}
async function fetchProducts(productIds, ctx) {
    ctx.trace(`Fetching products: ${productIds.join('!')}`);
    const products = [];
    productIds.map(id => products.push(mockProducts[id]));
    return Promise.resolve(products);
}
const createGetProductsInput = (arg) => {
    if (arg.config && arg.config.productIds) {
        return arg.config.productIds.map((pid) => new ProductInput(pid));
    }
    throw new Error('config is not well defined for product input');
};
/*@internal*/
export const mockProducts = {
    100: { Id: '100', Title: 'Product 100', Description: 'Product Description for 100' },
    101: { Id: '101', Title: 'Product 101', Description: 'Product Description for 101' },
    102: { Id: '102', Title: 'Product 102', Description: 'Product Description for 102' },
    103: { Id: '103', Title: 'Product 103', Description: 'Product Description for 103' },
    104: { Id: '104', Title: 'Product 104', Description: 'Product Description for 104' },
    105: { Id: '105', Title: 'Product 105', Description: 'Product Description for 105' },
    106: { Id: '106', Title: 'Product 106', Description: 'Product Description for 106' },
    107: { Id: '107', Title: 'Product 107', Description: 'Product Description for 107' },
    108: { Id: '108', Title: 'Product 108', Description: 'Product Description for 108' },
    109: { Id: '109', Title: 'Product 109', Description: 'Product Description for 109' },
    110: { Id: '110', Title: 'Product 110', Description: 'Product Description for 110' },
    111: { Id: '111', Title: 'Product 111', Description: 'Product Description for 111' },
    112: { Id: '112', Title: 'Product 112', Description: 'Product Description for 112' }
};
/*@internal*/
export default createDataAction({
    action: GetProducts,
    input: createGetProductsInput,
    isBatched: true
});
//# sourceMappingURL=get-products.js.map