{"version":3,"file":"client-cache.test.js","sourceRoot":"","sources":["../../../../src/cache/__tests__/client-cache.test.ts"],"names":[],"mappings":"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","sourcesContent":["/*!\n * Copyright (c) Microsoft Corporation.\n * All rights reserved. See LICENSE in the project root for license information.\n */\n\nimport 'jest';\nimport { autorun, isObservable } from 'mobx';\nimport { ClientCache } from '../client-cache';\n\ndescribe('Basic Cache Functionality', () => {\n    it('Can put new items in the cache', () => {\n        const cache = new ClientCache();\n\n        const primitiveItem = 'foo';\n        const arrayItem = [1, 2, 3];\n        const objectItem = { foo: { bar: 'baz' } };\n\n        cache.Put('string', '1', primitiveItem);\n\n        const primitiveItemFromCache = cache.Get('string', '1');\n        const primitiveItemFromCacheValue = cache.GetValue('string', '1');\n\n        if (primitiveItemFromCache !== null) {\n            expect(isObservable(primitiveItemFromCache)).toBe(true);\n            expect(primitiveItemFromCacheValue).toEqual('foo');\n        } else {\n            throw new Error('Unable to get primitive item from cache');\n        }\n\n        cache.Put('array', '1', arrayItem);\n        const arrayItemFromCache = cache.Get('array', '1');\n        const arrayItemFromCacheValue = cache.GetValue('array', '1');\n\n        if (arrayItemFromCache !== null) {\n            expect(isObservable(arrayItemFromCache)).toBe(true);\n            expect(arrayItemFromCacheValue).toEqual(arrayItem);\n            expect(cache.GetValue('array', '1')).toEqual(arrayItem);\n        } else {\n            throw new Error('Unable to get array item from ClientCache');\n        }\n\n        cache.Put('object', '1', objectItem);\n        const objectItemFromCache = cache.Get('object', '1');\n        const objectItemFromCacheValue = cache.GetValue('object', '1');\n\n        if (objectItemFromCache !== null) {\n            expect(isObservable(objectItemFromCache)).toBe(true);\n            expect(objectItemFromCacheValue).toEqual(objectItem);\n            expect(cache.GetValue('object', '1')).toEqual(objectItem);\n        } else {\n            throw new Error('Unable to get object item from ClientCache');\n        }\n    });\n\n    it('Should return null on nonexistent keys', () => {\n        const cache = new ClientCache();\n\n        const fakeCacheItem = cache.Get('foo', 'bar');\n        expect(fakeCacheItem).toBeNull();\n    });\n\n    it('Should update primitive values', () => {\n        const cache = new ClientCache();\n\n        const primitiveItemOne = 'foo';\n        const primitiveItemTwo = 'bar';\n\n        cache.Put('string', '1', primitiveItemOne);\n        cache.Put('string', '1', primitiveItemTwo);\n\n        const primitiveItemFromCache = cache.Get('string', '1');\n        const primitiveItemFromCacheValue = cache.GetValue('string', '1');\n\n        if (primitiveItemFromCache !== null) {\n            expect(isObservable(primitiveItemFromCache)).toBe(true);\n            expect(primitiveItemFromCacheValue).toEqual(primitiveItemTwo);\n        } else {\n            throw new Error('Unable to get updated primitive item from cache');\n        }\n    });\n\n    it('Should update arrays', () => {\n        const cache = new ClientCache();\n\n        const arrayOne = [1, 2, 3];\n        const arrayTwo = [4, 5, 6];\n\n        cache.Put('array', '1', arrayOne);\n        cache.Put('array', '1', arrayTwo);\n\n        const arrayFromCache = cache.Get('array', '1');\n        const arrayFromCacheValue = cache.GetValue('array', '1');\n\n        if (arrayFromCache != null) {\n            expect(isObservable(arrayFromCache)).toBe(true);\n            expect(arrayFromCacheValue).toEqual(arrayTwo);\n        } else {\n            throw new Error('Unable to get updated array item from cache');\n        }\n    });\n\n    it('Should update objects', () => {\n        const cache = new ClientCache();\n\n        const objectOne = { foo: { bar: 'baz' } };\n        const objectTwo = { baz: { bar: 'foo' } };\n\n        cache.Put('object', '1', objectOne);\n        cache.Put('object', '1', objectTwo);\n\n        const objectFromCache = cache.Get('object', '1');\n        const objectFromCacheValue = cache.GetValue('object', '1');\n\n        if (objectFromCache !== null) {\n            expect(isObservable(objectFromCache)).toBe(true);\n            expect(objectFromCacheValue).toEqual(objectTwo);\n        } else {\n            throw new Error('Unable to get object item from cache');\n        }\n    });\n});\n\ndescribe('Advanced Cache Functionality', () => {\n    it('Should automatically update primitives', () => {\n        const cache = new ClientCache();\n\n        const stringOne = 'foo';\n        const stringTwo = 'bar';\n\n        let observedValue: string | null = '';\n\n        cache.Put('string', '1', stringOne);\n\n        autorun(() => {\n            observedValue = cache.GetValue('string', '1');\n        });\n\n        expect(observedValue).toEqual(stringOne);\n        cache.Put('string', '1', stringTwo);\n        expect(observedValue).toEqual(stringTwo);\n    });\n\n    it('Should automatically update arrays', () => {\n        const cache = new ClientCache();\n\n        const arrayOne = [1, 2, 3];\n        const arrayTwo = [4, 5, 6];\n\n        let observedValue: number = 0;\n\n        cache.Put('array', '1', arrayOne);\n\n        autorun(() => {\n            const fromCache = cache.GetValue<number[]>('array', '1');\n            if (fromCache) {\n                observedValue = fromCache[0];\n            }\n        });\n\n        expect(observedValue).toEqual(arrayOne[0]);\n        cache.Put('array', '1', arrayTwo);\n        expect(observedValue).toEqual(arrayTwo[0]);\n    });\n\n    it('Should automatically update objects', () => {\n        const cache = new ClientCache();\n\n        const objectOne = { foo: { bar: 'baz' } };\n        const objectTwo = { baz: { bar: 'foo' } };\n\n        let observedValue: object | null = {};\n\n        cache.Put('object', '1', objectOne);\n\n        autorun(() => {\n            observedValue = cache.GetValue('object', '1');\n        });\n\n        expect(observedValue).toEqual(objectOne);\n        cache.Put('object', '1', objectTwo);\n        expect(observedValue).toEqual(objectTwo);\n    });\n});\n"]}