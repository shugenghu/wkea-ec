{"version":3,"file":"validate-dependencies.js","sourceRoot":"","sources":["../../../src/validation-tasks/validate-dependencies.ts"],"names":[],"mappings":";AAAA;;;iFAGiF;;;AAEjF,4EAA6G;AAC7G,wDAA0B;AAC1B,yCAAuC;AACvC,6BAA+B;AAC/B,IAAM,qBAAqB,GAAG,cAAO,CAAC,SAAS,EAAE,2CAA2C,CAAC,CAAC;AAEjF,QAAA,oBAAoB,GAAG,UAAC,kBAA0B;IAC3D,IAAM,iBAAiB,GAAG,qCAAgB,CAAC,qBAAqB,CAAE,CAAC;IACnE,IAAM,WAAW,GAAqB,qCAAgB,CAAC,cAAO,CAAC,kBAAkB,CAAC,CAAC,CAAC;IACpF,IAAM,SAAS,GAAG,IAAI,sBAAS,EAAE,CAAC;IAElC,IAAI,CAAC,WAAW,EAAE;QACd,OAAO,CAAC,KAAK,CAAC,eAAK,CAAC,GAAG,CAAC,uCAAqC,kBAAoB,CAAC,CAAC,CAAC;QACpF,OAAO,KAAK,CAAC;KAChB;IACD,IAAI;QACA,IAAM,gBAAgB,GAAG,uDAAkC,CAAC,SAAS,EAAE,WAAW,EAAE,iBAAiB,CAAC,CAAC;QAEvG,IAAI,gBAAgB,CAAC,MAAM,CAAC,MAAM,EAAE;YAChC,OAAO,CAAC,KAAK,CAAC,eAAK,CAAC,GAAG,CAAC,0DAA0D,CAAC,CAAC,CAAC;YACrF,gBAAgB,CAAC,MAAM,CAAC,OAAO,CAAC,UAAA,KAAK;gBACjC,OAAO,CAAC,KAAK,CAAC,eAAK,CAAC,GAAG,CAAC,qBAAmB,KAAO,CAAC,CAAC,CAAC;YACzD,CAAC,CAAC,CAAC;YACH,OAAO,KAAK,CAAC;SAChB;KACJ;IAAC,OAAO,CAAC,EAAE;QACR,OAAO,CAAC,KAAK,CAAC,eAAK,CAAC,GAAG,CAAC,uCAAqC,CAAG,CAAC,CAAC,CAAC;QACnE,OAAO,KAAK,CAAC;KAChB;IAED,OAAO,IAAI,CAAC;AAChB,CAAC,CAAC","sourcesContent":["/*******************************************************************************\n * Copyright (c) Microsoft Corporation.\n * All rights reserved. See LICENSE in the project root for license information.\n *******************************************************************************/\n\nimport { runSchemaValidationWithNestedError, safeReadJsonSync } from '@msdyn365-commerce/utilities-internal';\nimport chalk from 'chalk';\nimport { Validator } from 'jsonschema';\nimport { resolve } from 'path';\nconst packageJsonSchemaPath = resolve(__dirname, '../schemas/valid-package-json.schema.json');\n\nexport const validateDependencies = (partnerPackageJson: string) => {\n    const packageJsonSchema = safeReadJsonSync(packageJsonSchemaPath)!;\n    const partnerJson: JSON | undefined = safeReadJsonSync(resolve(partnerPackageJson));\n    const validator = new Validator();\n\n    if (!partnerJson) {\n        console.error(chalk.red(`[ERROR]: Invalid package artifact ${partnerPackageJson}`));\n        return false;\n    }\n    try {\n        const validationResult = runSchemaValidationWithNestedError(validator, partnerJson, packageJsonSchema);\n\n        if (validationResult.errors.length) {\n            console.error(chalk.red(`[ERROR]: Package.json does not match package.json schema`));\n            validationResult.errors.forEach(error => {\n                console.error(chalk.red(`[SCHEMA ERROR]: ${error}`));\n            });\n            return false;\n        }\n    } catch (e) {\n        console.error(chalk.red(`[ERROR]: Unknown validation error ${e}`));\n        return false;\n    }\n\n    return true;\n};\n"]}