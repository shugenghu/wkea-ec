{"version":3,"file":"validate-dependencies.js","sourceRoot":"","sources":["../../../src/validation-tasks/validate-dependencies.ts"],"names":[],"mappings":";AAAA;;;iFAGiF;;;AAEjF,4EAAyE;AACzE,wDAA0B;AAC1B,yCAAuC;AACvC,6BAA+B;AAC/B,IAAM,qBAAqB,GAAG,cAAO,CACnC,SAAS,EACT,2CAA2C,CAC5C,CAAC;AAEW,QAAA,oBAAoB,GAAG,UAAC,kBAA0B;IAC7D,IAAM,iBAAiB,GAAG,qCAAgB,CAAC,qBAAqB,CAAE,CAAC;IACnE,IAAM,WAAW,GAAqB,qCAAgB,CACpD,cAAO,CAAC,kBAAkB,CAAC,CAC5B,CAAC;IACF,IAAM,SAAS,GAAG,IAAI,sBAAS,EAAE,CAAC;IAElC,IAAI,CAAC,WAAW,EAAE;QAChB,OAAO,CAAC,KAAK,CACX,eAAK,CAAC,GAAG,CAAC,uCAAqC,kBAAoB,CAAC,CACrE,CAAC;QACF,OAAO,KAAK,CAAC;KACd;IACD,IAAI;QACF,IAAM,gBAAgB,GAAG,SAAS,CAAC,QAAQ,CAAC,WAAW,EAAE,iBAAiB,CAAC,CAAC;QAE5E,IAAI,gBAAgB,CAAC,MAAM,CAAC,MAAM,EAAE;YAClC,OAAO,CAAC,KAAK,CACX,eAAK,CAAC,GAAG,CAAC,0DAA0D,CAAC,CACtE,CAAC;YACF,gBAAgB,CAAC,MAAM,CAAC,OAAO,CAAC,UAAA,KAAK;gBACnC,OAAO,CAAC,KAAK,CAAC,eAAK,CAAC,GAAG,CAAC,qBAAmB,KAAO,CAAC,CAAC,CAAC;YACvD,CAAC,CAAC,CAAC;YACH,OAAO,KAAK,CAAC;SACd;KACF;IAAC,OAAO,CAAC,EAAE;QACV,OAAO,CAAC,KAAK,CAAC,eAAK,CAAC,GAAG,CAAC,uCAAqC,CAAG,CAAC,CAAC,CAAC;QACnE,OAAO,KAAK,CAAC;KACd;IAED,OAAO,IAAI,CAAC;AACd,CAAC,CAAC","sourcesContent":["/*******************************************************************************\n * Copyright (c) Microsoft Corporation.\n * All rights reserved. See LICENSE in the project root for license information.\n *******************************************************************************/\n\nimport { safeReadJsonSync } from '@msdyn365-commerce/utilities-internal';\nimport chalk from 'chalk';\nimport { Validator } from 'jsonschema';\nimport { resolve } from 'path';\nconst packageJsonSchemaPath = resolve(\n  __dirname,\n  '../schemas/valid-package-json.schema.json'\n);\n\nexport const validateDependencies = (partnerPackageJson: string) => {\n  const packageJsonSchema = safeReadJsonSync(packageJsonSchemaPath)!;\n  const partnerJson: JSON | undefined = safeReadJsonSync(\n    resolve(partnerPackageJson)\n  );\n  const validator = new Validator();\n\n  if (!partnerJson) {\n    console.error(\n      chalk.red(`[ERROR]: Invalid package artifact ${partnerPackageJson}`)\n    );\n    return false;\n  }\n  try {\n    const validationResult = validator.validate(partnerJson, packageJsonSchema);\n\n    if (validationResult.errors.length) {\n      console.error(\n        chalk.red(`[ERROR]: Package.json does not match package.json schema`)\n      );\n      validationResult.errors.forEach(error => {\n        console.error(chalk.red(`[SCHEMA ERROR]: ${error}`));\n      });\n      return false;\n    }\n  } catch (e) {\n    console.error(chalk.red(`[ERROR]: Unknown validation error ${e}`));\n    return false;\n  }\n\n  return true;\n};\n"]}