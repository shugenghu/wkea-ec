{"version":3,"file":"validate-dependencies.test.js","sourceRoot":"","sources":["../../../../src/validation-tasks/__tests__/validate-dependencies.test.ts"],"names":[],"mappings":";AAAA;;;GAGG;;AAEH,kEAAgE;AAChE,6BAA+B;AAE/B,QAAQ,CAAC,+BAA+B,EAAE;IACxC,EAAE,CAAC,IAAI,CAAC,4CAA4C,EAAE;QACpD,IAAM,IAAI,GAAG,cAAO,CAAC,SAAS,EAAE,iCAAiC,CAAC,CAAC;QACnE,MAAM,CAAC,4CAAoB,CAAC,IAAI,CAAC,CAAC,CAAC,UAAU,EAAE,CAAC;IAClD,CAAC,CAAC,CAAC;IAEH,EAAE,CAAC,6CAA6C,EAAE;QAChD,IAAM,IAAI,GAAG,cAAO,CAAC,SAAS,EAAE,mCAAmC,CAAC,CAAC;QACrE,MAAM,CAAC,4CAAoB,CAAC,IAAI,CAAC,CAAC,CAAC,SAAS,EAAE,CAAC;IACjD,CAAC,CAAC,CAAC;IAEH,EAAE,CAAC,uEAAuE,EAAE;QAC1E,IAAM,IAAI,GAAG,cAAO,CAAC,SAAS,EAAE,iCAAiC,CAAC,CAAC;QACnE,MAAM,CAAC,4CAAoB,CAAC,IAAI,CAAC,CAAC,CAAC,SAAS,EAAE,CAAC;IACjD,CAAC,CAAC,CAAC;IAEH,EAAE,CAAC,4EAA4E,EAAE;QAC/E,IAAM,IAAI,GAAG,cAAO,CAAC,SAAS,EAAE,iCAAiC,CAAC,CAAC;QACnE,MAAM,CAAC,4CAAoB,CAAC,IAAI,CAAC,CAAC,CAAC,SAAS,EAAE,CAAC;IACjD,CAAC,CAAC,CAAC;IAEH,EAAE,CAAC,+EAA+E,EAAE;QAClF,IAAM,IAAI,GAAG,cAAO,CAAC,SAAS,EAAE,iCAAiC,CAAC,CAAC;QACnE,MAAM,CAAC,4CAAoB,CAAC,IAAI,CAAC,CAAC,CAAC,SAAS,EAAE,CAAC;IACjD,CAAC,CAAC,CAAC;IAEH,EAAE,CAAC,2EAA2E,EAAE;QAC9E,IAAM,IAAI,GAAG,cAAO,CAAC,SAAS,EAAE,iCAAiC,CAAC,CAAC;QACnE,MAAM,CAAC,4CAAoB,CAAC,IAAI,CAAC,CAAC,CAAC,SAAS,EAAE,CAAC;IACjD,CAAC,CAAC,CAAC;IAEH,EAAE,CAAC,gFAAgF,EAAE;QACnF,IAAM,IAAI,GAAG,cAAO,CAAC,SAAS,EAAE,iCAAiC,CAAC,CAAC;QACnE,MAAM,CAAC,4CAAoB,CAAC,IAAI,CAAC,CAAC,CAAC,SAAS,EAAE,CAAC;IACjD,CAAC,CAAC,CAAC;AACL,CAAC,CAAC,CAAC","sourcesContent":["/*!\n * Copyright (c) Microsoft Corporation.\n * All rights reserved. See LICENSE in the project root for license information.\n */\n\nimport { validateDependencies } from \"../validate-dependencies\";\nimport { resolve } from \"path\";\n\ndescribe(\"validate partner-dependencies\", () => {\n  it.only(\"succesfully validates correct package.json\", () => {\n    const path = resolve(__dirname, '../__mocks__/valid-package.json');\n    expect(validateDependencies(path)).toBeTruthy();\n  });\n\n  it(\"validate error if package.json is not found\", () => {\n    const path = resolve(__dirname, \"../__mocks__/does-not-exists.json\");\n    expect(validateDependencies(path)).toBeFalsy();\n  });\n\n  it(\"modification of scripts section in package.json should not be allowed\", () => {\n    const path = resolve(__dirname, \"../__mocks__/test.package1.json\");\n    expect(validateDependencies(path)).toBeFalsy();\n  });\n\n  it(\"modification of dependencies section in package.json should not be allowed\", () => {\n    const path = resolve(__dirname, \"../__mocks__/test.package2.json\");\n    expect(validateDependencies(path)).toBeFalsy();\n  });\n\n  it(\"modification of devDependencies section in package.json should not be allowed\", () => {\n    const path = resolve(__dirname, \"../__mocks__/test.package3.json\");\n    expect(validateDependencies(path)).toBeFalsy();\n  });\n\n  it(\"modification of resolutions section in package.json should not be allowed\", () => {\n    const path = resolve(__dirname, \"../__mocks__/test.package4.json\");\n    expect(validateDependencies(path)).toBeFalsy();\n  });\n\n  it(\"modification of peerDependencies section in package.json should not be allowed\", () => {\n    const path = resolve(__dirname, \"../__mocks__/test.package5.json\");\n    expect(validateDependencies(path)).toBeFalsy();\n  });\n});\n"]}