/*!
 * Copyright (c) Microsoft Corporation.
 * All rights reserved. See LICENSE in the project root for license information.
 */

import { validateDependencies } from "../validate-dependencies";
import { resolve } from "path";

describe("validate partner-dependencies", () => {
  it.only("succesfully validates correct package.json", () => {
    const path = resolve(__dirname, '../__mocks__/valid-package.json');
    expect(validateDependencies(path)).toBeTruthy();
  });

  it("validate error if package.json is not found", () => {
    const path = resolve(__dirname, "../__mocks__/does-not-exists.json");
    expect(validateDependencies(path)).toBeFalsy();
  });

  it("modification of scripts section in package.json should not be allowed", () => {
    const path = resolve(__dirname, "../__mocks__/test.package1.json");
    expect(validateDependencies(path)).toBeFalsy();
  });

  it("modification of dependencies section in package.json should not be allowed", () => {
    const path = resolve(__dirname, "../__mocks__/test.package2.json");
    expect(validateDependencies(path)).toBeFalsy();
  });

  it("modification of devDependencies section in package.json should not be allowed", () => {
    const path = resolve(__dirname, "../__mocks__/test.package3.json");
    expect(validateDependencies(path)).toBeFalsy();
  });

  it("modification of resolutions section in package.json should not be allowed", () => {
    const path = resolve(__dirname, "../__mocks__/test.package4.json");
    expect(validateDependencies(path)).toBeFalsy();
  });

  it("modification of peerDependencies section in package.json should not be allowed", () => {
    const path = resolve(__dirname, "../__mocks__/test.package5.json");
    expect(validateDependencies(path)).toBeFalsy();
  });
});
