/*!
 * Copyright (c) Microsoft Corporation.
 * All rights reserved. See LICENSE in the project root for license information.
 */
import { ITelemetryContent } from '@msdyn365-commerce-modules/utilities';
import { IComponentProps, IGridSettings, IImageSettings } from '@msdyn365-commerce/core';
import { SimpleProduct } from '@msdyn365-commerce/retail-proxy';
import { CartLine, SalesLine } from '@msdyn365-commerce/retail-proxy/dist/Entities/CommerceTypes.g';
import * as React from 'react';
export interface ICartlineResourceString {
    discountStringText: string;
    sizeString: string;
    colorString: string;
    configString: string;
    styleString: string;
    quantityDisplayString: string;
    inputQuantityAriaLabel: string;
    decrementButtonAriaLabel?: string;
    incrementButtonAriaLabel?: string;
    originalPriceText: string;
    currentPriceText: string;
    shippingChargesText: string;
}
interface ICartLineData {
    cartLine: CartLine | SalesLine;
    product: SimpleProduct;
}
export declare type CartLineDisplayMode = 'DEFAULT' | 'COMPACT';
export interface ICartLineProps extends IComponentProps<ICartLineData> {
    disableQuantityInteractivity?: boolean;
    primaryImageUrl?: string;
    productUrl?: string;
    gridSettings: IGridSettings;
    imageSettings: IImageSettings;
    isOutOfStock?: boolean;
    isQuantityEditable?: boolean;
    maxQuantity?: number;
    currentQuantity?: number;
    resources: ICartlineResourceString;
    isSalesLine?: boolean;
    errorMessage?: string;
    displayMode?: CartLineDisplayMode;
    inventoryInformationLabel?: string;
    inventoryLabelClassName?: string;
    showShippingChargesForLineItems?: boolean;
    isCartStateReady?: boolean;
    telemetryContent?: ITelemetryContent;
    quantityOnChange?(cartLine: CartLine, newQuantity: number): void;
}
declare const CartLine: React.FC<ICartLineProps>;
export declare const CartLineItemComponent: React.FunctionComponent<ICartLineProps>;
export {};
