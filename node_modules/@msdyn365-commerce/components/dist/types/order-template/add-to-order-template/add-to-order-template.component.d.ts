import * as Popper from 'popper.js';
import React from 'react';
import { OrderTemplate } from '@msdyn365-commerce-modules/retail-actions';
import { IComponent, IComponentProps } from '@msdyn365-commerce/core';
import { Customer, ProductDimension, SimpleProduct } from '@msdyn365-commerce/retail-proxy';
import { IAddToOrderTemplateDialogResources } from '../add-to-order-template-dialog/add-to-order-template-dialog.component';
import { IDuplicateItemsWhenAddingToOrderTemplateDialogResources } from '../duplicate-items-when-adding-to-order-template-dialog/duplicate-items-when-adding-to-order-template-dialog.component';
import { IItemAddedToOrderTemplateDialogResources } from '../item-added-to-order-template-dialog/item-added-to-order-template-dialog.component';
import { IOrderTemplateNameDialogResources } from '../order-template-name-dialog/order-template-name-dialog.component';
export interface IAddToOrderTemplateComponentProps extends IComponentProps<IAddToOrderTemplateData> {
    className?: string;
    addToOrderTemplateDialogResources: IAddToOrderTemplateDialogResources;
    createOrderTemplateDialogResources: IOrderTemplateNameDialogResources;
    itemAddedToOrderTemplateDialogResources: IItemAddedToOrderTemplateDialogResources;
    duplicateItemsWhenAddingToOrderTemplateDialogResources: IDuplicateItemsWhenAddingToOrderTemplateDialogResources;
    addToOrderTemplateButtonText: string;
    addToOrderTemplateMessage?: string;
    addItemToOrderTemplateError?: string;
    showButtonText?: boolean;
    showButtonTooltip?: boolean;
    tooltipPosition?: Popper.Placement;
    showStatusMessage?: boolean;
    disabled?: boolean;
    canAddMasterProduct?: boolean;
    onSuccess?(): void;
    onError?(result: IOrderTemplateActionErrorResult): void;
}
export interface IOrderTemplateActionErrorResult {
    status: 'FAILED' | 'MISSING_DIMENSION';
    missingDimensions?: ProductDimension[];
}
interface IAddToOrderTemplateStateManager {
    waiting: boolean;
    content: IAddToOrderTemplateContentState;
    setWaiting(newWaiting: boolean): void;
    setContent(newContent: IAddToOrderTemplateContentState): void;
}
interface IAddToOrderTemplateContentState {
    showAlert?: boolean;
    orderTemplateTextMessage?: string;
    color?: string;
}
interface IAddToOrderTemplateData {
    orderTemplates: OrderTemplate[];
    product: SimpleProduct;
    quantity: number;
    customerInformation?: Customer;
}
export interface IAddToOrderTemplateComponent extends IComponent<IAddToOrderTemplateComponentProps> {
    onClick(): (event: React.MouseEvent<HTMLElement>, props: IAddToOrderTemplateComponentProps, state: IAddToOrderTemplateStateManager) => void;
}
export declare const AddToOrderTemplateComponent: React.FunctionComponent<IAddToOrderTemplateComponentProps>;
export {};
