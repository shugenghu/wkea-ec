import { OrderTemplate } from '@msdyn365-commerce-modules/retail-actions';
import { IComponent, IComponentProps } from '@msdyn365-commerce/core';
import { CartLine, Customer } from '@msdyn365-commerce/retail-proxy';
import React from 'react';
import { IAddToOrderTemplateDialogResources } from '../add-to-order-template-dialog/add-to-order-template-dialog.component';
import { ILinesAddedToOrderTemplateDialogResources } from '../lines-added-to-order-template-dialog/lines-added-to-order-template-dialog.component';
import { IOrderTemplateNameDialogResources } from '../order-template-name-dialog/order-template-name-dialog.component';
export interface ISaveCartToOrderTemplateComponentProps extends IComponentProps<ISaveCartToOrderTemplateData> {
    className?: string;
    addToOrderTemplateDialogResources: IAddToOrderTemplateDialogResources;
    createOrderTemplateDialogResources: IOrderTemplateNameDialogResources;
    linesAddedToOrderTemplateDialogResources: ILinesAddedToOrderTemplateDialogResources;
    createOrderTemplateFromCartButton: string;
}
interface ISaveCartToOrderTemplateData {
    orderTemplates: OrderTemplate[];
    cartLines: CartLine[];
    customerInformation?: Customer;
}
interface ISaveCartToOrderTemplateContentState {
    showAlert?: boolean;
    orderTemplateTextMessage?: string;
    color?: string;
}
interface ISaveCartToOrderTemplateStateManager {
    waiting: boolean;
    content: ISaveCartToOrderTemplateContentState;
    setWaiting(newWaiting: boolean): void;
    setContent(newContent: ISaveCartToOrderTemplateContentState): void;
}
export interface ISaveCartToOrderTemplateComponent extends IComponent<ISaveCartToOrderTemplateComponentProps> {
    onClick(): (event: React.MouseEvent<HTMLElement>, props: ISaveCartToOrderTemplateComponentProps, state: ISaveCartToOrderTemplateStateManager) => void;
}
export declare const SaveCartToOrderTemplateComponent: React.FunctionComponent<ISaveCartToOrderTemplateComponentProps>;
export {};
