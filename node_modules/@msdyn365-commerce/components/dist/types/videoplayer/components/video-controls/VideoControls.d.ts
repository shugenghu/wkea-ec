import * as React from 'react';
import { IPlayerMenu } from '../data/player-constants';
import { IVideoControlsProps } from './VideoControls.props';
export interface IVideoControlState {
    showVolumeSlider: boolean;
    volumeSliderLeftPosition: number;
    volumeSliderTopPosition: number;
    showMenu: boolean;
    menuLeftPosition: number;
    currentMenu?: IPlayerMenu;
    toolTipClass: string;
}
export interface IOffsetPosition {
    offsetLeft: number;
    offsetTop: number;
}
export declare const ButtonMenuTypes: {
    ClosedCaption: string;
    Options: string;
};
export default class VideoControls extends React.PureComponent<IVideoControlsProps, IVideoControlState> {
    static defaultProps: Partial<IVideoControlsProps>;
    private static videoControlsClassName;
    private static volumeAutoHideTimeout;
    private selectedMenuItems;
    private volumeAutoHideTimer;
    private focusedMenuItemIndex;
    private currentMenu;
    private volumeButtonDiv;
    private playButtonRef;
    private pauseButtonRef;
    private closedCaptionRef;
    private optionButtonRef;
    private fullscreenButtonRef;
    private exitFullScreenButtonRef;
    private videoControlDiv;
    private closedCaptionButtonDiv;
    private optionButtonDiv;
    private menuRef;
    private muteButtonRef;
    private unMuteButtonRef;
    private payLoad;
    constructor(props: IVideoControlsProps);
    componentDidUpdate(prevProps: IVideoControlsProps): void;
    render(): JSX.Element;
    showVolumeControl: (autohide?: boolean | undefined) => () => void;
    setFocusOnPlay(): void;
    setFocusOnMenuButton(): void;
    componentDidMount(): void;
    componentWillUnmount(): void;
    private _reevaluateWidth;
    private _onDocumentClick;
    private _onMenuFocus;
    private _onMenuBlur;
    private _onMouseOver;
    private _onMouseOut;
    private _onMenuKeyDown;
    private _onMenuKeyUp;
    private _onMenuKeyPressed;
    private _onMenuItemClick;
    private _resetFocusForCurrentMenu;
    private _getSelectedMenuFromList;
    private _updateSelectedMenu;
    private _renderClosedCaptionButton;
    private _renderOptionButton;
    private _renderFullScreenButton;
    private _renderVolumeButton;
    private _renderVideoSlider;
    private _renderVolumeSlider;
    private _getOffsetPosition;
    private _onClosedCaptionClick;
    private _onOptionsButtonClick;
    private _hideVolumeControl;
    private _handleProgressToolTipText;
    private _toElapsedTimeString;
    private _applyTooltipClassOnWidthChange;
    private _isIPhone;
}
