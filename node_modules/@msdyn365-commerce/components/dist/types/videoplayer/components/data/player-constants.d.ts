export declare const PlayerConstants: {
    defaultVolume: number;
    defaultVolumeSliderSteps: number;
    defaultVideoSliderSteps: number;
    defaultControlPanelTimeout: number;
    defaultPositionUpdateThreshold: number;
    defaultMaskLevel: number;
    defaultPlayGlyphIcon: string;
    defaultPauseGlyphIcon: string;
    defaultMuteGlyphIcon: string;
    defaultUnMuteGlyphIcon: string;
    defaultFullScreenGlyphIcon: string;
    defaultExitFullScreenGlyphIcon: string;
    closedCaptionGlyphClassName: string;
    thumbnailFullWidth: number;
    thumbnailFullHeight: number;
    ccLangPrefKey: string;
    seekBarLabel: string;
    regxForAgeGateInputValidation: RegExp;
    mutePrefKey: string;
    volumePrefKey: string;
};
export declare const VideoPlayerNames: {
    videoplayerContainer: string;
    mediaType: string;
};
export declare const MenuCategories: {
    AudioTracks: string;
    ClosedCaption: string;
    ClosedCaptionSettings: string;
    PlaybackSpeed: string;
    Quality: string;
    Share: string;
    Download: string;
    Options: string;
};
export declare const MediaEvents: string[];
export interface IPlayPosition {
    startTime: number;
    endTime: number;
    currentTime: number;
    bufferedDuration: number;
}
export interface ICurrentClosedCaptionsSettings {
    preset: string;
    text_font: string;
    text_color: string;
    text_opacity: string;
    text_size: string;
    text_edge_style: string;
    text_background_color: string;
    text_background_opacity: string;
    window_color: string;
    window_opacity: string;
}
export declare type PlayerStates = 'init' | 'playerLoaded' | 'loading' | 'ready' | 'playing' | 'paused' | 'buffering' | 'seeking' | 'ended' | 'error' | 'stopped';
export declare enum VideoErrorCodes {
    BufferingFirstByteTimeout = 2000,
    MediaErrorAborted = 2100,
    MediaErrorNetwork = 2101,
    MediaErrorDecode = 2102,
    MediaErrorSourceNotSupported = 2103,
    MediaErrorUnknown = 2104,
    MediaSelectionNoMedia = 2200
}
export interface IVideoErrorData {
    errorCode: VideoErrorCodes;
    message?: string;
}
export interface IVideoErrorMessageData {
    title?: string;
    message?: string;
}
export interface IPlayerMenuItem {
    id: string;
    label: string;
    className?: string;
    language?: string;
    data?: string;
    image?: string;
    itemCount?: number;
    itemIndex?: number;
    imageAlt?: string;
    glyph?: string;
    selected?: boolean;
    selectable?: boolean;
    hasMouseHoverEvents?: boolean;
    persistOnClick?: boolean;
    isBackButton?: boolean;
    ariaLabel?: string;
    subMenu?: IPlayerMenu;
    hasFocus?: boolean;
}
export interface IPlayerMenu {
    id: string;
    category: string;
    items: IPlayerMenuItem[];
    label?: string;
    glyph?: string;
    cssClass?: string;
    hideBackButton?: boolean;
}
export interface IPlayerMenuItemClickNotification {
    category: string;
    id: string;
    data?: string;
}
