import * as React from 'react';
import { ICarouselProps } from './Carousel.props';
export interface ICarouselState {
    direction: string;
    indicatorClicked: boolean;
}
export declare type carouselTransition = 'slide' | 'fade';
export default class Carousel extends React.Component<ICarouselProps, ICarouselState> {
    static defaultProps: Partial<ICarouselProps>;
    props: ICarouselProps;
    state: ICarouselState;
    cycleInterval?: any;
    private scrollStart;
    private payLoad;
    private scrollThreshold;
    private linkRefPrev;
    private linkRefNext;
    private directionTextPrev;
    private directionTextNext;
    constructor(props: ICarouselProps);
    componentDidMount(): void;
    componentWillReceiveProps(nextProps: any): void;
    componentWillUnmount(): void;
    setInterval: (props?: ICarouselProps) => void;
    clearInterval: () => void;
    hoverStart: (e: React.MouseEvent<Element, MouseEvent>) => void;
    hoverEnd: (e: React.MouseEvent<Element, MouseEvent>) => void;
    handleKeyPress: (e: any) => void;
    renderItems: (carouselItems: React.ReactNode[], className: string) => JSX.Element;
    render(): JSX.Element | null;
    private _handleTouchStart;
    private _handleTouchEnd;
    private _renderIndicators;
    private _renderCarouselControls;
    private _onClickPrev;
    private _onClickNext;
    private _handleKeyPressPrev;
    private _handleKeyPressNext;
    private _renderDismissCarousel;
}
