{"version":3,"file":"cart-icon.component.js","sourceRoot":"./src/","sources":["cart-icon/cart-icon.component.tsx"],"names":[],"mappings":"AAKA,OAAO,EAAE,MAAM,EAAE,gBAAgB,EAAE,sBAAsB,EAAqB,gBAAgB,EAAE,MAAM,sCAAsC,CAAC;AAC7I,OAAO,EAAE,UAAU,EAA+B,gBAAgB,EAAE,MAAM,yBAAyB,CAAC;AAEpG,OAAO,EAAE,QAAQ,EAAE,MAAM,YAAY,CAAC;AACtC,OAAO,KAAK,KAAK,MAAM,OAAO,CAAC;AAe/B,MAAM,wBAAwB,GAAG,EAChC,CAAC;AAOF,MAAM,QAAQ,GAAsC,QAAQ,CAAC,CAAC,KAA8B,EAAE,EAAE;IAC5F,MAAM,EAAE,SAAS,EAAE,IAAI,EAAE,EAAC,IAAI,EAAC,EAAE,GAAG,KAAK,CAAC;IAC1C,MAAM,QAAQ,GAAG,UAAU,CAAC,MAAM,EAAE,KAAK,CAAC,OAAO,CAAC,aAAa,CAAC,CAAC;IACjE,MAAM,QAAQ,GAAG,IAAI,IAAI,CAAC,gBAAgB,GAAG,CAAC;IAC9C,MAAM,KAAK,GAAG,MAAM,CAAC,SAAS,EAAE,QAAQ,CAAC,IAAI,iBAAiB,QAAQ,QAAQ,CAAC;IAE/E,MAAM,OAAO,GAAG,gBAAgB,CAAC,OAAO,EAAE,KAAK,CAAC,gBAAiB,EAAE,WAAW,EAAE,EAAE,CAAC,CAAC;IACpF,MAAM,UAAU,GAAG,sBAAsB,CAAC,KAAK,CAAC,gBAAiB,EAAE,OAAO,CAAC,CAAC;IAC5E,OAAO,CACH,yCAAG,KAAK,EAAG,KAAK,EAAE,SAAS,EAAC,uBAAuB,EAAC,IAAI,EAAE,QAAQ,gBAAc,KAAK,IAAM,UAAU,IAAE,OAAO,EAAG,gBAAgB,CAAC,KAAK,CAAC,gBAAiB,EAAE,OAAO,EAAE,WAAW,CAAC;QAC5K,6BAAK,SAAS,EAAC,sBAAsB,iBAAc,IAAI,IAClD,QAAQ,CACP,CACN,CACP,CAAC;AACN,CAAC,CAAC,CAAC;AAGH,MAAM,CAAC,MAAM,iBAAiB,GAAqD,gBAAgB,CAAC,eAAe,CAC/G,UAAU,EACV,EAAE,SAAS,EAAE,QAAQ,EAAE,GAAG,wBAAwB,EAAE,CACvD,CAAC","sourcesContent":["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { format, getPayloadObject, getTelemetryAttributes, ITelemetryContent, onTelemetryClick } from '@msdyn365-commerce-modules/utilities';\nimport { getUrlSync, IComponent, IComponentProps, msdyn365Commerce } from '@msdyn365-commerce/core';\nimport { ICartState } from '@msdyn365-commerce/global-state';\nimport { observer } from 'mobx-react';\nimport * as React from 'react';\n\nexport interface ICartIconData {\n    cart: ICartState;\n}\n\nexport interface ICartIconComponentProps extends IComponentProps<ICartIconData> {\n    className?: string;\n    cartLabel: string;\n    telemetryContent?: ITelemetryContent;\n}\n\nexport interface ICartIconComponent extends IComponent<ICartIconComponentProps> {\n}\n\nconst CartIconComponentActions = {\n};\n\n/**\n *\n * CartIcon component\n * @extends {React.FC<ICartIconComponentProps>}\n */\nconst CartIcon: React.FC<ICartIconComponentProps> = observer((props: ICartIconComponentProps) => {\n    const { cartLabel, data: {cart} } = props;\n    const cartLink = getUrlSync('cart', props.context.actionContext);\n    const cartItem = `(${cart.totalItemsInCart})`;\n    const label = format(cartLabel, cartItem) || `Shopping bag, ${cartItem} items`;\n    // Construct telemetry attribute to render\n    const payLoad = getPayloadObject('click', props.telemetryContent!, 'cart-icon', '');\n    const attributes = getTelemetryAttributes(props.telemetryContent!, payLoad);\n    return (\n        <a title= {label} className='msc-cart-icon msc-btn' href={cartLink} aria-label={label} {...attributes} onClick={ onTelemetryClick(props.telemetryContent!, payLoad, 'cart-icon') }>\n            <div className='msc-cart-icon__count' aria-hidden={true}>\n                {cartItem}\n            </div>\n        </a>\n    );\n});\n\n// @ts-ignore\nexport const CartIconComponent: React.FunctionComponent<ICartIconComponentProps> = msdyn365Commerce.createComponent<ICartIconComponent>(\n    'CartIcon',\n    { component: CartIcon, ...CartIconComponentActions }\n);"]}