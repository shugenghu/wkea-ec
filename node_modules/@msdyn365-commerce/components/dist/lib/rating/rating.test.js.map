{"version":3,"file":"rating.test.js","sourceRoot":"./src/","sources":["rating/rating.test.tsx"],"names":[],"mappings":"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","sourcesContent":["import { buildMockCoreContext, ICoreContext } from '@msdyn365-commerce/core';\nimport { mount, ReactWrapper} from 'enzyme';\nimport * as React from 'react';\nimport {RatingComponent} from '../index';\n\ndescribe('star ratings', () => {\n    const mockCoreContext = buildMockCoreContext({}) as ICoreContext<{}>;\n    const filledStar = 'msc-rating__star';\n    const halfFilledStar = 'msc-rating__half-star';\n    const emptyStar = 'msc-rating__empty-star';\n    const starGlyphProp = (stars: ReactWrapper, index: number) => {\n        const star = stars.get(index);\n        return star.props;\n    };\n\n    it('renders as a 4 star rating', () => {\n        const wrapper = mount(\n            <RatingComponent\n                className='myClass'\n                avgRating={3.75}\n                ratingCount={'345'}\n                readOnly={true}\n                context={mockCoreContext}\n                ariaLabel={'my aria label'}\n                id='foo'\n                typeName='foo'\n                data={{}}\n            />\n        );\n        const stars = wrapper.find('span');\n\n        expect(starGlyphProp(stars, 0).className).toContain(filledStar);\n        expect(starGlyphProp(stars, 1).className).toContain(filledStar);\n        expect(starGlyphProp(stars, 2).className).toContain(filledStar);\n        expect(starGlyphProp(stars, 3).className).toContain(filledStar);\n        expect(starGlyphProp(stars, 4).className).toContain(emptyStar);\n        wrapper.unmount();\n    });\n\n    it('renders as a 2.5 star rating', () => {\n        const wrapper = mount(\n            <RatingComponent\n                avgRating={2.5}\n                ratingCount={'345'}\n                readOnly={true}\n                context={mockCoreContext}\n                ariaLabel={'my aria label'}\n                id='foo'\n                typeName='foo'\n                data={{}}\n            />\n        );\n\n        const stars = wrapper.find('span');\n        expect(starGlyphProp(stars, 0).className).toContain(filledStar);\n        expect(starGlyphProp(stars, 1).className).toContain(filledStar);\n        expect(starGlyphProp(stars, 2).className).toContain(halfFilledStar);\n        expect(starGlyphProp(stars, 3).className).toContain(emptyStar);\n        expect(starGlyphProp(stars, 4).className).toContain(emptyStar);\n        wrapper.unmount();\n    });\n\n    it('renders as a 2 star rating', () => {\n        const wrapper = mount(\n            <RatingComponent\n                avgRating={2.23}\n                ratingCount={'345'}\n                readOnly={true}\n                context={mockCoreContext}\n                ariaLabel={'my aria label'}\n                id='foo'\n                typeName='foo'\n                data={{}}\n            />\n        );\n\n        const stars = wrapper.find('span');\n        expect(starGlyphProp(stars, 0).className).toContain(filledStar);\n        expect(starGlyphProp(stars, 1).className).toContain(filledStar);\n        expect(starGlyphProp(stars, 2).className).toContain(emptyStar);\n        expect(starGlyphProp(stars, 3).className).toContain(emptyStar);\n        expect(starGlyphProp(stars, 4).className).toContain(emptyStar);\n        wrapper.unmount();\n    });\n\n    it('renders 0 filled in stars when the user can set the rating', () => {\n        const wrapper = mount(\n            <RatingComponent\n                avgRating={2.23}\n                ratingCount={'345'}\n                readOnly={false}\n                context={mockCoreContext}\n                ariaLabel={'my aria label'}\n                id='foo'\n                typeName='foo'\n                data={{}}\n            />\n        );\n\n        const stars = wrapper.find('span');\n        expect(starGlyphProp(stars, 0).className).toEqual(emptyStar);\n        expect(starGlyphProp(stars, 1).className).toEqual(emptyStar);\n        expect(starGlyphProp(stars, 2).className).toEqual(emptyStar);\n        expect(starGlyphProp(stars, 3).className).toEqual(emptyStar);\n        expect(starGlyphProp(stars, 4).className).toEqual(emptyStar);\n        wrapper.unmount();\n    });\n\n    it('sets the rating and propogates the change when the rangeslider updates', () => {\n        const event = {currentTarget: { value: '4'}, target: { value: '4'}};\n        const onChange = jest.fn();\n        const wrapper = mount(\n            <RatingComponent\n                avgRating={2.23}\n                ratingCount={'345'}\n                readOnly={false}\n                onChange={onChange}\n                context={mockCoreContext}\n                ariaLabel={'my aria label'}\n                id='foo'\n                typeName='foo'\n                data={{}}\n            />,\n            { attachTo: document.body.firstElementChild as HTMLElement }\n        );\n        let stars = wrapper.find('span');\n        expect(starGlyphProp(stars, 0).className).toContain(emptyStar);\n        expect(starGlyphProp(stars, 1).className).toContain(emptyStar);\n        expect(starGlyphProp(stars, 2).className).toContain(emptyStar);\n        expect(starGlyphProp(stars, 3).className).toContain(emptyStar);\n        expect(starGlyphProp(stars, 4).className).toContain(emptyStar);\n        const input = wrapper.find('input');\n        input.simulate('change', event);\n        wrapper.update();\n        stars = wrapper.find('span');\n        expect(starGlyphProp(stars, 0).className).toContain(filledStar);\n        expect(starGlyphProp(stars, 1).className).toContain(filledStar);\n        expect(starGlyphProp(stars, 2).className).toContain(filledStar);\n        expect(starGlyphProp(stars, 3).className).toContain(filledStar);\n        expect(starGlyphProp(stars, 4).className).toContain(emptyStar);\n        expect(onChange).toHaveBeenCalled();\n        wrapper.unmount();\n    });\n\n    // expect(() => { actionToggle.componentDidUpdate();}).not.toThrow();\n    it('does not throw error when input changes but no onChange is given', () => {\n        const event = {currentTarget: { value: '4'}, target: { value: '4'}};\n        const wrapper = mount(\n            <RatingComponent\n                avgRating={2.23}\n                ratingCount={'345'}\n                readOnly={false}\n                context={mockCoreContext}\n                ariaLabel={'my aria label'}\n                id='foo'\n                typeName='foo'\n                data={{}}\n            />,\n            { attachTo: document.body.firstElementChild as HTMLElement }\n        );\n        const input = wrapper.find('input');\n        expect(() => { input.simulate('change', event); wrapper.update();}).not.toThrow();\n        wrapper.unmount();\n    });\n\n    it('sets the rating and propogates the click when the user sets the rating', () => {\n        const onChange = jest.fn();\n        const wrapper = mount(\n            <RatingComponent\n                avgRating={2.23}\n                ratingCount={'345'}\n                readOnly={false}\n                onChange={onChange}\n                context={mockCoreContext}\n                ariaLabel={'my aria label'}\n                id='foo'\n                typeName='foo'\n                data={{}}\n            />,\n            { attachTo: document.body.firstElementChild as HTMLElement }\n        );\n\n        let stars = wrapper.find('span');\n        expect(starGlyphProp(stars, 0).className).toContain(emptyStar);\n        expect(starGlyphProp(stars, 1).className).toContain(emptyStar);\n        expect(starGlyphProp(stars, 2).className).toContain(emptyStar);\n        expect(starGlyphProp(stars, 3).className).toContain(emptyStar);\n        expect(starGlyphProp(stars, 4).className).toContain(emptyStar);\n        const starButtons = wrapper.find('span');\n        mount(starButtons.get(2)).simulate('click')\n        wrapper.update();\n        stars = wrapper.find('span');\n        expect(starGlyphProp(stars, 0).className).toContain(filledStar);\n        expect(starGlyphProp(stars, 1).className).toContain(filledStar);\n        expect(starGlyphProp(stars, 2).className).toContain(filledStar);\n        expect(starGlyphProp(stars, 3).className).toContain(emptyStar);\n        expect(starGlyphProp(stars, 4).className).toContain(emptyStar);\n        expect(onChange).toHaveBeenCalled();\n        wrapper.unmount();\n    });\n\n    it('does not sets the rating when user clicks on static rating', () => {\n        const onChange = jest.fn();\n        const wrapper = mount(\n            <RatingComponent\n                avgRating={2}\n                ratingCount={'345'}\n                readOnly={true}\n                onChange={onChange}\n                context={mockCoreContext}\n                ariaLabel={'my aria label'}\n                id='foo'\n                typeName='foo'\n                data={{}}\n            />,\n            { attachTo: document.body.firstElementChild as HTMLElement }\n        );\n\n        let stars = wrapper.find('span');\n        expect(starGlyphProp(stars, 0).className).toContain(filledStar);\n        expect(starGlyphProp(stars, 1).className).toContain(filledStar);\n        expect(starGlyphProp(stars, 2).className).toContain(emptyStar);\n        expect(starGlyphProp(stars, 3).className).toContain(emptyStar);\n        expect(starGlyphProp(stars, 4).className).toContain(emptyStar);\n        const starButtons = wrapper.find('span');\n        mount(starButtons.get(2)).simulate('click')\n        wrapper.update();\n        stars = wrapper.find('span');\n        expect(starGlyphProp(stars, 0).className).toContain(filledStar);\n        expect(starGlyphProp(stars, 1).className).toContain(filledStar);\n        expect(starGlyphProp(stars, 2).className).toContain(emptyStar);\n        expect(starGlyphProp(stars, 3).className).toContain(emptyStar);\n        expect(starGlyphProp(stars, 4).className).toContain(emptyStar);\n        expect(onChange).not.toHaveBeenCalled();\n        wrapper.unmount();\n    });\n\n    it('does not throw error when the user clicks and no onChange was given', () => {\n        const wrapper = mount(\n            <RatingComponent\n                avgRating={2.23}\n                ratingCount={'345'}\n                readOnly={false}\n                context={mockCoreContext}\n                ariaLabel={'my aria label'}\n                id='foo'\n                typeName='foo'\n                data={{}}\n            />,\n            { attachTo: document.body.firstElementChild as HTMLElement }\n        );\n        const starButtons = wrapper.find('span');\n        const mountedStar = mount(starButtons.get(2));\n        expect(() => { mountedStar.simulate('click'); wrapper.update();}).not.toThrow();\n        wrapper.unmount();\n    });\n\n    it('sets the displayed rating when the user hovers on a star when in a state where the user can set rating', () => {\n        const wrapper = mount(\n            <RatingComponent\n                avgRating={2.23}\n                ratingCount={'345'}\n                readOnly={false}\n                context={mockCoreContext}\n                ariaLabel={'my aria label'}\n                id='foo'\n                typeName='foo'\n                data={{}}\n            />,\n            { attachTo: document.body.firstElementChild as HTMLElement }\n        );\n        let stars = wrapper.find('span');\n        expect(starGlyphProp(stars, 0).className).toContain(emptyStar);\n        expect(starGlyphProp(stars, 1).className).toContain(emptyStar);\n        expect(starGlyphProp(stars, 2).className).toContain(emptyStar);\n        expect(starGlyphProp(stars, 3).className).toContain(emptyStar);\n        expect(starGlyphProp(stars, 4).className).toContain(emptyStar);\n\n        const starWrapper = mount(wrapper.find('[data-index]').get(3));\n        starWrapper.simulate('mouseOver');\n        wrapper.update();\n        stars = wrapper.find('span');\n        expect(starGlyphProp(stars, 0).className).toContain(filledStar);\n        expect(starGlyphProp(stars, 1).className).toContain(filledStar);\n        expect(starGlyphProp(stars, 2).className).toContain(filledStar);\n        expect(starGlyphProp(stars, 3).className).toContain(filledStar);\n        expect(starGlyphProp(stars, 4).className).toContain(emptyStar);\n        wrapper.unmount();\n    });\n\n    it('clears the rating when the users cursor exits the rating area', () => {\n        const wrapper = mount(\n            <RatingComponent\n                avgRating={2.23}\n                ratingCount={'345'}\n                readOnly={false}\n                context={mockCoreContext}\n                ariaLabel={'my aria label'}\n                id='foo'\n                typeName='foo'\n                data={{}}\n            />,\n            { attachTo: document.body.firstElementChild as HTMLElement }\n        );\n\n        let stars = wrapper.find('span');\n        expect(starGlyphProp(stars, 0).className).toContain(emptyStar);\n        expect(starGlyphProp(stars, 1).className).toContain(emptyStar);\n        expect(starGlyphProp(stars, 2).className).toContain(emptyStar);\n        expect(starGlyphProp(stars, 3).className).toContain(emptyStar);\n        expect(starGlyphProp(stars, 4).className).toContain(emptyStar);\n\n        const starWrapper = mount(wrapper.find('[data-index]').get(3));\n        starWrapper.simulate('mouseOver');\n        wrapper.update();\n        stars = wrapper.find('span');\n        expect(starGlyphProp(stars, 0).className).toContain(filledStar);\n        expect(starGlyphProp(stars, 1).className).toContain(filledStar);\n        expect(starGlyphProp(stars, 2).className).toContain(filledStar);\n        expect(starGlyphProp(stars, 3).className).toContain(filledStar);\n        expect(starGlyphProp(stars, 4).className).toContain(emptyStar);\n\n        const ratingContainerElement = wrapper.find('.msc-rating__group').first();\n        ratingContainerElement.simulate('mouseLeave');\n        wrapper.update();\n        stars = wrapper.find('span');\n        expect(starGlyphProp(stars, 0).className).toContain(emptyStar);\n        expect(starGlyphProp(stars, 1).className).toContain(emptyStar);\n        expect(starGlyphProp(stars, 2).className).toContain(emptyStar);\n        expect(starGlyphProp(stars, 3).className).toContain(emptyStar);\n        expect(starGlyphProp(stars, 4).className).toContain(emptyStar);\n        wrapper.unmount();\n    });\n\n    it('rating updates when the props change', () => {\n        const wrapper = mount(\n            <RatingComponent\n                className='myClass'\n                avgRating={1}\n                ratingCount={'345'}\n                readOnly={true}\n                context={mockCoreContext}\n                ariaLabel={'my aria label'}\n                id='foo'\n                typeName='foo'\n                data={{}}\n            />\n        );\n\n        let stars = wrapper.find('span');\n        expect(starGlyphProp(stars, 0).className).toContain(filledStar);\n        expect(starGlyphProp(stars, 1).className).toContain(emptyStar);\n        wrapper.setProps({avgRating: 2});\n        wrapper.update();\n        stars = wrapper.find('span');\n        expect(starGlyphProp(stars, 0).className).toContain(filledStar);\n        expect(starGlyphProp(stars, 1).className).toContain(filledStar);\n\n        wrapper.unmount();\n    });\n});"]}