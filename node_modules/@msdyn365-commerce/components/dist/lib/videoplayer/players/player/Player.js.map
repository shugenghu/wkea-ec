{"version":3,"file":"Player.js","sourceRoot":"./src/","sources":["videoplayer/players/player/Player.tsx"],"names":[],"mappings":"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","sourcesContent":["/**\n * Copyright (c) 2018 Microsoft Corporation\n */\nimport { getPayloadObject, IPayLoad, ISliderChangeNotification, onTelemetryClick, Waiting } from '@msdyn365-commerce-modules/utilities';\nimport * as React from 'react';\nimport * as MsDyn365 from '@msdyn365-commerce/core';\nimport AgeGate from '../../components/age-gate/AgeGate';\nimport ClosedCaptions from '../../components/closed-captions/video-closed-captions';\nimport { closedCaptionsSettingDefaults, videoClosedCaptionsConstant } from '../../components/closed-captions/video-closed-captions-settings';\nimport {\n    ICurrentClosedCaptionsSettings,\n    IPlayerMenu,\n    IPlayerMenuItemClickNotification,\n    IPlayPosition,\n    IVideoErrorData,\n    IVideoErrorMessageData,\n    MediaEvents,\n    MenuCategories,\n    PlayerConstants,\n    PlayerStates,\n    VideoErrorCodes,\n    VideoPlayerNames\n} from '../../components/data/player-constants';\nimport { ClosedCaptionTypes, ICCFile, IVideoMetadata } from '../../components/data/player-metadata';\nimport ClosedCaptionHelper from '../../components/helper/closedCaptionHelper';\nimport LocalizationHelper, { LocalizationConstants } from '../../components/helper/localization-helper';\nimport PlayerHelper from '../../components/helper/playerHelper';\nimport PlayPauseTrigger from '../../components/play-pause-trigger/PlayPauseTrigger';\nimport { KeyCodes } from '../../components/utilities/KeyCodes';\nimport { format, isNullOrWhiteSpace } from '../../components/utilities/stringExtensions';\nimport VideoControls from '../../components/video-controls/VideoControls';\nimport { IPlayerProps } from './Player.props';\n\n/**\n * Player state interface\n */\nexport interface IPlayerState {\n    playing: boolean;\n    mouseHovered: boolean;\n    isControlPanelVisible: boolean;\n    doControlsHaveFocus: boolean;\n    playPosition: IPlayPosition;\n    currentVolume: number;\n    isTriggerEnabled: boolean;\n    previousVolume: number;\n    isMuted: boolean;\n    isInFullScreen: boolean;\n    showSpinner: boolean;\n    showErrorMessage: boolean;\n    videoErrorMessage: IVideoErrorMessageData;\n    screenReaderText: string;\n    showClosedCaptions: boolean;\n    isAgegateEnabled: boolean;\n    currentAudioTrack: string;\n    currentAudioTrackURL: string;\n    closedCaptionLanguage: string;\n    closedCaptionsURL: string;\n    currentClosedCaptionsSettings: ICurrentClosedCaptionsSettings;\n    mounted: boolean;\n    tempClosedCaptionsSettings?: {};\n}\n\n/**\n *\n * Player component\n *\n */\nexport default class Player extends React.Component<IPlayerProps, IPlayerState> {\n    public static defaultProps: Partial<IPlayerProps> = {\n        playerData: {\n            options: {\n                autoplay: true,\n                ageGate: false,\n                mute: true,\n                loop: false,\n                playPauseTrigger: false,\n                controls: true,\n                hidePosterFrame: false,\n                lazyLoad: true,\n            },\n            metaData: {\n                playerName: 'videoPlayer',\n                videoId: '',\n                title: '',\n                description: '',\n                duration: 0,\n                posterframeUrl: '',\n                shareUrl: '',\n                videoFiles: [],\n                externalPlayerUrl: '',\n                externalSourceId: '',\n                videoBinaryReferences: []\n            }\n        },\n        playerResources: {\n            playAriaLabel: LocalizationConstants.playAriaLabel,\n            pauseAriaLabel: LocalizationConstants.pauseAriaLabel,\n            closeAriaLabel: LocalizationConstants.closeAriaLabel,\n            muteAriaLabel: LocalizationConstants.muteAriaLabel,\n            unMuteAriaLabel: LocalizationConstants.unMuteAriaLabel,\n            fullScreenAriaLabel: LocalizationConstants.fullScreenAriaLabel,\n            exitFullScreenAriaLabel: LocalizationConstants.exitFullScreenAriaLabel,\n            pausedAriaLabel: LocalizationConstants.pausedAriaLabel,\n            playingAriaLabel: LocalizationConstants.playingAriaLabel,\n            seekBarLabel: LocalizationConstants.seekBarLabel,\n            videoTimeDurationLabel: LocalizationConstants.videoTimeDurationLabel,\n            closedCaptionLabel: LocalizationConstants.closedCaptionLabel\n        },\n    };\n\n    private controlPanelTimer: number = 0;\n    private playerId: string;\n    private player: React.RefObject<HTMLVideoElement> = React.createRef<HTMLVideoElement>();\n    private audio: React.RefObject<HTMLAudioElement> = React.createRef<HTMLAudioElement>();\n    private playerContainer: React.RefObject<HTMLDivElement> = React.createRef<HTMLDivElement>();\n    private videoControl: React.RefObject<VideoControls> = React.createRef<VideoControls>();\n    private ClosedCaptions: React.RefObject<ClosedCaptions> = React.createRef<ClosedCaptions>();\n    private ageGateContainer: React.RefObject<AgeGate> = React.createRef<AgeGate>();\n    private videoUrl: string = '';\n    private posterFrameUrl: string = '';\n    private seekFrom: number | null = null;\n    private playerState: PlayerStates;\n    private playerHelper: PlayerHelper;\n    private localizationHelper: LocalizationHelper;\n    private closedCaptionHelper: ClosedCaptionHelper | null = null;\n    private closedCaptionMenu: IPlayerMenu | null = null;\n    private optionsMenu: IPlayerMenu | null = null;\n    private selectedClosedCaptionsLocale: string | null = '';\n    private isPlayerManuallyPaused: boolean = false;\n    private isPlayerLoaded: boolean = false;\n    private playerMetaData: IVideoMetadata;\n    private isMobileDevice: boolean;\n    private payLoad: IPayLoad;\n\n    /*\n    * @name - isNativeFullscreenEnabled\n    * @description - Checks if fullscreen is supported by browser or not.\n    * @private\n    * @static\n    * @returns {boolean}\n    */\n    private static _isNativeFullscreenEnabled(): boolean {\n    // tslint:disable-next-line:no-any\n    const doc = document as any;\n    return doc.fullscreenEnabled || doc.mozFullScreenEnabled || doc.webkitFullscreenEnabled || doc.webkitSupportsFullscreen ||\n        doc.msFullscreenEnabled;\n    }\n\n    /*\n    * @name - getElementInFullScreen\n    * @description - gets the current fullscreen element.\n    * @private\n    * @returns {any}\n    */\n    // tslint:disable-next-line:no-any\n    private static _getElementInFullScreen(): any {\n        // tslint:disable-next-line:no-any\n        const doc = document as any;\n        return doc.fullscreenElement || doc.mozFullScreenElement || doc.webkitFullscreenElement || doc.msFullscreenElement;\n    }\n\n    // tslint:disable-next-line: cyclomatic-complexity max-func-body-length\n    constructor(props: IPlayerProps) {\n        super(props);\n        this.isMobileDevice = this._isMobile();\n        const state = {\n            playing: false,\n            mouseHovered: this.props.playerData.options.playPauseTrigger! || !this.props.playerData.options.autoplay!,\n            isControlPanelVisible: !this.props.playerData.options.playPauseTrigger,\n            doControlsHaveFocus: false,\n            isTriggerEnabled: this.props.playerData.options.playPauseTrigger! && !this.props.playerData.options.autoplay! && this.props.playerData.options.controls!,\n            currentVolume: this.props.playerData.options.mute && !this.isMobileDevice ? 0 : PlayerConstants.defaultVolume * 100,\n            previousVolume: 0,\n            isMuted: this.props.playerData.options.mute || false,\n            isInFullScreen: false,\n            showSpinner: false,\n            isAgegateEnabled: this.props.playerData.options.ageGate! && !this.props.playerData.options.autoplay!,\n            showErrorMessage: false,\n            screenReaderText: '',\n            closedCaptionLanguage: 'off',\n            currentAudioTrack: 'default',\n            currentAudioTrackURL: '',\n            showClosedCaptions: false,\n            mounted: false,\n            currentClosedCaptionsSettings : {\n                preset: closedCaptionsSettingDefaults.preset,\n                text_font: closedCaptionsSettingDefaults.text_font,\n                text_color: closedCaptionsSettingDefaults.text_color,\n                text_opacity: closedCaptionsSettingDefaults.text_opacity,\n                text_size: closedCaptionsSettingDefaults.text_size,\n                text_edge_style: closedCaptionsSettingDefaults.text_edge_style,\n                text_background_color: closedCaptionsSettingDefaults.text_background_color,\n                text_background_opacity: closedCaptionsSettingDefaults.text_background_opacity,\n                window_color: closedCaptionsSettingDefaults.window_color,\n                window_opacity: closedCaptionsSettingDefaults.window_opacity\n            } ,\n            closedCaptionsURL: '',\n            videoErrorMessage: {\n                title: '',\n                message: ''\n            },\n            playPosition: {\n                currentTime: 0,\n                startTime: 0,\n                endTime: 0,\n                bufferedDuration: 0\n            },\n            tempClosedCaptionsSettings: undefined\n        };\n\n        this.playerState = 'init';\n        this._onTriggerClicked = this._onTriggerClicked.bind(this);\n        this._onMouseEvent = this._onMouseEvent.bind(this);\n        this._onPlay = this._onPlay.bind(this);\n        this._onPause = this._onPause.bind(this);\n        this._triggerEvents = this._triggerEvents.bind(this);\n        this._triggerAudioEvents = this._triggerAudioEvents.bind(this);\n        this._onProgressChange = this._onProgressChange.bind(this);\n        this._setMuted = this._setMuted.bind(this);\n        this._onVolumeChange = this._onVolumeChange.bind(this);\n        this._onFullScreenChanged = this._onFullScreenChanged.bind(this);\n        this._toggleFullScreen = this._toggleFullScreen.bind(this);\n        this._showControlBar = this._showControlBar.bind(this);\n        this._handleControlsKeyDownEvent = this._handleControlsKeyDownEvent.bind(this);\n        this._onFullscreenError = this._onFullscreenError.bind(this);\n        this._onPlayerKeyDown = this._onPlayerKeyDown.bind(this);\n        this._onTriggerFocus = this._onTriggerFocus.bind(this);\n        this._onTriggerBlur = this._onTriggerBlur.bind(this);\n        this._onVideoControlsFocus = this._onVideoControlsFocus.bind(this);\n        this._onVideoControlsBlur = this._onVideoControlsBlur.bind(this);\n        this._onPlayerMenuItemClick = this._onPlayerMenuItemClick.bind(this);\n        this._onPlayerMenuItemFocus = this._onPlayerMenuItemFocus.bind(this);\n        this._onPlayerMenuItemBlur = this._onPlayerMenuItemBlur.bind(this);\n        this._validateAgeSubmitHandler = this._validateAgeSubmitHandler.bind(this);\n        this._onContextMenuClicked = this._onContextMenuClicked.bind(this);\n        this.localizationHelper = new LocalizationHelper(this.props.playerResources!);\n        this.playerHelper = new PlayerHelper(this.props,  this.localizationHelper);\n        this.playerId = this.playerHelper.isEmptyOrUndefined(this.props.playerId) ? 'vid-0' : this.props.playerId!;\n        this.playerMetaData = this.playerHelper.getMetadata();\n        this.state = state;\n        this.posterFrameUrl = this.playerHelper.getPosterFrameUrl();\n        this.payLoad = getPayloadObject('click', this.props.telemetryContent!, '');\n    }\n\n    // tslint:disable-next-line: cyclomatic-complexity\n    public render(): JSX.Element {\n        const maskLevelStyle = {} as React.CSSProperties;\n        if(this.state.isTriggerEnabled) {\n            maskLevelStyle.backgroundColor = this._getMaskLevelStyle();\n        }\n\n        if (this.props.isEditor) {\n            this.playerHelper.updatePlayerProps(this.props);\n            this.playerMetaData = this.playerHelper.getMetadata();\n            if (this.posterFrameUrl !== this.playerHelper.getPosterFrameUrl()) {\n                this.posterFrameUrl = this.playerHelper.getPosterFrameUrl();\n            }\n            if (this.isPlayerLoaded && this.videoUrl !== this.playerHelper.getVideoFileToPlay().url) {\n                this._loadPlayer();\n            }\n        }\n        // Set play aria label\n        let playAriaLabel: string = '';\n        if(this.playerMetaData.title) {\n            playAriaLabel = `${this.localizationHelper.getLocalizedValue('playAriaLabel')} ${this.playerMetaData.title}`;\n        } else {\n            playAriaLabel = LocalizationConstants.playVideoAriaLabel;\n        }\n\n        return (\n            <div\n                role='none'\n                className={`${VideoPlayerNames.videoplayerContainer}`}\n                ref={this.playerContainer}\n                onKeyDown={this._onPlayerKeyDown}\n                onMouseEnter={this._onMouseEvent}\n                onMouseLeave={this._onMouseEvent}\n                data-playerid={this.playerId}\n            >\n                <div className={`${VideoPlayerNames.videoplayerContainer}__wrapper`}>\n                {(this.state.currentAudioTrack !== '' && this.state.currentAudioTrackURL !== '') && (\n                        <audio\n                            ref={this.audio}\n                            preload='auto'\n                            src={this.state.currentAudioTrackURL}\n                            muted={this.state.isMuted}\n                            loop={this.props.playerData.options.loop}\n                        />\n                    )}\n                    <video\n                        className={`${VideoPlayerNames.videoplayerContainer}__video`}\n                        ref={this.player}\n                        preload={'metadata'}\n                        autoPlay={this.props.playerData.options.autoplay}\n                        muted={this.state.isMuted}\n                        loop={this.props.playerData.options.loop}\n                        onPlay={this._onPlay}\n                        onPause={this._onPause}\n                        onClick={!this.state.isAgegateEnabled ? this._onTriggerClicked : this._onPause}\n                        role='none'\n                        src={this.state.mounted ? this.videoUrl : ''}\n                        onContextMenu={this._onContextMenuClicked}\n                        poster={this.state.mounted ? this.posterFrameUrl : ''}\n                        playsInline={true}\n                    />\n                    <div className={`${VideoPlayerNames.videoplayerContainer}__errormessage`} role='status' aria-hidden={!this.state.showErrorMessage}>\n                        <div className={`${VideoPlayerNames.videoplayerContainer}__errormessage__wrapper`}>\n                            <p className={`${VideoPlayerNames.videoplayerContainer}__errormessage__heading`}>{this.state.videoErrorMessage.title}</p>\n                        </div>\n                    </div>\n                    <div className={`${VideoPlayerNames.videoplayerContainer}__screenreader`} aria-live='assertive'>\n                        {this.state.screenReaderText}\n                    </div>\n                    <div\n                        className={`${VideoPlayerNames.videoplayerContainer}__spinner`}\n                        role='status'\n                        aria-hidden={!this.state.showSpinner}\n                    >\n                        <Waiting className={`${VideoPlayerNames.videoplayerContainer}__waiting`}/>\n                    </div>\n                    {(this.props.playerData.options.ageGate) && (\n                            this._renderAgeGate()\n                    )}\n                    {(this.props.playerData.options.playPauseTrigger && !this.props.playerData.options.controls ||\n                         this.state.isTriggerEnabled && !this.state.isAgegateEnabled) && (\n                            this._renderPlayPauseTrigger(playAriaLabel, maskLevelStyle)\n                    )}\n                    {(this.state.showClosedCaptions) && this._renderClosedCaptions()}\n                    {(this.props.playerData.options.controls &&\n                         !this.state.isTriggerEnabled && !this.state.isAgegateEnabled) && (\n                        this._renderVideoControls(playAriaLabel)\n                    )}\n                </div>\n            </div>\n        );\n    }\n\n    /*\n     * @name - play\n     * description - play the video\n     * @public\n     * @returns {void}\n    */\n   public play(): void {\n        this.player.current!.play().catch(() => {\n            this._onVideoError();\n        });\n        if(this.audio.current) {\n            this.audio.current.play().catch(() => {\n                this._onAudioError();\n            });\n        }\n    }\n\n    /*\n     * @name - pause\n     * description - pause the video\n     * @public\n     * @returns {void}\n    */\n   public pause(): void {\n        this.player.current!.pause();\n        if(this.audio.current) {\n            this.audio.current.pause();\n        }\n    }\n\n    public componentDidMount(): void {\n        this.setState({mounted: true});\n        if((this.props.playerData.options.autoplay) || (this.props.playerData.options.lazyLoad && !this.props.playerData.options.playPauseTrigger)\n        || !this.props.playerData.options.lazyLoad) {\n            this._loadPlayer();\n        }\n        document.addEventListener('fullscreenchange', this._onFullScreenChanged);\n        document.addEventListener('mozfullscreenchange', this._onFullScreenChanged);\n        document.addEventListener('webkitfullscreenchange', this._onFullScreenChanged);\n        document.addEventListener('MSFullscreenChange', this._onFullScreenChanged);\n\n        document.addEventListener('fullscreenerror', this._onFullscreenError);\n        document.addEventListener('mozfullscreenerror', this._onFullscreenError);\n        document.addEventListener('webkitfullscreenerror', this._onFullscreenError);\n        document.addEventListener('MSFullscreenError', this._onFullscreenError);\n    }\n\n    public componentWillUnmount(): void {\n        if (this.player.current) {\n            for (const mediaEvent of MediaEvents) {\n                this.player.current.removeEventListener(mediaEvent, this._triggerEvents);\n            }\n        }\n        document.removeEventListener('fullscreenchange', this._onFullScreenChanged);\n        document.removeEventListener('mozfullscreenchange', this._onFullScreenChanged);\n        document.removeEventListener('webkitfullscreenchange', this._onFullScreenChanged);\n        document.removeEventListener('MSFullscreenChange', this._onFullScreenChanged);\n\n        document.removeEventListener('fullscreenerror', this._onFullscreenError);\n        document.removeEventListener('mozfullscreenerror', this._onFullscreenError);\n        document.removeEventListener('webkitfullscreenerror', this._onFullscreenError);\n        document.removeEventListener('MSFullscreenError', this._onFullscreenError);\n    }\n\n    private _renderClosedCaptions = ():  JSX.Element => {\n        return (\n            <ClosedCaptions\n                ref={this.ClosedCaptions}\n                className={`${VideoPlayerNames.videoplayerContainer}__ccoverlay`}\n                showClosedCaptions={this.state.showClosedCaptions}\n                currentTime={this.state.playPosition.currentTime}\n                ccLanguage={this.state.closedCaptionLanguage}\n                ccURL={this.state.closedCaptionsURL}\n                errorCallback={this.playerHelper.onErrorCallback}\n                isVideoControlVisible={this.state.isControlPanelVisible || this.state.doControlsHaveFocus}\n                currentClosedCaptionsSettings={this.state.currentClosedCaptionsSettings}\n                tempClosedCaptionsSettings={this.state.tempClosedCaptionsSettings}\n                onClosedCaptionClick={this._onTriggerClicked}\n            />\n        );\n    }\n\n    private _renderPlayPauseTrigger = (playAriaLabel: string, maskLevelStyle: React.CSSProperties): JSX.Element => {\n        return (\n            <PlayPauseTrigger\n                className={`${VideoPlayerNames.videoplayerContainer}__playpausetrigger`}\n                style={maskLevelStyle}\n                onChange={this._onTriggerClicked}\n                toggled={this.state.playing}\n                aria-hidden={!this.state.mouseHovered}\n                playAriaLabel={playAriaLabel}\n                pauseAriaLabel={this.localizationHelper.getLocalizedValue('pauseAriaLabel')}\n                onFocus={this._onTriggerFocus}\n                onBlur={this._onTriggerBlur}\n                telemetryContent={this.props.telemetryContent}\n            />\n        );\n    }\n\n    private _renderVideoControls = (playAriaLabel: string): JSX.Element => {\n        return (\n            <VideoControls\n                    ref={this.videoControl}\n                    className={`${VideoPlayerNames.videoplayerContainer}__controls ${\n                        (this.state.isControlPanelVisible || this.state.doControlsHaveFocus) ? 'show' : 'hide'\n                    }`}\n                    aria-hidden={!(this.state.isControlPanelVisible || this.state.doControlsHaveFocus)}\n                    onPlayClick={this._onTriggerClicked}\n                    playing={this.state.playing}\n                    closedCaptionMenu={this.closedCaptionMenu!}\n                    optionMenu = {this.optionsMenu!}\n                    videoSeekSteps={PlayerConstants.defaultVideoSliderSteps}\n                    volumeSeekSteps={PlayerConstants.defaultVolumeSliderSteps}\n                    isMuted={this.state.isMuted}\n                    onMuteClick={this._setMuted}\n                    onVolumeChange={this._onVolumeChange}\n                    onProgressChange={this._onProgressChange}\n                    playPosition={this.state.playPosition}\n                    currentClosedCaptionLanguage={this.state.closedCaptionLanguage}\n                    currentVolume={this.state.currentVolume}\n                    isInFullScreen={this.state.isInFullScreen}\n                    toggleFullScreen={this._toggleFullScreen}\n                    handleControlsKeyDownHandler={this._handleControlsKeyDownEvent}\n                    isControlPanelVisible={this.state.isControlPanelVisible || this.state.doControlsHaveFocus}\n                    onFocus={this._onVideoControlsFocus}\n                    onBlur={this._onVideoControlsBlur}\n                    onMenuItemClick={this._onPlayerMenuItemClick}\n                    onMenuItemFocus={this._onPlayerMenuItemFocus}\n                    onMenuItemBlur={this._onPlayerMenuItemBlur}\n                    currentAudioTrack={this.state.currentAudioTrack}\n                    currentAudioTrackURL={this.state.currentAudioTrackURL}\n                    currentClosedCaptionsSetting={this.state.currentClosedCaptionsSettings}\n                    isMobileDevice={this.isMobileDevice}\n                    telemetryContent={this.props.telemetryContent}\n                    resources={{\n                        playAriaLabel: playAriaLabel,\n                        pauseAriaLabel: this.localizationHelper.getLocalizedValue('pauseAriaLabel'),\n                        muteAriaLabel: this.localizationHelper.getLocalizedValue('muteAriaLabel'),\n                        unMuteAriaLabel: this.localizationHelper.getLocalizedValue('unMuteAriaLabel'),\n                        fullScreenAriaLabel: this.localizationHelper.getLocalizedValue('fullScreenAriaLabel'),\n                        exitFullScreenAriaLabel: this.localizationHelper.getLocalizedValue('exitFullScreenAriaLabel'),\n                        seekBarLabel: this.localizationHelper.getLocalizedValue('seekBarLabel'),\n                        videoTimeDurationLabel: this.localizationHelper.getLocalizedValue('videoTimeDurationLabel'),\n                        closedCaptionLabel: this.localizationHelper.getLocalizedValue('closedCaptionLabel'),\n                        optionButtonLabel: this.localizationHelper.getLocalizedValue('optionAriaLabel')\n                    }}\n\n            />\n        );\n    }\n\n    /*\n    * @name - _renderAgeGate\n    * @description - Renders the age gate module\n    * @private\n    * @returns {void}\n    */\n   private _renderAgeGate = (): JSX.Element => {\n        return (\n        <AgeGate ref={this.ageGateContainer} onSubmitClick={this._validateAgeSubmitHandler} aria-hidden={!this.state.isAgegateEnabled} minmumAge={this.playerMetaData.minimumAge}/>\n        );\n    }\n\n    private _loadPlayer(): void {\n        if (this.player.current) {\n            this.player.current.volume = this.state.currentVolume / 100;\n            // Register the media events\n            for (const mediaEvent of MediaEvents) {\n                this.player.current.addEventListener(mediaEvent, this._triggerEvents);\n            }\n        }\n        this.videoUrl = this.playerHelper.getVideoFileToPlay().url;\n        this.player.current!.load();\n        this.isPlayerLoaded = true;\n\n        if(this.props.playerData.options.controls) {\n            this.closedCaptionHelper = new ClosedCaptionHelper(this.playerMetaData, this.playerHelper, this.localizationHelper);\n            this.closedCaptionMenu = this.closedCaptionHelper.getClosedCaptionMenu()!;\n            this.optionsMenu = this.playerHelper.getOptionMenu();\n            const ccFiles = this.playerMetaData.ccFiles!;\n            if(ccFiles !== undefined && ccFiles.length > 0) {\n                const autoCaptionsLang = this.props.playerData && this.props.playerData.options.autoCaptions;\n                let autoCaptionsLocale: string | null = null;\n                for (const ccFile of ccFiles) {\n\n                    if (!autoCaptionsLocale && autoCaptionsLang && ccFile.locale.indexOf(autoCaptionsLang) > -1) {\n                        autoCaptionsLocale = ccFile.locale;\n                    }\n\n                }\n                this.selectedClosedCaptionsLocale = autoCaptionsLocale;\n                if(!isNullOrWhiteSpace(this.selectedClosedCaptionsLocale!)) {\n                    this.setState({\n                        closedCaptionLanguage: this.selectedClosedCaptionsLocale!,\n                        closedCaptionsURL: this.closedCaptionHelper.getClosedCaptionURLFromLocale(this.selectedClosedCaptionsLocale!),\n                        showClosedCaptions: true\n                    });\n                }\n            }\n        }\n    }\n\n    /*\n    * @name - _validateAgeSubmitHandler\n    * @description - Validates the age submitted by the user\n    * @private\n    * @returns {void}\n    */\n    private _validateAgeSubmitHandler(): void {\n        if(this.ageGateContainer.current!.getCalculatedAge()) {\n            this.videoUrl = this.playerHelper.getVideoFileToPlay().url;\n            this.setState({ isAgegateEnabled: false });\n        } else {\n            this.setState({ isAgegateEnabled: true });\n            this._displayErrorMessage({ title: 'you are not allowed to watch video' });\n        }\n    }\n\n    private _onVideoControlsFocus(): void {\n        // No need to call showControlBar, this will make sure it shows\n        this.setState({ doControlsHaveFocus: true});\n    }\n\n    private _onVideoControlsBlur(): void {\n        // Call showControlBar to give it the 6 second timeout\n        this._showControlBar(true);\n\n        this.setState({ doControlsHaveFocus: false});\n    }\n\n    private _onPlayerMenuItemFocus(notification: IPlayerMenuItemClickNotification): void {\n\n        if(notification.data && notification.data.indexOf(':') > 0) {\n            const dataSplit = notification.data.split(':');\n            const settingKey = dataSplit[0];\n            if(settingKey === videoClosedCaptionsConstant.presetKey) {\n                if(this.state.closedCaptionLanguage === 'off') {\n                    this.setState({\n                        showClosedCaptions: true\n                    },            () => { this.ClosedCaptions.current!.showSampleCaptions();\n                                          this._setCCSettings(notification, false);\n                                        });\n                } else {\n                    this._setCCSettings(notification, false);\n                }\n            }\n        } else {\n            if(this.state.closedCaptionLanguage === 'off') {\n                this.setState({\n                    showClosedCaptions: false\n                });\n            }\n        }\n    }\n\n    private _onPlayerMenuItemBlur(): void {\n        this._setCCSettings({\n           category: MenuCategories.ClosedCaptionSettings,\n           id: '',\n           data: 'current'\n        });\n\n    }\n\n    private _onPlayerMenuItemClick(notification: IPlayerMenuItemClickNotification): void {\n        // tslint:disable-next-line: switch-default\n        switch (notification.category) {\n            case MenuCategories.ClosedCaption: {\n                this._setCC(notification.id);\n                break;\n            }\n\n            case MenuCategories.ClosedCaptionSettings: {\n                this._setCCSettings(notification);\n                break;\n            }\n\n            case MenuCategories.AudioTracks: {\n                this._setAudioTracks(notification);\n            }\n        }\n    }\n\n    /**\n     * @name - setCC\n     * @description - Sets the close captioning language/locale.\n     * @public\n     * @param {string} ccLanguageId - The desired new cc value.\n     * @param {boolean} isUserInitiated - Value indicating if the action was trigger by user.\n     * @returns {void}\n     */\n    private _setCC(ccLanguageId: string): void {\n        ccLanguageId = this.playerHelper.removeIdPrefix(ccLanguageId);\n        let selectedOption: ICCFile | null = null;\n\n        if (ccLanguageId && this.playerMetaData.ccFiles) {\n            for (const ccFile of this.playerMetaData.ccFiles) {\n                if ((ccFile.locale === ccLanguageId) && (!ccFile.ccType || ccFile.ccType === ClosedCaptionTypes.TTML)) {\n                    selectedOption = ccFile;\n                    break;\n                }\n            }\n        }\n\n        if(ccLanguageId === 'off') {\n            this.setState({\n                closedCaptionLanguage: 'off',\n                closedCaptionsURL: '',\n                showClosedCaptions: false\n            });\n        } else {\n            this.setState({\n                closedCaptionLanguage: selectedOption!.locale,\n                closedCaptionsURL: selectedOption!.url,\n                showClosedCaptions: true\n            });\n        }\n    }\n\n    /**\n     * @name - setCCSettings\n     * @description - Sets the close caption settings.\n     * @private\n     * @param {IPlayerMenuItemClickNotification} notification - The desired new cc value.\n     * @returns {void}\n     */\n    private _setCCSettings(notification: IPlayerMenuItemClickNotification, updatePreferences?: Boolean): void {\n        if (notification.data === 'reset') {\n            this.setState({\n                currentClosedCaptionsSettings: closedCaptionsSettingDefaults\n            },            () => {\n                if(this.ClosedCaptions.current !== null) {\n                    this.ClosedCaptions.current.applySettings();\n                    this.ClosedCaptions.current.resetCaptions();\n                    this.ClosedCaptions.current.updateCaptions(this.state.playPosition.currentTime);\n                }\n            });\n        } else if(notification.data === 'current') {\n            this.setState({\n                tempClosedCaptionsSettings: undefined\n            });\n\n            if(this.state.closedCaptionLanguage === 'off') {\n                this.setState({\n                    showClosedCaptions: false\n                });\n            }\n        } else {\n            const dataSplit = notification.data!.split(':');\n            if (!dataSplit) {\n                return;\n            }\n            const settingKey = dataSplit[0];\n            const optionKey = dataSplit[1];\n            const currentSetting = this.closedCaptionHelper!.getUpdatedClosedCaptionSetting(this.state.currentClosedCaptionsSettings, settingKey, optionKey);\n            if(updatePreferences === undefined || updatePreferences) {\n                this.setState({\n                    tempClosedCaptionsSettings: undefined,\n                    currentClosedCaptionsSettings: currentSetting\n                },            () => {\n                        if(this.ClosedCaptions.current) {\n                            this.ClosedCaptions.current.applySettings();\n                            this.ClosedCaptions.current.resetCaptions();\n                            this.ClosedCaptions.current.updateCaptions(this.state.playPosition.currentTime);\n                        }\n                });\n            } else {\n                this.setState({\n                    tempClosedCaptionsSettings: currentSetting\n                });\n            }\n        }\n    }\n\n    private _setAudioTracks(notification: IPlayerMenuItemClickNotification): void {\n        const data = JSON.parse(notification.data!);\n        if(data.lang === 'default') {\n            this.setState({\n                currentAudioTrack: 'default',\n                currentAudioTrackURL: ''\n            },            () => {\n                this.player.current!.volume = this.state.currentVolume / 100;\n            });\n        } else {\n            this.setState({\n                currentAudioTrack: data.lang,\n                currentAudioTrackURL: data.url\n            },            () => {\n                        this.audio.current!.currentTime = this.player.current!.currentTime;\n                        this.audio.current!.volume = this.state.currentVolume / 100;\n                        this.player.current!.volume = 0;\n                        if(!this.player.current!.paused) {\n                            this.audio.current!.load();\n                            for(const mediaEvent of MediaEvents) {\n                                this.audio.current!.addEventListener(mediaEvent, this._triggerAudioEvents);\n                            }\n                        }\n            });\n        }\n    }\n\n    // tslint:disable-next-line:cyclomatic-complexity\n    private _triggerAudioEvents(event: Event): void {\n        switch (event.type.toLowerCase()) {\n\n            case 'error':\n                this._onAudioError();\n                break;\n            case 'waiting':\n                if(this.playerState === 'playing') {\n                    this.isPlayerManuallyPaused = true;\n                    this.pause();\n                }\n                break;\n\n            case 'loadeddata':\n                if(this.isPlayerManuallyPaused) {\n                    this.isPlayerManuallyPaused = false;\n                    this.play();\n                }\n                if(!this.player.current!.paused) {\n                    this.play();\n                }\n                break;\n\n            default:\n        }\n    }\n\n    // tslint:disable-next-line:cyclomatic-complexity\n    private _triggerEvents(event: Event): void {\n        switch (event.type.toLowerCase()) {\n            case 'canplay':\n            case 'canplaythrough':\n                break;\n\n            case 'error':\n                this._onVideoError();\n                break;\n\n            case 'play':\n                break;\n\n            case 'pause':\n                this._updateState('paused');\n                if(this.props.playerData.options.playPauseTrigger) {\n                    this.setState({\n                        mouseHovered: true\n                    });\n                }\n                break;\n\n            case 'seeking':\n                if (this.playerState !== 'ended' && this.player.current!.seeking) {\n                    this.seekFrom = this.player.current!.currentTime;\n                    this._updateState('seeking');\n                }\n                break;\n\n            case 'seeked':\n                const currentPlayer = this.player.current;\n                const currentTime = currentPlayer!.currentTime;\n                if (this.playerState !== 'ended' && this.player.current!.seeking && this.seekFrom !== currentTime) {\n                    this.seekFrom = null;\n                }\n                this._updateState(currentPlayer!.paused ? 'paused' : 'playing');\n                break;\n\n            case 'waiting':\n                this._updateState('buffering');\n                break;\n\n            case 'loadedmetadata':\n                break;\n\n            case 'loadeddata':\n                this._onVideoLoadedData();\n                if (!this.props.playerData.options.autoplay) {\n                    this._showControlBar(false);\n                }\n                break;\n\n            case 'timeupdate':\n                this._onTimeUpdate();\n                break;\n\n            case 'ended':\n                this._updateState('ended');\n                this._stop();\n                break;\n\n            case 'playing':\n                this._updateState('playing');\n                break;\n\n            case 'volumechange':\n                break;\n\n            default:\n        }\n    }\n\n    private _onAudioError(): void {\n        this.pause();\n        const errorMessage: IVideoErrorMessageData = { title: 'Error while playing audio Track. Switching back to default track' };\n        this._displayErrorMessage(errorMessage);\n        this._setAudioTracks({category: 'audioTracks', data: '{ \"lang\": \"default\", \"url\": \"\"}' , id: ''});\n        setTimeout(() => {\n            this.setState({\n                showErrorMessage: false\n            },            () => { this.play(); });\n        },         2000);\n    }\n\n    // TODO : Need to localized the Error strings\n    private _onVideoError(): void {\n        this._updateState('error');\n        const error: IVideoErrorData | null = this._getError();\n        let errorMessage = '';\n        if (error && error.errorCode) {\n            switch (error.errorCode) {\n                case VideoErrorCodes.MediaErrorAborted:\n                    errorMessage = 'video playback was aborted';\n                    break;\n                case VideoErrorCodes.MediaErrorNetwork:\n                    errorMessage = 'video failed to download';\n                    break;\n                case VideoErrorCodes.MediaErrorDecode:\n                    errorMessage = 'video is not readable';\n                    break;\n                case VideoErrorCodes.MediaErrorSourceNotSupported:\n                    errorMessage = 'video format is not supported';\n                    break;\n                default:\n                    errorMessage = 'unknown error occurred';\n            }\n\n            this._stopMedia(errorMessage);\n        } else {\n            this._stopMedia();\n        }\n    }\n\n    private _stopMedia(msgToDisplay?: string): void {\n        if (msgToDisplay) {\n            this._displayErrorMessage({ title: msgToDisplay });\n            this._updateState('stopped');\n        }\n    }\n\n    /*\n    * @name - displayErrorMessage\n    * @description - Create an error message overlay\n    * @private\n    * @param {IVideoErrorMessageData} - Error message content\n    * @returns {void}\n    */\n    private _displayErrorMessage(errorMessage: IVideoErrorMessageData): void {\n        this.setState({ videoErrorMessage: { title: errorMessage.title, message: errorMessage.message }});\n        this.setState({ showErrorMessage: true});\n    }\n\n    /*\n     * @name - getErrorCode\n     * @description - gets the video error code of the current error.\n     * @private\n     * @returns {IVideoErrorData}\n     */\n    private _getError(): IVideoErrorData | null {\n        let contentErrorCode: VideoErrorCodes;\n        if(this.player.current!.error) {\n            // video playback failed - show a message saying why\n            switch (this.player.current!.error.code) {\n                case this.player.current!.error.MEDIA_ERR_ABORTED:\n                    contentErrorCode = VideoErrorCodes.MediaErrorAborted;\n                    break;\n                case this.player.current!.error.MEDIA_ERR_NETWORK:\n                    contentErrorCode = VideoErrorCodes.MediaErrorNetwork;\n                    break;\n                case this.player.current!.error.MEDIA_ERR_DECODE:\n                    contentErrorCode = VideoErrorCodes.MediaErrorDecode;\n                    break;\n                case this.player.current!.error.MEDIA_ERR_SRC_NOT_SUPPORTED:\n                    contentErrorCode = VideoErrorCodes.MediaErrorSourceNotSupported;\n                    break;\n                default:\n                    contentErrorCode = VideoErrorCodes.MediaErrorUnknown;\n            }\n            return { errorCode: contentErrorCode };\n        }\n        return null;\n    }\n\n    private _handleControlsKeyDownEvent(e: React.KeyboardEvent): void {\n        const keyBrdEvent = (e as unknown) as KeyboardEvent;\n        const keycode = keyBrdEvent.keyCode;\n        this._showControlBar(true);\n        // const castTarget = e.target as HTMLElement;\n\n        switch (keycode) {\n            case KeyCodes.Home:\n                e.stopPropagation();\n                e.preventDefault();\n                this.player.current!.currentTime = 0;\n                if(this.audio.current) {\n                    this.audio.current.currentTime = 0;\n                }\n                break;\n            case KeyCodes.End:\n                e.stopPropagation();\n                e.preventDefault();\n                this.player.current!.currentTime = this.state.playPosition.endTime;\n                if(this.audio.current) {\n                    this.audio.current.currentTime = this.state.playPosition.endTime;\n                }\n                break;\n            case KeyCodes.ArrowLeft:\n            case KeyCodes.ArrowRight:\n                e.stopPropagation();\n                e.preventDefault();\n                let jumpToTime =\n                    keycode === KeyCodes.ArrowLeft\n                        ? this.state.playPosition.currentTime - PlayerConstants.defaultVideoSliderSteps\n                        : this.state.playPosition.currentTime + PlayerConstants.defaultVideoSliderSteps;\n                jumpToTime = Math.min(Math.max(this.state.playPosition.startTime, jumpToTime), this.state.playPosition.endTime);\n                this.player.current!.currentTime = jumpToTime;\n                if(this.audio.current) {\n                    this.audio.current.currentTime = jumpToTime;\n                }\n                break;\n            case KeyCodes.ArrowUp:\n            case KeyCodes.ArrowDown:\n                e.stopPropagation();\n                e.preventDefault();\n                this.videoControl.current!.showVolumeControl(true).call(this);\n                const volume =\n                    keycode === KeyCodes.ArrowDown\n                        ? Math.max((this.state.currentVolume - PlayerConstants.defaultVolumeSliderSteps) / 100, 0)\n                        : Math.min((this.state.currentVolume + PlayerConstants.defaultVolumeSliderSteps) / 100, 1);\n                this.setState({ currentVolume: Math.round(volume * 100) });\n                if(this.audio.current) {\n                    this.audio.current.volume = volume;\n                } else {\n                    this.player.current!.volume = volume;\n                }\n                if (volume === 0) {\n                    this.setState({ isMuted: true });\n                } else {\n                    this.setState({ isMuted: false });\n                }\n                break;\n            default:\n        }\n    }\n\n    private _onPlay(): void {\n        this.setState({ playing: true });\n    }\n\n    private _onPause(): void {\n        this.setState({ playing: false });\n    }\n\n    private _onVolumeChange(notification: ISliderChangeNotification): void {\n        this.setState({ currentVolume: notification.firstThumbValue });\n        if(this.audio.current) {\n            this.audio.current.volume = notification.firstThumbValue / 100;\n        } else {\n            this.player.current!.volume = notification.firstThumbValue / 100;\n        }\n\n        if (notification.firstThumbValue === 0) {\n            this.setState({ isMuted: true });\n        } else {\n            if (this.state.isMuted && notification.firstThumbValue > 0) {\n                this.setState({ isMuted: false });\n            }\n        }\n    }\n\n    private _setMuted(): void {\n        if (this.state.isMuted) {\n            const newVolume = this.state.previousVolume === 0 ? PlayerConstants.defaultVolume * 100 : this.state.previousVolume;\n\n            if(this.audio.current) {\n                this.audio.current.volume = newVolume / 100;\n            } else {\n                this.player.current!.volume = newVolume / 100;\n            }\n            this.setState({ isMuted: false, currentVolume: newVolume });\n            this._updateScreenReaderElement(this.localizationHelper.getLocalizedValue('unMuteAriaLabel'));\n            onTelemetryClick(this.props.telemetryContent!, this.payLoad, LocalizationConstants.unMuteAriaLabel).call(this);\n        } else {\n            this.setState({ isMuted: true, previousVolume: this.player.current!.volume * 100, currentVolume: 0 });\n            this._updateScreenReaderElement(this.localizationHelper.getLocalizedValue('muteAriaLabel'));\n            onTelemetryClick(this.props.telemetryContent!, this.payLoad, LocalizationConstants.muteAriaLabel).call(this);\n        }\n    }\n\n    private _onPlayerKeyDown(e: React.KeyboardEvent): void {\n        const keyBrdEvent = (e as unknown) as KeyboardEvent;\n        const keycode = keyBrdEvent.keyCode;\n        // tslint:disable-next-line:switch-default\n        switch (keycode) {\n            case KeyCodes.Tab:\n                this._showControlsBasedOnState();\n        }\n    }\n\n    private _onMouseEvent(event: React.MouseEvent<HTMLDivElement>): void {\n        if (this.props.playerData.options.controls) {\n            this._showControlBar();\n        }\n        if(!this.state.isTriggerEnabled && this.state.playing) {\n            this.setState({ mouseHovered: event.type === 'mouseenter' });\n        }\n    }\n\n    private _showControlBar(autoHide: boolean = true): void {\n        if(!this.state.isTriggerEnabled && !this.state.isAgegateEnabled) {\n            if (!this.state.isControlPanelVisible) {\n                this.setState({ isControlPanelVisible: true });\n            }\n            if (!!this.controlPanelTimer) {\n                window && window.clearTimeout(this.controlPanelTimer);\n                this.controlPanelTimer = 0;\n            }\n            if (autoHide) {\n                this.controlPanelTimer = window && window.setTimeout(() => {\n                    this._hideControlBar();\n                },                                                   PlayerConstants.defaultControlPanelTimeout);\n            }\n        }\n    }\n\n    private _hideControlBar(): void {\n        window && window.clearTimeout(this.controlPanelTimer);\n        this.controlPanelTimer = 0;\n        this.setState({ isControlPanelVisible: false });\n    }\n\n    private _onFullScreenChanged(): void {\n        this.state.isInFullScreen ? this._onFullscreenExit() : this._onFullscreenEnter();\n    }\n\n    /*\n    * @name - onFullscreenEnter\n    * @description - Event handler for fullscreen enter.\n    * @private\n    * @returns {void}\n    */\n   private _onFullscreenEnter(): void {\n       this.setState({\n           isInFullScreen: true\n       });\n    }\n\n    /*\n    * @name - onFullscreenExit\n    * @description - Event handler for fullscreen exit.\n    * @private\n    * @returns {void}\n    */\n   private _onFullscreenExit(): void {\n        this.setState({\n            isInFullScreen: false\n        });\n    }\n\n    private _toggleFullScreen(): void {\n        this.state.isInFullScreen ? this._exitFullScreen() : this._enterFullScreen();\n    }\n\n    private _onFullscreenError(): void {\n        this.setState({\n            isInFullScreen: false\n        });\n    }\n\n    private _enterFullScreen(): void {\n        if(!Player._isNativeFullscreenEnabled()) {\n            return;\n        }\n\n        // tslint:disable-next-line:no-any\n        const fullscreenElement = this.playerContainer.current! as any;\n        const elementInFullScreen = Player._getElementInFullScreen();\n\n        // We go to fullscreen only when there is no other element in fullscreen and browser supports fullscreen\n        if (!!fullscreenElement && !elementInFullScreen) {\n            const enterFullScreen = fullscreenElement.requestFullscreen ||\n                fullscreenElement.msRequestFullscreen ||\n                fullscreenElement.mozRequestFullScreen ||\n                fullscreenElement.webkitRequestFullscreen ||\n                fullscreenElement.webkitEnterFullScreen;\n\n            enterFullScreen.call(fullscreenElement);\n            this._updateScreenReaderElement(this.localizationHelper.getLocalizedValue('fullScreenLabel'));\n            onTelemetryClick(this.props.telemetryContent!, this.payLoad, LocalizationConstants.fullScreenAriaLabel).call(this);\n        }\n    }\n\n    private _exitFullScreen(): void {\n        if(!Player._isNativeFullscreenEnabled()) {\n            return;\n        }\n\n        // tslint:disable-next-line:no-any\n        const fullscreenElement = this.playerContainer.current! as any;\n        const elementInFullScreen = Player._getElementInFullScreen();\n\n        // we only call cancel if we are in fullscreen. If another element went fullscreen that took the player with it then\n        // we shouldn't call cancel fullscreen\n        if (!!fullscreenElement && fullscreenElement === elementInFullScreen) {\n            // tslint:disable-next-line:no-any\n            const doc = document as any;\n            const cancelFullScreen = doc.cancelFullScreen ||\n                doc.msExitFullscreen ||\n                doc.mozCancelFullScreen ||\n                doc.webkitCancelFullScreen;\n\n            cancelFullScreen.call(doc);\n            this._updateScreenReaderElement(this.localizationHelper.getLocalizedValue('exitFullScreenLabel'));\n            onTelemetryClick(this.props.telemetryContent!, this.payLoad, LocalizationConstants.exitFullScreenAriaLabel).call(this);\n        }\n    }\n\n    private _onVideoLoadedData(): void {\n        this._updateState('ready');\n        if (this.props.playerData.options.controls) {\n            const position = this._getPlayPosition();\n            this.setState({ playPosition: position });\n        }\n    }\n\n    private _onTimeUpdate(): void {\n        if (this.props.playerData.options.controls) {\n            const position = this._getPlayPosition();\n            // EndTime changes after playing video for certain time. Keeping this constant.\n            position.endTime = this.state.playPosition.endTime;\n            this.setState({ playPosition: position});\n            if(this.state.playing) {\n                if(this.playerState === 'buffering') {\n                    this._updateState('playing');\n                }\n            }\n        }\n    }\n\n    private _getBufferedDuration(): number {\n        let buffered = 0;\n        if (this.player.current!.buffered && this.player.current!.buffered.length) {\n            buffered = this.player.current!.buffered.end(this.player.current!.buffered.length - 1);\n        }\n        return buffered;\n    }\n\n    private _getPlayPosition(): IPlayPosition {\n        const bufferedDuration = this._getBufferedDuration();\n        return {\n            currentTime: this.player.current!.currentTime,\n            startTime: 0,\n            endTime: this.player.current!.duration,\n            bufferedDuration: bufferedDuration\n        };\n    }\n\n    private _onProgressChange(notification: ISliderChangeNotification): void {\n        let time = notification.firstThumbValue;\n        const position = this._getPlayPosition();\n        time = Math.max(position.startTime, Math.min(time, position.endTime));\n\n        if (Math.abs(time - position.currentTime) >= PlayerConstants.defaultPositionUpdateThreshold) {\n            this.player.current!.currentTime = time;\n            if(this.audio.current) {\n                this.audio.current.currentTime = time;\n            }\n        }\n    }\n\n    private _onTriggerClicked(): void {\n        const currentPlayer = this.player.current;\n        if(!this.isPlayerLoaded) {\n            this._loadPlayer();\n            this.player.current!.autoplay = true;\n        } else {\n            if (currentPlayer!.paused) {\n                this.play();\n                this._updateScreenReaderElement(this.localizationHelper.getLocalizedValue('playingAriaLabel'));\n                onTelemetryClick(this.props.telemetryContent!, this.payLoad, LocalizationConstants.playAriaLabel).call(this);\n            } else {\n                this.pause();\n                this._updateScreenReaderElement(this.localizationHelper.getLocalizedValue('pausedAriaLabel'));\n                onTelemetryClick(this.props.telemetryContent!, this.payLoad, LocalizationConstants.pauseAriaLabel).call(this);\n            }\n        }\n\n        if(this.state.isTriggerEnabled) {\n            this.setState({ isTriggerEnabled: false }, () => { this.videoControl.current!.setFocusOnPlay(); });\n            onTelemetryClick(this.props.telemetryContent!, this.payLoad, LocalizationConstants.pauseAriaLabel).call(this);\n            if(this.props.playerData.options.playFullScreen) {\n                this._enterFullScreen();\n            }\n        }\n    }\n\n    private _stop(): void {\n        this._seek(0);\n        if (this.props.playerData.options.controls) {\n            this.pause();\n            const playPosition = this._getPlayPosition();\n            playPosition.endTime = this.state.playPosition.endTime;\n            this.setState({ playPosition: playPosition});\n            if(this.audio.current) {\n                this.audio.current.pause();\n            }\n        }\n    }\n\n    private _seek(time: number): void {\n        const position = this._getPlayPosition();\n        time = Math.max(position.startTime, Math.min(time, position.endTime));\n\n        if (Math.abs(time - position.currentTime) >= PlayerConstants.defaultPositionUpdateThreshold) {\n            this.seekFrom = position.currentTime;\n            this.player.current!.currentTime = time;\n            if(this.audio.current) {\n                this.audio.current.currentTime = time;\n            }\n        }\n    }\n\n    /*\n     * @name - _getMaskLevelStyle\n     * @description - Returns the mask level style\n     * @private\n     * @returns {string}\n     */\n    private _getMaskLevelStyle(): string {\n        let result: string;\n        const maskLevel = this.props.playerData.options.maskLevel || PlayerConstants.defaultMaskLevel;\n        result = format('rgba(0,0,0,{0})', Number(maskLevel) / 100);\n        return result;\n    }\n\n    /*\n     * @name - updateState\n     * @description - updates the current player state\n     * @private\n     * @param {string} newState - player state\n     * @returns {void}\n     */\n    private _updateState(newState: PlayerStates): void {\n        if (!newState || newState === this.playerState) {\n            return;\n        }\n\n        this.playerState = newState;\n\n        this._showControlsBasedOnState();\n        this._showSpinnerBasedOnState();\n    }\n\n    /*\n     * @name - showSpinnerBasedOnState\n     * @description - Shows or hides the spinner based on player state\n     * @private\n     * @returns {void}\n     */\n    private _showSpinnerBasedOnState(): void {\n        switch (this.playerState) {\n            case 'ready':\n            case 'playing':\n            case 'paused':\n            case 'ended':\n            case 'stopped':\n            case 'error':\n                this._hideSpinner();\n                break;\n            default:\n                this._showSpinner();\n        }\n    }\n\n    /*\n    * @name - showControlsBasedOnState\n    * @description - Shows or hides the player controls based on player state\n    * @private\n    * @returns {void}\n    */\n    private _showControlsBasedOnState(): void {\n        switch (this.playerState) {\n            case 'error':\n            case 'loading':\n            case 'init':\n                this._hideControlBar();\n                break;\n            case 'ended':\n                this._showControlBar(false);\n                break;\n            case 'ready':\n            case 'paused':\n            case 'stopped':\n                this._showControlBar(false);\n                break;\n            default:\n            this._showControlBar(true);\n        }\n    }\n\n    private _hideSpinner(): void {\n        this.setState({ showSpinner: false });\n    }\n\n    private _showSpinner(): void {\n        this.setState({ showSpinner: true });\n    }\n\n    /*\n     * @name - _onTriggerFocus\n     * description - Play Trigger focus event\n     * @private\n     * @returns {void}\n    */\n    private _onTriggerFocus(): void {\n        this.setState({ mouseHovered: true});\n    }\n\n    /*\n     * @name - _onTriggerBlur\n     * description - Play Trigger Blur event\n     * @private\n     * @returns {void}\n    */\n    private _onTriggerBlur(): void {\n        if(!this.state.isTriggerEnabled && this.state.playing) {\n            this.setState({ mouseHovered: false});\n        }\n    }\n\n    /*\n     * @name - updateScreenReaderElement\n     * description - updates the screen reader element\n     * @private\n     * @returns {void}\n    */\n   private _updateScreenReaderElement(text: string): void {\n        this.setState({\n            screenReaderText: text\n        });\n\n    }\n\n     /*\n     * @name - onContextMenuClicked\n     * description - avoid opening context menu on righ click\n     * @private\n     * @returns {void}\n    */\n    private _onContextMenuClicked(e: React.MouseEvent): void {\n        e.preventDefault();\n    }\n\n    /*\n     * @name - _isMobile\n     * description - check for mobile devices\n     * @private\n     * @returns {void}\n    */\n    private _isMobile(): boolean {\n        if (MsDyn365.msdyn365Commerce.isBrowser) {\n            const userAgent = window.navigator.userAgent;\n            const isIphone = !!userAgent.match(/iPhone/i);\n            const isSilk = !!userAgent.match(/Silk/i);\n            const isWindowsPhone = !!userAgent.match(/Windows Phone/i);\n            const isAndroid = !isWindowsPhone && (isSilk ||\n                !!userAgent.match(/Android/i));\n            return isIphone || isWindowsPhone || isAndroid;\n        }\n        return false;\n    }\n}"]}