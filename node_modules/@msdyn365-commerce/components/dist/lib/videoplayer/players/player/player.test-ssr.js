import { render } from 'enzyme';
import * as React from 'react';
import { MediaQuality, MediaTypes } from '../../components/data/player-metadata';
import Player from './Player';
describe('Player', () => {
    it('renders player correctly', () => {
        const videoPlayerData = {
            options: {
                autoplay: true,
                mute: true,
                loop: false,
                playPauseTrigger: true,
                lazyLoad: false,
                controls: false
            },
            metaData: {
                videoFiles: [
                    {
                        url: 'https://prod-video-cms-amp-microsoft-com.akamaized.net/tenant/amp/entityid/BBwlT1L?blobrefkey=102&$blob=1',
                        mediaType: MediaTypes.MP4,
                        quality: MediaQuality.HQ
                    }
                ]
            }
        };
        const videoPlayerRes = {
            playAriaLabel: 'play',
            pauseAriaLabel: 'pause',
            closeAriaLabel: 'close',
            muteAriaLabel: 'mute',
            unMuteAriaLabel: 'unmute',
            fullScreenAriaLabel: 'full screen',
            exitFullScreenAriaLabel: 'exit full screen',
            seekBarLabel: 'Seek bar',
            closedCaptionLabel: 'Closed caption'
        };
        const player = render(React.createElement(Player, { playerId: 'videoTestID', playerData: videoPlayerData, playerResources: videoPlayerRes }));
        expect(player).toMatchSnapshot();
    });
});
describe('Player', () => {
    it('renders player correctly without playerResources and player id', () => {
        const videoPlayerData = {
            options: {
                autoplay: true,
                mute: true,
                loop: false,
                playPauseTrigger: false,
                lazyLoad: false
            },
            metaData: {
                videoFiles: [
                    {
                        url: 'https://prod-video-cms-amp-microsoft-com.akamaized.net/tenant/amp/entityid/BBwlT1L?blobrefkey=102&$blob=1',
                        mediaType: MediaTypes.MP4,
                        quality: MediaQuality.HQ
                    }
                ]
            }
        };
        const videoPlayerRes = {
            playAriaLabel: 'play',
            pauseAriaLabel: 'pause',
            closeAriaLabel: 'close',
            muteAriaLabel: 'mute',
            unMuteAriaLabel: 'unmute',
            fullScreenAriaLabel: 'full screen',
            exitFullScreenAriaLabel: 'exit full screen',
            seekBarLabel: 'Seek bar',
            closedCaptionLabel: 'Closed caption'
        };
        const player = render(React.createElement(Player, { playerId: 'videoTestID', playerData: videoPlayerData, playerResources: videoPlayerRes }));
        expect(player).toMatchSnapshot();
    });
});
describe('Player', () => {
    it('renders player correctly without play pause trigger', () => {
        const videoPlayerData = {
            options: {
                autoplay: false,
                mute: false,
                loop: true,
                playPauseTrigger: false,
                lazyLoad: false
            },
            metaData: {
                videoFiles: [
                    {
                        url: 'https://prod-video-cms-amp-microsoft-com.akamaized.net/tenant/amp/entityid/BBwlT1L?blobrefkey=102&$blob=1',
                        mediaType: MediaTypes.MP4,
                        quality: MediaQuality.HQ
                    }
                ]
            }
        };
        const videoPlayerRes = {
            playAriaLabel: 'play',
            pauseAriaLabel: 'pause',
            closeAriaLabel: 'close',
            muteAriaLabel: 'mute',
            unMuteAriaLabel: 'unmute',
            fullScreenAriaLabel: 'full screen',
            exitFullScreenAriaLabel: 'exit full screen',
            seekBarLabel: 'Seek bar',
            closedCaptionLabel: 'Closed caption'
        };
        const player = render(React.createElement(Player, { playerId: 'videoTestID', playerData: videoPlayerData, playerResources: videoPlayerRes }));
        expect(player).toMatchSnapshot();
    });
});
describe('Player with video controls', () => {
    it('renders player correctly with video controls', () => {
        const videoPlayerData = {
            options: {
                autoplay: true,
                mute: true,
                loop: false,
                playPauseTrigger: false,
                controls: true,
                lazyLoad: false
            },
            metaData: {
                videoFiles: [
                    {
                        url: 'https://prod-video-cms-amp-microsoft-com.akamaized.net/tenant/amp/entityid/BBwlT1L?blobrefkey=102&$blob=1',
                        mediaType: MediaTypes.MP4,
                        quality: MediaQuality.HQ
                    }
                ]
            }
        };
        const videoPlayerRes = {
            playAriaLabel: 'play',
            pauseAriaLabel: 'pause',
            closeAriaLabel: 'close',
            muteAriaLabel: 'mute',
            unMuteAriaLabel: 'unmute',
            fullScreenAriaLabel: 'full screen',
            exitFullScreenAriaLabel: 'exit full screen',
            seekBarLabel: 'Seek bar',
            closedCaptionLabel: 'Closed caption'
        };
        const player = render(React.createElement(Player, { playerId: 'videoTestID', playerData: videoPlayerData, playerResources: videoPlayerRes }));
        expect(player).toMatchSnapshot();
    });
    it('renders player correctly without playerResources and player id', () => {
        const videoPlayerData = {
            options: {
                autoplay: true,
                mute: true,
                loop: false,
                playPauseTrigger: false,
                controls: true,
                lazyLoad: false
            },
            metaData: {
                videoFiles: [
                    {
                        url: 'https://prod-video-cms-amp-microsoft-com.akamaized.net/tenant/amp/entityid/BBwlT1L?blobrefkey=102&$blob=1',
                        mediaType: MediaTypes.MP4,
                        quality: MediaQuality.HQ
                    }
                ]
            }
        };
        const player = render(React.createElement(Player, { playerData: videoPlayerData }));
        expect(player).toMatchSnapshot();
    });
    it('renders player correctly without play pause trigger', () => {
        const videoPlayerData = {
            options: {
                autoplay: false,
                mute: false,
                loop: true,
                playPauseTrigger: false,
                controls: false,
                lazyLoad: false
            },
            metaData: {
                videoFiles: [
                    {
                        url: 'https://prod-video-cms-amp-microsoft-com.akamaized.net/tenant/amp/entityid/BBwlT1L?blobrefkey=102&$blob=1',
                        mediaType: MediaTypes.MP4,
                        quality: MediaQuality.HQ
                    }
                ]
            }
        };
        const videoPlayerRes = {
            playAriaLabel: 'play',
            pauseAriaLabel: 'pause',
            closeAriaLabel: 'close',
            muteAriaLabel: 'mute',
            unMuteAriaLabel: 'unmute',
            fullScreenAriaLabel: 'full screen',
            exitFullScreenAriaLabel: 'exit full screen',
            seekBarLabel: 'Seek bar',
            closedCaptionLabel: 'Closed caption'
        };
        const player = render(React.createElement(Player, { playerId: 'videoTestID', playerData: videoPlayerData, playerResources: videoPlayerRes }));
        expect(player).toMatchSnapshot();
    });
    it('renders player correctly with video controls', () => {
        const videoPlayerData = {
            options: {
                autoplay: true,
                mute: true,
                loop: false,
                playPauseTrigger: false,
                controls: true,
                ageGate: true,
                lazyLoad: false
            },
            metaData: {
                videoFiles: [
                    {
                        url: 'https://prod-video-cms-amp-microsoft-com.akamaized.net/tenant/amp/entityid/BBwlT1L?blobrefkey=102&$blob=1',
                        mediaType: MediaTypes.MP4,
                        quality: MediaQuality.HQ
                    }
                ]
            }
        };
        const videoPlayerRes = {
            playAriaLabel: 'play',
            pauseAriaLabel: 'pause',
            closeAriaLabel: 'close',
            muteAriaLabel: 'mute',
            unMuteAriaLabel: 'unmute',
            fullScreenAriaLabel: 'full screen',
            exitFullScreenAriaLabel: 'exit full screen'
        };
        const player = render(React.createElement(Player, { playerId: 'videoTestID', playerData: videoPlayerData, playerResources: videoPlayerRes }));
        expect(player).toMatchSnapshot();
    });
});
//# sourceMappingURL=player.test-ssr.js.map