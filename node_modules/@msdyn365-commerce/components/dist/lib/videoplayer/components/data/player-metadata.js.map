{"version":3,"file":"player-metadata.js","sourceRoot":"./src/","sources":["videoplayer/components/data/player-metadata.ts"],"names":[],"mappings":"AA0BA,MAAM,CAAN,IAAY,UAKX;AALD,WAAY,UAAU;IAClB,yBAAW,CAAA;IACX,2BAAa,CAAA;IACb,+BAAiB,CAAA;IACjB,yBAAW,CAAA;AACf,CAAC,EALW,UAAU,KAAV,UAAU,QAKrB;AAMD,MAAM,CAAN,IAAY,YAMX;AAND,WAAY,YAAY;IACpB,yBAAS,CAAA;IACT,2BAAU,CAAA;IACV,yBAAS,CAAA;IACT,yBAAS,CAAA;IACT,yBAAS,CAAA;AACb,CAAC,EANW,YAAY,KAAZ,YAAY,QAMvB;AAMD,MAAM,CAAN,IAAY,kBAGX;AAHD,WAAY,kBAAkB;IAC1B,iCAAW,CAAA;IACX,mCAAa,CAAA;AACjB,CAAC,EAHW,kBAAkB,KAAlB,kBAAkB,QAG7B;AAMD,MAAM,CAAN,IAAY,sBAKX;AALD,WAAY,sBAAsB;IAC9B,mDAAyB,CAAA;IACzB,yCAAe,CAAA;IACf,yCAAe,CAAA;IACf,qDAA2B,CAAA;AAC/B,CAAC,EALW,sBAAsB,KAAtB,sBAAsB,QAKjC","sourcesContent":["import { IAudioTrack } from './player-interface';\n\n/**\n * @interface ICCFile\n * @description - The data contract interface used for storing references to closed caption files.\n */\nexport interface ICCFile {\n    url: string;\n    locale: string;\n    ccType?: ClosedCaptionTypes;\n}\n\n/**\n * @interface IDownloadableFile\n * @description - The data contract interface used for storing references downloadable media files.\n */\nexport interface IDownloadableFile {\n    mediaType: DownloadableMediaTypes;\n    url: string;\n    locale: string;\n}\n\n/**\n * @enum MediaTypes\n * @description - Enum for supported media types.\n */\nexport enum MediaTypes {\n    MP4 = 'MP4',\n    DASH = 'DASH',\n    SMOOTH = 'SMOOTH',\n    HLS = 'HLS',\n}\n\n/**\n * @enum MediaQuality\n * @description - Enum for supported media quality.\n */\nexport enum MediaQuality {\n    HD = 'HD',\n    HDX ='HDX',\n    HQ = 'HQ',\n    SD = 'SD',\n    LO = 'LO',\n}\n\n/**\n * @enum ClosedCaptionTypes\n * @description - Enum for supported closed caption types.\n */\nexport enum ClosedCaptionTypes {\n    VTT = 'VTT',\n    TTML = 'TTML',\n}\n\n/**\n * @enum DownloadableMediaTypes\n * @description - Enum for supported downloadable media types.\n */\nexport enum DownloadableMediaTypes {\n    transcript = 'transcript',\n    audio = 'audio',\n    video = 'video',\n    videoWithCC = 'videoWithCC',\n}\n\n/**\n * cms datatype of video binary reference\n */\nexport interface IVideoBinaryReference {\n    /// <summary>Gets the video binary file format.</summary>\n    format: string;\n\n    /// <summary>Gets the video bit rate.</summary>\n    frameRate: number;\n\n    /// <summary>Gets the URL used on the clients to play the video.</summary>\n    ClientHref: string;\n}\n\n/**\n * cms datatype of video transcript binary reference\n */\nexport interface IVideoTranscriptBinaryReference {\n    /// <summary>Gets the locale.</summary>\n    locale: string;\n\n    /// <summary>Gets the URL used on the clients to play the video.</summary>\n    clientHref: string;\n}\n\n/**\n * cms datatype of video closed captions binary reference\n */\nexport interface IVideoClosedCaptionBinaryReference {\n    /// <summary>Gets the locale.</summary>\n    locale: string;\n\n    /// <summary>Gets the URL used on the clients to play the video.</summary>\n    clientHref: string;\n}\n\n/**\n * cms datatype of video closed captions binary reference\n */\nexport interface IAudioBinaryReference {\n    /// <summary>Gets the locale.</summary>\n    locale: string;\n\n    /// <summary>Gets the audio type.</summary>\n    audioType: string;\n\n    /// <summary>Gets the URL used on the clients to play the video.</summary>\n    clientHref: string;\n}\n\n/**\n * IVideoMetadata\n * @description - The data contract interface used for storing references to video metadata.\n */\nexport interface IVideoMetadata {\n    playerName?: string;\n    videoId?: string;\n    title?: string;\n    description?: string;\n    duration?: number;\n    posterframeUrl?: string;\n    shareUrl?: string;\n    videoFiles?: IVideoFile[];\n    externalPlayerUrl?: string;\n    externalSourceId?: string;\n    interactiveTriggersEnabled?: boolean;\n    interactiveTriggersUrl?: string;\n    minimumAge?: number;\n    videoBinaryReferences?: IBinaryReference[];\n    ccFiles?: ICCFile[];\n    audioTracks?: IAudioTrack[];\n}\n\n/**\n * @description - The data contract interface used for storing references to video files.\n */\nexport interface IVideoFile {\n    url: string;\n    mediaType: MediaTypes;\n    quality: MediaQuality;\n    width?: number;\n    height?: number;\n    formatCode?: string;\n}\n\n/**\n * cms datatype of BinaryReference\n */\nexport interface IBinaryReference {\n    format?: string;\n    bitrate?: number;\n    clientHref?: string;\n    height?: number;\n    width?: number;\n    alias?: string;\n    contentType?: string;\n    description?: string;\n    extension?: string;\n    sizeInBytes?: number;\n    sourceHref?: string;\n    href?: string;\n    locale?: string;\n    $type?: string;\n    audioType?: string;\n}"]}