{"version":3,"file":"player-constants.js","sourceRoot":"./src/","sources":["videoplayer/components/data/player-constants.ts"],"names":[],"mappings":"AAIA,MAAM,CAAC,MAAM,eAAe,GAAG;IAC3B,aAAa,EAAE,GAAG;IAClB,wBAAwB,EAAE,CAAC;IAC3B,uBAAuB,EAAE,CAAC;IAC1B,0BAA0B,EAAE,IAAI;IAChC,8BAA8B,EAAE,GAAG;IACnC,gBAAgB,EAAE,EAAE;IACpB,oBAAoB,EAAE,aAAa;IACnC,qBAAqB,EAAE,cAAc;IACrC,oBAAoB,EAAE,kBAAkB;IACxC,sBAAsB,EAAE,mBAAmB;IAC3C,0BAA0B,EAAE,eAAe;IAC3C,8BAA8B,EAAE,iBAAiB;IACjD,2BAA2B,EAAE,0BAA0B;IACvD,kBAAkB,EAAE,IAAI;IACxB,mBAAmB,EAAE,GAAG;IACxB,aAAa,EAAE,WAAW;IAC1B,YAAY,EAAE,UAAU;IACxB,6BAA6B,EAAG,YAAY;IAC5C,WAAW,EAAE,QAAQ;IACrB,aAAa,EAAE,QAAQ;CAC1B,CAAC;AAKF,MAAM,CAAC,MAAM,gBAAgB,GAAG;IAC5B,oBAAoB,EAAE,iBAAiB;IACvC,SAAS,EAAE,WAAW;CACzB,CAAC;AAEF,MAAM,CAAC,MAAM,cAAc,GAAG;IAC1B,WAAW,EAAE,cAAc;IAC3B,aAAa,EAAE,eAAe;IAC9B,qBAAqB,EAAE,aAAa;IACpC,aAAa,EAAE,gBAAgB;IAC/B,OAAO,EAAE,SAAS;IAClB,KAAK,EAAE,OAAO;IACd,QAAQ,EAAE,UAAU;IACpB,OAAO,EAAE,SAAS;CACrB,CAAC;AAEF,MAAM,CAAC,MAAM,WAAW,GAAG,CAAC,OAAO;IAC/B,SAAS;IACT,gBAAgB;IAChB,SAAS;IACT,OAAO;IACP,OAAO;IACP,YAAY;IACZ,gBAAgB;IAChB,WAAW;IACX,OAAO;IACP,MAAM;IACN,SAAS;IACT,UAAU;IACV,YAAY;IACZ,kBAAkB;IAClB,QAAQ;IACR,SAAS;IACT,SAAS;IACT,SAAS;IACT,YAAY;IACZ,cAAc;IACd,SAAS,CAAC,CAAC;AA6Df,MAAM,CAAN,IAAY,eAaX;AAbD,WAAY,eAAe;IAEvB,kGAAgC,CAAA;IAGhC,kFAAwB,CAAA;IACxB,kFAAwB,CAAA;IACxB,gFAAuB,CAAA;IACvB,wGAAmC,CAAA;IACnC,kFAAwB,CAAA;IAGxB,0FAA4B,CAAA;AAChC,CAAC,EAbW,eAAe,KAAf,eAAe,QAa1B","sourcesContent":["\n/**\n * @description - Player constants\n */\nexport const PlayerConstants = {\n    defaultVolume: 0.8,\n    defaultVolumeSliderSteps: 5,\n    defaultVideoSliderSteps: 1,\n    defaultControlPanelTimeout: 6500,\n    defaultPositionUpdateThreshold: 0.1,\n    defaultMaskLevel: 40,\n    defaultPlayGlyphIcon: 'fas fa-play',\n    defaultPauseGlyphIcon: 'fas fa-pause',\n    defaultMuteGlyphIcon: 'fas fa-volume-up',\n    defaultUnMuteGlyphIcon: 'fas fa-volume-off',\n    defaultFullScreenGlyphIcon: 'fas fa-expand',\n    defaultExitFullScreenGlyphIcon: 'fas fa-compress',\n    closedCaptionGlyphClassName: 'fas fa-closed-captioning',\n    thumbnailFullWidth: 1110,\n    thumbnailFullHeight: 624,\n    ccLangPrefKey: 'vidccpref',\n    seekBarLabel: 'Seek bar',\n    regxForAgeGateInputValidation : /^[0-9\\b]+$/,\n    mutePrefKey: 'vidmut',\n    volumePrefKey: 'vidvol'\n};\n\n/**\n * @description - names used for video and player html elements\n */\nexport const VideoPlayerNames = {\n    videoplayerContainer: 'msc-videoplayer',\n    mediaType: 'video/mp4'\n};\n\nexport const MenuCategories = {\n    AudioTracks: 'audio-tracks',\n    ClosedCaption: 'close-caption',\n    ClosedCaptionSettings: 'cc-settings',\n    PlaybackSpeed: 'playback-speed',\n    Quality: 'quality',\n    Share: 'share',\n    Download: 'download',\n    Options: 'options'\n};\n\nexport const MediaEvents = ['abort',\n    'canplay',\n    'canplaythrough',\n    'emptied',\n    'ended',\n    'error',\n    'loadeddata',\n    'loadedmetadata',\n    'loadstart',\n    'pause',\n    'play',\n    'playing',\n    'progress',\n    'ratechange',\n    'readystatechange',\n    'seeked',\n    'seeking',\n    'stalled',\n    'suspend',\n    'timeupdate',\n    'volumechange',\n    'waiting'];\n\nexport interface IPlayPosition {\n    /**\n     * @name startTime\n     * @type {number}\n     * @description Start position of the buffer, in seconds.\n     *              For VoD this is usually 0.\n     *              For live stream this is a position of beginning of DVR window, relative to the stream start time.\n     */\n    startTime: number;\n\n    /**\n     * @name endTime\n     * @type {number}\n     * @description End position of the buffer, in seconds.\n     *              For VoD this is normally a video duration.\n     *              For live stream this is normally a \"live\" position, relative to the stream start time.\n     */\n    endTime: number;\n\n    /**\n     * @name currentTime\n     * @type {number}\n     * @description Position currently on the screen, relative to the stream start time, in seconds.\n     */\ncurrentTime: number;\n    /**\n     * @name bufferedDuration\n     * @type {number}\n     * @description buffered duration of the video.\n     */\n    bufferedDuration: number;\n}\n\nexport interface ICurrentClosedCaptionsSettings {\n    preset: string;\n    text_font: string;\n    text_color: string;\n    text_opacity: string;\n    text_size: string;\n    text_edge_style: string;\n    text_background_color: string;\n    text_background_opacity: string;\n    window_color: string;\n    window_opacity: string;\n}\n\n/*\n* @name - PlayerEvents\n* @description - Player states.\n* @type {IPlayerState}\n*/\nexport type PlayerStates = 'init' | 'playerLoaded' | 'loading' |\n                        'ready'  | 'playing' | 'paused' | 'buffering' |\n                        'seeking' | 'ended' | 'error' | 'stopped';\n\n/*\n* @enum VideoErrorCodes\n* @description - Enum for supported media quality.\n*/\nexport enum VideoErrorCodes {\n    // Buffering.\n    BufferingFirstByteTimeout = 2000,\n\n    // Media element errors.\n    MediaErrorAborted = 2100,\n    MediaErrorNetwork = 2101,\n    MediaErrorDecode = 2102,\n    MediaErrorSourceNotSupported = 2103,\n    MediaErrorUnknown = 2104,\n\n    // Media selection.\n    MediaSelectionNoMedia = 2200,\n}\n\n/*\n* @interface IVideoErrorData\n* @description - The data contract interface used for storing references to video error data.\n*/\nexport interface IVideoErrorData {\n    errorCode: VideoErrorCodes;\n    message?: string;\n}\n\n/*\n* @interface IVideoErrorMessageData\n* @description - The data contract interface used for supplying content to an error message.\n* @export\n*/\nexport interface IVideoErrorMessageData {\n    title?: string;\n    message?: string;\n}\n\n/**\n * @interface - IPlayerMenuItem\n * @interfacedesc - The IPlayerMenuItem interface that defines the data structure used to store menu item information.\n * @export\n */\nexport interface IPlayerMenuItem {\n    id: string;\n    label: string;\n    className?: string;\n    language?: string;\n    data?: string;\n    image?: string;\n    itemCount?: number;\n    itemIndex?: number;\n    imageAlt?: string;\n    glyph?: string;\n    selected?: boolean;\n    selectable?: boolean;\n    hasMouseHoverEvents?: boolean;\n    persistOnClick?: boolean;\n    isBackButton?: boolean;\n    ariaLabel?: string;\n    subMenu?: IPlayerMenu;\n    hasFocus?: boolean;\n}\n\n/**\n * @interface - IPlayerMenu\n * @interfacedesc - The IPlayerMenu interface that defines the data structure used to store menu information.\n * @export\n */\nexport interface IPlayerMenu {\n    id: string;\n    category: string;\n    items: IPlayerMenuItem[];\n    label?: string;\n    glyph?: string;\n    cssClass?: string;\n    hideBackButton?: boolean;\n}\n\nexport interface IPlayerMenuItemClickNotification {\n    category: string;\n    id: string;\n    data?: string;\n}\n"]}