{"version":3,"file":"menu.js","sourceRoot":"./src/","sources":["videoplayer/components/menu/menu.tsx"],"names":[],"mappings":"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","sourcesContent":["import * as React from 'react';\nimport MenuItem from '../menu-item/menu-item';\nimport { IMenuItemProps } from '../menu-item/menu-itemProps';\nimport { IMenuProps } from './menuProps';\n\n/**\n *\n * Menu React component for video player\n *\n */\nexport default class Menu extends React.Component<IMenuProps> {\n    private target: React.RefObject<HTMLDivElement> = React.createRef<HTMLDivElement>();\n\n    constructor(props: IMenuProps) {\n        super(props);\n        this.handleDocumentClick = this.handleDocumentClick.bind(this);\n        this._onKeyDown = this._onKeyDown.bind(this);\n        this._onKeyUp = this._onKeyUp.bind(this);\n    }\n\n    public componentDidMount(): void {\n        ['click', 'touchstart'].forEach((event: string) => {\n           window && window.addEventListener(event, this.handleDocumentClick, true);\n        });\n    }\n\n    public componentWillUnmount(): void {\n        ['click', 'touchstart'].forEach((event: string) => {\n           window && window.removeEventListener(event, this.handleDocumentClick, true);\n        });\n    }\n\n    public getMenuWidth(): number {\n        return this.target.current!.offsetWidth;\n    }\n\n    public shouldComponentUpdate(nextProps: IMenuProps): boolean {\n        let shouldRender = false;\n        if(nextProps.playerMenu !== this.props.playerMenu) {\n            shouldRender = true;\n        }\n        return shouldRender;\n    }\n\n    public render(): JSX.Element {\n        const {className, style } = this.props;\n        const menuItems: IMenuItemProps[] = this.props.playerMenu.items;\n        const count: number = menuItems.length;\n        return (\n            <div className={className} style={style} ref={this.target} data-category={this.props.playerMenu.category}>\n                <ul role='menu' className={`${className}__list`} onKeyDown={this._onKeyDown} onKeyUp={this._onKeyUp} >\n                    {menuItems.map (\n                        (menuItem: IMenuItemProps, index: number) => {\n                            return (\n                                <MenuItem\n                                    id={menuItem.id}\n                                    key={index}\n                                    label={menuItem.label}\n                                    className={`${className}__menuitem`}\n                                    language={menuItem.language}\n                                    data={menuItem.data}\n                                    isBackButton={menuItem.isBackButton}\n                                    image={menuItem.image}\n                                    imageAlt={menuItem.imageAlt}\n                                    itemCount={count}\n                                    itemIndex={index}\n                                    glyph={menuItem.glyph}\n                                    selected={menuItem.selected}\n                                    selectable={menuItem.selectable}\n                                    persistOnClick={menuItem.persistOnClick}\n                                    {...(menuItem.id.includes('cc-preset')) ? {}:{ariaLabel:menuItem.ariaLabel}}\n                                    subMenu={menuItem.subMenu}\n                                    hasMouseHoverEvents={menuItem.hasMouseHoverEvents}\n                                    hasChildren={menuItem.subMenu !== undefined && menuItem.subMenu.items && menuItem.subMenu.items.length > 0 ? true : false}\n                                    onClick={this.props.onMenuItemClick}\n                                    onFocus={this.props.onFocus}\n                                    onBlur={this.props.onBlur}\n                                    onKeyDown={this.props.onKeyDown}\n                                    onKeyUp={this.props.onKeyUp}\n                                    onMouseOver={this.props.onMouseOver}\n                                    onMouseOut={this.props.onMouseOut}\n                                    hasFocus={menuItem.hasFocus}\n                                />\n                            );}\n                        )\n                    }\n                </ul>\n            </div>\n        );\n    }\n\n    public handleDocumentClick(e: Event): void {\n        const target = e.target as HTMLElement;\n        if (this.target !== undefined && !(this.target.current !== null && (e.target === this.target.current || this.target.current.contains(target)))) {\n            this.props.onDocumentClick(e);\n        }\n    }\n\n    private _onKeyDown(event: React.KeyboardEvent<HTMLUListElement>): void {\n        this.props.onKeyDown!(event as unknown as Event);\n    }\n\n    private _onKeyUp(event: React.KeyboardEvent<HTMLUListElement>): void {\n        this.props.onKeyUp!(event as unknown as Event);\n    }\n\n}\n"]}