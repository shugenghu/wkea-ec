import { render } from 'enzyme';
import * as React from 'react';
import PlayPauseTrigger from './PlayPauseTrigger';
describe('PlayPauseTrigger', () => {
    it('renders trigger correctly without any props', () => {
        const playerPauseTrigger = render(React.createElement(PlayPauseTrigger, null));
        expect(playerPauseTrigger).toMatchSnapshot();
    });
});
describe('PlayPauseTrigger', () => {
    it('renders trigger correctly classname only', () => {
        const playerPauseTrigger = render(React.createElement(PlayPauseTrigger, { className: 'PlayPauseTrigger' }));
        expect(playerPauseTrigger).toMatchSnapshot();
    });
});
describe('PlayPauseTrigger', () => {
    it('renders trigger correctly with change handler', () => {
        const spyChange = jest.fn();
        const playerPauseTrigger = render(React.createElement(PlayPauseTrigger, { onChange: spyChange }));
        expect(playerPauseTrigger).toMatchSnapshot();
    });
});
describe('PlayPauseTrigger', () => {
    it('renders trigger correctly wtih classname, toggled, change handler', () => {
        const spyChange = jest.fn();
        const playerPauseTrigger = render(React.createElement(PlayPauseTrigger, { className: 'PlayPauseTrigger', toggled: true, onChange: spyChange }));
        expect(playerPauseTrigger).toMatchSnapshot();
    });
});
describe('PlayPauseTrigger', () => {
    it('renders trigger correctly wtih classname, aria-hidden, change handler', () => {
        const spyChange = jest.fn();
        const playerPauseTrigger = render(React.createElement(PlayPauseTrigger, { className: 'PlayPauseTrigger', "aria-hidden": true, onChange: spyChange }));
        expect(playerPauseTrigger).toMatchSnapshot();
    });
});
describe('PlayPauseTrigger', () => {
    it('renders trigger correctly wtih classname, toggled, aria-hidden, change handler', () => {
        const spyChange = jest.fn();
        const playerPauseTrigger = render(React.createElement(PlayPauseTrigger, { className: 'PlayPauseTrigger', toggled: true, "aria-hidden": true, onChange: spyChange }));
        expect(playerPauseTrigger).toMatchSnapshot();
    });
});
//# sourceMappingURL=PlayPauseTrigger.test-ssr.js.map