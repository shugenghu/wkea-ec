{"version":3,"file":"PlayPauseTrigger.js","sourceRoot":"./src/","sources":["videoplayer/components/play-pause-trigger/PlayPauseTrigger.tsx"],"names":[],"mappings":"AAAA,OAAO,EAAE,gBAAgB,EAAE,sBAAsB,EAAY,mBAAmB,EAAE,MAAM,sCAAsC,CAAC;AAC/H,OAAO,KAAK,KAAK,MAAM,OAAO,CAAC;AAC/B,OAAO,YAAY,MAAM,+BAA+B,CAAC;AACzD,OAAO,EAAE,qBAAqB,EAAE,MAAM,+BAA+B,CAAC;AAQtE,MAAM,CAAC,OAAO,OAAO,gBAAiB,SAAQ,KAAK,CAAC,aAAqC;IAQrF,YAAY,KAA6B;QACrC,KAAK,CAAC,KAAK,CAAC,CAAC;QAJT,YAAO,GAAuC,KAAK,CAAC,SAAS,EAAqB,CAAC;QACnF,aAAQ,GAAuC,KAAK,CAAC,SAAS,EAAqB,CAAC;QAIxF,IAAI,CAAC,OAAO,GAAG,gBAAgB,CAAC,OAAO,EAAE,IAAI,CAAC,KAAK,CAAC,gBAAiB,EAAE,EAAE,CAAC,CAAC;IAC/E,CAAC;IAEM,MAAM;QACT,MAAM,EAAE,SAAS,EAAE,aAAa,EAAE,cAAc,EAAE,KAAK,EAAE,GAAG,KAAK,EAAE,GAAG,IAAI,CAAC,KAAK,CAAC;QACjF,IAAI,CAAC,OAAO,CAAC,aAAa,CAAC,KAAK,GAAG,IAAI,CAAC,KAAK,CAAC,OAAO,CAAC,CAAC,CAAC,qBAAqB,CAAC,cAAc,CAAC,CAAC,CAAC,qBAAqB,CAAC,aAAa,CAAC;QACnI,MAAM,SAAS,GAAG,sBAAsB,CAAC,IAAI,CAAC,KAAK,CAAC,gBAAiB,EAAE,IAAI,CAAC,OAAO,CAAC,CAAC;QACrF,OAAO,CACH,6BAAK,SAAS,EAAE,GAAG,IAAI,CAAC,KAAK,CAAC,SAAS,aAAa,EAAE,OAAO,EAAE,IAAI,CAAC,KAAK,CAAC,QAAQ,EAAE,KAAK,EAAE,IAAI,CAAC,KAAK,CAAC,KAAK,EAAE,IAAI,EAAC,MAAM;YACpH,oBAAC,YAAY,kBAAC,SAAS,EAAE,IAAI,CAAC,KAAK,CAAC,SAAS,IAAM,KAAK;gBACpD,4DACgB,IAAI,CAAC,KAAK,CAAC,aAAa,EACpC,SAAS,EAAE,GAAG,IAAI,CAAC,KAAK,CAAC,SAAS,WAAW,EAC7C,GAAG,EAAE,IAAI,CAAC,OAAO,IACZ,SAAS,EAChB;gBACF,4DACgB,IAAI,CAAC,KAAK,CAAC,cAAc,EACrC,SAAS,EAAE,GAAG,IAAI,CAAC,KAAK,CAAC,SAAS,YAAY,EAC9C,GAAG,EAAE,IAAI,CAAC,QAAQ,IACb,SAAS,EAChB,CACS;YACf,oBAAC,mBAAmB,IAAC,OAAO,EAAE,aAAa,EAAE,MAAM,EAAE,IAAI,CAAC,OAAO;;gBAAI,IAAI,CAAC,KAAK,CAAC,aAAa,CAAuB;YACpH,oBAAC,mBAAmB,IAAC,OAAO,EAAE,aAAa,EAAE,MAAM,EAAE,IAAI,CAAC,QAAQ;;gBAAI,IAAI,CAAC,KAAK,CAAC,cAAc,CAAuB,CACpH,CACT,CAAC;IACN,CAAC;;AApCa,6BAAY,GAAoC;IAC1D,aAAa,EAAE,MAAM;IACrB,cAAc,EAAE,OAAO;CAC1B,CAAC","sourcesContent":["import { getPayloadObject, getTelemetryAttributes, IPayLoad, UncontrolledTooltip } from '@msdyn365-commerce-modules/utilities';\nimport * as React from 'react';\nimport ActionToggle from '../action-toggle/ActionToggle';\nimport { LocalizationConstants } from '../helper/localization-helper';\nimport { IPlayPauseTriggerProps } from './PlayPauseTrigger.props';\n\n/**\n *\n * PlayPauseTrigger React component for video player\n *\n */\nexport default class PlayPauseTrigger extends React.PureComponent<IPlayPauseTriggerProps> {\n    public static defaultProps: Partial<IPlayPauseTriggerProps> = {\n        playAriaLabel: 'play',\n        pauseAriaLabel: 'pause',\n    };\n    private playRef: React.RefObject<HTMLButtonElement> = React.createRef<HTMLButtonElement>();\n    private pauseRef: React.RefObject<HTMLButtonElement> = React.createRef<HTMLButtonElement>();\n    private payLoad: IPayLoad;\n    constructor(props: IPlayPauseTriggerProps) {\n        super(props);\n        this.payLoad = getPayloadObject('click', this.props.telemetryContent!, '');\n    }\n\n    public render(): JSX.Element {\n        const { className, playAriaLabel, pauseAriaLabel, style, ...props } = this.props;\n        this.payLoad.contentAction.etext = this.props.toggled ? LocalizationConstants.pauseAriaLabel : LocalizationConstants.playAriaLabel;\n        const attribute = getTelemetryAttributes(this.props.telemetryContent!, this.payLoad);\n        return (\n            <div className={`${this.props.className}__container`} onClick={this.props.onChange} style={this.props.style} role='none'>\n                <ActionToggle className={this.props.className} {...props}>\n                    <button\n                        aria-label={this.props.playAriaLabel}\n                        className={`${this.props.className}__playbtn`}\n                        ref={this.playRef}\n                        {... attribute}\n                    />\n                    <button\n                        aria-label={this.props.pauseAriaLabel}\n                        className={`${this.props.className}__pausebtn`}\n                        ref={this.pauseRef}\n                        {... attribute}\n                    />\n                </ActionToggle>\n                <UncontrolledTooltip trigger={'hover focus'} target={this.playRef}> {this.props.playAriaLabel}</UncontrolledTooltip>\n                <UncontrolledTooltip trigger={'hover focus'} target={this.pauseRef}> {this.props.pauseAriaLabel}</UncontrolledTooltip>\n            </div>\n        );\n    }\n}\n"]}