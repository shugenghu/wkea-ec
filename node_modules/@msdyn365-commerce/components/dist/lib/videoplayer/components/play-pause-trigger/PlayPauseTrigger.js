import { getPayloadObject, getTelemetryAttributes, UncontrolledTooltip } from '@msdyn365-commerce-modules/utilities';
import * as React from 'react';
import ActionToggle from '../action-toggle/ActionToggle';
import { LocalizationConstants } from '../helper/localization-helper';
export default class PlayPauseTrigger extends React.PureComponent {
    constructor(props) {
        super(props);
        this.playRef = React.createRef();
        this.pauseRef = React.createRef();
        this.payLoad = getPayloadObject('click', this.props.telemetryContent, '');
    }
    render() {
        const { className, playAriaLabel, pauseAriaLabel, style, ...props } = this.props;
        this.payLoad.contentAction.etext = this.props.toggled ? LocalizationConstants.pauseAriaLabel : LocalizationConstants.playAriaLabel;
        const attribute = getTelemetryAttributes(this.props.telemetryContent, this.payLoad);
        return (React.createElement("div", { className: `${this.props.className}__container`, onClick: this.props.onChange, style: this.props.style, role: 'none' },
            React.createElement(ActionToggle, Object.assign({ className: this.props.className }, props),
                React.createElement("button", Object.assign({ "aria-label": this.props.playAriaLabel, className: `${this.props.className}__playbtn`, ref: this.playRef }, attribute)),
                React.createElement("button", Object.assign({ "aria-label": this.props.pauseAriaLabel, className: `${this.props.className}__pausebtn`, ref: this.pauseRef }, attribute))),
            React.createElement(UncontrolledTooltip, { trigger: 'hover focus', target: this.playRef },
                " ",
                this.props.playAriaLabel),
            React.createElement(UncontrolledTooltip, { trigger: 'hover focus', target: this.pauseRef },
                " ",
                this.props.pauseAriaLabel)));
    }
}
PlayPauseTrigger.defaultProps = {
    playAriaLabel: 'play',
    pauseAriaLabel: 'pause',
};
//# sourceMappingURL=PlayPauseTrigger.js.map