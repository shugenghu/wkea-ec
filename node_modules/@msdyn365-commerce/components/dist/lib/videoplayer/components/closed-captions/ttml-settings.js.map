{"version":3,"file":"ttml-settings.js","sourceRoot":"./src/","sources":["videoplayer/components/closed-captions/ttml-settings.ts"],"names":[],"mappings":"AAAA,OAAO,EAAC,MAAM,EAAmD,MAAM,wBAAwB,CAAC;AAMhG,MAAM,CAAC,MAAM,KAAK,GAAG,sCAAsC,CAAC;AA+B5D,MAAM,OAAO,YAAY;IAmKrB,YAAY,iBAAiC;QA3JtC,kBAAa,GAAW,2BAA2B,CAAC;QASpD,uBAAkB,GAAW,mCAAmC,CAAC;QASjE,2BAAsB,GAAW,qCAAqC,CAAC;QASvE,sBAAiB,GAAW,oCAAoC,CAAC;QAQjE,aAAQ,GAAW,EAAE,CAAC;QAQtB,mBAAc,GAAW,EAAE,CAAC;QAQ5B,6BAAwB,GAAW,CAAC,CAAC;QAQrC,sBAAiB,GAAW,CAAC,CAAC;QAQ9B,kBAAa,GAAW,IAAI,CAAC;QAQ7B,sBAAiB,GAAW,OAAO,CAAC;QAQpC,kCAA6B,GAA4B,IAAI,CAAC;QAQ9D,6BAAwB,GAA4B,IAAI,CAAC;QAQzD,mBAAc,GAAU,EAAE,IAAI,EAAE,EAAE,EAAE,OAAO,EAAE,EAAE,EAAE,CAAC;QAQlD,uBAAkB,GAA4B;YACjD,eAAe,EAAE,aAAa;YAC9B,KAAK,EAAE,SAAS;YAChB,SAAS,EAAE,KAAK;YAChB,OAAO,EAAE,MAAM;YACf,YAAY,EAAE,QAAQ;YACtB,MAAM,EAAE,MAAM;YACd,UAAU,EAAE,SAAS;YACrB,QAAQ,EAAE,IAAI;YACd,SAAS,EAAE,QAAQ;YACnB,UAAU,EAAE,QAAQ;YACpB,UAAU,EAAE,QAAQ;YACpB,OAAO,EAAE,GAAG;YACZ,MAAM,EAAE,MAAM;YACd,QAAQ,EAAE,QAAQ;YAClB,OAAO,EAAE,GAAG;YACZ,cAAc,EAAE,QAAQ;YACxB,SAAS,EAAE,OAAO;YAClB,cAAc,EAAE,MAAM;YACtB,WAAW,EAAE,MAAM;YACnB,WAAW,EAAE,QAAQ;YACrB,UAAU,EAAE,SAAS;YACrB,UAAU,EAAE,QAAQ;YACpB,WAAW,EAAE,MAAM;SACtB,CAAC;QAQK,YAAO,GAA4B,EAAE,CAAC;QAmBzC,IAAI,CAAC,OAAO,CAAC,OAAO,GAAG,kDAAkD,CAAC;QAC1E,IAAI,CAAC,OAAO,CAAC,cAAc,GAAG,SAAS,CAAC;QACxC,IAAI,CAAC,OAAO,CAAC,iBAAiB,GAAG,wBAAwB,CAAC;QAC1D,IAAI,CAAC,OAAO,CAAC,kBAAkB,GAAG,kDAAkD,CAAC;QACrF,IAAI,CAAC,OAAO,CAAC,qBAAqB,GAAG,mBAAmB,CAAC;QACzD,IAAI,CAAC,OAAO,CAAC,MAAM,GAAG,SAAS,CAAC;QAChC,IAAI,CAAC,OAAO,CAAC,OAAO,GAAG,sCAAsC,CAAC;QAC9D,IAAI,CAAC,OAAO,CAAC,SAAS,GAAG,kBAAkB,CAAC;QAG5C,IAAI,CAAC,OAAO,CAAC,SAAS,GAAG,kDAAkD,CAAC;QAC5E,IAAI,CAAC,OAAO,CAAC,SAAS,GAAG,mBAAmB,CAAC;QAC7C,IAAI,CAAC,OAAO,CAAC,KAAK,GAAG,wBAAwB,CAAC;QAE9C,IAAI,iBAAiB,EAAE;YACnB,MAAM,CAAC,IAAI,EAAE,iBAAiB,CAAC,CAAC;SACnC;IACL,CAAC;CACJ","sourcesContent":["import {extend, IClientDimension, IDictionaryStringString, IGrid} from '../utilities/utilities';\n\n// Timed Text Markup Language (TTML).\n// See http://www.w3.org/TR/ttml1/ for more details.\n\n// tslint:disable-next-line: no-http-string\nexport const xmlNS = 'http://www.w3.org/XML/1998/namespace';\n\n/**\n * @interface ITtmlSettings\n * @classdesc - The ITtmlSettings interface contract.\n */\nexport interface ITtmlSettings {\n    ttmlNamespace?: string;\n    ttmlStyleNamespace?: string;\n    ttmlParameterNamespace?: string;\n    ttmlMetaNamespace?: string;\n    idPrefix?: string;\n    mediaFrameRate?: number;\n    mediaFrameRateMultiplier?: number;\n    mediaSubFrameRate?: number;\n    mediaTickRate?: number;\n    supportedTimeBase?: string;\n    rootContainerRegionDimensions?: IClientDimension | null;\n    relatedMediaObjectRegion?: IClientDimension | null;\n    cellResolution?: IGrid;\n    defaultRegionStyle?: IDictionaryStringString;\n    fontMap?: IDictionaryStringString;\n    log?: Function;\n}\n\n/**\n *\n * The TtmlSettings class.\n * The TtmlSettings class is used to pass settings between the ttml parser, the ttml context, and the outside world.\n * It supplies default values which can be overridden via overrides passed to the constructor.\n */\nexport class TtmlSettings implements ITtmlSettings {\n    /**\n     * @name - ttmlNamespace\n     * @description - The ttml namespace to use.\n     * @public\n     * @type {string}\n     */\n    // tslint:disable-next-line: no-http-string\n    public ttmlNamespace: string = 'http://www.w3.org/ns/ttml';\n\n    /**\n     * @name - ttmlStyleNamespace\n     * @description - The ttml style namespace to use.\n     * @public\n     * @type {string}\n     */\n    // tslint:disable-next-line: no-http-string\n    public ttmlStyleNamespace: string = 'http://www.w3.org/ns/ttml#styling';\n\n    /**\n     * @name - ttmlParameterNamespace\n     * @description - The ttml parameter namespace to use.\n     * @public\n     * @type {string}\n     */\n    // tslint:disable-next-line: no-http-string\n    public ttmlParameterNamespace: string = 'http://www.w3.org/ns/ttml#parameter';\n\n    /**\n     * @name - ttmlMetaNamespace\n     * @description - The ttml metadata namespace to use.\n     * @public\n     * @type {string}\n     */\n    // tslint:disable-next-line: no-http-string\n    public ttmlMetaNamespace: string = 'http://www.w3.org/ns/ttml#metadata';\n\n    /**\n     * @name - idPrefix\n     * @description - The id prefix to use so ids copied from the ttml doc are unique.\n     * @public\n     * @type {string}\n     */\n    public idPrefix: string = '';\n\n    /**\n     * @name - mediaFrameRate\n     * @description - The media frame rate to use.\n     * @public\n     * @type {number}\n     */\n    public mediaFrameRate: number = 30;\n\n    /**\n     * @name - mediaFrameRateMultiplier\n     * @description - The media frame rate multiplier to use.\n     * @public\n     * @type {number}\n     */\n    public mediaFrameRateMultiplier: number = 1;\n\n    /**\n     * @name - mediaSubFrameRate\n     * @description - The media sub frame rate to use.\n     * @public\n     * @type {number}\n     */\n    public mediaSubFrameRate: number = 1;\n\n    /**\n     * @name - mediaTickRate\n     * @description - The media tick rate to use.\n     * @public\n     * @type {number}\n     */\n    public mediaTickRate: number = 1000;\n\n    /**\n     * @name - supportedTimeBase\n     * @description - The support timebase value.\n     * @public\n     * @type {string}\n     */\n    public supportedTimeBase: string = 'media';\n\n    /**\n     * @name - rootContainerRegionDimensions\n     * @description - The root container's dimensions.\n     * @public\n     * @type {IClientDimension}\n     */\n    public rootContainerRegionDimensions: IClientDimension | null = null;\n\n    /**\n     * @name - relatedMediaObjectRegion\n     * @description - The media object's dimensions.\n     * @public\n     * @type {IClientDimension}\n     */\n    public relatedMediaObjectRegion: IClientDimension | null = null;\n\n    /**\n     * @name - cellResolution\n     * @description - The default cell grid.\n     * @public\n     * @type {IGrid}\n     */\n    public cellResolution: IGrid = { rows: 15, columns: 32 };\n\n    /**\n     * @name - defaultRegionStyle\n     * @description - The default region style.\n     * @public\n     * @type {IDictionaryStringString}\n     */\n    public defaultRegionStyle: IDictionaryStringString = {\n        backgroundColor: 'transparent',\n        color: '#E8E9EA',\n        direction: 'ltr',\n        display: 'auto',\n        displayAlign: 'before',\n        extent: 'auto',\n        fontFamily: 'default',\n        fontSize: '1c',\n        fontStyle: 'normal',\n        fontWeight: 'normal',\n        lineHeight: 'normal',\n        opacity: '1',\n        origin: 'auto',\n        overflow: 'hidden',\n        padding: '0',\n        showBackground: 'always',\n        textAlign: 'start',\n        textDecoration: 'none',\n        textOutline: 'none',\n        unicodeBidi: 'normal',\n        visibility: 'visible',\n        wrapOption: 'normal',\n        writingMode: 'lrtb'\n    };\n\n    /**\n     * @name - fontMap\n     * @description - The default font map.\n     * @public\n     * @type {IDictionaryStringString}\n     */\n    public fontMap: IDictionaryStringString = {};\n\n    /**\n     * @name - log\n     * @description - The logging function to use in debug mode.\n     * @public\n     * @type {Function}\n     */\n    public log: Function | undefined;\n\n    /**\n     * @constructor\n     * @description - Constructor for the TtmlSettings class.\n     * @public\n     * @param {ITtmlSettings} [settingsOverrides] - Optional settings overrides for this TtmlSettings instance.\n     */\n    constructor(settingsOverrides?: ITtmlSettings) {\n        // These are from the Simple Delivery Profile\n        // Per spec recommendation that default be monospace sans serif.\n        this.fontMap.default = 'Lucida sans typewriter, Lucida console, Consolas';\n        this.fontMap.monospaceSerif = 'Courier';\n        this.fontMap.proportionalSerif = 'Times New Roman, Serif';\n        this.fontMap.monospaceSansSerif = 'Lucida sans typewriter, Lucida console, Consolas';\n        this.fontMap.proportionalSansSerif = 'Arial, Sans-serif';\n        this.fontMap.casual = 'Verdana';\n        this.fontMap.cursive = 'Zapf-Chancery, Segoe script, Cursive';\n        this.fontMap.smallCaps = 'Arial, Helvetica';\n\n        // These are others from the broader ttml (v1.0)\n        this.fontMap.monospace = 'Lucida sans typewriter, Lucida console, Consolas';\n        this.fontMap.sansSerif = 'Arial, Sans-serif';\n        this.fontMap.serif = 'Times New Roman, Serif';\n\n        if (settingsOverrides) {\n            extend(this, settingsOverrides);\n        }\n    }\n}"]}