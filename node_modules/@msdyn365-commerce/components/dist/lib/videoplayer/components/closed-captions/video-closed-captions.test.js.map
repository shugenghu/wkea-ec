{"version":3,"file":"video-closed-captions.test.js","sourceRoot":"./src/","sources":["videoplayer/components/closed-captions/video-closed-captions.test.tsx"],"names":[],"mappings":"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","sourcesContent":["import { mount } from 'enzyme';\nimport * as React from 'react';\nimport { ICurrentClosedCaptionsSettings } from '../data/player-constants';\nimport { PlayerUtility} from './../utilities/player-utility';\nimport { IClosedCaptionsProps } from './ClosedCaptionsProps';\nimport ClosedCaptions from './video-closed-captions';\nimport { closedCaptionsSettingDefaults } from './video-closed-captions-settings';\n\ndescribe('Check closedCaptions loaded or not',() => {\n    it('closedCaptions componentDidMount to not throw an error', () => {\n\n        const mockErrorFunction = jest.fn();\n        const closedCaptionClickFunction = jest.fn();\n        const closedCaptonsSetting: ICurrentClosedCaptionsSettings = {\n            preset: closedCaptionsSettingDefaults.preset,\n            text_font: closedCaptionsSettingDefaults.text_font,\n            text_color: closedCaptionsSettingDefaults.text_color,\n            text_opacity: closedCaptionsSettingDefaults.text_opacity,\n            text_size: closedCaptionsSettingDefaults.text_size,\n            text_edge_style: closedCaptionsSettingDefaults.text_edge_style,\n            text_background_color: closedCaptionsSettingDefaults.text_background_color,\n            text_background_opacity: closedCaptionsSettingDefaults.text_background_opacity,\n            window_color: closedCaptionsSettingDefaults.window_color,\n            window_opacity: closedCaptionsSettingDefaults.window_opacity\n        };\n\n        const prevsProps: IClosedCaptionsProps = {\n            className: 'closedCaption',\n            currentTime: 10,\n            currentClosedCaptionsSettings: closedCaptonsSetting,\n            showClosedCaptions: true,\n            ccLanguage: 'off',\n            ccURL: '',\n            errorCallback: mockErrorFunction,\n            isVideoControlVisible: true,\n            onClosedCaptionClick: closedCaptionClickFunction\n        };\n\n        const wrapper = mount(\n            <ClosedCaptions\n                className='closedCaption'\n                currentTime={10}\n                currentClosedCaptionsSettings={closedCaptonsSetting}\n                showClosedCaptions={true}\n                ccLanguage='en-us'\n                ccURL='https://ppe-video-cms-mr-microsoft-com.akamaized.net/cms/api/fabrikam/videofiledata/MAfjDu-enus?ver=d9e5'\n                errorCallback={mockErrorFunction}\n                isVideoControlVisible={true}\n                onClosedCaptionClick={closedCaptionClickFunction}\n            />,\n            { attachTo: document.body.firstElementChild as HTMLElement }\n        );\n        const closedCaptions = wrapper.instance() as ClosedCaptions;\n        expect(() => { closedCaptions;}).not.toThrow();\n        expect(() => { closedCaptions.componentDidMount();}).not.toThrow();\n        expect(() => { closedCaptions.componentWillUnmount();}).not.toThrow();\n        expect(() => { closedCaptions.componentDidUpdate(prevsProps);}).not.toThrow();\n        wrapper.unmount();\n    });\n\n    it('closedCaptions componentDidMount to not throw an error if ccLanguage is off', () => {\n\n        const mockErrorFunction = jest.fn();\n        const closedCaptionClickFunction = jest.fn();\n        const closedCaptonsSetting: ICurrentClosedCaptionsSettings = {\n            preset: closedCaptionsSettingDefaults.preset,\n            text_font: closedCaptionsSettingDefaults.text_font,\n            text_color: closedCaptionsSettingDefaults.text_color,\n            text_opacity: closedCaptionsSettingDefaults.text_opacity,\n            text_size: closedCaptionsSettingDefaults.text_size,\n            text_edge_style: closedCaptionsSettingDefaults.text_edge_style,\n            text_background_color: closedCaptionsSettingDefaults.text_background_color,\n            text_background_opacity: closedCaptionsSettingDefaults.text_background_opacity,\n            window_color: closedCaptionsSettingDefaults.window_color,\n            window_opacity: closedCaptionsSettingDefaults.window_opacity\n        };\n\n        const prevsProps: IClosedCaptionsProps = {\n            className: 'closedCaption',\n            currentTime: 10,\n            currentClosedCaptionsSettings: closedCaptonsSetting,\n            showClosedCaptions: true,\n            ccLanguage: 'off',\n            ccURL: '',\n            errorCallback: mockErrorFunction,\n            isVideoControlVisible: true,\n            onClosedCaptionClick: closedCaptionClickFunction\n        };\n\n        const wrapper = mount(\n            <ClosedCaptions\n                className='closedCaption'\n                currentTime={10}\n                currentClosedCaptionsSettings={closedCaptonsSetting}\n                showClosedCaptions={true}\n                ccLanguage='off'\n                ccURL=''\n                errorCallback={mockErrorFunction}\n                isVideoControlVisible={true}\n                onClosedCaptionClick={closedCaptionClickFunction}\n            />,\n            { attachTo: document.body.firstElementChild as HTMLElement }\n        );\n        const closedCaptions = wrapper.instance() as ClosedCaptions;\n        expect(() => { closedCaptions;}).not.toThrow();\n        expect(() => { closedCaptions.componentDidMount();}).not.toThrow();\n        expect(() => { closedCaptions.componentWillUnmount();}).not.toThrow();\n        expect(() => { closedCaptions.componentDidUpdate(prevsProps);}).not.toThrow();\n        wrapper.unmount();\n    });\n\n    // tslint:disable-next-line: no-any\n    it('closedCaptions componentDidMount to not throw an error', (done: any) => {\n\n        const mockErrorFunction = jest.fn();\n        const closedCaptionClickFunction = jest.fn();\n        const closedCaptonsSetting: ICurrentClosedCaptionsSettings = {\n            preset: closedCaptionsSettingDefaults.preset,\n            text_font: closedCaptionsSettingDefaults.text_font,\n            text_color: closedCaptionsSettingDefaults.text_color,\n            text_opacity: closedCaptionsSettingDefaults.text_opacity,\n            text_size: closedCaptionsSettingDefaults.text_size,\n            text_edge_style: closedCaptionsSettingDefaults.text_edge_style,\n            text_background_color: closedCaptionsSettingDefaults.text_background_color,\n            text_background_opacity: closedCaptionsSettingDefaults.text_background_opacity,\n            window_color: closedCaptionsSettingDefaults.window_color,\n            window_opacity: closedCaptionsSettingDefaults.window_opacity\n        };\n\n        const prevsProps: IClosedCaptionsProps = {\n            className: 'closedCaption',\n            currentTime: 10,\n            currentClosedCaptionsSettings: closedCaptonsSetting,\n            showClosedCaptions: true,\n            ccLanguage: 'off',\n            ccURL: '',\n            errorCallback: mockErrorFunction,\n            isVideoControlVisible: true,\n            onClosedCaptionClick: closedCaptionClickFunction\n        };\n\n        // tslint:disable-next-line: max-line-length one-variable-per-declaration\n        const expectedXML = `<?xml version=\"1.0\" encoding=\"utf-8\"?><tt xml:lang=\"en-us\" xmlns=\"http://www.w3.org/2006/10/ttaf1\"><head><metadata><ttm:title xmlns:ttm='http://www.w3.org/2006/10/ttaf1#metadata' /><ttm:desc xmlns:ttm='http://www.w3.org/2006/10/ttaf1#metadata' /><ttm:copyright xmlns:ttm='http://www.w3.org/2006/10/ttaf1#metadata' /></metadata><styling><style xml:id='backgroundStyle' ttaf1:fontFamily='proportionalSansSerif' ttaf1:fontSize='22px' ttaf1:textAlign='center' ttaf1:origin='2.5% 80.0%' ttaf1:extent='95% 20%' ttaf1:backgroundColor='rgba(0,0,0,100)' ttaf1:displayAlign='center' xmlns:ttaf1='http://www.w3.org/2006/10/ttaf1#styling' /><ttaf1:style xml:id='captionAreaStyle' ttaf1:style='backgroundStyle' ttaf1Styling:color='rgba(255,255,255,255)' ttaf1Styling:backgroundColor='transparent' xmlns:ttaf1Styling='http://www.w3.org/2006/10/ttaf1#styling' xmlns:ttaf1='http://www.w3.org/2006/10/ttaf1' /></styling><layout><ttaf1:region xml:id='captionArea' ttaf1:style='captionAreaStyle' ttaf1Styling:zIndex='1' xmlns:ttaf1Styling='http://www.w3.org/2006/10/ttaf1#styling' xmlns:ttaf1='http://www.w3.org/2006/10/ttaf1' /><ttaf1:region xml:id='background' ttaf1:style='backgroundStyle' ttaf1Styling:zIndex='0' xmlns:ttaf1Styling='http://www.w3.org/2006/10/ttaf1#styling' xmlns:ttaf1='http://www.w3.org/2006/10/ttaf1' /></layout></head><body><div><p begin=\"00:00:00.030\" end=\"00:00:02.270\" region=\"captionArea\">German - This is sample closed caption - 1</p><p begin=\"00:00:02.270\" end=\"00:00:04.000\" region=\"captionArea\">German - This is sample closed caption - 2</p><p begin=\"00:00:04.000\" end=\"00:00:06.000\" region=\"captionArea\">German - This is sample closed caption - 3</p><p begin=\"00:00:06.000\" end=\"00:00:08.000\" region=\"captionArea\">German - This is sample closed caption - 4</p><p begin=\"00:00:08.000\" end=\"00:00:10.000\" region=\"captionArea\">German - This is sample closed caption - 5</p><p begin=\"00:00:10.000\" end=\"00:00:12.000\" region=\"captionArea\">German - This is sample closed caption - 6</p><p begin=\"00:00:14.030\" end=\"00:00:16.270\" region=\"captionArea\">German - This is sample closed caption - 7</p><p begin=\"00:00:16.270\" end=\"00:00:18.000\" region=\"captionArea\">German - This is sample closed caption - 8</p><p begin=\"00:00:18.000\" end=\"00:00:20.000\" region=\"captionArea\">German - This is sample closed caption - 9</p><p begin=\"00:00:20.000\" end=\"00:00:22.000\" region=\"captionArea\">German - This is sample closed caption - 10</p><p begin=\"00:00:22.000\" end=\"00:00:24.000\" region=\"captionArea\">German - This is sample closed caption - 11</p><p begin=\"00:00:24.000\" end=\"00:00:26.000\" region=\"captionArea\">German - This is sample closed caption - 12</p><p begin=\"00:00:26.030\" end=\"00:00:28.270\" region=\"captionArea\">German - This is sample closed caption - 13</p><p begin=\"00:00:28.270\" end=\"00:00:30.000\" region=\"captionArea\">German - This is sample closed caption - 14</p><p begin=\"00:00:30.000\" end=\"00:00:32.000\" region=\"captionArea\">German - This is sample closed caption - 15</p><p begin=\"00:00:32.000\" end=\"00:00:34.000\" region=\"captionArea\">German - This is sample closed caption - 16</p><p begin=\"00:00:34.000\" end=\"00:00:36.000\" region=\"captionArea\">German - This is sample closed caption - 17</p><p begin=\"00:00:36.000\" end=\"00:00:38.000\" region=\"captionArea\">German - This is sample closed caption - 18</p><p begin=\"00:00:40.030\" end=\"00:00:45.270\" region=\"captionArea\">German - This is sample closed caption - 19</p><p begin=\"00:00:45.270\" end=\"00:00:50.000\" region=\"captionArea\">German - This is sample closed caption - 20</p><p begin=\"00:00:55.000\" end=\"00:01:00.000\" region=\"captionArea\">German - This is sample closed caption - 21</p><p begin=\"00:01:00.000\" end=\"00:01:05.000\" region=\"captionArea\">German - This is sample closed caption - 22</p><p begin=\"00:01:05.000\" end=\"00:01:10.000\" region=\"captionArea\">German - This is sample closed caption - 23</p><p begin=\"00:01:10.000\" end=\"00:01:15.000\" region=\"captionArea\">German - This is sample closed caption - 24</p><p begin=\"00:01:15.000\" end=\"00:01:18.000\" region=\"captionArea\">German - End of Video</p></div></body></tt>`;\n\n        const mockajax = jest.fn((_href, callback) => {\n            callback(expectedXML);\n            done();\n        });\n\n        // mockajax.mockReturnValue(expectedXML);\n        PlayerUtility.ajax = mockajax.bind(PlayerUtility);\n\n        const wrapper = mount(\n            <ClosedCaptions\n                className='closedCaption'\n                currentTime={10}\n                currentClosedCaptionsSettings={closedCaptonsSetting}\n                showClosedCaptions={true}\n                ccLanguage='en-us'\n                ccURL='https://ppe-video-cms-mr-microsoft-com.akamaized.net/cms/api/fabrikam/videofiledata/MAfjDu-enus?ver=d9e5'\n                errorCallback={mockErrorFunction}\n                isVideoControlVisible={true}\n                onClosedCaptionClick={closedCaptionClickFunction}\n            />,\n            { attachTo: document.body.firstElementChild as HTMLElement }\n        );\n\n        const closedCaptions = wrapper.instance() as ClosedCaptions;\n        closedCaptions.applySettings();\n        closedCaptions.resetCaptions();\n        closedCaptions.updateCaptions(1000);\n        expect(() => { closedCaptions.componentDidUpdate(prevsProps);}).not.toThrow();\n\n        closedCaptions.applySettings();\n        closedCaptions.resetCaptions();\n        closedCaptions.updateCaptions(21.26);\n        expect(() => { closedCaptions;}).not.toThrow();\n        expect(() => { closedCaptions.componentDidUpdate(prevsProps);}).not.toThrow();\n\n        wrapper.unmount();\n    });\n});"]}