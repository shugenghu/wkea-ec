{"version":3,"file":"htmlExtensions.test.js","sourceRoot":"./src/","sources":["videoplayer/components/utilities/htmlExtensions.test.ts"],"names":[],"mappings":"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","sourcesContent":["import * as HTMLExtensions from './htmlExtensions';\n\ndescribe('HTMLExtensions.getText test', () => {\n    it('returns an elements textContent', () => {\n        const element = document.createElement('div');\n        const textNode = document.createTextNode('text yeah');\n        element.appendChild(textNode);\n        expect(HTMLExtensions.getText(element)).toBe('text yeah');\n    });\n\n    it('returns an empty string when there is no text inside an element', () => {\n        const element = document.createElement('div');\n        expect(HTMLExtensions.getText(element)).toBe('');\n    });\n\n    it('returns an empty string when an element is undefined', () => {\n        expect(HTMLExtensions.getText(undefined)).toBe('');\n    });\n});\n\ndescribe('HTMLExtensions.addClass test', () => {\n    it('Add a class to element', () => {\n        const element = document.createElement('div');\n        HTMLExtensions.addClass(element, 'testClass');\n        expect(element.className).toBe('testClass');\n\n    });\n\n    it('Add multiple classes to element', () => {\n        const element = document.createElement('div');\n        HTMLExtensions.addClass(element, 'testClass');\n        expect(element.className).toBe('testClass');\n\n        HTMLExtensions.addClass(element, 'testClass1');\n        expect(element.classList[0]).toBe('testClass');\n        expect(element.classList[1]).toBe('testClass1');\n    });\n\n    it('Add empty class to element', () => {\n        const element = document.createElement('div');\n        HTMLExtensions.addClass(element, '');\n        expect(element.className).toBe('');\n\n    });\n\n    it('Check class is added in case classList is null', () => {\n        const element = document.createElement('div');\n        Object.defineProperty(element, 'classList', {\n            get: () => { return null; },\n            configurable: true,\n        });\n        HTMLExtensions.addClass(element, 'testClass');\n        expect(element.className).toBe('testClass');\n\n    });\n\n    it('Add same class to element', () => {\n        const element = document.createElement('div');\n        HTMLExtensions.addClass(element, 'testClass');\n        expect(element.className).toBe('testClass');\n\n        HTMLExtensions.addClass(element, 'testClass');\n        expect(element.className).toBe('testClass');\n    });\n\n});\n\ndescribe('HTMLExtensions.hasClass test', () => {\n    it('Check element has that class', () => {\n        const element = document.createElement('div');\n        element.className = 'testClass';\n        expect(HTMLExtensions.hasClass(element, 'testClass')).toBe(true);\n\n    });\n\n    it('Check element doesnot has that class', () => {\n        const element = document.createElement('div');\n        element.className = 'testClass';\n        expect(HTMLExtensions.hasClass(element, 'testClass1')).toBe(false);\n\n    });\n\n    it('Add multiple classes to element and check again ', () => {\n        const element = document.createElement('div');\n        element.classList.add('testClass');\n        element.classList.add('testClass1');\n\n        expect(HTMLExtensions.hasClass(element, 'testClass1')).toBe(true);\n    });\n\n    it('Check empty class returns false', () => {\n        const element = document.createElement('div');\n        element.className = 'testClass';\n        expect(HTMLExtensions.hasClass(element, '')).toBe(false);\n\n    });\n\n});\n\ndescribe('HTMLExtensions.nodeListToArray test', () => {\n    it('Check attribute count', () => {\n        const element = document.createElement('div');\n        element.setAttribute('id','element1');\n        element.setAttribute('name', 'abc');\n        element.setAttribute('info', 'info1');\n        const nodes = HTMLExtensions.nodeListToArray(element.attributes);\n        expect(nodes.length).toBe(3);\n\n    });\n\n    it('Check after passing null it returns empty', () => {\n        const element = document.createElement('div');\n        const nodes = HTMLExtensions.nodeListToArray(element.attributes);\n        expect(nodes.length).toBe(0);\n\n    });\n\n    it('Check after passing null it returns empty', () => {\n        const element = null;\n        const nodes = HTMLExtensions.nodeListToArray(element!);\n        expect(nodes.length).toBe(0);\n\n    });\n\n});\n\ndescribe('HTMLExtensions.selectElements test', () => {\n    it('Check attribute count', () => {\n        const element = document.createElement('div');\n        const spanElement = document.createElement('span');\n        const brElement = document.createElement('br');\n        const divElement = document.createElement('div');\n        element.appendChild(spanElement);\n        element.appendChild(brElement);\n        element.appendChild(divElement);\n\n        const elements = HTMLExtensions.selectElements('span, br', element);\n        expect(elements.length).toBe(2);\n\n    });\n\n    it('Select div based upon class name ', () => {\n        const element = document.createElement('div');\n        const divElement = document.createElement('div');\n        divElement.className = 'test';\n        const divElement1 = document.createElement('div');\n        divElement1.className = 'test';\n        const divElement2 = document.createElement('div');\n        element.appendChild(divElement);\n        element.appendChild(divElement2);\n        element.appendChild(divElement1);\n\n        const elements = HTMLExtensions.selectElements('.test', element);\n        expect(elements.length).toBe(2);\n\n    });\n\n    it('Select div based upon id', () => {\n        const element = document.createElement('div');\n        const divElement = document.createElement('div');\n        divElement.id = 'test';\n        const divElement1 = document.createElement('div');\n        divElement1.id = 'test1';\n        const divElement2 = document.createElement('div');\n        element.appendChild(divElement);\n        element.appendChild(divElement2);\n        element.appendChild(divElement1);\n\n        const elements = HTMLExtensions.selectElements('#test', element);\n        expect(elements.length).toBe(1);\n\n    });\n\n    it('check empty result is returned if selector is empty', () => {\n        const element = document.createElement('div');\n        const divElement = document.createElement('div');\n        divElement.id = 'test';\n        const divElement1 = document.createElement('div');\n        divElement1.id = 'test1';\n        const divElement2 = document.createElement('div');\n        element.appendChild(divElement);\n        element.appendChild(divElement2);\n        element.appendChild(divElement1);\n\n        const elements = HTMLExtensions.selectElements('', element);\n        expect(elements.length).toBe(0);\n\n    });\n\n});\n\ndescribe('HTMLExtensions.css test', () => {\n    it('Add css to div and test', () => {\n        const element = document.createElement('div');\n        HTMLExtensions.css(element, 'display', 'none');\n        expect(HTMLExtensions.css(element, 'display')).toBe('none');\n\n    });\n\n    it('Apply css to null element and it should return null', () => {\n        const element = null;\n        HTMLExtensions.css(element!, 'display', 'none');\n        expect(HTMLExtensions.css(element!, 'display')).toBe(null);\n\n    });\n\n    it('Apply css to element & check', () => {\n        const element = document.createElement('div');\n        HTMLExtensions.css(element!, 'margin', '');\n        expect(HTMLExtensions.css(element!, 'margin')).toBe(undefined);\n\n    });\n\n});\n\ndescribe('HTMLExtensions.selectFirstElement test', () => {\n    it('Check it is returning the first element', () => {\n        const element = document.createElement('div');\n        const spanElement = document.createElement('span');\n        const brElement = document.createElement('br');\n        const divElement = document.createElement('div');\n        element.appendChild(spanElement);\n        element.appendChild(brElement);\n        element.appendChild(divElement);\n\n        const testElement = HTMLExtensions.selectFirstElement('span', element);\n        expect(testElement).not.toBe(null);\n\n    });\n\n    it('Check it is returning the first element', () => {\n        const element = document.createElement('div');\n        const spanElement = document.createElement('span');\n        const brElement = document.createElement('br');\n        const divElement = document.createElement('div');\n        element.appendChild(spanElement);\n        element.appendChild(brElement);\n        element.appendChild(divElement);\n\n        const testElement = HTMLExtensions.selectFirstElement('b', element);\n        expect(testElement).toBe(null);\n\n    });\n});"]}