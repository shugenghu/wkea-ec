export function format(formatSpecifier, ...parameters) {
    if (!formatSpecifier) {
        return '';
    }
    return formatSpecifier.replace(/{(\d+)}/g, (match, index) => {
        if (index >= parameters.length) {
            return match;
        }
        const value = parameters[index];
        if (typeof value !== 'number' && !value) {
            return '';
        }
        if (typeof value === 'string') {
            return value;
        }
        return value.toString();
    });
}
export function isNullOrWhiteSpace(value) {
    return (!value) || (typeof value !== 'string') || (!trim(value));
}
export function trim(value) {
    if (!value || (typeof value !== 'string')) {
        return value;
    }
    if (value.trim) {
        return value.trim();
    }
    return value.replace(/^\s+|\s+$/g, '');
}
export function startsWith(value, prefix, ignoreCase = true) {
    if (!value || !prefix) {
        return false;
    }
    if (ignoreCase) {
        value = value.toLocaleLowerCase();
        prefix = prefix.toLocaleLowerCase();
    }
    if ((value).startsWith) {
        return (value).startsWith(prefix);
    }
    return value.indexOf(prefix) === 0;
}
//# sourceMappingURL=stringExtensions.js.map