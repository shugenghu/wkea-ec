{"version":3,"file":"helper.test.js","sourceRoot":"./src/","sources":["videoplayer/components/helper/helper.test.ts"],"names":[],"mappings":"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","sourcesContent":["import { IPlayerProps } from '../../players/player/Player.props';\nimport { closedCaptionsSettingDefaults } from '../closed-captions/video-closed-captions-settings';\nimport ClosedCaptionHelper from './closedCaptionHelper';\nimport LocalizationHelper, { LocalizationConstants } from './localization-helper';\nimport PlayerHelper from './playerHelper';\n\ndescribe('PlayerHelper test cases', () => {\n    it('should call error function', () => {\n        const defaultProps: IPlayerProps = {\n            playerData: {\n                options: {\n                    autoplay: true,\n                    ageGate: false,\n                    mute: true,\n                    loop: false,\n                    playPauseTrigger: false,\n                    controls: true,\n                    hidePosterFrame: false\n                },\n                metaData: {\n                    playerName: 'videoPlayer',\n                    videoId: '',\n                    title: '',\n                    description: '',\n                    duration: 0,\n                    posterframeUrl: '',\n                    shareUrl: '',\n                    videoFiles: [],\n                    externalPlayerUrl: '',\n                    externalSourceId: '',\n                    videoBinaryReferences: [],\n                    ccFiles: []\n                }\n            },\n            playerResources: {\n                playAriaLabel: LocalizationConstants.playAriaLabel,\n                pauseAriaLabel: LocalizationConstants.pauseAriaLabel,\n                closeAriaLabel: LocalizationConstants.closeAriaLabel,\n                muteAriaLabel: LocalizationConstants.muteAriaLabel,\n                unMuteAriaLabel: LocalizationConstants.unMuteAriaLabel,\n                fullScreenAriaLabel: LocalizationConstants.fullScreenAriaLabel,\n                exitFullScreenAriaLabel: LocalizationConstants.exitFullScreenAriaLabel,\n                pausedAriaLabel: LocalizationConstants.pausedAriaLabel,\n                playingAriaLabel: LocalizationConstants.playingAriaLabel,\n                seekBarLabel: LocalizationConstants.seekBarLabel,\n                videoTimeDurationLabel: LocalizationConstants.videoTimeDurationLabel,\n                closedCaptionLabel: LocalizationConstants.closedCaptionLabel\n            },\n        };\n\n        const localizationHelper = new LocalizationHelper(defaultProps.playerResources!);\n        const playerHelper = new PlayerHelper(defaultProps, localizationHelper);\n        playerHelper.getMetadata();\n        playerHelper.onErrorCallback('error', 'unhandled Error');\n    });\n\n    it('addIdPrefix should return childId if playerId is empty', () => {\n        const defaultProps: IPlayerProps = {\n            playerData: {\n                options: {\n                    autoplay: true,\n                    ageGate: false,\n                    mute: true,\n                    loop: false,\n                    playPauseTrigger: false,\n                    controls: true,\n                    hidePosterFrame: false\n                },\n                metaData: {\n                    playerName: 'videoPlayer',\n                    videoId: '',\n                    title: '',\n                    description: '',\n                    duration: 0,\n                    posterframeUrl: '',\n                    shareUrl: '',\n                    videoFiles: [],\n                    externalPlayerUrl: '',\n                    externalSourceId: '',\n                    videoBinaryReferences: []\n                }\n            },\n            playerResources: {\n                playAriaLabel: LocalizationConstants.playAriaLabel,\n                pauseAriaLabel: LocalizationConstants.pauseAriaLabel,\n                closeAriaLabel: LocalizationConstants.closeAriaLabel,\n                muteAriaLabel: LocalizationConstants.muteAriaLabel,\n                unMuteAriaLabel: LocalizationConstants.unMuteAriaLabel,\n                fullScreenAriaLabel: LocalizationConstants.fullScreenAriaLabel,\n                exitFullScreenAriaLabel: LocalizationConstants.exitFullScreenAriaLabel,\n                pausedAriaLabel: LocalizationConstants.pausedAriaLabel,\n                playingAriaLabel: LocalizationConstants.playingAriaLabel,\n                seekBarLabel: LocalizationConstants.seekBarLabel,\n                videoTimeDurationLabel: LocalizationConstants.videoTimeDurationLabel,\n                closedCaptionLabel: LocalizationConstants.closedCaptionLabel\n            }\n        };\n\n        const localizationHelper = new LocalizationHelper(defaultProps.playerResources!);\n        const playerHelper = new PlayerHelper(defaultProps, localizationHelper);\n        expect(playerHelper.addIdPrefix('childId')).toBe('childId');\n        expect(playerHelper.removeIdPrefix('childId')).toBe('childId');\n    });\n});\n\ndescribe('PlayerHelper test cases', () => {\n    it('should call error function', () => {\n        const defaultProps: IPlayerProps = {\n            playerData: {\n                options: {\n                    autoplay: true,\n                    ageGate: false,\n                    mute: true,\n                    loop: false,\n                    playPauseTrigger: false,\n                    controls: true,\n                    hidePosterFrame: false\n                },\n                metaData: {\n                    playerName: 'videoPlayer',\n                    videoId: '',\n                    title: '',\n                    description: '',\n                    duration: 0,\n                    posterframeUrl: '',\n                    shareUrl: '',\n                    videoFiles: [],\n                    externalPlayerUrl: '',\n                    externalSourceId: '',\n                    videoBinaryReferences: [],\n                    ccFiles: []\n                }\n            },\n            playerResources: {\n                playAriaLabel: LocalizationConstants.playAriaLabel,\n                pauseAriaLabel: LocalizationConstants.pauseAriaLabel,\n                closeAriaLabel: LocalizationConstants.closeAriaLabel,\n                muteAriaLabel: LocalizationConstants.muteAriaLabel,\n                unMuteAriaLabel: LocalizationConstants.unMuteAriaLabel,\n                fullScreenAriaLabel: LocalizationConstants.fullScreenAriaLabel,\n                exitFullScreenAriaLabel: LocalizationConstants.exitFullScreenAriaLabel,\n                pausedAriaLabel: LocalizationConstants.pausedAriaLabel,\n                playingAriaLabel: LocalizationConstants.playingAriaLabel,\n                seekBarLabel: LocalizationConstants.seekBarLabel,\n                videoTimeDurationLabel: LocalizationConstants.videoTimeDurationLabel,\n                closedCaptionLabel: LocalizationConstants.closedCaptionLabel\n            },\n        };\n\n        const localizationHelper = new LocalizationHelper(defaultProps.playerResources!);\n        localizationHelper.getLanguageCodeFromLocale('error');\n    });\n\n});\n\ndescribe('PlayerHelper test cases', () => {\n    it('should call error function', () => {\n        const defaultProps: IPlayerProps = {\n            playerData: {\n                options: {\n                    autoplay: true,\n                    ageGate: false,\n                    mute: true,\n                    loop: false,\n                    playPauseTrigger: false,\n                    controls: true,\n                    hidePosterFrame: false\n                },\n                metaData: {\n                    playerName: 'videoPlayer',\n                    videoId: '',\n                    title: '',\n                    description: '',\n                    duration: 0,\n                    posterframeUrl: '',\n                    shareUrl: '',\n                    videoFiles: [],\n                    externalPlayerUrl: '',\n                    externalSourceId: '',\n                    videoBinaryReferences: [],\n                    ccFiles: []\n                }\n            },\n            playerResources: {\n                playAriaLabel: LocalizationConstants.playAriaLabel,\n                pauseAriaLabel: LocalizationConstants.pauseAriaLabel,\n                closeAriaLabel: LocalizationConstants.closeAriaLabel,\n                muteAriaLabel: LocalizationConstants.muteAriaLabel,\n                unMuteAriaLabel: LocalizationConstants.unMuteAriaLabel,\n                fullScreenAriaLabel: LocalizationConstants.fullScreenAriaLabel,\n                exitFullScreenAriaLabel: LocalizationConstants.exitFullScreenAriaLabel,\n                pausedAriaLabel: LocalizationConstants.pausedAriaLabel,\n                playingAriaLabel: LocalizationConstants.playingAriaLabel,\n                seekBarLabel: LocalizationConstants.seekBarLabel,\n                videoTimeDurationLabel: LocalizationConstants.videoTimeDurationLabel,\n                closedCaptionLabel: LocalizationConstants.closedCaptionLabel\n            },\n        };\n\n        const localizationHelper = new LocalizationHelper(defaultProps.playerResources!);\n        const playerHelper = new PlayerHelper(defaultProps, localizationHelper);\n        const closedCaptionHelper = new ClosedCaptionHelper(defaultProps.playerData.metaData, playerHelper, localizationHelper);\n        expect(closedCaptionHelper.getUpdatedClosedCaptionSetting(closedCaptionsSettingDefaults, '', '')).toBe(closedCaptionsSettingDefaults);\n    });\n\n});"]}