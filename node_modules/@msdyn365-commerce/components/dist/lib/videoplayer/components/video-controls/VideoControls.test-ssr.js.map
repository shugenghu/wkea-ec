{"version":3,"file":"VideoControls.test-ssr.js","sourceRoot":"./src/","sources":["videoplayer/components/video-controls/VideoControls.test-ssr.tsx"],"names":[],"mappings":"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","sourcesContent":["import { render } from 'enzyme';\nimport * as React from 'react';\nimport { IPlayPosition } from '../data/player-constants';\nimport { LocalizationConstants } from '../helper/localization-helper';\nimport VideoControls from './VideoControls';\n\ndescribe('Video control Bar', () => {\n    it('renders Video control correctly without any props', () => {\n        const playPosition: IPlayPosition = {\n            currentTime: 0,\n            startTime: 0,\n            endTime: 0,\n            bufferedDuration: 0\n        };\n        const videoControlBar = render(\n            <VideoControls\n                className = ''\n                playing\n                onPlayClick={undefined}\n                isMuted\n                onMuteClick = {undefined}\n                onVolumeChange = {undefined}\n                onProgressChange = {undefined}\n                playPosition = {playPosition}\n                currentVolume = {60}\n                isInFullScreen\n                toggleFullScreen = {undefined}\n                resources={{\n                    playAriaLabel:LocalizationConstants.playAriaLabel,\n                    pauseAriaLabel:LocalizationConstants.pauseAriaLabel,\n                    muteAriaLabel:LocalizationConstants.muteAriaLabel,\n                    unMuteAriaLabel:LocalizationConstants.unMuteAriaLabel,\n                    fullScreenAriaLabel:LocalizationConstants.fullScreenAriaLabel,\n                    exitFullScreenAriaLabel:LocalizationConstants.exitFullScreenAriaLabel,\n                    seekBarLabel: LocalizationConstants.seekBarLabel,\n                    videoTimeDurationLabel: LocalizationConstants.videoTimeDurationLabel\n                }}\n            />\n        );\n        expect(videoControlBar).toMatchSnapshot();\n    });\n\n    it('renders Video control correctly with props', () => {\n        const spyPlayChange = jest.fn();\n        const spyMuteChange= jest.fn();\n        const spyVolumeChange= jest.fn();\n        const spyProgessBarChange= jest.fn();\n        const spyFullScreenChange= jest.fn();\n        const playPosition: IPlayPosition = {\n            currentTime: 0,\n            startTime: 0,\n            endTime: 0,\n            bufferedDuration: 0\n        };\n        const videoControlBar = render(\n            <VideoControls\n                className = ''\n                playing\n                onPlayClick={spyPlayChange}\n                isMuted\n                onMuteClick = {spyMuteChange}\n                onVolumeChange = {spyVolumeChange}\n                onProgressChange = {spyProgessBarChange}\n                playPosition = {playPosition}\n                currentVolume = {60}\n                isInFullScreen\n                toggleFullScreen = {spyFullScreenChange}\n                resources={{\n                    playAriaLabel:LocalizationConstants.playAriaLabel,\n                    pauseAriaLabel:LocalizationConstants.pauseAriaLabel,\n                    muteAriaLabel:LocalizationConstants.muteAriaLabel,\n                    unMuteAriaLabel:LocalizationConstants.unMuteAriaLabel,\n                    fullScreenAriaLabel:LocalizationConstants.fullScreenAriaLabel,\n                    exitFullScreenAriaLabel:LocalizationConstants.exitFullScreenAriaLabel,\n                    seekBarLabel: LocalizationConstants.seekBarLabel,\n                    videoTimeDurationLabel: LocalizationConstants.videoTimeDurationLabel\n                }}\n            />\n        );\n        expect(videoControlBar).toMatchSnapshot();\n    });\n\n    it('renders trigger correctly classname only', () => {\n        const playPosition: IPlayPosition = {\n            currentTime: 0,\n            startTime: 0,\n            endTime: 0,\n            bufferedDuration: 0\n        };\n        const videoControlBar = render(\n            <VideoControls\n                className = 'VideoControlBar'\n                playing\n                onPlayClick={undefined}\n                isMuted\n                onMuteClick = {undefined}\n                onVolumeChange = {undefined}\n                onProgressChange = {undefined}\n                playPosition = {playPosition}\n                currentVolume = {60}\n                isInFullScreen\n                toggleFullScreen = {undefined}\n                resources={{\n                    playAriaLabel:LocalizationConstants.playAriaLabel,\n                    pauseAriaLabel:LocalizationConstants.pauseAriaLabel,\n                    muteAriaLabel:LocalizationConstants.muteAriaLabel,\n                    unMuteAriaLabel:LocalizationConstants.unMuteAriaLabel,\n                    fullScreenAriaLabel:LocalizationConstants.fullScreenAriaLabel,\n                    exitFullScreenAriaLabel:LocalizationConstants.exitFullScreenAriaLabel,\n                    seekBarLabel: LocalizationConstants.seekBarLabel,\n                    videoTimeDurationLabel: LocalizationConstants.videoTimeDurationLabel\n                }}\n            />\n        );\n        expect(videoControlBar).toMatchSnapshot();\n    });\n\n    it('renders trigger correctly with change handler', () => {\n        const spyPlayChange = jest.fn();\n        const spyMuteChange= jest.fn();\n        const spyVolumeChange= jest.fn();\n        const spyProgessBarChange= jest.fn();\n        const spyFullScreenChange= jest.fn();\n        const playPosition: IPlayPosition = {\n            currentTime: 0,\n            startTime: 0,\n            endTime: 0,\n            bufferedDuration: 0\n        };\n        const videoControlBar = render(\n            <VideoControls\n                className = 'videoControlBar'\n                onPlayClick={spyPlayChange}\n                onMuteClick = {spyMuteChange}\n                onVolumeChange = {spyVolumeChange}\n                onProgressChange = {spyProgessBarChange}\n                playPosition = {playPosition}\n                currentVolume = {60}\n                toggleFullScreen = {spyFullScreenChange}\n                resources={{\n                    playAriaLabel:LocalizationConstants.playAriaLabel,\n                    pauseAriaLabel:LocalizationConstants.pauseAriaLabel,\n                    muteAriaLabel:LocalizationConstants.muteAriaLabel,\n                    unMuteAriaLabel:LocalizationConstants.unMuteAriaLabel,\n                    fullScreenAriaLabel:LocalizationConstants.fullScreenAriaLabel,\n                    exitFullScreenAriaLabel:LocalizationConstants.exitFullScreenAriaLabel,\n                    seekBarLabel: LocalizationConstants.seekBarLabel,\n                    videoTimeDurationLabel: LocalizationConstants.videoTimeDurationLabel\n                }}\n            />\n        );\n        expect(videoControlBar).toMatchSnapshot();\n    });\n\n});\n"]}