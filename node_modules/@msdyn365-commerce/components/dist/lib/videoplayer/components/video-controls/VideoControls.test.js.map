{"version":3,"file":"VideoControls.test.js","sourceRoot":"./src/","sources":["videoplayer/components/video-controls/VideoControls.test.tsx"],"names":[],"mappings":"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","sourcesContent":["import { mount } from 'enzyme';\nimport * as React from 'react';\nimport { closedCaptionsSettingDefaults } from '../closed-captions/video-closed-captions-settings';\nimport { ICurrentClosedCaptionsSettings, IPlayerMenu, IPlayPosition } from '../data/player-constants';\nimport { LocalizationConstants } from '../helper/localization-helper';\nimport { KeyCodes } from '../utilities/KeyCodes';\nimport VideoControls from './VideoControls';\nimport { IVideoControlsProps } from './VideoControls.props';\n\ndescribe('Check video control bar loaded or not',() => {\n    it('Video Control bar componentDidMount to not throw an error', () => {\n        const playPosition: IPlayPosition = {\n            currentTime: 0,\n            startTime: 0,\n            endTime: 0,\n            bufferedDuration: 0\n        };\n\n        const wrapper = mount(\n            <VideoControls\n                    className='VideoControlBar'\n                    playing\n                    onPlayClick={undefined}\n                    isMuted\n                    onMuteClick = {undefined}\n                    onVolumeChange = {undefined}\n                    onProgressChange = {undefined}\n                    playPosition = {playPosition}\n                    currentVolume = {0}\n                    isInFullScreen\n                    toggleFullScreen = {undefined}\n                    resources={{\n                        playAriaLabel: LocalizationConstants.playAriaLabel,\n                        pauseAriaLabel: LocalizationConstants.pauseAriaLabel,\n                        closeAriaLabel: LocalizationConstants.closeAriaLabel,\n                        muteAriaLabel: LocalizationConstants.muteAriaLabel,\n                        unMuteAriaLabel: LocalizationConstants.unMuteAriaLabel,\n                        fullScreenAriaLabel: LocalizationConstants.fullScreenAriaLabel,\n                        exitFullScreenAriaLabel: LocalizationConstants.exitFullScreenAriaLabel,\n                        pausedAriaLabel: LocalizationConstants.pauseAriaLabel,\n                        playingAriaLabel: LocalizationConstants.playingAriaLabel,\n                        seekBarLabel: LocalizationConstants.seekBarLabel,\n                        videoTimeDurationLabel: LocalizationConstants.videoTimeDurationLabel,\n                        closedCaptionLabel: LocalizationConstants.closedCaptionLabel\n                    }}\n            />,\n            { attachTo: document.body.firstElementChild as HTMLElement }\n        );\n        const videoControls = wrapper.instance() as VideoControls;\n        expect(() => { videoControls.componentDidMount();}).not.toThrow();\n        wrapper.unmount();\n    });\n    it('Video Control bar componentDidMount to not throw an error when resources & glyphIcons passed', () => {\n        const playPosition: IPlayPosition = {\n            currentTime: 0,\n            startTime: 0,\n            endTime: 0,\n            bufferedDuration: 0\n        };\n\n        const wrapper = mount(\n            <VideoControls\n                    className='VideoControlBar'\n                    playing\n                    onPlayClick={undefined}\n                    isMuted\n                    onMuteClick = {undefined}\n                    onVolumeChange = {undefined}\n                    onProgressChange = {undefined}\n                    playPosition = {playPosition}\n                    currentVolume = {0}\n                    isInFullScreen\n                    toggleFullScreen = {undefined}\n                    resources={{\n                        playAriaLabel: '',\n                        pauseAriaLabel: '',\n                        closeAriaLabel: '',\n                        muteAriaLabel: '',\n                        unMuteAriaLabel: '',\n                        fullScreenAriaLabel: '',\n                        exitFullScreenAriaLabel: '',\n                        pausedAriaLabel: '',\n                        playingAriaLabel: '',\n                        seekBarLabel: '',\n                        videoTimeDurationLabel: '',\n                        closedCaptionLabel: ''\n                    }}\n            />,\n            { attachTo: document.body.firstElementChild as HTMLElement }\n        );\n        const videoControls = wrapper.instance() as VideoControls;\n        expect(() => { videoControls.componentDidMount();}).not.toThrow();\n        wrapper.unmount();\n    });\n\n    // tslint:disable-next-line: max-func-body-length\n    it('Video Control bar check resize functionality', () => {\n        const playPosition: IPlayPosition = {\n            currentTime: 0,\n            startTime: 0,\n            endTime: 0,\n            bufferedDuration: 0\n        };\n\n        const closedCaptonsSetting: ICurrentClosedCaptionsSettings = {\n            preset: closedCaptionsSettingDefaults.preset,\n            text_font: closedCaptionsSettingDefaults.text_font,\n            text_color: closedCaptionsSettingDefaults.text_color,\n            text_opacity: closedCaptionsSettingDefaults.text_opacity,\n            text_size: closedCaptionsSettingDefaults.text_size,\n            text_edge_style: closedCaptionsSettingDefaults.text_edge_style,\n            text_background_color: closedCaptionsSettingDefaults.text_background_color,\n            text_background_opacity: closedCaptionsSettingDefaults.text_background_opacity,\n            window_color: closedCaptionsSettingDefaults.window_color,\n            window_opacity: closedCaptionsSettingDefaults.window_opacity\n        };\n\n        const playerMenu: IPlayerMenu = {\n            category: 'close-caption',\n            id: 'videoTestID-close-caption',\n            label: '',\n            items: [\n                {\n                    id: 'videoTestID-off',\n                    label: 'Off',\n                    selected: true,\n                    data: 'off',\n                    selectable: true,\n                    persistOnClick: true,\n                    ariaLabel: 'Off '\n                },\n                {\n                    id: 'videoTestID-en-us',\n                    label: 'English',\n                    language: 'en',\n                    data: 'en-us',\n                    selected: false,\n                    selectable: true,\n                    persistOnClick: true,\n                    ariaLabel: 'English '\n                },\n                {\n                    id: 'videoTestID-de-de',\n                    label: 'Deutsch',\n                    language: 'de',\n                    data: 'de-de',\n                    selected: false,\n                    selectable: true,\n                    persistOnClick: true,\n                    ariaLabel: 'Deutsch'\n                },\n                {\n                    id: 'videoTestID-appearance',\n                    label: 'Appearance',\n                    selected: false,\n                    selectable: false,\n                    subMenu: {\n                        id: 'videoTestID-cc-preset',\n                        label: 'Appearance',\n                        category: 'cc-settings',\n                        items: [\n                            {\n                                id: '',\n                                label: 'Appearance',\n                                ariaLabel: 'Appreance - go back to previous menu',\n                                selectable: false,\n                                selected: false,\n                                persistOnClick: false,\n                                isBackButton: true,\n                                hasMouseHoverEvents: true\n                            },\n                            {\n                                id: 'videoTestID-cc-preset-preset1',\n                                label: 'Preset 1 ',\n                                data: 'preset:preset1',\n                                selectable: true,\n                                selected: false,\n                                persistOnClick: true,\n                                ariaLabel: 'Close captions appearance : (Font:Proportional Sans Serif, Text color:White)',\n                                hasMouseHoverEvents: true\n                            },\n                            {\n                                id: 'videoTestID-cc-preset-preset2',\n                                label: 'Preset 2',\n                                data: 'preset:preset2',\n                                selectable: true,\n                                selected: false,\n                                persistOnClick: true,\n                                ariaLabel: 'Close captions appearance : (Font:Monospaced Serif, Text color:White)',\n                                hasMouseHoverEvents: true\n                            },\n                            {\n                                id: 'videoTestID-cc-preset-preset3',\n                                label: 'Preset 3',\n                                data: 'preset:preset3',\n                                selectable: true,\n                                selected: false,\n                                persistOnClick: true,\n                                ariaLabel: 'Close captions appearance : (Font:Proportional Sans Serif, Text color:Yellow)',\n                                hasMouseHoverEvents: true\n                            },\n                            {\n                                id: 'videoTestID-cc-preset-preset4',\n                                label: 'Preset 4',\n                                data: 'preset:preset4',\n                                selectable: true,\n                                selected: false,\n                                persistOnClick: true,\n                                ariaLabel: 'Close captions appearance : (Font:Proportional Sans Serif, Text color:Blue)',\n                                hasMouseHoverEvents: true\n                            },\n                            {\n                                id: 'videoTestID-cc-preset-preset5',\n                                label: 'Preset 5',\n                                data: 'preset:preset5',\n                                selectable: true,\n                                selected: false,\n                                persistOnClick: true,\n                                ariaLabel: 'Close captions appearance : (Font:Casual, Text color:White)',\n                                hasMouseHoverEvents: true\n                            },\n                            {\n                                id: 'videoTestID-cc-customize',\n                                label: 'Customize',\n                                hasMouseHoverEvents: true\n                            },\n                            {\n                                id: 'reset',\n                                label: 'Reset',\n                                data: 'reset',\n                                persistOnClick: true,\n                                hasMouseHoverEvents: true\n                            }]\n                        }\n                    }\n                ]\n            };\n        const wrapper = mount(\n            <VideoControls\n                    className='VideoControlBar'\n                    playing\n                    onPlayClick={undefined}\n                    isMuted\n                    onMuteClick = {undefined}\n                    onVolumeChange = {undefined}\n                    onProgressChange = {undefined}\n                    playPosition = {playPosition}\n                    currentVolume = {0}\n                    isInFullScreen\n                    closedCaptionMenu= {playerMenu}\n                    currentClosedCaptionsSetting={closedCaptonsSetting}\n                    toggleFullScreen = {undefined}\n                    resources={{\n                        playAriaLabel: LocalizationConstants.playAriaLabel,\n                        pauseAriaLabel: LocalizationConstants.pauseAriaLabel,\n                        closeAriaLabel: LocalizationConstants.closeAriaLabel,\n                        muteAriaLabel: LocalizationConstants.muteAriaLabel,\n                        unMuteAriaLabel: LocalizationConstants.unMuteAriaLabel,\n                        fullScreenAriaLabel: LocalizationConstants.fullScreenAriaLabel,\n                        exitFullScreenAriaLabel: LocalizationConstants.exitFullScreenAriaLabel,\n                        pausedAriaLabel: LocalizationConstants.pauseAriaLabel,\n                        playingAriaLabel: LocalizationConstants.playingAriaLabel,\n                        videoTimeDurationLabel: LocalizationConstants.videoTimeDurationLabel,\n                        closedCaptionLabel: LocalizationConstants.closedCaptionLabel\n                    }}\n            />,\n            { attachTo: document.body.firstElementChild as HTMLElement }\n        );\n        const videoControls = wrapper.instance() as VideoControls;\n        videoControls.setState({\n            showVolumeSlider: true,\n            showMenu: true\n        });\n\n        expect(() => { videoControls.componentDidMount();}).not.toThrow();\n        wrapper.unmount();\n    });\n});\n\ndescribe('Check Change Event gets Fired upon clicking', () => {\n    it('PlayPause Button work correctly when clicked', () => {\n        const spyPlayChange = jest.fn();\n        const playPosition: IPlayPosition = {\n            currentTime: 0,\n            startTime: 0,\n            endTime: 0,\n            bufferedDuration: 0\n        };\n\n        const wrapper = mount(\n            <VideoControls\n                    className='VideoControlBar'\n                    playing\n                    onPlayClick={spyPlayChange}\n                    isMuted\n                    onMuteClick = {undefined}\n                    onVolumeChange = {undefined}\n                    onProgressChange = {undefined}\n                    playPosition = {playPosition}\n                    currentVolume = {60}\n                    isInFullScreen\n                    toggleFullScreen = {undefined}\n                    resources={{\n                        playAriaLabel: LocalizationConstants.playAriaLabel,\n                        pauseAriaLabel: LocalizationConstants.pauseAriaLabel,\n                        closeAriaLabel: LocalizationConstants.closeAriaLabel,\n                        muteAriaLabel: LocalizationConstants.muteAriaLabel,\n                        unMuteAriaLabel: LocalizationConstants.unMuteAriaLabel,\n                        fullScreenAriaLabel: LocalizationConstants.fullScreenAriaLabel,\n                        exitFullScreenAriaLabel: LocalizationConstants.exitFullScreenAriaLabel,\n                        pausedAriaLabel: LocalizationConstants.pauseAriaLabel,\n                        playingAriaLabel: LocalizationConstants.playingAriaLabel,\n                        seekBarLabel: LocalizationConstants.seekBarLabel,\n                        videoTimeDurationLabel: LocalizationConstants.videoTimeDurationLabel,\n                        closedCaptionLabel: LocalizationConstants.closedCaptionLabel\n                    }}\n            />,\n            { attachTo: document.body.firstElementChild as HTMLElement }\n        );\n        const videoControlsBar = wrapper.instance() as VideoControls;\n        const buttons = document.querySelectorAll('button');\n        expect(buttons.length).toBe(6);\n        const play = buttons[0];\n        const pause = buttons[1];\n\n        // Verify expected initial state\n        expect(play.getAttribute('aria-hidden')).toBe('true');\n        expect(pause.getAttribute('aria-hidden')).toBe('false');\n        videoControlsBar.render();\n\n        // Test having focus and rerendering when button is clicked\n        play.click();\n        wrapper.update();\n        expect(spyPlayChange).toHaveBeenCalled();\n\n        wrapper.unmount();\n    });\n\n    it('Mute UnMute Button work correctly when clicked', () => {\n        const spyMuteChange= jest.fn();\n        const playPosition: IPlayPosition = {\n            currentTime: 0,\n            startTime: 0,\n            endTime: 0,\n            bufferedDuration: 0\n        };\n\n        const wrapper = mount(\n            <VideoControls\n                    className='VideoControlBar'\n                    playing\n                    onPlayClick={undefined}\n                    isMuted\n                    onMuteClick = {spyMuteChange}\n                    onVolumeChange = {undefined}\n                    onProgressChange = {undefined}\n                    playPosition = {playPosition}\n                    currentVolume = {60}\n                    isInFullScreen\n                    toggleFullScreen = {undefined}\n                    resources={{\n                        playAriaLabel: LocalizationConstants.playAriaLabel,\n                        pauseAriaLabel: LocalizationConstants.pauseAriaLabel,\n                        closeAriaLabel: LocalizationConstants.closeAriaLabel,\n                        muteAriaLabel: LocalizationConstants.muteAriaLabel,\n                        unMuteAriaLabel: LocalizationConstants.unMuteAriaLabel,\n                        fullScreenAriaLabel: LocalizationConstants.fullScreenAriaLabel,\n                        exitFullScreenAriaLabel: LocalizationConstants.exitFullScreenAriaLabel,\n                        pausedAriaLabel: LocalizationConstants.pauseAriaLabel,\n                        playingAriaLabel: LocalizationConstants.playingAriaLabel,\n                        seekBarLabel: LocalizationConstants.seekBarLabel,\n                        videoTimeDurationLabel: LocalizationConstants.videoTimeDurationLabel,\n                        closedCaptionLabel: LocalizationConstants.closedCaptionLabel\n                    }}\n            />,\n            { attachTo: document.body.firstElementChild as HTMLElement }\n        );\n        const videoControlsBar = wrapper.instance() as VideoControls;\n        const buttons = document.querySelectorAll('button');\n        expect(buttons.length).toBe(6);\n        const mute = buttons[2];\n        const unMute = buttons[3];\n\n        // Verify expected initial state\n        expect(mute.getAttribute('aria-hidden')).toBe('true');\n        expect(unMute.getAttribute('aria-hidden')).toBe('false');\n        videoControlsBar.render();\n\n        // Test having focus and rerendering when button is clicked\n        mute.click();\n        wrapper.update();\n        expect(spyMuteChange).toHaveBeenCalled();\n\n        wrapper.unmount();\n    });\n\n    jest.useFakeTimers();\n    it('Check Volume slider AutoHides', () => {\n        const spyMuteChange= jest.fn();\n        const playPosition: IPlayPosition = {\n            currentTime: 0,\n            startTime: 0,\n            endTime: 0,\n            bufferedDuration: 0\n        };\n\n        const wrapper = mount(\n            <VideoControls\n                    className='VideoControlBar'\n                    playing\n                    onPlayClick={undefined}\n                    isMuted\n                    onMuteClick = {spyMuteChange}\n                    onVolumeChange = {undefined}\n                    onProgressChange = {undefined}\n                    playPosition = {playPosition}\n                    currentVolume = {60}\n                    isInFullScreen\n                    toggleFullScreen = {undefined}\n                    resources={{\n                        playAriaLabel: LocalizationConstants.playAriaLabel,\n                        pauseAriaLabel: LocalizationConstants.pauseAriaLabel,\n                        closeAriaLabel: LocalizationConstants.closeAriaLabel,\n                        muteAriaLabel: LocalizationConstants.muteAriaLabel,\n                        unMuteAriaLabel: LocalizationConstants.unMuteAriaLabel,\n                        fullScreenAriaLabel: LocalizationConstants.fullScreenAriaLabel,\n                        exitFullScreenAriaLabel: LocalizationConstants.exitFullScreenAriaLabel,\n                        pausedAriaLabel: LocalizationConstants.pauseAriaLabel,\n                        playingAriaLabel: LocalizationConstants.playingAriaLabel,\n                        seekBarLabel: LocalizationConstants.seekBarLabel,\n                        videoTimeDurationLabel: LocalizationConstants.videoTimeDurationLabel,\n                        closedCaptionLabel: LocalizationConstants.closedCaptionLabel\n                    }}\n            />,\n            { attachTo: document.body.firstElementChild as HTMLElement }\n        );\n        const videoControlsBar = wrapper.instance() as VideoControls;\n\n        wrapper.find('div.action-toggle').at(1).simulate('mouseOver');\n        wrapper.update();\n\n        expect(videoControlsBar.state.showVolumeSlider).toBe(true);\n        expect(wrapper.find('div.msc-videoplayer__controls__volumeslider__container').hasClass('show')).toBe(true);\n        jest.runAllTimers();\n        expect(setTimeout).toHaveBeenLastCalledWith(expect.any(Function), 0);\n\n        setTimeout(() => {\n            expect(videoControlsBar.state.showVolumeSlider).toBe(false);\n            expect(wrapper.find('div.msc-videoplayer__controls__volumeslider__container').hasClass('hide')).toBe(true);\n        });\n\n        wrapper.unmount();\n    });\n\n    it('Check Volume slider shows if focus remains on volume button', () => {\n        const spyMuteChange= jest.fn();\n        // const volumeAutoHideTimeout: number = 2000;\n        const playPosition: IPlayPosition = {\n            currentTime: 0,\n            startTime: 0,\n            endTime: 0,\n            bufferedDuration: 0\n        };\n\n        const wrapper = mount(\n            <VideoControls\n                    className='VideoControlBar'\n                    playing\n                    onPlayClick={undefined}\n                    isMuted\n                    onMuteClick = {spyMuteChange}\n                    onVolumeChange = {undefined}\n                    onProgressChange = {undefined}\n                    playPosition = {playPosition}\n                    currentVolume = {60}\n                    isInFullScreen\n                    toggleFullScreen = {undefined}\n                    resources={{\n                        playAriaLabel: LocalizationConstants.playAriaLabel,\n                        pauseAriaLabel: LocalizationConstants.pauseAriaLabel,\n                        closeAriaLabel: LocalizationConstants.closeAriaLabel,\n                        muteAriaLabel: LocalizationConstants.muteAriaLabel,\n                        unMuteAriaLabel: LocalizationConstants.unMuteAriaLabel,\n                        fullScreenAriaLabel: LocalizationConstants.fullScreenAriaLabel,\n                        exitFullScreenAriaLabel: LocalizationConstants.exitFullScreenAriaLabel,\n                        pausedAriaLabel: LocalizationConstants.pauseAriaLabel,\n                        playingAriaLabel: LocalizationConstants.playingAriaLabel,\n                        seekBarLabel: LocalizationConstants.seekBarLabel,\n                        videoTimeDurationLabel: LocalizationConstants.videoTimeDurationLabel,\n                        closedCaptionLabel: LocalizationConstants.closedCaptionLabel\n                    }}\n            />,\n            { attachTo: document.body.firstElementChild as HTMLElement }\n        );\n        const videoControlsBar = wrapper.instance() as VideoControls;\n        const buttons = document.querySelectorAll('button');\n        expect(buttons.length).toBe(6);\n        const mute = buttons[2];\n        mute.focus();\n        wrapper.update();\n\n        expect(videoControlsBar.state.showVolumeSlider).toBe(true);\n        expect(wrapper.find('div.msc-videoplayer__controls__volumeslider__container').hasClass('show')).toBe(true);\n\n        // wrapper.find('div.msc-videoplayer__controls__volumeslider__container').simulate('mouseOver');\n        mute.focus();\n        wrapper.update();\n\n        expect(videoControlsBar.state.showVolumeSlider).toBe(true);\n        expect(wrapper.find('div.msc-videoplayer__controls__volumeslider__container').hasClass('show')).toBe(true);\n\n        // wrapper.find('div.msc-videoplayer__controls__volumeslider__container').simulate('mouseOver');\n        mute.focus();\n        wrapper.update();\n\n        expect(videoControlsBar.state.showVolumeSlider).toBe(true);\n        expect(wrapper.find('div.msc-videoplayer__controls__volumeslider__container').hasClass('show')).toBe(true);\n\n        wrapper.unmount();\n    });\n\n    it('Check Volume slider show up when focused', () => {\n        const spyMuteChange= jest.fn();\n        const volumeAutoHideTimeout: number = 2000;\n        const playPosition: IPlayPosition = {\n            currentTime: 0,\n            startTime: 0,\n            endTime: 0,\n            bufferedDuration: 0\n        };\n\n        const wrapper = mount(\n            <VideoControls\n                    className='VideoControlBar'\n                    playing\n                    onPlayClick={undefined}\n                    isMuted\n                    onMuteClick = {spyMuteChange}\n                    onVolumeChange = {undefined}\n                    onProgressChange = {undefined}\n                    playPosition = {playPosition}\n                    currentVolume = {60}\n                    isInFullScreen\n                    toggleFullScreen = {undefined}\n                    resources={{\n                        playAriaLabel: LocalizationConstants.playAriaLabel,\n                        pauseAriaLabel: LocalizationConstants.pauseAriaLabel,\n                        closeAriaLabel: LocalizationConstants.closeAriaLabel,\n                        muteAriaLabel: LocalizationConstants.muteAriaLabel,\n                        unMuteAriaLabel: LocalizationConstants.unMuteAriaLabel,\n                        fullScreenAriaLabel: LocalizationConstants.fullScreenAriaLabel,\n                        exitFullScreenAriaLabel: LocalizationConstants.exitFullScreenAriaLabel,\n                        pausedAriaLabel: LocalizationConstants.pauseAriaLabel,\n                        playingAriaLabel: LocalizationConstants.playingAriaLabel,\n                        seekBarLabel: LocalizationConstants.seekBarLabel,\n                        videoTimeDurationLabel: LocalizationConstants.videoTimeDurationLabel,\n                        closedCaptionLabel: LocalizationConstants.closedCaptionLabel\n                    }}\n            />,\n            { attachTo: document.body.firstElementChild as HTMLElement }\n        );\n        wrapper.instance() as VideoControls;\n        const buttons = document.querySelectorAll('button');\n        expect(buttons.length).toBe(6);\n        const mute = buttons[2];\n        const unMute = buttons[3];\n\n        // Verify expected initial state\n        expect(mute.getAttribute('aria-hidden')).toBe('true');\n        expect(unMute.getAttribute('aria-hidden')).toBe('false');\n\n        // Test having focus and rerendering when button is clicked\n        wrapper.find('div.action-toggle').at(1).simulate('focus');\n        wrapper.update();\n        expect(wrapper.find('div.msc-videoplayer__controls__volumeslider__container').hasClass('show')).toBe(true);\n        // expect(videoControlsBar.state.showVolumeSlider).toBe(true);\n        setTimeout(() => {\n            expect(wrapper.find('div.msc-videoplayer__controls__volumeslider__container').hasClass('hide')).toBe(true);\n        },         volumeAutoHideTimeout);\n        wrapper.unmount();\n    });\n\n    it('Check Volume slider show up when moveover', () => {\n        const spyMuteChange= jest.fn();\n        const volumeAutoHideTimeout: number = 2000;\n        const playPosition: IPlayPosition = {\n            currentTime: 0,\n            startTime: 0,\n            endTime: 0,\n            bufferedDuration: 0\n        };\n\n        const wrapper = mount(\n            <VideoControls\n                    className='VideoControlBar'\n                    playing\n                    onPlayClick={undefined}\n                    isMuted\n                    onMuteClick = {spyMuteChange}\n                    onVolumeChange = {undefined}\n                    onProgressChange = {undefined}\n                    playPosition = {playPosition}\n                    currentVolume = {60}\n                    isInFullScreen\n                    toggleFullScreen = {undefined}\n                    resources={{\n                        playAriaLabel: LocalizationConstants.playAriaLabel,\n                        pauseAriaLabel: LocalizationConstants.pauseAriaLabel,\n                        closeAriaLabel: LocalizationConstants.closeAriaLabel,\n                        muteAriaLabel: LocalizationConstants.muteAriaLabel,\n                        unMuteAriaLabel: LocalizationConstants.unMuteAriaLabel,\n                        fullScreenAriaLabel: LocalizationConstants.fullScreenAriaLabel,\n                        exitFullScreenAriaLabel: LocalizationConstants.exitFullScreenAriaLabel,\n                        pausedAriaLabel: LocalizationConstants.pauseAriaLabel,\n                        playingAriaLabel: LocalizationConstants.playingAriaLabel,\n                        seekBarLabel: LocalizationConstants.seekBarLabel,\n                        videoTimeDurationLabel: LocalizationConstants.videoTimeDurationLabel,\n                        closedCaptionLabel: LocalizationConstants.closedCaptionLabel\n                    }}\n            />,\n            { attachTo: document.body.firstElementChild as HTMLElement }\n        );\n        const videoControlsBar = wrapper.instance() as VideoControls;\n        const buttons = document.querySelectorAll('button');\n        expect(buttons.length).toBe(6);\n\n        videoControlsBar.render();\n        // Test having focus and rerendering when button is clicked\n        wrapper.find('div.action-toggle').at(1).simulate('mouseOver');\n        wrapper.update();\n\n        expect(videoControlsBar.state.showVolumeSlider).toBe(true);\n        expect(wrapper.find('div.msc-videoplayer__controls__volumeslider__container').hasClass('show')).toBe(true);\n\n        wrapper.find('div.action-toggle').at(1).simulate('mouseleave');\n        wrapper.update();\n\n        setTimeout(() => {\n            expect(videoControlsBar.state.showVolumeSlider).toBe(false);\n            expect(wrapper.find('div.msc-videoplayer__controls__volumeslider__container').hasClass('hide')).toBe(true);\n        },         volumeAutoHideTimeout);\n\n        wrapper.find('div.action-toggle').at(1).simulate('mouseOver');\n        wrapper.update();\n        expect(videoControlsBar.state.showVolumeSlider).toBe(true);\n        expect(wrapper.find('div.msc-videoplayer__controls__volumeslider__container').hasClass('show')).toBe(true);\n\n        setTimeout(() => {\n            expect(videoControlsBar.state.showVolumeSlider).toBe(false);\n            expect(wrapper.find('div.msc-videoplayer__controls__volumeslider__container').hasClass('hide')).toBe(true);\n        },         volumeAutoHideTimeout);\n\n        wrapper.unmount();\n    });\n\n    it('Check on changing volume slider fires volume change event', () => {\n        const spyMuteChange = jest.fn();\n        const spyVolumeChange = jest.fn();\n        const playPosition: IPlayPosition = {\n            currentTime: 0,\n            startTime: 0,\n            endTime: 0,\n            bufferedDuration: 0\n        };\n\n        const wrapper = mount(\n            <VideoControls\n                    className='VideoControlBar'\n                    playing\n                    onPlayClick={undefined}\n                    isMuted\n                    onMuteClick = {spyMuteChange}\n                    onVolumeChange = {spyVolumeChange}\n                    onProgressChange = {undefined}\n                    playPosition = {playPosition}\n                    currentVolume = {50}\n                    isInFullScreen\n                    toggleFullScreen = {undefined}\n                    resources={{\n                        playAriaLabel: LocalizationConstants.playAriaLabel,\n                        pauseAriaLabel: LocalizationConstants.pauseAriaLabel,\n                        closeAriaLabel: LocalizationConstants.closeAriaLabel,\n                        muteAriaLabel: LocalizationConstants.muteAriaLabel,\n                        unMuteAriaLabel: LocalizationConstants.unMuteAriaLabel,\n                        fullScreenAriaLabel: LocalizationConstants.fullScreenAriaLabel,\n                        exitFullScreenAriaLabel: LocalizationConstants.exitFullScreenAriaLabel,\n                        pausedAriaLabel: LocalizationConstants.pauseAriaLabel,\n                        playingAriaLabel: LocalizationConstants.playingAriaLabel,\n                        seekBarLabel: LocalizationConstants.seekBarLabel,\n                        videoTimeDurationLabel: LocalizationConstants.videoTimeDurationLabel,\n                        closedCaptionLabel: LocalizationConstants.closedCaptionLabel\n                    }}\n            />,\n            { attachTo: document.body.firstElementChild as HTMLElement }\n        );\n        const videoControlsBar = wrapper.instance() as VideoControls;\n        const buttons = document.querySelectorAll('button');\n        expect(buttons.length).toBe(6);\n\n        const videoControl = document.getElementsByClassName('VideoControlBar')[0];\n        const getClientWidth = jest.spyOn(videoControl, 'clientWidth', 'get');\n\n        getClientWidth.mockImplementation(() => {\n            return 590;\n        });\n\n        // Test having focus and rerendering when button is clicked\n        wrapper.find('div.action-toggle').at(1).simulate('mouseOver');\n        wrapper.update();\n\n        expect(videoControlsBar.state.showVolumeSlider).toBe(true);\n        expect(wrapper.find('div.msc-videoplayer__controls__volumeslider__container').hasClass('show')).toBe(true);\n\n        wrapper.find('input#VolumeSliderThumbrange').simulate('change', {target:{ id: 'VolumeSliderThumbrange', value: 66}});\n        expect(spyVolumeChange).toHaveBeenCalled();\n\n        wrapper.find('input#VolumeSliderThumbrange').simulate('change', {target:{ id: 'VolumeSliderThumbrange', value: 66}});\n        expect(spyVolumeChange).toHaveBeenCalled();\n\n        wrapper.unmount();\n    });\n\n    it('Check on changing progess slider fires progess change event', () => {\n        const spyProgessChange = jest.fn();\n        const playPosition: IPlayPosition = {\n            currentTime: 0,\n            startTime: 0,\n            endTime: 0,\n            bufferedDuration: 0\n        };\n\n        const wrapper = mount(\n            <VideoControls\n                    className='VideoControlBar'\n                    playing\n                    onPlayClick={undefined}\n                    isMuted\n                    onMuteClick = {undefined}\n                    onVolumeChange = {undefined}\n                    onProgressChange = {spyProgessChange}\n                    playPosition = {playPosition}\n                    currentVolume = {50}\n                    isInFullScreen\n                    toggleFullScreen = {undefined}\n                    resources={{\n                        playAriaLabel: LocalizationConstants.playAriaLabel,\n                        pauseAriaLabel: LocalizationConstants.pauseAriaLabel,\n                        closeAriaLabel: LocalizationConstants.closeAriaLabel,\n                        muteAriaLabel: LocalizationConstants.muteAriaLabel,\n                        unMuteAriaLabel: LocalizationConstants.unMuteAriaLabel,\n                        fullScreenAriaLabel: LocalizationConstants.fullScreenAriaLabel,\n                        exitFullScreenAriaLabel: LocalizationConstants.exitFullScreenAriaLabel,\n                        pausedAriaLabel: LocalizationConstants.pauseAriaLabel,\n                        playingAriaLabel: LocalizationConstants.playingAriaLabel,\n                        seekBarLabel: LocalizationConstants.seekBarLabel,\n                        videoTimeDurationLabel: LocalizationConstants.videoTimeDurationLabel,\n                        closedCaptionLabel: LocalizationConstants.closedCaptionLabel\n                    }}\n            />,\n            { attachTo: document.body.firstElementChild as HTMLElement }\n        );\n        const videoControlsBar = wrapper.instance() as VideoControls;\n\n        videoControlsBar.render();\n        // Test having focus and rerendering when button is clicked\n\n        wrapper.find('input#VideoSliderThumbrange').simulate('change', {target:{ id: 'VideoSliderThumbrange', value: 66}});\n        expect(spyProgessChange).toHaveBeenCalled();\n\n        wrapper.find('input#VideoSliderThumbrange').simulate('change', {target:{ id: 'VideoSliderThumbrange', value: 66}});\n        expect(spyProgessChange).toHaveBeenCalled();\n\n        wrapper.update();\n        wrapper.unmount();\n    });\n\n    it('FullScreen ExitFullScreen Button work correctly when clicked', () => {\n        const spyFullScreenChange= jest.fn();\n        const playPosition: IPlayPosition = {\n            currentTime: 0,\n            startTime: 0,\n            endTime: 0,\n            bufferedDuration: 0\n        };\n\n        const wrapper = mount(\n            <VideoControls\n                    className='VideoControlBar'\n                    playing\n                    onPlayClick={undefined}\n                    isMuted\n                    onMuteClick = {undefined}\n                    onVolumeChange = {undefined}\n                    onProgressChange = {undefined}\n                    playPosition = {playPosition}\n                    currentVolume = {0}\n                    isInFullScreen\n                    toggleFullScreen = {spyFullScreenChange}\n                    resources={{\n                        playAriaLabel: LocalizationConstants.playAriaLabel,\n                        pauseAriaLabel: LocalizationConstants.pauseAriaLabel,\n                        closeAriaLabel: LocalizationConstants.closeAriaLabel,\n                        muteAriaLabel: LocalizationConstants.muteAriaLabel,\n                        unMuteAriaLabel: LocalizationConstants.unMuteAriaLabel,\n                        fullScreenAriaLabel: LocalizationConstants.fullScreenAriaLabel,\n                        exitFullScreenAriaLabel: LocalizationConstants.exitFullScreenAriaLabel,\n                        pausedAriaLabel: LocalizationConstants.pauseAriaLabel,\n                        playingAriaLabel: LocalizationConstants.playingAriaLabel,\n                        seekBarLabel: LocalizationConstants.seekBarLabel,\n                        videoTimeDurationLabel: LocalizationConstants.videoTimeDurationLabel,\n                        closedCaptionLabel: LocalizationConstants.closedCaptionLabel\n                    }}\n            />,\n            { attachTo: document.body.firstElementChild as HTMLElement }\n        );\n        const videoControlsBar = wrapper.instance() as VideoControls;\n        const buttons = document.querySelectorAll('button');\n        expect(buttons.length).toBe(6);\n        const fullScreen = buttons[4];\n        const exitFulScreen = buttons[5];\n\n        // Verify expected initial state\n        expect(fullScreen.getAttribute('aria-hidden')).toBe('true');\n        expect(exitFulScreen.getAttribute('aria-hidden')).toBe('false');\n        videoControlsBar.render();\n\n        // Test having focus and rerendering when button is clicked\n        fullScreen.click();\n        wrapper.update();\n        expect(spyFullScreenChange).toHaveBeenCalled();\n\n        wrapper.unmount();\n    });\n\n    it('Video timer works correctly when time passed', () => {\n        const playPosition: IPlayPosition = {\n            currentTime: 0,\n            startTime: 0,\n            endTime: 77.334,\n            bufferedDuration: 0\n        };\n\n        const wrapper = mount(\n            <VideoControls\n                    className='VideoControlBar'\n                    playing\n                    onPlayClick={undefined}\n                    isMuted\n                    onMuteClick = {undefined}\n                    onVolumeChange = {undefined}\n                    onProgressChange = {undefined}\n                    playPosition = {playPosition}\n                    currentVolume = {0}\n                    isInFullScreen\n                    toggleFullScreen = {undefined}\n                    resources={{\n                        playAriaLabel: LocalizationConstants.playAriaLabel,\n                        pauseAriaLabel: LocalizationConstants.pauseAriaLabel,\n                        closeAriaLabel: LocalizationConstants.closeAriaLabel,\n                        muteAriaLabel: LocalizationConstants.muteAriaLabel,\n                        unMuteAriaLabel: LocalizationConstants.unMuteAriaLabel,\n                        fullScreenAriaLabel: LocalizationConstants.fullScreenAriaLabel,\n                        exitFullScreenAriaLabel: LocalizationConstants.exitFullScreenAriaLabel,\n                        pausedAriaLabel: LocalizationConstants.pauseAriaLabel,\n                        playingAriaLabel: LocalizationConstants.playingAriaLabel,\n                        seekBarLabel: LocalizationConstants.seekBarLabel,\n                        videoTimeDurationLabel: LocalizationConstants.videoTimeDurationLabel,\n                        closedCaptionLabel: LocalizationConstants.closedCaptionLabel\n                    }}\n            />,\n            { attachTo: document.body.firstElementChild as HTMLElement }\n        );\n\n        // check intial value\n        expect(wrapper.find('div.msc-videoplayer__controls__time__text').text()).toEqual('00:00 / 01:17');\n        wrapper.unmount();\n    });\n\n    it('Video current time shows correctly when current time passed', () => {\n        const playPosition: IPlayPosition = {\n            currentTime: 15.553713,\n            startTime: 0,\n            endTime: 77.334,\n            bufferedDuration: 0\n        };\n\n        const wrapper = mount(\n            <VideoControls\n                    className='VideoControlBar'\n                    playing\n                    onPlayClick={undefined}\n                    isMuted\n                    onMuteClick = {undefined}\n                    onVolumeChange = {undefined}\n                    onProgressChange = {undefined}\n                    playPosition = {playPosition}\n                    currentVolume = {0}\n                    isInFullScreen\n                    toggleFullScreen = {undefined}\n                    resources={{\n                        playAriaLabel: LocalizationConstants.playAriaLabel,\n                        pauseAriaLabel: LocalizationConstants.pauseAriaLabel,\n                        closeAriaLabel: LocalizationConstants.closeAriaLabel,\n                        muteAriaLabel: LocalizationConstants.muteAriaLabel,\n                        unMuteAriaLabel: LocalizationConstants.unMuteAriaLabel,\n                        fullScreenAriaLabel: LocalizationConstants.fullScreenAriaLabel,\n                        exitFullScreenAriaLabel: LocalizationConstants.exitFullScreenAriaLabel,\n                        pausedAriaLabel: LocalizationConstants.pauseAriaLabel,\n                        playingAriaLabel: LocalizationConstants.playingAriaLabel,\n                        seekBarLabel: LocalizationConstants.seekBarLabel,\n                        videoTimeDurationLabel: LocalizationConstants.videoTimeDurationLabel,\n                        closedCaptionLabel: LocalizationConstants.closedCaptionLabel\n                    }}\n            />,\n            { attachTo: document.body.firstElementChild as HTMLElement }\n        );\n\n        // check intial value\n        expect(wrapper.find('div.msc-videoplayer__controls__time__text').text()).toEqual('00:15 / 01:17');\n        wrapper.unmount();\n    });\n\n    it('Video current time shows correctly when invalid time passed', () => {\n        const playPosition: IPlayPosition = {\n            currentTime: -15.553713,\n            startTime: 0,\n            endTime: 8100,\n            bufferedDuration: 0\n        };\n\n        const wrapper = mount(\n            <VideoControls\n                    className='VideoControlBar'\n                    playing\n                    onPlayClick={undefined}\n                    isMuted\n                    onMuteClick = {undefined}\n                    onVolumeChange = {undefined}\n                    onProgressChange = {undefined}\n                    playPosition = {playPosition}\n                    currentVolume = {0}\n                    isInFullScreen\n                    toggleFullScreen = {undefined}\n                    resources={{\n                        playAriaLabel: LocalizationConstants.playAriaLabel,\n                        pauseAriaLabel: LocalizationConstants.pauseAriaLabel,\n                        closeAriaLabel: LocalizationConstants.closeAriaLabel,\n                        muteAriaLabel: LocalizationConstants.muteAriaLabel,\n                        unMuteAriaLabel: LocalizationConstants.unMuteAriaLabel,\n                        fullScreenAriaLabel: LocalizationConstants.fullScreenAriaLabel,\n                        exitFullScreenAriaLabel: LocalizationConstants.exitFullScreenAriaLabel,\n                        pausedAriaLabel: LocalizationConstants.pauseAriaLabel,\n                        playingAriaLabel: LocalizationConstants.playingAriaLabel,\n                        seekBarLabel: LocalizationConstants.seekBarLabel,\n                        videoTimeDurationLabel: LocalizationConstants.videoTimeDurationLabel,\n                        closedCaptionLabel: LocalizationConstants.closedCaptionLabel\n                    }}\n            />,\n            { attachTo: document.body.firstElementChild as HTMLElement }\n        );\n\n        // check intial value\n        expect(wrapper.find('div.msc-videoplayer__controls__time__text').text()).toEqual('-00:15 / 2:15:00');\n        wrapper.unmount();\n    });\n\n    // tslint:disable-next-line: max-func-body-length\n    it('closed Captions menu shows up when clicked on closed captions button', () => {\n            const playPosition: IPlayPosition = {\n                currentTime: 0,\n                startTime: 0,\n                endTime: 0,\n                bufferedDuration: 0\n            };\n\n            const closedCaptonsSetting: ICurrentClosedCaptionsSettings = {\n                preset: closedCaptionsSettingDefaults.preset,\n                text_font: closedCaptionsSettingDefaults.text_font,\n                text_color: closedCaptionsSettingDefaults.text_color,\n                text_opacity: closedCaptionsSettingDefaults.text_opacity,\n                text_size: closedCaptionsSettingDefaults.text_size,\n                text_edge_style: closedCaptionsSettingDefaults.text_edge_style,\n                text_background_color: closedCaptionsSettingDefaults.text_background_color,\n                text_background_opacity: closedCaptionsSettingDefaults.text_background_opacity,\n                window_color: closedCaptionsSettingDefaults.window_color,\n                window_opacity: closedCaptionsSettingDefaults.window_opacity\n            };\n            const playerMenu: IPlayerMenu = {\n                category: 'close-caption',\n                id: 'videoTestID-close-caption',\n                label: '',\n                items: [\n                    {\n                        id: 'videoTestID-off',\n                        label: 'Off',\n                        selected: true,\n                        data: 'off',\n                        selectable: true,\n                        persistOnClick: true,\n                        ariaLabel: 'Off '\n                    },\n                    {\n                        id: 'videoTestID-en-us',\n                        label: 'English',\n                        language: 'en',\n                        data: 'en-us',\n                        selected: false,\n                        selectable: true,\n                        persistOnClick: true,\n                        ariaLabel: 'English '\n                    },\n                    {\n                        id: 'videoTestID-de-de',\n                        label: 'Deutsch',\n                        language: 'de',\n                        data: 'de-de',\n                        selected: false,\n                        selectable: true,\n                        persistOnClick: true,\n                        ariaLabel: 'Deutsch'\n                    }]\n                };\n\n            const wrapper = mount(\n                <VideoControls\n                        className='VideoControlBar'\n                        playing\n                        onPlayClick={undefined}\n                        isMuted\n                        onMuteClick = {undefined}\n                        onVolumeChange = {undefined}\n                        onProgressChange = {undefined}\n                        playPosition = {playPosition}\n                        currentVolume = {60}\n                        isInFullScreen\n                        currentClosedCaptionsSetting={closedCaptonsSetting}\n                        toggleFullScreen = {undefined}\n                        closedCaptionMenu={playerMenu}\n                        currentClosedCaptionLanguage={'en-us'}\n                        isControlPanelVisible={true}\n                        resources={{\n                            playAriaLabel: LocalizationConstants.playAriaLabel,\n                            pauseAriaLabel: LocalizationConstants.pauseAriaLabel,\n                            closeAriaLabel: LocalizationConstants.closeAriaLabel,\n                            muteAriaLabel: LocalizationConstants.muteAriaLabel,\n                            unMuteAriaLabel: LocalizationConstants.unMuteAriaLabel,\n                            fullScreenAriaLabel: LocalizationConstants.fullScreenAriaLabel,\n                            exitFullScreenAriaLabel: LocalizationConstants.exitFullScreenAriaLabel,\n                            pausedAriaLabel: LocalizationConstants.pauseAriaLabel,\n                            playingAriaLabel: LocalizationConstants.playingAriaLabel,\n                            videoTimeDurationLabel: LocalizationConstants.videoTimeDurationLabel,\n                            closedCaptionLabel: LocalizationConstants.closedCaptionLabel\n                        }}\n\n                />,\n                { attachTo: document.body.firstElementChild as HTMLElement }\n            );\n            const videoControlsBar = wrapper.instance() as VideoControls;\n            const buttons = document.querySelectorAll('button');\n            expect(buttons.length).toBe(7);\n            const closedCaption = buttons[2];\n            expect(videoControlsBar.state.showMenu).toBe(false);\n            videoControlsBar.render();\n\n            // Test having focus and rerendering when button is clicked\n            closedCaption.click();\n            wrapper.update();\n            expect(wrapper.find('div.msc-videoplayer__controls__menu').length).toBeGreaterThan(0);\n            expect(videoControlsBar.state.showMenu).toBe(true);\n\n            closedCaption.click();\n            wrapper.update();\n            expect(wrapper.find('div.msc-videoplayer__controls__menu').length).toBe(0);\n            expect(videoControlsBar.state.showMenu).toBe(false);\n\n            wrapper.unmount();\n    });\n\n    // tslint:disable-next-line: max-func-body-length\n    it('closed Captions menu works correctly if menu with submenu is clicked', () => {\n        const playPosition: IPlayPosition = {\n            currentTime: 0,\n            startTime: 0,\n            endTime: 0,\n            bufferedDuration: 0\n        };\n\n        const closedCaptonsSetting: ICurrentClosedCaptionsSettings = {\n            preset: closedCaptionsSettingDefaults.preset,\n            text_font: closedCaptionsSettingDefaults.text_font,\n            text_color: closedCaptionsSettingDefaults.text_color,\n            text_opacity: closedCaptionsSettingDefaults.text_opacity,\n            text_size: closedCaptionsSettingDefaults.text_size,\n            text_edge_style: closedCaptionsSettingDefaults.text_edge_style,\n            text_background_color: closedCaptionsSettingDefaults.text_background_color,\n            text_background_opacity: closedCaptionsSettingDefaults.text_background_opacity,\n            window_color: closedCaptionsSettingDefaults.window_color,\n            window_opacity: closedCaptionsSettingDefaults.window_opacity\n        };\n\n        const spyMenuItemClick = jest.fn();\n        const spyMenuItemFocus = jest.fn();\n        const spyMenuItemBlur = jest.fn();\n\n        const playerMenu: IPlayerMenu = {\n            category: 'close-caption',\n            id: 'videoTestID-close-caption',\n            label: '',\n            items: [\n                {\n                    id: 'videoTestID-off',\n                    label: 'Off',\n                    selected: true,\n                    data: 'off',\n                    selectable: true,\n                    persistOnClick: true,\n                    ariaLabel: 'Off '\n                },\n                {\n                    id: 'videoTestID-en-us',\n                    label: 'English',\n                    language: 'en',\n                    data: 'en-us',\n                    selected: false,\n                    selectable: true,\n                    persistOnClick: true,\n                    ariaLabel: 'English '\n                },\n                {\n                    id: 'videoTestID-de-de',\n                    label: 'Deutsch',\n                    language: 'de',\n                    data: 'de-de',\n                    selected: false,\n                    selectable: true,\n                    persistOnClick: true,\n                    ariaLabel: 'Deutsch'\n                },\n                {\n                    id: 'videoTestID-appearance',\n                    label: 'Appearance',\n                    selected: false,\n                    selectable: false,\n                    subMenu: {\n                        id: 'videoTestID-cc-preset',\n                        label: 'Appearance',\n                        category: 'cc-settings',\n                        items: [\n                            {\n                                id: '',\n                                label: 'Appearance',\n                                ariaLabel: 'Appreance - go back to previous menu',\n                                selectable: false,\n                                selected: false,\n                                persistOnClick: false,\n                                isBackButton: true,\n                                hasMouseHoverEvents: true\n                            },\n                            {\n                                id: 'videoTestID-cc-preset-preset1',\n                                label: 'Preset 1 ',\n                                data: 'preset:preset1',\n                                selectable: true,\n                                selected: false,\n                                persistOnClick: true,\n                                ariaLabel: 'Close captions appearance : (Font:Proportional Sans Serif, Text color:White)',\n                                hasMouseHoverEvents: true\n                            },\n                            {\n                                id: 'videoTestID-cc-preset-preset2',\n                                label: 'Preset 2',\n                                data: 'preset:preset2',\n                                selectable: true,\n                                selected: false,\n                                persistOnClick: true,\n                                ariaLabel: 'Close captions appearance : (Font:Monospaced Serif, Text color:White)',\n                                hasMouseHoverEvents: true\n                            },\n                            {\n                                id: 'videoTestID-cc-preset-preset3',\n                                label: 'Preset 3',\n                                data: 'preset:preset3',\n                                selectable: true,\n                                selected: false,\n                                persistOnClick: true,\n                                ariaLabel: 'Close captions appearance : (Font:Proportional Sans Serif, Text color:Yellow)',\n                                hasMouseHoverEvents: true\n                            },\n                            {\n                                id: 'videoTestID-cc-preset-preset4',\n                                label: 'Preset 4',\n                                data: 'preset:preset4',\n                                selectable: true,\n                                selected: false,\n                                persistOnClick: true,\n                                ariaLabel: 'Close captions appearance : (Font:Proportional Sans Serif, Text color:Blue)',\n                                hasMouseHoverEvents: true\n                            },\n                            {\n                                id: 'videoTestID-cc-preset-preset5',\n                                label: 'Preset 5',\n                                data: 'preset:preset5',\n                                selectable: true,\n                                selected: false,\n                                persistOnClick: true,\n                                ariaLabel: 'Close captions appearance : (Font:Casual, Text color:White)',\n                                hasMouseHoverEvents: true\n                            },\n                            {\n                                id: 'videoTestID-cc-customize',\n                                label: 'Customize',\n                                hasMouseHoverEvents: true\n                            },\n                            {\n                                id: 'reset',\n                                label: 'Reset',\n                                data: 'reset',\n                                persistOnClick: true,\n                                hasMouseHoverEvents: true\n                            }]\n                        }\n                    }\n                ]\n            };\n\n        const wrapper = mount(\n            <VideoControls\n                    className='VideoControlBar'\n                    playing\n                    onPlayClick={undefined}\n                    isMuted\n                    onMuteClick = {undefined}\n                    onVolumeChange = {undefined}\n                    onProgressChange = {undefined}\n                    playPosition = {playPosition}\n                    currentVolume = {60}\n                    isInFullScreen\n                    toggleFullScreen = {undefined}\n                    currentClosedCaptionsSetting={closedCaptonsSetting}\n                    closedCaptionMenu={playerMenu}\n                    currentClosedCaptionLanguage={'en-us'}\n                    isControlPanelVisible={true}\n                    onMenuItemClick={spyMenuItemClick}\n                    onMenuItemFocus={spyMenuItemFocus}\n                    onMenuItemBlur={spyMenuItemBlur}\n                    resources={{\n                        playAriaLabel: LocalizationConstants.playAriaLabel,\n                        pauseAriaLabel: LocalizationConstants.pauseAriaLabel,\n                        closeAriaLabel: LocalizationConstants.closeAriaLabel,\n                        muteAriaLabel: LocalizationConstants.muteAriaLabel,\n                        unMuteAriaLabel: LocalizationConstants.unMuteAriaLabel,\n                        fullScreenAriaLabel: LocalizationConstants.fullScreenAriaLabel,\n                        exitFullScreenAriaLabel: LocalizationConstants.exitFullScreenAriaLabel,\n                        pausedAriaLabel: LocalizationConstants.pauseAriaLabel,\n                        playingAriaLabel: LocalizationConstants.playingAriaLabel,\n                        videoTimeDurationLabel: LocalizationConstants.videoTimeDurationLabel,\n                        closedCaptionLabel: LocalizationConstants.closedCaptionLabel\n                    }}\n            />,\n            { attachTo: document.body.firstElementChild as HTMLElement }\n        );\n        const videoControlsBar = wrapper.instance() as VideoControls;\n        const buttons = document.querySelectorAll('button');\n        expect(buttons.length).toBe(7);\n        const closedCaption = buttons[2];\n        expect(videoControlsBar.state.showMenu).toBe(false);\n        videoControlsBar.render();\n\n        // Test having focus and rerendering when button is clicked\n        closedCaption.click();\n        wrapper.update();\n        expect(wrapper.find('div.msc-videoplayer__controls__menu').length).toBeGreaterThan(0);\n        expect(videoControlsBar.state.showMenu).toBe(true);\n\n        let menuButtons = wrapper.find('div.msc-videoplayer__controls__menu button');\n        expect(menuButtons.length).toBe(4);\n\n        const offButton = wrapper.find('div.msc-videoplayer__controls__menu button').first();\n        offButton.simulate('click');\n        // wrapper.update();\n        // console.log(offButton.html());\n        // expect(offButton.html().indexOf('fa-check')).toBeGreaterThan(0);\n        expect(spyMenuItemClick).toBeCalled();\n\n        const englishButton = wrapper.find('div.msc-videoplayer__controls__menu button').at(1);\n        englishButton.simulate('click');\n        // wrapper.update();\n        // expect(englishButton.html().indexOf('fa-check')).toBeGreaterThan(0);\n        expect(spyMenuItemClick).toBeCalled();\n\n        const detuchButton = wrapper.find('div.msc-videoplayer__controls__menu button').at(2);\n        detuchButton.simulate('click');\n        // wrapper.update();\n        // expect(detuchButton.html().indexOf('fa-check')).toBeGreaterThan(0);\n        expect(spyMenuItemClick).toBeCalled();\n\n        const appButton = wrapper.find('div.msc-videoplayer__controls__menu button').last();\n        appButton.simulate('click');\n        wrapper.update();\n\n        menuButtons = wrapper.find('div.msc-videoplayer__controls__menu button');\n        expect(menuButtons.length).toBe(8);\n\n        const backButton = wrapper.find('div.msc-videoplayer__controls__menu button').first();\n        backButton.simulate('click');\n        wrapper.update();\n\n        menuButtons = wrapper.find('div.msc-videoplayer__controls__menu button');\n        expect(menuButtons.length).toBe(4);\n\n        wrapper.unmount();\n    });\n\n    // tslint:disable-next-line: max-func-body-length\n    it('closed Captions menu accessible through keyboard', () => {\n        const playPosition: IPlayPosition = {\n            currentTime: 0,\n            startTime: 0,\n            endTime: 0,\n            bufferedDuration: 0\n        };\n\n        const closedCaptonsSetting: ICurrentClosedCaptionsSettings = {\n            preset: closedCaptionsSettingDefaults.preset,\n            text_font: closedCaptionsSettingDefaults.text_font,\n            text_color: closedCaptionsSettingDefaults.text_color,\n            text_opacity: closedCaptionsSettingDefaults.text_opacity,\n            text_size: closedCaptionsSettingDefaults.text_size,\n            text_edge_style: closedCaptionsSettingDefaults.text_edge_style,\n            text_background_color: closedCaptionsSettingDefaults.text_background_color,\n            text_background_opacity: closedCaptionsSettingDefaults.text_background_opacity,\n            window_color: closedCaptionsSettingDefaults.window_color,\n            window_opacity: closedCaptionsSettingDefaults.window_opacity\n        };\n\n        const spyMenuItemClick = jest.fn();\n        const spyMenuItemFocus = jest.fn();\n        const spyMenuItemBlur = jest.fn();\n\n        const playerMenu: IPlayerMenu = {\n            category: 'close-caption',\n            id: 'videoTestID-close-caption',\n            label: '',\n            items: [\n                {\n                    id: 'videoTestID-off',\n                    label: 'Off',\n                    selected: true,\n                    data: 'off',\n                    selectable: true,\n                    persistOnClick: true,\n                    ariaLabel: 'Off '\n                },\n                {\n                    id: 'videoTestID-en-us',\n                    label: 'English',\n                    language: 'en',\n                    data: 'en-us',\n                    selected: false,\n                    selectable: true,\n                    persistOnClick: true,\n                    ariaLabel: 'English '\n                },\n                {\n                    id: 'videoTestID-de-de',\n                    label: 'Deutsch',\n                    language: 'de',\n                    data: 'de-de',\n                    selected: false,\n                    selectable: true,\n                    persistOnClick: true,\n                    ariaLabel: 'Deutsch'\n                },\n                {\n                    id: 'videoTestID-appearance',\n                    label: 'Appearance',\n                    selected: false,\n                    selectable: false,\n                    subMenu: {\n                        id: 'videoTestID-cc-preset',\n                        label: 'Appearance',\n                        category: 'cc-settings',\n                        items: [\n                            {\n                                id: '',\n                                label: 'Appearance',\n                                ariaLabel: 'Appreance - go back to previous menu',\n                                selectable: false,\n                                selected: false,\n                                persistOnClick: false,\n                                isBackButton: true,\n                                hasMouseHoverEvents: true\n                            },\n                            {\n                                id: 'videoTestID-cc-preset-preset1',\n                                label: 'Preset 1 ',\n                                data: 'preset:preset1',\n                                selectable: true,\n                                selected: false,\n                                persistOnClick: true,\n                                ariaLabel: 'Close captions appearance : (Font:Proportional Sans Serif, Text color:White)',\n                                hasMouseHoverEvents: true\n                            },\n                            {\n                                id: 'videoTestID-cc-preset-preset2',\n                                label: 'Preset 2',\n                                data: 'preset:preset2',\n                                selectable: true,\n                                selected: false,\n                                persistOnClick: true,\n                                ariaLabel: 'Close captions appearance : (Font:Monospaced Serif, Text color:White)',\n                                hasMouseHoverEvents: true\n                            },\n                            {\n                                id: 'videoTestID-cc-preset-preset3',\n                                label: 'Preset 3',\n                                data: 'preset:preset3',\n                                selectable: true,\n                                selected: false,\n                                persistOnClick: true,\n                                ariaLabel: 'Close captions appearance : (Font:Proportional Sans Serif, Text color:Yellow)',\n                                hasMouseHoverEvents: true\n                            },\n                            {\n                                id: 'videoTestID-cc-preset-preset4',\n                                label: 'Preset 4',\n                                data: 'preset:preset4',\n                                selectable: true,\n                                selected: false,\n                                persistOnClick: true,\n                                ariaLabel: 'Close captions appearance : (Font:Proportional Sans Serif, Text color:Blue)',\n                                hasMouseHoverEvents: true\n                            },\n                            {\n                                id: 'videoTestID-cc-preset-preset5',\n                                label: 'Preset 5',\n                                data: 'preset:preset5',\n                                selectable: true,\n                                selected: false,\n                                persistOnClick: true,\n                                ariaLabel: 'Close captions appearance : (Font:Casual, Text color:White)',\n                                hasMouseHoverEvents: true\n                            },\n                            {\n                                id: 'videoTestID-cc-customize',\n                                label: 'Customize',\n                                hasMouseHoverEvents: true\n                            },\n                            {\n                                id: 'reset',\n                                label: 'Reset',\n                                data: 'reset',\n                                persistOnClick: true,\n                                hasMouseHoverEvents: true\n                            }]\n                        }\n                    }\n                ]\n            };\n\n        const wrapper = mount(\n            <VideoControls\n                    className='VideoControlBar'\n                    playing\n                    onPlayClick={undefined}\n                    isMuted\n                    onMuteClick = {undefined}\n                    onVolumeChange = {undefined}\n                    onProgressChange = {undefined}\n                    playPosition = {playPosition}\n                    currentVolume = {60}\n                    isInFullScreen\n                    toggleFullScreen = {undefined}\n                    currentClosedCaptionsSetting={closedCaptonsSetting}\n                    closedCaptionMenu={playerMenu}\n                    currentClosedCaptionLanguage={'en-us'}\n                    isControlPanelVisible={true}\n                    onMenuItemClick={spyMenuItemClick}\n                    onMenuItemFocus={spyMenuItemFocus}\n                    onMenuItemBlur={spyMenuItemBlur}\n                    resources={{\n                        playAriaLabel: LocalizationConstants.playAriaLabel,\n                        pauseAriaLabel: LocalizationConstants.pauseAriaLabel,\n                        closeAriaLabel: LocalizationConstants.closeAriaLabel,\n                        muteAriaLabel: LocalizationConstants.muteAriaLabel,\n                        unMuteAriaLabel: LocalizationConstants.unMuteAriaLabel,\n                        fullScreenAriaLabel: LocalizationConstants.fullScreenAriaLabel,\n                        exitFullScreenAriaLabel: LocalizationConstants.exitFullScreenAriaLabel,\n                        pausedAriaLabel: LocalizationConstants.pauseAriaLabel,\n                        playingAriaLabel: LocalizationConstants.playingAriaLabel,\n                        videoTimeDurationLabel: LocalizationConstants.videoTimeDurationLabel,\n                        closedCaptionLabel: LocalizationConstants.closedCaptionLabel\n                    }}\n            />,\n            { attachTo: document.body.firstElementChild as HTMLElement }\n        );\n        const videoControlsBar = wrapper.instance() as VideoControls;\n        const buttons = document.querySelectorAll('button');\n        expect(buttons.length).toBe(7);\n        const closedCaption = buttons[2];\n        expect(videoControlsBar.state.showMenu).toBe(false);\n        videoControlsBar.render();\n\n        // Test having focus and rerendering when button is clicked\n        closedCaption.click();\n        wrapper.update();\n        expect(wrapper.find('div.msc-videoplayer__controls__menu').length).toBeGreaterThan(0);\n        expect(videoControlsBar.state.showMenu).toBe(true);\n\n        let menuButtons = wrapper.find('div.msc-videoplayer__controls__menu button');\n        expect(menuButtons.length).toBe(4);\n\n        let offButton = wrapper.find('div.msc-videoplayer__controls__menu button').first();\n        offButton.simulate('keyDown', { keyCode: KeyCodes.Tab});\n\n        let englishButton = wrapper.find('div.msc-videoplayer__controls__menu button').at(1);\n        englishButton.simulate('keyDown', { keyCode: KeyCodes.Tab});\n\n        let detuchButton = wrapper.find('div.msc-videoplayer__controls__menu button').at(2);\n        detuchButton.simulate('keyDown', { keyCode: KeyCodes.Tab, shiftKey: true});\n\n        englishButton = wrapper.find('div.msc-videoplayer__controls__menu button').at(1);\n        englishButton.simulate('keyDown', { keyCode: KeyCodes.ArrowDown});\n\n        englishButton.simulate('mouseover');\n        expect(spyMenuItemFocus).not.toBeCalled();\n\n        englishButton.simulate('mouseout');\n        expect(spyMenuItemBlur).not.toBeCalled();\n\n        englishButton.simulate('focus');\n        expect(spyMenuItemFocus).not.toBeCalled();\n\n        englishButton.simulate('blur');\n        expect(spyMenuItemBlur).not.toBeCalled();\n\n        detuchButton = wrapper.find('div.msc-videoplayer__controls__menu button').at(2);\n        detuchButton.simulate('keyDown', { keyCode: KeyCodes.ArrowUp});\n\n        let appButton = wrapper.find('div.msc-videoplayer__controls__menu button').last();\n        appButton.simulate('keyDown', { keyCode: KeyCodes.ArrowRight});\n\n        menuButtons = wrapper.find('div.msc-videoplayer__controls__menu button');\n        expect(menuButtons.length).toBe(8);\n\n        const presetButton = wrapper.find('div.msc-videoplayer__controls__menu button').at(2);\n        presetButton.simulate('mouseover');\n        expect(spyMenuItemFocus).toBeCalled();\n\n        presetButton.simulate('mouseout');\n        expect(spyMenuItemBlur).toBeCalled();\n\n        presetButton.simulate('focus');\n        expect(spyMenuItemFocus).toBeCalled();\n\n        presetButton.simulate('blur');\n        expect(spyMenuItemBlur).toBeCalled();\n\n        const backButton = wrapper.find('div.msc-videoplayer__controls__menu button').first();\n        backButton.simulate('keyDown', { keyCode: KeyCodes.ArrowLeft});\n\n        menuButtons = wrapper.find('div.msc-videoplayer__controls__menu button');\n        expect(menuButtons.length).toBe(4);\n\n        appButton = wrapper.find('div.msc-videoplayer__controls__menu button').last();\n        appButton.simulate('keyDown', { keyCode: KeyCodes.ArrowDown});\n\n        appButton.simulate('keyDown', {keyCode: KeyCodes.Enter});\n        appButton.simulate('keyUp', {keyCode: KeyCodes.Enter});\n        appButton.simulate('keyUp', {keyCode: KeyCodes.Space});\n\n        offButton = wrapper.find('div.msc-videoplayer__controls__menu button').first();\n        offButton.simulate('keyDown', { keyCode: KeyCodes.ArrowUp});\n\n        appButton = wrapper.find('div.msc-videoplayer__controls__menu button').last();\n        appButton.simulate('keyDown', { keyCode: KeyCodes.PageUp});\n\n        offButton = wrapper.find('div.msc-videoplayer__controls__menu button').first();\n        offButton.simulate('keyDown', { keyCode: KeyCodes.PageDown});\n\n        detuchButton = wrapper.find('div.msc-videoplayer__controls__menu button').at(2);\n        detuchButton.simulate('keyDown', { keyCode: KeyCodes.ArrowUp});\n\n        appButton = wrapper.find('div.msc-videoplayer__controls__menu button').last();\n        appButton.simulate('keyDown', { keyCode: KeyCodes.Tab});\n\n        appButton.simulate('keyDown', { keyCode: KeyCodes.Tab});\n        expect(videoControlsBar.state.showMenu).toBe(false);\n\n        closedCaption.click();\n        wrapper.update();\n        expect(wrapper.find('div.msc-videoplayer__controls__menu').length).toBeGreaterThan(0);\n        expect(videoControlsBar.state.showMenu).toBe(true);\n\n        offButton = wrapper.find('div.msc-videoplayer__controls__menu button').first();\n        offButton.simulate('keyDown', { keyCode: KeyCodes.Escape});\n\n        wrapper.unmount();\n    });\n\n    // tslint:disable-next-line: max-func-body-length\n    it('check document gets fired & menu hides upon document click', () => {\n        const playPosition: IPlayPosition = {\n            currentTime: 0,\n            startTime: 0,\n            endTime: 0,\n            bufferedDuration: 0\n        };\n\n        const closedCaptonsSetting: ICurrentClosedCaptionsSettings = {\n            preset: closedCaptionsSettingDefaults.preset,\n            text_font: closedCaptionsSettingDefaults.text_font,\n            text_color: closedCaptionsSettingDefaults.text_color,\n            text_opacity: closedCaptionsSettingDefaults.text_opacity,\n            text_size: closedCaptionsSettingDefaults.text_size,\n            text_edge_style: closedCaptionsSettingDefaults.text_edge_style,\n            text_background_color: closedCaptionsSettingDefaults.text_background_color,\n            text_background_opacity: closedCaptionsSettingDefaults.text_background_opacity,\n            window_color: closedCaptionsSettingDefaults.window_color,\n            window_opacity: closedCaptionsSettingDefaults.window_opacity\n        };\n\n        const spyMenuItemClick = jest.fn();\n        const spyMenuItemFocus = jest.fn();\n        const spyMenuItemBlur = jest.fn();\n\n        const playerMenu: IPlayerMenu = {\n            category: 'close-caption',\n            id: 'videoTestID-close-caption',\n            label: '',\n            items: [\n                {\n                    id: 'videoTestID-off',\n                    label: 'Off',\n                    selected: true,\n                    data: 'off',\n                    selectable: true,\n                    persistOnClick: true,\n                    ariaLabel: 'Off '\n                },\n                {\n                    id: 'videoTestID-en-us',\n                    label: 'English',\n                    language: 'en',\n                    data: 'en-us',\n                    selected: false,\n                    selectable: true,\n                    persistOnClick: true,\n                    ariaLabel: 'English '\n                },\n                {\n                    id: 'videoTestID-de-de',\n                    label: 'Deutsch',\n                    language: 'de',\n                    data: 'de-de',\n                    selected: false,\n                    selectable: true,\n                    persistOnClick: true,\n                    ariaLabel: 'Deutsch'\n                },\n                {\n                    id: 'videoTestID-appearance',\n                    label: 'Appearance',\n                    selected: false,\n                    selectable: false,\n                    subMenu: {\n                        id: 'videoTestID-cc-preset',\n                        label: 'Appearance',\n                        category: 'cc-settings',\n                        items: [\n                            {\n                                id: '',\n                                label: 'Appearance',\n                                ariaLabel: 'Appreance - go back to previous menu',\n                                selectable: false,\n                                selected: false,\n                                persistOnClick: false,\n                                isBackButton: true,\n                                hasMouseHoverEvents: true\n                            },\n                            {\n                                id: 'videoTestID-cc-preset-preset1',\n                                label: 'Preset 1 ',\n                                data: 'preset:preset1',\n                                selectable: true,\n                                selected: false,\n                                persistOnClick: true,\n                                ariaLabel: 'Close captions appearance : (Font:Proportional Sans Serif, Text color:White)',\n                                hasMouseHoverEvents: true\n                            },\n                            {\n                                id: 'videoTestID-cc-preset-preset2',\n                                label: 'Preset 2',\n                                data: 'preset:preset2',\n                                selectable: true,\n                                selected: false,\n                                persistOnClick: true,\n                                ariaLabel: 'Close captions appearance : (Font:Monospaced Serif, Text color:White)',\n                                hasMouseHoverEvents: true\n                            },\n                            {\n                                id: 'videoTestID-cc-preset-preset3',\n                                label: 'Preset 3',\n                                data: 'preset:preset3',\n                                selectable: true,\n                                selected: false,\n                                persistOnClick: true,\n                                ariaLabel: 'Close captions appearance : (Font:Proportional Sans Serif, Text color:Yellow)',\n                                hasMouseHoverEvents: true\n                            },\n                            {\n                                id: 'videoTestID-cc-preset-preset4',\n                                label: 'Preset 4',\n                                data: 'preset:preset4',\n                                selectable: true,\n                                selected: false,\n                                persistOnClick: true,\n                                ariaLabel: 'Close captions appearance : (Font:Proportional Sans Serif, Text color:Blue)',\n                                hasMouseHoverEvents: true\n                            },\n                            {\n                                id: 'videoTestID-cc-preset-preset5',\n                                label: 'Preset 5',\n                                data: 'preset:preset5',\n                                selectable: true,\n                                selected: false,\n                                persistOnClick: true,\n                                ariaLabel: 'Close captions appearance : (Font:Casual, Text color:White)',\n                                hasMouseHoverEvents: true\n                            },\n                            {\n                                id: 'videoTestID-cc-customize',\n                                label: 'Customize',\n                                hasMouseHoverEvents: true\n                            },\n                            {\n                                id: 'reset',\n                                label: 'Reset',\n                                data: 'reset',\n                                persistOnClick: true,\n                                hasMouseHoverEvents: true\n                            }]\n                        }\n                    }\n                ]\n            };\n\n        const wrapper = mount(\n            <VideoControls\n                    className='VideoControlBar'\n                    playing\n                    onPlayClick={undefined}\n                    isMuted\n                    onMuteClick = {undefined}\n                    onVolumeChange = {undefined}\n                    onProgressChange = {undefined}\n                    playPosition = {playPosition}\n                    currentVolume = {60}\n                    isInFullScreen\n                    toggleFullScreen = {undefined}\n                    currentClosedCaptionsSetting={closedCaptonsSetting}\n                    closedCaptionMenu={playerMenu}\n                    currentClosedCaptionLanguage={'en-us'}\n                    isControlPanelVisible={true}\n                    onMenuItemClick={spyMenuItemClick}\n                    onMenuItemFocus={spyMenuItemFocus}\n                    onMenuItemBlur={spyMenuItemBlur}\n                    resources={{\n                        playAriaLabel: LocalizationConstants.playAriaLabel,\n                        pauseAriaLabel: LocalizationConstants.pauseAriaLabel,\n                        closeAriaLabel: LocalizationConstants.closeAriaLabel,\n                        muteAriaLabel: LocalizationConstants.muteAriaLabel,\n                        unMuteAriaLabel: LocalizationConstants.unMuteAriaLabel,\n                        fullScreenAriaLabel: LocalizationConstants.fullScreenAriaLabel,\n                        exitFullScreenAriaLabel: LocalizationConstants.exitFullScreenAriaLabel,\n                        pausedAriaLabel: LocalizationConstants.pauseAriaLabel,\n                        playingAriaLabel: LocalizationConstants.playingAriaLabel,\n                        videoTimeDurationLabel: LocalizationConstants.videoTimeDurationLabel,\n                        closedCaptionLabel: LocalizationConstants.closedCaptionLabel\n                    }}\n            />,\n            { attachTo: document.body.firstElementChild as HTMLElement }\n        );\n        const videoControlsBar = wrapper.instance() as VideoControls;\n        let buttons = document.querySelectorAll('button');\n        expect(buttons.length).toBe(7);\n        const closedCaption = buttons[2];\n        expect(videoControlsBar.state.showMenu).toBe(false);\n        videoControlsBar.render();\n\n        // Test having focus and rerendering when button is clicked\n        closedCaption.click();\n        wrapper.update();\n        expect(wrapper.find('div.msc-videoplayer__controls__menu').length).toBeGreaterThan(0);\n        expect(videoControlsBar.state.showMenu).toBe(true);\n\n        const clickEvent = new Event('click', { bubbles: true, cancelable: false });\n        document.dispatchEvent(clickEvent);\n        wrapper.update();\n        expect(videoControlsBar.state.showMenu).toBe(false);\n\n        closedCaption.click();\n        wrapper.update();\n        expect(wrapper.find('div.msc-videoplayer__controls__menu').length).toBeGreaterThan(0);\n        expect(videoControlsBar.state.showMenu).toBe(true);\n\n        // For code coverage\n        const targetElement = jest.spyOn(clickEvent, 'target', 'get');\n\n        targetElement.mockImplementation(() => {\n            return closedCaption;\n        });\n        document.dispatchEvent(clickEvent);\n\n        closedCaption.click();\n        wrapper.update();\n        expect(wrapper.find('div.msc-videoplayer__controls__menu').length).toBeGreaterThan(0);\n\n        buttons = document.querySelectorAll('button');\n        expect(buttons.length).toBe(11);\n\n        targetElement.mockImplementation(() => {\n            return buttons[4];\n        });\n        document.dispatchEvent(clickEvent);\n\n        wrapper.update();\n        expect(videoControlsBar.state.showMenu).toBe(true);\n\n        wrapper.unmount();\n    });\n\n    // tslint:disable-next-line: max-func-body-length\n    it('closed Captions menu hides upon resize', () => {\n        const playPosition: IPlayPosition = {\n            currentTime: 0,\n            startTime: 0,\n            endTime: 0,\n            bufferedDuration: 0\n        };\n\n        const closedCaptonsSetting: ICurrentClosedCaptionsSettings = {\n            preset: closedCaptionsSettingDefaults.preset,\n            text_font: closedCaptionsSettingDefaults.text_font,\n            text_color: closedCaptionsSettingDefaults.text_color,\n            text_opacity: closedCaptionsSettingDefaults.text_opacity,\n            text_size: closedCaptionsSettingDefaults.text_size,\n            text_edge_style: closedCaptionsSettingDefaults.text_edge_style,\n            text_background_color: closedCaptionsSettingDefaults.text_background_color,\n            text_background_opacity: closedCaptionsSettingDefaults.text_background_opacity,\n            window_color: closedCaptionsSettingDefaults.window_color,\n            window_opacity: closedCaptionsSettingDefaults.window_opacity\n        };\n\n        const spyMenuItemClick = jest.fn();\n        const spyMenuItemFocus = jest.fn();\n        const spyMenuItemBlur = jest.fn();\n\n        const playerMenu: IPlayerMenu = {\n            category: 'close-caption',\n            id: 'videoTestID-close-caption',\n            label: '',\n            items: [\n                {\n                    id: 'videoTestID-off',\n                    label: 'Off',\n                    selected: true,\n                    data: 'off',\n                    selectable: true,\n                    persistOnClick: true,\n                    ariaLabel: 'Off '\n                },\n                {\n                    id: 'videoTestID-en-us',\n                    label: 'English',\n                    language: 'en',\n                    data: 'en-us',\n                    selected: false,\n                    selectable: true,\n                    persistOnClick: true,\n                    ariaLabel: 'English '\n                },\n                {\n                    id: 'videoTestID-de-de',\n                    label: 'Deutsch',\n                    language: 'de',\n                    data: 'de-de',\n                    selected: false,\n                    selectable: true,\n                    persistOnClick: true,\n                    ariaLabel: 'Deutsch'\n                },\n                {\n                    id: 'videoTestID-appearance',\n                    label: 'Appearance',\n                    selected: false,\n                    selectable: false,\n                    subMenu: {\n                        id: 'videoTestID-cc-preset',\n                        label: 'Appearance',\n                        category: 'cc-settings',\n                        items: [\n                            {\n                                id: '',\n                                label: 'Appearance',\n                                ariaLabel: 'Appreance - go back to previous menu',\n                                selectable: false,\n                                selected: false,\n                                persistOnClick: false,\n                                isBackButton: true,\n                                hasMouseHoverEvents: true\n                            },\n                            {\n                                id: 'videoTestID-cc-preset-preset1',\n                                label: 'Preset 1 ',\n                                data: 'preset:preset1',\n                                selectable: true,\n                                selected: false,\n                                persistOnClick: true,\n                                ariaLabel: 'Close captions appearance : (Font:Proportional Sans Serif, Text color:White)',\n                                hasMouseHoverEvents: true\n                            },\n                            {\n                                id: 'videoTestID-cc-preset-preset2',\n                                label: 'Preset 2',\n                                data: 'preset:preset2',\n                                selectable: true,\n                                selected: false,\n                                persistOnClick: true,\n                                ariaLabel: 'Close captions appearance : (Font:Monospaced Serif, Text color:White)',\n                                hasMouseHoverEvents: true\n                            },\n                            {\n                                id: 'videoTestID-cc-preset-preset3',\n                                label: 'Preset 3',\n                                data: 'preset:preset3',\n                                selectable: true,\n                                selected: false,\n                                persistOnClick: true,\n                                ariaLabel: 'Close captions appearance : (Font:Proportional Sans Serif, Text color:Yellow)',\n                                hasMouseHoverEvents: true\n                            },\n                            {\n                                id: 'videoTestID-cc-preset-preset4',\n                                label: 'Preset 4',\n                                data: 'preset:preset4',\n                                selectable: true,\n                                selected: false,\n                                persistOnClick: true,\n                                ariaLabel: 'Close captions appearance : (Font:Proportional Sans Serif, Text color:Blue)',\n                                hasMouseHoverEvents: true\n                            },\n                            {\n                                id: 'videoTestID-cc-preset-preset5',\n                                label: 'Preset 5',\n                                data: 'preset:preset5',\n                                selectable: true,\n                                selected: false,\n                                persistOnClick: true,\n                                ariaLabel: 'Close captions appearance : (Font:Casual, Text color:White)',\n                                hasMouseHoverEvents: true\n                            },\n                            {\n                                id: 'videoTestID-cc-customize',\n                                label: 'Customize',\n                                hasMouseHoverEvents: true\n                            },\n                            {\n                                id: 'reset',\n                                label: 'Reset',\n                                data: 'reset',\n                                persistOnClick: true,\n                                hasMouseHoverEvents: true\n                            }]\n                        }\n                    }\n                ]\n            };\n\n        const props: IVideoControlsProps = {\n                    className:'VideoControlBar',\n                    playing: true,\n                    isMuted: false,\n                    playPosition: playPosition,\n                    currentVolume: 60,\n                    currentClosedCaptionsSetting: closedCaptonsSetting,\n                    closedCaptionMenu: playerMenu,\n                    currentAudioTrack: '',\n                    currentAudioTrackURL: '',\n                    currentClosedCaptionLanguage:'en-us',\n                    isControlPanelVisible:true,\n                    onMenuItemClick: spyMenuItemClick,\n                    onMenuItemFocus:spyMenuItemFocus,\n                    onMenuItemBlur: spyMenuItemBlur,\n                    isMobileDevice: false,\n            resources: {\n                playAriaLabel: LocalizationConstants.playAriaLabel,\n                pauseAriaLabel: LocalizationConstants.pauseAriaLabel,\n                closeAriaLabel: LocalizationConstants.closeAriaLabel,\n                muteAriaLabel: LocalizationConstants.muteAriaLabel,\n                unMuteAriaLabel: LocalizationConstants.unMuteAriaLabel,\n                fullScreenAriaLabel: LocalizationConstants.fullScreenAriaLabel,\n                exitFullScreenAriaLabel: LocalizationConstants.exitFullScreenAriaLabel,\n                pausedAriaLabel: LocalizationConstants.pausedAriaLabel,\n                playingAriaLabel: LocalizationConstants.playingAriaLabel,\n                videoTimeDurationLabel: LocalizationConstants.videoTimeDurationLabel,\n                closedCaptionLabel: LocalizationConstants.closedCaptionLabel\n            },\n            viewportMin: 900,\n            viewportMax: 1200\n        };\n\n        const wrapper = mount(\n            <VideoControls\n                   {...props}\n            />,\n            { attachTo: document.body.firstElementChild as HTMLElement }\n        );\n        const videoControlsBar = wrapper.instance() as VideoControls;\n        const buttons = document.querySelectorAll('button');\n        expect(buttons.length).toBe(7);\n        const closedCaption = buttons[2];\n        expect(videoControlsBar.state.showMenu).toBe(false);\n        videoControlsBar.render();\n\n        // Test having focus and rerendering when button is clicked\n        closedCaption.click();\n        wrapper.update();\n        expect(wrapper.find('div.msc-videoplayer__controls__menu').length).toBeGreaterThan(0);\n        expect(videoControlsBar.state.showMenu).toBe(true);\n\n        // This will call the resize fucntion\n        videoControlsBar.componentDidMount();\n        expect(videoControlsBar.state.showMenu).toBe(false);\n\n        wrapper.unmount();\n    });\n    // tslint:disable-next-line: max-func-body-length\n    it('should be able to navigate through menu using keyboard', () => {\n        const playPosition: IPlayPosition = {\n            currentTime: 0,\n            startTime: 0,\n            endTime: 0,\n            bufferedDuration: 0\n        };\n\n        const closedCaptonsSetting: ICurrentClosedCaptionsSettings = {\n            preset: closedCaptionsSettingDefaults.preset,\n            text_font: closedCaptionsSettingDefaults.text_font,\n            text_color: closedCaptionsSettingDefaults.text_color,\n            text_opacity: closedCaptionsSettingDefaults.text_opacity,\n            text_size: closedCaptionsSettingDefaults.text_size,\n            text_edge_style: closedCaptionsSettingDefaults.text_edge_style,\n            text_background_color: closedCaptionsSettingDefaults.text_background_color,\n            text_background_opacity: closedCaptionsSettingDefaults.text_background_opacity,\n            window_color: closedCaptionsSettingDefaults.window_color,\n            window_opacity: closedCaptionsSettingDefaults.window_opacity\n        };\n\n        const spyMenuItemClick = jest.fn();\n        const spyMenuItemFocus = jest.fn();\n        const spyMenuItemBlur = jest.fn();\n\n        const playerMenu: IPlayerMenu = {\n            category: 'close-caption',\n            id: 'videoTestID-close-caption',\n            label: '',\n            items: [\n                {\n                    id: 'videoTestID-off',\n                    label: 'Off',\n                    selected: true,\n                    data: 'off',\n                    selectable: true,\n                    persistOnClick: true,\n                    ariaLabel: 'Off '\n                },\n                {\n                    id: 'videoTestID-en-us',\n                    label: 'English',\n                    language: 'en',\n                    data: 'en-us',\n                    selected: false,\n                    selectable: true,\n                    persistOnClick: true,\n                    ariaLabel: 'English '\n                },\n                {\n                    id: 'videoTestID-de-de',\n                    label: 'Deutsch',\n                    language: 'de',\n                    data: 'de-de',\n                    selected: false,\n                    selectable: true,\n                    persistOnClick: true,\n                    ariaLabel: 'Deutsch'\n                },\n                {\n                    id: 'videoTestID-appearance',\n                    label: 'Appearance',\n                    selected: false,\n                    selectable: false,\n                    subMenu: {\n                        id: 'videoTestID-cc-preset',\n                        label: 'Appearance',\n                        category: 'cc-settings',\n                        items: []\n                        }\n                    }\n                ]\n            };\n\n        const props: IVideoControlsProps = {\n                    className:'VideoControlBar',\n                    playing: true,\n                    isMuted: false,\n                    playPosition: playPosition,\n                    currentVolume: 60,\n                    currentClosedCaptionsSetting: closedCaptonsSetting,\n                    closedCaptionMenu: playerMenu,\n                    currentClosedCaptionLanguage:'en-us',\n                    currentAudioTrack: '',\n                    currentAudioTrackURL: '',\n                    isControlPanelVisible: true,\n                    onMenuItemClick: spyMenuItemClick,\n                    onMenuItemFocus:spyMenuItemFocus,\n                    onMenuItemBlur: spyMenuItemBlur,\n                    isMobileDevice: false,\n            resources: {\n                playAriaLabel: LocalizationConstants.playAriaLabel,\n                pauseAriaLabel: LocalizationConstants.pauseAriaLabel,\n                closeAriaLabel: LocalizationConstants.closeAriaLabel,\n                muteAriaLabel: LocalizationConstants.muteAriaLabel,\n                unMuteAriaLabel: LocalizationConstants.unMuteAriaLabel,\n                fullScreenAriaLabel: LocalizationConstants.fullScreenAriaLabel,\n                exitFullScreenAriaLabel: LocalizationConstants.exitFullScreenAriaLabel,\n                pausedAriaLabel: LocalizationConstants.pausedAriaLabel,\n                playingAriaLabel: LocalizationConstants.playingAriaLabel,\n                videoTimeDurationLabel: LocalizationConstants.videoTimeDurationLabel,\n                closedCaptionLabel: LocalizationConstants.closedCaptionLabel\n            },\n            viewportMin: 900,\n            viewportMax: 1200\n        };\n\n        const wrapper = mount(\n            <VideoControls\n                   {...props}\n            />,\n            { attachTo: document.body.firstElementChild as HTMLElement }\n        );\n        const videoControlsBar = wrapper.instance() as VideoControls;\n        const buttons = document.querySelectorAll('button');\n        expect(buttons.length).toBe(7);\n        const closedCaption = buttons[2];\n        expect(videoControlsBar.state.showMenu).toBe(false);\n        videoControlsBar.render();\n\n        // Test having focus and rerendering when button is clicked\n        closedCaption.click();\n        wrapper.update();\n        expect(wrapper.find('div.msc-videoplayer__controls__menu').length).toBeGreaterThan(0);\n        expect(videoControlsBar.state.showMenu).toBe(true);\n        wrapper.setProps({ isControlPanelVisible: false});\n\n        const menuButtons = wrapper.find('div.msc-videoplayer__controls__menu button');\n        expect(menuButtons.length).toBe(4);\n\n        const offButton = wrapper.find('div.msc-videoplayer__controls__menu button').first();\n        offButton.simulate('keyDown', { keyCode: KeyCodes.End});\n\n        offButton.simulate('keyDown', { keyCode: KeyCodes.Escape});\n        expect(videoControlsBar.state.showMenu).toBe(false);\n\n        const getUserAgent = jest.spyOn(window.navigator, 'userAgent', 'get');\n\n        getUserAgent.mockImplementation(() => {\n            return 'Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/76.0.3809.100 Safari/537.36 /iPhone/i';\n        });\n\n        const videoControl = document.getElementsByClassName('VideoControlBar')[0];\n        const getClientWidth = jest.spyOn(videoControl, 'clientWidth', 'get');\n\n        getClientWidth.mockImplementation(() => {\n            return 590;\n        });\n\n        videoControlsBar.componentDidMount();\n\n        getClientWidth.mockImplementation(() => {\n            return 1000;\n        });\n        videoControlsBar.componentDidMount();\n        wrapper.unmount();\n    });\n\n    // tslint:disable-next-line: max-func-body-length\n    it('should open option menu when clicked on option button', () => {\n        const playPosition: IPlayPosition = {\n            currentTime: 0,\n            startTime: 0,\n            endTime: 0,\n            bufferedDuration: 0\n        };\n\n        const optionMenu: IPlayerMenu = {\n            category: 'options',\n            id: 'videoTestID-options',\n            label: 'Options',\n            items: [\n                {\n                id: 'videoTestID-audioTracks',\n                label: 'Audio Tracks',\n                selected: false,\n                selectable: false,\n                subMenu: {\n                    category: 'audio-tracks',\n                    id: 'videoTestID-audio-tracks',\n                    label: 'Audio Tracks',\n                    items: [\n                    {\n                        id: '',\n                        label: 'Audio Tracks',\n                        ariaLabel: 'Audio Tracks - go back to previous menu',\n                        selectable: false,\n                        selected: false,\n                        persistOnClick: false,\n                        isBackButton: true\n                    },\n                    {\n                        id: '',\n                        label: 'Default Track',\n                        ariaLabel: 'Default Track',\n                        language: 'default',\n                        data: 'default',\n                        selectable: true,\n                        selected: false,\n                        persistOnClick: true\n                    },\n                    {\n                        label: 'Audio descriptions',\n                        language: 'daudio-en-us',\n                        data: 'https://ppe-video-cms-mr-microsoft-com.akamaized.net/cms/api/fabrikamsb/videofiledata/MAtCD0-daudioenus?ver=e1d0',\n                        id: 'videoTestID-audio-0',\n                        selected: false,\n                        selectable: true,\n                        persistOnClick: true\n                    }\n                    ]\n                }\n                }\n            ]\n        };\n\n        const wrapper = mount(\n            <VideoControls\n                    className='VideoControlBar'\n                    playing\n                    onPlayClick={undefined}\n                    isMuted\n                    onMuteClick = {undefined}\n                    onVolumeChange = {undefined}\n                    onProgressChange = {undefined}\n                    playPosition = {playPosition}\n                    currentVolume = {60}\n                    isInFullScreen\n                    currentClosedCaptionsSetting={undefined}\n                    toggleFullScreen = {undefined}\n                    closedCaptionMenu={undefined}\n                    currentClosedCaptionLanguage={'en-us'}\n                    isControlPanelVisible={true}\n                    optionMenu={optionMenu}\n                    resources={{\n                        playAriaLabel: LocalizationConstants.playAriaLabel,\n                        pauseAriaLabel: LocalizationConstants.pauseAriaLabel,\n                        closeAriaLabel: LocalizationConstants.closeAriaLabel,\n                        muteAriaLabel: LocalizationConstants.muteAriaLabel,\n                        unMuteAriaLabel: LocalizationConstants.unMuteAriaLabel,\n                        fullScreenAriaLabel: LocalizationConstants.fullScreenAriaLabel,\n                        exitFullScreenAriaLabel: LocalizationConstants.exitFullScreenAriaLabel,\n                        pausedAriaLabel: LocalizationConstants.pauseAriaLabel,\n                        playingAriaLabel: LocalizationConstants.playingAriaLabel,\n                        videoTimeDurationLabel: LocalizationConstants.videoTimeDurationLabel,\n                        closedCaptionLabel: LocalizationConstants.closedCaptionLabel\n                    }}\n            />,\n            { attachTo: document.body.firstElementChild as HTMLElement }\n        );\n        const videoControlsBar = wrapper.instance() as VideoControls;\n        const buttons = document.querySelectorAll('button');\n        expect(buttons.length).toBe(7);\n        const optionButton = buttons[2];\n        expect(videoControlsBar.state.showMenu).toBe(false);\n        videoControlsBar.render();\n\n        // Test having focus and rerendering when button is clicked\n        optionButton.click();\n        wrapper.update();\n        expect(wrapper.find('div.msc-videoplayer__controls__menu').length).toBeGreaterThan(0);\n        expect(videoControlsBar.state.showMenu).toBe(true);\n\n        optionButton.click();\n        wrapper.update();\n        expect(wrapper.find('div.msc-videoplayer__controls__menu').length).toBe(0);\n        expect(videoControlsBar.state.showMenu).toBe(false);\n\n        wrapper.unmount();\n    });\n\n    // tslint:disable-next-line: max-func-body-length\n    it('option menu is accessible through keyboard', () => {\n        const playPosition: IPlayPosition = {\n            currentTime: 0,\n            startTime: 0,\n            endTime: 0,\n            bufferedDuration: 0\n        };\n\n        const optionMenu: IPlayerMenu = {\n            category: 'options',\n            id: 'videoTestID-options',\n            label: 'Options',\n            items: [\n                {\n                id: 'videoTestID-audioTracks',\n                label: 'Audio Tracks',\n                selected: false,\n                selectable: false,\n                subMenu: {\n                    category: 'audio-tracks',\n                    id: 'videoTestID-audio-tracks',\n                    label: 'Audio Tracks',\n                    items: [\n                    {\n                        id: '',\n                        label: 'Audio Tracks',\n                        ariaLabel: 'Audio Tracks - go back to previous menu',\n                        selectable: false,\n                        selected: false,\n                        persistOnClick: false,\n                        isBackButton: true\n                    },\n                    {\n                        id: '',\n                        label: 'Default Track',\n                        ariaLabel: 'Default Track',\n                        language: 'default',\n                        data: 'default',\n                        selectable: true,\n                        selected: false,\n                        persistOnClick: true\n                    },\n                    {\n                        label: 'Audio descriptions',\n                        language: 'daudio-en-us',\n                        data: 'https://ppe-video-cms-mr-microsoft-com.akamaized.net/cms/api/fabrikamsb/videofiledata/MAtCD0-daudioenus?ver=e1d0',\n                        id: 'videoTestID-audio-0',\n                        selected: false,\n                        selectable: true,\n                        persistOnClick: true\n                    }\n                    ]\n                }\n                }\n            ]\n        };\n\n        const spyMenuItemClick = jest.fn();\n        const spyMenuItemFocus = jest.fn();\n        const spyMenuItemBlur = jest.fn();\n\n        const wrapper = mount(\n            <VideoControls\n                    className='VideoControlBar'\n                    playing\n                    onPlayClick={undefined}\n                    isMuted\n                    onMuteClick = {undefined}\n                    onVolumeChange = {undefined}\n                    onProgressChange = {undefined}\n                    playPosition = {playPosition}\n                    currentVolume = {60}\n                    isInFullScreen\n                    toggleFullScreen = {undefined}\n                    optionMenu = {optionMenu}\n                    currentClosedCaptionsSetting={undefined}\n                    closedCaptionMenu={undefined}\n                    currentClosedCaptionLanguage={'en-us'}\n                    currentAudioTrack={'default'}\n                    isControlPanelVisible={true}\n                    onMenuItemClick={spyMenuItemClick}\n                    onMenuItemFocus={spyMenuItemFocus}\n                    onMenuItemBlur={spyMenuItemBlur}\n                    resources={{\n                        playAriaLabel: LocalizationConstants.playAriaLabel,\n                        pauseAriaLabel: LocalizationConstants.pauseAriaLabel,\n                        closeAriaLabel: LocalizationConstants.closeAriaLabel,\n                        muteAriaLabel: LocalizationConstants.muteAriaLabel,\n                        unMuteAriaLabel: LocalizationConstants.unMuteAriaLabel,\n                        fullScreenAriaLabel: LocalizationConstants.fullScreenAriaLabel,\n                        exitFullScreenAriaLabel: LocalizationConstants.exitFullScreenAriaLabel,\n                        pausedAriaLabel: LocalizationConstants.pauseAriaLabel,\n                        playingAriaLabel: LocalizationConstants.playingAriaLabel,\n                        videoTimeDurationLabel: LocalizationConstants.videoTimeDurationLabel,\n                        closedCaptionLabel: LocalizationConstants.closedCaptionLabel\n                    }}\n            />,\n            { attachTo: document.body.firstElementChild as HTMLElement }\n        );\n        const videoControlsBar = wrapper.instance() as VideoControls;\n        const buttons = document.querySelectorAll('button');\n        expect(buttons.length).toBe(7);\n        const optionButton = buttons[2];\n        expect(videoControlsBar.state.showMenu).toBe(false);\n        videoControlsBar.render();\n\n        // Test having focus and rerendering when button is clicked\n        optionButton.click();\n        wrapper.update();\n        expect(wrapper.find('div.msc-videoplayer__controls__menu').length).toBeGreaterThan(0);\n        expect(videoControlsBar.state.showMenu).toBe(true);\n\n        let menuButtons = wrapper.find('div.msc-videoplayer__controls__menu button');\n        expect(menuButtons.length).toBe(1);\n\n        let audioTrackButton = wrapper.find('div.msc-videoplayer__controls__menu button').first();\n        audioTrackButton.simulate('keyDown', { keyCode: KeyCodes.ArrowRight});\n\n        menuButtons = wrapper.find('div.msc-videoplayer__controls__menu button');\n        expect(menuButtons.length).toBe(3);\n\n        const audioDescriptionButton = wrapper.find('div.msc-videoplayer__controls__menu button').at(2);\n        audioDescriptionButton.simulate('click');\n\n        const backButton = wrapper.find('div.msc-videoplayer__controls__menu button').first();\n        backButton.simulate('keyDown', { keyCode: KeyCodes.ArrowLeft});\n\n        menuButtons = wrapper.find('div.msc-videoplayer__controls__menu button');\n        expect(menuButtons.length).toBe(1);\n\n        audioTrackButton = wrapper.find('div.msc-videoplayer__controls__menu button').first();\n        audioTrackButton.simulate('keyDown', { keyCode: KeyCodes.Escape});\n\n        wrapper.unmount();\n    });\n\n    // tslint:disable-next-line: max-func-body-length\n    it('should hide options menu when clicked anywhere on document', () => {\n        const playPosition: IPlayPosition = {\n            currentTime: 0,\n            startTime: 0,\n            endTime: 0,\n            bufferedDuration: 0\n        };\n\n        const optionMenu: IPlayerMenu = {\n            category: 'options',\n            id: 'videoTestID-options',\n            label: 'Options',\n            items: [\n                {\n                id: 'videoTestID-audioTracks',\n                label: 'Audio Tracks',\n                selected: false,\n                selectable: false,\n                subMenu: {\n                    category: 'audio-tracks',\n                    id: 'videoTestID-audio-tracks',\n                    label: 'Audio Tracks',\n                    items: [\n                    {\n                        id: '',\n                        label: 'Audio Tracks',\n                        ariaLabel: 'Audio Tracks - go back to previous menu',\n                        selectable: false,\n                        selected: false,\n                        persistOnClick: false,\n                        isBackButton: true\n                    },\n                    {\n                        id: '',\n                        label: 'Default Track',\n                        ariaLabel: 'Default Track',\n                        language: 'default',\n                        data: 'default',\n                        selectable: true,\n                        selected: false,\n                        persistOnClick: true\n                    },\n                    {\n                        label: 'Audio descriptions',\n                        language: 'daudio-en-us',\n                        data: 'https://ppe-video-cms-mr-microsoft-com.akamaized.net/cms/api/fabrikamsb/videofiledata/MAtCD0-daudioenus?ver=e1d0',\n                        id: 'videoTestID-audio-0',\n                        selected: false,\n                        selectable: true,\n                        persistOnClick: true\n                    }\n                    ]\n                }\n                }\n            ]\n        };\n\n        const spyMenuItemClick = jest.fn();\n        const spyMenuItemFocus = jest.fn();\n        const spyMenuItemBlur = jest.fn();\n\n        const wrapper = mount(\n            <VideoControls\n                    className='VideoControlBar'\n                    playing\n                    onPlayClick={undefined}\n                    isMuted\n                    onMuteClick = {undefined}\n                    onVolumeChange = {undefined}\n                    onProgressChange = {undefined}\n                    playPosition = {playPosition}\n                    currentVolume = {60}\n                    isInFullScreen\n                    toggleFullScreen = {undefined}\n                    optionMenu = {optionMenu}\n                    currentClosedCaptionsSetting={undefined}\n                    closedCaptionMenu={undefined}\n                    currentClosedCaptionLanguage={'en-us'}\n                    currentAudioTrack={'default'}\n                    isControlPanelVisible={true}\n                    onMenuItemClick={spyMenuItemClick}\n                    onMenuItemFocus={spyMenuItemFocus}\n                    onMenuItemBlur={spyMenuItemBlur}\n                    resources={{\n                        playAriaLabel: LocalizationConstants.playAriaLabel,\n                        pauseAriaLabel: LocalizationConstants.pauseAriaLabel,\n                        closeAriaLabel: LocalizationConstants.closeAriaLabel,\n                        muteAriaLabel: LocalizationConstants.muteAriaLabel,\n                        unMuteAriaLabel: LocalizationConstants.unMuteAriaLabel,\n                        fullScreenAriaLabel: LocalizationConstants.fullScreenAriaLabel,\n                        exitFullScreenAriaLabel: LocalizationConstants.exitFullScreenAriaLabel,\n                        pausedAriaLabel: LocalizationConstants.pauseAriaLabel,\n                        playingAriaLabel: LocalizationConstants.playingAriaLabel,\n                        videoTimeDurationLabel: LocalizationConstants.videoTimeDurationLabel,\n                        closedCaptionLabel: LocalizationConstants.closedCaptionLabel\n                    }}\n\n            />,\n            { attachTo: document.body.firstElementChild as HTMLElement }\n        );\n\n        const videoControlsBar = wrapper.instance() as VideoControls;\n        let buttons = document.querySelectorAll('button');\n        expect(buttons.length).toBe(7);\n        const optionButton = buttons[2];\n        expect(videoControlsBar.state.showMenu).toBe(false);\n        videoControlsBar.render();\n\n        // Test having focus and rerendering when button is clicked\n        optionButton.click();\n        wrapper.update();\n        expect(wrapper.find('div.msc-videoplayer__controls__menu').length).toBeGreaterThan(0);\n        expect(videoControlsBar.state.showMenu).toBe(true);\n\n        const clickEvent = new Event('click', { bubbles: true, cancelable: false });\n        document.dispatchEvent(clickEvent);\n        wrapper.update();\n        expect(videoControlsBar.state.showMenu).toBe(false);\n\n        optionButton.click();\n        wrapper.update();\n        expect(wrapper.find('div.msc-videoplayer__controls__menu').length).toBeGreaterThan(0);\n        expect(videoControlsBar.state.showMenu).toBe(true);\n\n        // For code coverage\n        const targetElement = jest.spyOn(clickEvent, 'target', 'get');\n\n        targetElement.mockImplementation(() => {\n            return optionButton;\n        });\n        document.dispatchEvent(clickEvent);\n\n        optionButton.click();\n        wrapper.update();\n        expect(wrapper.find('div.msc-videoplayer__controls__menu').length).toBeGreaterThan(0);\n\n        buttons = document.querySelectorAll('button');\n        expect(buttons.length).toBe(8);\n\n        targetElement.mockImplementation(() => {\n            return buttons[3];\n        });\n        document.dispatchEvent(clickEvent);\n\n        wrapper.update();\n        expect(videoControlsBar.state.showMenu).toBe(true);\n\n        wrapper.unmount();\n    });\n\n});\n\ndescribe('VideoControl button states updates upon clicking', () => {\n    it('Play Pause Button when click function undefined', () => {\n        const playPosition: IPlayPosition = {\n            currentTime: 0,\n            startTime: 0,\n            endTime: 0,\n            bufferedDuration: 0\n        };\n\n        const wrapper = mount(\n            <VideoControls\n                    className='VideoControlBar'\n                    playing\n                    onPlayClick={undefined}\n                    isMuted\n                    onMuteClick = {undefined}\n                    onVolumeChange = {undefined}\n                    onProgressChange = {undefined}\n                    playPosition = {playPosition}\n                    currentVolume = {0}\n                    isInFullScreen\n                    toggleFullScreen = {undefined}\n                    resources={{\n                        playAriaLabel: LocalizationConstants.playAriaLabel,\n                        pauseAriaLabel: LocalizationConstants.pauseAriaLabel,\n                        closeAriaLabel: LocalizationConstants.closeAriaLabel,\n                        muteAriaLabel: LocalizationConstants.muteAriaLabel,\n                        unMuteAriaLabel: LocalizationConstants.unMuteAriaLabel,\n                        fullScreenAriaLabel: LocalizationConstants.fullScreenAriaLabel,\n                        exitFullScreenAriaLabel: LocalizationConstants.exitFullScreenAriaLabel,\n                        pausedAriaLabel: LocalizationConstants.pauseAriaLabel,\n                        playingAriaLabel: LocalizationConstants.playingAriaLabel,\n                        seekBarLabel: LocalizationConstants.seekBarLabel,\n                        videoTimeDurationLabel: LocalizationConstants.videoTimeDurationLabel,\n                        closedCaptionLabel: LocalizationConstants.closedCaptionLabel\n                    }}\n            />,\n            { attachTo: document.body.firstElementChild as HTMLElement }\n        );\n        const videoControls = wrapper.instance() as VideoControls;\n        const buttons = document.querySelectorAll('button');\n        expect(buttons.length).toBe(6);\n        const play = buttons[0];\n        const pause = buttons[1];\n\n        // Verify expected initial state\n        expect(play.getAttribute('aria-hidden')).toBe('true');\n        expect(pause.getAttribute('aria-hidden')).toBe('false');\n        videoControls.render();\n\n        // Test having focus and rerendering when button is clicked, but clicked is undefined\n        play.click();\n        wrapper.update();\n\n        pause.click();\n        wrapper.update();\n\n        wrapper.unmount();\n    });\n\n    it('Mute Unmute Button when click function undefined', () => {\n        const playPosition: IPlayPosition = {\n            currentTime: 0,\n            startTime: 0,\n            endTime: 0,\n            bufferedDuration: 0\n        };\n\n        const wrapper = mount(\n            <VideoControls\n                    className='VideoControlBar'\n                    playing\n                    onPlayClick={undefined}\n                    isMuted\n                    onMuteClick = {undefined}\n                    onVolumeChange = {undefined}\n                    onProgressChange = {undefined}\n                    playPosition = {playPosition}\n                    currentVolume = {0}\n                    isInFullScreen\n                    toggleFullScreen = {undefined}\n                    resources={{\n                        playAriaLabel: LocalizationConstants.playAriaLabel,\n                        pauseAriaLabel: LocalizationConstants.pauseAriaLabel,\n                        closeAriaLabel: LocalizationConstants.closeAriaLabel,\n                        muteAriaLabel: LocalizationConstants.muteAriaLabel,\n                        unMuteAriaLabel: LocalizationConstants.unMuteAriaLabel,\n                        fullScreenAriaLabel: LocalizationConstants.fullScreenAriaLabel,\n                        exitFullScreenAriaLabel: LocalizationConstants.exitFullScreenAriaLabel,\n                        pausedAriaLabel: LocalizationConstants.pauseAriaLabel,\n                        playingAriaLabel: LocalizationConstants.playingAriaLabel,\n                        seekBarLabel: LocalizationConstants.seekBarLabel,\n                        videoTimeDurationLabel: LocalizationConstants.videoTimeDurationLabel,\n                        closedCaptionLabel: LocalizationConstants.closedCaptionLabel\n                    }}\n            />,\n            { attachTo: document.body.firstElementChild as HTMLElement }\n        );\n        const videoControlsBar = wrapper.instance() as VideoControls;\n        const buttons = document.querySelectorAll('button');\n        expect(buttons.length).toBe(6);\n        const mute = buttons[2];\n        const unMute = buttons[3];\n\n        // Verify expected initial state\n        expect(mute.getAttribute('aria-hidden')).toBe('true');\n        expect(unMute.getAttribute('aria-hidden')).toBe('false');\n        videoControlsBar.render();\n\n        // Test having focus and rerendering when button is clicked, but clicked is undefined\n        mute.click();\n        wrapper.update();\n\n        unMute.click();\n        wrapper.update();\n\n        wrapper.unmount();\n    });\n\n    it('FullScreen ExitFullScreen when click function undefined', () => {\n        const playPosition: IPlayPosition = {\n            currentTime: 0,\n            startTime: 0,\n            endTime: 0,\n            bufferedDuration: 0\n        };\n\n        const wrapper = mount(\n            <VideoControls\n                    className='VideoControlBar'\n                    playing\n                    onPlayClick={undefined}\n                    isMuted\n                    onMuteClick = {undefined}\n                    onVolumeChange = {undefined}\n                    onProgressChange = {undefined}\n                    playPosition = {playPosition}\n                    currentVolume = {0}\n                    isInFullScreen\n                    toggleFullScreen = {undefined}\n                    resources={{\n                        playAriaLabel: LocalizationConstants.playAriaLabel,\n                        pauseAriaLabel: LocalizationConstants.pauseAriaLabel,\n                        closeAriaLabel: LocalizationConstants.closeAriaLabel,\n                        muteAriaLabel: LocalizationConstants.muteAriaLabel,\n                        unMuteAriaLabel: LocalizationConstants.unMuteAriaLabel,\n                        fullScreenAriaLabel: LocalizationConstants.fullScreenAriaLabel,\n                        exitFullScreenAriaLabel: LocalizationConstants.exitFullScreenAriaLabel,\n                        pausedAriaLabel: LocalizationConstants.pauseAriaLabel,\n                        playingAriaLabel: LocalizationConstants.playingAriaLabel,\n                        seekBarLabel: LocalizationConstants.seekBarLabel,\n                        videoTimeDurationLabel: LocalizationConstants.videoTimeDurationLabel,\n                        closedCaptionLabel: LocalizationConstants.closedCaptionLabel\n                    }}\n            />,\n            { attachTo: document.body.firstElementChild as HTMLElement }\n        );\n        const videoControlsBar = wrapper.instance() as VideoControls;\n        const buttons = document.querySelectorAll('button');\n        expect(buttons.length).toBe(6);\n        const fullScreen = buttons[4];\n        const exitFulScreen = buttons[5];\n\n        // Verify expected initial state\n        expect(fullScreen.getAttribute('aria-hidden')).toBe('true');\n        expect(exitFulScreen.getAttribute('aria-hidden')).toBe('false');\n        videoControlsBar.render();\n\n        // Test having focus and rerendering when button is clicked, but clicked is undefined\n        fullScreen.click();\n        wrapper.update();\n\n        exitFulScreen.click();\n        wrapper.update();\n\n        wrapper.unmount();\n    });\n\n    it('Volume slider works when onChange function undefined', () => {\n        const volumeAutoHideTimeout: number = 2000;\n        const playPosition: IPlayPosition = {\n            currentTime: 0,\n            startTime: 0,\n            endTime: 0,\n            bufferedDuration: 0\n        };\n\n        const wrapper = mount(\n            <VideoControls\n                    className='VideoControlBar'\n                    playing\n                    onPlayClick={undefined}\n                    isMuted\n                    onMuteClick = {undefined}\n                    onVolumeChange = {undefined}\n                    onProgressChange = {undefined}\n                    playPosition = {playPosition}\n                    currentVolume = {50}\n                    isInFullScreen\n                    toggleFullScreen = {undefined}\n                    resources={{\n                        playAriaLabel: LocalizationConstants.playAriaLabel,\n                        pauseAriaLabel: LocalizationConstants.pauseAriaLabel,\n                        closeAriaLabel: LocalizationConstants.closeAriaLabel,\n                        muteAriaLabel: LocalizationConstants.muteAriaLabel,\n                        unMuteAriaLabel: LocalizationConstants.unMuteAriaLabel,\n                        fullScreenAriaLabel: LocalizationConstants.fullScreenAriaLabel,\n                        exitFullScreenAriaLabel: LocalizationConstants.exitFullScreenAriaLabel,\n                        pausedAriaLabel: LocalizationConstants.pauseAriaLabel,\n                        playingAriaLabel: LocalizationConstants.playingAriaLabel,\n                        seekBarLabel: LocalizationConstants.seekBarLabel,\n                        videoTimeDurationLabel: LocalizationConstants.videoTimeDurationLabel,\n                        closedCaptionLabel: LocalizationConstants.closedCaptionLabel\n                    }}\n            />,\n            { attachTo: document.body.firstElementChild as HTMLElement }\n        );\n        const videoControlsBar = wrapper.instance() as VideoControls;\n        const buttons = document.querySelectorAll('button');\n        expect(buttons.length).toBe(6);\n\n        videoControlsBar.render();\n        // Test having focus and rerendering when button is clicked\n        wrapper.find('div.action-toggle').at(1).simulate('mouseOver');\n        wrapper.update();\n\n        expect(videoControlsBar.state.showVolumeSlider).toBe(true);\n\n        wrapper.find('div#VolumeSliderThumb').simulate('keyDown', {keyCode: 37});\n\n        wrapper.find('div#VolumeSliderThumb').simulate('keyDown', {keyCode: 39});\n\n        wrapper.find('div.action-toggle').at(1).simulate('mouseleave');\n        wrapper.update();\n        setTimeout(() => {\n            expect(videoControlsBar.state.showVolumeSlider).toBe(false);\n            expect(wrapper.find('div.msc-videoplayer__controls__volumeslider__container').hasClass('hide')).toBe(true);\n        },         volumeAutoHideTimeout);\n        wrapper.unmount();\n    });\n\n    it('Video slider works when onChange function undefined', () => {\n        const playPosition: IPlayPosition = {\n            currentTime: 0,\n            startTime: 0,\n            endTime: 0,\n            bufferedDuration: 0\n        };\n\n        const wrapper = mount(\n            <VideoControls\n                    className='VideoControlBar'\n                    playing\n                    onPlayClick={undefined}\n                    isMuted\n                    onMuteClick = {undefined}\n                    onVolumeChange = {undefined}\n                    onProgressChange = {undefined}\n                    playPosition = {playPosition}\n                    currentVolume = {50}\n                    isInFullScreen\n                    toggleFullScreen = {undefined}\n                    resources={{\n                        playAriaLabel: LocalizationConstants.playAriaLabel,\n                        pauseAriaLabel: LocalizationConstants.pauseAriaLabel,\n                        closeAriaLabel: LocalizationConstants.closeAriaLabel,\n                        muteAriaLabel: LocalizationConstants.muteAriaLabel,\n                        unMuteAriaLabel: LocalizationConstants.unMuteAriaLabel,\n                        fullScreenAriaLabel: LocalizationConstants.fullScreenAriaLabel,\n                        exitFullScreenAriaLabel: LocalizationConstants.exitFullScreenAriaLabel,\n                        pausedAriaLabel: LocalizationConstants.pauseAriaLabel,\n                        playingAriaLabel: LocalizationConstants.playingAriaLabel,\n                        seekBarLabel: LocalizationConstants.seekBarLabel,\n                        videoTimeDurationLabel: LocalizationConstants.videoTimeDurationLabel,\n                        closedCaptionLabel: LocalizationConstants.closedCaptionLabel\n                    }}\n            />,\n            { attachTo: document.body.firstElementChild as HTMLElement }\n        );\n        const videoControlsBar = wrapper.instance() as VideoControls;\n\n        videoControlsBar.render();\n        // Test having focus and rerendering when button is clicked\n\n        wrapper.find('div#VideoSliderThumb').simulate('keyDown', {keyCode: 38});\n\n        wrapper.find('div#VideoSliderThumb').simulate('keyDown', {keyCode: 40});\n\n        wrapper.update();\n        wrapper.unmount();\n    });\n\n});\n"]}