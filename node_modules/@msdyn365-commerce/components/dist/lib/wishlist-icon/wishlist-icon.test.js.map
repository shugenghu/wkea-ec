{"version":3,"file":"wishlist-icon.test.js","sourceRoot":"./src/","sources":["wishlist-icon/wishlist-icon.test.tsx"],"names":[],"mappings":"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","sourcesContent":["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { ITelemetryContent } from '@msdyn365-commerce-modules/utilities';\nimport { buildMockCoreContext, ICoreContext } from '@msdyn365-commerce/core';\nimport * as React from 'react';\nimport { IWishlistIconComponentProps, WishListIconComponent } from './wishlist-icon.component';\n\nimport {render} from 'enzyme';\n\ndescribe('wishlist icon tests - auth scenario', () => {\n    const mockCoreContext = buildMockCoreContext({app: {config: {hideRating: false}}}) as ICoreContext;\n    const telemetryContent = {  pageName: 'Homepage', moduleName: 'Wishlist icon', telemetry: mockCoreContext.telemetry} as ITelemetryContent;\n    it('renders correctly', () => {\n        const mockProps: IWishlistIconComponentProps = {\n            context: buildMockCoreContext({}),\n            wishlistTooltipText: 'My wishlist',\n            id: 'id',\n            typeName: 'typeName',\n            data: {},\n            telemetryContent: telemetryContent\n        };\n        mockProps.context.request.user.isAuthenticated = true;\n\n        const component = render(<WishListIconComponent {...mockProps} />);\n        expect(component).toMatchSnapshot();\n    });\n\n    it('renders correctly without class name', () => {\n        const mockProps: IWishlistIconComponentProps = {\n            context: buildMockCoreContext({}),\n            wishlistTooltipText: 'My wishlist',\n            id: 'id',\n            typeName: 'typeName',\n            data: {},\n            telemetryContent: telemetryContent\n        };\n        mockProps.context.request.user.isAuthenticated = true;\n\n        const component = render(<WishListIconComponent {...mockProps} />);\n        expect(component).toMatchSnapshot();\n    });\n});\n\ndescribe('wishlist icon tests - anon scenario', () => {\n    const mockCoreContext = buildMockCoreContext({app: {config: {hideRating: false}}}) as ICoreContext;\n    const telemetryContent = {  pageName: 'Homepage', moduleName: 'Wishlist icon', telemetry: mockCoreContext.telemetry} as ITelemetryContent;\n\n    it('renders correctly', () => {\n        const mockProps: IWishlistIconComponentProps = {\n            context: buildMockCoreContext({}),\n            wishlistTooltipText: 'My wishlist',\n            id: 'id',\n            typeName: 'typeName',\n            data: {},\n            telemetryContent: telemetryContent\n        };\n        mockProps.context.request.user.isAuthenticated = false;\n\n        const component = render(<WishListIconComponent {...mockProps} />);\n        expect(component).toMatchSnapshot();\n    });\n\n    it('renders correctly without class name', () => {\n        const mockProps: IWishlistIconComponentProps = {\n            context: buildMockCoreContext({}),\n            wishlistTooltipText: 'My wishlist',\n            id: 'id',\n            typeName: 'typeName',\n            data: {},\n            telemetryContent: telemetryContent\n        };\n        mockProps.context.request.user.isAuthenticated = false;\n\n        const component = render(<WishListIconComponent {...mockProps} />);\n        expect(component).toMatchSnapshot();\n    });\n});"]}