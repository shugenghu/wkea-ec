import { Button, getPayloadObject, getTelemetryAttributes, onTelemetryClick, UncontrolledTooltip } from '@msdyn365-commerce-modules/utilities';
import { getUrlSync, msdyn365Commerce } from '@msdyn365-commerce/core';
import classname from 'classnames';
import * as React from 'react';
const WishlistIconComponentActions = {};
const WishlistIcon = (props) => {
    const wishlistIconRef = React.createRef();
    const text = props.wishlistTooltipText;
    const showButtonIconTooltip = props.showButtonTooltip;
    const wishlistUrl = getUrlSync('wishlist', props.context.actionContext);
    const signInUrl = `${props.context.request.user.signInUrl}?ru=${wishlistUrl}`;
    const url = props.context.request.user.isAuthenticated ? wishlistUrl : signInUrl;
    const showTooltip = showButtonIconTooltip !== undefined ? showButtonIconTooltip : true;
    const payLoad = getPayloadObject('click', props.telemetryContent, text, '');
    const attributes = getTelemetryAttributes(props.telemetryContent, payLoad);
    return (React.createElement(React.Fragment, null,
        React.createElement(Button, Object.assign({ className: classname('msc-wishlist-icon', props.className), href: url, "aria-label": text, innerRef: wishlistIconRef }, attributes, { onClick: onTelemetryClick(props.telemetryContent, payLoad, text) }),
            React.createElement("span", { className: 'msc-wishlist-icon__text' }, text)),
        showTooltip && React.createElement(UncontrolledTooltip, { trigger: 'hover focus', target: wishlistIconRef }, text)));
};
export const WishListIconComponent = msdyn365Commerce.createComponent('WishListIcon', { component: WishlistIcon, ...WishlistIconComponentActions });
//# sourceMappingURL=wishlist-icon.component.js.map