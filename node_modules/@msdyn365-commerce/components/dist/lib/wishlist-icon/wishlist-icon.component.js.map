{"version":3,"file":"wishlist-icon.component.js","sourceRoot":"./src/","sources":["wishlist-icon/wishlist-icon.component.tsx"],"names":[],"mappings":"AAKA,OAAO,EAAE,MAAM,EAAE,gBAAgB,EAAE,sBAAsB,EAAqB,gBAAgB,EAAE,mBAAmB,EAAE,MAAM,sCAAsC,CAAC;AAClK,OAAO,EAAE,UAAU,EAA+B,gBAAgB,EAAE,MAAM,yBAAyB,CAAC;AACpG,OAAO,SAAS,MAAM,YAAY,CAAC;AACnC,OAAO,KAAK,KAAK,MAAM,OAAO,CAAC;AAY/B,MAAM,4BAA4B,GAAG,EACpC,CAAC;AAOF,MAAM,YAAY,GAA0C,CAAC,KAAkC,EAAE,EAAE;IAC/F,MAAM,eAAe,GAAuC,KAAK,CAAC,SAAS,EAAE,CAAC;IAC9E,MAAM,IAAI,GAAG,KAAK,CAAC,mBAAmB,CAAC;IACvC,MAAM,qBAAqB,GAAI,KAAK,CAAC,iBAAiB,CAAC;IACvD,MAAM,WAAW,GAAG,UAAU,CAAC,UAAU,EAAE,KAAK,CAAC,OAAO,CAAC,aAAa,CAAC,CAAC;IACxE,MAAM,SAAS,GAAG,GAAG,KAAK,CAAC,OAAO,CAAC,OAAO,CAAC,IAAI,CAAC,SAAS,OAAO,WAAW,EAAE,CAAC;IAC9E,MAAM,GAAG,GAAG,KAAK,CAAC,OAAO,CAAC,OAAO,CAAC,IAAI,CAAC,eAAe,CAAC,CAAC,CAAC,WAAW,CAAC,CAAC,CAAC,SAAS,CAAC;IACjF,MAAM,WAAW,GAAG,qBAAqB,KAAK,SAAS,CAAC,CAAC,CAAC,qBAAqB,CAAA,CAAC,CAAC,IAAI,CAAC;IAGtF,MAAM,OAAO,GAAG,gBAAgB,CAAC,OAAO,EAAE,KAAK,CAAC,gBAAiB,EAAE,IAAK,EAAE,EAAE,CAAC,CAAC;IAC9E,MAAM,UAAU,GAAG,sBAAsB,CAAC,KAAK,CAAC,gBAAiB,EAAE,OAAO,CAAC,CAAC;IAE5E,OAAO,CACH;QACA,oBAAC,MAAM,kBACH,SAAS,EAAE,SAAS,CAAC,mBAAmB,EAAE,KAAK,CAAC,SAAS,CAAC,EAC1D,IAAI,EAAE,GAAG,gBACG,IAAI,EAChB,QAAQ,EAAE,eAAe,IACrB,UAAU,IACd,OAAO,EAAE,gBAAgB,CAAC,KAAK,CAAC,gBAAiB,EAAE,OAAO,EAAE,IAAK,CAAC;YAElE,8BAAM,SAAS,EAAC,yBAAyB,IAAE,IAAI,CAAQ,CAClD;QACN,WAAW,IAAI,oBAAC,mBAAmB,IAAC,OAAO,EAAE,aAAa,EAAE,MAAM,EAAE,eAAe,IAAG,IAAI,CAAuB,CACjH,CACN,CAAC;AACN,CAAC,CAAC;AAGF,MAAM,CAAC,MAAM,qBAAqB,GAAyD,gBAAgB,CAAC,eAAe,CACvH,cAAc,EACd,EAAE,SAAS,EAAE,YAAY,EAAE,GAAG,4BAA4B,EAAE,CAC/D,CAAC","sourcesContent":["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { Button, getPayloadObject, getTelemetryAttributes, ITelemetryContent, onTelemetryClick, UncontrolledTooltip } from '@msdyn365-commerce-modules/utilities';\nimport { getUrlSync, IComponent, IComponentProps, msdyn365Commerce } from '@msdyn365-commerce/core';\nimport classname from 'classnames';\nimport * as React from 'react';\n\nexport interface IWishlistIconComponentProps extends IComponentProps<{}> {\n    className?: string;\n    wishlistTooltipText: string;\n    showButtonTooltip?: boolean;\n    telemetryContent?: ITelemetryContent;\n}\n\nexport interface IWishlistIconComponent extends IComponent<IWishlistIconComponentProps> {\n}\n\nconst WishlistIconComponentActions = {\n};\n\n/**\n *\n * WishlistIcon component\n * @extends {React.PureComponent<IWishlistIconProps>}\n */\nconst WishlistIcon: React.FC<IWishlistIconComponentProps> = (props: IWishlistIconComponentProps) => {\n    const wishlistIconRef: React.RefObject<HTMLButtonElement> = React.createRef();\n    const text = props.wishlistTooltipText;\n    const showButtonIconTooltip  = props.showButtonTooltip;\n    const wishlistUrl = getUrlSync('wishlist', props.context.actionContext);\n    const signInUrl = `${props.context.request.user.signInUrl}?ru=${wishlistUrl}`;\n    const url = props.context.request.user.isAuthenticated ? wishlistUrl : signInUrl;\n    const showTooltip = showButtonIconTooltip !== undefined ? showButtonIconTooltip: true;\n\n    // Construct telemetry attribute to render\n    const payLoad = getPayloadObject('click', props.telemetryContent!, text!, '');\n    const attributes = getTelemetryAttributes(props.telemetryContent!, payLoad);\n\n    return (\n        <>\n        <Button\n            className={classname('msc-wishlist-icon', props.className)}\n            href={url}\n            aria-label={text}\n            innerRef={wishlistIconRef}\n            {...attributes}\n            onClick={onTelemetryClick(props.telemetryContent!, payLoad, text!)}\n        >\n            <span className='msc-wishlist-icon__text'>{text}</span>\n        </Button>\n        {  showTooltip && <UncontrolledTooltip trigger={'hover focus'} target={wishlistIconRef}>{text}</UncontrolledTooltip>}\n        </>\n    );\n};\n\n// @ts-ignore\nexport const WishListIconComponent: React.FunctionComponent<IWishlistIconComponentProps> = msdyn365Commerce.createComponent<IWishlistIconComponent>(\n    'WishListIcon',\n    { component: WishlistIcon, ...WishlistIconComponentActions }\n);\n"]}