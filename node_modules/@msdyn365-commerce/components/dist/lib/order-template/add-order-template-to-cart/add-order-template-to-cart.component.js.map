{"version":3,"file":"add-order-template-to-cart.component.js","sourceRoot":"./src/","sources":["order-template/add-order-template-to-cart/add-order-template-to-cart.component.tsx"],"names":[],"mappings":"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","sourcesContent":["import classnames from 'classnames';\nimport React, { useState } from 'react';\n\nimport { Button, getPayloadObject, getTelemetryAttributes, IPopupProductsProps, ITelemetryContent, PopupProducts, TelemetryConstant } from '@msdyn365-commerce-modules/utilities';\nimport { IComponent, IComponentProps, msdyn365Commerce } from '@msdyn365-commerce/core';\n\nimport { addOrderTemplateToCartAction, AddOrderTemplateToCartInput } from '@msdyn365-commerce-modules/retail-actions';\nimport { OrderTemplate } from '@msdyn365-commerce-modules/retail-actions';\nimport { FullProduct } from '@msdyn365-commerce/commerce-entities';\nimport { ILinesAddedToCartDialogResources, LinesAddedToCartDialog } from '../lines-added-to-cart-dialog/lines-added-to-cart-dialog.component';\n\nexport interface IAddOrderTemplateToCartComponentData {\n    orderTemplate: OrderTemplate;\n}\n\nexport interface IAddOrderTemplateToCartComponentProps extends IComponentProps<IAddOrderTemplateToCartComponentData> {\n    className?: string;\n    addToCartText: string;\n    telemetryContent?: ITelemetryContent;\n    dialogStrings: {\n        closeWindowButtonText: string;\n        addToCartFailureMessage: string;\n        addToCartSuccessMessage: string;\n        addToCartProcessMessage: string;\n        linesAddedToCartDialogResources: ILinesAddedToCartDialogResources;\n    };\n}\n\nexport declare type IAddToCartActionFailureReason = 'EMPTYINPUT' | 'MISSINGDIMENSION' | 'OUTOFSTOCK' | 'CARTACTIONFAILED'; // rename to used method\n\nexport interface IAddOrderTemplateToCartComponent extends IComponent<IAddOrderTemplateToCartComponentProps> {\n    onClick(): (event: React.MouseEvent<HTMLElement>, props: IAddOrderTemplateToCartComponentProps) => void;\n}\n\nconst onClick = async (\n    _event: React.MouseEvent<HTMLElement>,\n    props: IAddOrderTemplateToCartComponentProps,\n    setUploadStatus: (uploadStatus: addOrderTemplateToCartStatus) => void,\n    openModal: (opened: boolean) => void,\n    setLinesAddedToCartDialogOpen: (opened: boolean) => void,\n    setAddedLinesCount: (value: number) => void): Promise<void> => {\n        openModal(true);\n        setUploadStatus('LOADING');\n\n        const { context } = props;\n        const addOrderTemplateToCartInput = new AddOrderTemplateToCartInput(props.data.orderTemplate.productList.Id);\n        const addedCartLines = await addOrderTemplateToCartAction(addOrderTemplateToCartInput, context.actionContext);\n        setAddedLinesCount(addedCartLines.length);\n        openModal(false);\n        setTimeout(() => {\n            setLinesAddedToCartDialogOpen(true);\n        }, 500); // tslint:disable-line:align\n};\n\nconst AddToCartComponentActions = {\n    onClick: onClick\n};\n\nexport type addOrderTemplateToCartStatus = 'LOADING' | 'SUCCESS' | 'FAILED' | 'WAITING';\n\nconst _getModalText = (status: addOrderTemplateToCartStatus, props: IAddOrderTemplateToCartComponentProps) => {\n    const { dialogStrings } = props;\n    const { addToCartFailureMessage, addToCartSuccessMessage, addToCartProcessMessage } = dialogStrings;\n\n    if (status === 'LOADING') {\n        return `${addToCartProcessMessage}...`;\n    }\n\n    if (status === 'SUCCESS') {\n        return addToCartSuccessMessage;\n    }\n\n    if (status === 'FAILED') {\n        return addToCartFailureMessage;\n    }\n\n    return '';\n};\n\nconst AddOrderTemplate: React.FC<IAddOrderTemplateToCartComponentProps> = (props: IAddOrderTemplateToCartComponentProps) => {\n    const [uploadStatus, setUploadStatus] = useState<addOrderTemplateToCartStatus>('WAITING');\n    const [modalOpen, setModalOpen] = useState(false);\n    const [addedLinesCount, setAddedLinesCount] = useState(0);\n    const [linesAddedToCartDialogOpen, setLinesAddedToCartDialogOpen] = useState(false);\n\n    const onClickHandler = async (event: React.MouseEvent<HTMLElement>) => {\n        await AddToCartComponentActions.onClick(event, props, setUploadStatus, setModalOpen, setLinesAddedToCartDialogOpen, setAddedLinesCount);\n    };\n    const closeLinesAddedToCartDialog = () => {\n        setLinesAddedToCartDialogOpen(false);\n    };\n\n    const modalText = _getModalText(uploadStatus, props);\n    const processStatusClass = uploadStatus.toLowerCase();\n    const dialogStrings = { closeWindowButtonText: props.dialogStrings.closeWindowButtonText };\n    const payLoad = getPayloadObject('click', props.telemetryContent!, TelemetryConstant.AddOrderTemplateToCart);\n    const addOrderTemplateAttribute = getTelemetryAttributes(props.telemetryContent!, payLoad);\n\n    const popupProps: IPopupProductsProps = {\n        dialogStrings: dialogStrings,\n        className: 'msc-add-order-template-to-cart',\n        processStatusClass: processStatusClass,\n        text: modalText,\n        modalOpen: modalOpen,\n        setModalOpen: setModalOpen\n    };\n\n    const renderModalPopup = <PopupProducts {...popupProps} />;\n\n    const products = props.data.orderTemplate.orderTemplateLines.map(line => line.fullProduct).filter(fullProduct => fullProduct) as FullProduct[];\n\n    return (\n        <>\n            {renderModalPopup}\n            <Button\n                className={classnames('msc-add-order-template-to-cart ', props.className)}\n                aria-label={props.addToCartText}\n                disabled={props.data.orderTemplate.totalLines === 0}\n                onClick={onClickHandler}\n                {...addOrderTemplateAttribute}\n            >\n                {props.addToCartText}\n            </Button>\n            {\n                <LinesAddedToCartDialog\n                    className={'msc-lines-added-to-cart-dialog'}\n                    id={props.id}\n                    typeName={props.typeName}\n                    context={props.context}\n                    dialogStrings={props.dialogStrings.linesAddedToCartDialogResources}\n                    data={{\n                        linesCount: addedLinesCount,\n                        orderTemplate: props.data.orderTemplate.productList,\n                        products: products\n                    }}\n                    modalOpen={linesAddedToCartDialogOpen}\n                    onClose={closeLinesAddedToCartDialog}\n                />\n            }\n        </>\n    );\n};\n\n// @ts-ignore\nexport const AddOrderTemplateToCartComponent: React.FunctionComponent<IAddOrderTemplateToCartComponentProps> = msdyn365Commerce.createComponent<IAddOrderTemplateToCartComponent>(\n    'AddOrderTemplate',\n    { component: AddOrderTemplate, ...AddToCartComponentActions }\n);"]}