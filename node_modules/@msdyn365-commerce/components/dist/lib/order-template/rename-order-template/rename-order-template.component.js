import React from 'react';
import { Button } from '@msdyn365-commerce-modules/utilities';
import { msdyn365Commerce } from '@msdyn365-commerce/core';
import { OrderTemplateNameDialog } from '../order-template-name-dialog/order-template-name-dialog.component';
const RenameOrderTemplateComponentActions = {};
const RenameOrderTemplate = (props) => {
    const { data: { orderTemplate }, renameOrderTemplateButtonText, renameOrderTemplateDialogStrings, context } = props;
    const [renameOrderTemplateDialogOpen, setOrderTemplateNameDialogOpen] = React.useState(false);
    const onOrderTemplateNameCancel = () => {
        context.telemetry.debug('Rename of template was canceled.');
    };
    const onRenameButtonClick = () => {
        setOrderTemplateNameDialogOpen(true);
    };
    return (React.createElement(React.Fragment, null,
        React.createElement(Button, { className: 'ms-order-template-action-bar__rename-template-button', onClick: onRenameButtonClick }, renameOrderTemplateButtonText),
        React.createElement(OrderTemplateNameDialog, { existingOrderTemplate: orderTemplate, isUpdateDialog: true, className: 'msc-order-template-name-dialog', modalOpen: renameOrderTemplateDialogOpen, setModalOpen: setOrderTemplateNameDialogOpen, context: context, id: props.id, data: props.data, orderTemplateName: props.data.orderTemplate.Name, typeName: props.typeName, dialogStrings: renameOrderTemplateDialogStrings, onCancel: onOrderTemplateNameCancel, onSuccess: props.onRenameTemplate })));
};
export const RenameOrderTemplateComponent = msdyn365Commerce.createComponent('RenameOrderTemplate', { component: RenameOrderTemplate, ...RenameOrderTemplateComponentActions });
//# sourceMappingURL=rename-order-template.component.js.map