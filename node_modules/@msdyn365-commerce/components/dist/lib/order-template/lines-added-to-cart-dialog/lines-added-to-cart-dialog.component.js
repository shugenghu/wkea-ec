import { Button, Modal, ModalBody, ModalFooter, ModalHeader } from '@msdyn365-commerce-modules/utilities';
import { getUrlSync } from '@msdyn365-commerce/core';
import React from 'react';
import { OrderTemplateProductsPreviewComponent } from '../order-templates-list/order-template-products-preview';
export const LinesAddedToCartDialog = (dialogProps) => {
    const { dialogStrings, className, context, modalOpen, imageSettings, data: { orderTemplate, products, linesCount } } = dialogProps;
    const getCartPageUrl = () => {
        return getUrlSync('cart', context.actionContext) || '';
    };
    const close = () => {
        dialogProps.onClose();
    };
    const lineItemsString = linesCount === 1 ? dialogStrings.linesAddedToCartHeaderLinesOneText : dialogStrings.linesAddedToCartHeaderLinesFormatText.replace('{0}', linesCount.toString());
    return (React.createElement(Modal, { isOpen: modalOpen, className: `${className}` },
        React.createElement(ModalHeader, { className: `${className}__dialog__header`, toggle: close },
            React.createElement("b", null, dialogStrings.linesAddedToCartHeaderItemsOneText),
            React.createElement("span", null, dialogStrings.linesAddedToCartHeaderMessageText)),
        React.createElement(ModalBody, { className: `${className}__dialog__body` },
            React.createElement("div", { className: `${className}__dialog__content` },
                React.createElement(OrderTemplateProductsPreviewComponent, { context: context, className: `${className}__dialog`, products: products, imageSettings: imageSettings }),
                React.createElement("div", { className: `${className}__dialog__description` },
                    React.createElement("div", { className: `${className}__dialog__order-template-name` }, orderTemplate.Name),
                    React.createElement("div", { className: `${className}__dialog__order-template-items` }, lineItemsString)))),
        React.createElement(ModalFooter, { className: `${className}__dialog__footer` },
            React.createElement(Button, { className: `${className}__dialog__view-cart-button`, title: dialogStrings.viewCartButtonText, href: getCartPageUrl() }, dialogStrings.viewCartButtonText),
            React.createElement(Button, { className: `${className}__dialog__continue-shopping`, title: dialogStrings.orderTemplateCloseButtonText, onClick: close }, dialogStrings.orderTemplateCloseButtonText))));
};
//# sourceMappingURL=lines-added-to-cart-dialog.component.js.map