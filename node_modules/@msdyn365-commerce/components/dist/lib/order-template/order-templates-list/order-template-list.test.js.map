{"version":3,"file":"order-template-list.test.js","sourceRoot":"./src/","sources":["order-template/order-templates-list/order-template-list.test.tsx"],"names":[],"mappings":"AAAA,OAAO,EAAE,MAAM,EAAE,MAAM,QAAQ,CAAC;AAChC,OAAO,KAAK,KAAK,MAAM,OAAO,CAAC;AAG/B,OAAO,EAAE,oBAAoB,EAAgB,MAAM,yBAAyB,CAAC;AAE7E,OAAO,EAAE,sBAAsB,EAAE,MAAM,uBAAuB,CAAC;AAE/D,QAAQ,CAAC,wBAAwB,EAAE,GAAG,EAAE;IACpC,IAAI,eAA6B,CAAC;IAClC,MAAM,eAAe,GAAoB;QACrC,aAAa,EAAE,iBAAiB;QAChC,MAAM,EAAE,SAAS;QACjB,SAAS,EAAE,EAAE;QACb,QAAQ,EAAE,EAAE;QACZ,aAAa,EAAE,IAAI;KACtB,CAAC;IACF,MAAM,aAAa,GAAkB;QACjC,WAAW,EAAE;YACT,EAAE,EAAE,IAAI;YACR,gBAAgB,EAAE,CAAC,eAAe,CAAC;SACtC;QACD,kBAAkB,EAAE,CAAC,EAAE,eAAe,EAAE,eAAe,EAAE,CAAC;QAC1D,UAAU,EAAE,CAAC;KAChB,CAAC;IACF,MAAM,uBAAuB,GAAG,KAAK,IAAI,EAAE;QACvC,OAAO;IACX,CAAC,CAAC;IAEF,UAAU,CAAC,GAAG,EAAE;QACZ,eAAe,GAAG,oBAAoB,CAAC,EAAC,GAAG,EAAE,EAAC,MAAM,EAAE,EAAC,gBAAgB,EAAE,KAAK,EAAE,mBAAmB,EAAE,CAAC,EAAC,EAAC,EAAC,CAAiB,CAAC;IAC/H,CAAC,CAAC,CAAC;IAEH,EAAE,CAAC,mCAAmC,EAAE,GAAG,EAAE;QACzC,MAAM,sBAAsB,GAAG,MAAM,CAAC,CAClC,oBAAC,sBAAsB,IACnB,OAAO,EAAE,eAAe,EACxB,SAAS,EAAE,YAAY,EACvB,aAAa,EAAE,aAAa,EAC5B,gBAAgB,EAAE,kBAAkB,EACpC,aAAa,EAAE,eAAe,EAC9B,mBAAmB,EAAE,uBAAuB,GAC9C,CACL,CAAC,CAAC;QACH,MAAM,CAAC,sBAAsB,CAAC,CAAC,eAAe,EAAE,CAAC;IACrD,CAAC,CAAC,CAAC;AACP,CAAC,CAAC,CAAC","sourcesContent":["import { render } from 'enzyme';\nimport * as React from 'react';\n\nimport { OrderTemplate } from '@msdyn365-commerce-modules/retail-actions';\nimport { buildMockCoreContext, ICoreContext } from '@msdyn365-commerce/core';\nimport { ProductListLine } from '@msdyn365-commerce/retail-proxy';\nimport { OrderTemplateComponent } from './order-template-list';\n\ndescribe('OrderTemplateComponent', () => {\n    let mockCoreContext: ICoreContext;\n    const productListLine: ProductListLine = {\n        ProductListId: 'product-list-id',\n        LineId: 'line-id',\n        ProductId: 42,\n        Quantity: 12,\n        UnitOfMeasure: 'ea'\n    };\n    const orderTemplate: OrderTemplate = {\n        productList: {\n            Id: 'id',\n            ProductListLines: [productListLine]\n        },\n        orderTemplateLines: [{ productListLine: productListLine }],\n        totalLines: 0\n    };\n    const onOrderTemplateSelected = async () => {\n        return;\n    };\n\n    beforeEach(() => {\n        mockCoreContext = buildMockCoreContext({app: {config: {enableStockCheck: false, outOfStockThreshold: 5}}}) as ICoreContext;\n    });\n\n    it('renders correctly with all params', () => {\n        const orderTemplateComponent = render((\n            <OrderTemplateComponent\n                context={mockCoreContext}\n                className={'class-name'}\n                orderTemplate={orderTemplate}\n                actionButtonText={'actionButtonText'}\n                lineItemsText={'lineItemsText'}\n                orderTemplateAction={onOrderTemplateSelected}\n            />\n        ));\n        expect(orderTemplateComponent).toMatchSnapshot();\n    });\n});"]}