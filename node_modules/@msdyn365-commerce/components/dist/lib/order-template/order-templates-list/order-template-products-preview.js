import { getFallbackImageUrl } from '@msdyn365-commerce-modules/retail-actions';
import { Image } from '@msdyn365-commerce/core';
import classNames from 'classnames';
import * as React from 'react';
export const OrderTemplateProductsPreviewComponent = (props) => {
    const { products, className, imageSettings } = props;
    return (React.createElement("div", { className: `${className}__products` }, renderOrderTemplateImages(props.context, `${className}__products`, products, imageSettings)));
};
const renderOrderTemplateImage = (context, className, product, imageSettings) => {
    const defaultImageSettings = {
        viewports: {
            xs: { q: `w=140&h=140&m=6`, w: 0, h: 0 },
            lg: { q: `w=140&h=140&m=6`, w: 0, h: 0 },
            xl: { q: `w=140&h=140&m=6`, w: 0, h: 0 }
        },
        lazyload: true
    };
    return (React.createElement("div", { className: `${className}__image-props` },
        React.createElement(Image, { src: product.ProductDetails.PrimaryImageUrl || '', fallBackSrc: getFallbackImageUrl(product.ProductDetails.ItemId, context.actionContext.requestContext.apiSettings) || '', gridSettings: context.request.gridSettings, imageSettings: imageSettings || defaultImageSettings, loadFailureBehavior: 'empty' })));
};
const renderOrderTemplateImages = (context, className, products, imageSettings) => {
    return (React.createElement("div", { className: `${className}__image-container` },
        React.createElement("div", { className: 'row' },
            React.createElement("div", { className: classNames(classNames, 'column') },
                React.createElement("div", { className: `${className}__image-props` }, products.length > 0 && renderOrderTemplateImage(context, className, products[0], imageSettings))),
            React.createElement("div", { className: classNames(classNames, 'column') },
                React.createElement("div", { className: `${className}__image-props` }, products.length > 1 && renderOrderTemplateImage(context, className, products[1], imageSettings)))),
        React.createElement("div", { className: 'row' },
            React.createElement("div", { className: classNames(classNames, 'column') },
                React.createElement("div", { className: `${className}__image-props` }, products.length > 2 && renderOrderTemplateImage(context, className, products[2], imageSettings))),
            React.createElement("div", { className: classNames(classNames, 'column') },
                React.createElement("div", { className: `${className}__image-props` }, products.length > 3 && renderOrderTemplateImage(context, className, products[3], imageSettings))))));
};
//# sourceMappingURL=order-template-products-preview.js.map