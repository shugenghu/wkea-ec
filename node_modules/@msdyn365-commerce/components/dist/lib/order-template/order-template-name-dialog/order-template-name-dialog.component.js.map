{"version":3,"file":"order-template-name-dialog.component.js","sourceRoot":"./src/","sources":["order-template/order-template-name-dialog/order-template-name-dialog.component.tsx"],"names":[],"mappings":"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","sourcesContent":["import { createOrderTemplate, CreateOrderTemplateInput, updateOrderTemplateHeader, UpdateOrderTemplateHeaderInput } from '@msdyn365-commerce-modules/retail-actions';\nimport { Button, Modal, ModalBody, ModalFooter, ModalHeader } from '@msdyn365-commerce-modules/utilities';\nimport { IComponentProps } from '@msdyn365-commerce/core';\nimport { ProductList } from '@msdyn365-commerce/retail-proxy';\nimport React, { useState } from 'react';\n\nexport interface IOrderTemplateNameDialogResources {\n    orderTemplateHeaderLabel: string;\n    orderTemplateTitleLabel: string;\n    orderTemplateNameAriaLabel: string;\n    orderTemplateDescription: string;\n    defaultOrderTemplateName: string;\n    orderTemplateButtonLabel: string;\n    orderTemplateCancelButtonLabel: string;\n}\n\nexport interface IOrderTemplateNameDialogProps extends IComponentProps {\n    isUpdateDialog: boolean | undefined;\n    existingOrderTemplate?: ProductList;\n    className: string;\n    orderTemplateName?: string;\n    dialogStrings: IOrderTemplateNameDialogResources;\n    modalOpen: boolean | undefined;\n    setModalOpen(newValue: boolean): void;\n    onCancel(): void;\n    onSuccess(orderTemplate: ProductList): Promise<void>;\n}\n\nexport const OrderTemplateNameDialog = (dialogProps: IOrderTemplateNameDialogProps) => {\n    const {\n        isUpdateDialog,\n        existingOrderTemplate,\n        dialogStrings,\n        className,\n        modalOpen,\n        setModalOpen,\n        onCancel,\n        onSuccess,\n        context\n    } = dialogProps;\n\n    if (!dialogStrings) {\n        return null;\n    }\n\n    const [orderTemplateName, setOrderTemplateName] = useState(dialogProps.orderTemplateName);\n\n    const cancel: () => void = () => {\n        setModalOpen(false);\n        onCancel();\n    };\n\n    const submit: () => Promise<void> = async () => {\n        dialogProps.orderTemplateName = orderTemplateName || dialogStrings.defaultOrderTemplateName;\n        if (isUpdateDialog) {\n            if (existingOrderTemplate) {\n                existingOrderTemplate.Name = dialogProps.orderTemplateName;\n                const input: UpdateOrderTemplateHeaderInput = new UpdateOrderTemplateHeaderInput(existingOrderTemplate);\n                const orderTemplate: ProductList = await updateOrderTemplateHeader(input, context.actionContext);\n                setModalOpen(false);\n                await onSuccess(orderTemplate);\n            } else {\n                context.telemetry.error('You need to pass ProductList instance for update.');\n                throw Error('Unexpected error: existing order template was not set.');\n            }\n        } else {\n            const input: CreateOrderTemplateInput = new CreateOrderTemplateInput(dialogProps.orderTemplateName!);\n            const orderTemplate: ProductList = await createOrderTemplate(input, context.actionContext);\n            setModalOpen(false);\n            await onSuccess(orderTemplate);\n        }\n    };\n\n    const updateOrderTemplateName = (event: React.ChangeEvent<HTMLInputElement>) => {\n        setOrderTemplateName(event.target.value);\n    };\n\n    let inputFieldRef: HTMLInputElement | null;\n    const setFocus = () => { inputFieldRef?.focus(); };\n\n    return (\n        <Modal isOpen={modalOpen} className={`${className}`} onOpened={setFocus}>\n            <ModalHeader className={`${className}__dialog__header`} toggle={cancel}>\n                <span>{dialogStrings.orderTemplateHeaderLabel}</span>\n            </ModalHeader>\n            <ModalBody className={`${className}__dialog__body`}>\n                <div className={`${className}__dialog__content`}>\n                    <label\n                        className={`${className}__dialog__order-template-name-label`}\n                        htmlFor={`${className}__dialog__order-template-name`}\n                    >\n                        {dialogStrings.orderTemplateTitleLabel}\n                    </label>\n                    <input\n                        id={`${className}__dialog__order-template-name`}\n                        className={`${className}__dialog__order-template-name`}\n                        type='text'\n                        aria-label={dialogStrings.orderTemplateNameAriaLabel}\n                        placeholder={dialogStrings.defaultOrderTemplateName}\n                        onChange={updateOrderTemplateName}\n                        value={orderTemplateName}\n                        maxLength={250}\n                        ref={(inputRef) => { inputFieldRef = inputRef; }}\n                    />\n                    <div className={`${className}__dialog__description`}>{dialogStrings.orderTemplateDescription}</div>\n                </div>\n            </ModalBody>\n            <ModalFooter\n                className={`${className}__dialog__footer`}\n            >\n                <Button\n                    className={`${className}__dialog__create-order-template-button`}\n                    title={dialogStrings.orderTemplateButtonLabel}\n                    onClick={submit}\n                >\n                    {dialogStrings.orderTemplateButtonLabel}\n                </Button>\n                <Button\n                    className={`${className}__dialog__cancel-button`}\n                    title={dialogStrings.orderTemplateCancelButtonLabel}\n                    onClick={cancel}\n                >\n                    {dialogStrings.orderTemplateCancelButtonLabel}\n                </Button>\n            </ModalFooter>\n        </Modal>\n    );\n};"]}