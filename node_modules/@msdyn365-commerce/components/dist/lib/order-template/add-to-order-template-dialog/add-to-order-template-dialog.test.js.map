{"version":3,"file":"add-to-order-template-dialog.test.js","sourceRoot":"./src/","sources":["order-template/add-to-order-template-dialog/add-to-order-template-dialog.test.tsx"],"names":[],"mappings":"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","sourcesContent":["import { render } from 'enzyme';\nimport * as React from 'react';\n\nimport { OrderTemplate } from '@msdyn365-commerce-modules/retail-actions';\nimport { buildMockCoreContext, ICoreContext } from '@msdyn365-commerce/core';\nimport { ProductListLine } from '@msdyn365-commerce/retail-proxy';\nimport { AddToOrderTemplateDialog, IAddToOrderTemplateDialogResources } from '../add-to-order-template-dialog/add-to-order-template-dialog.component';\nimport { IOrderTemplateNameDialogResources } from '../order-template-name-dialog/order-template-name-dialog.component';\n\ndescribe('AddToOrderTemplateDialog', () => {\n    let mockCoreContext: ICoreContext;\n    const addToOrderTemplateDialogResources: IAddToOrderTemplateDialogResources = {\n        addToOrderTemplateHeader: 'addToOrderTemplateHeader',\n\n        noOrderTemplatesMessage: 'noOrderTemplatesMessage',\n        noOrderTemplatesDescription: 'noOrderTemplatesDescription',\n\n        createAnOrderTemplateButtonText: 'createAnOrderTemplateButtonText',\n        createNewOrderTemplateButtonText: 'createNewOrderTemplateButtonText',\n        cancelOrderTemplateCreationButtonText: 'cancelOrderTemplateCreationButtonText',\n\n        selectTemplatesText: 'selectTemplatesText',\n        addToTemplateButtonText: 'addToTemplateButtonText',\n        lineItemsText: 'lineItemsText'\n    };\n    const createOrderTemplateDialogResources: IOrderTemplateNameDialogResources = {\n        orderTemplateHeaderLabel: 'createOrderTemplateHeader',\n        orderTemplateTitleLabel: 'orderTemplateTitle',\n        orderTemplateNameAriaLabel: 'orderTemplateNameAriaLabel',\n        orderTemplateDescription: 'createOrderTemplateDescription',\n        defaultOrderTemplateName: 'defaultOrderTemplateName',\n        orderTemplateButtonLabel: 'createOrderTemplateButtonText',\n        orderTemplateCancelButtonLabel: 'cancelNewOrderTemplateCreationButtonText'\n    };\n    const emptyOrderTemplate: OrderTemplate = {\n        productList: {\n            Id: 'id'\n        },\n        orderTemplateLines: [],\n        totalLines: 0\n    };\n    const productListLine: ProductListLine = {\n        ProductListId: 'product-list-id',\n        LineId: 'line-id',\n        ProductId: 42,\n        Quantity: 12,\n        UnitOfMeasure: 'ea'\n    };\n    const orderTemplate: OrderTemplate = {\n        productList: {\n            Id: 'id',\n            ProductListLines: [productListLine]\n        },\n        orderTemplateLines: [{ productListLine: productListLine }],\n        totalLines: 0\n    };\n    const setModalStatus = (newValue: boolean) => {\n        return;\n    };\n    const onOrderTemplateSelected = async () => {\n        return;\n    };\n\n    beforeEach(() => {\n        mockCoreContext = buildMockCoreContext({app: {config: {enableStockCheck: false, outOfStockThreshold: 5}}}) as ICoreContext;\n    });\n\n    it('renders correctly with all params', () => {\n        const addToOrderTemplateDialog = render((\n            <AddToOrderTemplateDialog\n                id='id'\n                typeName='type-name'\n                context={mockCoreContext}\n                data={{\n                    orderTemplates: [orderTemplate]\n                }}\n                addToOrderTemplateDialogResources={addToOrderTemplateDialogResources}\n                createOrderTemplateDialogResources={createOrderTemplateDialogResources}\n                modalOpen={false}\n                setModalOpen={setModalStatus}\n                className='class-name'\n                onOrderTemplateSelected={onOrderTemplateSelected}\n            />\n        ));\n        expect(addToOrderTemplateDialog).toMatchSnapshot();\n    });\n\n    it('renders correctly with empty order templates', () => {\n        const addToOrderTemplateDialog = render((\n            <AddToOrderTemplateDialog\n                id='id'\n                typeName='type-name'\n                context={mockCoreContext}\n                data={{\n                    orderTemplates: []\n                }}\n                addToOrderTemplateDialogResources={addToOrderTemplateDialogResources}\n                createOrderTemplateDialogResources={createOrderTemplateDialogResources}\n                modalOpen={false}\n                setModalOpen={setModalStatus}\n                className='class-name'\n                onOrderTemplateSelected={onOrderTemplateSelected}\n            />\n        ));\n        expect(addToOrderTemplateDialog).toMatchSnapshot();\n    });\n\n    it('renders correctly with empty order template', () => {\n        const addToOrderTemplateDialog = render((\n            <AddToOrderTemplateDialog\n                id='id'\n                typeName='type-name'\n                context={mockCoreContext}\n                data={{\n                    orderTemplates: [emptyOrderTemplate]\n                }}\n                addToOrderTemplateDialogResources={addToOrderTemplateDialogResources}\n                createOrderTemplateDialogResources={createOrderTemplateDialogResources}\n                modalOpen={false}\n                setModalOpen={setModalStatus}\n                className='class-name'\n                onOrderTemplateSelected={onOrderTemplateSelected}\n            />\n        ));\n        expect(addToOrderTemplateDialog).toMatchSnapshot();\n    });\n\n    it('renders correctly with order template and model open', () => {\n        const addToOrderTemplateDialog = render((\n            <AddToOrderTemplateDialog\n                id='id'\n                typeName='type-name'\n                context={mockCoreContext}\n                data={{\n                    orderTemplates: [orderTemplate]\n                }}\n                addToOrderTemplateDialogResources={addToOrderTemplateDialogResources}\n                createOrderTemplateDialogResources={createOrderTemplateDialogResources}\n                modalOpen={true}\n                setModalOpen={setModalStatus}\n                className='class-name'\n                onOrderTemplateSelected={onOrderTemplateSelected}\n            />\n        ));\n        expect(addToOrderTemplateDialog).toMatchSnapshot();\n    });\n});"]}