{"version":3,"file":"add-to-order-template.component.js","sourceRoot":"./src/","sources":["order-template/add-to-order-template/add-to-order-template.component.tsx"],"names":[],"mappings":"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","sourcesContent":["import classnames from 'classnames';\nimport * as Popper from 'popper.js';\nimport React, { useState } from 'react';\n\nimport {\n    addItemToOrderTemplate, AddItemToOrderTemplateInput,\n    getPriceForSelectedVariant, PriceForSelectedVariantInput,\n    updateOrderTemplateAction, UpdateOrderTemplateInput } from '@msdyn365-commerce-modules/retail-actions';\nimport { OrderTemplate } from '@msdyn365-commerce-modules/retail-actions';\nimport { Alert, UncontrolledTooltip } from '@msdyn365-commerce-modules/utilities';\nimport { IComponent, IComponentProps, msdyn365Commerce } from '@msdyn365-commerce/core';\nimport { AsyncResult, Customer, ProductDimension, ProductList, ProductPrice, SimpleProduct } from '@msdyn365-commerce/retail-proxy';\nimport { AddToOrderTemplateDialog, IAddToOrderTemplateDialogData, IAddToOrderTemplateDialogResources } from '../add-to-order-template-dialog/add-to-order-template-dialog.component';\nimport { DuplicateItemsWhenAddingToOrderTemplateDialog, IDuplicateItemsWhenAddingToOrderTemplateDialogResources } from '../duplicate-items-when-adding-to-order-template-dialog/duplicate-items-when-adding-to-order-template-dialog.component';\nimport { IItemAddedToOrderTemplateDialogResources, ItemAddedToOrderTemplateDialog } from '../item-added-to-order-template-dialog/item-added-to-order-template-dialog.component';\nimport { IOrderTemplateNameDialogResources } from '../order-template-name-dialog/order-template-name-dialog.component';\n\nexport interface IAddToOrderTemplateComponentProps extends IComponentProps<IAddToOrderTemplateData> {\n    className?: string;\n\n    addToOrderTemplateDialogResources: IAddToOrderTemplateDialogResources;\n    createOrderTemplateDialogResources: IOrderTemplateNameDialogResources;\n    itemAddedToOrderTemplateDialogResources: IItemAddedToOrderTemplateDialogResources;\n    duplicateItemsWhenAddingToOrderTemplateDialogResources: IDuplicateItemsWhenAddingToOrderTemplateDialogResources;\n\n    addToOrderTemplateButtonText: string;\n\n    addToOrderTemplateMessage?: string;\n    addItemToOrderTemplateError?: string;\n\n    showButtonText?: boolean;\n    showButtonTooltip?: boolean;\n    tooltipPosition?: Popper.Placement;\n    showStatusMessage?: boolean;\n    disabled?: boolean;\n    canAddMasterProduct?: boolean;\n\n    onSuccess?(): void;\n    onError?(result: IOrderTemplateActionErrorResult): void;\n}\n\nexport interface IOrderTemplateActionErrorResult {\n    status: 'FAILED' | 'MISSING_DIMENSION';\n\n    missingDimensions?: ProductDimension[];\n}\n\ninterface IAddToOrderTemplateStateManager {\n    waiting: boolean;\n    content: IAddToOrderTemplateContentState;\n\n    setWaiting(newWaiting: boolean): void;\n    setContent(newContent: IAddToOrderTemplateContentState): void;\n}\n\ninterface IAddToOrderTemplateContentState {\n    showAlert?: boolean;\n    orderTemplateTextMessage?: string;\n    color?: string;\n}\n\ninterface IAddToOrderTemplateData {\n    orderTemplates: OrderTemplate[];\n\n    product: SimpleProduct;\n    quantity: number;\n\n    customerInformation?: Customer;\n}\n\nexport interface IAddToOrderTemplateComponent extends IComponent<IAddToOrderTemplateComponentProps> {\n    onClick(): (event: React.MouseEvent<HTMLElement>, props: IAddToOrderTemplateComponentProps, state: IAddToOrderTemplateStateManager) => void;\n}\n\nconst onClick = async (\n    _event: React.MouseEvent<HTMLElement>,\n    props: IAddToOrderTemplateComponentProps,\n    state: IAddToOrderTemplateStateManager,\n    openModal: (opened: boolean) => void): Promise<void> => {\n\n    const { user } = props.context.request;\n\n    if (state.waiting) {\n        return;\n    }\n\n    if (!user.isAuthenticated && user.signInUrl && window) {\n        window.location.assign(user.signInUrl);\n        return;\n    }\n\n    addToOrderTemplate(props, openModal);\n    state.setWaiting(false);\n};\n\nconst onDismiss = (state: IAddToOrderTemplateStateManager): void => {\n    state.setContent({ color: 'success', showAlert: false });\n};\n\nconst AddToOrderTemplateComponentActions = {\n    onClick: onClick,\n    onDismiss: onDismiss\n};\n\nconst hasProductInOrderTemplates = (productToFind: SimpleProduct) => {\n    /*\n    TODO: Currently API does not support filtering by products.\n    await getProductListLinesAsync(context, '',)\n    return orderTemplates.filter(orderTemplate =>\n        orderTemplate.orderTemplateLines.filter(\n            product => product.productListLine.ProductId === productToFind.RecordId).length !== 0).length !== 0;\n    */\n   return false;\n};\n\n// tslint:disable-next-line:max-func-body-length\nconst AddToOrderTemplate: React.FC<IAddToOrderTemplateComponentProps> = (props: IAddToOrderTemplateComponentProps) => {\n    if (!props.data.customerInformation?.IsB2b) {\n        return null;\n    }\n\n    const [waiting, setWaiting] = useState(false);\n    const [content, setContent] = useState({});\n    const state: IAddToOrderTemplateStateManager = {\n        waiting,\n        content,\n\n        setWaiting,\n        setContent\n    };\n\n    const [addToOrderTemplateModalOpen, setAddToOrderTemplateModalOpen] = useState(false);\n\n    const [chosenOrderTemplateId, setChosenOrderTemplateId] = useState<string | undefined>(undefined);\n    const [productPrice, setProductPrice] = useState<ProductPrice | null>(null);\n    const [itemAddedToOrderTemplateDialogOpen, setItemAddedToOrderTemplateDialogOpen] = useState(false);\n    const [duplicateItemsWhenAddingToOrderTemplateDialogOpen, setDuplicateItemsWhenAddingToOrderTemplateDialogOpen] = useState(false);\n\n    const executeAddItemToOrderTemplate = async (orderTemplate: ProductList) => {\n        setChosenOrderTemplateId(orderTemplate.Id);\n\n        const input = new AddItemToOrderTemplateInput(\n            orderTemplate.Id,\n            props.data.product.RecordId,\n            props.data.quantity,\n            props.data.product.DefaultUnitOfMeasure || 'ea');\n\n        await addItemToOrderTemplate(input, props.context.actionContext).then(async result => {\n            const retrievedProductPrice = await getPriceForSelectedVariant(\n                new PriceForSelectedVariantInput(\n                    props.data.product.RecordId,\n                    props.context.actionContext.requestContext.apiSettings.channelId,\n                    props.data.product),\n                props.context.actionContext);\n            setProductPrice(retrievedProductPrice);\n            setAddToOrderTemplateModalOpen(false);\n            setTimeout(() => {\n                setItemAddedToOrderTemplateDialogOpen(true);\n            }, 500); // tslint:disable-line:align\n        }).catch(result => {\n            if (result.error?.name !== 'Microsoft_Dynamics_Commerce_Runtime_DuplicateObject') {\n                return AsyncResult.reject(result);\n            }\n            setAddToOrderTemplateModalOpen(false);\n            setTimeout(() => {\n                setDuplicateItemsWhenAddingToOrderTemplateDialogOpen(true);\n            }, 500); // tslint:disable-line:align\n            return AsyncResult.resolve();\n        });\n    };\n\n    const onDuplicateDialogCancel = () => {\n        setDuplicateItemsWhenAddingToOrderTemplateDialogOpen(false);\n        setTimeout(() => {\n            setAddToOrderTemplateModalOpen(true);\n        }, 500); // tslint:disable-line:align\n    };\n\n    const overrideQuantity = async () => {\n        const input = new UpdateOrderTemplateInput(\n            chosenOrderTemplateId!,\n            props.data.product.RecordId,\n            props.data.quantity,\n            props.data.product.DefaultUnitOfMeasure || 'ea');\n        await updateOrderTemplateAction(input, props.context.actionContext);\n\n        const retrievedProductPrice = await getPriceForSelectedVariant(\n            new PriceForSelectedVariantInput(\n                props.data.product.RecordId,\n                props.context.actionContext.requestContext.apiSettings.channelId,\n                props.data.product),\n            props.context.actionContext);\n        setProductPrice(retrievedProductPrice);\n        setDuplicateItemsWhenAddingToOrderTemplateDialogOpen(false);\n        setTimeout(() => {\n            setItemAddedToOrderTemplateDialogOpen(true);\n        }, 500); // tslint:disable-line:align\n    };\n\n    const { addToOrderTemplateButtonText, showStatusMessage, showButtonText,\n        className, disabled, showButtonTooltip, tooltipPosition,\n        addToOrderTemplateDialogResources, createOrderTemplateDialogResources\n    } = props;\n\n    const onDismissHandler = () => { return AddToOrderTemplateComponentActions.onDismiss(state); };\n    const ariaLabel = addToOrderTemplateButtonText;\n    const addToOrderTemplateRef: React.RefObject<HTMLButtonElement> = React.createRef();\n    const showMessage = showStatusMessage !== undefined ? showStatusMessage: true;\n    const showTooltip = showButtonTooltip !== undefined ? showButtonTooltip: true;\n    const tooltipPos = showButtonTooltip !== undefined ? tooltipPosition: 'top-end';\n\n    const dialogData: IAddToOrderTemplateDialogData = {\n        orderTemplates: props.data.orderTemplates\n    };\n\n    const onClickHandler = (event: React.MouseEvent<HTMLElement>) => { return AddToOrderTemplateComponentActions.onClick(event, props, state, setAddToOrderTemplateModalOpen); };\n\n    return (\n        <React.Fragment>\n            {\n                <>\n                    <button\n                        className={classnames(\n                            className,\n                            hasProductInOrderTemplates(props.data.product) ? 'msc-add-to-order-template-icon__added' : 'msc-add-to-order-template-icon' ,\n                            state.waiting ? 'msc-add-to-order-template-icon__waiting' : '')}\n                        aria-label={ariaLabel}\n                        onClick={onClickHandler}\n                        disabled={disabled}\n                        ref={addToOrderTemplateRef}\n                    >\n                        {showButtonText ? ariaLabel : ''}\n                    </button>\n                    {\n                        showTooltip && <UncontrolledTooltip placement={tooltipPos} trigger={'hover focus'} target={addToOrderTemplateRef}>{ariaLabel}</UncontrolledTooltip>\n                    }\n                </>\n            }\n            {\n                state.content.showAlert && showMessage ?\n                <div className='ms-order-template-items__product-status'>\n                    <Alert color={ state.content.color } isOpen={ state.content.showAlert } toggle={ onDismissHandler }>\n                        { state.content.orderTemplateTextMessage }\n                    </Alert>\n                </div> :\n                ''\n            }\n            <AddToOrderTemplateDialog\n                className={'msc-add-to-order-template-dialog'}\n                modalOpen={addToOrderTemplateModalOpen}\n                setModalOpen={setAddToOrderTemplateModalOpen}\n                context={props.context}\n                id={props.id}\n                typeName={props.typeName}\n                data={dialogData}\n                addToOrderTemplateDialogResources={addToOrderTemplateDialogResources}\n                createOrderTemplateDialogResources={createOrderTemplateDialogResources}\n                onOrderTemplateSelected={executeAddItemToOrderTemplate}\n            />\n            {\n                chosenOrderTemplateId && productPrice && <ItemAddedToOrderTemplateDialog\n                    className={'msc-item-added-to-order-template-dialog'}\n                    id={props.id}\n                    typeName={props.typeName}\n                    context={props.context}\n                    dialogStrings={props.itemAddedToOrderTemplateDialogResources}\n                    data={{\n                        product: props.data.product,\n                        quantity: props.data.quantity,\n                        orderTemplateId: chosenOrderTemplateId,\n                        productPrice: productPrice\n                    }}\n                    modalOpen={itemAddedToOrderTemplateDialogOpen}\n                />\n            }\n            <DuplicateItemsWhenAddingToOrderTemplateDialog\n                className={'msc-duplicate-items-when-adding-to-order-template-dialog'}\n                id={props.id}\n                typeName={props.typeName}\n                context={props.context}\n                dialogStrings={props.duplicateItemsWhenAddingToOrderTemplateDialogResources}\n                data={{}}\n                modalOpen={duplicateItemsWhenAddingToOrderTemplateDialogOpen}\n                executeOverrideQuantity={overrideQuantity}\n                onCancel={onDuplicateDialogCancel}\n            />\n        </React.Fragment>\n    );\n};\n\nconst addToOrderTemplate = (\n    props: IAddToOrderTemplateComponentProps,\n    openModal: (opened: boolean) => void): void => {\n    const { canAddMasterProduct } = props;\n\n    if (props.data.product.Dimensions && !canAddMasterProduct) {\n        const missingDimensions = props.data.product.Dimensions.filter(dimension => !(dimension.DimensionValue && dimension.DimensionValue.Value));\n\n        if (missingDimensions.length > 0) {\n            // At least one dimension with no value exists on the product, won't be able to proceed.\n            propagateError(props, { status: 'MISSING_DIMENSION', missingDimensions: missingDimensions });\n            return;\n        }\n    }\n\n    openModal(true);\n    return;\n};\n\nconst propagateError = (props: IAddToOrderTemplateComponentProps, result: IOrderTemplateActionErrorResult): void => {\n    const { onError } = props;\n\n    if (onError) {\n        onError(result);\n    }\n};\n\n// @ts-ignore\nexport const AddToOrderTemplateComponent: React.FunctionComponent<IAddToOrderTemplateComponentProps> = msdyn365Commerce.createComponent<IAddToOrderTemplateComponent>(\n    'AddToOrderTemplate',\n    { component: AddToOrderTemplate, ...AddToOrderTemplateComponentActions }\n);"]}