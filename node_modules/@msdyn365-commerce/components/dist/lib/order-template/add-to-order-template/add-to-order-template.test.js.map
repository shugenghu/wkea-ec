{"version":3,"file":"add-to-order-template.test.js","sourceRoot":"./src/","sources":["order-template/add-to-order-template/add-to-order-template.test.tsx"],"names":[],"mappings":"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","sourcesContent":["import { render } from 'enzyme';\nimport * as React from 'react';\n\nimport { OrderTemplate } from '@msdyn365-commerce-modules/retail-actions';\nimport { buildMockCoreContext, ICoreContext } from '@msdyn365-commerce/core';\nimport { Customer, ProductListLine, SimpleProduct } from '@msdyn365-commerce/retail-proxy';\nimport { IAddToOrderTemplateDialogResources } from '../add-to-order-template-dialog/add-to-order-template-dialog.component';\nimport { IDuplicateItemsWhenAddingToOrderTemplateDialogResources } from '../duplicate-items-when-adding-to-order-template-dialog/duplicate-items-when-adding-to-order-template-dialog.component';\nimport { IItemAddedToOrderTemplateDialogResources } from '../item-added-to-order-template-dialog/item-added-to-order-template-dialog.component';\nimport { IOrderTemplateNameDialogResources } from '../order-template-name-dialog/order-template-name-dialog.component';\nimport { AddToOrderTemplateComponent } from './add-to-order-template.component';\n\ndescribe('AddToOrderTemplateComponent', () => {\n    let mockCoreContext: ICoreContext;\n    const basicProduct: SimpleProduct = {RecordId: 55555} as SimpleProduct;\n    const addToOrderTemplateDialogResources: IAddToOrderTemplateDialogResources = {\n        addToOrderTemplateHeader: 'addToOrderTemplateHeader',\n\n        noOrderTemplatesMessage: 'noOrderTemplatesMessage',\n        noOrderTemplatesDescription: 'noOrderTemplatesDescription',\n\n        createAnOrderTemplateButtonText: 'createAnOrderTemplateButtonText',\n        createNewOrderTemplateButtonText: 'createNewOrderTemplateButtonText',\n        cancelOrderTemplateCreationButtonText: 'cancelOrderTemplateCreationButtonText',\n\n        selectTemplatesText: 'selectTemplatesText',\n        addToTemplateButtonText: 'addToTemplateButtonText',\n        lineItemsText: 'lineItemsText'\n    };\n    const createOrderTemplateDialogResources: IOrderTemplateNameDialogResources = {\n        orderTemplateHeaderLabel: 'createOrderTemplateHeader',\n        orderTemplateTitleLabel: 'orderTemplateTitle',\n        orderTemplateNameAriaLabel: 'orderTemplateNameAriaLabel',\n        orderTemplateDescription: 'createOrderTemplateDescription',\n        defaultOrderTemplateName: 'defaultOrderTemplateName',\n        orderTemplateButtonLabel: 'createOrderTemplateButtonText',\n        orderTemplateCancelButtonLabel: 'cancelNewOrderTemplateCreationButtonText'\n    };\n    const itemAddedToOrderTemplateDialogResources: IItemAddedToOrderTemplateDialogResources = {\n        viewOrderTemplateButtonText: 'viewOrderTemplateButtonText',\n        continueShoppingButtonText: 'continueShoppingButtonText',\n        itemAddedToOrderTemplateHeaderItemOneText: 'itemAddedToOrderTemplateHeaderItemOneText',\n        itemAddedToOrderTemplateHeaderItemFormatText: 'itemAddedToOrderTemplateHeaderItemFormatText',\n        itemAddedToOrderTemplateHeaderMessageText: 'itemAddedToOrderTemplateHeaderMessageText',\n        freePriceText: 'freePriceText',\n        originalPriceText: 'originalPriceText',\n        currentPriceText: 'currentPriceText'\n    };\n    const duplicateItemsWhenAddingToOrderTemplateDialogResources: IDuplicateItemsWhenAddingToOrderTemplateDialogResources = {\n        duplicatedProductsHeader: 'duplicatedProductsHeader',\n        duplicatedProductsDescription: 'duplicatedProductsDescription',\n        updateQuantityButtonText: 'updateQuantityButtonText',\n        cancelDuplicateItemsButtonText: 'cancelDuplicateItemsButtonText'\n    };\n    const addToOrderTemplateButtonText: string = 'addToOrderTemplateButtonText';\n    const emptyOrderTemplate: OrderTemplate = {\n        productList: {\n            Id: 'id'\n        },\n        orderTemplateLines: [],\n        totalLines: 0\n    };\n    const productListLine: ProductListLine = {\n        ProductListId: 'product-list-id',\n        LineId: 'line-id',\n        ProductId: 42,\n        Quantity: 12,\n        UnitOfMeasure: 'ea'\n    };\n    const orderTemplate: OrderTemplate = {\n        productList: {\n            Id: 'id',\n            ProductListLines: [productListLine]\n        },\n        orderTemplateLines: [{ productListLine: productListLine }],\n        totalLines: 0\n    };\n    const b2bCustomer: Customer = {\n        AccountNumber: 'customer-id',\n        IsB2b: true\n    };\n    const nonB2bCustomer: Customer = {\n        AccountNumber: 'customer-id'\n    };\n\n    beforeEach(() => {\n        mockCoreContext = buildMockCoreContext({app: {config: {enableStockCheck: false, outOfStockThreshold: 5}}}) as ICoreContext;\n    });\n\n    it('renders correctly with all params', () => {\n        const addToOrderTemplateComponent = render((\n            <AddToOrderTemplateComponent\n                id='id'\n                typeName='type-name'\n                context={mockCoreContext}\n                data={{\n                    orderTemplates: [orderTemplate],\n                    product: basicProduct,\n                    quantity: 2,\n                    customerInformation: b2bCustomer\n                }}\n                addToOrderTemplateDialogResources={addToOrderTemplateDialogResources}\n                createOrderTemplateDialogResources={createOrderTemplateDialogResources}\n                itemAddedToOrderTemplateDialogResources={itemAddedToOrderTemplateDialogResources}\n                duplicateItemsWhenAddingToOrderTemplateDialogResources={duplicateItemsWhenAddingToOrderTemplateDialogResources}\n                addToOrderTemplateButtonText={addToOrderTemplateButtonText}\n            />\n        ));\n        expect(addToOrderTemplateComponent).toMatchSnapshot();\n    });\n\n    it('renders correctly for non b2b customer', () => {\n        const addToOrderTemplateComponent = render((\n            <AddToOrderTemplateComponent\n                id='id'\n                typeName='type-name'\n                context={mockCoreContext}\n                data={{\n                    orderTemplates: [orderTemplate],\n                    product: basicProduct,\n                    quantity: 2,\n                    customerInformation: nonB2bCustomer\n                }}\n                addToOrderTemplateDialogResources={addToOrderTemplateDialogResources}\n                createOrderTemplateDialogResources={createOrderTemplateDialogResources}\n                itemAddedToOrderTemplateDialogResources={itemAddedToOrderTemplateDialogResources}\n                duplicateItemsWhenAddingToOrderTemplateDialogResources={duplicateItemsWhenAddingToOrderTemplateDialogResources}\n                addToOrderTemplateButtonText={addToOrderTemplateButtonText}\n            />\n        ));\n        expect(addToOrderTemplateComponent).toMatchSnapshot();\n    });\n\n    it('renders correctly for empty order templates', () => {\n        const addToOrderTemplateComponent = render((\n            <AddToOrderTemplateComponent\n                id='id'\n                typeName='type-name'\n                context={mockCoreContext}\n                data={{\n                    orderTemplates: [],\n                    product: basicProduct,\n                    quantity: 2,\n                    customerInformation: b2bCustomer\n                }}\n                addToOrderTemplateDialogResources={addToOrderTemplateDialogResources}\n                createOrderTemplateDialogResources={createOrderTemplateDialogResources}\n                itemAddedToOrderTemplateDialogResources={itemAddedToOrderTemplateDialogResources}\n                duplicateItemsWhenAddingToOrderTemplateDialogResources={duplicateItemsWhenAddingToOrderTemplateDialogResources}\n                addToOrderTemplateButtonText={addToOrderTemplateButtonText}\n            />\n        ));\n        expect(addToOrderTemplateComponent).toMatchSnapshot();\n    });\n\n    it('renders correctly for empty order template', () => {\n        const addToOrderTemplateComponent = render((\n            <AddToOrderTemplateComponent\n                id='id'\n                typeName='type-name'\n                context={mockCoreContext}\n                data={{\n                    orderTemplates: [emptyOrderTemplate],\n                    product: basicProduct,\n                    quantity: 2,\n                    customerInformation: b2bCustomer\n                }}\n                addToOrderTemplateDialogResources={addToOrderTemplateDialogResources}\n                createOrderTemplateDialogResources={createOrderTemplateDialogResources}\n                itemAddedToOrderTemplateDialogResources={itemAddedToOrderTemplateDialogResources}\n                duplicateItemsWhenAddingToOrderTemplateDialogResources={duplicateItemsWhenAddingToOrderTemplateDialogResources}\n                addToOrderTemplateButtonText={addToOrderTemplateButtonText}\n            />\n        ));\n        expect(addToOrderTemplateComponent).toMatchSnapshot();\n    });\n});"]}