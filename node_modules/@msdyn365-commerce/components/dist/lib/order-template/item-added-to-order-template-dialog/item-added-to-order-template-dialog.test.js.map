{"version":3,"file":"item-added-to-order-template-dialog.test.js","sourceRoot":"./src/","sources":["order-template/item-added-to-order-template-dialog/item-added-to-order-template-dialog.test.tsx"],"names":[],"mappings":"AAAA,OAAO,EAAE,MAAM,EAAE,MAAM,QAAQ,CAAC;AAChC,OAAO,KAAK,KAAK,MAAM,OAAO,CAAC;AAE/B,OAAO,EAAE,oBAAoB,EAAgB,MAAM,yBAAyB,CAAC;AAE7E,OAAO,EAA4C,8BAA8B,EAAE,MAAM,iDAAiD,CAAC;AAE3I,QAAQ,CAAC,gCAAgC,EAAE,GAAG,EAAE;IAC5C,IAAI,eAA6B,CAAC;IAClC,MAAM,YAAY,GAAkB,EAAC,QAAQ,EAAE,KAAK,EAAkB,CAAC;IACvE,MAAM,YAAY,GAAiB,EAAG,CAAC;IACvC,MAAM,uCAAuC,GAA6C;QACtF,2BAA2B,EAAE,6BAA6B;QAC1D,0BAA0B,EAAE,4BAA4B;QACxD,yCAAyC,EAAE,2CAA2C;QACtF,4CAA4C,EAAE,8CAA8C;QAC5F,yCAAyC,EAAE,2CAA2C;QACtF,aAAa,EAAE,eAAe;QAC9B,iBAAiB,EAAE,mBAAmB;QACtC,gBAAgB,EAAE,kBAAkB;KACvC,CAAC;IAEF,UAAU,CAAC,GAAG,EAAE;QACZ,eAAe,GAAG,oBAAoB,CAAC,EAAC,GAAG,EAAE,EAAC,MAAM,EAAE,EAAC,gBAAgB,EAAE,KAAK,EAAE,mBAAmB,EAAE,CAAC,EAAC,EAAC,EAAC,CAAiB,CAAC;IAC/H,CAAC,CAAC,CAAC;IAEH,EAAE,CAAC,mCAAmC,EAAE,GAAG,EAAE;QACzC,MAAM,wBAAwB,GAAG,MAAM,CAAC,CACpC,oBAAC,8BAA8B,IAC3B,EAAE,EAAC,IAAI,EACP,QAAQ,EAAC,WAAW,EACpB,OAAO,EAAE,eAAe,EACxB,IAAI,EAAE,EAAC,OAAO,EAAE,YAAY,EAAE,QAAQ,EAAE,CAAC,EAAE,YAAY,EAAE,YAAY,EAAE,eAAe,EAAE,IAAI,EAAC,EAC7F,SAAS,EAAE,KAAK,EAChB,SAAS,EAAC,YAAY,EACtB,aAAa,EAAE,uCAAuC,GACxD,CACL,CAAC,CAAC;QACH,MAAM,CAAC,wBAAwB,CAAC,CAAC,eAAe,EAAE,CAAC;IACvD,CAAC,CAAC,CAAC;IAEH,EAAE,CAAC,kDAAkD,EAAE,GAAG,EAAE;QACxD,MAAM,wBAAwB,GAAG,MAAM,CAAC,CACpC,oBAAC,8BAA8B,IAC3B,EAAE,EAAC,IAAI,EACP,QAAQ,EAAC,WAAW,EACpB,OAAO,EAAE,eAAe,EACxB,IAAI,EAAE,EAAC,OAAO,EAAE,YAAY,EAAE,QAAQ,EAAE,CAAC,EAAE,YAAY,EAAE,YAAY,EAAE,eAAe,EAAE,IAAI,EAAC,EAC7F,SAAS,EAAE,IAAI,EACf,SAAS,EAAC,YAAY,EACtB,aAAa,EAAE,uCAAuC,GACxD,CACL,CAAC,CAAC;QACH,MAAM,CAAC,wBAAwB,CAAC,CAAC,eAAe,EAAE,CAAC;IACvD,CAAC,CAAC,CAAC;AACP,CAAC,CAAC,CAAC","sourcesContent":["import { render } from 'enzyme';\nimport * as React from 'react';\n\nimport { buildMockCoreContext, ICoreContext } from '@msdyn365-commerce/core';\nimport { ProductPrice, SimpleProduct } from '@msdyn365-commerce/retail-proxy';\nimport { IItemAddedToOrderTemplateDialogResources, ItemAddedToOrderTemplateDialog } from './item-added-to-order-template-dialog.component';\n\ndescribe('ItemAddedToOrderTemplateDialog', () => {\n    let mockCoreContext: ICoreContext;\n    const basicProduct: SimpleProduct = {RecordId: 55555} as SimpleProduct;\n    const productPrice: ProductPrice = { };\n    const itemAddedToOrderTemplateDialogResources: IItemAddedToOrderTemplateDialogResources = {\n        viewOrderTemplateButtonText: 'viewOrderTemplateButtonText',\n        continueShoppingButtonText: 'continueShoppingButtonText',\n        itemAddedToOrderTemplateHeaderItemOneText: 'itemAddedToOrderTemplateHeaderItemOneText',\n        itemAddedToOrderTemplateHeaderItemFormatText: 'itemAddedToOrderTemplateHeaderItemFormatText',\n        itemAddedToOrderTemplateHeaderMessageText: 'itemAddedToOrderTemplateHeaderMessageText',\n        freePriceText: 'freePriceText',\n        originalPriceText: 'originalPriceText',\n        currentPriceText: 'currentPriceText'\n    };\n\n    beforeEach(() => {\n        mockCoreContext = buildMockCoreContext({app: {config: {enableStockCheck: false, outOfStockThreshold: 5}}}) as ICoreContext;\n    });\n\n    it('renders correctly with all params', () => {\n        const addToOrderTemplateDialog = render((\n            <ItemAddedToOrderTemplateDialog\n                id='id'\n                typeName='type-name'\n                context={mockCoreContext}\n                data={{product: basicProduct, quantity: 2, productPrice: productPrice, orderTemplateId: 'id'}}\n                modalOpen={false}\n                className='class-name'\n                dialogStrings={itemAddedToOrderTemplateDialogResources}\n            />\n        ));\n        expect(addToOrderTemplateDialog).toMatchSnapshot();\n    });\n\n    it('renders correctly with all params and modal open', () => {\n        const addToOrderTemplateDialog = render((\n            <ItemAddedToOrderTemplateDialog\n                id='id'\n                typeName='type-name'\n                context={mockCoreContext}\n                data={{product: basicProduct, quantity: 2, productPrice: productPrice, orderTemplateId: 'id'}}\n                modalOpen={true}\n                className='class-name'\n                dialogStrings={itemAddedToOrderTemplateDialogResources}\n            />\n        ));\n        expect(addToOrderTemplateDialog).toMatchSnapshot();\n    });\n});"]}