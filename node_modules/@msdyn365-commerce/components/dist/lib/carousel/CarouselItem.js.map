{"version":3,"file":"CarouselItem.js","sourceRoot":"./src/","sources":["carousel/CarouselItem.tsx"],"names":[],"mappings":"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","sourcesContent":["import { mapToCssModules, TransitionStatuses, TransitionTimeouts } from '@msdyn365-commerce-modules/utilities';\nimport classNames from 'classnames';\nimport * as React from 'react';\nimport Transition from 'react-transition-group/Transition';\nimport CarouselContext from './CarouselContext';\nimport { ICarouselItemProps } from './CarouselItem.props';\n\nexport interface ICarouselItemState {\n    startAnimation: boolean;\n}\n\n/**\n * CarouselItem component\n */\nexport default class CarouselItem extends React.Component<ICarouselItemProps, ICarouselItemState> {\n\n    public static defaultProps: Partial<ICarouselItemProps> = {\n        tag: 'div',\n        timeout: TransitionTimeouts.Carousel,\n        slide: true,\n    };\n    public props: ICarouselItemProps;\n    public state: ICarouselItemState;\n\n    constructor(props: ICarouselItemProps) {\n        super(props);\n        this.props = props;\n\n        this.state = {\n            startAnimation: false,\n        };\n\n        this.onEnter = this.onEnter.bind(this);\n        this.onEntering = this.onEntering.bind(this);\n        this.onExit = this.onExit.bind(this);\n        this.onExiting = this.onExiting.bind(this);\n        this.onExited = this.onExited.bind(this);\n    }\n\n    public onEnter = (node: HTMLElement, isAppearing: boolean) =>  {\n        this.setState({ startAnimation: false });\n        if (this.props.onEnter) {\n            this.props.onEnter(node, isAppearing);\n        }\n    }\n\n    public onEntering = (node: HTMLElement, isAppearing: boolean) => {\n\n        // getting this variable triggers a reflow\n        const offsetHeight = node.offsetHeight;\n        this.setState({ startAnimation: true });\n        if (this.props.onEntering) {\n            this.props.onEntering(node, isAppearing);\n        }\n\n        return offsetHeight;\n    }\n\n    public onExit = (node: HTMLElement) => {\n        this.setState({ startAnimation: false });\n        if (this.props.onExit) {\n            this.props.onExit(node);\n        }\n    }\n\n    public onExiting =  (node: HTMLElement) => {\n        this.setState({ startAnimation: true });\n        node.dispatchEvent(new CustomEvent('slide.bs.carousel'));\n        if (this.props.onExiting) {\n            this.props.onExiting(node);\n        }\n    }\n\n    public onExited = (node: HTMLElement) => {\n        node.dispatchEvent(new CustomEvent('slid.bs.carousel'));\n        if (this.props.onExited) {\n            this.props.onExited(node);\n        }\n    }\n\n    public render(): JSX.Element | null {\n\n        const {\n            children,\n            cssModule, slide,\n            tag,\n            className,\n\n            in : collapseIn,\n            mountOnEnter, unmountOnExit,\n            appear, enter, exit, timeout,\n            onEnter, onEntering, onEntered, onExit, onExiting, onExited,\n\n            ...otherProps\n        } = this.props;\n\n        const timeoutOrDefault = timeout || TransitionTimeouts.Carousel;\n        const Tag = tag || 'div';\n        const transitionProps = {\n            in : collapseIn,\n            mountOnEnter, unmountOnExit,\n            appear, enter, exit,\n            timeout: timeoutOrDefault\n        };\n\n        return(\n            <CarouselContext.Consumer >\n                {(\n                    // tslint:disable-next-line:typedef\n                    { direction}\n                ) => (\n                    <Transition\n                        {...transitionProps}\n                        enter={slide}\n                        exit={slide}\n                        in={collapseIn}\n                        onEnter={this.onEnter}\n                        onEntering={this.onEntering}\n                        onExit={this.onExit}\n                        onExiting={this.onExiting}\n                        onExited={this.onExited}\n                    >\n                        {(status: TransitionStatuses) => {\n                            const isActive = (status === 'entered') || (status === 'exiting');\n                            const directionClassName = (status === 'entering' || status === 'exiting') &&\n                                this.state.startAnimation &&\n                                (direction === 'right' ? ('msc-carousel__item__left') : ('msc-carousel__item__right'));\n                            const orderClassName = (status === 'entering') &&\n                                (direction === 'right' ? ('msc-carousel__item__next') : ('msc-carousel__item__prev'));\n                            const itemClasses = mapToCssModules(\n                                classNames(\n                                    className,\n                                    'msc-carousel__item',\n                                    isActive && 'active',\n                                    directionClassName,\n                                    orderClassName,\n                                ),\n                                cssModule\n                            );\n\n                            return (\n                                <Tag className={itemClasses} {...otherProps}>\n                                    {children}\n                                </Tag>\n                            );\n                        }}\n                    </Transition>\n                )}\n            </CarouselContext.Consumer>\n        );\n    }\n\n}\n"]}