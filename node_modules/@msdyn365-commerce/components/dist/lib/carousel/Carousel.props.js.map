{"version":3,"file":"Carousel.props.js","sourceRoot":"./src/","sources":["carousel/Carousel.props.ts"],"names":[],"mappings":"","sourcesContent":["import { ITelemetryContent } from '@msdyn365-commerce-modules/utilities';\nimport { carouselTransition } from './Carousel';\n\n/**\n * Carousel properties\n */\n\nexport interface ICarouselProps extends React.HTMLAttributes<HTMLElement> {\n    activeIndex:number;\n\n    /** controls if the left and right arrow keys should control the carousel */\n    keyboard?: boolean;\n\n    /** Slides in the Carousel */\n    items?: React.ReactNode[];\n\n    /** If set to \"hover\", pauses the cycling of the carousel on mouseenter and resumes the cycling of the carousel on\n     * mouseleave. If set to false, hovering over the carousel won't pause it. (default: \"hover\")\n     *  Only works if autoplay isn't set to false.\n     */\n    pause?: 'hover' | false;\n\n    /** Autoplays the carousel after the user manually cycles the first item. If \"carousel\", autoplays the carousel on load.\n     *  Only works if autoplay isn't set to false.\n     */\n    ride?: 'carousel';\n\n    /** Does the carousel autoplay or not. Default value is true\n     */\n    autoplay?: boolean;\n\n    /** Hide flippers. Default value is false\n     */\n    hideFlipper?: boolean;\n\n    /** Hide Indicator. Default value is false\n     */\n    hideIndicator?: boolean;\n\n    /** Dismiss enabled. Default value is false\n     */\n    dismissEnabled?: boolean;\n\n    /** the interval at which the carousel automatically cycles (default: 5000) */\n    // tslint:disable-next-line\n    interval?: any;\n\n    /** called when the mouse exits the Carousel */\n    mouseExit?: React.ReactElement;\n\n    /** controls the type of transition effect to be put on the Carousel like slide, fade etc */\n    transitionType?: carouselTransition;\n\n    /** controls whether the slide animation on the Carousel works or not */\n    slide?: boolean;\n\n    /** CSS Module that you want to set on the carousel */\n    cssModule?: object;\n\n    /** Threshold touch event must move by to trigger a scroll event */\n    touchScrollThreshold?: number;\n\n    /** Aria label text for indicators */\n    indicatorAriaText?: string;\n\n    /** Aria label text for dismiss carousel button */\n    dismissCarouselAriaText?: string;\n\n    /** Property to set previous direction */\n    directionTextPrev: string;\n\n    /** Property to set next direction */\n    directionTextNext: string;\n\n    /** Show Pagination Indicators */\n    showPaginationTooltip?: boolean;\n\n    /** The telemetry content */\n    telemetryContent?: ITelemetryContent;\n\n    /** a function which should advance the carousel to the next slide (via activeIndex) */\n    next(): void;\n\n    /** a function which should advance the carousel to the previous slide (via activeIndex) */\n    previous(): void;\n\n    /** called when the mouse enters the Carousel */\n    mouseEnter?(e: React.MouseEvent): void;\n\n    /** called when the mouse goes out the Carousel */\n    mouseLeave?(e: React.MouseEvent): void;\n\n     /** a function which should handles indicator (via activeIndex) */\n     onIndicatorsClickHandler(idx: number): void;\n\n     /** a function which should handles dismiss carousel */\n     handleDismissCarousel?(): void;\n\n     /** a function which should handles dismiss carousel */\n     handleOnExited(): void;\n\n     /** a function which should handles dismiss carousel */\n     handleOnExiting(): void;\n\n}\n"]}