{"version":3,"file":"Carousel.test.js","sourceRoot":"./src/","sources":["carousel/Carousel.test.tsx"],"names":[],"mappings":"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","sourcesContent":["/* tslint:disable */\nimport * as Enzyme from 'enzyme';\nimport ReactSixteenAdapter from 'enzyme-adapter-react-16';\nimport { JSDOM } from 'jsdom';\nimport * as React from 'react';\n\nimport { mount } from 'enzyme';\nimport Carousel from './Carousel';\nimport CarouselItem from './CarouselItem';\n\nimport * as renderer from 'react-test-renderer';\n\nEnzyme.configure({ adapter: new ReactSixteenAdapter() });\n\nconst globalAny:any = global;\n\nconst { window } = (new JSDOM('<!doctype html><html><body></body></html>'));\nglobalAny.document = window.document;\nglobalAny.window = window;\n// globalAny.navigator = {userAgent: 'node.js'};\n\ndescribe('Carousel', () => {\n\n  beforeEach(() => {\n    jest.useFakeTimers();\n  });\n\n  afterEach(() => {\n    jest.clearAllTimers();\n  });\n\n  const items = [\n    { src: '', altText: 'a', caption: 'caption 1' },\n    { src: '', altText: 'b', caption: 'caption 2' },\n    { src: '', altText: 'c', caption: 'caption 3' }\n  ];\n\nconst item1 = (<img key='item1' className='d-block w-100' src={'Slide+1'} alt={'Slide 1 of 3'} />) as React.ReactNode;\nconst item2 = (<img key='item2' className='d-block w-100' src={'Slide+2'} alt={'Slide 2 of 3'} />) as React.ReactNode;\nconst item3 = (<img key='item3' className='d-block w-100' src={'Slide+3'} alt={'Slide 3 of 3'} />) as React.ReactNode;\n\nconst slides = [item1, item2, item3] as React.ReactNode[];\n\n// Carouseltem \ndescribe ('items', () => {\n  it('should render custom tag', () => {\n    const input = renderer.create(\n      <div>\n          <CarouselItem tag='div' />\n      </div>\n  );\n    expect(input.toJSON()).toMatchSnapshot();\n  });\n\n  it('should render with default timeout', () => {\n    const input = renderer.create(\n      <div>\n          <CarouselItem timeout={0}/>\n      </div>\n  );\n    expect(input.toJSON()).toMatchSnapshot();\n  });\n\n  it('should render an image if one is passed in', () => {\n    const input = renderer.create(\n      <CarouselItem>\n        <img src={items[0].src} alt={items[0].src} />\n      </CarouselItem>\n  );\n    expect(input.toJSON()).toMatchSnapshot();\n  });\n\n  it('should render an image if one is passed in', () => {\n    const input = renderer.create(\n      <CarouselItem>\n        <img src={items[0].src} alt={items[0].src} />\n      </CarouselItem>\n  );\n    expect(input.toJSON()).toMatchSnapshot();\n  });\n\n  it('should render a caption if one is passed in', () => {\n    const input = renderer.create(\n      <CarouselItem>\n        <div>\n            <h3>{'captionHeader'}</h3>\n            <p>{'captionText'}</p>\n        </div>\n      </CarouselItem>\n  );\n    expect(input.toJSON()).toMatchSnapshot();\n  });\n});\n\n// Indicators\ndescribe('indicators', () => {\n  it('should render a list with the right number of items', () => {\n    const wrapper = mount(\n      <Carousel\n          activeIndex={0}\n          next={() => { }}\n          previous={() => { }}\n          items={slides}\n          onIndicatorsClickHandler={() => { }}\n          directionTextPrev={'Previous'}\n          directionTextNext={'Next'}\n        />\n      );\n    expect(wrapper.find('ol').length).toEqual(1);\n    expect(wrapper.find('li').length).toEqual(3);\n  });\n\n  it('should call click indicator', () => {\n    const onIndicatorsClickHandler = jest.fn();\n    const wrapper = mount(\n      <Carousel\n          activeIndex={0}\n          next={() => { }}\n          previous={() => { }}\n          items={slides}\n          onIndicatorsClickHandler={onIndicatorsClickHandler}\n          directionTextPrev={'Previous'}\n          directionTextNext={'Next'}\n        />\n    );\n    wrapper.find('li').first().simulate('click');\n    expect(onIndicatorsClickHandler).toHaveBeenCalled();\n  });\n\n  it('should call previous', () => {\n    const previous = jest.fn();\n    const wrapper = mount(\n      <Carousel\n          activeIndex={0}\n          next={() => { }}\n          previous={previous}\n          items={slides}\n          onIndicatorsClickHandler={() => { }}\n          directionTextPrev={'Previous'}\n          directionTextNext={'Next'}\n        />\n    );\n    wrapper.find('a').first().simulate('click');\n    expect(previous).toHaveBeenCalled();\n  });\n});\n\n// Rendering\ndescribe('rendering', () => {\n  it('should show the carousel indicators', () => {\n    const wrapper = mount(\n      <Carousel\n          activeIndex={0}\n          next={() => { }}\n          previous={() => { }}\n          items={slides}\n          onIndicatorsClickHandler={() => { }}\n          directionTextPrev={'Previous'}\n          directionTextNext={'Next'}\n        />\n    );\n    expect(wrapper.find('.msc-carousel__indicators li').length).toEqual(3);\n  });\n\n  it('should show controls', () => {\n    const wrapper = mount(\n      <Carousel\n          activeIndex={0}\n          next={() => { }}\n          previous={() => { }}\n          items={slides}\n          onIndicatorsClickHandler={() => { }}\n          directionTextPrev={'Previous'}\n          directionTextNext={'Next'}\n        />\n    );\n    expect(wrapper.find('.msc-carousel__control__prev').length).toEqual(1);\n    expect(wrapper.find('.msc-carousel__control__next').length).toEqual(1);\n  });\n\n  it('should show a single slide', () => {\n    const wrapper = mount(\n      <Carousel\n          activeIndex={0}\n          next={() => { }}\n          previous={() => { }}\n          items={slides}\n          onIndicatorsClickHandler={() => { }}\n          directionTextPrev={'Previous'}\n          directionTextNext={'Next'}\n        />\n    );\n    expect(wrapper.find('.msc-carousel__item.active').hostNodes().length).toEqual(1);\n  });\n});\n\ndescribe('carouseling', () => {\n    it('should set indicatorClicked to true if indicator clicked', () => {\n      const wrapper = mount(\n       <Carousel\n        activeIndex={0}\n        next={() => { }}\n        previous={() => { }}\n        items={slides}\n        onIndicatorsClickHandler={() => { }}\n        directionTextPrev={'Previous'}\n        directionTextNext={'Next'}\n      />\n      );\n\n      wrapper.find('.msc-carousel__indicators').find('li').first().simulate('click');\n\n      const carouselElement = wrapper.instance() as Carousel;\n      expect(carouselElement.state.indicatorClicked).toEqual(true);\n    })\n  });\n\n  describe('carousel', () => {    \n    it('renders only slides', () => {\n      const input = renderer.create(\n          <div>\n              <Carousel\n                activeIndex={0}\n                next={() => { }}\n                previous={() => { }}\n                items={slides}\n                onIndicatorsClickHandler={() => { }}\n                directionTextPrev={'Previous'}\n                directionTextNext={'Next'}\n                hideFlipper={true}\n                hideIndicator={true}\n                transitionType={'fade'}\n              />\n          </div>\n      );\n      expect(input.toJSON()).toMatchSnapshot();\n    });\n\n    it('renders dismiss enabled', () => {\n      const input = renderer.create(\n          <div>\n              <Carousel\n                activeIndex={0}\n                next={() => { }}\n                previous={() => { }}\n                items={slides}\n                onIndicatorsClickHandler={() => { }}\n                directionTextPrev={'Previous'}\n                directionTextNext={'Next'}\n                dismissEnabled={true}\n                indicatorAriaText={'Indicators'}\n                touchScrollThreshold={100}\n                transitionType={'slide'}\n              />\n          </div>\n      );\n      expect(input.toJSON()).toMatchSnapshot();\n    });\n  });\n\n  // Interval\n  describe('interval', () => {\n    it('should not autoplay by default', () => {\n      const next = jest.fn();\n      const wrapper = mount(\n        <Carousel\n          activeIndex={0}\n          next={next}\n          previous={() => { }}\n          items={slides}\n          onIndicatorsClickHandler={() => { }}\n          directionTextPrev={'Previous'}\n          directionTextNext={'Next'}\n          interval={1000}\n        />\n      );\n      jest.runTimersToTime(1000);\n      expect(next).not.toHaveBeenCalled();\n      wrapper.unmount();\n    });\n\n    it('should autoplay when ride is carousel', () => {\n      const next = jest.fn();\n      const wrapper = mount(\n        <Carousel\n          activeIndex={0}\n          next={next}\n          previous={() => { }}\n          items={slides}\n          onIndicatorsClickHandler={() => { }}\n          directionTextPrev={'Previous'}\n          directionTextNext={'Next'}\n          interval={1000}\n          ride='carousel'\n        />\n      );\n      jest.runTimersToTime(1000);\n      expect(next).toHaveBeenCalled();\n      wrapper.unmount();\n    });\n\n    it('should accept a number', () => {\n      const next = jest.fn();\n\n      const wrapper = mount(\n        <Carousel\n          activeIndex={0}\n          next={next}\n          previous={() => { }}\n          items={slides}\n          onIndicatorsClickHandler={() => { }}\n          directionTextPrev={'Previous'}\n          directionTextNext={'Next'}\n          interval={1000}\n          ride='carousel'\n        />\n      );\n      jest.runTimersToTime(1000);\n      expect(next).toHaveBeenCalled();\n      wrapper.unmount();\n    });\n\n    it('should accept a boolean', () => {\n      const next = jest.fn();\n      const wrapper = mount(\n        <Carousel\n          activeIndex={0}\n          next={next}\n          previous={() => { }}\n          items={slides}\n          onIndicatorsClickHandler={() => { }}\n          directionTextPrev={'Previous'}\n          directionTextNext={'Next'}\n        />\n      );\n\n      jest.runTimersToTime(5000);\n      expect(next).not.toHaveBeenCalled();\n      wrapper.unmount();\n    });\n\n    it('should default to 5000', () => {\n      const next = jest.fn();\n\n      const wrapper = mount(\n        <Carousel next={next} previous={() => { }} activeIndex={0} ride='carousel' items={slides}/>\n      );\n\n      jest.runTimersToTime(5000);\n      expect(next).toHaveBeenCalled();\n      wrapper.unmount();\n    });\n\n    it('it should accept a string', () => {\n      const next = jest.fn();\n\n      const wrapper = mount(\n        <Carousel next={next} previous={() => { }} interval={1000} activeIndex={0} ride='carousel' items={slides}/>\n      );\n      jest.runTimersToTime(1000);\n      expect(next).toHaveBeenCalled();\n      wrapper.unmount();\n    });\n  });\n});\n"]}