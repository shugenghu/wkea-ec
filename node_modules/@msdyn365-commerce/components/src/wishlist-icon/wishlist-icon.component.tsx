/*---------------------------------------------------------------------------------------------
 *  Copyright (c) Microsoft Corporation. All rights reserved.
 *  Licensed under the MIT License. See License.txt in the project root for license information.
 *--------------------------------------------------------------------------------------------*/

import { Button, getPayloadObject, getTelemetryAttributes, ITelemetryContent, onTelemetryClick, UncontrolledTooltip } from '@msdyn365-commerce-modules/utilities';
import { getUrlSync, IComponent, IComponentProps, msdyn365Commerce } from '@msdyn365-commerce/core';
import classname from 'classnames';
import * as React from 'react';

export interface IWishlistIconComponentProps extends IComponentProps<{}> {
    className?: string;
    wishlistTooltipText: string;
    showButtonTooltip?: boolean;
    telemetryContent?: ITelemetryContent;
}

export interface IWishlistIconComponent extends IComponent<IWishlistIconComponentProps> {
}

const WishlistIconComponentActions = {
};

/**
 *
 * WishlistIcon component
 * @extends {React.PureComponent<IWishlistIconProps>}
 */
const WishlistIcon: React.FC<IWishlistIconComponentProps> = (props: IWishlistIconComponentProps) => {
    const wishlistIconRef: React.RefObject<HTMLButtonElement> = React.createRef();
    const text = props.wishlistTooltipText;
    const showButtonIconTooltip  = props.showButtonTooltip;
    const wishlistUrl = getUrlSync('wishlist', props.context.actionContext);
    const signInUrl = `${props.context.request.user.signInUrl}?ru=${wishlistUrl}`;
    const url = props.context.request.user.isAuthenticated ? wishlistUrl : signInUrl;
    const showTooltip = showButtonIconTooltip !== undefined ? showButtonIconTooltip: true;

    // Construct telemetry attribute to render
    const payLoad = getPayloadObject('click', props.telemetryContent!, text!, '');
    const attributes = getTelemetryAttributes(props.telemetryContent!, payLoad);

    return (
        <>
        <Button
            className={classname('msc-wishlist-icon', props.className)}
            href={url}
            aria-label={text}
            innerRef={wishlistIconRef}
            {...attributes}
            onClick={onTelemetryClick(props.telemetryContent!, payLoad, text!)}
        >
            <span className='msc-wishlist-icon__text'>{text}</span>
        </Button>
        {  showTooltip && <UncontrolledTooltip trigger={'hover focus'} target={wishlistIconRef}>{text}</UncontrolledTooltip>}
        </>
    );
};

// @ts-ignore
export const WishListIconComponent: React.FunctionComponent<IWishlistIconComponentProps> = msdyn365Commerce.createComponent<IWishlistIconComponent>(
    'WishListIcon',
    { component: WishlistIcon, ...WishlistIconComponentActions }
);
