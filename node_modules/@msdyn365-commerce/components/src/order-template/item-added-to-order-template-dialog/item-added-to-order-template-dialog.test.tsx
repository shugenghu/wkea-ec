import { render } from 'enzyme';
import * as React from 'react';

import { buildMockCoreContext, ICoreContext } from '@msdyn365-commerce/core';
import { ProductPrice, SimpleProduct } from '@msdyn365-commerce/retail-proxy';
import { IItemAddedToOrderTemplateDialogResources, ItemAddedToOrderTemplateDialog } from './item-added-to-order-template-dialog.component';

describe('ItemAddedToOrderTemplateDialog', () => {
    let mockCoreContext: ICoreContext;
    const basicProduct: SimpleProduct = {RecordId: 55555} as SimpleProduct;
    const productPrice: ProductPrice = { };
    const itemAddedToOrderTemplateDialogResources: IItemAddedToOrderTemplateDialogResources = {
        viewOrderTemplateButtonText: 'viewOrderTemplateButtonText',
        continueShoppingButtonText: 'continueShoppingButtonText',
        itemAddedToOrderTemplateHeaderItemOneText: 'itemAddedToOrderTemplateHeaderItemOneText',
        itemAddedToOrderTemplateHeaderItemFormatText: 'itemAddedToOrderTemplateHeaderItemFormatText',
        itemAddedToOrderTemplateHeaderMessageText: 'itemAddedToOrderTemplateHeaderMessageText',
        freePriceText: 'freePriceText',
        originalPriceText: 'originalPriceText',
        currentPriceText: 'currentPriceText'
    };

    beforeEach(() => {
        mockCoreContext = buildMockCoreContext({app: {config: {enableStockCheck: false, outOfStockThreshold: 5}}}) as ICoreContext;
    });

    it('renders correctly with all params', () => {
        const addToOrderTemplateDialog = render((
            <ItemAddedToOrderTemplateDialog
                id='id'
                typeName='type-name'
                context={mockCoreContext}
                data={{product: basicProduct, quantity: 2, productPrice: productPrice, orderTemplateId: 'id'}}
                modalOpen={false}
                className='class-name'
                dialogStrings={itemAddedToOrderTemplateDialogResources}
            />
        ));
        expect(addToOrderTemplateDialog).toMatchSnapshot();
    });

    it('renders correctly with all params and modal open', () => {
        const addToOrderTemplateDialog = render((
            <ItemAddedToOrderTemplateDialog
                id='id'
                typeName='type-name'
                context={mockCoreContext}
                data={{product: basicProduct, quantity: 2, productPrice: productPrice, orderTemplateId: 'id'}}
                modalOpen={true}
                className='class-name'
                dialogStrings={itemAddedToOrderTemplateDialogResources}
            />
        ));
        expect(addToOrderTemplateDialog).toMatchSnapshot();
    });
});