import { render } from 'enzyme';
import * as React from 'react';

import { buildMockCoreContext, ICoreContext } from '@msdyn365-commerce/core';
import { ProductList } from '@msdyn365-commerce/retail-proxy';
import { IOrderTemplateNameDialogResources } from '../order-template-name-dialog/order-template-name-dialog.component';
import { RenameOrderTemplateComponent } from './rename-order-template.component';

describe('RenameOrderTemplateComponent', () => {
    let mockCoreContext: ICoreContext;
    const renameOrderTemplateDialogResources: IOrderTemplateNameDialogResources = {
        orderTemplateHeaderLabel: 'renameOrderTemplateHeader',
        orderTemplateTitleLabel: 'orderTemplateTitle',
        orderTemplateNameAriaLabel: 'orderTemplateNameAriaLabel',
        orderTemplateDescription: 'renameOrderTemplateDescription',
        defaultOrderTemplateName: 'defaultOrderTemplateName',
        orderTemplateButtonLabel: 'renameOrderTemplateButtonText',
        orderTemplateCancelButtonLabel: 'cancelNewOrderTemplateCreationButtonText'
    };

    const orderTemplate: ProductList = {
        Id: 'id',
        Name: 'Product List'
    };

    beforeEach(() => {
        mockCoreContext = buildMockCoreContext({app: {config: {enableStockCheck: false, outOfStockThreshold: 5}}}) as ICoreContext;
    });

    it('renders correctly', () => {
        const renameOrderTemplateComponent = render((
            <RenameOrderTemplateComponent
                id='id'
                typeName='type-name'
                context={mockCoreContext}
                data={{
                    orderTemplate: orderTemplate,
                }}
                renameOrderTemplateDialogStrings={renameOrderTemplateDialogResources}
                renameOrderTemplateButtonText={renameOrderTemplateDialogResources.orderTemplateButtonLabel}
                onRenameTemplate={jest.fn()}
            />
        ));
        expect(renameOrderTemplateComponent).toMatchSnapshot();
    });
});