import { render } from 'enzyme';
import * as React from 'react';

import { buildMockCoreContext, ICoreContext } from '@msdyn365-commerce/core';
import { IOrderTemplateNameDialogResources, OrderTemplateNameDialog } from './order-template-name-dialog.component';

describe('OrderTemplateNameDialog', () => {
    let mockCoreContext: ICoreContext;
    const createOrderTemplateDialogResources: IOrderTemplateNameDialogResources = {
        orderTemplateHeaderLabel: 'createOrderTemplateHeader',
        orderTemplateTitleLabel: 'orderTemplateTitle',
        orderTemplateNameAriaLabel: 'orderTemplateNameAriaLabel',
        orderTemplateDescription: 'createOrderTemplateDescription',
        defaultOrderTemplateName: 'defaultOrderTemplateName',
        orderTemplateButtonLabel: 'createOrderTemplateButtonText',
        orderTemplateCancelButtonLabel: 'cancelNewOrderTemplateCreationButtonText'
    };
    const setModalStatus = (newValue: boolean) => {
        return;
    };
    const onCancel = () => {
        return;
    };
    const onSuccess = async () => {
        return;
    };

    beforeEach(() => {
        mockCoreContext = buildMockCoreContext({app: {config: {enableStockCheck: false, outOfStockThreshold: 5}}}) as ICoreContext;
    });

    it('renders correctly with all params', () => {
        const addToOrderTemplateDialog = render((
            <OrderTemplateNameDialog
                id='id'
                typeName='type-name'
                context={mockCoreContext}
                data={{}}
                modalOpen={false}
                isUpdateDialog={false}
                setModalOpen={setModalStatus}
                className='class-name'
                dialogStrings={createOrderTemplateDialogResources}
                onCancel={onCancel}
                onSuccess={onSuccess}
            />
        ));
        expect(addToOrderTemplateDialog).toMatchSnapshot();
    });

    it('renders correctly with all params and modal open', () => {
        const addToOrderTemplateDialog = render((
            <OrderTemplateNameDialog
                id='id'
                typeName='type-name'
                context={mockCoreContext}
                data={{}}
                modalOpen={true}
                isUpdateDialog={false}
                setModalOpen={setModalStatus}
                className='class-name'
                dialogStrings={createOrderTemplateDialogResources}
                onCancel={onCancel}
                onSuccess={onSuccess}
            />
        ));
        expect(addToOrderTemplateDialog).toMatchSnapshot();
    });
});