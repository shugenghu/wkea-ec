import { ITelemetryContent } from '@msdyn365-commerce-modules/utilities';
import { carouselTransition } from './Carousel';

/**
 * Carousel properties
 */

export interface ICarouselProps extends React.HTMLAttributes<HTMLElement> {
    activeIndex:number;

    /** controls if the left and right arrow keys should control the carousel */
    keyboard?: boolean;

    /** Slides in the Carousel */
    items?: React.ReactNode[];

    /** If set to "hover", pauses the cycling of the carousel on mouseenter and resumes the cycling of the carousel on
     * mouseleave. If set to false, hovering over the carousel won't pause it. (default: "hover")
     *  Only works if autoplay isn't set to false.
     */
    pause?: 'hover' | false;

    /** Autoplays the carousel after the user manually cycles the first item. If "carousel", autoplays the carousel on load.
     *  Only works if autoplay isn't set to false.
     */
    ride?: 'carousel';

    /** Does the carousel autoplay or not. Default value is true
     */
    autoplay?: boolean;

    /** Hide flippers. Default value is false
     */
    hideFlipper?: boolean;

    /** Hide Indicator. Default value is false
     */
    hideIndicator?: boolean;

    /** Dismiss enabled. Default value is false
     */
    dismissEnabled?: boolean;

    /** the interval at which the carousel automatically cycles (default: 5000) */
    // tslint:disable-next-line
    interval?: any;

    /** called when the mouse exits the Carousel */
    mouseExit?: React.ReactElement;

    /** controls the type of transition effect to be put on the Carousel like slide, fade etc */
    transitionType?: carouselTransition;

    /** controls whether the slide animation on the Carousel works or not */
    slide?: boolean;

    /** CSS Module that you want to set on the carousel */
    cssModule?: object;

    /** Threshold touch event must move by to trigger a scroll event */
    touchScrollThreshold?: number;

    /** Aria label text for indicators */
    indicatorAriaText?: string;

    /** Aria label text for dismiss carousel button */
    dismissCarouselAriaText?: string;

    /** Property to set previous direction */
    directionTextPrev: string;

    /** Property to set next direction */
    directionTextNext: string;

    /** Show Pagination Indicators */
    showPaginationTooltip?: boolean;

    /** The telemetry content */
    telemetryContent?: ITelemetryContent;

    /** a function which should advance the carousel to the next slide (via activeIndex) */
    next(): void;

    /** a function which should advance the carousel to the previous slide (via activeIndex) */
    previous(): void;

    /** called when the mouse enters the Carousel */
    mouseEnter?(e: React.MouseEvent): void;

    /** called when the mouse goes out the Carousel */
    mouseLeave?(e: React.MouseEvent): void;

     /** a function which should handles indicator (via activeIndex) */
     onIndicatorsClickHandler(idx: number): void;

     /** a function which should handles dismiss carousel */
     handleDismissCarousel?(): void;

     /** a function which should handles dismiss carousel */
     handleOnExited(): void;

     /** a function which should handles dismiss carousel */
     handleOnExiting(): void;

}
