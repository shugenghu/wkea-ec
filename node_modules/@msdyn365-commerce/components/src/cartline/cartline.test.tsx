/*!
 * Copyright (c) Microsoft Corporation.
 * All rights reserved. See LICENSE in the project root for license information.
 */

import { render } from 'enzyme';
import * as React from 'react';

import { buildMockCoreContext } from '@msdyn365-commerce/core';
import { SimpleProduct } from '@msdyn365-commerce/retail-proxy';
import {CartLineItemComponent} from '../index';

/*
1. Renders product correctly with dimension
2. Renders product correctly without dimension
3. Renders discount correctly with discount
*/

describe('Cartline', () => {
    const mockCoreContext = buildMockCoreContext({});

    it('renders correctly when the product with dimensions is passed to it', () => {
        const simpleProduct:SimpleProduct = {
            Name: 'Crew neck server',
            RecordId: 123,
            BasePrice: 25,
            Price: 25,
            AdjustedPrice: 25,
            ProductTypeValue: 1,
            Dimensions: [
                {
                    DimensionTypeValue: 3,
                    DimensionValue:{
                        RecordId: 1,
                        Value: 'S'
                    }
                },
                {
                    DimensionTypeValue: 1,
                    DimensionValue:{
                        RecordId: 2,
                        Value: 'Brown'
                    }
                },
                {
                    DimensionTypeValue: 2,
                    DimensionValue:{
                        RecordId: 2,
                        Value: 'Basic'
                    }
                },
                {
                    DimensionTypeValue: 4,
                    DimensionValue:{
                        RecordId: 3,
                        Value: 'Large'
                    }
                }
            ]
        };

        const cartLine = {
            Quantity: 1,
            NetAmountWithoutTax: 25,
            NetPrice: 27,
            ChargeLines: [
                {
                    Description: 'Test Charge 1',
                    IsShipping: false,
                    CalculatedAmount: 1.5
                },
                {
                    Description: 'Test Charge 2',
                    IsShipping: false,
                    CalculatedAmount: 0.8
                }
            ]
        };

        const cartline = render((
                                <CartLineItemComponent
                                    id='id'
                                    typeName='CartLineItem'
                                    context={mockCoreContext}
                                    resources = {
                                        {
                                            sizeString: 'Size',
                                            colorString: 'Color',
                                            styleString: 'Style',
                                            quantityDisplayString: 'Quantity',
                                            configString: 'Configuration',
                                            inputQuantityAriaLabel: 'Cart quantity dropdown',
                                            discountStringText:'Savings',
                                            originalPriceText:'Original Price',
                                            currentPriceText:'Current Price',
                                            shippingChargesText: 'Shipping charges'
                                        }
                                    }
                                    imageSettings = {{
                                        lazyload: true,
                                        viewports: {
                                            xs: { w: 132, h: 28, q: 'w=132&h=28&q=60&m=6' },
                                            lg: { w: 160, h: 48, q: 'w=160&h=48&q=60&m=6' }
                                        }
                                    }}
                                    gridSettings = {{
                                        xs: { w: 767 },
                                        sm: { w: 991 },
                                        md: { w: 1199 },
                                        lg: { w: 1599 },
                                        xl: { w: 1600 }
                                    }}
                                    data={{
                                        cartLine: cartLine,
                                        product: simpleProduct
                                    }}
                                />
                        ));
        expect(cartline).toMatchSnapshot();
    });

    it('renders correctly when the product without dimensions is passed to it', () => {
        const simpleProduct:SimpleProduct = {
            Name: 'Crew neck server',
            RecordId: 123,
            BasePrice: 25,
            Price: 25,
            AdjustedPrice: 25,
            ProductTypeValue: 1
        };

        const cartLine = {
            Quantity: 1,
            NetAmountWithoutTax: 25,
            NetPrice: 27
        };

        const cartline = render((
                                <CartLineItemComponent
                                    id='id'
                                    typeName='CartLineItem'
                                    context={mockCoreContext}
                                    currentQuantity = {10}
                                    resources = {
                                        {
                                            sizeString: 'Size',
                                            colorString: 'Color',
                                            styleString: 'Style',
                                            quantityDisplayString: 'Quantity',
                                            configString: 'Configuration',
                                            inputQuantityAriaLabel: 'Cart quantity dropdown',
                                            discountStringText: 'Savings',
                                            originalPriceText:'Original Price',
                                            currentPriceText:'Current Price',
                                            shippingChargesText: 'Shipping charges'
                                        }
                                    }
                                    imageSettings = {{
                                        lazyload: true,
                                        viewports: {
                                            xs: { w: 132, h: 28, q: 'w=132&h=28&q=60&m=6' },
                                            lg: { w: 160, h: 48, q: 'w=160&h=48&q=60&m=6' }
                                        }
                                    }}
                                    gridSettings = {{
                                        xs: { w: 767 },
                                        sm: { w: 991 },
                                        md: { w: 1199 },
                                        lg: { w: 1599 },
                                        xl: { w: 1600 }
                                    }}
                                    data={{
                                        cartLine: cartLine,
                                        product: simpleProduct
                                    }}
                                />
                        ));
        expect(cartline).toMatchSnapshot();
    });

    it('renders correctly when the product with dimensions and discount is passed to it', () => {
        const simpleProduct:SimpleProduct = {
            Name: 'Crew neck server',
            RecordId: 123,
            BasePrice: 25,
            Price: 25,
            AdjustedPrice: 25,
            ProductTypeValue: 1,
            Dimensions: [
                {
                    DimensionTypeValue: 3,
                    DimensionValue:{
                        RecordId: 1,
                        Value: 'S'
                    }
                },
                {
                    DimensionTypeValue: 1,
                    DimensionValue:{
                        RecordId: 2,
                        Value: 'Brown'
                    }
                },
                {
                    DimensionTypeValue: 4,
                    DimensionValue:{
                        RecordId: 3,
                        Value: 'Large'
                    }
                }
            ]
        };

        const cartLine = {
            Quantity: 1,
            NetAmountWithoutTax: 25,
            NetPrice: 27,
            DiscountLines: [
                {
                    Percentage: 10,
                    OfferId: '2',
                    OfferName: 'WeeklyAD',
                    DiscountCost: 234
                }
            ]
        };

        const cartline = render((
                                <CartLineItemComponent
                                    id='id'
                                    typeName='CartLineItem'
                                    context={mockCoreContext}
                                    currentQuantity = {10}
                                    resources = {
                                        {
                                            sizeString: 'Size',
                                            colorString: 'Color',
                                            styleString: 'Style',
                                            quantityDisplayString: 'Quantity',
                                            configString: 'Configuration',
                                            inputQuantityAriaLabel: 'Cart quantity dropdown',
                                            discountStringText: 'Savings',
                                            originalPriceText:'Original Price',
                                            currentPriceText:'Current Price',
                                            shippingChargesText: 'Shipping charges'
                                        }
                                    }
                                    imageSettings = {{
                                        lazyload: true,
                                        viewports: {
                                            xs: { w: 132, h: 28, q: 'w=132&h=28&q=60&m=6' },
                                            lg: { w: 160, h: 48, q: 'w=160&h=48&q=60&m=6' }
                                        }
                                    }}
                                    gridSettings = {{
                                        xs: { w: 767 },
                                        sm: { w: 991 },
                                        md: { w: 1199 },
                                        lg: { w: 1599 },
                                        xl: { w: 1600 }
                                    }}
                                    data={{
                                        cartLine: cartLine,
                                        product: simpleProduct
                                    }}
                                />
                        ));
        expect(cartline).toMatchSnapshot();
    });

    it('renders correctly when the product discount has no percentage', () => {
        const simpleProduct:SimpleProduct = {
            Name: 'Crew neck server',
            RecordId: 123,
            BasePrice: 25,
            Price: 25,
            AdjustedPrice: 25,
            ProductTypeValue: 1,
            Dimensions: [
                {
                    DimensionTypeValue: 3,
                    DimensionValue:{
                        RecordId: 1,
                        Value: 'S'
                    }
                },
                {
                    DimensionTypeValue: 1,
                    DimensionValue:{
                        RecordId: 2,
                        Value: 'Brown'
                    }
                },
                {
                    DimensionTypeValue: 4,
                    DimensionValue:{
                        RecordId: 3,
                        Value: 'Large'
                    }
                }
            ]
        };

        const cartLine = {
            Quantity: 1,
            NetAmountWithoutTax: 25,
            NetPrice: 27,
            DiscountLines: [
                {
                    OfferId: '2',
                    OfferName: 'WeeklyAD',
                    DiscountCost: 234
                }
            ]
        };

        const cartline = render((
                                <CartLineItemComponent
                                    id='id'
                                    typeName='CartLineItem'
                                    context={mockCoreContext}
                                    currentQuantity = {10}
                                    resources = {
                                        {
                                            sizeString: 'Size',
                                            colorString: 'Color',
                                            styleString: 'Style',
                                            quantityDisplayString: 'Quantity',
                                            configString: 'Configuration',
                                            inputQuantityAriaLabel: 'Cart quantity dropdown',
                                            discountStringText: 'Savings',
                                            originalPriceText:'Original Price',
                                            currentPriceText:'Current Price',
                                            shippingChargesText: 'Shipping charges'
                                        }
                                    }
                                    imageSettings = {{
                                        lazyload: true,
                                        viewports: {
                                            xs: { w: 132, h: 28, q: 'w=132&h=28&q=60&m=6' },
                                            lg: { w: 160, h: 48, q: 'w=160&h=48&q=60&m=6' }
                                        }
                                    }}
                                    gridSettings = {{
                                        xs: { w: 767 },
                                        sm: { w: 991 },
                                        md: { w: 1199 },
                                        lg: { w: 1599 },
                                        xl: { w: 1600 }
                                    }}
                                    data={{
                                        cartLine: cartLine,
                                        product: simpleProduct
                                    }}
                                />
                        ));
        expect(cartline).toMatchSnapshot();
    });

    it('renders correctly when the product discount has no OfferName', () => {
        const simpleProduct:SimpleProduct = {
            Name: 'Crew neck server',
            RecordId: 123,
            BasePrice: 25,
            Price: 25,
            AdjustedPrice: 25,
            ProductTypeValue: 1,
            Dimensions: [
                {
                    DimensionTypeValue: 3,
                    DimensionValue:{
                        RecordId: 1,
                        Value: 'S'
                    }
                },
                {
                    DimensionTypeValue: 1,
                    DimensionValue:{
                        RecordId: 2,
                        Value: 'Brown'
                    }
                },
                {
                    DimensionTypeValue: 4,
                    DimensionValue:{
                        RecordId: 3,
                        Value: 'Large'
                    }
                }
            ]
        };

        const cartLine = {
            Quantity: 1,
            NetAmountWithoutTax: 25,
            NetPrice: 27,
            DiscountLines: [
                {
                    OfferName: 'WeeklyAD',
                    Perecntage: 10,
                    DiscountCost: 234
                }
            ]
        };

        const cartline = render((
                                <CartLineItemComponent
                                    id='id'
                                    typeName='CartLineItem'
                                    context={mockCoreContext}
                                    currentQuantity = {10}
                                    resources = {
                                        {
                                            sizeString: 'Size',
                                            colorString: 'Color',
                                            styleString: 'Style',
                                            quantityDisplayString: 'Quantity',
                                            configString: 'Configuration',
                                            inputQuantityAriaLabel: 'Cart quantity dropdown',
                                            discountStringText: 'Savings',
                                            originalPriceText:'Original Price',
                                            currentPriceText:'Current Price',
                                            shippingChargesText: 'Shipping charges'
                                        }
                                    }
                                    imageSettings = {{
                                        lazyload: true,
                                        viewports: {
                                            xs: { w: 132, h: 28, q: 'w=132&h=28&q=60&m=6' },
                                            lg: { w: 160, h: 48, q: 'w=160&h=48&q=60&m=6' }
                                        }
                                    }}
                                    gridSettings = {{
                                        xs: { w: 767 },
                                        sm: { w: 991 },
                                        md: { w: 1199 },
                                        lg: { w: 1599 },
                                        xl: { w: 1600 }
                                    }}
                                    data={{
                                        cartLine: cartLine,
                                        product: simpleProduct
                                    }}
                                />
                        ));
        expect(cartline).toMatchSnapshot();
    });

    it('renders correctly when the product with dimensions and an additional unknown dimension and discount is passed to it', () => {
        const simpleProduct:SimpleProduct = {
            Name: 'Crew neck server',
            RecordId: 123,
            BasePrice: 25,
            Price: 25,
            AdjustedPrice: 25,
            ProductTypeValue: 1,
            Dimensions: [
                {
                    DimensionTypeValue: 3,
                    DimensionValue:{
                        RecordId: 1,
                        Value: 'S'
                    }
                },
                {
                    DimensionTypeValue: 1,
                    DimensionValue:{
                        RecordId: 2,
                        Value: 'Brown'
                    }
                },
                {
                    DimensionTypeValue: 4,
                    DimensionValue:{
                        RecordId: 3,
                        Value: 'Large'
                    }
                },
                {
                    DimensionTypeValue: 5,
                    DimensionValue:{
                        RecordId: 3,
                        Value: 'Large'
                    }
                }
            ]
        };

        const cartLine = {
            Quantity: 1,
            NetAmountWithoutTax: 25,
            NetPrice: 27,
            DiscountLines: [
                {
                    Percentage: 10,
                    OfferId: '2',
                    OfferName: 'WeeklyAD',
                    DiscountCost: 234
                }
            ]
        };

        const cartline = render((
                                <CartLineItemComponent
                                    id='id'
                                    typeName='CartLineItem'
                                    context={mockCoreContext}
                                    currentQuantity = {10}
                                    resources = {
                                        {
                                            sizeString: 'Size',
                                            colorString: 'Color',
                                            styleString: 'Style',
                                            quantityDisplayString: 'Quantity',
                                            configString: 'Configuration',
                                            inputQuantityAriaLabel: 'Cart quantity dropdown',
                                            discountStringText: 'Savings',
                                            originalPriceText:'Original Price',
                                            currentPriceText:'Current Price',
                                            shippingChargesText: 'Shipping charges'
                                        }
                                    }
                                    imageSettings = {{
                                        lazyload: true,
                                        viewports: {
                                            xs: { w: 132, h: 28, q: 'w=132&h=28&q=60&m=6' },
                                            lg: { w: 160, h: 48, q: 'w=160&h=48&q=60&m=6' }
                                        }
                                    }}
                                    gridSettings = {{
                                        xs: { w: 767 },
                                        sm: { w: 991 },
                                        md: { w: 1199 },
                                        lg: { w: 1599 },
                                        xl: { w: 1600 }
                                    }}
                                    data={{
                                        cartLine: cartLine,
                                        product: simpleProduct
                                    }}
                                />
                        ));
        expect(cartline).toMatchSnapshot();
    });

    it('renders correctly when the product with dimensions is passed to it and quantity is editable', () => {
        const simpleProduct:SimpleProduct = {
            Name: 'Crew neck server',
            RecordId: 123,
            BasePrice: 25,
            Price: 25,
            AdjustedPrice: 25,
            ProductTypeValue: 1,
            Dimensions: [
                {
                    DimensionTypeValue: 3,
                    DimensionValue:{
                        RecordId: 1,
                        Value: 'S'
                    }
                },
                {
                    DimensionTypeValue: 1,
                    DimensionValue:{
                        RecordId: 2,
                        Value: 'Brown'
                    }
                },
                {
                    DimensionTypeValue: 2,
                    DimensionValue:{
                        RecordId: 2,
                        Value: 'Basic'
                    }
                },
                {
                    DimensionTypeValue: 4,
                    DimensionValue:{
                        RecordId: 3,
                        Value: 'Large'
                    }
                }
            ]
        };

        const cartLine = {
            Quantity: 1,
            NetAmountWithoutTax: 25,
            NetPrice: 27
        };

        const cartline = render((
                                <CartLineItemComponent
                                    id='id'
                                    typeName='CartLineItem'
                                    context={mockCoreContext}
                                    resources = {
                                        {
                                            sizeString: 'Size',
                                            colorString: 'Color',
                                            styleString: 'Style',
                                            quantityDisplayString: 'Quantity',
                                            configString: 'Configuration',
                                            inputQuantityAriaLabel: 'Cart quantity dropdown',
                                            discountStringText:'Savings',
                                            originalPriceText:'Original Price',
                                            currentPriceText:'Current Price',
                                            shippingChargesText: 'Shipping charges'
                                        }
                                    }
                                    imageSettings = {{
                                        lazyload: true,
                                        viewports: {
                                            xs: { w: 132, h: 28, q: 'w=132&h=28&q=60&m=6' },
                                            lg: { w: 160, h: 48, q: 'w=160&h=48&q=60&m=6' }
                                        }
                                    }}
                                    gridSettings = {{
                                        xs: { w: 767 },
                                        sm: { w: 991 },
                                        md: { w: 1199 },
                                        lg: { w: 1599 },
                                        xl: { w: 1600 }
                                    }}
                                    data={{
                                        cartLine: cartLine,
                                        product: simpleProduct
                                    }}
                                    isQuantityEditable={true}
                                    currentQuantity={2}
                                    maxQuantity={5}
                                />
                        ));
        expect(cartline).toMatchSnapshot();
    });
});