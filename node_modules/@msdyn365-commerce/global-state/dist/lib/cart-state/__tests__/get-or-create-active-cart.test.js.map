{"version":3,"file":"get-or-create-active-cart.test.js","sourceRoot":"./src/","sources":["cart-state/__tests__/get-or-create-active-cart.test.ts"],"names":[],"mappings":"AAAA,OAAO,MAAM,CAAC;AAEd,OAAO,KAAK,IAAI,MAAM,yBAAyB,CAAC;AAEhD,OAAO,KAAK,gBAAgB,MAAM,qEAAqE,CAAC;AACxG,OAAO,KAAK,0BAA0B,MAAM,+EAA+E,CAAC;AAC5H,OAAO,sBAAsB,MAAM,2CAA2C,CAAC;AAC/E,OAAO,kBAAkB,MAAM,sCAAsC,CAAC;AACtE,OAAO,qBAAqB,EAAE,KAAK,OAAO,MAAM,8BAA8B,CAAC;AAO/E,MAAM,cAAc,GAAG,IAAI,CAAC,gBAAgB,CAAyC,kBAAkB,CAAC,CAAC;AACzG,MAAM,kBAAkB,GAAG,IAAI,CAAC,gBAAgB,CAAyC,sBAAsB,CAAC,CAAC;AACjH,aAAa;AACb,0BAA0B,CAAC,4BAA4B,GAAG,IAAI,CAAC,EAAE,EAAE,CAAC,iBAAiB,CAAC,EAAE,CAAC,CAAC;AAE1F,QAAQ,CAAC,kGAAkG,EAAE,GAAG,EAAE;IAC9G,MAAM,aAAa,GAAG,IAAI,CAAC,sBAAsB,CAAC,EAAE,cAAc,EAAE,CAAC,CAAC;IACtE,IAAI,iBAAiB,GAAW,EAAE,CAAC;IAEnC,cAAc;IACd,SAAS,CAAC,GAAG,EAAE;QACX,IAAI,CAAC,iBAAiB,EAAE,CAAC;QACzB,IAAI,CAAC,IAAI,CAAC,qEAAqE,CAAC,CAAC;QACjF,aAAa,CAAC,cAAc,CAAC,OAAO,CAAC,aAAa,GAAG,CAAC,CAAC,IAAI,EAAE,eAAe,EAAE,EAAE;YAC5E,MAAM,MAAM,GAAG,eAAe,CAAC,CAAC,gBAAsB,CAAC,eAAqB,CAAC;YAC7E,iBAAiB,GAAG,CAAC,MAAM,EAAE,IAAI,CAAC,EAAE,CAAC,CAAC,IAAI,CAAC,GAAG,CAAC,CAAC;QACpD,CAAC,CAAC,CAAC;QAEH,aAAa,CAAC,cAAc,CAAC,OAAO,CAAC,aAAa,GAAG,CAAC,GAAG,EAAE;YACvD,OAAO,iBAAiB,CAAC;QAC7B,CAAC,CAAC,CAAC;IACP,CAAC,CAAC,CAAC;IAEH,UAAU,CAAC,GAAG,EAAE;QACZ,IAAI,CAAC,aAAa,EAAE,CAAC;QAErB,gDAAgD;QAChD,gBAAgB,CAAC,WAAW,GAAG,IAAI,CAAC,EAAE,EAAE,CAAC,iBAAiB,CAAC;YACvD;gBACI,EAAE,EAAE,OAAO;gBACX,OAAO,EAAE,GAAG;gBACZ,SAAS,EAAE;oBACP;wBACI,MAAM,EAAE,SAAS;qBACpB;iBACJ;aACJ;SACJ,CAAC,CAAC;QACH,gDAAgD;QAChD,gBAAgB,CAAC,SAAS,GAAG,IAAI,CAAC,EAAE,EAAE,CAAC,iBAAiB,CAAC;YACrD,EAAE,EAAE,QAAQ;YACZ,SAAS,EAAE;gBACP;oBACI,MAAM,EAAE,OAAO;iBAClB;gBACD;oBACI,MAAM,EAAE,OAAO;oBACf,YAAY,EAAE,IAAI;iBACrB;aACJ;SACJ,CAAC,CAAC;QAEH,gDAAgD;QAChD,gBAAgB,CAAC,oBAAoB,GAAG,IAAI,CAAC,EAAE,EAAE,CAAC,iBAAiB,CAAC;YAChE,EAAE,EAAE,QAAQ;YACZ,SAAS,EAAE,EACV;SACJ,CAAC,CAAC;IACP,CAAC,CAAC,CAAC;IAEH,EAAE,CAAC,yDAAyD,EAAE,KAAK,IAAI,EAAE;QACrE,gDAAgD;QAChD,gBAAgB,CAAC,iBAAiB,GAAG,IAAI,CAAC,EAAE,EAAE,CAAC,iBAAiB,CAAC;YAC7D,EAAE,EAAE,OAAO;YACX,SAAS,EAAE;gBACP;oBACI,MAAM,EAAE,SAAS;iBACpB;gBACD;oBACI,MAAM,EAAE,OAAO;iBAClB;aACJ;SACJ,CAAC,CAAC;QAEH,iBAAiB,GAAG,QAAQ,CAAC;QAE7B,MAAM,qBAAqB,CAAC,aAAa,CAAC;aACrC,IAAI,CAAC,CAAC,IAAsB,EAAE,EAAE;YAC7B,MAAM,CAAC,IAAI,CAAC,CAAC,GAAG,CAAC,aAAa,EAAE,CAAC;YAEjC,MAAM,CAAC,IAAK,CAAC,EAAE,CAAC,CAAC,IAAI,CAAC,OAAO,CAAC,CAAC;YAC/B,MAAM,CAAC,IAAK,CAAC,SAAS,CAAC,CAAC,GAAG,CAAC,IAAI,CAAC,SAAS,CAAC,CAAC;YAC5C,MAAM,CAAC,IAAK,CAAC,SAAU,CAAC,MAAM,CAAC,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC;QAC5C,CAAC,CAAC;aACD,KAAK,CAAC,CAAC,KAAY,EAAE,EAAE;YACpB,OAAO,CAAC,KAAK,CAAC,KAAK,CAAC,CAAC;YACrB,MAAM,IAAI,KAAK,CAAC,gFAAgF,CAAC,CAAC;QACtG,CAAC,CAAC,CAAC;IACX,CAAC,CAAC,CAAC;IAEH,EAAE,CAAC,0BAA0B,EAAE,KAAK,IAAI,EAAE;QACtC,gDAAgD;QAChD,gBAAgB,CAAC,iBAAiB,GAAG,IAAI,CAAC,EAAE,EAAE,CAAC,iBAAiB,CAAC,IAAI,KAAK,CAAC,MAAM,CAAC,CAAC,CAAC;QAEpF,iBAAiB,GAAG,QAAQ,CAAC;QAE7B,MAAM,qBAAqB,CAAC,aAAa,CAAC;aACrC,IAAI,CAAC,CAAC,IAAsB,EAAE,EAAE;YAC7B,MAAM,CAAC,IAAI,CAAC,CAAC,GAAG,CAAC,aAAa,EAAE,CAAC;YAEjC,MAAM,CAAC,IAAK,CAAC,EAAE,CAAC,CAAC,IAAI,CAAC,OAAO,CAAC,CAAC;YAC/B,MAAM,CAAC,IAAK,CAAC,SAAS,CAAC,CAAC,GAAG,CAAC,IAAI,CAAC,SAAS,CAAC,CAAC;YAC5C,MAAM,CAAC,IAAK,CAAC,SAAU,CAAC,MAAM,CAAC,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC;QAC5C,CAAC,CAAC;aACD,KAAK,CAAC,CAAC,KAAY,EAAE,EAAE;YACpB,OAAO,CAAC,KAAK,CAAC,KAAK,CAAC,CAAC;YACrB,MAAM,IAAI,KAAK,CAAC,gFAAgF,CAAC,CAAC;QACtG,CAAC,CAAC,CAAC;IACX,CAAC,CAAC,CAAC;IAEH,EAAE,CAAC,qCAAqC,EAAE,KAAK,IAAI,EAAE;QACjD,gDAAgD;QAChD,gBAAgB,CAAC,iBAAiB,GAAG,IAAI,CAAC,EAAE,EAAE,CAAC,iBAAiB,CAAC,SAAS,CAAC,CAAC;QAE5E,iBAAiB,GAAG,QAAQ,CAAC;QAE7B,MAAM,qBAAqB,CAAC,aAAa,CAAC;aACrC,IAAI,CAAC,CAAC,IAAsB,EAAE,EAAE;YAC7B,MAAM,CAAC,IAAI,CAAC,CAAC,GAAG,CAAC,aAAa,EAAE,CAAC;YAEjC,MAAM,CAAC,IAAK,CAAC,EAAE,CAAC,CAAC,IAAI,CAAC,OAAO,CAAC,CAAC;YAC/B,MAAM,CAAC,IAAK,CAAC,SAAS,CAAC,CAAC,GAAG,CAAC,IAAI,CAAC,SAAS,CAAC,CAAC;YAC5C,MAAM,CAAC,IAAK,CAAC,SAAU,CAAC,MAAM,CAAC,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC;QAC5C,CAAC,CAAC;aACD,KAAK,CAAC,CAAC,KAAY,EAAE,EAAE;YACpB,OAAO,CAAC,KAAK,CAAC,KAAK,CAAC,CAAC;YACrB,MAAM,IAAI,KAAK,CAAC,gFAAgF,CAAC,CAAC;QACtG,CAAC,CAAC,CAAC;IACX,CAAC,CAAC,CAAC;IAEH,EAAE,CAAC,oCAAoC,EAAE,KAAK,IAAI,EAAE;QAChD,gDAAgD;QAChD,gBAAgB,CAAC,iBAAiB,GAAG,IAAI,CAAC,EAAE,EAAE,CAAC,iBAAiB,CAAC,EAAE,CAAC,CAAC;QAErE,iBAAiB,GAAG,QAAQ,CAAC;QAE7B,MAAM,qBAAqB,CAAC,aAAa,CAAC;aACrC,IAAI,CAAC,CAAC,IAAsB,EAAE,EAAE;YAC7B,MAAM,CAAC,IAAI,CAAC,CAAC,GAAG,CAAC,aAAa,EAAE,CAAC;YAEjC,MAAM,CAAC,IAAK,CAAC,EAAE,CAAC,CAAC,IAAI,CAAC,OAAO,CAAC,CAAC;YAC/B,MAAM,CAAC,IAAK,CAAC,SAAS,CAAC,CAAC,GAAG,CAAC,IAAI,CAAC,SAAS,CAAC,CAAC;YAC5C,MAAM,CAAC,IAAK,CAAC,SAAU,CAAC,MAAM,CAAC,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC;QAC5C,CAAC,CAAC;aACD,KAAK,CAAC,CAAC,KAAY,EAAE,EAAE;YACpB,OAAO,CAAC,KAAK,CAAC,KAAK,CAAC,CAAC;YACrB,MAAM,IAAI,KAAK,CAAC,gFAAgF,CAAC,CAAC;QACtG,CAAC,CAAC,CAAC;IACX,CAAC,CAAC,CAAC;AACP,CAAC,CAAC,CAAC;AAEH,QAAQ,CAAC,kGAAkG,EAAE,GAAG,EAAE;IAC9G,MAAM,aAAa,GAAG,IAAI,CAAC,sBAAsB,CAAC,EAAE,cAAc,EAAE,CAAC,CAAC;IACtE,IAAI,iBAAiB,GAAW,EAAE,CAAC;IAEnC,cAAc;IACd,SAAS,CAAC,GAAG,EAAE;QACX,IAAI,CAAC,iBAAiB,EAAE,CAAC;QACzB,IAAI,CAAC,IAAI,CAAC,qEAAqE,CAAC,CAAC;QACjF,aAAa,CAAC,cAAc,CAAC,OAAO,CAAC,aAAa,GAAG,CAAC,CAAC,IAAI,EAAE,eAAe,EAAE,EAAE;YAC5E,MAAM,MAAM,GAAG,eAAe,CAAC,CAAC,gBAAsB,CAAC,eAAqB,CAAC;YAC7E,iBAAiB,GAAG,CAAC,MAAM,EAAE,IAAI,CAAC,EAAE,CAAC,CAAC,IAAI,CAAC,GAAG,CAAC,CAAC;QACpD,CAAC,CAAC,CAAC;QAEH,aAAa,CAAC,cAAc,CAAC,OAAO,CAAC,aAAa,GAAG,CAAC,GAAG,EAAE;YACvD,OAAO,iBAAiB,CAAC;QAC7B,CAAC,CAAC,CAAC;IACP,CAAC,CAAC,CAAC;IAEH,UAAU,CAAC,GAAG,EAAE;QACZ,IAAI,CAAC,aAAa,EAAE,CAAC;QAErB,gDAAgD;QAChD,gBAAgB,CAAC,WAAW,GAAG,IAAI,CAAC,EAAE,EAAE,CAAC,iBAAiB,CAAC;YACvD;gBACI,EAAE,EAAE,OAAO;gBACX,OAAO,EAAE,GAAG;gBACZ,SAAS,EAAE;oBACP;wBACI,MAAM,EAAE,SAAS;qBACpB;iBACJ;aACJ;SACJ,CAAC,CAAC;QACH,gDAAgD;QAChD,gBAAgB,CAAC,SAAS,GAAG,IAAI,CAAC,EAAE,EAAE,CAAC,iBAAiB,CAAC;YACrD,EAAE,EAAE,QAAQ;YACZ,SAAS,EAAE;gBACP;oBACI,MAAM,EAAE,OAAO;iBAClB;gBACD;oBACI,MAAM,EAAE,OAAO;oBACf,YAAY,EAAE,IAAI;iBACrB;aACJ;SACJ,CAAC,CAAC;QAEH,gDAAgD;QAChD,gBAAgB,CAAC,oBAAoB,GAAG,IAAI,CAAC,EAAE,EAAE,CAAC,iBAAiB,CAAC;YAChE,EAAE,EAAE,QAAQ;YACZ,SAAS,EAAE,EACV;SACJ,CAAC,CAAC;IACP,CAAC,CAAC,CAAC;IAEH,EAAE,CAAC,yDAAyD,EAAE,KAAK,IAAI,EAAE;QACrE,gDAAgD;QAChD,gBAAgB,CAAC,iBAAiB,GAAG,IAAI,CAAC,EAAE,EAAE,CAAC,iBAAiB,CAAC;YAC7D,EAAE,EAAE,OAAO;YACX,SAAS,EAAE;gBACP;oBACI,MAAM,EAAE,SAAS;iBACpB;gBACD;oBACI,MAAM,EAAE,OAAO;iBAClB;aACJ;SACJ,CAAC,CAAC;QAEH,iBAAiB,GAAG,QAAQ,CAAC;QAC7B,MAAM,qBAAqB,CAAC,aAAa,CAAC;aACrC,IAAI,CAAC,CAAC,IAAsB,EAAE,EAAE;YAC7B,MAAM,CAAC,IAAI,CAAC,CAAC,GAAG,CAAC,aAAa,EAAE,CAAC;YAEjC,MAAM,CAAC,IAAK,CAAC,EAAE,CAAC,CAAC,IAAI,CAAC,OAAO,CAAC,CAAC;YAC/B,MAAM,CAAC,IAAK,CAAC,SAAS,CAAC,CAAC,GAAG,CAAC,IAAI,CAAC,SAAS,CAAC,CAAC;YAC5C,MAAM,CAAC,IAAK,CAAC,SAAU,CAAC,MAAM,CAAC,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC;QAC5C,CAAC,CAAC;aACD,KAAK,CAAC,CAAC,KAAY,EAAE,EAAE;YACpB,OAAO,CAAC,KAAK,CAAC,KAAK,CAAC,CAAC;YACrB,MAAM,IAAI,KAAK,CAAC,gFAAgF,CAAC,CAAC;QACtG,CAAC,CAAC,CAAC;IACX,CAAC,CAAC,CAAC;AACP,CAAC,CAAC,CAAC;AACH,QAAQ,CAAC,iIAAiI,EAAE,GAAG,EAAE;IAC7I,MAAM,aAAa,GAAG,IAAI,CAAC,sBAAsB,CAAC,EAAE,cAAc,EAAE,CAAC,CAAC;IACtE,IAAI,iBAAiB,GAAW,EAAE,CAAC;IAEnC,cAAc;IACd,SAAS,CAAC,GAAG,EAAE;QACX,IAAI,CAAC,iBAAiB,EAAE,CAAC;QACzB,IAAI,CAAC,IAAI,CAAC,qEAAqE,CAAC,CAAC;QACjF,aAAa,CAAC,cAAc,CAAC,GAAG,CAAC,MAAM,CAAC,0BAA0B,GAAE,EAAE,CAAC;QACvE,aAAa,CAAC,cAAc,CAAC,OAAO,CAAC,aAAa,GAAG,CAAC,CAAC,IAAI,EAAE,eAAe,EAAE,EAAE;YAC5E,MAAM,MAAM,GAAG,eAAe,CAAC,CAAC,gBAAsB,CAAC,eAAqB,CAAC;YAC7E,iBAAiB,GAAG,CAAC,MAAM,EAAE,IAAI,CAAC,EAAE,CAAC,CAAC,IAAI,CAAC,GAAG,CAAC,CAAC;QACpD,CAAC,CAAC,CAAC;QAEH,aAAa,CAAC,cAAc,CAAC,OAAO,CAAC,aAAa,GAAG,CAAC,GAAG,EAAE;YACvD,OAAO,iBAAiB,CAAC;QAC7B,CAAC,CAAC,CAAC;IACP,CAAC,CAAC,CAAC;IAEH,UAAU,CAAC,GAAG,EAAE;QACZ,IAAI,CAAC,aAAa,EAAE,CAAC;QAErB,gDAAgD;QAChD,gBAAgB,CAAC,WAAW,GAAG,IAAI,CAAC,EAAE,EAAE,CAAC,iBAAiB,CAAC;YACvD;gBACI,EAAE,EAAE,OAAO;gBACX,SAAS,EAAE;oBACP;wBACI,MAAM,EAAE,SAAS;qBACpB;iBACJ;aACJ;SACJ,CAAC,CAAC;QACH,gDAAgD;QAChD,gBAAgB,CAAC,SAAS,GAAG,IAAI,CAAC,EAAE,EAAE,CAAC,iBAAiB,CAAC;YACrD,EAAE,EAAE,QAAQ;YACZ,SAAS,EAAE;gBACP;oBACI,MAAM,EAAE,SAAS;iBACpB;gBACD;oBACI,MAAM,EAAE,SAAS;oBACjB,YAAY,EAAE,IAAI;iBACrB;aACJ;SACJ,CAAC,CAAC;IACP,CAAC,CAAC,CAAC;IAEH,EAAE,CAAC,yDAAyD,EAAE,KAAK,IAAI,EAAE;QACrE,gDAAgD;QAChD,gBAAgB,CAAC,iBAAiB,GAAG,IAAI,CAAC,EAAE,EAAE,CAAC,iBAAiB,CAAC;YAC7D,EAAE,EAAE,OAAO;YACX,SAAS,EAAE;gBACP;oBACI,MAAM,EAAE,WAAW;oBACnB,YAAY,EAAE,IAAI;iBACrB;gBACD;oBACI,MAAM,EAAE,WAAW;oBACnB,YAAY,EAAE,IAAI;iBACrB;aACJ;SACJ,CAAC,CAAC;QAEH,iBAAiB,GAAG,QAAQ,CAAC;QAE7B,MAAM,qBAAqB,CAAC,aAAa,CAAC;aACrC,IAAI,CAAC,CAAC,IAAsB,EAAE,EAAE;YAC7B,MAAM,CAAC,IAAI,CAAC,CAAC,GAAG,CAAC,aAAa,EAAE,CAAC;YAEjC,MAAM,CAAC,IAAK,CAAC,EAAE,CAAC,CAAC,IAAI,CAAC,OAAO,CAAC,CAAC;YAC/B,MAAM,CAAC,IAAK,CAAC,SAAS,CAAC,CAAC,GAAG,CAAC,IAAI,CAAC,SAAS,CAAC,CAAC;YAC5C,MAAM,CAAC,IAAK,CAAC,SAAU,CAAC,MAAM,CAAC,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC;QAC5C,CAAC,CAAC;aACD,KAAK,CAAC,CAAC,KAAY,EAAE,EAAE;YACpB,OAAO,CAAC,KAAK,CAAC,KAAK,CAAC,CAAC;YACrB,MAAM,IAAI,KAAK,CAAC,gFAAgF,CAAC,CAAC;QACtG,CAAC,CAAC,CAAC;IACX,CAAC,CAAC,CAAC;AACP,CAAC,CAAC,CAAC;AAEH,QAAQ,CAAC,gHAAgH,EAAE,GAAG,EAAE;IAC5H,MAAM,aAAa,GAAG,IAAI,CAAC,sBAAsB,CAAC,EAAE,cAAc,EAAE,CAAC,CAAC;IACtE,IAAI,iBAAiB,GAAW,EAAE,CAAC;IAEnC,cAAc;IACd,SAAS,CAAC,GAAG,EAAE;QACX,IAAI,CAAC,iBAAiB,EAAE,CAAC;QACzB,IAAI,CAAC,IAAI,CAAC,qEAAqE,CAAC,CAAC;QAEjF,aAAa,CAAC,cAAc,CAAC,OAAO,CAAC,aAAa,GAAG,CAAC,CAAC,IAAI,EAAE,eAAe,EAAE,EAAE;YAC5E,MAAM,MAAM,GAAG,eAAe,CAAC,CAAC,gBAAsB,CAAC,eAAqB,CAAC;YAC7E,iBAAiB,GAAG,CAAC,MAAM,EAAE,IAAI,CAAC,EAAE,CAAC,CAAC,IAAI,CAAC,GAAG,CAAC,CAAC;QACpD,CAAC,CAAC,CAAC;QAEH,aAAa,CAAC,cAAc,CAAC,OAAO,CAAC,aAAa,GAAG,CAAC,GAAG,EAAE;YACvD,OAAO,iBAAiB,CAAC;QAC7B,CAAC,CAAC,CAAC;IACP,CAAC,CAAC,CAAC;IAEH,UAAU,CAAC,GAAG,EAAE;QACZ,IAAI,CAAC,aAAa,EAAE,CAAC;QAErB,gDAAgD;QAChD,gBAAgB,CAAC,WAAW,GAAG,IAAI,CAAC,EAAE,EAAE,CAAC,iBAAiB,CAAC;YACvD;gBACI,EAAE,EAAE,OAAO;gBACX,OAAO,EAAE,GAAG;gBACZ,SAAS,EAAE;oBACP;wBACI,MAAM,EAAE,SAAS;qBACpB;iBACJ;aACJ;SACJ,CAAC,CAAC;QACH,gDAAgD;QAChD,gBAAgB,CAAC,SAAS,GAAG,IAAI,CAAC,EAAE,EAAE,CAAC,iBAAiB,CAAC;YACrD,EAAE,EAAE,QAAQ;YACZ,SAAS,EAAE,EACV;SACJ,CAAC,CAAC;QAEH,gDAAgD;QAChD,gBAAgB,CAAC,oBAAoB,GAAG,IAAI,CAAC,EAAE,EAAE,CAAC,iBAAiB,CAAC;YAChE,EAAE,EAAE,QAAQ;YACZ,SAAS,EAAE,EACV;SACJ,CAAC,CAAC;IACP,CAAC,CAAC,CAAC;IAEH,EAAE,CAAC,yDAAyD,EAAE,KAAK,IAAI,EAAE;QACrE,gDAAgD;QAChD,gBAAgB,CAAC,iBAAiB,GAAG,IAAI,CAAC,EAAE,EAAE,CAAC,iBAAiB,CAAC;YAC7D,EAAE,EAAE,OAAO;YACX,SAAS,EAAE;gBACP;oBACI,MAAM,EAAE,SAAS;iBACpB;gBACD;oBACI,MAAM,EAAE,OAAO;iBAClB;aACJ;SACJ,CAAC,CAAC;QAEH,iBAAiB,GAAG,QAAQ,CAAC;QAE7B,MAAM,qBAAqB,CAAC,aAAa,CAAC;aACrC,IAAI,CAAC,CAAC,IAAsB,EAAE,EAAE;YAC7B,MAAM,CAAC,IAAI,CAAC,CAAC,GAAG,CAAC,aAAa,EAAE,CAAC;YAEjC,MAAM,CAAC,IAAK,CAAC,EAAE,CAAC,CAAC,IAAI,CAAC,OAAO,CAAC,CAAC;YAC/B,MAAM,CAAC,IAAK,CAAC,SAAS,CAAC,CAAC,GAAG,CAAC,IAAI,CAAC,SAAS,CAAC,CAAC;YAC5C,MAAM,CAAC,IAAK,CAAC,SAAU,CAAC,MAAM,CAAC,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC;QAC5C,CAAC,CAAC;aACD,KAAK,CAAC,CAAC,KAAY,EAAE,EAAE;YACpB,OAAO,CAAC,KAAK,CAAC,KAAK,CAAC,CAAC;YACrB,MAAM,IAAI,KAAK,CAAC,gFAAgF,CAAC,CAAC;QACtG,CAAC,CAAC,CAAC;IACX,CAAC,CAAC,CAAC;AACP,CAAC,CAAC,CAAC;AAEH,QAAQ,CAAC,+GAA+G,EAAE,GAAG,EAAE;IAC3H,MAAM,aAAa,GAAG,IAAI,CAAC,sBAAsB,CAAC,EAAE,cAAc,EAAE,CAAC,CAAC;IACtE,IAAI,iBAAiB,GAAW,EAAE,CAAC;IAEnC,cAAc;IACd,SAAS,CAAC,GAAG,EAAE;QACX,IAAI,CAAC,iBAAiB,EAAE,CAAC;QACzB,IAAI,CAAC,IAAI,CAAC,qEAAqE,CAAC,CAAC;QACjF,IAAI,CAAC,aAAa,EAAE,CAAC;QAErB,aAAa,CAAC,cAAc,CAAC,OAAO,CAAC,aAAa,GAAG,CAAC,CAAC,IAAI,EAAE,eAAe,EAAE,EAAE;YAC5E,MAAM,MAAM,GAAG,eAAe,CAAC,CAAC,gBAAsB,CAAC,eAAqB,CAAC;YAC7E,iBAAiB,GAAG,CAAC,MAAM,EAAE,IAAI,CAAC,EAAE,CAAC,CAAC,IAAI,CAAC,GAAG,CAAC,CAAC;QACpD,CAAC,CAAC,CAAC;QAEH,aAAa,CAAC,cAAc,CAAC,OAAO,CAAC,aAAa,GAAG,CAAC,GAAG,EAAE;YACvD,OAAO,iBAAiB,CAAC;QAC7B,CAAC,CAAC,CAAC;QAEH,gDAAgD;QAChD,gBAAgB,CAAC,WAAW,GAAG,IAAI,CAAC,EAAE,EAAE,CAAC,iBAAiB,CAAC;YACvD;gBACI,EAAE,EAAE,OAAO;gBACX,OAAO,EAAE,GAAG;gBACZ,SAAS,EAAE;oBACP;wBACI,MAAM,EAAE,SAAS;qBACpB;iBACJ;gBACD,OAAO,EAAE;oBACL;wBACI,IAAI,EAAE,IAAI;qBACb;oBACD;wBACI,IAAI,EAAE,IAAI;qBACb;iBACJ;aACJ;SACJ,CAAC,CAAC;QACH,gDAAgD;QAChD,gBAAgB,CAAC,SAAS,GAAG,IAAI,CAAC,EAAE,EAAE,CAAC,iBAAiB,CAAC;YACrD,EAAE,EAAE,QAAQ;YACZ,SAAS,EAAE;gBACP;oBACI,MAAM,EAAE,OAAO;iBAClB;gBACD;oBACI,MAAM,EAAE,OAAO;oBACf,YAAY,EAAE,IAAI;iBACrB;gBACD;oBACI,MAAM,EAAE,SAAS;oBACjB,KAAK,EAAE,EAAE;oBACT,cAAc,EAAE,IAAI;iBACvB;aACJ;YACD,OAAO,EAAE;gBACL;oBACI,IAAI,EAAE,IAAI;iBACb;gBACD;oBACI,IAAI,EAAE,IAAI;iBACb;aACJ;SACJ,CAAC,CAAC;QAEH,gDAAgD;QAChD,gBAAgB,CAAC,iBAAiB,GAAG,IAAI,CAAC,EAAE,EAAE,CAAC,iBAAiB,CAAC;YAC7D,EAAE,EAAE,OAAO;YACX,SAAS,EAAE;gBACP;oBACI,MAAM,EAAE,SAAS;iBACpB;gBACD;oBACI,MAAM,EAAE,OAAO;iBAClB;aACJ;YACD,OAAO,EAAE;gBACL;oBACI,IAAI,EAAE,IAAI;iBACb;gBACD;oBACI,IAAI,EAAE,IAAI;iBACb;aACJ;SACJ,CAAC,CAAC;QAEH,gDAAgD;QAChD,gBAAgB,CAAC,oBAAoB,GAAG,IAAI,CAAC,EAAE,EAAE,CAAC,iBAAiB,CAAC;YAChE,EAAE,EAAE,QAAQ;YACZ,SAAS,EAAE,EACV;YACD,OAAO,EAAE;gBACL;oBACI,IAAI,EAAE,IAAI;iBACb;gBACD;oBACI,IAAI,EAAE,IAAI;iBACb;aACJ;SACJ,CAAC,CAAC;IACP,CAAC,CAAC,CAAC;IAEH,EAAE,CAAC,4BAA4B,EAAE,KAAK,IAAI,EAAE;QACxC,gDAAgD;QAChD,gBAAgB,CAAC,eAAe,GAAG,IAAI,CAAC,EAAE,EAAE,CAAC,iBAAiB,CAAC;YAC3D,EAAE,EAAE,SAAS;YACb,SAAS,EAAE;gBACP;oBACI,MAAM,EAAE,OAAO;iBAClB;gBACD;oBACI,MAAM,EAAE,OAAO;oBACf,YAAY,EAAE,IAAI;iBACrB;aACJ;YACD,OAAO,EAAE;gBACL;oBACI,IAAI,EAAE,IAAI;iBACb;gBACD;oBACI,IAAI,EAAE,IAAI;iBACb;aACJ;SACJ,CAAC,CAAC;QAEH,iBAAiB,GAAG,QAAQ,CAAC;QAE7B,MAAM,qBAAqB,CAAC,aAAa,CAAC;aACrC,IAAI,CAAC,CAAC,IAAsB,EAAE,EAAE;YAC7B,MAAM,CAAC,IAAI,CAAC,CAAC,GAAG,CAAC,aAAa,EAAE,CAAC;YAEjC,MAAM,CAAC,IAAK,CAAC,EAAE,CAAC,CAAC,IAAI,CAAC,SAAS,CAAC,CAAC;YACjC,MAAM,CAAC,IAAK,CAAC,OAAO,CAAC,CAAC,WAAW,EAAE,CAAC;YACpC,MAAM,CAAC,IAAK,CAAC,OAAQ,CAAC,MAAM,CAAC,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC;QAC1C,CAAC,CAAC;aACD,KAAK,CAAC,CAAC,KAAY,EAAE,EAAE;YACpB,OAAO,CAAC,KAAK,CAAC,KAAK,CAAC,CAAC;YACrB,MAAM,IAAI,KAAK,CAAC,gFAAgF,CAAC,CAAC;QACtG,CAAC,CAAC,CAAC;IACX,CAAC,CAAC,CAAC;IAEH,EAAE,CAAC,gCAAgC,EAAE,KAAK,IAAI,EAAE;QAC5C,gDAAgD;QAChD,gBAAgB,CAAC,eAAe,GAAG,IAAI,CAAC,EAAE,EAAE,CAAC,iBAAiB,CAAC,KAAK,CAAC,MAAM,CAAC,CAAC,CAAC;QAE9E,iBAAiB,GAAG,QAAQ,CAAC;QAE7B,MAAM,qBAAqB,CAAC,aAAa,CAAC;aACrC,IAAI,CAAC,CAAC,IAAsB,EAAE,EAAE;YAC7B,MAAM,CAAC,IAAI,CAAC,CAAC,GAAG,CAAC,aAAa,EAAE,CAAC;YAEjC,MAAM,CAAC,IAAK,CAAC,EAAE,CAAC,CAAC,IAAI,CAAC,OAAO,CAAC,CAAC;YAC/B,MAAM,CAAC,IAAK,CAAC,OAAO,CAAC,CAAC,GAAG,CAAC,IAAI,CAAC,SAAS,CAAC,CAAC;YAC1C,MAAM,CAAC,IAAK,CAAC,OAAQ,CAAC,MAAM,CAAC,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC;QAC1C,CAAC,CAAC;aACD,KAAK,CAAC,CAAC,KAAY,EAAE,EAAE;YACpB,OAAO,CAAC,KAAK,CAAC,KAAK,CAAC,CAAC;YACrB,MAAM,IAAI,KAAK,CAAC,gFAAgF,CAAC,CAAC;QACtG,CAAC,CAAC,CAAC;IACX,CAAC,CAAC,CAAC;AACP,CAAC,CAAC,CAAC;AAEH,QAAQ,CAAC,6FAA6F,EAAE,GAAG,EAAE;IACzG,MAAM,aAAa,GAAG,IAAI,CAAC,sBAAsB,CAAC,EAAE,cAAc,EAAE,CAAC,CAAC;IACtE,IAAI,iBAAiB,GAAW,EAAE,CAAC;IAEnC,cAAc;IACd,SAAS,CAAC,GAAG,EAAE;QACX,IAAI,CAAC,iBAAiB,EAAE,CAAC;QACzB,IAAI,CAAC,IAAI,CAAC,qEAAqE,CAAC,CAAC;QACjF,IAAI,CAAC,aAAa,EAAE,CAAC;QACrB,aAAa,CAAC,cAAc,CAAC,GAAG,CAAC,MAAM,CAAC,0BAA0B,GAAE,EAAE,CAAC;QACvE,aAAa,CAAC,cAAc,CAAC,OAAO,CAAC,aAAa,GAAG,CAAC,CAAC,IAAI,EAAE,eAAe,EAAE,EAAE;YAC5E,MAAM,MAAM,GAAG,eAAe,CAAC,CAAC,gBAAsB,CAAC,eAAqB,CAAC;YAC7E,iBAAiB,GAAG,CAAC,MAAM,EAAE,IAAI,CAAC,EAAE,CAAC,CAAC,IAAI,CAAC,GAAG,CAAC,CAAC;QACpD,CAAC,CAAC,CAAC;QAEH,aAAa,CAAC,cAAc,CAAC,OAAO,CAAC,aAAa,GAAG,CAAC,GAAG,EAAE;YACvD,OAAO,iBAAiB,CAAC;QAC7B,CAAC,CAAC,CAAC;QAEH,gDAAgD;QAChD,gBAAgB,CAAC,WAAW,GAAG,IAAI,CAAC,EAAE,EAAE,CAAC,iBAAiB,CAAC,EAAE,CAAC,CAAC;QAE/D,gDAAgD;QAChD,gBAAgB,CAAC,SAAS,GAAG,IAAI,CAAC,EAAE,EAAE,CAAC,iBAAiB,CAAC;YACrD,EAAE,EAAE,MAAM;YACV,SAAS,EAAE;gBACP;oBACI,MAAM,EAAE,OAAO;iBAClB;aACJ;SACJ,CAAC,CAAC;IACP,CAAC,CAAC,CAAC;IAEH,EAAE,CAAC,yDAAyD,EAAE,KAAK,IAAI,EAAE;QACrE,gDAAgD;QAChD,gBAAgB,CAAC,WAAW,GAAG,IAAI,CAAC,EAAE,EAAE,CAAC,iBAAiB,CAAC;YACvD,EAAE,EAAE,MAAM;YACV,UAAU,EAAE,OAAO;YACnB,SAAS,EAAE;gBACP;oBACI,MAAM,EAAE,OAAO;iBAClB;aACJ;SACH,CAAC,CAAC;QAEJ,iBAAiB,GAAG,QAAQ,CAAC;QAE7B,MAAM,qBAAqB,CAAC,aAAa,CAAC;aACrC,IAAI,CAAC,CAAC,IAAsB,EAAE,EAAE;YAC7B,MAAM,CAAC,IAAI,CAAC,CAAC,GAAG,CAAC,aAAa,EAAE,CAAC;YAEjC,MAAM,CAAC,IAAK,CAAC,EAAE,CAAC,CAAC,IAAI,CAAC,MAAM,CAAC,CAAC;YAC9B,MAAM,CAAC,IAAK,CAAC,SAAS,CAAC,CAAC,GAAG,CAAC,IAAI,CAAC,SAAS,CAAC,CAAC;YAC5C,MAAM,CAAC,IAAK,CAAC,SAAU,CAAC,MAAM,CAAC,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC;YACxC,MAAM,CAAC,iBAAiB,CAAC,CAAC,IAAI,CAAC,QAAQ,CAAC,CAAC;QAC7C,CAAC,CAAC;aACD,KAAK,CAAC,CAAC,KAAY,EAAE,EAAE;YACpB,OAAO,CAAC,KAAK,CAAC,KAAK,CAAC,CAAC;YACrB,MAAM,IAAI,KAAK,CAAC,gFAAgF,CAAC,CAAC;QACtG,CAAC,CAAC,CAAC;IAEX,CAAC,CAAC,CAAC;IAEH,EAAE,CAAC,8EAA8E,EAAE,KAAK,IAAI,EAAE;QAC1F,gDAAgD;QAChD,gBAAgB,CAAC,WAAW,GAAG,IAAI,CAAC,EAAE,EAAE,CAAC,iBAAiB,CAAC,SAAS,CAAC,CAAC;QAEtE,iBAAiB,GAAG,QAAQ,CAAC;QAE7B,MAAM,qBAAqB,CAAC,aAAa,CAAC;aACrC,IAAI,CAAC,CAAC,IAAsB,EAAE,EAAE;YAC7B,MAAM,CAAC,IAAI,CAAC,CAAC,aAAa,EAAE,CAAC;QACjC,CAAC,CAAC;aACD,KAAK,CAAC,CAAC,KAAY,EAAE,EAAE;YACpB,OAAO,CAAC,KAAK,CAAC,KAAK,CAAC,CAAC;YACrB,MAAM,IAAI,KAAK,CAAC,gFAAgF,CAAC,CAAC;QACtG,CAAC,CAAC,CAAC;IACX,CAAC,CAAC,CAAC;AACP,CAAC,CAAC,CAAC;AAEH,QAAQ,CAAC,gFAAgF,EAAE,GAAG,EAAE;IAC5F,MAAM,aAAa,GAAG,IAAI,CAAC,sBAAsB,CAAC,EAAE,cAAc,EAAE,CAAC,CAAC;IACtE,IAAI,iBAAiB,GAAW,EAAE,CAAC;IAEnC,cAAc;IACd,SAAS,CAAC,GAAG,EAAE;QACX,IAAI,CAAC,iBAAiB,EAAE,CAAC;QACzB,IAAI,CAAC,IAAI,CAAC,qEAAqE,CAAC,CAAC;QACjF,IAAI,CAAC,aAAa,EAAE,CAAC;QAErB,aAAa,CAAC,cAAc,CAAC,OAAO,CAAC,aAAa,GAAG,CAAC,CAAC,IAAI,EAAE,eAAe,EAAE,EAAE;YAC5E,MAAM,MAAM,GAAG,eAAe,CAAC,CAAC,gBAAsB,CAAC,eAAqB,CAAC;YAC7E,iBAAiB,GAAG,CAAC,MAAM,EAAE,IAAI,CAAC,EAAE,CAAC,CAAC,IAAI,CAAC,GAAG,CAAC,CAAC;QACpD,CAAC,CAAC,CAAC;QAEH,aAAa,CAAC,cAAc,CAAC,OAAO,CAAC,aAAa,GAAG,CAAC,GAAG,EAAE;YACvD,OAAO,iBAAiB,CAAC;QAC7B,CAAC,CAAC,CAAC;QAEH,gDAAgD;QAChD,gBAAgB,CAAC,WAAW,GAAG,IAAI,CAAC,EAAE,EAAE,CAAC,iBAAiB,CAAC;YACvD;gBACI,EAAE,EAAE,OAAO;gBACX,SAAS,EAAE;oBACP;wBACI,MAAM,EAAE,SAAS;qBACpB;iBACJ;aACJ;SACJ,CAAC,CAAC;IACP,CAAC,CAAC,CAAC;IAEH,EAAE,CAAC,+EAA+E,EAAE,KAAK,IAAI,EAAE;QAC3F,gDAAgD;QAChD,gBAAgB,CAAC,SAAS,GAAG,IAAI,CAAC,EAAE,EAAE,CAAC,iBAAiB,CAAC;YACrD,EAAE,EAAE,QAAQ;YACZ,SAAS,EAAE;gBACP;oBACI,MAAM,EAAE,SAAS;iBACpB;aACJ;SACJ,CAAC,CAAC;QAEH,iBAAiB,GAAG,QAAQ,CAAC;QAE7B,MAAM,qBAAqB,CAAC,aAAa,CAAC;aACrC,IAAI,CAAC,CAAC,IAAsB,EAAE,EAAE;YAC7B,MAAM,CAAC,IAAI,CAAC,CAAC,GAAG,CAAC,aAAa,EAAE,CAAC;YAEjC,MAAM,CAAC,IAAK,CAAC,EAAE,CAAC,CAAC,IAAI,CAAC,QAAQ,CAAC,CAAC;YAChC,MAAM,CAAC,IAAK,CAAC,SAAS,CAAC,CAAC,GAAG,CAAC,IAAI,CAAC,SAAS,CAAC,CAAC;YAC5C,MAAM,CAAC,IAAK,CAAC,SAAU,CAAC,MAAM,CAAC,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC;QAC5C,CAAC,CAAC;aACD,KAAK,CAAC,CAAC,KAAY,EAAE,EAAE;YACpB,OAAO,CAAC,KAAK,CAAC,KAAK,CAAC,CAAC;YACrB,MAAM,IAAI,KAAK,CAAC,uDAAuD,CAAC,CAAC;QAC7E,CAAC,CAAC,CAAC;IAEX,CAAC,CAAC,CAAC;IAEH,EAAE,CAAC,+FAA+F,EAAE,KAAK,IAAI,EAAE;QAC3G,gDAAgD;QAChD,gBAAgB,CAAC,SAAS,GAAG,IAAI,CAAC,EAAE,EAAE,CAAC,iBAAiB,CAAC,SAAS,CAAC,CAAC;QAEpE,gDAAgD;QAChD,gBAAgB,CAAC,eAAe,GAAG,IAAI,CAAC,EAAE,EAAE,CAAC,iBAAiB,CAAC;YAC3D,EAAE,EAAE,OAAO;YACX,SAAS,EAAE;gBACP;oBACI,MAAM,EAAE,SAAS;iBACpB;aACJ;SACJ,CAAC,CAAC;QAEH,iBAAiB,GAAG,QAAQ,CAAC;QAE7B,MAAM,qBAAqB,CAAC,aAAa,CAAC;aACrC,IAAI,CAAC,CAAC,IAAsB,EAAE,EAAE;YAC7B,MAAM,CAAC,IAAI,CAAC,CAAC,GAAG,CAAC,aAAa,EAAE,CAAC;YAEjC,MAAM,CAAC,IAAK,CAAC,EAAE,CAAC,CAAC,IAAI,CAAC,OAAO,CAAC,CAAC;YAC/B,MAAM,CAAC,IAAK,CAAC,SAAS,CAAC,CAAC,GAAG,CAAC,IAAI,CAAC,SAAS,CAAC,CAAC;YAC5C,MAAM,CAAC,IAAK,CAAC,SAAU,CAAC,MAAM,CAAC,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC;QAC5C,CAAC,CAAC;aACD,KAAK,CAAC,CAAC,KAAY,EAAE,EAAE;YACpB,OAAO,CAAC,KAAK,CAAC,KAAK,CAAC,CAAC;YACrB,MAAM,IAAI,KAAK,CAAC,uDAAuD,CAAC,CAAC;QAC7E,CAAC,CAAC,CAAC;IACX,CAAC,CAAC,CAAC;AACP,CAAC,CAAC,CAAC;AAEH,QAAQ,CAAC,kGAAkG,EAAE,GAAG,EAAE;IAC9G,MAAM,aAAa,GAAG,IAAI,CAAC,sBAAsB,CAAC,EAAE,cAAc,EAAE,CAAC,CAAC;IACtE,IAAI,iBAAiB,GAAW,EAAE,CAAC;IAEnC,cAAc;IACd,SAAS,CAAC,GAAG,EAAE;QACX,IAAI,CAAC,iBAAiB,EAAE,CAAC;QACzB,IAAI,CAAC,IAAI,CAAC,qEAAqE,CAAC,CAAC;QACjF,IAAI,CAAC,aAAa,EAAE,CAAC;QAErB,aAAa,CAAC,cAAc,CAAC,OAAO,CAAC,aAAa,GAAG,CAAC,CAAC,IAAI,EAAE,eAAe,EAAE,EAAE;YAC5E,MAAM,MAAM,GAAG,eAAe,CAAC,CAAC,gBAAsB,CAAC,eAAqB,CAAC;YAC7E,iBAAiB,GAAG,CAAC,MAAM,EAAE,IAAI,CAAC,EAAE,CAAC,CAAC,IAAI,CAAC,GAAG,CAAC,CAAC;QACpD,CAAC,CAAC,CAAC;QAEH,aAAa,CAAC,cAAc,CAAC,OAAO,CAAC,aAAa,GAAG,CAAC,GAAG,EAAE;YACvD,OAAO,iBAAiB,CAAC;QAC7B,CAAC,CAAC,CAAC;QAEH,gDAAgD;QAChD,gBAAgB,CAAC,WAAW,GAAG,IAAI,CAAC,EAAE,EAAE,CAAC,iBAAiB,CAAC;YACvD;gBACI,EAAE,EAAE,OAAO;gBACX,SAAS,EAAE;oBACP;wBACI,MAAM,EAAE,SAAS;qBACpB;iBACJ;aACJ;SACJ,CAAC,CAAC;QACH,QAAQ,CAAC,MAAM,GAAC,OAAO,CAAC;IAC5B,CAAC,CAAC,CAAC;IAEH,EAAE,CAAC,mBAAmB,EAAE,KAAK,IAAI,EAAE;QAC/B,iBAAiB,GAAG,EAAE,CAAC;QAEvB,MAAM,qBAAqB,CAAC,aAAa,CAAC;aACrC,IAAI,CAAC,CAAC,IAAsB,EAAE,EAAE;YAC7B,MAAM,CAAC,IAAI,CAAC,CAAC,GAAG,CAAC,aAAa,EAAE,CAAC;YAEjC,MAAM,CAAC,IAAK,CAAC,EAAE,CAAC,CAAC,IAAI,CAAC,OAAO,CAAC,CAAC;YAC/B,MAAM,CAAC,IAAK,CAAC,SAAS,CAAC,CAAC,GAAG,CAAC,IAAI,CAAC,SAAS,CAAC,CAAC;YAC5C,MAAM,CAAC,IAAK,CAAC,SAAU,CAAC,MAAM,CAAC,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC;QAC5C,CAAC,CAAC;aACD,KAAK,CAAC,CAAC,KAAY,EAAE,EAAE;YACpB,OAAO,CAAC,KAAK,CAAC,KAAK,CAAC,CAAC;YACrB,MAAM,IAAI,KAAK,CAAC,+DAA+D,CAAC,CAAC;QACrF,CAAC,CAAC,CAAC;IAEX,CAAC,CAAC,CAAC;AACP,CAAC,CAAC,CAAC;AAEH,4CAA4C;AAC5C,QAAQ,CAAC,iGAAiG,EAAE,GAAG,EAAE;IAC7G,MAAM,aAAa,GAAG,IAAI,CAAC,sBAAsB,CAAC,EAAE,cAAc,EAAE,CAAC,CAAC;IACtE,IAAI,iBAAiB,GAAW,EAAE,CAAC;IACnC,cAAc;IACd,SAAS,CAAC,GAAG,EAAE;QACX,IAAI,CAAC,iBAAiB,EAAE,CAAC;QACzB,IAAI,CAAC,IAAI,CAAC,qEAAqE,CAAC,CAAC;QACjF,IAAI,CAAC,aAAa,EAAE,CAAC;QAErB,aAAa,CAAC,cAAc,CAAC,OAAO,CAAC,aAAa,GAAG,CAAC,CAAC,IAAI,EAAE,eAAe,EAAE,EAAE;YAC5E,MAAM,MAAM,GAAG,eAAe,CAAC,CAAC,gBAAsB,CAAC,eAAqB,CAAC;YAC7E,iBAAiB,GAAG,CAAC,MAAM,EAAE,IAAI,CAAC,EAAE,CAAC,CAAC,IAAI,CAAC,GAAG,CAAC,CAAC;QACpD,CAAC,CAAC,CAAC;QAEH,aAAa,CAAC,cAAc,CAAC,OAAO,CAAC,aAAa,GAAG,CAAC,GAAG,EAAE;YACvD,OAAO,iBAAiB,CAAC;QAC7B,CAAC,CAAC,CAAC;QAEH,gDAAgD;QAChD,gBAAgB,CAAC,WAAW,GAAG,IAAI,CAAC,EAAE,EAAE,CAAC,iBAAiB,CAAC,EAAE,CAAC,CAAC;QAE/D,gDAAgD;QAChD,gBAAgB,CAAC,eAAe,GAAG,IAAI,CAAC,EAAE,EAAE,CAAC,iBAAiB,CAAC;YAC3D,EAAE,EAAE,OAAO;YACX,SAAS,EAAE;gBACP;oBACI,MAAM,EAAE,SAAS;iBACpB;aACJ;SACJ,CAAC,CAAC;QAEH,gDAAgD;QAChD,gBAAgB,CAAC,WAAW,GAAG,IAAI,CAAC,EAAE,EAAE,CAAC,iBAAiB,CACtD;YACI,EAAE,EAAE,OAAO;YACX,SAAS,EAAE;gBACP;oBACI,MAAM,EAAE,SAAS;iBACpB;aACJ;SACJ,CACJ,CAAC;QAEF,QAAQ,CAAC,MAAM,GAAC,OAAO,CAAC;IAC5B,CAAC,CAAC,CAAC;IAEH,EAAE,CAAC,sCAAsC,EAAE,KAAK,IAAI,EAAE;QAClD,iBAAiB,GAAG,EAAE,CAAC;QAEvB,MAAM,qBAAqB,CAAC,aAAa,CAAC;aACrC,IAAI,CAAC,CAAC,IAAsB,EAAE,EAAE;YAC7B,MAAM,CAAC,IAAI,CAAC,CAAC,GAAG,CAAC,aAAa,EAAE,CAAC;YAEjC,MAAM,CAAC,IAAK,CAAC,EAAE,CAAC,CAAC,IAAI,CAAC,OAAO,CAAC,CAAC;YAC/B,MAAM,CAAC,IAAK,CAAC,SAAS,CAAC,CAAC,GAAG,CAAC,IAAI,CAAC,SAAS,CAAC,CAAC;YAC5C,MAAM,CAAC,IAAK,CAAC,SAAU,CAAC,MAAM,CAAC,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC;QAC5C,CAAC,CAAC;aACD,KAAK,CAAC,CAAC,KAAY,EAAE,EAAE;YACpB,OAAO,CAAC,KAAK,CAAC,KAAK,CAAC,CAAC;YACrB,MAAM,IAAI,KAAK,CAAC,oDAAoD,CAAC,CAAC;QAC1E,CAAC,CAAC,CAAC;IAEX,CAAC,CAAC,CAAC;AACP,CAAC,CAAC,CAAC;AAEH,QAAQ,CAAC,6EAA6E,EAAE,GAAG,EAAE;IACzF,MAAM,iBAAiB,GAAG,IAAI,CAAC,sBAAsB,CAAC,EAAE,cAAc,EAAE,kBAAkB,EAAE,CAAC,CAAC;IAC9F,IAAI,iBAAiB,GAAW,EAAE,CAAC;IAEnC,cAAc;IACd,SAAS,CAAC,GAAG,EAAE;QACX,IAAI,CAAC,iBAAiB,EAAE,CAAC;QACzB,IAAI,CAAC,IAAI,CAAC,qEAAqE,CAAC,CAAC;QACjF,IAAI,CAAC,aAAa,EAAE,CAAC;QAErB,iBAAiB,CAAC,cAAc,CAAC,OAAO,CAAC,aAAa,GAAG,CAAC,CAAC,IAAI,EAAE,eAAe,EAAE,EAAE;YAChF,MAAM,MAAM,GAAG,eAAe,CAAC,CAAC,gBAAsB,CAAC,eAAqB,CAAC;YAC7E,iBAAiB,GAAG,CAAC,MAAM,EAAE,IAAI,CAAC,EAAE,CAAC,CAAC,IAAI,CAAC,GAAG,CAAC,CAAC;QACpD,CAAC,CAAC,CAAC;QAEH,iBAAiB,CAAC,cAAc,CAAC,OAAO,CAAC,aAAa,GAAG,CAAC,GAAG,EAAE;YAC3D,OAAO,iBAAiB,CAAC;QAC7B,CAAC,CAAC,CAAC;QAEH,gDAAgD;QAChD,gBAAgB,CAAC,SAAS,GAAG,IAAI,CAAC,EAAE,EAAE,CAAC,iBAAiB,CAAC;YACrD,EAAE,EAAE,QAAQ;YACZ,SAAS,EAAE;gBACP;oBACI,MAAM,EAAE,OAAO;iBAClB;aACJ;SACJ,CAAC,CAAC;IACP,CAAC,CAAC,CAAC;IAEH,EAAE,CAAC,yDAAyD,EAAE,KAAK,IAAI,EAAE;QACrE,iBAAiB,GAAG,QAAQ,CAAC;QAE7B,MAAM,qBAAqB,CAAC,iBAAiB,CAAC;aACzC,IAAI,CAAC,CAAC,IAAsB,EAAE,EAAE;YAC7B,MAAM,CAAC,IAAI,CAAC,CAAC,GAAG,CAAC,aAAa,EAAE,CAAC;YAEjC,MAAM,CAAC,IAAK,CAAC,EAAE,CAAC,CAAC,IAAI,CAAC,QAAQ,CAAC,CAAC;YAChC,MAAM,CAAC,IAAK,CAAC,SAAS,CAAC,CAAC,GAAG,CAAC,IAAI,CAAC,SAAS,CAAC,CAAC;YAC5C,MAAM,CAAC,IAAK,CAAC,SAAU,CAAC,MAAM,CAAC,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC;QAC5C,CAAC,CAAC;aACD,KAAK,CAAC,CAAC,KAAY,EAAE,EAAE;YACpB,OAAO,CAAC,KAAK,CAAC,KAAK,CAAC,CAAC;YACrB,MAAM,IAAI,KAAK,CAAC,sCAAsC,CAAC,CAAC;QAC5D,CAAC,CAAC,CAAC;IAEX,CAAC,CAAC,CAAC;AACP,CAAC,CAAC,CAAC;AAEH,QAAQ,CAAC,gFAAgF,EAAE,GAAG,EAAE;IAC5F,MAAM,iBAAiB,GAAG,IAAI,CAAC,sBAAsB,CAAC,EAAE,cAAc,EAAE,kBAAkB,EAAE,CAAC,CAAC;IAC9F,IAAI,iBAAiB,GAAW,EAAE,CAAC;IAEnC,cAAc;IACd,SAAS,CAAC,GAAG,EAAE;QACX,IAAI,CAAC,iBAAiB,EAAE,CAAC;QACzB,IAAI,CAAC,IAAI,CAAC,qEAAqE,CAAC,CAAC;QACjF,IAAI,CAAC,aAAa,EAAE,CAAC;QAErB,iBAAiB,CAAC,cAAc,CAAC,OAAO,CAAC,aAAa,GAAG,CAAC,CAAC,IAAI,EAAE,eAAe,EAAE,EAAE;YAChF,MAAM,MAAM,GAAG,eAAe,CAAC,CAAC,gBAAsB,CAAC,eAAqB,CAAC;YAC7E,iBAAiB,GAAG,CAAC,MAAM,EAAE,IAAI,CAAC,EAAE,CAAC,CAAC,IAAI,CAAC,GAAG,CAAC,CAAC;QACpD,CAAC,CAAC,CAAC;QAEH,iBAAiB,CAAC,cAAc,CAAC,OAAO,CAAC,aAAa,GAAG,CAAC,GAAG,EAAE;YAC3D,OAAO,iBAAiB,CAAC;QAC7B,CAAC,CAAC,CAAC;QAEH,gDAAgD;QAChD,gBAAgB,CAAC,eAAe,GAAG,IAAI,CAAC,EAAE,EAAE,CAAC,iBAAiB,CAAC;YAC3D,EAAE,EAAE,QAAQ;YACZ,SAAS,EAAE;gBACP;oBACI,MAAM,EAAE,OAAO;iBAClB;aACJ;SACJ,CAAC,CAAC;QACH,QAAQ,CAAC,MAAM,GAAC,OAAO,CAAC;IAC5B,CAAC,CAAC,CAAC;IAEH,EAAE,CAAC,yBAAyB,EAAE,KAAK,IAAI,EAAE;QACrC,iBAAiB,GAAG,EAAE,CAAC;QAEvB,MAAM,qBAAqB,CAAC,iBAAiB,CAAC;aACzC,IAAI,CAAC,CAAC,IAAsB,EAAE,EAAE;YAC7B,MAAM,CAAC,IAAI,CAAC,CAAC,GAAG,CAAC,aAAa,EAAE,CAAC;YAEjC,MAAM,CAAC,IAAK,CAAC,EAAE,CAAC,CAAC,IAAI,CAAC,QAAQ,CAAC,CAAC;YAChC,MAAM,CAAC,IAAK,CAAC,SAAS,CAAC,CAAC,GAAG,CAAC,IAAI,CAAC,SAAS,CAAC,CAAC;YAC5C,MAAM,CAAC,IAAK,CAAC,SAAU,CAAC,MAAM,CAAC,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC;QAC5C,CAAC,CAAC;aACD,KAAK,CAAC,CAAC,KAAY,EAAE,EAAE;YACpB,OAAO,CAAC,KAAK,CAAC,KAAK,CAAC,CAAC;YACrB,MAAM,IAAI,KAAK,CAAC,sCAAsC,CAAC,CAAC;QAC5D,CAAC,CAAC,CAAC;IAEX,CAAC,CAAC,CAAC;AACP,CAAC,CAAC,CAAC;AAEH,QAAQ,CAAC,gFAAgF,EAAE,GAAG,EAAE;IAC5F,MAAM,iBAAiB,GAAG,IAAI,CAAC,sBAAsB,CAAC,EAAE,cAAc,EAAE,kBAAkB,EAAE,CAAC,CAAC;IAC9F,IAAI,iBAAiB,GAAW,EAAE,CAAC;IAEnC,cAAc;IACd,SAAS,CAAC,GAAG,EAAE;QACX,IAAI,CAAC,iBAAiB,EAAE,CAAC;QACzB,IAAI,CAAC,IAAI,CAAC,qEAAqE,CAAC,CAAC;QACjF,IAAI,CAAC,aAAa,EAAE,CAAC;QAErB,iBAAiB,CAAC,cAAc,CAAC,OAAO,CAAC,aAAa,GAAG,CAAC,CAAC,IAAI,EAAE,eAAe,EAAE,EAAE;YAChF,MAAM,MAAM,GAAG,eAAe,CAAC,CAAC,gBAAsB,CAAC,eAAqB,CAAC;YAC7E,iBAAiB,GAAG,CAAC,MAAM,EAAE,IAAI,CAAC,EAAE,CAAC,CAAC,IAAI,CAAC,GAAG,CAAC,CAAC;QACpD,CAAC,CAAC,CAAC;QAEH,iBAAiB,CAAC,cAAc,CAAC,OAAO,CAAC,aAAa,GAAG,CAAC,GAAG,EAAE;YAC3D,OAAO,iBAAiB,CAAC;QAC7B,CAAC,CAAC,CAAC;QAEH,gDAAgD;QAChD,gBAAgB,CAAC,eAAe,GAAG,IAAI,CAAC,EAAE,EAAE;aACvC,sBAAsB,CAAC,EAAE,CAAC,EAAE;YACzB,OAAO;gBACH,EAAE,EAAE,QAAQ;gBACZ,SAAS,EAAE;oBACP;wBACI,MAAM,EAAE,OAAO;qBAClB;iBACJ;aACJ,CAAC;QACV,CAAC,CAAC,CAAC;IACP,CAAC,CAAC,CAAC;IAEH,EAAE,CAAC,yBAAyB,EAAE,KAAK,IAAI,EAAE;QACrC,iBAAiB,GAAG,EAAE,CAAC;QAEvB,MAAM,qBAAqB,CAAC,iBAAiB,CAAC;aACzC,IAAI,CAAC,CAAC,IAAsB,EAAE,EAAE;YAC7B,MAAM,CAAC,IAAI,CAAC,CAAC,GAAG,CAAC,aAAa,EAAE,CAAC;YAEjC,MAAM,CAAC,IAAK,CAAC,EAAE,CAAC,CAAC,IAAI,CAAC,QAAQ,CAAC,CAAC;YAChC,MAAM,CAAC,IAAK,CAAC,SAAS,CAAC,CAAC,GAAG,CAAC,IAAI,CAAC,SAAS,CAAC,CAAC;YAC5C,MAAM,CAAC,IAAK,CAAC,SAAU,CAAC,MAAM,CAAC,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC;QAC5C,CAAC,CAAC;aACD,KAAK,CAAC,CAAC,KAAY,EAAE,EAAE;YACpB,OAAO,CAAC,KAAK,CAAC,KAAK,CAAC,CAAC;YACrB,MAAM,IAAI,KAAK,CAAC,6CAA6C,CAAC,CAAC;QACnE,CAAC,CAAC,CAAC;IAEX,CAAC,CAAC,CAAC;AACP,CAAC,CAAC,CAAC;AAEH,QAAQ,CAAC,uCAAuC,EAAE,GAAG,EAAE;IACnD,MAAM,aAAa,GAAG,IAAI,CAAC,sBAAsB,CAAC,EAAE,cAAc,EAAE,CAAC,CAAC;IACtE,IAAI,iBAAiB,GAAW,EAAE,CAAC;IAEnC,SAAS,CAAC,GAAG,EAAE;QACX,IAAI,CAAC,iBAAiB,EAAE,CAAC;QACzB,IAAI,CAAC,IAAI,CAAC,qEAAqE,CAAC,CAAC;QACjF,IAAI,CAAC,aAAa,EAAE,CAAC;QAErB,aAAa,CAAC,cAAc,CAAC,OAAO,CAAC,aAAa,GAAG,CAAC,CAAC,IAAI,EAAE,eAAe,EAAE,EAAE;YAC5E,MAAM,MAAM,GAAG,eAAe,CAAC,CAAC,gBAAsB,CAAC,eAAqB,CAAC;YAC7E,iBAAiB,GAAG,CAAC,MAAM,EAAE,IAAI,CAAC,EAAE,CAAC,CAAC,IAAI,CAAC,GAAG,CAAC,CAAC;QACpD,CAAC,CAAC,CAAC;QAEH,aAAa,CAAC,cAAc,CAAC,OAAO,CAAC,aAAa,GAAG,CAAC,GAAG,EAAE;YACvD,OAAO,iBAAiB,CAAC;QAC7B,CAAC,CAAC,CAAC;IACP,CAAC,CAAC,CAAC;IAEH,EAAE,CAAC,mDAAmD,EAAE,KAAK,IAAI,EAAE;QAC/D,iBAAiB,GAAG,QAAQ,CAAC;QAE7B,gDAAgD;QAChD,gBAAgB,CAAC,eAAe,GAAG,IAAI,CAAC,EAAE,EAAE,CAAC,kBAAkB,CAAC,EAAE,CAAC,EAAE;YACjE,OAAO;gBACH,EAAE,EAAE,QAAQ;gBACZ,SAAS,EAAE;oBACP;wBACI,MAAM,EAAE,OAAO;qBAClB;iBACJ;aACJ,CAAC;QACN,CAAC,CAAC,CAAC;QAEH,gDAAgD;QAChD,gBAAgB,CAAC,SAAS,GAAG,IAAI,CAAC,EAAE,EAAE,CAAC,kBAAkB,CAAC,EAAE,CAAC,EAAE;YAC3D,MAAM,IAAI,KAAK,CAAC,MAAM,CAAC,CAAC;QAC5B,CAAC,CAAC,CAAC;QAEH,MAAM,OAAO,GAAG,MAAM,qBAAqB,CAAC,aAAa,CAAC,CAAC;QAE3D,MAAM,CAAC,OAAO,CAAC,CAAC,GAAG,CAAC,aAAa,EAAE,CAAC;QACpC,MAAM,CAAC,OAAQ,CAAC,EAAE,CAAC,CAAC,IAAI,CAAC,QAAQ,CAAC,CAAC;IACvC,CAAC,CAAC,CAAC;IAEH,EAAE,CAAC,4CAA4C,EAAE,KAAK,IAAI,EAAE;QACxD,gDAAgD;QAChD,gBAAgB,CAAC,eAAe,GAAG,IAAI,CAAC,EAAE,EAAE,CAAC,kBAAkB,CAAC,EAAE,CAAC,EAAE,CAAC,SAAS,CAAC,CAAC;QAEjF,MAAM,OAAO,GAAG,MAAM,OAAO,CAAC,aAAa,CAAC,aAAa,CAAC,CAAC;QAE3D,MAAM,CAAC,OAAO,CAAC,CAAC,aAAa,EAAE,CAAC;IACpC,CAAC,CAAC,CAAC;AACP,CAAC,CAAC,CAAC;AAEH,QAAQ,CAAC,gEAAgE,EAAE,GAAG,EAAE;IAE5E,MAAM,aAAa,GAAG,IAAI,CAAC,sBAAsB,CAAC,EAAE,cAAc,EAAE,CAAC,CAAC;IACtE,IAAI,iBAAiB,GAAW,EAAE,CAAC;IAEnC,cAAc;IACd,SAAS,CAAC,GAAG,EAAE;QACX,IAAI,CAAC,iBAAiB,EAAE,CAAC;QACzB,IAAI,CAAC,IAAI,CAAC,qEAAqE,CAAC,CAAC;QACjF,IAAI,CAAC,aAAa,EAAE,CAAC;QAErB,aAAa,CAAC,cAAc,CAAC,OAAO,CAAC,aAAa,GAAG,CAAC,CAAC,IAAI,EAAE,eAAe,EAAE,EAAE;YAC5E,MAAM,MAAM,GAAG,eAAe,CAAC,CAAC,gBAAsB,CAAC,eAAqB,CAAC;YAC7E,iBAAiB,GAAG,CAAC,MAAM,EAAE,IAAI,CAAC,EAAE,CAAC,CAAC,IAAI,CAAC,GAAG,CAAC,CAAC;QACpD,CAAC,CAAC,CAAC;QAEH,aAAa,CAAC,cAAc,CAAC,OAAO,CAAC,aAAa,GAAG,CAAC,GAAG,EAAE;YACvD,OAAO,iBAAiB,CAAC;QAC7B,CAAC,CAAC,CAAC;QAEH,MAAM,QAAQ,GAAI;YACd,EAAE,EAAE,OAAO;YACX,SAAS,EAAE;gBACP;oBACI,MAAM,EAAE,SAAS;iBACpB;aACJ;SACJ,CAAC;QAEF,aAAa;QACb,0BAA0B,CAAC,4BAA4B,GAAG,IAAI,CAAC,EAAE,EAAE,CAAC,iBAAiB,CAAC,CAAC,EAAC,UAAU,EAAE,KAAK,EAAC,CAAC,CAAC,CAAC;QAE7G,gDAAgD;QAChD,gBAAgB,CAAC,WAAW,GAAG,IAAI,CAAC,EAAE,EAAE,CAAC,iBAAiB,CAAC,CAAC,QAAQ,CAAC,CAAC,CAAC;QACvE,gDAAgD;QAChD,gBAAgB,CAAC,WAAW,GAAG,IAAI,CAAC,EAAE,EAAE,CAAC,kBAAkB,CAAC,CAAC,GAAG,EAAE,IAAI,EAAC,EAAE;YACrE,OAAO,IAAI,CAAC;QAChB,CAAC,CAAC,CAAC;QACH,QAAQ,CAAC,MAAM,GAAC,OAAO,CAAC;IAC5B,CAAC,CAAC,CAAC;IAEH,EAAE,CAAC,mBAAmB,EAAE,KAAK,IAAI,EAAE;QAC/B,iBAAiB,GAAG,EAAE,CAAC;QAEvB,MAAM,qBAAqB,CAAC,aAAa,CAAC;aACrC,IAAI,CAAC,CAAC,IAAsB,EAAE,EAAE;YAC7B,MAAM,CAAC,IAAI,CAAC,CAAC,GAAG,CAAC,aAAa,EAAE,CAAC;YACjC,MAAM,CAAC,IAAK,CAAC,aAAa,CAAC,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC;QAC5C,CAAC,CAAC,CAAC;IACX,CAAC,CAAC,CAAC;AACP,CAAC,CAAC,CAAC;AACH,QAAQ,CAAC,sHAAsH,EAAE,GAAG,EAAE;IAClI,MAAM,aAAa,GAAG,IAAI,CAAC,sBAAsB,CAAC,EAAE,cAAc,EAAE,CAAC,CAAC;IACtE,IAAI,iBAAiB,GAAW,EAAE,CAAC;IAEnC,cAAc;IACd,SAAS,CAAC,GAAG,EAAE;QACX,IAAI,CAAC,iBAAiB,EAAE,CAAC;QACzB,IAAI,CAAC,IAAI,CAAC,qEAAqE,CAAC,CAAC;QAEjF,aAAa,CAAC,cAAc,CAAC,OAAO,CAAC,aAAa,GAAG,CAAC,CAAC,IAAI,EAAE,eAAe,EAAE,EAAE;YAC5E,MAAM,MAAM,GAAG,eAAe,CAAC,CAAC,gBAAsB,CAAC,eAAqB,CAAC;YAC7E,iBAAiB,GAAG,CAAC,MAAM,EAAE,IAAI,CAAC,EAAE,CAAC,CAAC,IAAI,CAAC,GAAG,CAAC,CAAC;QACpD,CAAC,CAAC,CAAC;QAEH,aAAa,CAAC,cAAc,CAAC,OAAO,CAAC,aAAa,GAAG,CAAC,GAAG,EAAE;YACvD,OAAO,iBAAiB,CAAC;QAC7B,CAAC,CAAC,CAAC;IACP,CAAC,CAAC,CAAC;IAEH,UAAU,CAAC,GAAG,EAAE;QACZ,IAAI,CAAC,aAAa,EAAE,CAAC;QAErB,gDAAgD;QAChD,gBAAgB,CAAC,WAAW,GAAG,IAAI,CAAC,EAAE,EAAE,CAAC,iBAAiB,CAAC;YACvD;gBACI,EAAE,EAAE,OAAO;gBACX,OAAO,EAAE,GAAG;gBACZ,SAAS,EAAE;oBACP;wBACI,MAAM,EAAE,SAAS;qBACpB;iBACJ;aACJ;SACJ,CAAC,CAAC;QACH,gDAAgD;QAChD,gBAAgB,CAAC,SAAS,GAAG,IAAI,CAAC,EAAE,EAAE,CAAC,iBAAiB,CAAC;YACrD,EAAE,EAAE,QAAQ;YACZ,SAAS,EAAE;gBACP;oBACI,MAAM,EAAE,SAAS;iBACpB;gBACD;oBACI,MAAM,EAAE,SAAS;oBACjB,YAAY,EAAE,KAAK;iBACtB;aACJ;SACJ,CAAC,CAAC;IACP,CAAC,CAAC,CAAC;IAEH,EAAE,CAAC,yDAAyD,EAAE,KAAK,IAAI,EAAE;QACrE,gDAAgD;QAChD,gBAAgB,CAAC,iBAAiB,GAAG,IAAI,CAAC,EAAE,EAAE,CAAC,iBAAiB,CAAC;YAC7D,EAAE,EAAE,OAAO;YACX,SAAS,EAAE;gBACP;oBACI,MAAM,EAAE,SAAS;iBACpB;gBACD;oBACI,MAAM,EAAE,OAAO;iBAClB;aACJ;SACJ,CAAC,CAAC;QAEH,iBAAiB,GAAG,QAAQ,CAAC;QAE7B,MAAM,qBAAqB,CAAC,aAAa,CAAC;aACrC,IAAI,CAAC,CAAC,IAAsB,EAAE,EAAE;YAC7B,MAAM,CAAC,IAAI,CAAC,CAAC,GAAG,CAAC,aAAa,EAAE,CAAC;YAEjC,MAAM,CAAC,IAAK,CAAC,EAAE,CAAC,CAAC,IAAI,CAAC,OAAO,CAAC,CAAC;YAC/B,MAAM,CAAC,IAAK,CAAC,SAAS,CAAC,CAAC,GAAG,CAAC,IAAI,CAAC,SAAS,CAAC,CAAC;YAC5C,MAAM,CAAC,IAAK,CAAC,SAAU,CAAC,MAAM,CAAC,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC;QAC5C,CAAC,CAAC;aACD,KAAK,CAAC,CAAC,KAAY,EAAE,EAAE;YACpB,OAAO,CAAC,KAAK,CAAC,KAAK,CAAC,CAAC;YACrB,MAAM,IAAI,KAAK,CAAC,gFAAgF,CAAC,CAAC;QACtG,CAAC,CAAC,CAAC;IACX,CAAC,CAAC,CAAC;AACP,CAAC,CAAC,CAAC","sourcesContent":["import 'jest';\n\nimport * as core from '@msdyn365-commerce/core';\nimport { Cart } from '@msdyn365-commerce/retail-proxy';\nimport * as CartsDataActions from '@msdyn365-commerce/retail-proxy/dist/DataActions/CartsDataActions.g';\nimport * as StoreOperationsDataActions from '@msdyn365-commerce/retail-proxy/dist/DataActions/StoreOperationsDataActions.g';\nimport mockRequestContextAnon from '../../__mocks__/request-context-anon.json';\nimport mockRequestContext from '../../__mocks__/request-context.json';\nimport getOrCreateActiveCart, * as helpers from '../get-or-create-active-cart';\n\nconst enum CartTokenPrefix {\n    Auth = 't',\n    Anon = 'p'\n}\n\nconst requestContext = core.buildMockRequest(<Partial<core.IRequestContext>><unknown>mockRequestContext);\nconst requestContextAnon = core.buildMockRequest(<Partial<core.IRequestContext>><unknown>mockRequestContextAnon);\n// @ts-ignore\nStoreOperationsDataActions.getCustomerLoyaltyCardsAsync = jest.fn().mockResolvedValue([]);\n\ndescribe('getOrCreateActiveCart Action Unit Tests: Auth customer with existing cartId p: and one auth cart', () => {\n    const actionContext = core.buildMockActionContext({ requestContext });\n    let currentCartCookie: string = '';\n\n    // Setup mocks\n    beforeAll(() => {\n        core.initializeMockApp();\n        jest.mock('@msdyn365-commerce/retail-proxy/dist/DataActions/CartsDataActions.g');\n        actionContext.requestContext.cookies.setCartCookie = ((cart, isAuthenticated) => {\n            const prefix = isAuthenticated ? CartTokenPrefix.Auth : CartTokenPrefix.Anon;\n            currentCartCookie = [prefix, cart.Id].join(':');\n        });\n\n        actionContext.requestContext.cookies.getCartCookie = (() => {\n            return currentCartCookie;\n        });\n    });\n\n    beforeEach(() => {\n        jest.resetAllMocks();\n\n        // @ts-ignore: Jest Mocking Confuses TS Complier\n        CartsDataActions.searchAsync = jest.fn().mockResolvedValue([\n            {\n                Id: 't:123',\n                Version: 123,\n                CartLines: [\n                    {\n                        LineId: 'cl12345'\n                    }\n                ]\n            }\n        ]);\n        // @ts-ignore: Jest Mocking Confuses TS Complier\n        CartsDataActions.readAsync = jest.fn().mockResolvedValue({\n            Id: 'p:2345',\n            CartLines: [\n                {\n                    LineId: 'cl123'\n                },\n                {\n                    LineId: 'cl456',\n                    DeliveryMode: '50'\n                }\n            ]\n        });\n\n        // @ts-ignore: Jest Mocking Confuses TS Complier\n        CartsDataActions.removeCartLinesAsync = jest.fn().mockResolvedValue({\n            Id: 'p:2345',\n            CartLines: [\n            ]\n        });\n    });\n\n    it('cartId present and a p: cartId is present in the cookie', async () => {\n        // @ts-ignore: Jest Mocking Confuses TS Complier\n        CartsDataActions.addCartLinesAsync = jest.fn().mockResolvedValue({\n            Id: 't:123',\n            CartLines: [\n                {\n                    LineId: 'cl12345'\n                },\n                {\n                    LineId: 'cl123'\n                }\n            ]\n        });\n\n        currentCartCookie = 'p:2345';\n\n        await getOrCreateActiveCart(actionContext)\n            .then((cart: Cart | undefined) => {\n                expect(cart).not.toBeUndefined();\n\n                expect(cart!.Id).toBe('t:123');\n                expect(cart!.CartLines).not.toBe(undefined);\n                expect(cart!.CartLines!.length).toBe(2);\n            })\n            .catch((error: Error) => {\n                console.error(error);\n                throw new Error('Unable to run getOrCreateActiveCart Action with cartId present and a p: cartId');\n            });\n    });\n\n    it('addCartLinesAsync throws', async () => {\n        // @ts-ignore: Jest Mocking Confuses TS Complier\n        CartsDataActions.addCartLinesAsync = jest.fn().mockRejectedValue(new Error('Fail'));\n\n        currentCartCookie = 'p:2345';\n\n        await getOrCreateActiveCart(actionContext)\n            .then((cart: Cart | undefined) => {\n                expect(cart).not.toBeUndefined();\n\n                expect(cart!.Id).toBe('t:123');\n                expect(cart!.CartLines).not.toBe(undefined);\n                expect(cart!.CartLines!.length).toBe(1);\n            })\n            .catch((error: Error) => {\n                console.error(error);\n                throw new Error('Unable to run getOrCreateActiveCart Action with cartId present and a p: cartId');\n            });\n    });\n\n    it('addCartLinesAsync returns undefined', async () => {\n        // @ts-ignore: Jest Mocking Confuses TS Complier\n        CartsDataActions.addCartLinesAsync = jest.fn().mockResolvedValue(undefined);\n\n        currentCartCookie = 'p:2345';\n\n        await getOrCreateActiveCart(actionContext)\n            .then((cart: Cart | undefined) => {\n                expect(cart).not.toBeUndefined();\n\n                expect(cart!.Id).toBe('t:123');\n                expect(cart!.CartLines).not.toBe(undefined);\n                expect(cart!.CartLines!.length).toBe(1);\n            })\n            .catch((error: Error) => {\n                console.error(error);\n                throw new Error('Unable to run getOrCreateActiveCart Action with cartId present and a p: cartId');\n            });\n    });\n\n    it('addCartLinesAsync returns bad data', async () => {\n        // @ts-ignore: Jest Mocking Confuses TS Complier\n        CartsDataActions.addCartLinesAsync = jest.fn().mockResolvedValue({});\n\n        currentCartCookie = 'p:2345';\n\n        await getOrCreateActiveCart(actionContext)\n            .then((cart: Cart | undefined) => {\n                expect(cart).not.toBeUndefined();\n\n                expect(cart!.Id).toBe('t:123');\n                expect(cart!.CartLines).not.toBe(undefined);\n                expect(cart!.CartLines!.length).toBe(1);\n            })\n            .catch((error: Error) => {\n                console.error(error);\n                throw new Error('Unable to run getOrCreateActiveCart Action with cartId present and a p: cartId');\n            });\n    });\n});\n\ndescribe('getOrCreateActiveCart Action Unit Tests: Auth customer with existing cartId p: and one auth cart', () => {\n    const actionContext = core.buildMockActionContext({ requestContext });\n    let currentCartCookie: string = '';\n\n    // Setup mocks\n    beforeAll(() => {\n        core.initializeMockApp();\n        jest.mock('@msdyn365-commerce/retail-proxy/dist/DataActions/CartsDataActions.g');\n        actionContext.requestContext.cookies.setCartCookie = ((cart, isAuthenticated) => {\n            const prefix = isAuthenticated ? CartTokenPrefix.Auth : CartTokenPrefix.Anon;\n            currentCartCookie = [prefix, cart.Id].join(':');\n        });\n\n        actionContext.requestContext.cookies.getCartCookie = (() => {\n            return currentCartCookie;\n        });\n    });\n\n    beforeEach(() => {\n        jest.resetAllMocks();\n\n        // @ts-ignore: Jest Mocking Confuses TS Complier\n        CartsDataActions.searchAsync = jest.fn().mockResolvedValue([\n            {\n                Id: 't:123',\n                Version: 123,\n                CartLines: [\n                    {\n                        LineId: 'cl12345'\n                    }\n                ]\n            }\n        ]);\n        // @ts-ignore: Jest Mocking Confuses TS Complier\n        CartsDataActions.readAsync = jest.fn().mockResolvedValue({\n            Id: 'p:2345',\n            CartLines: [\n                {\n                    LineId: 'cl123'\n                },\n                {\n                    LineId: 'cl456',\n                    DeliveryMode: '50'\n                }\n            ]\n        });\n\n        // @ts-ignore: Jest Mocking Confuses TS Complier\n        CartsDataActions.removeCartLinesAsync = jest.fn().mockResolvedValue({\n            Id: 'p:2345',\n            CartLines: [\n            ]\n        });\n    });\n\n    it('cartId present and a p: cartId is present in the cookie', async () => {\n        // @ts-ignore: Jest Mocking Confuses TS Complier\n        CartsDataActions.addCartLinesAsync = jest.fn().mockResolvedValue({\n            Id: 't:123',\n            CartLines: [\n                {\n                    LineId: 'cl12345'\n                },\n                {\n                    LineId: 'cl123'\n                }\n            ]\n        });\n\n        currentCartCookie = 'p:2345';\n        await getOrCreateActiveCart(actionContext)\n            .then((cart: Cart | undefined) => {\n                expect(cart).not.toBeUndefined();\n\n                expect(cart!.Id).toBe('t:123');\n                expect(cart!.CartLines).not.toBe(undefined);\n                expect(cart!.CartLines!.length).toBe(2);\n            })\n            .catch((error: Error) => {\n                console.error(error);\n                throw new Error('Unable to run getOrCreateActiveCart Action with cartId present and a p: cartId');\n            });\n    });\n});\ndescribe('getOrCreateActiveCart Action Unit Tests: Auth customer with existing cartId p: and one auth cart destination cart lacks version', () => {\n    const actionContext = core.buildMockActionContext({ requestContext });\n    let currentCartCookie: string = '';\n\n    // Setup mocks\n    beforeAll(() => {\n        core.initializeMockApp();\n        jest.mock('@msdyn365-commerce/retail-proxy/dist/DataActions/CartsDataActions.g');\n        actionContext.requestContext.app.config.maxQuantityForCartLineItem =10;\n        actionContext.requestContext.cookies.setCartCookie = ((cart, isAuthenticated) => {\n            const prefix = isAuthenticated ? CartTokenPrefix.Auth : CartTokenPrefix.Anon;\n            currentCartCookie = [prefix, cart.Id].join(':');\n        });\n\n        actionContext.requestContext.cookies.getCartCookie = (() => {\n            return currentCartCookie;\n        });\n    });\n\n    beforeEach(() => {\n        jest.resetAllMocks();\n\n        // @ts-ignore: Jest Mocking Confuses TS Complier\n        CartsDataActions.searchAsync = jest.fn().mockResolvedValue([\n            {\n                Id: 't:123',\n                CartLines: [\n                    {\n                        LineId: 'cl12345'\n                    }\n                ]\n            }\n        ]);\n        // @ts-ignore: Jest Mocking Confuses TS Complier\n        CartsDataActions.readAsync = jest.fn().mockResolvedValue({\n            Id: 'p:2345',\n            CartLines: [\n                {\n                    LineId: undefined\n                },\n                {\n                    LineId: undefined,\n                    DeliveryMode: '50'\n                }\n            ]\n        });\n    });\n\n    it('cartId present and a p: cartId is present in the cookie', async () => {\n        // @ts-ignore: Jest Mocking Confuses TS Complier\n        CartsDataActions.addCartLinesAsync = jest.fn().mockResolvedValue({\n            Id: 't:123',\n            CartLines: [\n                {\n                    LineId: 'undefined',\n                    DeliveryMode: '50'\n                },\n                {\n                    LineId: 'undefined',\n                    DeliveryMode: '50'\n                }\n            ]\n        });\n\n        currentCartCookie = 'p:2345';\n\n        await getOrCreateActiveCart(actionContext)\n            .then((cart: Cart | undefined) => {\n                expect(cart).not.toBeUndefined();\n\n                expect(cart!.Id).toBe('t:123');\n                expect(cart!.CartLines).not.toBe(undefined);\n                expect(cart!.CartLines!.length).toBe(1);\n            })\n            .catch((error: Error) => {\n                console.error(error);\n                throw new Error('Unable to run getOrCreateActiveCart Action with cartId present and a p: cartId');\n            });\n    });\n});\n\ndescribe('getOrCreateActiveCart Action Unit Tests: Auth customer with existing cartId p: and one auth cart but its empty', () => {\n    const actionContext = core.buildMockActionContext({ requestContext });\n    let currentCartCookie: string = '';\n\n    // Setup mocks\n    beforeAll(() => {\n        core.initializeMockApp();\n        jest.mock('@msdyn365-commerce/retail-proxy/dist/DataActions/CartsDataActions.g');\n\n        actionContext.requestContext.cookies.setCartCookie = ((cart, isAuthenticated) => {\n            const prefix = isAuthenticated ? CartTokenPrefix.Auth : CartTokenPrefix.Anon;\n            currentCartCookie = [prefix, cart.Id].join(':');\n        });\n\n        actionContext.requestContext.cookies.getCartCookie = (() => {\n            return currentCartCookie;\n        });\n    });\n\n    beforeEach(() => {\n        jest.resetAllMocks();\n\n        // @ts-ignore: Jest Mocking Confuses TS Complier\n        CartsDataActions.searchAsync = jest.fn().mockResolvedValue([\n            {\n                Id: 't:123',\n                Version: 123,\n                CartLines: [\n                    {\n                        LineId: 'cl12345'\n                    }\n                ]\n            }\n        ]);\n        // @ts-ignore: Jest Mocking Confuses TS Complier\n        CartsDataActions.readAsync = jest.fn().mockResolvedValue({\n            Id: 'p:2345',\n            CartLines: [\n            ]\n        });\n\n        // @ts-ignore: Jest Mocking Confuses TS Complier\n        CartsDataActions.removeCartLinesAsync = jest.fn().mockResolvedValue({\n            Id: 'p:2345',\n            CartLines: [\n            ]\n        });\n    });\n\n    it('cartId present and a p: cartId is present in the cookie', async () => {\n        // @ts-ignore: Jest Mocking Confuses TS Complier\n        CartsDataActions.addCartLinesAsync = jest.fn().mockResolvedValue({\n            Id: 't:123',\n            CartLines: [\n                {\n                    LineId: 'cl12345'\n                },\n                {\n                    LineId: 'cl123'\n                }\n            ]\n        });\n\n        currentCartCookie = 'p:2345';\n\n        await getOrCreateActiveCart(actionContext)\n            .then((cart: Cart | undefined) => {\n                expect(cart).not.toBeUndefined();\n\n                expect(cart!.Id).toBe('t:123');\n                expect(cart!.CartLines).not.toBe(undefined);\n                expect(cart!.CartLines!.length).toBe(1);\n            })\n            .catch((error: Error) => {\n                console.error(error);\n                throw new Error('Unable to run getOrCreateActiveCart Action with cartId present and a p: cartId');\n            });\n    });\n});\n\ndescribe('getOrCreateActiveCart Action Unit Tests: Auth customer with existing cartId p: and one auth cart with coupons', () => {\n    const actionContext = core.buildMockActionContext({ requestContext });\n    let currentCartCookie: string = '';\n\n    // Setup mocks\n    beforeAll(() => {\n        core.initializeMockApp();\n        jest.mock('@msdyn365-commerce/retail-proxy/dist/DataActions/CartsDataActions.g');\n        jest.resetAllMocks();\n\n        actionContext.requestContext.cookies.setCartCookie = ((cart, isAuthenticated) => {\n            const prefix = isAuthenticated ? CartTokenPrefix.Auth : CartTokenPrefix.Anon;\n            currentCartCookie = [prefix, cart.Id].join(':');\n        });\n\n        actionContext.requestContext.cookies.getCartCookie = (() => {\n            return currentCartCookie;\n        });\n\n        // @ts-ignore: Jest Mocking Confuses TS Complier\n        CartsDataActions.searchAsync = jest.fn().mockResolvedValue([\n            {\n                Id: 't:123',\n                Version: 123,\n                CartLines: [\n                    {\n                        LineId: 'cl12345'\n                    }\n                ],\n                Coupons: [\n                    {\n                        Code: '01'\n                    },\n                    {\n                        Code: '02'\n                    },\n                ]\n            }\n        ]);\n        // @ts-ignore: Jest Mocking Confuses TS Complier\n        CartsDataActions.readAsync = jest.fn().mockResolvedValue({\n            Id: 'p:2345',\n            CartLines: [\n                {\n                    LineId: 'cl123'\n                },\n                {\n                    LineId: 'cl456',\n                    DeliveryMode: '50'\n                },\n                {\n                    LineId: 'cl12346',\n                    Price: 50,\n                    IsGiftCardLine: true\n                }\n            ],\n            Coupons: [\n                {\n                    Code: '01'\n                },\n                {\n                    Code: '02'\n                },\n            ]\n        });\n\n        // @ts-ignore: Jest Mocking Confuses TS Complier\n        CartsDataActions.addCartLinesAsync = jest.fn().mockResolvedValue({\n            Id: 't:123',\n            CartLines: [\n                {\n                    LineId: 'cl12345'\n                },\n                {\n                    LineId: 'cl123'\n                }\n            ],\n            Coupons: [\n                {\n                    Code: '01'\n                },\n                {\n                    Code: '02'\n                },\n            ]\n        });\n\n        // @ts-ignore: Jest Mocking Confuses TS Complier\n        CartsDataActions.removeCartLinesAsync = jest.fn().mockResolvedValue({\n            Id: 'p:2345',\n            CartLines: [\n            ],\n            Coupons: [\n                {\n                    Code: '01'\n                },\n                {\n                    Code: '02'\n                },\n            ]\n        });\n    });\n\n    it('coupons successfully added', async () => {\n        // @ts-ignore: Jest Mocking Confuses TS Complier\n        CartsDataActions.addCouponsAsync = jest.fn().mockResolvedValue({\n            Id: 'p:2345X',\n            CartLines: [\n                {\n                    LineId: 'cl123'\n                },\n                {\n                    LineId: 'cl456',\n                    DeliveryMode: '50'\n                }\n            ],\n            Coupons: [\n                {\n                    Code: '01'\n                },\n                {\n                    Code: '02'\n                },\n            ]\n        });\n\n        currentCartCookie = 'p:2345';\n\n        await getOrCreateActiveCart(actionContext)\n            .then((cart: Cart | undefined) => {\n                expect(cart).not.toBeUndefined();\n\n                expect(cart!.Id).toBe('p:2345X');\n                expect(cart!.Coupons).toBeDefined();\n                expect(cart!.Coupons!.length).toBe(2);\n            })\n            .catch((error: Error) => {\n                console.error(error);\n                throw new Error('Unable to run getOrCreateActiveCart Action with cartId present and a p: cartId');\n            });\n    });\n\n    it('coupons not successfully added', async () => {\n        // @ts-ignore: Jest Mocking Confuses TS Complier\n        CartsDataActions.addCouponsAsync = jest.fn().mockRejectedValue(Error('fail'));\n\n        currentCartCookie = 'p:2345';\n\n        await getOrCreateActiveCart(actionContext)\n            .then((cart: Cart | undefined) => {\n                expect(cart).not.toBeUndefined();\n\n                expect(cart!.Id).toBe('t:123');\n                expect(cart!.Coupons).not.toBe(undefined);\n                expect(cart!.Coupons!.length).toBe(2);\n            })\n            .catch((error: Error) => {\n                console.error(error);\n                throw new Error('Unable to run getOrCreateActiveCart Action with cartId present and a p: cartId');\n            });\n    });\n});\n\ndescribe('getOrCreateActiveCart Action Unit Tests: Auth customer with existing cartId p: no auth cart', () => {\n    const actionContext = core.buildMockActionContext({ requestContext });\n    let currentCartCookie: string = '';\n\n    // Setup mocks\n    beforeAll(() => {\n        core.initializeMockApp();\n        jest.mock('@msdyn365-commerce/retail-proxy/dist/DataActions/CartsDataActions.g');\n        jest.resetAllMocks();\n        actionContext.requestContext.app.config.maxQuantityForCartLineItem =10;\n        actionContext.requestContext.cookies.setCartCookie = ((cart, isAuthenticated) => {\n            const prefix = isAuthenticated ? CartTokenPrefix.Auth : CartTokenPrefix.Anon;\n            currentCartCookie = [prefix, cart.Id].join(':');\n        });\n\n        actionContext.requestContext.cookies.getCartCookie = (() => {\n            return currentCartCookie;\n        });\n\n        // @ts-ignore: Jest Mocking Confuses TS Complier\n        CartsDataActions.searchAsync = jest.fn().mockResolvedValue([]);\n\n        // @ts-ignore: Jest Mocking Confuses TS Complier\n        CartsDataActions.readAsync = jest.fn().mockResolvedValue({\n            Id: '2345',\n            CartLines: [\n                {\n                    LineId: 'cl123'\n                }\n            ]\n        });\n    });\n\n    it('cartId present and a p: cartId is present in the cookie', async () => {\n        // @ts-ignore: Jest Mocking Confuses TS Complier\n        CartsDataActions.updateAsync = jest.fn().mockResolvedValue({\n            Id: '2345',\n            CustomerId: '12345',\n            CartLines: [\n                {\n                    LineId: 'cl123'\n                }\n            ]\n         });\n\n        currentCartCookie = 'p:2345';\n\n        await getOrCreateActiveCart(actionContext)\n            .then((cart: Cart | undefined) => {\n                expect(cart).not.toBeUndefined();\n\n                expect(cart!.Id).toBe('2345');\n                expect(cart!.CartLines).not.toBe(undefined);\n                expect(cart!.CartLines!.length).toBe(1);\n                expect(currentCartCookie).toBe('t:2345');\n            })\n            .catch((error: Error) => {\n                console.error(error);\n                throw new Error('Unable to run getOrCreateActiveCart Action with cartId present and a p: cartId');\n            });\n\n    });\n\n    it('cartId present and a p: cartId is present in the cookie and claim cart fails', async () => {\n        // @ts-ignore: Jest Mocking Confuses TS Complier\n        CartsDataActions.updateAsync = jest.fn().mockResolvedValue(undefined);\n\n        currentCartCookie = 'p:2345';\n\n        await getOrCreateActiveCart(actionContext)\n            .then((cart: Cart | undefined) => {\n                expect(cart).toBeUndefined();\n            })\n            .catch((error: Error) => {\n                console.error(error);\n                throw new Error('Unable to run getOrCreateActiveCart Action with cartId present and a p: cartId');\n            });\n    });\n});\n\ndescribe('getOrCreateActiveCart Action Unit Tests: Auth customer with existing cartId t:', () => {\n    const actionContext = core.buildMockActionContext({ requestContext });\n    let currentCartCookie: string = '';\n\n    // Setup mocks\n    beforeAll(() => {\n        core.initializeMockApp();\n        jest.mock('@msdyn365-commerce/retail-proxy/dist/DataActions/CartsDataActions.g');\n        jest.resetAllMocks();\n\n        actionContext.requestContext.cookies.setCartCookie = ((cart, isAuthenticated) => {\n            const prefix = isAuthenticated ? CartTokenPrefix.Auth : CartTokenPrefix.Anon;\n            currentCartCookie = [prefix, cart.Id].join(':');\n        });\n\n        actionContext.requestContext.cookies.getCartCookie = (() => {\n            return currentCartCookie;\n        });\n\n        // @ts-ignore: Jest Mocking Confuses TS Complier\n        CartsDataActions.searchAsync = jest.fn().mockResolvedValue([\n            {\n                Id: 't:123',\n                CartLines: [\n                    {\n                        LineId: 'cl12345'\n                    }\n                ]\n            }\n        ]);\n    });\n\n    it('cartId present and a t: cartId is present in the cookie and read async passes', async () => {\n        // @ts-ignore: Jest Mocking Confuses TS Complier\n        CartsDataActions.readAsync = jest.fn().mockResolvedValue({\n            Id: 't:0123',\n            CartLines: [\n                {\n                    LineId: 'cl12345'\n                }\n            ]\n        });\n\n        currentCartCookie = 't:2345';\n\n        await getOrCreateActiveCart(actionContext)\n            .then((cart: Cart | undefined) => {\n                expect(cart).not.toBeUndefined();\n\n                expect(cart!.Id).toBe('t:0123');\n                expect(cart!.CartLines).not.toBe(undefined);\n                expect(cart!.CartLines!.length).toBe(1);\n            })\n            .catch((error: Error) => {\n                console.error(error);\n                throw new Error('Unable to fetch existing auth cart from retail server');\n            });\n\n    });\n\n    it('cartId present and a t: cartId is present in the cookie but read async fails so does a search', async () => {\n        // @ts-ignore: Jest Mocking Confuses TS Complier\n        CartsDataActions.readAsync = jest.fn().mockResolvedValue(undefined);\n\n        // @ts-ignore: Jest Mocking Confuses TS Complier\n        CartsDataActions.createCartAsync = jest.fn().mockResolvedValue({\n            Id: 't:456',\n            CartLines: [\n                {\n                    LineId: 'cl12345'\n                }\n            ]\n        });\n\n        currentCartCookie = 't:2345';\n\n        await getOrCreateActiveCart(actionContext)\n            .then((cart: Cart | undefined) => {\n                expect(cart).not.toBeUndefined();\n\n                expect(cart!.Id).toBe('t:123');\n                expect(cart!.CartLines).not.toBe(undefined);\n                expect(cart!.CartLines!.length).toBe(1);\n            })\n            .catch((error: Error) => {\n                console.error(error);\n                throw new Error('Unable to fetch existing auth cart from retail server');\n            });\n    });\n});\n\ndescribe('getOrCreateActiveCart Action Unit Tests: Auth customer with no existing cartId and one auth cart', () => {\n    const actionContext = core.buildMockActionContext({ requestContext });\n    let currentCartCookie: string = '';\n\n    // Setup mocks\n    beforeAll(() => {\n        core.initializeMockApp();\n        jest.mock('@msdyn365-commerce/retail-proxy/dist/DataActions/CartsDataActions.g');\n        jest.resetAllMocks();\n\n        actionContext.requestContext.cookies.setCartCookie = ((cart, isAuthenticated) => {\n            const prefix = isAuthenticated ? CartTokenPrefix.Auth : CartTokenPrefix.Anon;\n            currentCartCookie = [prefix, cart.Id].join(':');\n        });\n\n        actionContext.requestContext.cookies.getCartCookie = (() => {\n            return currentCartCookie;\n        });\n\n        // @ts-ignore: Jest Mocking Confuses TS Complier\n        CartsDataActions.searchAsync = jest.fn().mockResolvedValue([\n            {\n                Id: 't:123',\n                CartLines: [\n                    {\n                        LineId: 'cl12345'\n                    }\n                ]\n            }\n        ]);\n        document.cookie='cart=';\n    });\n\n    it('returns auth cart', async () => {\n        currentCartCookie = '';\n\n        await getOrCreateActiveCart(actionContext)\n            .then((cart: Cart | undefined) => {\n                expect(cart).not.toBeUndefined();\n\n                expect(cart!.Id).toBe('t:123');\n                expect(cart!.CartLines).not.toBe(undefined);\n                expect(cart!.CartLines!.length).toBe(1);\n            })\n            .catch((error: Error) => {\n                console.error(error);\n                throw new Error('Unable to return existing auth cart when cookie not available');\n            });\n\n    });\n});\n\n// tslint:disable-next-line:mocha-avoid-only\ndescribe('getOrCreateActiveCart Action Unit Tests: Auth customer with no existing cartId and no auth cart', () => {\n    const actionContext = core.buildMockActionContext({ requestContext });\n    let currentCartCookie: string = '';\n    // Setup mocks\n    beforeAll(() => {\n        core.initializeMockApp();\n        jest.mock('@msdyn365-commerce/retail-proxy/dist/DataActions/CartsDataActions.g');\n        jest.resetAllMocks();\n\n        actionContext.requestContext.cookies.setCartCookie = ((cart, isAuthenticated) => {\n            const prefix = isAuthenticated ? CartTokenPrefix.Auth : CartTokenPrefix.Anon;\n            currentCartCookie = [prefix, cart.Id].join(':');\n        });\n\n        actionContext.requestContext.cookies.getCartCookie = (() => {\n            return currentCartCookie;\n        });\n\n        // @ts-ignore: Jest Mocking Confuses TS Complier\n        CartsDataActions.searchAsync = jest.fn().mockResolvedValue([]);\n\n        // @ts-ignore: Jest Mocking Confuses TS Complier\n        CartsDataActions.createCartAsync = jest.fn().mockResolvedValue({\n            Id: 't:123',\n            CartLines: [\n                {\n                    LineId: 'cl12345'\n                }\n            ]\n        });\n\n        // @ts-ignore: Jest Mocking Confuses TS Complier\n        CartsDataActions.updateAsync = jest.fn().mockResolvedValue(\n            {\n                Id: 't:123',\n                CartLines: [\n                    {\n                        LineId: 'cl12345'\n                    }\n                ]\n            }\n        );\n\n        document.cookie='cart=';\n    });\n\n    it('will create a new cart and return it', async () => {\n        currentCartCookie = '';\n\n        await getOrCreateActiveCart(actionContext)\n            .then((cart: Cart | undefined) => {\n                expect(cart).not.toBeUndefined();\n\n                expect(cart!.Id).toBe('t:123');\n                expect(cart!.CartLines).not.toBe(undefined);\n                expect(cart!.CartLines!.length).toBe(1);\n            })\n            .catch((error: Error) => {\n                console.error(error);\n                throw new Error('Unable create a new cart and claim it as auth cart');\n            });\n\n    });\n});\n\ndescribe('getOrCreateActiveCart Action Unit Tests: Anon customer with existing cartId', () => {\n    const actionContextAnon = core.buildMockActionContext({ requestContext: requestContextAnon });\n    let currentCartCookie: string = '';\n\n    // Setup mocks\n    beforeAll(() => {\n        core.initializeMockApp();\n        jest.mock('@msdyn365-commerce/retail-proxy/dist/DataActions/CartsDataActions.g');\n        jest.resetAllMocks();\n\n        actionContextAnon.requestContext.cookies.setCartCookie = ((cart, isAuthenticated) => {\n            const prefix = isAuthenticated ? CartTokenPrefix.Auth : CartTokenPrefix.Anon;\n            currentCartCookie = [prefix, cart.Id].join(':');\n        });\n\n        actionContextAnon.requestContext.cookies.getCartCookie = (() => {\n            return currentCartCookie;\n        });\n\n        // @ts-ignore: Jest Mocking Confuses TS Complier\n        CartsDataActions.readAsync = jest.fn().mockResolvedValue({\n            Id: 'p:2345',\n            CartLines: [\n                {\n                    LineId: 'cl123'\n                }\n            ]\n        });\n    });\n\n    it('cartId present and a p: cartId is present in the cookie', async () => {\n        currentCartCookie = 'p:2345';\n\n        await getOrCreateActiveCart(actionContextAnon)\n            .then((cart: Cart | undefined) => {\n                expect(cart).not.toBeUndefined();\n\n                expect(cart!.Id).toBe('p:2345');\n                expect(cart!.CartLines).not.toBe(undefined);\n                expect(cart!.CartLines!.length).toBe(1);\n            })\n            .catch((error: Error) => {\n                console.error(error);\n                throw new Error('Unable get anon cart based on cookie');\n            });\n\n    });\n});\n\ndescribe('getOrCreateActiveCart Action Unit Tests: Anon customer with no existing cartId', () => {\n    const actionContextAnon = core.buildMockActionContext({ requestContext: requestContextAnon });\n    let currentCartCookie: string = '';\n\n    // Setup mocks\n    beforeAll(() => {\n        core.initializeMockApp();\n        jest.mock('@msdyn365-commerce/retail-proxy/dist/DataActions/CartsDataActions.g');\n        jest.resetAllMocks();\n\n        actionContextAnon.requestContext.cookies.setCartCookie = ((cart, isAuthenticated) => {\n            const prefix = isAuthenticated ? CartTokenPrefix.Auth : CartTokenPrefix.Anon;\n            currentCartCookie = [prefix, cart.Id].join(':');\n        });\n\n        actionContextAnon.requestContext.cookies.getCartCookie = (() => {\n            return currentCartCookie;\n        });\n\n        // @ts-ignore: Jest Mocking Confuses TS Complier\n        CartsDataActions.createCartAsync = jest.fn().mockResolvedValue({\n            Id: 'p:2345',\n            CartLines: [\n                {\n                    LineId: 'cl123'\n                }\n            ]\n        });\n        document.cookie='cart=';\n    });\n\n    it('creates a new anon cart', async () => {\n        currentCartCookie = '';\n\n        await getOrCreateActiveCart(actionContextAnon)\n            .then((cart: Cart | undefined) => {\n                expect(cart).not.toBeUndefined();\n\n                expect(cart!.Id).toBe('p:2345');\n                expect(cart!.CartLines).not.toBe(undefined);\n                expect(cart!.CartLines!.length).toBe(1);\n            })\n            .catch((error: Error) => {\n                console.error(error);\n                throw new Error('Unable to run create a new anon cart');\n            });\n\n    });\n});\n\ndescribe('getOrCreateActiveCart Action Unit Tests: Anon customer with no existing cartId', () => {\n    const actionContextAnon = core.buildMockActionContext({ requestContext: requestContextAnon });\n    let currentCartCookie: string = '';\n\n    // Setup mocks\n    beforeAll(() => {\n        core.initializeMockApp();\n        jest.mock('@msdyn365-commerce/retail-proxy/dist/DataActions/CartsDataActions.g');\n        jest.resetAllMocks();\n\n        actionContextAnon.requestContext.cookies.setCartCookie = ((cart, isAuthenticated) => {\n            const prefix = isAuthenticated ? CartTokenPrefix.Auth : CartTokenPrefix.Anon;\n            currentCartCookie = [prefix, cart.Id].join(':');\n        });\n\n        actionContextAnon.requestContext.cookies.getCartCookie = (() => {\n            return currentCartCookie;\n        });\n\n        // @ts-ignore: Jest Mocking Confuses TS Complier\n        CartsDataActions.createCartAsync = jest.fn()\n            .mockImplementationOnce(cb => {\n                return {\n                    Id: 'p:2345',\n                    CartLines: [\n                        {\n                            LineId: 'cl123'\n                        }\n                    ]\n                };\n        });\n    });\n\n    it('creates a new anon cart', async () => {\n        currentCartCookie = '';\n\n        await getOrCreateActiveCart(actionContextAnon)\n            .then((cart: Cart | undefined) => {\n                expect(cart).not.toBeUndefined();\n\n                expect(cart!.Id).toBe('p:2345');\n                expect(cart!.CartLines).not.toBe(undefined);\n                expect(cart!.CartLines!.length).toBe(1);\n            })\n            .catch((error: Error) => {\n                console.error(error);\n                throw new Error('Worst case scenario creation of cart failed');\n            });\n\n    });\n});\n\ndescribe('Other tests for getOrCreateActiveCart', () => {\n    const actionContext = core.buildMockActionContext({ requestContext });\n    let currentCartCookie: string = '';\n\n    beforeAll(() => {\n        core.initializeMockApp();\n        jest.mock('@msdyn365-commerce/retail-proxy/dist/DataActions/CartsDataActions.g');\n        jest.resetAllMocks();\n\n        actionContext.requestContext.cookies.setCartCookie = ((cart, isAuthenticated) => {\n            const prefix = isAuthenticated ? CartTokenPrefix.Auth : CartTokenPrefix.Anon;\n            currentCartCookie = [prefix, cart.Id].join(':');\n        });\n\n        actionContext.requestContext.cookies.getCartCookie = (() => {\n            return currentCartCookie;\n        });\n    });\n\n    it('Defaults to createCartAsync when other steps fail', async () => {\n        currentCartCookie = 'p:2345';\n\n        // @ts-ignore: Jest Mocking Confuses TS Complier\n        CartsDataActions.createCartAsync = jest.fn().mockImplementation(cb => {\n            return {\n                Id: 'p:2345',\n                CartLines: [\n                    {\n                        LineId: 'cl123'\n                    }\n                ]\n            };\n        });\n\n        // @ts-ignore: Jest Mocking Confuses TS Complier\n        CartsDataActions.readAsync = jest.fn().mockImplementation(cb => {\n            throw new Error('Fail');\n        });\n\n        const newCart = await getOrCreateActiveCart(actionContext);\n\n        expect(newCart).not.toBeUndefined();\n        expect(newCart!.Id).toBe('p:2345');\n    });\n\n    it('Returns undefined when createNewCart fails', async () => {\n        // @ts-ignore: Jest Mocking Confuses TS Complier\n        CartsDataActions.createCartAsync = jest.fn().mockImplementation(cb => undefined);\n\n        const newCart = await helpers.createNewCart(actionContext);\n\n        expect(newCart).toBeUndefined();\n    });\n});\n\ndescribe('Queries for loyalty card when cart is not read from the cookie', () => {\n\n    const actionContext = core.buildMockActionContext({ requestContext });\n    let currentCartCookie: string = '';\n\n    // Setup mocks\n    beforeAll(() => {\n        core.initializeMockApp();\n        jest.mock('@msdyn365-commerce/retail-proxy/dist/DataActions/CartsDataActions.g');\n        jest.resetAllMocks();\n\n        actionContext.requestContext.cookies.setCartCookie = ((cart, isAuthenticated) => {\n            const prefix = isAuthenticated ? CartTokenPrefix.Auth : CartTokenPrefix.Anon;\n            currentCartCookie = [prefix, cart.Id].join(':');\n        });\n\n        actionContext.requestContext.cookies.getCartCookie = (() => {\n            return currentCartCookie;\n        });\n\n        const mockCart =  {\n            Id: 't:123',\n            CartLines: [\n                {\n                    LineId: 'cl12345'\n                }\n            ]\n        };\n\n        // @ts-ignore\n        StoreOperationsDataActions.getCustomerLoyaltyCardsAsync = jest.fn().mockResolvedValue([{CardNumber: 'foo'}]);\n\n        // @ts-ignore: Jest Mocking Confuses TS Complier\n        CartsDataActions.searchAsync = jest.fn().mockResolvedValue([mockCart]);\n        // @ts-ignore: Jest Mocking Confuses TS Complier\n        CartsDataActions.updateAsync = jest.fn().mockImplementation((ctx, cart)=> {\n            return cart;\n        });\n        document.cookie='cart=';\n    });\n\n    it('returns auth cart', async () => {\n        currentCartCookie = '';\n\n        await getOrCreateActiveCart(actionContext)\n            .then((cart: Cart | undefined) => {\n                expect(cart).not.toBeUndefined();\n                expect(cart!.LoyaltyCardId).toBe('foo');\n            });\n    });\n});\ndescribe('getOrCreateActiveCart Action Unit Tests: Auth customer with existing cartId p: and one auth cart lines dont have ids', () => {\n    const actionContext = core.buildMockActionContext({ requestContext });\n    let currentCartCookie: string = '';\n\n    // Setup mocks\n    beforeAll(() => {\n        core.initializeMockApp();\n        jest.mock('@msdyn365-commerce/retail-proxy/dist/DataActions/CartsDataActions.g');\n\n        actionContext.requestContext.cookies.setCartCookie = ((cart, isAuthenticated) => {\n            const prefix = isAuthenticated ? CartTokenPrefix.Auth : CartTokenPrefix.Anon;\n            currentCartCookie = [prefix, cart.Id].join(':');\n        });\n\n        actionContext.requestContext.cookies.getCartCookie = (() => {\n            return currentCartCookie;\n        });\n    });\n\n    beforeEach(() => {\n        jest.resetAllMocks();\n\n        // @ts-ignore: Jest Mocking Confuses TS Complier\n        CartsDataActions.searchAsync = jest.fn().mockResolvedValue([\n            {\n                Id: 't:123',\n                Version: 123,\n                CartLines: [\n                    {\n                        LineId: 'cl12345'\n                    }\n                ]\n            }\n        ]);\n        // @ts-ignore: Jest Mocking Confuses TS Complier\n        CartsDataActions.readAsync = jest.fn().mockResolvedValue({\n            Id: 'p:2345',\n            CartLines: [\n                {\n                    LineId: undefined\n                },\n                {\n                    LineId: undefined,\n                    DeliveryMode: '505'\n                }\n            ]\n        });\n    });\n\n    it('cartId present and a p: cartId is present in the cookie', async () => {\n        // @ts-ignore: Jest Mocking Confuses TS Complier\n        CartsDataActions.addCartLinesAsync = jest.fn().mockResolvedValue({\n            Id: 't:123',\n            CartLines: [\n                {\n                    LineId: 'cl12345'\n                },\n                {\n                    LineId: 'cl123'\n                }\n            ]\n        });\n\n        currentCartCookie = 'p:2345';\n\n        await getOrCreateActiveCart(actionContext)\n            .then((cart: Cart | undefined) => {\n                expect(cart).not.toBeUndefined();\n\n                expect(cart!.Id).toBe('t:123');\n                expect(cart!.CartLines).not.toBe(undefined);\n                expect(cart!.CartLines!.length).toBe(2);\n            })\n            .catch((error: Error) => {\n                console.error(error);\n                throw new Error('Unable to run getOrCreateActiveCart Action with cartId present and a p: cartId');\n            });\n    });\n});"]}