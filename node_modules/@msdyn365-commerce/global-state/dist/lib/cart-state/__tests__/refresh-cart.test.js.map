{"version":3,"file":"refresh-cart.test.js","sourceRoot":"./src/","sources":["cart-state/__tests__/refresh-cart.test.ts"],"names":[],"mappings":"AAAA,OAAO,MAAM,CAAC;AAEd,OAAO,KAAK,IAAI,MAAM,yBAAyB,CAAC;AAChD,OAAO,KAAK,gBAAgB,MAAM,qEAAqE,CAAC;AACxG,OAAO,kBAAkB,MAAM,sCAAsC,CAAC;AACtE,OAAO,WAAW,MAAM,iBAAiB,CAAC;AAE1C,QAAQ,CAAC,mBAAmB,EAAE,GAAG,EAAE;IAC/B,MAAM,aAAa,GAAG,IAAI,CAAC,sBAAsB,CAAC,EAAE,cAAc,EAAkC,kBAAmB,EAAE,CAAC,CAAC;IAE3H,cAAc;IACd,SAAS,CAAC,GAAG,EAAE;QACX,IAAI,CAAC,iBAAiB,EAAE,CAAC;QACzB,IAAI,CAAC,IAAI,CAAC,qEAAqE,CAAC,CAAC;IACrF,CAAC,CAAC,CAAC;IAEH,UAAU,CAAC,GAAG,EAAE;QACZ,IAAI,CAAC,aAAa,EAAE,CAAC;IACzB,CAAC,CAAC,CAAC;IAEH,EAAE,CAAC,yCAAyC,EAAE,KAAK,IAAI,EAAE;QACrD,gDAAgD;QAChD,gBAAgB,CAAC,SAAS,GAAG,IAAI,CAAC,EAAE,EAAE,CAAC,kBAAkB,CAAC,CAAC,GAAG,EAAE,EAAE,EAAE,WAAW,EAAE,EAAE;YAC/E,OAAO,OAAO,CAAC,OAAO,CAAC;gBACnB,EAAE,EAAE,OAAO;aACd,CAAC,CAAC;QACP,CAAC,CAAC,CAAC;QAEH,MAAM,MAAM,GAAG,MAAM,WAAW,CAAC,OAAO,EAAE,aAAa,CAAC,CAAC;QAEzD,MAAM,CAAC,MAAM,CAAC,CAAC,WAAW,EAAE,CAAC;QAC7B,MAAM,CAAC,MAAO,CAAC,EAAE,CAAC,CAAC,IAAI,CAAC,OAAO,CAAC,CAAC;QACjC,MAAM,CAAC,gBAAgB,CAAC,SAAS,CAAC,CAAC,UAAU,EAAE,CAAC;IACpD,CAAC,CAAC,CAAC;IAEH,EAAE,CAAC,mDAAmD,EAAE,KAAK,IAAI,EAAE;QAC/D,gDAAgD;QAChD,gBAAgB,CAAC,SAAS,GAAG,IAAI,CAAC,EAAE,EAAE,CAAC,kBAAkB,CAAC,CAAC,GAAG,EAAE,EAAE,EAAE,WAAW,EAAE,EAAE;YAC/E,OAAO,OAAO,CAAC,MAAM,CAAC,IAAI,KAAK,CAAC,MAAM,CAAC,CAAC,CAAC;QAC7C,CAAC,CAAC,CAAC;QAEH,MAAM,MAAM,GAAG,MAAM,WAAW,CAAC,OAAO,EAAE,aAAa,CAAC,CAAC;QAEzD,MAAM,CAAC,MAAM,CAAC,CAAC,aAAa,EAAE,CAAC;QAC/B,MAAM,CAAC,gBAAgB,CAAC,SAAS,CAAC,CAAC,UAAU,EAAE,CAAC;IACpD,CAAC,CAAC,CAAC;AACP,CAAC,CAAC,CAAC","sourcesContent":["import 'jest';\n\nimport * as core from '@msdyn365-commerce/core';\nimport * as CartsDataActions from '@msdyn365-commerce/retail-proxy/dist/DataActions/CartsDataActions.g';\nimport mockRequestContext from '../../__mocks__/request-context.json';\nimport refreshCart from '../refresh-cart';\n\ndescribe('refreshCart tests', () => {\n    const actionContext = core.buildMockActionContext({ requestContext: <core.IRequestContext>(<unknown>mockRequestContext) });\n\n    // Setup mocks\n    beforeAll(() => {\n        core.initializeMockApp();\n        jest.mock('@msdyn365-commerce/retail-proxy/dist/DataActions/CartsDataActions.g');\n    });\n\n    beforeEach(() => {\n        jest.resetAllMocks();\n    });\n\n    it('refresh cart returns the refreshed cart', async () => {\n        // @ts-ignore: Jest Mocking Confuses TS Complier\n        CartsDataActions.readAsync = jest.fn().mockImplementation((ctx, id, cartLineIds) => {\n            return Promise.resolve({\n                Id: 'cart2'\n            });\n        });\n\n        const result = await refreshCart('cart1', actionContext);\n\n        expect(result).toBeDefined();\n        expect(result!.Id).toBe('cart2');\n        expect(CartsDataActions.readAsync).toBeCalled();\n    });\n\n    it('refresh cart returns undefined if readAsync fails', async () => {\n        // @ts-ignore: Jest Mocking Confuses TS Complier\n        CartsDataActions.readAsync = jest.fn().mockImplementation((ctx, id, cartLineIds) => {\n            return Promise.reject(new Error('fail'));\n        });\n\n        const result = await refreshCart('cart1', actionContext);\n\n        expect(result).toBeUndefined();\n        expect(CartsDataActions.readAsync).toBeCalled();\n    });\n});"]}