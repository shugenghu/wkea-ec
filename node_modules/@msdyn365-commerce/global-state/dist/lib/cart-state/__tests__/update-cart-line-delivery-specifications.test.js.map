{"version":3,"file":"update-cart-line-delivery-specifications.test.js","sourceRoot":"./src/","sources":["cart-state/__tests__/update-cart-line-delivery-specifications.test.ts"],"names":[],"mappings":"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","sourcesContent":["import 'jest';\n\nimport * as core from '@msdyn365-commerce/core';\nimport { Cart } from '@msdyn365-commerce/retail-proxy';\nimport * as CartsDataActions from '@msdyn365-commerce/retail-proxy/dist/DataActions/CartsDataActions.g';\nimport mockRequestContext from '../../__mocks__/request-context.json';\nimport updateCartLineDeliverySpecificationsInternal from '../update-cart-line-delivery-specifications';\n\ndescribe('updateCartLineQuantity tests', () => {\n    const actionContext = core.buildMockActionContext({ requestContext: <core.IRequestContext>(<unknown>mockRequestContext) });\n\n    const sampleCart: Cart = {\n        Id: 'cart1',\n        CartLines: [\n            {\n                LineId: 'cl1',\n                ProductId: 1,\n                DeliveryMode: '10',\n                FulfillmentStoreId: 'HOUSTON',\n                ShippingAddress: {\n                    State: 'Texas'\n                }\n            }\n        ]\n    };\n\n    // Setup mocks\n    beforeAll(() => {\n        core.initializeMockApp();\n        jest.mock('@msdyn365-commerce/retail-proxy/dist/DataActions/CartsDataActions.g');\n    });\n\n    beforeEach(() => {\n        jest.resetAllMocks();\n\n        // @ts-ignore: Jest Mocking Confuses TS Complier\n        CartsDataActions.updateLineDeliverySpecificationsAsync = jest.fn().mockImplementation((ctx, id, cartLineIds) => {\n            return Promise.resolve({\n                Id: 'cart2'\n            });\n        });\n    });\n\n    it('returns FAILED if cart is undefined', async () => {\n        const result = await updateCartLineDeliverySpecificationsInternal(undefined, [], actionContext);\n\n        expect(result.status).toBe('FAILED');\n\n        expect(CartsDataActions.updateLineDeliverySpecificationsAsync).not.toBeCalled();\n    });\n\n    it('calls updateLineDeliverySpecificationsAsync', async () => {\n        const result = await updateCartLineDeliverySpecificationsInternal(sampleCart, [{LineId: 'cl1', DeliverySpecification: { PickUpStoreId: 'SEATTLE' }}], actionContext);\n\n        expect(CartsDataActions.updateLineDeliverySpecificationsAsync).toHaveBeenCalledWith(\n            expect.anything(),\n            'cart1',\n            expect.arrayContaining([\n                expect.objectContaining(\n                    {\n                        LineId: 'cl1',\n                        DeliverySpecification: expect.objectContaining({\n                            PickUpStoreId: 'SEATTLE'\n                        })\n                    }\n                )\n            ])\n        );\n\n        expect(result.status).toBe('SUCCESS');\n        expect(result.cart).not.toBeUndefined();\n        expect(result.cart!.Id).toEqual('cart2');\n    });\n\n    it('returns failure if updateLineDeliverySpecificationsAsync throws', async () => {\n        // @ts-ignore: Jest Mocking Confuses TS Complier\n        CartsDataActions.updateLineDeliverySpecificationsAsync = jest.fn().mockImplementation(cb => {\n            return Promise.reject(new Error('Fail'));\n        });\n\n        const result = await updateCartLineDeliverySpecificationsInternal(sampleCart, [{LineId: 'cl1', DeliverySpecification: { PickUpStoreId: 'SEATTLE' }}], actionContext);\n\n        expect(CartsDataActions.updateLineDeliverySpecificationsAsync).toBeCalled();\n\n        expect(result.status).toBe('FAILED');\n        expect(result.cart).toBeUndefined();\n    });\n});"]}