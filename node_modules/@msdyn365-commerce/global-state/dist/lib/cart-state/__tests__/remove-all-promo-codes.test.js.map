{"version":3,"file":"remove-all-promo-codes.test.js","sourceRoot":"./src/","sources":["cart-state/__tests__/remove-all-promo-codes.test.ts"],"names":[],"mappings":"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","sourcesContent":["import 'jest';\n\nimport * as core from '@msdyn365-commerce/core';\nimport * as CartsDataActions from '@msdyn365-commerce/retail-proxy/dist/DataActions/CartsDataActions.g';\nimport mockRequestContext from '../../__mocks__/request-context.json';\nimport removeAllPromoCodes from '../remove-all-promo-codes';\n\ndescribe('removeAllPromoCodes tests', () => {\n    const actionContext = core.buildMockActionContext({ requestContext: <core.IRequestContext>(<unknown>mockRequestContext) });\n\n    // Setup mocks\n    beforeAll(() => {\n        core.initializeMockApp();\n        jest.mock('@msdyn365-commerce/retail-proxy/dist/DataActions/CartsDataActions.g');\n    });\n\n    beforeEach(() => {\n        jest.resetAllMocks();\n\n        // @ts-ignore: Jest Mocking Confuses TS Complier\n        CartsDataActions.removeDiscountCodesAsync = jest.fn();\n    });\n\n    it('removeAllPromoCodes returns FAILED if cart is undefined', async () => {\n        const result = await removeAllPromoCodes(undefined, actionContext);\n\n        expect(result.status).toBe('FAILED');\n\n        expect(CartsDataActions.removeDiscountCodesAsync).not.toBeCalled();\n    });\n\n    it('removeAllPromoCodes returns success if cart has no promo codes without making any retail server calls', async () => {\n        const result = await removeAllPromoCodes({ Id: 'cart1'}, actionContext);\n\n        expect(result.status).toBe('SUCCESS');\n        expect(CartsDataActions.removeDiscountCodesAsync).not.toBeCalled();\n    });\n\n    it('removeAllPromoCodes returns SUCCESS if removeDiscountCodesAsync succeeds', async () => {\n        // @ts-ignore: Jest Mocking Confuses TS Complier\n        CartsDataActions.removeDiscountCodesAsync = jest.fn().mockImplementation(cb => {\n            return Promise.resolve({\n                Id: 'cart2',\n            });\n        });\n\n        const result = await removeAllPromoCodes({ Id: 'cart1', Coupons: [{ Code: 'SAVE10' }, { Code: 'FREESHIP' }, {}]}, actionContext);\n\n        expect(CartsDataActions.removeDiscountCodesAsync).toHaveBeenCalledWith(\n            expect.anything(),\n            'cart1',\n            expect.arrayContaining(['SAVE10', 'FREESHIP'])\n        );\n\n        expect(result.status).toBe('SUCCESS');\n        expect(result.cart!.Id).toEqual('cart2');\n    });\n\n    it('removeAllPromoCodes returns failure if removePromoCode throws', async () => {\n        // @ts-ignore: Jest Mocking Confuses TS Complier\n        CartsDataActions.removeDiscountCodesAsync = jest.fn().mockImplementation(cb => {\n            return Promise.reject(new Error('Fail'));\n        });\n\n        const result = await removeAllPromoCodes({ Id: 'cart1', Coupons: [{ Code: 'SAVE10' }, { Code: 'FREESHIP' }]}, actionContext);\n\n        expect(CartsDataActions.removeDiscountCodesAsync).toHaveBeenCalledWith(\n            expect.anything(),\n            'cart1',\n            expect.arrayContaining(['SAVE10'])\n        );\n\n        expect(result.status).toBe('FAILED');\n        expect(result.cart).toBeUndefined();\n    });\n});"]}