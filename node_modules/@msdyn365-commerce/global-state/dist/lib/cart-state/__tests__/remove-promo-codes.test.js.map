{"version":3,"file":"remove-promo-codes.test.js","sourceRoot":"./src/","sources":["cart-state/__tests__/remove-promo-codes.test.ts"],"names":[],"mappings":"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","sourcesContent":["import 'jest';\n\nimport * as core from '@msdyn365-commerce/core';\nimport * as CartsDataActions from '@msdyn365-commerce/retail-proxy/dist/DataActions/CartsDataActions.g';\nimport mockRequestContext from '../../__mocks__/request-context.json';\nimport removePromoCodes from '../remove-promo-codes';\n\ndescribe('removePromoCode tests', () => {\n    const actionContext = core.buildMockActionContext({ requestContext: <core.IRequestContext>(<unknown>mockRequestContext) });\n\n    // Setup mocks\n    beforeAll(() => {\n        core.initializeMockApp();\n        jest.mock('@msdyn365-commerce/retail-proxy/dist/DataActions/CartsDataActions.g');\n    });\n\n    beforeEach(() => {\n        jest.resetAllMocks();\n        // @ts-ignore: Jest Mocking Confuses TS Complier\n        CartsDataActions.removeDiscountCodesAsync = jest.fn().mockImplementation((ctx, id, cartLineIds) => {\n            return Promise.resolve({\n                Id: 'cart2'\n            });\n        });\n    });\n\n    it('removePromoCode returns FAILED if cart is undefined', async () => {\n        const result = await removePromoCodes(undefined, ['SAVE10'], actionContext);\n\n        expect(result.status).toBe('FAILED');\n\n        expect(CartsDataActions.removeDiscountCodesAsync).not.toBeCalled();\n    });\n\n    it('removePromoCode returns removeDiscountCodesAsync result', async () => {\n        const result = await removePromoCodes({ Id: 'cart1'}, ['SAVE10'], actionContext);\n\n        expect(CartsDataActions.removeDiscountCodesAsync).toHaveBeenCalledWith(\n            expect.anything(),\n            'cart1',\n            expect.arrayContaining(['SAVE10'])\n        );\n\n        expect(result.status).toBe('SUCCESS');\n        expect(result.cart!.Id).toEqual('cart2');\n    });\n\n    it('removePromoCode returns failure if removePromoCode throws', async () => {\n        // @ts-ignore: Jest Mocking Confuses TS Complier\n        CartsDataActions.removeDiscountCodesAsync = jest.fn().mockImplementation(cb => {\n            return Promise.reject(new Error('Fail'));\n        });\n\n        const result = await removePromoCodes({ Id: 'cart1'}, ['SAVE10'], actionContext);\n\n        expect(CartsDataActions.removeDiscountCodesAsync).toHaveBeenCalledWith(\n            expect.anything(),\n            'cart1',\n            expect.arrayContaining(['SAVE10'])\n        );\n\n        expect(result.status).toBe('FAILED');\n        expect(result.cart).toBeUndefined();\n    });\n});"]}