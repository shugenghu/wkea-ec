{"version":3,"file":"add-promo-code.js","sourceRoot":"./src/","sources":["cart-state/add-promo-code.ts"],"names":[],"mappings":"AACA,OAAO,EAAE,oBAAoB,EAAE,MAAM,qEAAqE,CAAC;AAI3G,MAAM,CAAC,OAAO,CAAC,KAAK,UAAU,YAAY,CAAC,IAAgC,EAAE,SAAiB,EAAE,aAA6B;IACzH,IAAI,CAAC,IAAI,EAAE;QACP,OAAO,EAAE,IAAI,EAAE,SAAS,EAAE,MAAM,EAAE,QAAQ,EAAC,CAAC;KAC/C;IAED,IAAI,YAAY,CAAC,IAAI,EAAE,SAAS,CAAC,EAAE;QAC/B,OAAO,EAAE,IAAI,EAAE,SAAS,EAAE,MAAM,EAAE,QAAQ,EAAE,SAAS,EAAE,cAAc,EAAE,CAAC;KAC3E;IAED,OAAO,oBAAoB,CAAC,EAAE,aAAa,EAAE,aAAa,EAAE,EAAE,IAAI,CAAC,EAAE,EAAE,SAAS,CAAC;SAC5E,IAAI,CAAC,OAAO,CAAC,EAAE;QACZ,wEAAwE;QACxE,uEAAuE;QACvE,mCAAmC;QACnC,IAAI,YAAY,CAAC,OAAO,EAAE,SAAS,CAAC,EAAE;YAClC,OAAmC,EAAE,IAAI,EAAE,OAAO,EAAE,MAAM,EAAE,SAAS,EAAE,CAAC;SAC3E;aAAM;YACH,OAAmC,EAAE,IAAI,EAAE,SAAS,EAAE,MAAM,EAAE,QAAQ,EAAE,CAAC;SAC5E;IACL,CAAC,CAAC,CAAC,KAAK,CAAC,KAAK,CAAC,EAAE;QACb,aAAa,CAAC,SAAS,CAAC,OAAO,CAAC,KAAK,CAAC,CAAC;QAEvC,OAAmC,EAAE,IAAI,EAAE,SAAS,EAAE,MAAM,EAAE,QAAQ,EAAE,CAAC;IAC7E,CAAC,CAAC,CAAC;AACX,CAAC;AAED,SAAS,YAAY,CAAC,IAAU,EAAE,IAAY;IAC1C,MAAM,KAAK,GAAG,IAAI,CAAC,OAAO,CAAC,CAAC,CAAC,IAAI,CAAC,OAAO,CAAC,GAAG,CAAC,CAAC,MAAc,EAAE,EAAE,GAAG,OAAO,MAAM,CAAC,IAAK,CAAC,WAAW,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC;IAC/G,OAAO,KAAK,CAAC,OAAO,CAAC,IAAI,CAAC,WAAW,EAAE,CAAC,GAAG,CAAC,CAAC,CAAC;AAClD,CAAC","sourcesContent":["import { IActionContext } from '@msdyn365-commerce/core';\nimport { addDiscountCodeAsync } from '@msdyn365-commerce/retail-proxy/dist/DataActions/CartsDataActions.g';\nimport { Cart, Coupon } from '@msdyn365-commerce/retail-proxy/dist/Entities/CommerceTypes.g';\nimport { ICartActionResultWithCart } from './cart-action-result';\n\nexport default async function addPromoCode(cart: Readonly<Cart | undefined>, promoCode: string, actionContext: IActionContext): Promise<ICartActionResultWithCart> {\n    if (!cart) {\n        return { cart: undefined, status: 'FAILED'};\n    }\n\n    if (hasPromoCode(cart, promoCode)) {\n        return { cart: undefined, status: 'FAILED', substatus: 'ALREADYADDED' };\n    }\n\n    return addDiscountCodeAsync({ callerContext: actionContext }, cart.Id, promoCode)\n        .then(newCart => {\n            // Retail server will still return success if a promo code is not valid,\n            // but it won't actually add that promo code. So need to check if promo\n            // code is actually in the new cart\n            if (hasPromoCode(newCart, promoCode)) {\n                return <ICartActionResultWithCart> { cart: newCart, status: 'SUCCESS' };\n            } else {\n                return <ICartActionResultWithCart> { cart: undefined, status: 'FAILED' };\n            }\n        }).catch(error => {\n            actionContext.telemetry.warning(error);\n\n            return <ICartActionResultWithCart> { cart: undefined, status: 'FAILED' };\n        });\n}\n\nfunction hasPromoCode(cart: Cart, code: string): boolean {\n    const codes = cart.Coupons ? cart.Coupons.map((coupon: Coupon) => { return coupon.Code!.toLowerCase(); }) : [];\n    return codes.indexOf(code.toLowerCase()) > -1;\n}\n"]}