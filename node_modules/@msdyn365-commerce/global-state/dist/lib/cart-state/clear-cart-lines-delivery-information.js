import { updateCartLinesAsync } from '@msdyn365-commerce/retail-proxy/dist/DataActions/CartsDataActions.g';
import _ from 'lodash';
export default async function clearCartLinesDeliveryInformation(cart, actionContext) {
    if (!cart || !cart.CartLines) {
        return { cart: undefined, status: 'FAILED' };
    }
    const pickupDeliveryModeCode = actionContext && actionContext.requestContext && actionContext.requestContext.channel?.PickupDeliveryModeCode;
    const matchingLines = cart.CartLines.filter(cartLine => cartLine.DeliveryMode && cartLine.DeliveryMode !== pickupDeliveryModeCode && cartLine.LineId);
    // If there are no lines needing updates, just return success
    if (matchingLines.length === 0) {
        return { cart: cart, status: 'SUCCESS' };
    }
    let copiedLines = _.cloneDeep(matchingLines);
    copiedLines.forEach(line => {
        line.DeliveryMode = '';
        line.FulfillmentStoreId = '';
        line.ShippingAddress = {};
    });
    return updateCartLinesAsync({ callerContext: actionContext }, cart.Id, copiedLines, null)
        .then((newCart) => {
        return { cart: newCart, status: 'SUCCESS' };
    })
        .catch((error) => {
        actionContext.telemetry.warning(error);
        actionContext.telemetry.debug('Unable to Update Cart Lines');
        return { cart: undefined, status: 'FAILED' };
    });
}
//# sourceMappingURL=clear-cart-lines-delivery-information.js.map