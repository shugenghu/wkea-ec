import { __decorate } from "tslib";
import { computed, observable } from 'mobx';
/**
 * Base global state that handles common global state behavior that other state can extend from
 */
export class GlobalState {
    constructor(actionContext) {
        this.isInitialized = false;
        this.actionContext = actionContext;
        this._status = 'UPDATING';
    }
    get status() {
        return this._status;
    }
    async initialize() {
        this.isInitialized = true;
        this._status = 'READY';
        return;
    }
    async _doAsyncAction(lambda) {
        this._status = 'UPDATING';
        return lambda().then(result => {
            this._status = 'READY';
            return result;
        }).catch(error => {
            console.log(error);
            this._status = 'ERROR';
            return Promise.reject(error);
        });
    }
}
__decorate([
    observable
], GlobalState.prototype, "_status", void 0);
__decorate([
    computed
], GlobalState.prototype, "status", null);
//# sourceMappingURL=global-state.js.map