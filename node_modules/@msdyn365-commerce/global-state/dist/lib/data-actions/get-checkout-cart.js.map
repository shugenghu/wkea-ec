{"version":3,"file":"get-checkout-cart.js","sourceRoot":"./src/","sources":["data-actions/get-checkout-cart.ts"],"names":[],"mappings":"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","sourcesContent":["import { CacheType, createObservableDataAction, IAction, IActionContext, IActionInput, ICommerceApiSettings, ICreateActionContext } from '@msdyn365-commerce/core';\nimport { Cart } from '@msdyn365-commerce/retail-proxy';\nimport { copyAsync, readAsync } from '@msdyn365-commerce/retail-proxy/dist/DataActions/CartsDataActions.g';\nimport { getCartState } from './get-cart-state';\n\n/**\n * Input class for getCheckoutCart data action\n */\nexport class GetCheckoutCartInput implements IActionInput {\n    private apiSettings: ICommerceApiSettings;\n\n    constructor(apiSettings: ICommerceApiSettings) {\n        this.apiSettings = apiSettings;\n    }\n\n    public getCacheKey = () => `CheckoutCart-chanId:${this.apiSettings.channelId}-catId:${this.apiSettings.catalogId}`;\n    public getCacheObjectType = () => 'CheckoutCart';\n    public dataCacheType = (): CacheType => 'request';\n}\n\nconst enum CartTokenPrefix {\n    Auth = 't',\n    Anon = 'p'\n}\n\nconst createInput = (inputData: ICreateActionContext) => {\n    return new GetCheckoutCartInput(inputData.requestContext.apiSettings);\n};\n\n/**\n * Data action to copy the cart for checkout actions\n */\nexport async function getCheckoutCart(input: GetCheckoutCartInput, ctx: IActionContext): Promise<Cart | undefined> {\n    let savedCheckoutCartId = ctx.requestContext.cookies.getCheckoutCartCookie();\n    const cartCookieParts: string[] = savedCheckoutCartId.split(':');\n    let checkoutCartId = null;\n    const isAuthenticated = ctx.requestContext.user.isAuthenticated;\n\n    if ((isAuthenticated && cartCookieParts[0] === CartTokenPrefix.Auth) || (!isAuthenticated && cartCookieParts[0] === CartTokenPrefix.Anon)) {\n        checkoutCartId = cartCookieParts[1];\n    }\n\n    let checkoutCart: Cart | undefined;\n\n    if (checkoutCartId) {\n        try {\n            checkoutCart = await readAsync({ callerContext: ctx, bypassCache: 'none' }, checkoutCartId);\n        } catch (error) {\n            ctx.telemetry.error('Error getting checkout cart based on saved checkout card id');\n            ctx.telemetry.exception(error);\n        }\n    }\n\n    const cartState = await getCartState(ctx);\n    if (cartState && cartState.cart.Id !== undefined) {\n        if (checkoutCart && checkoutCart.Version && cartState.cart.Version && checkoutCart.Version > cartState.cart.Version) {\n            return Promise.resolve(<Cart>checkoutCart);\n        }\n\n        return copyAsync({ callerContext: ctx }, cartState.cart.Id, 2)\n            .then(cart => {\n                ctx.requestContext.cookies.setCheckoutCartCookie(cart, isAuthenticated);\n                return cart;\n            })\n            .catch(error => {\n                ctx.telemetry.error('Error copying cart');\n                ctx.telemetry.exception(error);\n                return undefined;\n            });\n    }\n\n    return undefined;\n}\n\nexport default createObservableDataAction({\n    id: '@msdyn365-commerce/global-state/get-checkout-cart',\n    action: <IAction<Cart | undefined>>getCheckoutCart,\n    input: createInput\n});"]}