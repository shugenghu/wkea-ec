{"version":3,"file":"global-state-data-action.test.js","sourceRoot":"./src/","sources":["data-actions/__tests__/global-state-data-action.test.ts"],"names":[],"mappings":"AAAA,OAAO,MAAM,CAAC;AAEd,OAAO,KAAK,IAAI,MAAM,yBAAyB,CAAC;AAChD,OAAO,kBAAkB,MAAM,sCAAsC,CAAC;AACtE,OAAO,2BAA2B,EAAE,EAAE,QAAQ,EAAE,gBAAgB,EAAE,MAAM,6BAA6B,CAAC;AAEtG,OAAO,EAAE,aAAa,EAAE,MAAM,kCAAkC,CAAC;AACjE,OAAO,EAAE,iBAAiB,EAAE,MAAM,0CAA0C,CAAC;AAE7E,MAAM,cAAc,GAAG,IAAI,CAAC,gBAAgB,CAAyC,kBAAkB,CAAC,CAAC;AAEzG,QAAQ,CAAC,UAAU,EAAE,GAAG,EAAE;IACtB,cAAc;IACd,SAAS,CAAC,GAAG,EAAE;QACX,IAAI,CAAC,iBAAiB,EAAE,CAAC;IAC7B,CAAC,CAAC,CAAC;IAEH,UAAU,CAAC,GAAG,EAAE;QACZ,IAAI,CAAC,aAAa,EAAE,CAAC;IACzB,CAAC,CAAC,CAAC;IAEH,EAAE,CAAC,8CAA8C,EAAE,KAAK,IAAI,EAAE;QAC1D,IAAI,CAAC,KAAK,CAAC,aAAa,CAAC,SAAS,EAAE,YAAY,CAAC,CAAC;QAClD,MAAM,aAAa,GAAG,IAAI,CAAC,sBAAsB,CAAC,EAAE,cAAc,EAAE,CAAC,CAAC;QACtE,aAAa;QACb,aAAa,CAAC,cAAc,CAAC,cAAc,GAAG;YAC1C,sBAAsB,EAAE,IAAI,CAAC,EAAE,EAAE,CAAC,iBAAiB,CAAC,SAAS,CAAC;SACjE,CAAC;QAEF,MAAM,KAAK,GAAG,IAAI,gBAAgB,CAAC,WAAW,EAAE,aAAa,EAAE,aAAa,CAAC,cAAc,CAAC,WAAW,CAAC,CAAC;QAEzG,MAAM,MAAM,GAAkB,MAAM,QAAQ,CAAC,KAAK,EAAE,aAAa,CAAC,CAAC;QAEnE,MAAM,CAAC,MAAM,CAAC,UAAU,CAAC,CAAC,eAAe,CAAC,CAAC,CAAC,CAAC;IACjD,CAAC,CAAC,CAAC;IAEH,EAAE,CAAC,uDAAuD,EAAE,KAAK,IAAI,EAAE;QACnE,IAAI,CAAC,KAAK,CAAC,iBAAiB,CAAC,SAAS,EAAE,YAAY,CAAC,CAAC;QACtD,MAAM,aAAa,GAAG,IAAI,CAAC,sBAAsB,CAAC,EAAE,cAAc,EAAkC,kBAAmB,EAAE,CAAC,CAAC;QAC3H,aAAa;QACb,aAAa,CAAC,cAAc,CAAC,cAAc,GAAG;YAC1C,sBAAsB,EAAE,IAAI,CAAC,EAAE,EAAE,CAAC,iBAAiB,CAAC,SAAS,CAAC;SACjE,CAAC;QAEF,MAAM,KAAK,GAAG,IAAI,gBAAgB,CAAC,eAAe,EAAE,iBAAiB,EAAE,aAAa,CAAC,cAAc,CAAC,WAAW,CAAC,CAAC;QAEjH,MAAM,MAAM,GAAsB,MAAM,QAAQ,CAAC,KAAK,EAAE,aAAa,CAAC,CAAC;QAEvE,MAAM,CAAC,MAAM,CAAC,UAAU,CAAC,CAAC,eAAe,CAAC,CAAC,CAAC,CAAC;IACjD,CAAC,CAAC,CAAC;AACP,CAAC,CAAC,CAAC;AAEH,QAAQ,CAAC,kBAAkB,EAAE,GAAG,EAAE;IAC9B,cAAc;IACd,SAAS,CAAC,GAAG,EAAE;QACX,IAAI,CAAC,iBAAiB,EAAE,CAAC;IAC7B,CAAC,CAAC,CAAC;IAEH,UAAU,CAAC,GAAG,EAAE;QACZ,IAAI,CAAC,aAAa,EAAE,CAAC;IACzB,CAAC,CAAC,CAAC;IAEH,EAAE,CAAC,2BAA2B,EAAE,KAAK,IAAI,EAAE;QACvC,MAAM,aAAa,GAAG,IAAI,CAAC,sBAAsB,CAAC,EAAE,cAAc,EAAkC,kBAAmB,EAAE,CAAC,CAAC;QAE3H,MAAM,KAAK,GAAG,IAAI,gBAAgB,CAAC,WAAW,EAAE,aAAa,EAAE,aAAa,CAAC,cAAc,CAAC,WAAW,CAAC,CAAC;QAEzG,MAAM,CAAC,KAAK,CAAC,WAAW,EAAE,CAAC,CAAC,OAAO,CAAC,8CAA8C,CAAC,CAAC;IACxF,CAAC,CAAC,CAAC;IAEH,EAAE,CAAC,kCAAkC,EAAE,KAAK,IAAI,EAAE;QAC9C,MAAM,aAAa,GAAG,IAAI,CAAC,sBAAsB,CAAC,EAAE,cAAc,EAAkC,kBAAmB,EAAE,CAAC,CAAC;QAE3H,MAAM,KAAK,GAAG,IAAI,gBAAgB,CAAC,WAAW,EAAE,aAAa,EAAE,aAAa,CAAC,cAAc,CAAC,WAAW,CAAC,CAAC;QAEzG,MAAM,CAAC,KAAK,CAAC,kBAAkB,EAAE,CAAC,CAAC,OAAO,CAAC,WAAW,CAAC,CAAC;IAC5D,CAAC,CAAC,CAAC;IAEH,EAAE,CAAC,wCAAwC,EAAE,KAAK,IAAI,EAAE;QACpD,MAAM,aAAa,GAAG,IAAI,CAAC,sBAAsB,CAAC,EAAE,cAAc,EAAkC,kBAAmB,EAAE,CAAC,CAAC;QAE3H,MAAM,KAAK,GAAG,IAAI,gBAAgB,CAAC,WAAW,EAAE,aAAa,EAAE,aAAa,CAAC,cAAc,CAAC,WAAW,CAAC,CAAC;QAEzG,MAAM,CAAC,KAAK,CAAC,aAAa,EAAE,CAAC,CAAC,OAAO,CAAC,UAAU,CAAC,CAAC;IACtD,CAAC,CAAC,CAAC;AACP,CAAC,CAAC,CAAC;AAEH,QAAQ,CAAC,6BAA6B,EAAE,GAAG,EAAE;IACzC,cAAc;IACd,SAAS,CAAC,GAAG,EAAE;QACX,IAAI,CAAC,iBAAiB,EAAE,CAAC;IAC7B,CAAC,CAAC,CAAC;IAEH,UAAU,CAAC,GAAG,EAAE;QACZ,IAAI,CAAC,aAAa,EAAE,CAAC;IACzB,CAAC,CAAC,CAAC;IAEH,EAAE,CAAC,oCAAoC,EAAE,KAAK,IAAI,EAAE;QAChD,MAAM,UAAU,GAAG,2BAA2B,CAAC,WAAW,EAAE,aAAa,CAAC,CAAC;QAE3E,MAAM,aAAa,GAAG,IAAI,CAAC,sBAAsB,CAAC,EAAE,cAAc,EAAkC,kBAAmB,EAAE,CAAC,CAAC;QAE3H,MAAM,KAAK,GAAG,UAAU,CAAC,SAAS,CAAC,SAAS,CAAC,EAAE,cAAc,EAAE,aAAa,CAAC,cAAc,EAAE,CAAC,CAAC;QAE/F,MAAM,CAAC,KAAK,CAAC,CAAC,WAAW,EAAE,CAAC;QAC5B,MAAM,CAAC,KAAK,CAAC,GAAG,CAAC,CAAC,IAAI,CAAC,WAAW,CAAC,CAAC;IACxC,CAAC,CAAC,CAAC;AACP,CAAC,CAAC,CAAC","sourcesContent":["import 'jest';\n\nimport * as core from '@msdyn365-commerce/core';\nimport mockRequestContext from '../../__mocks__/request-context.json';\nimport createGlobalStateDataAction, { getState, GlobalStateInput } from '../global-state-data-action';\n\nimport { BaseCartState } from '../../cart-state/base-cart-state';\nimport { BaseCheckoutState } from '../../checkout-state/base-checkout-state';\n\nconst requestContext = core.buildMockRequest(<Partial<core.IRequestContext>><unknown>mockRequestContext);\n\ndescribe('getState', () => {\n    // Setup mocks\n    beforeAll(() => {\n        core.initializeMockApp();\n    });\n\n    beforeEach(() => {\n        jest.resetAllMocks();\n    });\n\n    it('creates new cart state if state is CARTSTATE', async () => {\n        jest.spyOn(BaseCartState.prototype, 'initialize');\n        const actionContext = core.buildMockActionContext({ requestContext });\n        // @ts-ignore\n        actionContext.requestContext.sessionStorage = {\n            removeCheckoutCartData: jest.fn().mockResolvedValue(undefined)\n        };\n\n        const input = new GlobalStateInput('CARTSTATE', BaseCartState, actionContext.requestContext.apiSettings);\n\n        const result: BaseCartState = await getState(input, actionContext);\n\n        expect(result.initialize).toBeCalledTimes(1);\n    });\n\n    it('creates new checkouit state if state is CHECKOUTSTATE', async () => {\n        jest.spyOn(BaseCheckoutState.prototype, 'initialize');\n        const actionContext = core.buildMockActionContext({ requestContext: <core.IRequestContext>(<unknown>mockRequestContext) });\n        // @ts-ignore\n        actionContext.requestContext.sessionStorage = {\n            removeCheckoutCartData: jest.fn().mockResolvedValue(undefined)\n        };\n\n        const input = new GlobalStateInput('CHECKOUTSTATE', BaseCheckoutState, actionContext.requestContext.apiSettings);\n\n        const result: BaseCheckoutState = await getState(input, actionContext);\n\n        expect(result.initialize).toBeCalledTimes(1);\n    });\n});\n\ndescribe('GlobalStateInput', () => {\n    // Setup mocks\n    beforeAll(() => {\n        core.initializeMockApp();\n    });\n\n    beforeEach(() => {\n        jest.resetAllMocks();\n    });\n\n    it('Properly sets getCacheKey', async () => {\n        const actionContext = core.buildMockActionContext({ requestContext: <core.IRequestContext>(<unknown>mockRequestContext) });\n\n        const input = new GlobalStateInput('CARTSTATE', BaseCartState, actionContext.requestContext.apiSettings);\n\n        expect(input.getCacheKey()).toEqual('CARTSTATE-chanId:5637144608-catId:1111111111');\n    });\n\n    it('Properly sets getCacheObjectType', async () => {\n        const actionContext = core.buildMockActionContext({ requestContext: <core.IRequestContext>(<unknown>mockRequestContext) });\n\n        const input = new GlobalStateInput('CARTSTATE', BaseCartState, actionContext.requestContext.apiSettings);\n\n        expect(input.getCacheObjectType()).toEqual('CARTSTATE');\n    });\n\n    it('Properly set dataCacheType to instance', async () => {\n        const actionContext = core.buildMockActionContext({ requestContext: <core.IRequestContext>(<unknown>mockRequestContext) });\n\n        const input = new GlobalStateInput('CARTSTATE', BaseCartState, actionContext.requestContext.apiSettings);\n\n        expect(input.dataCacheType()).toEqual('instance');\n    });\n});\n\ndescribe('createGlobalStateDataAction', () => {\n    // Setup mocks\n    beforeAll(() => {\n        core.initializeMockApp();\n    });\n\n    beforeEach(() => {\n        jest.resetAllMocks();\n    });\n\n    it('creates createObservableDataAction', async () => {\n        const dataAction = createGlobalStateDataAction('CARTSTATE', BaseCartState);\n\n        const actionContext = core.buildMockActionContext({ requestContext: <core.IRequestContext>(<unknown>mockRequestContext) });\n\n        const input = dataAction.prototype.inputFunc({ requestContext: actionContext.requestContext });\n\n        expect(input).toBeDefined();\n        expect(input.key).toBe('CARTSTATE');\n    });\n});"]}