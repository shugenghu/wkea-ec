{"version":3,"file":"get-checkout-cart.test.js","sourceRoot":"./src/","sources":["data-actions/__tests__/get-checkout-cart.test.ts"],"names":[],"mappings":"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","sourcesContent":["import 'jest';\n\nimport * as core from '@msdyn365-commerce/core';\nimport * as CartsDataActions from '@msdyn365-commerce/retail-proxy/dist/DataActions/CartsDataActions.g';\nimport mockRequestContext from '../../__mocks__/request-context.json';\nimport getCheckoutCartDataActionn, { getCheckoutCart, GetCheckoutCartInput } from '../get-checkout-cart';\n\nimport { getCartState } from '../get-cart-state';\n\ndescribe('getCheckoutCart tests', () => {\n    const actionContext = core.buildMockActionContext({ requestContext: <core.IRequestContext>(<unknown>mockRequestContext) });\n    // @ts-ignore partial mock\n    const apiSettings: core.ICommerceApiSettings = {\n        channelId: 0,\n        catalogId: 0\n    };\n\n    // Setup mocks\n    beforeAll(() => {\n        core.initializeMockApp();\n        jest.mock('../../data-actions/get-cart-state');\n        jest.mock('@msdyn365-commerce/retail-proxy/dist/DataActions/CartsDataActions.g');\n    });\n\n    beforeEach(() => {\n        jest.resetAllMocks();\n\n        // @ts-ignore: Jest Mocking Confuses TS Complier\n        CartsDataActions.copyAsync = jest.fn().mockResolvedValue({\n            Id: 'cart2'\n        });\n    });\n\n    it('returns undefined if no cart', async () => {\n        // @ts-ignore: Jest Mocking Confuses TS Complier\n        getCartState = jest.fn().mockResolvedValue({\n            cart: {},\n            status: 'FAILED'\n        });\n\n        // @ts-ignore: Jest Mocking Confuses TS Complier\n        actionContext.requestContext.cookies = {\n            getCheckoutCartCookie: jest.fn().mockReturnValue('')\n        };\n\n        const result = await getCheckoutCart(new GetCheckoutCartInput(apiSettings), actionContext);\n\n        expect(result).toBeUndefined();\n        expect(CartsDataActions.copyAsync).not.toBeCalled();\n        expect(getCartState).toBeCalled();\n    });\n\n    it('calls copyAsync and returns result', async () => {\n        // @ts-ignore: Jest Mocking Confuses TS Complier\n        getCartState = jest.fn().mockResolvedValue({\n            cart: { Id: 'cart1' },\n            status: 'SUCCESS'\n        });\n\n        // @ts-ignore: Jest Mocking Confuses TS Complier\n        actionContext.requestContext.cookies = {\n            getCheckoutCartCookie: jest.fn().mockReturnValue(''),\n            setCheckoutCartCookie: jest.fn()\n        };\n\n        const result = await getCheckoutCart(new GetCheckoutCartInput(apiSettings), actionContext);\n\n        expect(result).toBeDefined();\n        expect(result!.Id).toEqual('cart2');\n        expect(CartsDataActions.copyAsync).toBeCalled();\n        expect(getCartState).toBeCalled();\n    });\n\n    it('returns undefined if copyAsync throws', async () => {\n        // @ts-ignore: Jest Mocking Confuses TS Complier\n        getCartState = jest.fn().mockResolvedValue({\n            cart: { Id: 'cart1' },\n            status: 'SUCCESS'\n        });\n\n        // @ts-ignore: Jest Mocking Confuses TS Complier\n        actionContext.requestContext.cookies = {\n            getCheckoutCartCookie: jest.fn().mockReturnValue('')\n        };\n\n        // @ts-ignore: Jest Mocking Confuses TS Complier\n        CartsDataActions.copyAsync = jest.fn().mockRejectedValue(new Error('Failed'));\n\n        const result = await getCheckoutCart(new GetCheckoutCartInput(apiSettings), actionContext);\n\n        expect(result).toBeUndefined();\n        expect(CartsDataActions.copyAsync).toBeCalled();\n        expect(getCartState).toBeCalled();\n    });\n\n    it('input created as expected', async () => {\n        const input = new GetCheckoutCartInput(apiSettings);\n\n        expect(input.dataCacheType()).toEqual('request');\n        expect(input.getCacheObjectType()).toEqual('CheckoutCart');\n        expect(input.getCacheKey()).toEqual('CheckoutCart-chanId:0-catId:0');\n    });\n\n    it('data action input works as epxected', async () => {\n        const input = getCheckoutCartDataActionn.prototype.inputFunc({ requestContext: actionContext.requestContext });\n\n        expect(input).toBeDefined();\n    });\n\n    it('returns existing anon checkout cart if checkoutCartId set in cookie', async () => {\n        // @ts-ignore: Jest Mocking Confuses TS Complier\n        getCartState = jest.fn().mockResolvedValue({\n            cart: {\n                Id: '1',\n                Version: 1\n            },\n            status: 'SUCCESS'\n        });\n\n        // @ts-ignore: Jest Mocking Confuses TS Complier\n        CartsDataActions.readAsync = jest.fn().mockResolvedValue({\n            Id: '2',\n            Version: 2\n        });\n\n        // @ts-ignore: Jest Mocking Confuses TS Complier\n        actionContext.requestContext.user = {\n            isAuthenticated: false\n        }\n\n        // @ts-ignore: Jest Mocking Confuses TS Complier\n        actionContext.requestContext.cookies = {\n            getCheckoutCartCookie: jest.fn().mockReturnValue('p:2')\n        };\n\n        const result = await getCheckoutCart(new GetCheckoutCartInput(apiSettings), actionContext);\n\n        expect(result).toBeDefined();\n        expect(result?.Id).toEqual('2');\n    });\n\n    it('returns existing auth checkout cart if checkoutCartId set in cookie', async () => {\n        // @ts-ignore: Jest Mocking Confuses TS Complier\n        getCartState = jest.fn().mockResolvedValue({\n            cart: {\n                Id: '1',\n                Version: 1\n            },\n            status: 'SUCCESS'\n        });\n\n        // @ts-ignore: Jest Mocking Confuses TS Complier\n        CartsDataActions.readAsync = jest.fn().mockResolvedValue({\n            Id: '2',\n            Version: 2\n        });\n\n        // @ts-ignore: Jest Mocking Confuses TS Complier\n        actionContext.requestContext.user = {\n            isAuthenticated: true\n        }\n\n        // @ts-ignore: Jest Mocking Confuses TS Complier\n        actionContext.requestContext.cookies = {\n            getCheckoutCartCookie: jest.fn().mockReturnValue('t:2')\n        };\n\n        const result = await getCheckoutCart(new GetCheckoutCartInput(apiSettings), actionContext);\n\n        expect(result).toBeDefined();\n        expect(result?.Id).toEqual('2');\n    });\n\n    it('returns new checkout cart if get checkoutCart failed for saved auth checkoutcard id', async () => {\n        // @ts-ignore: Jest Mocking Confuses TS Complier\n        getCartState = jest.fn().mockResolvedValue({\n            cart: {\n                Id: '1',\n                Version: 1\n            },\n            status: 'SUCCESS'\n        });\n\n        // @ts-ignore: Jest Mocking Confuses TS Complier\n        CartsDataActions.readAsync = jest.fn().mockRejectedValue(new Error('Fail'));\n\n        // @ts-ignore: Jest Mocking Confuses TS Complier\n        actionContext.requestContext.user = {\n            isAuthenticated: true\n        }\n\n        // @ts-ignore: Jest Mocking Confuses TS Complier\n        actionContext.requestContext.cookies = {\n            getCheckoutCartCookie: jest.fn().mockReturnValue('t:2'),\n            setCheckoutCartCookie: jest.fn()\n        };\n\n        const result = await getCheckoutCart(new GetCheckoutCartInput(apiSettings), actionContext);\n\n        expect(result).toBeDefined();\n        expect(actionContext.requestContext.cookies.setCheckoutCartCookie).toBeCalled();\n        expect(result?.Id).toEqual('cart2');\n    });\n\n    it('returns new checkout cart if get checkoutCart failed for saved anon checkoutcard id', async () => {\n        // @ts-ignore: Jest Mocking Confuses TS Complier\n        getCartState = jest.fn().mockResolvedValue({\n            cart: {\n                Id: '1',\n                Version: 1\n            },\n            status: 'SUCCESS'\n        });\n\n        // @ts-ignore: Jest Mocking Confuses TS Complier\n        CartsDataActions.readAsync = jest.fn().mockRejectedValue(new Error('Fail'));\n\n        // @ts-ignore: Jest Mocking Confuses TS Complier\n        actionContext.requestContext.user = {\n            isAuthenticated: false\n        }\n\n        // @ts-ignore: Jest Mocking Confuses TS Complier\n        actionContext.requestContext.cookies = {\n            getCheckoutCartCookie: jest.fn().mockReturnValue('p:2'),\n            setCheckoutCartCookie: jest.fn()\n        };\n\n        const result = await getCheckoutCart(new GetCheckoutCartInput(apiSettings), actionContext);\n\n        expect(result).toBeDefined();\n        expect(actionContext.requestContext.cookies.setCheckoutCartCookie).toBeCalled();\n        expect(result?.Id).toEqual('cart2');\n    });\n\n});"]}