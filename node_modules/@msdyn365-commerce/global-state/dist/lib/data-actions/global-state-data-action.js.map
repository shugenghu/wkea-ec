{"version":3,"file":"global-state-data-action.js","sourceRoot":"./src/","sources":["data-actions/global-state-data-action.ts"],"names":[],"mappings":"AAAA,OAAO,EAAa,0BAA0B,EAAwG,MAAM,yBAAyB,CAAC;AACtL,OAAO,EAAE,iBAAiB,EAAwC,MAAM,gCAAgC,CAAC;AAIzG;;GAEG;AACH,MAAM,OAAO,gBAAgB;IAKzB,YAAY,GAAoB,EAAE,gBAA8C,EAAE,WAAiC;QAM5G,gBAAW,GAAG,GAAG,EAAE,CAAC,GAAG,IAAI,CAAC,GAAG,WAAW,IAAI,CAAC,WAAW,CAAC,SAAS,UAAU,IAAI,CAAC,WAAW,CAAC,SAAS,EAAE,CAAC;QAC3G,uBAAkB,GAAG,GAAG,EAAE,CAAC,IAAI,CAAC,GAAG,CAAC;QACpC,kBAAa,GAAG,GAAc,EAAE,CAAC,UAAU,CAAC;QAP/C,IAAI,CAAC,WAAW,GAAG,WAAW,CAAC;QAC/B,IAAI,CAAC,gBAAgB,GAAG,gBAAgB,CAAC;QACzC,IAAI,CAAC,GAAG,GAAG,GAAG,CAAC;IACnB,CAAC;CAKJ;AAED,MAAM,CAAC,KAAK,UAAU,QAAQ,CAA4B,KAA6B,EAAE,GAAmB;IACxG,MAAM,iBAAiB,GAAG,iBAAiB,CAAC,KAAK,CAAC,gBAAgB,EAAE,GAAG,CAAC,CAAC;IAEzE,MAAM,iBAAiB,CAAC,UAAU,EAAE,CAAC;IAErC,OAAO,iBAAiB,CAAC;AAC7B,CAAC;AAED,MAAM,CAAC,OAAO,UAAU,2BAA2B,CAA4B,GAAoB,EAAE,gBAA8C;IAC/I,OAAO,0BAA0B,CAAC;QAC9B,MAAM,EAAiB,QAAQ;QAC/B,KAAK,EAAE,CAAC,IAA0B,EAAE,EAAE;YAClC,OAAO,IAAI,gBAAgB,CAAC,GAAG,EAAE,gBAAgB,EAAE,IAAI,CAAC,cAAc,CAAC,WAAW,CAAC,CAAC;QACxF,CAAC;KACJ,CAAC,CAAC;AACP,CAAC","sourcesContent":["import { CacheType, createObservableDataAction, IAction, IActionContext, IActionInput, ICommerceApiSettings, ICreateActionContext, IObservableAction } from '@msdyn365-commerce/core';\nimport { createGlobalState, GlobalStateConstructor, IGlobalState } from '../global-state/i-global-state';\n\nexport declare type GlobalStateType = 'CARTSTATE' | 'CHECKOUTSTATE';\n\n/**\n * Shared class that handles global state inputs\n */\nexport class GlobalStateInput<TOut extends IGlobalState> implements IActionInput {\n    public readonly stateConstructor: GlobalStateConstructor<TOut>;\n    public readonly key: GlobalStateType;\n    private apiSettings: ICommerceApiSettings;\n\n    constructor(key: GlobalStateType, stateConstructor: GlobalStateConstructor<TOut>, apiSettings: ICommerceApiSettings) {\n        this.apiSettings = apiSettings;\n        this.stateConstructor = stateConstructor;\n        this.key = key;\n    }\n\n    public getCacheKey = () => `${this.key}-chanId:${this.apiSettings.channelId}-catId:${this.apiSettings.catalogId}`;\n    public getCacheObjectType = () => this.key;\n    public dataCacheType = (): CacheType => 'instance';\n}\n\nexport async function getState<TOut extends IGlobalState>(input: GlobalStateInput<TOut>, ctx: IActionContext): Promise<TOut> {\n    const globalStateObject = createGlobalState(input.stateConstructor, ctx);\n\n    await globalStateObject.initialize();\n\n    return globalStateObject;\n}\n\nexport default function createGlobalStateDataAction<TOut extends IGlobalState>(key: GlobalStateType, stateConstructor: GlobalStateConstructor<TOut>): IObservableAction<TOut> {\n    return createObservableDataAction({\n        action: <IAction<TOut>>getState,\n        input: (args: ICreateActionContext) => {\n            return new GlobalStateInput(key, stateConstructor, args.requestContext.apiSettings);\n        }\n    });\n}"]}