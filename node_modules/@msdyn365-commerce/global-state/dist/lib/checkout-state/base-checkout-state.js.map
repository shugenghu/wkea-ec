{"version":3,"file":"base-checkout-state.js","sourceRoot":"./src/","sources":["checkout-state/base-checkout-state.ts"],"names":[],"mappings":"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","sourcesContent":["import get from 'lodash/get';\nimport { action, computed, observable } from 'mobx';\n\nimport { IActionContext } from '@msdyn365-commerce/core';\nimport {\n    Address, AttributeValueBase, CommerceProperty, GiftCard, SalesOrder, SimpleProduct, TenderLine, TokenizedPaymentCard\n} from '@msdyn365-commerce/retail-proxy/dist/Entities/CommerceTypes.g';\n\nimport { GlobalState } from '../global-state/global-state';\nimport { ICartState } from '../state-interfaces/i-cart-state';\nimport { ICheckoutActionResult, ICheckoutGenericData, ICheckoutState, IGiftCardExtend } from '../state-interfaces/i-checkout-state';\nimport { BaseCheckoutCartState } from './base-checkout-cart-state';\nimport { CheckoutStorageKey } from './checkout-state-storage';\n\n/**\n * State information related to what is needed to succesfully perform a checkout\n */\nexport class BaseCheckoutState extends GlobalState implements ICheckoutState {\n    @observable protected _checkoutCart: ICartState;\n    @computed public get checkoutCart(): ICartState {\n        return this._checkoutCart;\n    }\n\n    @observable protected _salesOrder?: SalesOrder;\n    @computed public get salesOrder(): Readonly<SalesOrder | undefined> {\n        return this._salesOrder;\n    }\n\n    @observable protected _attributeValues: AttributeValueBase[];\n    @computed public get attributeValues(): Readonly<AttributeValueBase[] | undefined> {\n        return this._attributeValues;\n    }\n\n    @observable protected _extensionProperties: CommerceProperty[];\n    @computed public get extensionProperties(): Readonly<CommerceProperty[] | undefined> {\n        return this._extensionProperties;\n    }\n\n    @observable protected _orderedProducts?: SimpleProduct[];\n    @computed public get orderedProducts(): Readonly<SimpleProduct[] | undefined> {\n        return this._orderedProducts;\n    }\n\n    @observable protected _tokenizedPaymentCard?: TokenizedPaymentCard;\n    @computed public get tokenizedPaymentCard(): Readonly<TokenizedPaymentCard | undefined> {\n        return this._tokenizedPaymentCard;\n    }\n\n    @observable protected _tenderLine?: TenderLine;\n    @computed public get tenderLine(): Readonly<TenderLine | undefined> {\n        return this._tenderLine;\n    }\n\n    @observable protected _billingAddress?: Address;\n    @computed public get billingAddress(): Readonly<Address | undefined> {\n        return this._billingAddress;\n    }\n\n    @observable protected _isBillingAddressSameAsShippingAddress?: boolean;\n    @computed public get isBillingAddressSameAsShippingAddress(): Readonly<boolean | undefined> {\n        return this._isBillingAddressSameAsShippingAddress;\n    }\n\n    @observable protected _shippingAddress?: Address;\n    @computed public get shippingAddress(): Readonly<Address | undefined> {\n        return this._shippingAddress;\n    }\n\n    @observable protected _cardPrefix?: string;\n    @computed public get cardPrefix(): Readonly<string | undefined> {\n        return this._cardPrefix;\n    }\n\n    @observable protected _paymentTenderType?: string;\n    @computed public get paymentTenderType(): Readonly<string | undefined> {\n        return this._paymentTenderType;\n    }\n\n    /**\n     * @deprecated Use giftCardExtends method\n     */\n    @computed public get giftCards(): Readonly<GiftCard[]> {\n        return this.giftCardExtends;\n    }\n\n    @observable protected _giftCardExtends: IGiftCardExtend[] = [];\n    @computed public get giftCardExtends(): Readonly<IGiftCardExtend[]> {\n        return this._giftCardExtends;\n    }\n\n    @observable protected _loyaltyCardNumber?: string;\n    @computed public get loyaltyCardNumber(): Readonly<string | undefined> {\n        return this._loyaltyCardNumber;\n    }\n\n    @observable protected _loyaltyAmount: number = 0;\n    @computed public get loyaltyAmount(): Readonly<number> {\n        return this._loyaltyAmount;\n    }\n\n    @observable protected _guestCheckoutEmail: string = '';\n    @computed public get guestCheckoutEmail(): Readonly<string> {\n        return this._guestCheckoutEmail;\n    }\n\n    @observable protected _isTermsAndConditionAccepted?: boolean;\n    @computed public get isTermsAndConditionAccepted(): Readonly<boolean | undefined> {\n        return this._isTermsAndConditionAccepted;\n    }\n\n    @observable protected _customerAccountAmount: number = 0;\n    @computed public get customerAccountAmount(): Readonly<number> {\n        return this._customerAccountAmount;\n    }\n\n    @observable protected _checkoutGenericData: object = {};\n\n    constructor(actionContext: IActionContext) {\n        super(actionContext);\n        this._checkoutCart = new BaseCheckoutCartState(actionContext);\n        this._attributeValues = [];\n        this._extensionProperties = [];\n    }\n\n    public async initialize(): Promise<void> {\n        if (this.isInitialized) {\n            return;\n        }\n\n        await this._checkoutCart.initialize();\n\n        this.setInitialData();\n        this.isInitialized = true;\n        this._status = 'READY';\n        this._attributeValues = [];\n        this._extensionProperties = [];\n    }\n\n    @action\n    public updateSalesOrder(input: { newSalesOrder: SalesOrder; newOrderedProducts: SimpleProduct[]; additionalProperties?: object }): Promise<ICheckoutActionResult> {\n        this._salesOrder = input.newSalesOrder;\n        this._orderedProducts = input.newOrderedProducts;\n        this._attributeValues = input.newSalesOrder.AttributeValues || [];\n        this._extensionProperties = input.newSalesOrder.ExtensionProperties || [];\n\n        return Promise.resolve(<ICheckoutActionResult>{ status: 'SUCCESS' });\n    }\n\n    @action\n    public async updateAttributeValues(input: { newAttributeValues: AttributeValueBase[]; additionalProperties?: object }): Promise<ICheckoutActionResult> {\n        this._attributeValues = input.newAttributeValues;\n\n        return Promise.resolve(<ICheckoutActionResult>{ status: 'SUCCESS' });\n    }\n\n    @action\n    public async updateExtensionProperties(input: { newExtensionProperties: CommerceProperty[]; additionalProperties?: object }): Promise<ICheckoutActionResult> {\n        this._extensionProperties = input.newExtensionProperties;\n\n        return Promise.resolve(<ICheckoutActionResult>{ status: 'SUCCESS' });\n    }\n\n    @action\n    public updateTokenizedPaymentCard(input: { newTokenizedPaymentCard?: TokenizedPaymentCard; additionalProperties?: object }): Promise<ICheckoutActionResult> {\n        this._tokenizedPaymentCard = input.newTokenizedPaymentCard;\n\n        return Promise.resolve(<ICheckoutActionResult>{ status: 'SUCCESS' });\n    }\n\n    @action\n    public updateTenderLine(input: { newTenderLine?: TenderLine; additionalProperties?: object }): Promise<ICheckoutActionResult> {\n        this._tenderLine = input.newTenderLine;\n\n        return Promise.resolve(<ICheckoutActionResult>{ status: 'SUCCESS' });\n    }\n\n    @action\n    public async updateShippingAddress(input: { newShippingAddress: Address; additionalProperties?: object }): Promise<ICheckoutActionResult> {\n        this._shippingAddress = input.newShippingAddress;\n\n        return Promise.resolve(<ICheckoutActionResult>{ status: 'SUCCESS' });\n    }\n\n    @action\n    public async updateTermsAndConditionsAcceptance(input: { newIsTermsAndConditionAccepted: boolean; additionalProperties?: object }): Promise<ICheckoutActionResult> {\n        this._isTermsAndConditionAccepted = input.newIsTermsAndConditionAccepted;\n\n        return Promise.resolve(<ICheckoutActionResult>{ status: 'SUCCESS' });\n    }\n\n    @action\n    public updateBillingAddress(input: { newBillingAddress: Address; additionalProperties?: object }): Promise<ICheckoutActionResult> {\n        this._billingAddress = input.newBillingAddress;\n\n        // @ts-ignore\n        this._isBillingAddressSameAsShippingAddress = input.additionalProperties?.isBillingAddressSameAsShippingAddress || false;\n\n        return Promise.resolve(<ICheckoutActionResult>{ status: 'SUCCESS' });\n    }\n\n    @action\n    public removeBillingAddress(input: { additionalProperties?: object }): Promise<ICheckoutActionResult> {\n        this._billingAddress = undefined;\n        this._isBillingAddressSameAsShippingAddress = undefined;\n\n        return Promise.resolve(<ICheckoutActionResult>{ status: 'SUCCESS' });\n    }\n\n    @action\n    public updatePaymentTenderType(input: { newPaymentTenderType?: string; additionalProperties?: object }): Promise<ICheckoutActionResult> {\n        this._paymentTenderType = input.newPaymentTenderType;\n\n        return Promise.resolve(<ICheckoutActionResult>{ status: 'SUCCESS' });\n    }\n\n    @action\n    public updateCardPrefix(input: { newCardPrefix: string; additionalProperties?: object }): Promise<ICheckoutActionResult> {\n        this._cardPrefix = input.newCardPrefix;\n\n        return Promise.resolve(<ICheckoutActionResult>{ status: 'SUCCESS' });\n    }\n\n    @action\n    public removeGiftCard(input: { giftCardNumber: string; additionalProperties?: object }): Promise<ICheckoutActionResult> {\n        this._giftCardExtends = this._giftCardExtends.filter(giftCard => giftCard.Id !== input.giftCardNumber);\n\n        return Promise.resolve(<ICheckoutActionResult>{ status: 'SUCCESS' });\n    }\n\n    @action\n    public removeGiftCardExtend(input: { giftCardNumber: string; additionalProperties?: object }): Promise<ICheckoutActionResult> {\n        this._giftCardExtends = this._giftCardExtends.filter(giftCard => giftCard.Id !== input.giftCardNumber);\n\n        return Promise.resolve(<ICheckoutActionResult>{ status: 'SUCCESS' });\n    }\n\n    @action\n    public addGiftCard(input: { giftCard: GiftCard; additionalProperties?: object }): Promise<ICheckoutActionResult> {\n        // @ts-ignore\n        const { Pin, ExpirationDate, TenderTypeId } = input.additionalProperties || {}\n\n        const gitCardExtend = { ...input.giftCard, ...{ Pin, ExpirationDate, TenderTypeId } };\n\n        this._giftCardExtends = [gitCardExtend, ...this._giftCardExtends];\n\n        return Promise.resolve(<ICheckoutActionResult>{ status: 'SUCCESS' });\n    }\n\n    @action\n    public addGiftCardExtend(input: { giftCard: IGiftCardExtend; additionalProperties?: object }): Promise<ICheckoutActionResult> {\n        this._giftCardExtends = [input.giftCard, ...this._giftCardExtends];\n\n        return Promise.resolve(<ICheckoutActionResult>{ status: 'SUCCESS' });\n    }\n\n    @action\n    public updateLoyaltyCardNumber(input: { newLoyaltyCardNumber: string; additionalProperties?: object }): Promise<ICheckoutActionResult> {\n        this._loyaltyCardNumber = input.newLoyaltyCardNumber;\n\n        return Promise.resolve(<ICheckoutActionResult>{ status: 'SUCCESS' });\n    }\n\n    @action\n    public updateLoyaltyAmount(input: { newAmount: number; additionalProperties?: object }): Promise<ICheckoutActionResult> {\n        this._loyaltyAmount = Number(input.newAmount.toFixed(2));\n\n        return Promise.resolve(<ICheckoutActionResult>{ status: 'SUCCESS' });\n    }\n\n    @action\n    public async updateGuestCheckoutEmail(input: { newGuestCheckoutEmail: string; additionalProperties?: object }): Promise<ICheckoutActionResult> {\n        this._guestCheckoutEmail = input.newGuestCheckoutEmail;\n        const emailOnCart = this.checkoutCart.cart.ReceiptEmail;\n\n        if (emailOnCart !== input.newGuestCheckoutEmail) {\n            await this.checkoutCart.updateReceiptEmail({ newEmail: input.newGuestCheckoutEmail });\n        }\n\n        return Promise.resolve(<ICheckoutActionResult>{ status: 'SUCCESS' });\n    }\n\n    @action\n    public removeCheckoutCartId(input: { additionalProperties?: object }): Promise<ICheckoutActionResult> {\n        //@ts-ignore\n        this.actionContext.requestContext.cookies.removeCheckoutCartCookie();\n        return Promise.resolve(<ICheckoutActionResult>{ status: 'SUCCESS' });\n    }\n\n    @action\n    public saveDataInStorage(input: { additionalProperties?: object }): Promise<ICheckoutActionResult> {\n        const { sessionStorage } = this.actionContext.requestContext;\n\n        // Add all local data to session storage\n        if (this.billingAddress) {\n            sessionStorage.setCheckoutCartData(CheckoutStorageKey.BillingAddress, { billingAddress: this.billingAddress, isBillingAddressSameAsShippingAddress: this.isBillingAddressSameAsShippingAddress });\n        }\n\n        if (this.giftCardExtends && this.giftCardExtends.length > 0) {\n            sessionStorage.setCheckoutCartData(CheckoutStorageKey.GiftCard, this.giftCardExtends);\n        }\n\n        if (this.loyaltyCardNumber) {\n            sessionStorage.setCheckoutCartData(CheckoutStorageKey.LoyaltyCardNumber, { loyaltyCardNumber: this.loyaltyCardNumber });\n        }\n\n        if (this.loyaltyAmount) {\n            sessionStorage.setCheckoutCartData(CheckoutStorageKey.LoyaltyAmount, { loyaltyAmount: this.loyaltyAmount });\n        }\n\n        if (this.isTermsAndConditionAccepted) {\n            sessionStorage.setCheckoutCartData(CheckoutStorageKey.TermsAndCondition, { isTermsAndConditionAccepted: this.isTermsAndConditionAccepted });\n        }\n\n        if (this.paymentTenderType) {\n            sessionStorage.setCheckoutCartData(CheckoutStorageKey.PaymentTenderType, { paymentTenderType: this.paymentTenderType });\n        }\n\n        // save generic data with SaveDataBeforeRedirect value true\n        const filtered = Object.keys(this._checkoutGenericData).reduce((filteredData: object, key: string) => {\n            if (this._checkoutGenericData[key].SaveDataBeforeRedirect) {\n                filteredData[key] = this._checkoutGenericData[key];\n            }\n            return filteredData;\n        }, {});\n\n        if (Object.keys(filtered).length > 0) {\n            sessionStorage.setCheckoutCartData(CheckoutStorageKey.CheckoutGenericData, { checkoutGenericData: filtered });\n        }\n\n        return Promise.resolve(<ICheckoutActionResult>{ status: 'SUCCESS' });\n    }\n\n    @action\n    public updateCustomerAccountAmount(input: { newAmount: number; additionalProperties?: object }): Promise<ICheckoutActionResult> {\n        this._customerAccountAmount = Number(input.newAmount.toFixed(2));\n\n        return Promise.resolve(<ICheckoutActionResult>{ status: 'SUCCESS' });\n    }\n\n    @action\n    public setCheckoutGenericData(input: { key: string; checkoutGenericData: ICheckoutGenericData; additionalProperties?: object }): Promise<ICheckoutActionResult> {\n        this._checkoutGenericData[input.key] = input.checkoutGenericData;\n        return Promise.resolve(<ICheckoutActionResult>{ status: 'SUCCESS' });\n    }\n\n    @action\n    public getCheckoutGenericData(input: { key: string }): ICheckoutGenericData | undefined {\n        return this._checkoutGenericData[input.key];\n    }\n\n    @action\n    private cleanCheckoutData(input: { additionalProperties?: object }): Promise<ICheckoutActionResult> {\n        this.actionContext.requestContext.sessionStorage.removeCheckoutCartData();\n        return Promise.resolve(<ICheckoutActionResult>{ status: 'SUCCESS' });\n    }\n\n    private isPaymentVerificationRedirection(): boolean {\n        const { requestFormData, query } = this.actionContext.requestContext;\n        return (requestFormData && query && query.pv === '1') ? true : false;\n    }\n\n    private setInitialData() {\n        const { sessionStorage } = this.actionContext.requestContext;\n\n        if (this.isPaymentVerificationRedirection()) {\n            const billingAddress = sessionStorage.getCheckoutCartData(CheckoutStorageKey.BillingAddress);\n            const giftCard = sessionStorage.getCheckoutCartData(CheckoutStorageKey.GiftCard);\n\n            this._billingAddress = get(billingAddress, 'billingAddress');\n            this._isBillingAddressSameAsShippingAddress = get(billingAddress, 'isBillingAddressSameAsShippingAddress');\n            this._giftCardExtends = (giftCard && Array.isArray(giftCard) ? giftCard : []) as IGiftCardExtend[];\n            this._loyaltyCardNumber = get(sessionStorage.getCheckoutCartData(CheckoutStorageKey.LoyaltyCardNumber), 'loyaltyCardNumber');\n            this._loyaltyAmount = get(sessionStorage.getCheckoutCartData(CheckoutStorageKey.LoyaltyAmount), 'loyaltyAmount');\n            this._isTermsAndConditionAccepted = get(sessionStorage.getCheckoutCartData(CheckoutStorageKey.TermsAndCondition), 'isTermsAndConditionAccepted');\n            this._checkoutGenericData = get(sessionStorage.getCheckoutCartData(CheckoutStorageKey.CheckoutGenericData), 'checkoutGenericData') || {};\n            this._paymentTenderType = get(sessionStorage.getCheckoutCartData(CheckoutStorageKey.PaymentTenderType), 'paymentTenderType');\n        }\n\n        this.cleanCheckoutData({});\n    }\n}"]}