import { CacheType, IActionContext, IActionInput, ICommerceApiSettings, IObservableAction } from '@msdyn365-commerce/core';
import { GlobalStateConstructor, IGlobalState } from '../global-state/i-global-state';
export declare type GlobalStateType = 'CARTSTATE' | 'CHECKOUTSTATE';
/**
 * Shared class that handles global state inputs
 */
export declare class GlobalStateInput<TOut extends IGlobalState> implements IActionInput {
    readonly stateConstructor: GlobalStateConstructor<TOut>;
    readonly key: GlobalStateType;
    private apiSettings;
    constructor(key: GlobalStateType, stateConstructor: GlobalStateConstructor<TOut>, apiSettings: ICommerceApiSettings);
    getCacheKey: () => string;
    getCacheObjectType: () => GlobalStateType;
    dataCacheType: () => CacheType;
}
export declare function getState<TOut extends IGlobalState>(input: GlobalStateInput<TOut>, ctx: IActionContext): Promise<TOut>;
export default function createGlobalStateDataAction<TOut extends IGlobalState>(key: GlobalStateType, stateConstructor: GlobalStateConstructor<TOut>): IObservableAction<TOut>;
