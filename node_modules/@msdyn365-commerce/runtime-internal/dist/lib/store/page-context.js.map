{"version":3,"file":"page-context.js","sourceRoot":"","sources":["../../../src/store/page-context.ts"],"names":[],"mappings":"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","sourcesContent":["/*!\n * Copyright (c) Microsoft Corporation.\n * All rights reserved. See LICENSE in the project root for license information.\n */\n\nimport { ICache, ICacheSettings } from '@msdyn365-commerce/cache-internal';\nimport msdyn365Commerce, {\n    IDictionary,\n    IModule,\n    IModuleContract,\n    IPageResponse,\n    IRequestContext,\n    IResourceManager,\n    isAuthoringEditEnabled,\n    isEmptyOrNullObject\n} from '@msdyn365-commerce/core-internal';\nimport { AsyncResult, isAsyncResult } from '@msdyn365-commerce/retail-proxy';\nimport { EXCEPTION_BADPAGECONTEXT, EXCEPTION_INITIALDATAFAIL, ITelemetry } from '@msdyn365-commerce/telemetry-internal';\nimport { isObservableArray, toJS, transaction } from 'mobx';\nimport { IModuleBinder } from '../app-initialization/models';\nimport {\n    CACHE_SETTING,\n    MODULE_ACTION_KEY,\n    MODULE_CACHE_KEY,\n    MODULE_CONFIG_ERRORS_KEY,\n    MODULE_CONFIG_KEY,\n    MODULE_DATA_KEY,\n    MODULE_DEFERRED_KEY,\n    MODULE_RESOURCES_KEY,\n    MSDYN365_WYSIWYG_CANADDMODULE,\n    MSDYN365_WYSIWYG_DISABLED_PROPS\n} from '../consts';\nimport { getParentModuleName } from '../utils/helpers';\nimport { getWrappedProxyObject } from './authoring-edit-helper';\n\n/**\n * Interface containing module metadata that pageContext holds\n *\n * Any change to this interface should result an accompanying change to the moduleList\n * Fast JSON stringify constructor in base-page-utils.ts\n */\ninterface IModuleMetaData {\n    id: string;\n    typeName: string;\n    dataActions: unknown;\n}\n\ninterface IActionMetaData {\n    name: string;\n    entity: string;\n    inputs: string[];\n}\n\n/**\n * Class to hold the page view model, areas and regions\n */\nexport class PageContext {\n    public requestContext: IRequestContext;\n    public pageRoot: IModuleContract & { theme: string };\n    public requestCache: ICache;\n    private _moduleList: IModuleMetaData[] = [];\n    private _themeModulesList: string[] = [];\n\n    // tslint:disable-next-line:no-any\n    constructor(pageData: IPageResponse | any, requestContext: IRequestContext, requestCache: ICache, resourceManager?: IResourceManager) {\n        if (isEmptyOrNullObject(pageData)) {\n            throw new Error(EXCEPTION_BADPAGECONTEXT);\n        }\n        this.requestContext = requestContext;\n        this.requestCache = requestCache;\n        this.pageRoot = pageData.pageRoot;\n\n        // tslint:disable-next-line:no-typeof-undefined\n        if (typeof window === 'undefined') {\n            this._putRequestedModulesInCacheOnServer(pageData, resourceManager);\n        }\n\n        this._initThemeModulesList();\n    }\n\n    /**\n     * Returns callback function that returns module rendering metadata for a given module\n     */\n    get modules(): (name: string) => IModule {\n        return (name: string) => {\n            const cacheItem = this.requestCache.getValue<IModule>({ typeName: MODULE_CACHE_KEY, key: name });\n            if (!cacheItem) {\n                throw new Error(`requested module id [${name}] is not found in module dictionary of pageconfig`);\n            }\n\n            const data = { ...(this.requestCache.getValue<IModule>({ typeName: MODULE_DATA_KEY, key: name }) || {}) };\n            const actions = this.requestCache.getValue<IActionMetaData[]>({ typeName: MODULE_ACTION_KEY, key: name });\n            const resources = this.requestCache.getValue<IDictionary<string>>({ typeName: MODULE_RESOURCES_KEY, key: cacheItem.typeName });\n\n            // toJS method\n            if (actions && toJS(actions)) {\n                for (const action of toJS(actions)) {\n                    if (action.entity && action.inputs) {\n                        data[action.name] =\n                            Array.isArray(action.inputs) || isObservableArray(action.inputs)\n                                ? action.inputs.map((cacheKey: string) => this._populateDataActionResultFromCache(action.entity, cacheKey))\n                                : this._populateDataActionResultFromCache(action.entity, action.inputs);\n                    } else {\n                        data[action.name] = AsyncResult.reject('Action Input Creation Failure');\n                    }\n                }\n            }\n\n            const config = this.requestCache.getValue<IDictionary<{}>>({ typeName: MODULE_CONFIG_KEY, key: name }) || {};\n            return {\n                ...cacheItem,\n                data: data,\n                config:\n                    // tslint:disable-next-line:no-typeof-undefined\n                    !(typeof window === 'undefined') && isAuthoringEditEnabled(this.requestContext)\n                        ? getWrappedProxyObject(config, name, cacheItem.typeName)\n                        : config,\n                configErrors: this.requestCache.getValue({ typeName: MODULE_CONFIG_ERRORS_KEY, key: name }),\n                resources: resources || {},\n                disabledProperties: this.requestCache.getValue({ typeName: MSDYN365_WYSIWYG_DISABLED_PROPS, key: name }) || [],\n                slotsForAddModule: this.requestCache.getValue({ typeName: MSDYN365_WYSIWYG_CANADDMODULE, key: name }) || []\n            };\n        };\n    }\n\n    /**\n     * Get all the modules listed in the PageContext from the cache\n     */\n    get allModules(): IModule[] {\n        return this._moduleList.map(moduleMetaData => {\n            return this.modules(moduleMetaData.id);\n        });\n    }\n\n    public setAppCacheEntries(appCacheEntries: string[]): void {\n        this.requestCache.put({ typeName: CACHE_SETTING, key: 'APP_CACHE_ENTRIES' }, { item: appCacheEntries });\n    }\n\n    /**\n     * Checkis if the given module is deferred module\n     * @param name name of the module\n     */\n    public deferred(name: string): Boolean {\n        return !!this.requestCache.getValue({ typeName: MODULE_DEFERRED_KEY, key: name });\n    }\n\n    public getResourceTextForPlaceholderPreview(): string {\n        // tslint:disable-next-line:no-any\n        const resourceItem = this.requestCache.get<any>({ typeName: MODULE_RESOURCES_KEY, key: 'PLACE-HOLDER-FOR-CONTAINER-PREVIEW' });\n        if (resourceItem && resourceItem.item && resourceItem.item.clickToConfigure) {\n            return resourceItem.item.clickToConfigure;\n        } else {\n            return 'Click here to configure';\n        }\n    }\n\n    /**\n     * Marks module as deferred\n     * @param name name of the module\n     */\n    public markModuleAsDeferred(name: string): void {\n        this.requestCache.put(\n            { typeName: MODULE_DEFERRED_KEY, key: name },\n            {\n                item: true\n            }\n        );\n    }\n\n    /**\n     * Inserts requested modules into cache on client side\n     * @param pageData page data object\n     * @param telemetry telemetry object\n     */\n    // tslint:disable-next-line:no-any\n    public async putRequestedModulesInCacheOnClient(pageData: any, telemetry: ITelemetry): Promise<void> {\n        if (isEmptyOrNullObject(pageData.requestCache) || isEmptyOrNullObject(pageData.requestCache.internalCache)) {\n            throw new Error(EXCEPTION_INITIALDATAFAIL);\n        }\n\n        for (const cacheType of Object.keys(pageData.requestCache.internalCache)) {\n            const cacheBasedOnType = pageData.requestCache.internalCache[cacheType];\n            if (!isEmptyOrNullObject(cacheBasedOnType)) {\n                for (const cachekey of Object.keys(cacheBasedOnType)) {\n                    const cacheItem = cacheBasedOnType[cachekey];\n\n                    // AsyncResults sent from server to client get serialized into basic JS objects,\n                    // They need to be \"rehydrated\" into actual AsyncResults to enable full functionality\n                    if (cacheItem.item && cacheItem.item._type && cacheItem.item._type === 'AsyncResult') {\n                        const metadata = cacheItem.item.metadata || {};\n                        if (cacheItem.item.status && cacheItem.item.status === 'SUCCESS') {\n                            cacheItem.item = AsyncResult.resolve(cacheItem.item.result);\n                        } else {\n                            cacheItem.item = AsyncResult.reject(cacheItem.item.error || 'Unable to parse data action');\n                        }\n                        cacheItem.item.metadata = metadata;\n                    }\n\n                    this.requestCache.put({ typeName: cacheType, key: cachekey }, { item: cacheItem.item });\n\n                    // Awaiting a rejected promise will throw, so we need to catch those errors.\n                    try {\n                        await cacheItem.item;\n                    } catch (e) {\n                        telemetry.debug(`Error while hyrdating cache item, Type: ${cacheBasedOnType}, Key: ${cachekey}`);\n                    }\n\n                    if (cacheType === MODULE_CACHE_KEY) {\n                        const moduleItem = <IModuleContract>cacheItem.item;\n                        this._moduleList.push({\n                            id: moduleItem.id,\n                            typeName: moduleItem.typeName,\n                            dataActions: moduleItem.dataActions || []\n                        });\n                    }\n                }\n            }\n        }\n    }\n\n    /**\n     * Populates data actions results from cache\n     * @param cacheObjectType entity type\n     * @param cacheKey cache key\n     */\n    // tslint:disable-next-line:no-any\n    private _populateDataActionResultFromCache(cacheObjectType: string, cacheKey: string): any {\n        const cachedValueBasedOnInput = this.requestCache.getValue<object>({ typeName: cacheObjectType, key: cacheKey });\n        if (!cachedValueBasedOnInput) {\n            return;\n        }\n\n        // Ref resolution for promises needs to be delayed until the value is available\n        if (isAsyncResult(cachedValueBasedOnInput)) {\n            return transaction(() => {\n                cachedValueBasedOnInput.then(promiseResult => {\n                    // Directly set the result because we want a synchronous change\n                    cachedValueBasedOnInput.result = this._resolveCacheRef(cacheObjectType, <object>promiseResult);\n                });\n                return cachedValueBasedOnInput;\n            });\n        }\n\n        return this._resolveCacheRef(cacheObjectType, cachedValueBasedOnInput);\n    }\n\n    /**\n     * Resolves cache reference for the given entity type\n     * @param cacheObjectType entity type that is cached\n     * @param cacheRefInfo cache ref key\n     */\n    // tslint:disable-next-line:no-any\n    private _resolveCacheRef(cacheObjectType: string, cacheRefInfo: object): any {\n        // tslint:disable:no-string-literal\n        if (typeof cacheRefInfo !== 'object' || cacheRefInfo['$ref'] !== true) {\n            return cacheRefInfo;\n        }\n        const result = cacheRefInfo['key']\n            .map(key => {\n                const value = this.requestCache.getValue({ typeName: cacheObjectType, key });\n                if (value) {\n                    return value;\n                }\n            })\n            .filter(Boolean);\n        return result && result.length > 0 ? (cacheRefInfo['isCollection'] ? result : result[0]) : null;\n    }\n\n    /**\n     * Inserts requested modules in cache to prepare the initialData that will be sent to client\n     * @param pageData pageData object with list of modules\n     * @param resourceManager resourceManager that contains the localized strings\n     */\n    private _putRequestedModulesInCacheOnServer(pageData: IPageResponse, resourceManager?: IResourceManager): void {\n        const isEditor = (this.requestContext.params && this.requestContext.params.isEditor) || false;\n        const themeName = this.requestContext.params?.theme;\n        for (let i = 0; i < pageData.slots.length; ++i) {\n            const moduleInstance = pageData.slots[i];\n            const moduleId = moduleInstance.id;\n            this._moduleList.push({\n                id: moduleInstance.id,\n                typeName: moduleInstance.typeName,\n                dataActions: moduleInstance.dataActions\n            });\n\n            this.requestCache.put(\n                { typeName: MODULE_CACHE_KEY, key: moduleId },\n                {\n                    item: { id: moduleInstance.id, typeName: moduleInstance.typeName }\n                }\n            );\n            this.requestCache.put({ typeName: MODULE_CONFIG_KEY, key: moduleId }, { item: moduleInstance.config });\n            this.requestCache.put({ typeName: MODULE_CONFIG_ERRORS_KEY, key: moduleId }, { item: moduleInstance.configErrors });\n            this.requestCache.put({ typeName: MODULE_DATA_KEY, key: moduleId }, { item: moduleInstance.data });\n            this.requestCache.put({ typeName: MODULE_ACTION_KEY, key: moduleId }, { item: moduleInstance.dataActions });\n            this.requestCache.put({ typeName: MSDYN365_WYSIWYG_DISABLED_PROPS, key: moduleId }, { item: [] });\n            this.requestCache.put({ typeName: MSDYN365_WYSIWYG_CANADDMODULE, key: moduleId }, { item: [] });\n\n            if (resourceManager && !isEditor) {\n                this.requestCache.put(\n                    { typeName: MODULE_RESOURCES_KEY, key: moduleInstance.typeName },\n                    { item: resourceManager.getModuleResources(moduleInstance.typeName, themeName, this.requestContext.locale) }\n                );\n            }\n        }\n        // In editor mode, put the resources for all modules for the current locale into the cache\n        if (isEditor && resourceManager && this.requestContext.features.enableAuthoringRemoveAndAddModule) {\n            // tslint:disable-next-line: no-any\n            const bindings = (<any>msdyn365Commerce).getAllModuleBinder();\n            bindings.forEach((moduleBinder: IModuleBinder) => {\n                this.requestCache.put(\n                    { typeName: MODULE_RESOURCES_KEY, key: moduleBinder.name },\n                    { item: resourceManager.getModuleResources(moduleBinder.name, themeName, this.requestContext.locale) }\n                );\n            });\n        }\n    }\n\n    /**\n     * Initializes theme modules list that need to be loaded on the client\n     */\n    private _initThemeModulesList(): void {\n        this._themeModulesList = [];\n\n        if (this.requestContext.params.theme) {\n            this._themeModulesList.push(this.requestContext.params.theme);\n            this._themeModulesList.push(getParentModuleName(this.requestContext.params.theme));\n        }\n    }\n}\n"]}