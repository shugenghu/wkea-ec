{"version":3,"file":"authoring-edit-helper.js","sourceRoot":"","sources":["../../../src/store/authoring-edit-helper.ts"],"names":[],"mappings":"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","sourcesContent":["/*!\n * Copyright (c) Microsoft Corporation.\n * All rights reserved. See LICENSE in the project root for license information.\n */\n\nimport { ICache } from '@msdyn365-commerce/cache-internal';\nimport { EditError, IDictionary, IModuleContract, PROPERTY_INIT } from '@msdyn365-commerce/core-internal';\nimport { get as _get } from 'lodash';\nimport { CLIENT_DATA_UPDATE_EVENT, MSDYN365_WYSIWYG_DISABLED_PROPS } from '../consts';\n\nconst MODULE_NAME_PATH = '__MODULE_NAME__';\n\nconst MODULE_TYPE_PATH = '__MODULE_TYPE__';\n\nconst PARENT_PROP_PATH = '__PARENT_PROP__';\n\nexport interface IDisabledProperties {\n    modules: IDictionary<string[]>;\n}\n\nexport const getWrappedProxyObject = (config: IDictionary<{}>, moduleName: string, typeName: string) => {\n    // tslint:disable-next-line:no-typeof-undefined\n    if (typeof window === 'undefined') {\n        return config;\n    }\n\n    return getProxyHandler(config, moduleName, typeName);\n};\n\n/**\n * Get parent module id\n */\nexport const disableChildModules = (parentModule: IModuleContract, requestCache: ICache) => {\n    const slotKeys = Object.keys(parentModule.modules || []);\n    for (let i = 0; i < slotKeys.length; ++i) {\n        const childModules: IModuleContract[] = parentModule.modules![slotKeys[i]];\n        for (let j = 0; j < childModules.length; ++j) {\n            requestCache.put({ typeName: MSDYN365_WYSIWYG_DISABLED_PROPS, key: childModules[j].id }, { item: ['*'] });\n            disableChildModules(childModules[j], requestCache);\n        }\n    }\n};\n\n/**\n * helper function to find module from page contract\n * @param moduleId module to be searched\n * @param pageRoot page root object\n */\nexport const findModule = (moduleId: string, pageRoot: IModuleContract): IModuleContract | undefined => {\n    if (pageRoot.id === moduleId) {\n        return pageRoot;\n    }\n\n    const slotKeys = Object.keys(pageRoot.modules || []);\n    for (let i = 0; i < slotKeys.length; ++i) {\n        const childModules: IModuleContract[] = pageRoot.modules![slotKeys[i]];\n        for (let j = 0; j < childModules.length; ++j) {\n            const res = findModule(moduleId, childModules[j]);\n            if (res) {\n                return res;\n            }\n        }\n    }\n\n    return undefined;\n};\n\n/**\n * Returns proxy object with get and set traps\n */\nconst getProxyHandler = (config: IDictionary<{}>, moduleName: string, moduleType: string): unknown => {\n    const handler: ProxyHandler<IDictionary<{}>> = {\n        get(target: IDictionary<{}>, key: string): IDictionary<{}> | string {\n            // store current module name on the proxy object\n            if (!target[MODULE_NAME_PATH]) {\n                target[MODULE_NAME_PATH] = moduleName;\n            }\n\n            if (!target[MODULE_TYPE_PATH]) {\n                target[MODULE_TYPE_PATH] = moduleType;\n            }\n\n            if (typeof target[key] === 'object' && target[key] !== null) {\n                // store current prop path as parent and return new proxy (for objects)\n                target[key][PARENT_PROP_PATH] = target[PARENT_PROP_PATH] ? `${target[PARENT_PROP_PATH]}.${key}` : key;\n                return new Proxy(target[key], handler);\n            } else {\n                return target[key];\n            }\n        },\n\n        // tslint:disable-next-line:no-any\n        set(target: IDictionary<{}>, key: string, newValue: any): boolean {\n            let disabledProperties: string[] = [];\n            const moduleId = target[MODULE_NAME_PATH];\n            const typeName: string = <string>target[MODULE_TYPE_PATH];\n\n            if (!moduleId || !typeName) {\n                return true;\n            }\n\n            let propertyPath = [key];\n\n            if (target[PARENT_PROP_PATH]) {\n                // @ts-ignore\n                const parentPath = target[PARENT_PROP_PATH].split('.');\n                propertyPath = key === '$type' ? parentPath : parentPath.concat([key]);\n            }\n\n            // Check for disabled properties only during component initialization\n            // MSDYN365_WYSIWYG_INIT is triggered on component mount and whenever\n            // there is a change in component props (componentWillReceiveProps)\n            if (newValue === '__MSDYN365_WYSIWYG_INIT__') {\n                // @ts-ignore\n                disabledProperties = window._msdyn365.authoringHelper.getDisabledProperties(moduleId);\n\n                if ((disabledProperties || []).length > 0) {\n                    // if the value is '*' all properties are disabled\n                    if (disabledProperties.length === 1 && disabledProperties[0] === '*') {\n                        throw new EditError('cannot set disabled property');\n                    }\n\n                    const fullPath = propertyPath.join('.');\n                    // properties disabled in template are disabled at root property path - and will only contain part of the updated property's full path\n                    // e.g. disabledProperties = ['heading','links'], updatedProperty = 'heading.text' and 'links.1.linkText' are disabled\n                    // we check for fullPath.startsWith(`${p}.`) to handle cases where 'heading' prop is disabled and edited property is 'headingLink'\n                    if (disabledProperties.filter(p => fullPath === p || fullPath.startsWith(`${p}.`)).length > 0) {\n                        throw new EditError('cannot set disabled property');\n                    }\n                }\n\n                // for events that are called as part of initialization, do no set any value\n                // as the initialization is to check if a property is disabled\n                const requiredProperties: string[] = getRequiredProperties(typeName) || [];\n                throw new EditError('cannot set disabled property', PROPERTY_INIT, requiredProperties.includes(propertyPath.join('.')));\n            }\n\n            // If we reached here, it means component is not disabled, lets just\n            // notify the site builder\n            document.dispatchEvent(\n                new CustomEvent(CLIENT_DATA_UPDATE_EVENT, {\n                    detail: { moduleId, value: newValue, property: propertyPath }\n                })\n            );\n            return true;\n        }\n    };\n\n    return new Proxy(config, handler);\n};\n\n/**\n * helper method to get required properties\n */\nconst getRequiredProperties = (typeName: string) => {\n    if (!(typeof window === undefined)) {\n        // @ts-ignore\n        const authoringHelper = window._msdyn365.authoringHelper;\n        return authoringHelper && authoringHelper.renderingHelper && authoringHelper.renderingHelper.moduleRequiredProperties(typeName);\n    }\n\n    return [];\n};\n"]}