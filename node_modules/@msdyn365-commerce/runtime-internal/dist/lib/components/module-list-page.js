/*!
 * Copyright (c) Microsoft Corporation.
 * All rights reserved. See LICENSE in the project root for license information.
 */
export const moduleTypeToFriendlyName = (moduleType) => {
    switch (moduleType) {
        case 'htmlHeadTagsModule': {
            return 'HTML Head';
        }
        case 'scriptModule': {
            return 'Script';
        }
        case 'containerModule': {
            return 'Container';
        }
        case 'contentModule': {
            return 'Content';
        }
        case 'appModule': {
            return 'App';
        }
        case 'pageModule': {
            return 'Page';
        }
        default: {
            return 'Uncategorized';
        }
    }
};
export const generateModueListForAType = (moduleList, moduleType) => {
    moduleList = moduleList.sort((a, b) => a.name.localeCompare(b.name));
    let mappedListHtml;
    if (moduleType === 'contentModule' || moduleType === 'uncategorizedModules') {
        mappedListHtml = moduleList.map(moduleDetails => `<li style="line-height: 1.5"><a href="${moduleDetails.mockUrl}">${moduleDetails.name}</a></li>`);
    }
    else {
        mappedListHtml = moduleList.map(moduleDetails => `<li style="line-height: 1.5">${moduleDetails.name}</li>`);
    }
    return mappedListHtml.join('');
};
/**
 * Renders a simple web page with a list of registered content modules
 * taken from DAPI. Each module links to a view with its default mock
 *
 * @param moduleList The list of registered content modules
 */
export const moduleListPage = (moduleList) => {
    let moduleListHtml = '';
    let totalModuleCount = 0;
    Object.keys(moduleList).forEach((moduleType) => {
        const modulesForType = moduleList[moduleType];
        if (modulesForType) {
            moduleListHtml += `<h2>${moduleTypeToFriendlyName(moduleType)} Module${modulesForType.length !== 1 ? 's' : ''}</h2>`;
            moduleListHtml += `<ul style="font-size: 1.5rem">
                ${generateModueListForAType(modulesForType, moduleType)}
            </ul>`;
            totalModuleCount += modulesForType.length;
        }
    });
    return `<!DOCTYPE html>
    <html>
        <head>
            <meta http-equiv="X-UA-Compatible" content="IE=edge,chrome=1" />
            <title>Installed Modules </title>
        </head>
        <body>
            <h1>List of installed modules (${totalModuleCount} module${totalModuleCount !== 1 ? 's' : ''} found)</h1>
            <p style="font-size: 1.25rem">If available, click on a module to see its preview</p>
            ${moduleListHtml}
        </body>
    </html>`;
};
//# sourceMappingURL=module-list-page.js.map