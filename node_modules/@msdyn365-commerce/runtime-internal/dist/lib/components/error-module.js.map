{"version":3,"file":"error-module.js","sourceRoot":"","sources":["../../../src/components/error-module.tsx"],"names":[],"mappings":"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","sourcesContent":["/*!\n * Copyright (c) Microsoft Corporation.\n * All rights reserved. See LICENSE in the project root for license information.\n */\nimport { IDictionary, IModule, PlaceholderForContainerPreviewComponent } from '@msdyn365-commerce/core-internal';\nimport { EXCEPTION_ERROR_CLIENT_BOUNDARY, InternalTelemetry, LogLevel } from '@msdyn365-commerce/telemetry-internal';\nimport { get as _get } from 'lodash';\nimport React, { useMemo } from 'react';\nimport { MODULE_CONFIG_ERRORS_KEY } from '../consts';\nimport { renderView } from './render-view';\nimport { TSafeRenderModuleProps, TSafeRenderModuleState } from './safe-render-module';\n\ntype ErrorType = 'empty' | 'unregistered' | 'error';\n\ninterface IErrorModuleProps extends IModule {\n    id: string;\n    errorType: ErrorType;\n    error: Error;\n    message?: string;\n}\n\nconst getStandardErrorModuleMarkup = (props: IErrorModuleProps) => {\n    return (\n        <div className='error-module card mb-3' id={props.id} {...props.renderModuleAttributes(props)}>\n            <div className='card-header text-white bg-danger'>{props.id}' threw exception</div>\n            <div className='card-body'>\n                <p className='card-text'>{props.error && props.error.toString()}</p>\n                <p className='card-text'>{props.message}</p>\n            </div>\n        </div>\n    );\n};\n\n/**\n * The error module\n */\nexport const ErrorModule: React.SFC<IErrorModuleProps> = (props: IErrorModuleProps) => {\n    const params = _get(props, 'context.request.params', {});\n    const { isDebug } = params;\n    return isDebug ? useMemo(() => getStandardErrorModuleMarkup(props), [props]) : null;\n};\n\n// tslint:disable: no-any\nexport const renderErrorOrPlaceHolderModules = (\n    err: Error,\n    internalTelemetry: InternalTelemetry,\n    mappedProps: any,\n    state: TSafeRenderModuleState,\n    props: TSafeRenderModuleProps,\n    isEditor: boolean,\n    renderModuleAttributes: (props: { [x: string]: any }) => IDictionary<string>\n): JSX.Element | undefined => {\n    if (!isEditor) {\n        internalTelemetry.log(LogLevel.Error, EXCEPTION_ERROR_CLIENT_BOUNDARY, { exception: err });\n        return (\n            <ErrorModule\n                {...mappedProps}\n                errorType={state.error ? 'error' : 'empty'}\n                error={err}\n                message={state.info && state.info.componentStack}\n                renderModuleAttributes={renderModuleAttributes}\n                renderView={renderView}\n            />\n        );\n    }\n    /* The following logic helps us retry rendering the component if it previously failed in editor scenario\n           There are two cases where we should render the placeholder instead of trying to render the component when authoring\n\n            1. If error state is set because the module threw an error from rendering.\n            In this case the module will have an entry in the cache for errors that was set in componentShouldUpdate.\n            When a module is ready to retry rendering, clearing it's MODULE_CONFIG_ERRORS_KEY entry will force a retry.\n            Should the component fail to render again, the state and cache entry will be re-updated with error(s)\n\n            2. If the module has known config errors, then we should show the placeholder div\n\n        */\n    let moduleError = props.store.requestCache.get({ typeName: MODULE_CONFIG_ERRORS_KEY, key: props.id });\n    if (state.error && moduleError.item && moduleError.item.length > 0) {\n        moduleError = [{ property: props.id, message: err.message }];\n    } else if (mappedProps.configErrors && mappedProps.configErrors.length > 0) {\n        moduleError = mappedProps.configErrors;\n    }\n    // In an editor scenario, if add/remove module without server refresh feature is enabled\n    // SDK will have to place the placeholder module instead of OneRF\n    if (\n        isEditor &&\n        moduleError &&\n        moduleError.length > 0 &&\n        _get(props, ['context', 'request', 'features', 'enableAuthoringRemoveAndAddModule'], false)\n    ) {\n        // error module doesnt render 'click here to configure' placeholder module anymore\n        // an empty div with module markers data-i attributes is rendered instead\n        const dataInfo = [`id:${mappedProps.id}`];\n        mappedProps.slotId && dataInfo.push(`s:${mappedProps.slotId}`);\n        mappedProps.parentId && dataInfo.push(`p:${mappedProps.parentId}`);\n        mappedProps.typeName && dataInfo.push(`t:${mappedProps.typeName}`);\n        return <div id={`placeholder_${props.id}`} data-i={`{${dataInfo.join(',')}}`} />;\n    }\n    return undefined;\n};\n"]}