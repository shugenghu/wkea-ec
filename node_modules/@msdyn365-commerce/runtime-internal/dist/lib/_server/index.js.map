{"version":3,"file":"index.js","sourceRoot":"","sources":["../../../src/_server/index.ts"],"names":[],"mappings":"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","sourcesContent":["/*!\n * Copyright (c) Microsoft Corporation.\n * All rights reserved. See LICENSE in the project root for license information.\n */\n\nimport {\n    IAny,\n    IDictionary,\n    IGeneric,\n    IPageConfig,\n    IPageResponse,\n    IRequestContext,\n    isEmptyOrNullObject\n} from '@msdyn365-commerce/core-internal';\nimport { EXCEPTION_INVALID_URL, LogLevel } from '@msdyn365-commerce/telemetry-internal';\nimport { TelemetryClient } from '@msdyn365-commerce/telemetry-internal/dist/lib/server';\nimport { getRCSUversion } from '@msdyn365-commerce/utilities-internal';\nimport axios from 'axios';\nimport * as bodyParser from 'body-parser';\nimport compression from 'compression';\nimport cookieSession from 'cookie-session';\nimport express, { Express, NextFunction, Request, Response } from 'express';\nimport { httpsOverHttp } from 'tunnel';\nimport url from 'url';\nimport { getMockDataBasedOnRequestQueryString, getV3mockPageJson } from '../mock/mock-helper';\nimport keystonePaths from '../paths';\nimport { safeRoute } from '../utils/helpers';\nimport {\n    detectProxy,\n    getCheckoutRoute,\n    getRequestUrl,\n    KEYSTONE_ENVIRONMENT,\n    loadFeatureFlags,\n    registerAttributeRenderers,\n    renderPage,\n    resolveRouteInformation,\n    sanitizeUrlForLogging,\n    setCorsHeaders,\n    setResponseHeaders,\n    setTelemetryObject,\n    validateRouteAndChannelConfig\n} from '../utils/platform-utils';\nimport { HttpException } from './error';\nimport {\n    RSRequestInterceptor,\n    RSRequestInterceptorErrorHandler,\n    RSResponseInterceptor,\n    RSResponseInterceptorErrorHandler\n} from './inteceptors/rs-logging-interceptor';\nimport { requestTimeout } from './middleware/route-timeout';\nimport { requestRouteTimer } from './middleware/route-timers';\nimport {\n    getApiSettingsFromEnv,\n    getBodyConfig,\n    getDefaultRequestContext,\n    mapRequestContextWithRenderingContext,\n    mergeSwtichFromPlatformSettingsWithFeatureSwitch\n} from './parse-request';\nimport { preProcessRequest, serverExceptionParser } from './request-routers';\nimport apiRouter from './request-routers/api-router';\nimport experimentationRouter from './request-routers/experimentation-router';\nimport healthRouter from './request-routers/health-router';\nimport sdkRouter from './request-routers/sdk-router';\nimport staticsRouter, { parseHashedStaticsRequest } from './request-routers/statics-router';\nimport { HASHED_STATICS_PREFIX } from './statics-pipeline/statics-helpers';\nimport PageContractApiService from './temp-page-contract-api-service';\n\n// store previous request context of previous request\n// to be used in the api-router during local development\nexport let previousRequestContext = {};\nconst computerName = process.env.COMPUTERNAME;\nlet rcsuVersion = process.env.MSDyn365Commerce_RCSUVERSION;\nconsole.log(computerName);\n\nconst environment = KEYSTONE_ENVIRONMENT;\n\nconsole.log(JSON.stringify(environment));\nconsole.log(JSON.stringify(keystonePaths));\n\n// In debug mode, add the proxy debug interceptor for all HTTP Requests\nif (process.env.NODE_ENV === 'development') {\n    axios.interceptors.request.use(config => {\n        // Only use the interceptor when debug flag is enabled\n        if (process.env.NODE_USE_DEBUG_PROXY === '1') {\n            config.httpsAgent = httpsOverHttp({\n                proxy: {\n                    host: '127.0.0.1',\n                    port: 8888,\n                    headers: {}\n                }\n            });\n        }\n\n        return config;\n    });\n}\n\n// TODO: move these to server-initialization\naxios.interceptors.request.use(RSRequestInterceptor, RSRequestInterceptorErrorHandler);\naxios.interceptors.response.use(RSResponseInterceptor, RSResponseInterceptorErrorHandler);\n\n// tslint:disable-next-line:max-func-body-length\nexport function appFunc(\n    { clientStats }: { clientStats: {} },\n    env: IDictionary<string>,\n    options: IGeneric<IAny>,\n    appInsightsTelemetryClient: TelemetryClient\n): Express {\n    const PUBLIC_DIR = process.env.PUBLIC_DIR || 'build/public';\n    const server = express();\n    const sdkRouterInstance = sdkRouter(server);\n    const staticsRouterInstance = staticsRouter(PUBLIC_DIR, clientStats);\n    const healthRouterInstance = healthRouter();\n    const experimentationRouterInstance = experimentationRouter();\n    const apiRouterInstance = apiRouter();\n    server\n        .use(requestRouteTimer)\n        .use(\n            cookieSession({\n                name: 'msdyn365c_aad',\n                signed: false,\n                maxAge: 3600000 // 1 hour in ms, the lifespan of an aad token\n            })\n        )\n        .disable('x-powered-by')\n        .disable('etag')\n        .use(bodyParser.urlencoded({ limit: '50mb', extended: false }))\n        .use(bodyParser.json({ limit: '50mb' }))\n        .use(express.urlencoded({ extended: true }))\n        .use(detectProxy)\n        .use(compression())\n        .use(loadFeatureFlags)\n        .use(setResponseHeaders)\n        .use(requestTimeout)\n        .use(\n            express.static(PUBLIC_DIR, {\n                // disable etag\n                etag: false,\n                // disable special handling of ../ and ./\n                dotfiles: 'deny',\n                // don't provide generated directory listings\n                index: false,\n                // max cache timeout of a week\n                maxAge: process.env.NODE_ENV === 'development' ? 1 : 604800000\n            })\n        )\n        .use(setTelemetryObject(appInsightsTelemetryClient))\n        .use('/_sdk', sdkRouterInstance)\n        .use(experimentationRouterInstance)\n        .use(apiRouterInstance)\n        .use('/version', (req: Request, res: Response) => {\n            res.sendFile(keystonePaths.KEYSTONE_APP_PACKAGE_VERSION);\n        })\n        .use('/sockjs-node', (req: Request, res: Response) => {\n            if (process.env.NODE_ENV === 'development' && req.query.t) {\n                // This is a workaround for dealing with sockjs requests to the wrong port\n                // In local dev scenario, sock js requests should only be made to the dev server port\n                // e.g. localhost:4001/sockjs-node/info?t=1587868046907 in most cases. However for some reason a sockjs request is made the http server as well\n                // causing us to look up the server page (e.g. int2.fabrikam.com/sock-js) which is unnecessary and leads to console spam\n                //\n                // This change here will not impact HMR as changes are observed on the dev port not the http port. All this does is add a\n                // workaround that will send a 404 back immediately so it doesn't go through our request flow and print out a bunch of errors in the console\n                // TODO: Find out why something is sending request to http server\n                // See https://github.com/webpack/webpack-dev-server/issues/1802#issuecomment-484372015 for a discussion of the issue. Apparently issue still\n                // exists in webpack dev server v3.8.1\n                res.status(404).send();\n            }\n        })\n        /**\n         * Health check endpoints\n         */\n        .use(healthRouterInstance)\n        .use(\n            [\n                // statics route from 1rf with submission id\n                `/_scnr/${process.env.SUBMISSIONID || 'statics'}`,\n                // statics route from 1rf for hashed js statics\n                `/_scnr/${process.env.SUBMISSIONID || 'statics'}/j`,\n                // (legacy) route from 1rf without submission id\n                `/_scnr`,\n                // local with submission id\n                `/${process.env.SUBMISSIONID || 'statics'}`,\n                // local hashed js statics\n                `/j`\n            ],\n            staticsRouterInstance\n        )\n        /**\n         * localhost serving of assets\n         */\n        .get(\n            [\n                // non-local route with submission ID\n                `/${HASHED_STATICS_PREFIX}${process.env.SUBMISSIONID}/:hashedUrl`,\n                // local routes without submission id\n                `/${HASHED_STATICS_PREFIX}:hashedUrl`\n            ],\n            safeRoute(async (req: Request, res: Response, next: NextFunction) => {\n                return parseHashedStaticsRequest(req, res, next, { clientStats, PUBLIC_DIR }, res.locals.telemetry);\n            })\n        )\n        /**\n         * Local development auth redirect route.\n         *  If the request is from AAD capture the auth information in the session and redirect to the requested\n         *  url as a get.\n         */\n        .post('*', (req: Request, res: Response, next: NextFunction) => {\n            if (req.body && req.body.id_token) {\n                // @ts-ignore\n                req.session && (req.session.id_token = req.body.id_token);\n                return res.redirect(\n                    url.format({\n                        protocol: req.protocol,\n                        host: req.get('host'),\n                        pathname: req.originalUrl\n                    })\n                );\n            }\n            next();\n        })\n        /**\n         * Page Rendering Routes\n         */\n        .use((req: Request, res: Response, next: NextFunction) => {\n            res.locals.requestContext = preProcessRequest(req, res, process.env.COMPUTERNAME, res.locals.telemetry);\n            if (process.env.NODE_ENV === 'development') {\n                previousRequestContext = res.locals.requestContext;\n            }\n            next();\n        })\n        /**\n         * Create mock PageResponse for Modules routes\n         */\n        .get(\n            '/modules',\n            safeRoute(async (req: Request, res: Response, next: NextFunction) => {\n                const content = await getMockDataBasedOnRequestQueryString(req.query, res.locals.telemetry);\n                res.locals.isMockRequest = true;\n                res.locals.pageResponse = content;\n\n                const context: IRequestContext = res.locals.requestContext;\n                context.locale = req.query.locale || context.locale;\n                if (!context.locale) {\n                    context.locale = 'en-us';\n                }\n\n                next();\n            })\n        )\n        .get(\n            '/page/:themeName/:pageType/:layout',\n            safeRoute(async (req: Request, res: Response, next: NextFunction) => {\n                const context: IRequestContext = res.locals.requestContext;\n                context.locale = req.query.locale || context.locale;\n\n                if (req.params) {\n                    res.locals.pageResponse = await PageContractApiService.getThemeLayout(\n                        req.params.themeName,\n                        req.params.pageType,\n                        req.params.layout,\n                        res.locals.telemetry\n                    );\n                }\n                return renderPage(req, res, next, { clientStats });\n            })\n        )\n        .get(\n            '/segment/:themeName/:segmentName',\n            safeRoute(async (req: Request, res: Response, next: NextFunction) => {\n                const context: IRequestContext = res.locals.requestContext;\n                context.locale = req.query.locale || context.locale;\n\n                if (req.params) {\n                    const segmentJson = await PageContractApiService.getThemeSegment(\n                        req.params.themeName,\n                        req.params.segmentName,\n                        res.locals.telemetry\n                    );\n                    // Get the default mock page json\n                    const pageJsonV3: IPageResponse = getV3mockPageJson();\n                    // @ts-ignore\n                    pageJsonV3.pageRoot.modules.body[0].modules.primary[0].modules.content.push(segmentJson);\n                    res.locals.pageResponse = pageJsonV3;\n                }\n                next();\n            })\n        )\n        /**\n         * Get Page Response for rendering\n         */\n        .use(\n            // tslint:disable-next-line:cyclomatic-complexity\n            safeRoute(async (req: Request, res: Response, next: NextFunction) => {\n                const serverHost =\n                    (req.query && req.query.server && req.query.server) ||\n                    process.env.MSDyn365_HOST ||\n                    process.env.SERVER_HOST ||\n                    undefined;\n\n                // For POST /render routes, res.locals.pageResponse will already be set\n                if (isEmptyOrNullObject(res.locals.pageResponse) && serverHost) {\n                    await PageContractApiService.handleGetPageResponse(req, res, serverHost);\n                }\n                const requestUrl = getRequestUrl(res);\n                const routeInfo = resolveRouteInformation(res, requestUrl);\n                const checkoutRoute = getCheckoutRoute(res);\n\n                // If the RCSU version environment variable is not defined,\n                // set it with API settings from the first request and save it for future requests\n                if (!rcsuVersion || rcsuVersion === '--') {\n                    if (\n                        res.locals.pageResponse &&\n                        res.locals.pageResponse.renderingContext &&\n                        res.locals.pageResponse.renderingContext.apiSettings?.baseUrl\n                    ) {\n                        rcsuVersion = await getRCSUversion(res.locals.pageResponse.renderingContext.apiSettings.baseUrl);\n                    }\n                }\n\n                if (routeInfo) {\n                    res.locals.telemetry.log(\n                        LogLevel.Information,\n                        'Processing request for {URL} {route} by process {processId} with {SDKVersion}, {SSKVersion}, {RetailProxy} {RCSUVersion} {CheckoutRoute}',\n                        {\n                            values: [\n                                sanitizeUrlForLogging(requestUrl),\n                                routeInfo || '',\n                                process.pid,\n                                process.env.MSDyn365Commerce_SDK_VERSION,\n                                process.env.MSDyn365Commerce_SSK_VERSION,\n                                process.env.MSDyn365Commerce_RSVERSION,\n                                rcsuVersion,\n                                checkoutRoute\n                            ]\n                        }\n                    );\n                }\n\n                // Re-initialize request context against rendering context\n                res.locals.requestContext = mapRequestContextWithRenderingContext(\n                    req,\n                    res.locals.requestContext,\n                    res.locals.pageResponse.renderingContext,\n                    res.locals.pageResponse.appContext,\n                    <IPageConfig>getBodyConfig(res.locals.pageResponse)\n                );\n\n                logExpVariantsInfo(res.locals);\n\n                // Set Feature switches if they could not be set above\n                if (!res.locals.features || (isEmptyOrNullObject(res.locals.features) && res.locals.pageResponse.renderingContext)) {\n                    res.locals.requestContext.features = res.locals.pageResponse.renderingContext.features || {};\n                }\n\n                res.locals.requestContext = mergeSwtichFromPlatformSettingsWithFeatureSwitch(res.locals.requestContext);\n                registerAttributeRenderers(res.locals.telemetry, res.locals.moduleTelemetry, res.locals.requestContext);\n                next();\n            })\n        )\n        .use(setCorsHeaders)\n        /**\n         * Validate Route Middleware\n         */\n        .use(validateRouteAndChannelConfig)\n        .get(\n            '/modules',\n            safeRoute(async (req: Request, res: Response, next: NextFunction) => {\n                return renderPage(req, res, next, { clientStats });\n            })\n        )\n        .get(\n            '*',\n            safeRoute(async (req: Request, res: Response, next: NextFunction) => {\n                // For invalid page, pageResponse is not set\n                if (isEmptyOrNullObject(res.locals.pageResponse)) {\n                    throw new HttpException(404, EXCEPTION_INVALID_URL);\n                }\n\n                return renderPage(req, res, next, { clientStats });\n            })\n        )\n        .post(\n            '/render',\n            safeRoute(async (req: Request, res: Response, next: NextFunction) => {\n                return renderPage(req, res, next, { clientStats });\n            })\n        )\n        .use(serverExceptionParser);\n    return server;\n}\n\n// tslint:disable-next-line:no-any\nconst logExpVariantsInfo = (locals: any) => {\n    if (locals.requestContext.experiments && locals.requestContext.experiments.activeExperiments) {\n        const activeExperiments = locals.requestContext.experiments.activeExperiments;\n        if (activeExperiments.length > 0) {\n            const variantsInfo = JSON.stringify(activeExperiments);\n            locals.telemetry.log(LogLevel.Information, `Exp variants: ${variantsInfo}`);\n        } else {\n            locals.telemetry.log(LogLevel.Information, `No exp variants found.`);\n        }\n    }\n};\n"]}