/*!
 * Copyright (c) Microsoft Corporation.
 * All rights reserved. See LICENSE in the project root for license information.
 */
import msdyn365Commerce, { buildMockTelemetry } from '@msdyn365-commerce/core';
import * as fs from 'fs-extra';
import 'jest';
import * as path from 'path';
import { getDataJsonAndParse, getModuleDefinitionApiFile, getModuleDefinitions } from '../Definition/moduleDefinition';
describe('Module definition', () => {
    it('skip data definition read if path is empty', async () => {
        // @ts-ignore
        const mb = {
            parentDefinitionPath: '',
            definitionPath: path.resolve('src/_server/__mocks__/empty-module.definition.json')
        };
        // @ts-ignore
        const telemetry = {
            exception: jest.fn(),
            log: jest.fn()
        };
        await getDataJsonAndParse(mb, telemetry);
        expect(telemetry.log).not.toHaveBeenCalled();
    });
    it('should transform DAPI response css type to string and include default class name property if not provided', async () => {
        // @ts-ignore
        // tslint:disable: no-any
        msdyn365Commerce.moduleBinder = jest.fn().mockReturnValue(true);
        // @ts-ignore
        msdyn365Commerce.getAllModuleBinder = jest.fn().mockReturnValue(true);
        // @ts-ignore
        msdyn365Commerce._platformSettings = {};
        // @ts-ignore
        msdyn365Commerce._platformSettings.disableDAPIOptimizations = true;
        // @ts-ignore
        getModuleDefinitionApiFile = jest
            .fn()
            .mockResolvedValue([fs.readJSONSync(path.resolve(process.cwd(), 'src/_server/__mocks__/module.definition.json'))]);
        const result = await getModuleDefinitions('sample-config', buildMockTelemetry());
        expect(result).toMatchSnapshot();
    });
});
//# sourceMappingURL=module-definition.test.js.map