{"version":3,"file":"parse-request.test.js","sourceRoot":"","sources":["../../../../src/_server/__tests__/parse-request.test.ts"],"names":[],"mappings":"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","sourcesContent":["/*!\n * Copyright (c) Microsoft Corporation.\n * All rights reserved. See LICENSE in the project root for license information.\n */\n\nimport msdyn365Commerce, { IRenderingContext } from '@msdyn365-commerce/core-internal';\nimport * as fs from 'fs';\nimport * as glob from 'glob';\nimport 'jest';\nimport { Request } from 'jest-express/lib/request';\nimport * as path from 'path';\nimport { getHeaders, mapRequestContextWithRenderingContext, parseRequest } from '../parse-request';\n\ndescribe('request parsing', () => {\n    const mockRequests: Request[] = [];\n    const mockRenderingContexts: IRenderingContext[] = [];\n\n    beforeAll(() => {\n        // arrange\n        // setup all request mocks\n        let files = glob.sync(path.resolve(__dirname, '../__mocks__/request-context.*.json'));\n        files.forEach(filePath => {\n            const mockRequest = new Request('http://localhost/test');\n            const mockFile = JSON.parse(fs.readFileSync(filePath).toString());\n            mockRequest.setQuery(mockFile.query);\n            mockRequest.setPath(mockFile.path);\n            mockRequests.push(mockRequest);\n        });\n\n        // load rendering context mocks\n        files = glob.sync(path.resolve(__dirname, '../__mocks__/rendering-context.*.json'));\n        files.forEach(filePath => {\n            const mockRenderingContext = JSON.parse(fs.readFileSync(filePath).toString());\n            mockRenderingContexts.push(mockRenderingContext);\n        });\n\n        // validate that we read mocks successfully -- subsequent changes to tests should update\n        expect(mockRequests.length).toBe(2);\n        expect(mockRenderingContexts.length).toBe(4);\n\n        jest.resetModules();\n        jest.mock('@msdyn365-commerce/core-internal', () => {\n            return {\n                msdyn365Commerce: {\n                    moduleBinder: name => {\n                        // blank\n                    }\n                }\n            };\n        });\n\n        // Used to test retrival of api settings from .env file if not provided by page mock in\n        // renderingContext\n        process.env.MSDyn365Commerce_BASEURL = 'https://rushec-tie-topaz4a3a309f5438ce85ret.cloudax.test.dynamics.com/';\n        process.env.MSDyn365Commerce_CHANNELID = '5637145359';\n        process.env.MSDyn365Commerce_CATALOGID = '0';\n        process.env.MSDyn365Commerce_OUN = '077';\n        process.env.MSDyn365Commerce_BASEIMAGEURL =\n            'https://img-ppe-cms-mr-microsoft-com.akamaized.net/cms/api/fabrikam/imageFileData/search?fileName=/';\n    });\n    it('can parse page requests correctly', () => {\n        // act\n        mockRequests.forEach((req, index) => {\n            // @ts-ignore: it's not a real request object\n            const result = parseRequest(mockRequests[0]);\n            // assert\n            expect(result).toMatchSnapshot(`request #${index}`);\n        });\n    });\n    it('can parse rendering contexts', () => {\n        // arrange -- dependency on rendering context is by design\n        [true, false].forEach(hasAppModule => {\n            // @ts-ignore: set fake function for module binder\n            msdyn365Commerce.moduleBinder = jest.fn(name => {\n                return hasAppModule;\n            });\n\n            console.log(`${mockRequests[1].protocol}://${mockRequests[1].get('host')}${mockRequests[1].originalUrl}`);\n            // @ts-ignore: it's not a real request object\n            const requestContext = parseRequest(mockRequests[1]);\n\n            // act\n            mockRenderingContexts.forEach((renderingContext, index) => {\n                // @ts-ignore: it's not a real request object\n                const result = mapRequestContextWithRenderingContext(mockRequests[0], requestContext, renderingContext);\n\n                // assert\n                expect(result).toMatchSnapshot(`request ${hasAppModule} ${index}`);\n            });\n\n            jest.unmock('@msdyn365-commerce/core-internal');\n            // expect N assertions where N = num of rendering context mocks\n        });\n        expect.assertions(mockRenderingContexts.length * 2);\n    });\n\n    describe('getHeaders', () => {\n        it('Should return headers', () => {\n            const req = {\n                headers: {\n                    'x-custom-header': 'hello'\n                }\n            };\n            // @ts-ignore\n            const headers = getHeaders(req);\n            expect(headers).toMatchObject({\n                'x-custom-header': 'hello'\n            });\n        });\n        it('Should mask reserved headers', () => {\n            const req = {\n                headers: {\n                    Authorization: 'Bearer super-secret-token'\n                }\n            };\n            // @ts-ignore\n            const headers = getHeaders(req);\n            expect(headers).toMatchObject({});\n        });\n    });\n\n    it('Should omit headers and cookies from serialized request context', () => {\n        // @ts-ignore: it's not a real request object\n        const serverContext = parseRequest(mockRequests[0]);\n        expect(serverContext).toHaveProperty('headers');\n\n        const clientContext = JSON.parse(JSON.stringify(serverContext));\n        expect(clientContext).not.toHaveProperty('cookies');\n        expect(clientContext).not.toHaveProperty('headers');\n    });\n    afterAll(() => {\n        jest.resetAllMocks();\n    });\n});\n"]}