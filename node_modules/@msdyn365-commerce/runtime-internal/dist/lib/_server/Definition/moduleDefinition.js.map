{"version":3,"file":"moduleDefinition.js","sourceRoot":"","sources":["../../../../src/_server/Definition/moduleDefinition.ts"],"names":[],"mappings":"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","sourcesContent":["/*!\n * Copyright (c) Microsoft Corporation.\n * All rights reserved. See LICENSE in the project root for license information.\n */\n\n// tslint:disable:typedef\n// tslint:disable:no-string-literal\nimport {\n    isEmptyOrNullObject,\n    isObject,\n    resolveRef,\n    safeFileExists,\n    safeGetAllFilesPath,\n    safeGetAllFilesPathSync,\n    safeReadJson,\n    safeWriteJson\n} from '@msdyn365-commerce/utilities-internal';\nimport * as path from 'path';\n\nimport { IPlatformSettings, IThemeModule, msdyn365Commerce } from '@msdyn365-commerce/core-internal';\nimport {\n    EVENT_DAPI_GETALLMODULES_START,\n    EVENT_DAPI_GETALLMODULES_STOP,\n    IInternalTelemetry,\n    LogLevel,\n    METRIC_DAPI_FILTER,\n    METRIC_DAPI_NO_RESULT\n} from '@msdyn365-commerce/telemetry-internal';\nimport { merge as _merge } from 'lodash';\nimport { IModuleBinder, IMSDyn365CommerceExtension } from '../../app-initialization/models';\nimport keystonePaths from '../../paths';\nimport { getModuleBinder, getModuleName, isSSK2App } from '../../utils/helpers';\nimport { getAvailableThemes } from './stylesDefinition';\n\nexport const enum THEME_MODULE {\n    TYPE = 'themeModule',\n    PAGES = 'pages',\n    LAYOUTS = 'layouts',\n    SEGMENTS = 'segments',\n    STYLES = 'styles',\n    STYLE_PRESET_DEFINITION_FILE = '.definition.scss.json',\n    STYLE_PRESET_INSTANCE_FILE = '.scss.json',\n    DEF_EXTENSIONS = 'definition-extensions',\n    VIEWS = 'views',\n    DEF_EXT_FILE = '.definition.ext.json',\n    SETTINGS_FILE = '.theme.settings.json',\n    PAGE_FILE = '.page.json',\n    SEGMENT_FILE = '.segment.json',\n    DEFINITION_FILE = '.definition.json'\n}\n\nexport const enum DefinitionType {\n    Modules = 'modules',\n    ModuleList = 'modulelist',\n    /**\n     * Contains themes & styles definitions\n     */\n    Styles = 'styles',\n    AppSettings = 'appsettings',\n    ImageSettings = 'imagesettings',\n    ThemeSettings = 'themesettings',\n    Themes = 'themes',\n    ThemesList = 'themeslist',\n    Resources = 'resources',\n    Experiments = 'experiments',\n    Previews = 'previews'\n}\n\nconst defaults: { page: Object | undefined } = {\n    page: undefined\n};\n\nconst classNameDefnProperty = {\n    friendlyName: 'Default CSS Class Name(s)',\n    description: 'Provides a way to set configurable default css class(es) to apply to your module.',\n    type: 'css'\n};\n\nconst globallyFailedModules: Object[] = [];\nconst getOriginalModuleDefs = (moduleName: string) => {\n    const bindings = (<IMSDyn365CommerceExtension>(<unknown>msdyn365Commerce)).bindings;\n\n    if (bindings.dapi && bindings.dapi.modules) {\n        return bindings.dapi.modules[moduleName];\n    }\n\n    return {};\n};\n\nexport function getFailedModulesList() {\n    return globallyFailedModules;\n}\n\n/**\n * route [/dapi/modulelist] to return list of all register modules.\n */\n// tslint:disable:no-any\nexport async function getModulesList(): Promise<string[]> {\n    const bindings = (<any>msdyn365Commerce).getAllModuleBinder();\n    if (!bindings || bindings.length === 0) {\n        return ['No module registration found'];\n    }\n\n    return bindings.map((moduleBinder: IModuleBinder) => {\n        return moduleBinder.name;\n    });\n}\n\nconst getPageDefaults = () => {\n    if (!defaults.page) {\n        // TODO: move this to json file?\n        const temp = <any>{\n            className: {\n                friendlyName: 'ClassName',\n                description: 'class properties',\n                type: 'string',\n                default: '',\n                group: 'Page Layout'\n            },\n            pageTheme: {\n                friendlyName: 'Page theme',\n                description: 'Page theme',\n                type: 'string',\n                enum: {},\n                group: 'Theme'\n            }\n        };\n\n        temp.pageTheme.enum = {\n            ...getAvailableThemes()\n        };\n        defaults.page = temp;\n    }\n    return defaults.page;\n};\n\nconst renameKeyInObject = (value: object, oldkey: string, newkey: string, depth?: number) => {\n    if (isObject(value) && isEmptyOrNullObject(value)) {\n        return value;\n    }\n\n    if (oldkey !== newkey && value.hasOwnProperty(oldkey)) {\n        // @ts-ignore\n        Object.defineProperty(value, newkey, Object.getOwnPropertyDescriptor(value, oldkey));\n        delete value[oldkey];\n    }\n\n    // if depth === undefined, then rename till all depth\n    if (depth !== undefined && depth === 0) {\n        return;\n    }\n\n    Object.keys(value).forEach((key: string) => {\n        const childObject = value[key];\n        if (isObject(childObject)) {\n            renameKeyInObject(childObject, oldkey, newkey, depth && depth - 1);\n        }\n    });\n};\n\nconst parseModuleDefinition = async (defN, definitionPath, telemetry) => {\n    const definitionWithResolvedRef = await resolveRef(defN, definitionPath, telemetry);\n    definitionWithResolvedRef['module'] && delete definitionWithResolvedRef['module'];\n    renameKeyInObject(definitionWithResolvedRef, '$type', 'type', 0);\n    return definitionWithResolvedRef;\n};\n\nexport const getModuleDefinition = async (moduleBinder: IModuleBinder, telemetry: IInternalTelemetry) => {\n    // read from cache or fs\n    const pageDefault = getPageDefaults();\n\n    const definition: any = await getModuleDefinitionObj(moduleBinder, telemetry);\n\n    if (definition && definition.categories && definition.categories.indexOf && definition.categories.indexOf('page') !== -1) {\n        definition.config = {\n            ...definition.config,\n            ...pageDefault\n        };\n    }\n\n    if (definition && moduleBinder.$type === THEME_MODULE.TYPE) {\n        definition.pages = moduleBinder.pages || {};\n        definition.segments = moduleBinder.segments || [];\n    }\n\n    return definition;\n};\n\nexport const isDAPIOptimizationDisabled = (platformSettings?: IPlatformSettings) => {\n    platformSettings = platformSettings || msdyn365Commerce.platformSettings;\n    return platformSettings && !!platformSettings.disableDAPIOptimizations;\n};\n\nconst getModuleDefinitionObj = async (moduleBinder: IModuleBinder, telemetry: IInternalTelemetry) => {\n    if (isDAPIOptimizationDisabled()) {\n        const definitionFile = await safeReadJson<object>(moduleBinder.definitionPath, {\n            error: (input: Error) => {\n                telemetry.log(LogLevel.Error, `Couldn't read definition file [${moduleBinder.definitionPath}]`, { exception: input });\n            }\n        });\n        if (!definitionFile || isEmptyOrNullObject(definitionFile)) {\n            const definitionError = {\n                error: `problem found with definition file [${moduleBinder.definitionPath}] for module [${moduleBinder.name}]`\n            };\n            globallyFailedModules.push(definitionError);\n            return definitionError;\n        }\n\n        return parseModuleDefinition(definitionFile, moduleBinder.definitionPath, telemetry);\n    }\n\n    return getOriginalModuleDefs(moduleBinder.name);\n};\n\nconst getAllModuleDefinitions = async (modules: IModuleBinder[], telemetry: IInternalTelemetry): Promise<object[]> => {\n    telemetry.trackEvent(EVENT_DAPI_GETALLMODULES_START);\n    let definitions = await Promise.all(\n        modules.map(async (moduleBinder: IModuleBinder) => {\n            if (isDAPIOptimizationDisabled()) {\n                const definition = await getModuleDefinition(moduleBinder, telemetry);\n                const dataJson = await getDataJsonAndParse(moduleBinder, telemetry);\n                !isEmptyOrNullObject(dataJson) && (definition['data'] = dataJson);\n                return definition;\n            }\n\n            return getModuleDefinition(moduleBinder, telemetry);\n        })\n    );\n\n    // filter out any deprecated modules, if its an SSK 2.0 app\n    if (isSSK2App() && definitions) {\n        definitions = definitions.filter(item => item && !(item['attributes'] && item['attributes']['deprecate']));\n    }\n\n    telemetry.trackEvent(EVENT_DAPI_GETALLMODULES_STOP);\n    return definitions;\n};\n\n/**\n * Adds any default properties the module config should have\n * to the dapi response\n *\n * @param result List of modules\n */\nconst addDefaultModuleConfigProperties = (defJson: any) => {\n    const type = defJson.type || defJson.$type;\n    if (defJson && (type === 'contentModule' || type === 'containerModule' || type === 'pageModule' || type === 'definitionExtension')) {\n        // Every module should have a class name property added if missing from the definition json\n        if (!defJson.config) {\n            defJson.config = {};\n        }\n        if (!defJson.config.className) {\n            defJson.config.className = classNameDefnProperty;\n        } else {\n            // if className is defined ensure type is set to 'css'\n            defJson.config.className.type = 'css';\n        }\n    }\n};\n\n/**\n * Get theme definition extensions\n * @param themeModuleName name of the theme module\n * @param themeModuleBinder theme module binder object\n */\nconst getThemeDefinitionExtensions = async (themeModuleName: string, themeModuleBinder: IModuleBinder): Promise<any> => {\n    let themeDefinitionExtensions = {};\n\n    // In case of extended theme module, read parent theme definiton extensions first\n    if (themeModuleBinder.parentDefinitionPath) {\n        const parentThemeName = getModuleName(themeModuleBinder.parentDefinitionPath);\n        const parentThemeBinder = getModuleBinder(parentThemeName);\n        parentThemeBinder.definitionExtensions = parentThemeBinder.definitionExtensions || [];\n        for (const moduleName of parentThemeBinder.definitionExtensions) {\n            const pathToDefinition = path.join(\n                parentThemeBinder.moduleDirectory,\n                THEME_MODULE.DEF_EXTENSIONS,\n                `${moduleName}${THEME_MODULE.DEF_EXT_FILE}`\n            );\n\n            const defExtensionJson = (await safeReadJson(pathToDefinition)) || {};\n            addDefaultModuleConfigProperties(defExtensionJson);\n            themeDefinitionExtensions[moduleName] = await resolveRef(defExtensionJson, pathToDefinition);\n        }\n    }\n\n    // Read theme module definition extensions\n    themeModuleBinder.definitionExtensions = themeModuleBinder.definitionExtensions || [];\n    for (const moduleName of themeModuleBinder.definitionExtensions) {\n        const pathToDefinition = path.join(\n            themeModuleBinder.moduleDirectory,\n            THEME_MODULE.DEF_EXTENSIONS,\n            `${moduleName}${THEME_MODULE.DEF_EXT_FILE}`\n        );\n\n        const defExtensionJson = (await safeReadJson(pathToDefinition)) || {};\n        addDefaultModuleConfigProperties(defExtensionJson);\n        const themeLevelDefinitionExtensions = await resolveRef(defExtensionJson, pathToDefinition);\n        themeDefinitionExtensions[moduleName] = _merge({}, themeDefinitionExtensions[moduleName], themeLevelDefinitionExtensions);\n    }\n\n    // Read partner level definition extensions\n    const partnerDefinitionExtensions =\n        (await safeGetAllFilesPath(\n            path.join(keystonePaths.KEYSTONE_THEMES_DIR, themeModuleName, THEME_MODULE.DEF_EXTENSIONS, `*${THEME_MODULE.DEF_EXT_FILE}`)\n        )) || [];\n    for (const pathToDefExt of partnerDefinitionExtensions) {\n        // Check if partner has definition extension override for this theme and merge\n        if (await safeFileExists(pathToDefExt)) {\n            const partnerDefExtensionJson = (await safeReadJson(pathToDefExt)) || {};\n            const moduleName = path.basename(pathToDefExt, THEME_MODULE.DEF_EXT_FILE);\n            themeDefinitionExtensions[moduleName] = _merge(themeDefinitionExtensions[moduleName], partnerDefExtensionJson);\n        }\n    }\n\n    // Check and remove config properties present from config of theme definition extension, if duplicate property exists in dependncies of definition extension\n    themeDefinitionExtensions = filterConfigProperties(themeDefinitionExtensions);\n    return themeDefinitionExtensions;\n};\n\n/**\n * Filters config properties present from config of Definition extension, if same property exists in dependncies of definition extension\n * @param themeDefinitionExtensions Final response of theme definition extension\n */\nconst filterConfigProperties = themeDefinitionExtensions => {\n    const properties = Object.keys(themeDefinitionExtensions);\n    if (properties.length > 0) {\n        for (let i = 0; i < properties.length; i++) {\n            const DefinitionExtension = themeDefinitionExtensions[properties[i]];\n            const config = DefinitionExtension['config'];\n            if (config && DefinitionExtension['dependentSchemas']) {\n                const dependentSchemas = DefinitionExtension.dependentSchemas.moduleLayout.oneOf;\n                for (let j = 0; j < dependentSchemas.length; j++) {\n                    const extendedproperties = dependentSchemas[j].properties;\n                    for (const propertyKey of Object.keys(extendedproperties)) {\n                        if (config[propertyKey]) {\n                            delete config[propertyKey];\n                        }\n                    }\n                }\n            }\n        }\n    }\n    return themeDefinitionExtensions;\n};\n\n/**\n * Get default theme style presets definition extensions\n * @param themeModuleName name of the theme module\n * @param themeModuleBinder theme module binder object\n */\nconst getDefaultThemeStylePreset = async (themeModuleName: string, themeModuleBinder: IModuleBinder): Promise<any> => {\n    const pathToThemeStylesDefinition = path.join(\n        themeModuleBinder.moduleDirectory,\n        THEME_MODULE.STYLES,\n        `${themeModuleName}${THEME_MODULE.STYLE_PRESET_DEFINITION_FILE}`\n    );\n\n    const themeStylePresets = await resolveRef((await safeReadJson(pathToThemeStylesDefinition)) || {}, pathToThemeStylesDefinition);\n    const pathToPartnerThemeStylePresets = path.join(\n        keystonePaths.KEYSTONE_THEMES_DIR,\n        themeModuleName,\n        THEME_MODULE.STYLES,\n        `${themeModuleName}${THEME_MODULE.STYLE_PRESET_DEFINITION_FILE}`\n    );\n\n    const partnerThemeStylesDefinition = await resolveRef(\n        (await safeReadJson(pathToPartnerThemeStylePresets)) || {},\n        pathToPartnerThemeStylePresets\n    );\n    return _merge(themeStylePresets, partnerThemeStylesDefinition);\n};\n\n/**\n * Get additional theme style presets extensions\n * @param themeModuleName name of the theme module\n * @param themeModuleBinder theme module binder object\n */\nconst getThemeStylePresetInstances = async (themeModuleName: string, themeModuleBinder: IModuleBinder): Promise<any> => {\n    const mergedFiles = {};\n    const keystoneThemeFilePath = path.join(keystonePaths.KEYSTONE_THEMES_DIR, themeModuleName, THEME_MODULE.STYLES);\n\n    const getThemeFilePaths = (\n        await safeGetAllFilesPath(\n            path.join(themeModuleBinder.moduleDirectory, THEME_MODULE.STYLES, `/*${THEME_MODULE.STYLE_PRESET_INSTANCE_FILE}`)\n        )\n    ).filter(p => !p.endsWith(THEME_MODULE.STYLE_PRESET_DEFINITION_FILE));\n\n    const getKeystoneFilePaths = safeGetAllFilesPathSync(\n        path.join(keystoneThemeFilePath, `/*${THEME_MODULE.STYLE_PRESET_INSTANCE_FILE}`)\n    ).filter(p => !p.endsWith(THEME_MODULE.STYLE_PRESET_DEFINITION_FILE));\n\n    Array.prototype.push.apply(getThemeFilePaths, getKeystoneFilePaths);\n\n    if (getThemeFilePaths.length > 0) {\n        for (let i = 0; i < getThemeFilePaths.length; i++) {\n            const stylePresetName = path.basename(getThemeFilePaths[i], '.scss.json');\n            const additionalThemeStylePresets = (await safeReadJson(getThemeFilePaths[i])) || {};\n\n            mergedFiles[stylePresetName] = _merge(mergedFiles[stylePresetName], additionalThemeStylePresets);\n        }\n    }\n\n    return mergedFiles;\n};\n\nconst getDataJsonPath = (definitionPath: string, isNodeModule: boolean): string => {\n    const filePath = (isNodeModule ? definitionPath : definitionPath.replace('src/modules', 'build/definitions')).replace(\n        '.definition.json',\n        '.data.json'\n    );\n    return path.resolve(filePath);\n};\n\nexport const getDataJsonAndParse = async (moduleBinder: IModuleBinder, telemetry: IInternalTelemetry) => {\n    let dataJsonPathFromDefinitionPath = getDataJsonPath(moduleBinder.definitionPath, moduleBinder.isNodeModule);\n    let dataJsonFileExists = await safeFileExists(dataJsonPathFromDefinitionPath);\n\n    // Look for parent data definition file - in case of $ref module\n    if (!dataJsonFileExists && moduleBinder.parentDefinitionPath) {\n        dataJsonPathFromDefinitionPath = getDataJsonPath(moduleBinder.parentDefinitionPath, moduleBinder.isNodeModule);\n        dataJsonFileExists = await safeFileExists(dataJsonPathFromDefinitionPath);\n    }\n\n    if (!dataJsonFileExists) {\n        return {};\n    }\n\n    const dataJsonFile = await safeReadJson<object>(dataJsonPathFromDefinitionPath, {\n        error: (input: Error) => {\n            telemetry.log(LogLevel.Error, `Couldn't read data json file [${dataJsonPathFromDefinitionPath}]`, { exception: input });\n        }\n    });\n\n    const dataJson = dataJsonFile && dataJsonFile['properties'];\n    if (!dataJson) {\n        return {};\n    }\n\n    Object.keys(dataJson).forEach(eachDataTypePropertyKey => {\n        const eachDataTypeProperty = dataJson[eachDataTypePropertyKey];\n\n        if (eachDataTypeProperty.filterFromDAPI) {\n            delete dataJson[eachDataTypePropertyKey];\n        }\n    });\n\n    renameKeyInObject(dataJson, '$ref', 'type', 3);\n    return dataJson;\n};\n\nexport const getModuleDefinitionApiFile = async (\n    modules: IModuleBinder[],\n    telemetry: IInternalTelemetry\n): Promise<object[] | undefined> => {\n    if (process.env.NODE_ENV === 'production') {\n        const moduleDefinitionApiFileExists = await safeFileExists(keystonePaths.KEYSTONE_APP_DEFINITION_FILEPATH, {\n            debug: input => {\n                telemetry.log(LogLevel.Debug, input);\n            },\n            error: input => {\n                telemetry.log(LogLevel.Error, input);\n            }\n        });\n        if (moduleDefinitionApiFileExists) {\n            return safeReadJson<object[]>(keystonePaths.KEYSTONE_APP_DEFINITION_FILEPATH, {\n                error: (input: Error) => {\n                    telemetry.log(LogLevel.Error, `Couldn't read definition api file [${keystonePaths.KEYSTONE_APP_DEFINITION_FILEPATH}]`, {\n                        exception: input\n                    });\n                }\n            });\n        }\n\n        const definitions = await getAllModuleDefinitions(modules, telemetry);\n        if (definitions && definitions.length > 0) {\n            await safeWriteJson(keystonePaths.KEYSTONE_APP_DEFINITION_FILEPATH, definitions);\n        }\n        return definitions;\n    }\n\n    return getAllModuleDefinitions(modules, telemetry);\n};\n\n/**\n * route to return definition JSON\n * [/dapi/modules] - return all modules defintion\n * [/dapi/modules?type=<moduleType>] - return specific module type defintion\n * @param moduleType\n * @param telemetry\n */\nexport async function getModuleDefinitions(moduleType: string, telemetry: IInternalTelemetry): Promise<string | object[]> {\n    if (moduleType && !(<any>msdyn365Commerce).moduleBinder(moduleType)) {\n        return JSON.stringify({ error: `type [${moduleType}] not defined` });\n    }\n\n    const result = isDAPIOptimizationDisabled()\n        ? await getModuleDefinitionApiFile((<any>msdyn365Commerce).getAllModuleBinder(), telemetry)\n        : await getAllModuleDefinitions((<any>msdyn365Commerce).getAllModuleBinder(), telemetry);\n\n    if (!result) {\n        const message = `DefinitionAPI: There is no information in the result.`;\n        telemetry.trackMetric(METRIC_DAPI_NO_RESULT, 1);\n        return message;\n    }\n\n    // Add default module config properties to DAPI response\n    for (let i = 0; i < result.length; i++) {\n        addDefaultModuleConfigProperties(result[i]);\n    }\n\n    if (moduleType && result.length > 0) {\n        const defN = result\n            .map((definition: any) => definition && definition.name && definition.name === moduleType && definition)\n            .filter(Boolean);\n        if (defN && defN.length > 0) {\n            return defN;\n        } else {\n            return `{ error: 'type not found [${moduleType}]'}`;\n        }\n    }\n    return result;\n}\n\n/**\n * route to return definition JSON\n * [/dapi/themes] - return all modules defintion\n * [/dapi/themes?type=<moduleType>] - return specific module type defintion\n * @param moduleType\n * @param telemetry\n */\nconst getAllThemeModules = async (telemetry: IInternalTelemetry): Promise<IThemeModule[]> => {\n    const themeModules = msdyn365Commerce.themeModules || [];\n    if (themeModules.length) {\n        return themeModules;\n    }\n\n    const allModulesBinder = await (<any>msdyn365Commerce).getAllModuleBinder();\n    if (Array.isArray(allModulesBinder)) {\n        const allThemeModulesBinder = <IModuleBinder[]>allModulesBinder.filter(def => (<IModuleBinder>def).$type === THEME_MODULE.TYPE);\n        await Promise.all(\n            allThemeModulesBinder.map(async (themeModuleBinder: IModuleBinder) => {\n                const themeModule = await getModuleDefinition(themeModuleBinder, telemetry);\n                themeModule.pages = await getThemePages(themeModuleBinder);\n                themeModule.segments = await getThemeSegments(themeModuleBinder);\n\n                themeModule.definitionExtensions = await getThemeDefinitionExtensions(themeModule.name, themeModuleBinder);\n\n                const themeStylePresets = await getDefaultThemeStylePreset(themeModule.name, themeModuleBinder);\n                themeModule.styles = {\n                    definition: themeStylePresets,\n                    presets:\n                        Object.entries(themeStylePresets).length !== 0\n                            ? await getThemeStylePresetInstances(themeModule.name, themeModuleBinder)\n                            : {}\n                };\n\n                themeModules.push(themeModule);\n            })\n        );\n    }\n\n    msdyn365Commerce.setThemeModules(themeModules);\n    return themeModules;\n};\n\n/**\n * Gets the pages in the given theme module\n * @param themeModuleBinder binder for the theme module object\n */\nconst getThemePages = async (themeModuleBinder: IModuleBinder) => {\n    const pageNames = Object.keys(themeModuleBinder.pages || {});\n    const themePages = {};\n    for (const pageName of pageNames) {\n        const layouts = themeModuleBinder.pages![pageName] || [];\n        for (const layout of layouts) {\n            const pathToPageLayout = path.join(\n                themeModuleBinder.moduleDirectory,\n                THEME_MODULE.LAYOUTS,\n                THEME_MODULE.PAGES,\n                pageName,\n                `${layout}${THEME_MODULE.PAGE_FILE}`\n            );\n            const pageLayoutJson = (await safeReadJson(pathToPageLayout)) || {};\n            themePages[pageName] = themePages[pageName] || {};\n            themePages[pageName][layout] = await resolveRef(pageLayoutJson, pathToPageLayout);\n        }\n    }\n\n    return themePages;\n};\n\n/**\n * Gets the segments in the given theme module\n * @param themeModuleBinder binder for the theme module object\n */\nconst getThemeSegments = async (themeModuleBinder: IModuleBinder) => {\n    const segments = {};\n    themeModuleBinder.segments = themeModuleBinder.segments || [];\n    for (const segment of themeModuleBinder.segments) {\n        const pathToSegment = path.join(\n            themeModuleBinder.moduleDirectory,\n            THEME_MODULE.LAYOUTS,\n            THEME_MODULE.SEGMENTS,\n            `${segment}${THEME_MODULE.SEGMENT_FILE}`\n        );\n        const segmentJson = (await safeReadJson(pathToSegment)) || {};\n        segments[segment] = await resolveRef(segmentJson, pathToSegment);\n    }\n\n    return segments;\n};\n\n/**\n * Method to return the full theme module object with layouts and segments\n * @param moduleName theme module name to be filtered\n * @param telemetry\n */\nexport const getThemeModules = async (moduleName: string | null, telemetry: IInternalTelemetry): Promise<string | IThemeModule[]> => {\n    if (moduleName && !(<any>msdyn365Commerce).moduleBinder(moduleName)) {\n        return JSON.stringify({ error: `theme module [${moduleName}] not found` });\n    }\n\n    const bindings = (<IMSDyn365CommerceExtension>(<unknown>msdyn365Commerce)).bindings;\n    const themeModules: IThemeModule[] = isDAPIOptimizationDisabled() ? await getAllThemeModules(telemetry) : bindings.dapi.themes || [];\n    if (moduleName && themeModules.length > 0) {\n        const defN = themeModules\n            .map((definition: any) => definition && definition.name && definition.name === moduleName && definition)\n            .filter(Boolean);\n        if (defN && defN.length > 0) {\n            return defN;\n        } else {\n            return `{ error: 'type not found [${moduleName}]'}`;\n        }\n    }\n\n    return Promise.resolve(themeModules);\n};\n\n/**\n * Method to return list of theme modules names\n * @param telemetry\n */\nexport const getThemeModulesList = async (telemetry: IInternalTelemetry) => {\n    const themeModulesList = await getThemeModules(null, telemetry);\n    return Array.isArray(themeModulesList) ? themeModulesList.map(themeModule => themeModule.name) : [];\n};\n"]}