{"version":3,"file":"HttpException.js","sourceRoot":"","sources":["../../../../src/_server/error/HttpException.ts"],"names":[],"mappings":"AAAA;;;GAGG;AAEH;;GAEG;AACH,MAAM,OAAO,aAAc,SAAQ,KAAK;IAKpC;;;;OAIG;IACH,YAAY,IAAY,EAAE,OAAgB;QACtC,KAAK,CAAC,OAAO,CAAC,CAAC;QACf,IAAI,CAAC,UAAU,GAAG,IAAI,CAAC;QACvB,IAAI,CAAC,IAAI,GAAG,aAAa,CAAC,IAAI,CAAC;QAE/B,0FAA0F;QAC1F,oJAAoJ;QACpJ,MAAM,CAAC,cAAc,CAAC,IAAI,EAAE,aAAa,CAAC,SAAS,CAAC,CAAC;IACzD,CAAC;;AAjBa,kBAAI,GAAW,eAAe,CAAC","sourcesContent":["/*!\n * Copyright (c) Microsoft Corporation.\n * All rights reserved. See LICENSE in the project root for license information.\n */\n\n/**\n * Http specific errors\n */\nexport class HttpException extends Error {\n    public static Name: string = 'HttpException';\n    // TODO: type these\n    public statusCode: number;\n\n    /**\n     * Error class for representing server errors\n     * @param code HTTP status code\n     * @param message Http status message\n     */\n    constructor(code: number, message?: string) {\n        super(message);\n        this.statusCode = code;\n        this.name = HttpException.Name;\n\n        // As of Typescript 2.1 if we extend the Error object the prototype must be set explicitly\n        // See: https://github.com/Microsoft/TypeScript-wiki/blob/master/Breaking-Changes.md#extending-built-ins-like-error-array-and-map-may-no-longer-work\n        Object.setPrototypeOf(this, HttpException.prototype);\n    }\n}\n"]}