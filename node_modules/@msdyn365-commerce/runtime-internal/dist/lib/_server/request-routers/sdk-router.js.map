{"version":3,"file":"sdk-router.js","sourceRoot":"","sources":["../../../../src/_server/request-routers/sdk-router.ts"],"names":[],"mappings":"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","sourcesContent":["/*!\n * Copyright (c) Microsoft Corporation.\n * All rights reserved. See LICENSE in the project root for license information.\n */\nimport { ICacheKey, readCachedExperimentsEntries, saveCachedExperimentsEntries } from '@msdyn365-commerce/cache-internal';\nimport {\n    EXPERIMENTATION_CACHE_TYPE,\n    IExperimentRefreshOptions,\n    IExperiments,\n    IExperimentsResult,\n    msdyn365Commerce,\n    RefreshType\n} from '@msdyn365-commerce/core-internal';\nimport { asSystemMetadata, IInternalTelemetry, LogLevel } from '@msdyn365-commerce/telemetry-internal';\nimport express, { NextFunction, Request, Response } from 'express';\nimport { IMSDyn365CommerceExtension } from '../../app-initialization/models';\nimport { IModuleListTypes, moduleListPage } from '../../components/module-list-page';\nimport { DEFAULT_REQUEST_TIMEOUT, PROVIDER_GET_EXPERIMENTS_FAIL, RETAIL_SERVER_BASE_URL_HEADER_KEY } from '../../consts';\nimport keystonePaths from '../../paths';\nimport featureFlags from '../../settings/featureflags.settings.json';\nimport { safeRoute, throwHelper } from '../../utils/helpers';\nimport {\n    DefinitionType,\n    getModuleDefinitions,\n    getModulesList,\n    getThemeModules,\n    getThemeModulesList,\n    THEME_MODULE\n} from '../Definition/moduleDefinition';\nimport { getPreviews } from '../Definition/previewDefinition';\nimport { getStyles } from '../Definition/stylesDefinition';\n\n/**\n * Adds module details (name and default mock url) to a module type array\n *\n * @param moduleType The module type that the current module should be added to\n * @param moduleName The name of the module\n * @param modulesList The module list object containing the moduleType keys\n */\nconst addToModuleType = (moduleType: string, moduleName: string, modulesList: IModuleListTypes) => {\n    if (!modulesList[moduleType]) {\n        modulesList[moduleType] = [];\n    }\n    modulesList[moduleType].push({ name: moduleName, mockUrl: `/modules?type=${moduleName}` });\n};\n\n/**\n * Returns a function used for resolving the behavior of the _sdk/allmodules route\n * which gets a list of registered modules from DAPI and categorizes\n * the modules by module type before sending that list module-list-page.tsx\n * to render a list of installed modules and their associated previews (if applicabile)\n */\nconst getAllModulesRouteParser = () => {\n    return safeRoute(async (req: Request, res: Response, next: NextFunction) => {\n        // Pass in empty string as the first argument so we get a list of all the modules\n        const registeredModules = await getModuleDefinitions('', res.locals.telemetry);\n        const modulesList: IModuleListTypes = {};\n        if (Array.isArray(registeredModules)) {\n            const registeredModuleList = <{ $type?: string; type?: string; name: string }[]>registeredModules;\n            registeredModuleList.forEach(moduleDefinition => {\n                const moduleType = moduleDefinition.type ? moduleDefinition.type : moduleDefinition.$type;\n                if (moduleType && moduleType !== 'moduleDefinition') {\n                    addToModuleType(moduleType, moduleDefinition.name, modulesList);\n                } else {\n                    addToModuleType('uncategorizedModules', moduleDefinition.name, modulesList);\n                }\n            });\n        }\n        res.send(moduleListPage(modulesList));\n    });\n};\n\nexport interface IFeatureFlags {\n    features: { name: string; dependencies?: { name: string; minVersion?: string; maxVersion?: string }[] }[];\n    retailServerVersion?: string;\n    SDKVersion?: string;\n    SSKVersion?: string;\n}\n\n/**\n * Returns a function for resolving the behvaior of the _sdk/featureflags route\n * Returns a json object containing information on the current feature\n */\nconst getFeatureFlagsJson = () => {\n    return safeRoute(async (req: Request, res: Response, next: NextFunction) => {\n        const features: IFeatureFlags = featureFlags;\n        if (process.env.MSDyn365Commerce_RSVERSION) {\n            features.retailServerVersion = process.env.MSDyn365Commerce_RSVERSION;\n            features.SDKVersion = process.env.MSDyn365Commerce_SDK_VERSION;\n            features.SSKVersion = process.env.MSDyn365Commerce_SSK_VERSION;\n        }\n        res.send(features);\n    });\n};\n\nconst getExperimentsWithCache = async (\n    res: Response,\n    retailServerBaseUrl: string,\n    page?: string,\n    items?: string\n): Promise<IExperimentsResult> => {\n    const experimentConnector = msdyn365Commerce.experimentationConnector && msdyn365Commerce.experimentationConnector;\n    if (!experimentConnector) {\n        res.status(204);\n        return {};\n    }\n    let experimentList: IExperiments[] | undefined;\n    let experiments: IExperimentsResult | undefined;\n    if (!page && !items) {\n        const refreshOption: IExperimentRefreshOptions = {\n            refreshType: RefreshType.Experiments,\n            parameters: []\n        };\n        const cacheKey: ICacheKey = {\n            typeName: EXPERIMENTATION_CACHE_TYPE,\n            key: experimentConnector.name\n        };\n        experimentList = await readCachedExperimentsEntries<IExperiments[]>(\n            cacheKey,\n            refreshOption,\n            experimentConnector.provider,\n            experimentConnector.name,\n            retailServerBaseUrl\n        );\n        if (!experimentList) {\n            try {\n                experiments = await experimentConnector.provider.getExperiments(retailServerBaseUrl, experimentConnector.name);\n                experimentList = experiments && experiments.experiments;\n                if (experimentList && experimentList.length > 0) {\n                    await saveCachedExperimentsEntries<IExperiments[]>(cacheKey, experimentList);\n                }\n            } catch (e) {\n                (<IInternalTelemetry>res.locals.telemetry).log(LogLevel.Error, PROVIDER_GET_EXPERIMENTS_FAIL, {\n                    values: [asSystemMetadata(retailServerBaseUrl || '')],\n                    exception: e\n                });\n            }\n        } else {\n            experiments = {\n                name: experimentConnector.name,\n                experiments: experimentList\n            };\n        }\n    } else {\n        try {\n            experiments = await experimentConnector.provider.getExperiments(retailServerBaseUrl, experimentConnector.name, page, items);\n        } catch (e) {\n            (<IInternalTelemetry>res.locals.telemetry).log(LogLevel.Error, PROVIDER_GET_EXPERIMENTS_FAIL, {\n                values: [asSystemMetadata(retailServerBaseUrl || '')],\n                exception: e\n            });\n        }\n    }\n    return experiments || {};\n};\n\n/**\n * Method to process dapi request\n * @param req request object\n * @param res response object\n * @param next next function in the route chain\n */\nconst processDapiRequest = async (req: Request, res: Response, next: NextFunction) => {\n    if (!req.stale) {\n        return res.sendStatus(304);\n    }\n    let resultDefinition: unknown;\n    switch (req.params.resource) {\n        case DefinitionType.Modules:\n            resultDefinition = await getModuleDefinitions(req.query.type, res.locals.telemetry);\n\n            if (Array.isArray(resultDefinition) && resultDefinition.length > 0) {\n                resultDefinition = resultDefinition.filter(moduleDef => moduleDef.type !== THEME_MODULE.TYPE);\n            }\n            break;\n        case DefinitionType.ModuleList:\n            resultDefinition = await getModulesList();\n            break;\n        case DefinitionType.Styles:\n            resultDefinition = getStyles();\n            break;\n        case DefinitionType.Experiments:\n            const retailServerBaseUrl = <string>req.headers[RETAIL_SERVER_BASE_URL_HEADER_KEY];\n            resultDefinition = await getExperimentsWithCache(res, retailServerBaseUrl, req.query.page, req.query.items);\n            break;\n        case DefinitionType.AppSettings:\n            resultDefinition = msdyn365Commerce.appSettings;\n            break;\n        case DefinitionType.ImageSettings:\n            resultDefinition = msdyn365Commerce.imageSettings;\n            break;\n        case DefinitionType.ThemeSettings:\n            resultDefinition = msdyn365Commerce.themeSettings;\n            break;\n        case DefinitionType.Themes:\n            resultDefinition = await getThemeModules(req.query.type, res.locals.telemetry);\n            break;\n        case DefinitionType.ThemesList:\n            resultDefinition = await getThemeModulesList(res.locals.telemetry);\n            break;\n        case DefinitionType.Resources:\n            resultDefinition = msdyn365Commerce.resourceManager\n                ? msdyn365Commerce.resourceManager.getAuthoringResources()\n                : { error: `Resource manager is not defined` };\n            break;\n        case DefinitionType.Previews:\n            resultDefinition = await getPreviews(req.query, res.locals.telemetry);\n            break;\n        default:\n            resultDefinition = { error: `type not defined [${req.params.resource}]` };\n            res.status(404);\n    }\n    return res.send(resultDefinition);\n};\n\n// tslint:disable-next-line:typedef max-func-body-length\nexport default function(server) {\n    const sdkRouter = express.Router();\n\n    sdkRouter.use((req: Request, res: Response, next: NextFunction): void => {\n        res.append('build-version', msdyn365Commerce.buildVersion);\n        res.setHeader('ETag', `\"${msdyn365Commerce.buildVersion}\"`);\n        res.setHeader('Cache-Control', 'max-age=3600, public');\n        next();\n    });\n    sdkRouter\n        // @TODO kopik: move test routes behind an env flag\n        // route to test that exceptions will be caught\n        .get(\n            '/test-throw',\n            safeRoute(async (req: Request, res: Response, next: NextFunction) => {\n                return throwHelper(req, res, next, 'test-throw');\n            })\n        )\n        // nested promise example\n        .get(\n            '/test-throw-nested',\n            safeRoute(async (req: Request, res: Response, next: NextFunction) => {\n                return (async (req2: Request, res2: Response, next2: NextFunction) => {\n                    return throwHelper(req, res, next, 'test-throw-2');\n                })(req, res, next);\n            })\n        )\n        .get('/test-timeout', async (req: Request, res: Response, next: NextFunction) => {\n            setTimeout(() => {\n                try {\n                    res.send('timeout exceeded');\n                } catch (e) {\n                    // eat the error silently in case we've already closed the connection\n                }\n                // tslint:disable-next-line:align\n            }, DEFAULT_REQUEST_TIMEOUT + 1000);\n        });\n\n    /**\n     * This route is for showing all registered routes and middleware in express. it's a raw dump,\n     * useful in debugging express\n     */\n    sdkRouter.get('/debug', async (req: Request, res: Response, next: NextFunction) => {\n        res.send({\n            ...server._router\n        });\n    });\n\n    // definition api routes\n    sdkRouter.get('/dapi/:resource', safeRoute(processDapiRequest));\n    sdkRouter.get('/allmodules', getAllModulesRouteParser());\n    // version route\n    sdkRouter.get('/version', (req: Request, res: Response) => {\n        res.sendFile(keystonePaths.KEYSTONE_APP_PACKAGE_VERSION);\n    });\n    // enabled features route\n    sdkRouter.get('/features', getFeatureFlagsJson());\n    sdkRouter.get('/yarn-lock', (req: Request, res: Response) => {\n        res.sendFile(keystonePaths.KEYSTONE_APP_YARN_LOCK);\n    });\n    sdkRouter.get('/registration/:resource', (req: Request, res: Response) => {\n        const bindings = (<IMSDyn365CommerceExtension>(<unknown>msdyn365Commerce)).bindings;\n        switch (req.params.resource) {\n            case 'views':\n                res.send(Object.keys(bindings.views || []));\n                break;\n            case 'components':\n                res.send(Object.keys(bindings.components || []));\n                break;\n            case 'modules':\n                // filter modules\n                res.send(\n                    Object.keys(bindings.modules || [])\n                        .map(key => bindings.modules[key])\n                        .filter(value => value.$type !== THEME_MODULE.TYPE)\n                        .map(val => {\n                            return {\n                                name: val.name,\n                                type: val.$type,\n                                packageName: val.packageName,\n                                moduleNamespace: val.moduleNamespace,\n                                isNodeModule: val.isNodeModule,\n                                dataActions: val.dataActions,\n                                parentDefinitionPath: val.parentDefinitionPath\n                            };\n                        })\n                );\n                break;\n            case 'themes':\n                // filter theme modules\n                res.send(\n                    Object.keys(bindings.modules || [])\n                        .map(key => bindings.modules[key])\n                        .filter(value => value.$type === THEME_MODULE.TYPE)\n                        .map(val => {\n                            return {\n                                name: val.name,\n                                packageName: val.packageName,\n                                moduleNamespace: val.moduleNamespace,\n                                isNodeModule: val.isNodeModule,\n                                definitionExtensions: val.definitionExtensions,\n                                views: Object.keys(bindings.views || []).filter(view => view.indexOf(`|${val.name}|views|`) > 0),\n                                components: Object.keys(bindings.components || []).filter(\n                                    component => component.indexOf(`|${val.name}|views|components|`) > 0\n                                ),\n                                themeSettings: val.themeSettings\n                            };\n                        })\n                );\n                break;\n            case 'data-actions':\n                res.send(Object.keys(bindings.dataActions || []));\n                break;\n            default:\n                const resultDefinition = { error: `type not defined [${req.params.resource}]` };\n                res.status(404);\n                return res.send(resultDefinition);\n        }\n    });\n\n    return sdkRouter;\n}\n"]}