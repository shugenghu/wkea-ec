/*!
 * Copyright (c) Microsoft Corporation.
 * All rights reserved. See LICENSE in the project root for license information.
 */
// tslint:disable:no-string-literal -- required for private member access
// tslint:disable:align -- setTimeout alignment bug inTsLint
import { RequestVectorizer, RequestVectorizerInstance } from '../request-vectorizer';
describe('vectorizer', () => {
    const sep = RequestVectorizer.SEP;
    it('works for requests', () => {
        RequestVectorizerInstance['_cache'].clear();
        const input = 'abcdefghi';
        const results = [
            RequestVectorizerInstance.next(input),
            RequestVectorizerInstance.next(input),
            RequestVectorizerInstance.next(input)
        ];
        expect(results[0]).not.toEqual(results[1]);
        expect(results[0]).not.toEqual(results[2]);
        expect(results[1]).not.toEqual(results[2]);
        expect(results[0].endsWith(`${sep}0`));
        expect(results[1].endsWith(`${sep}1`));
        expect(results[2].endsWith(`${sep}2`));
    });
    it('works when updating multiple requests', () => {
        RequestVectorizerInstance['_cache'].clear();
        const input1 = 'RequestId1';
        const input2 = 'RequestId2';
        const results = [
            RequestVectorizerInstance.next(input1),
            RequestVectorizerInstance.next(input1),
            RequestVectorizerInstance.next(input2),
            RequestVectorizerInstance.next(input1),
            RequestVectorizerInstance.next(input2)
        ];
        expect(results).toMatchSnapshot();
    });
    it('can increment correctly', () => {
        // arrange
        const reqId = 'abcdefghi';
        const testInstance = new RequestVectorizer();
        const nextSpy = jest.spyOn(testInstance, 'next');
        const expectedResult = [`${reqId}${RequestVectorizer.SEP}0`, `${reqId}${RequestVectorizer.SEP}1`];
        // act
        const result = [testInstance.next(reqId), testInstance.next(reqId)];
        // assert
        expect(result).toEqual(expectedResult);
        expect(nextSpy).toHaveBeenCalledTimes(2);
    });
});
//# sourceMappingURL=request-vectorizer.test.js.map