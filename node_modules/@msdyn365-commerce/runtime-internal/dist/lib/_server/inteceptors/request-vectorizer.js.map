{"version":3,"file":"request-vectorizer.js","sourceRoot":"","sources":["../../../../src/_server/inteceptors/request-vectorizer.ts"],"names":[],"mappings":"AAAA;;;GAGG;AAEH,OAAO,EAAE,QAAQ,EAAE,MAAM,aAAa,CAAC;AAOvC;;GAEG;AACH,MAAM,iBAAiB;IAKnB,YAAY,OAAmC;QAC3C,IAAI,CAAC,MAAM,GAAG,IAAI,QAAQ,CAAC,OAAO,CAAC,CAAC;QACpC,QAAQ;QACR,IAAI,CAAC,IAAI,GAAG,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;IACrC,CAAC;IAED;;;;;OAKG;IACI,IAAI,CAAC,SAAiB;QACzB,MAAM,KAAK,GAAG,IAAI,CAAC,MAAM,CAAC,GAAG,CAAC,SAAS,CAAC,CAAC;QACzC,MAAM,SAAS,GAAG,KAAK,KAAK,SAAS,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,KAAK,GAAG,CAAC,CAAC;QACtD,IAAI,CAAC,MAAM,CAAC,GAAG,CAAC,SAAS,EAAE,SAAS,CAAC,CAAC;QACtC,OAAO,GAAG,SAAS,GAAG,iBAAiB,CAAC,GAAG,GAAG,SAAS,EAAE,CAAC;IAC9D,CAAC;;AArBD,qDAAqD;AACvC,qBAAG,GAAW,OAAO,CAAC,GAAG,CAAC,mBAAmB,KAAK,MAAM,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,GAAG,CAAC;AAsBvF,MAAM,yBAAyB,GAAG,IAAI,iBAAiB,EAAE,CAAC;AAC1D,OAAO,EAAE,yBAAyB,EAAE,iBAAiB,EAAE,CAAC","sourcesContent":["/*!\n * Copyright (c) Microsoft Corporation.\n * All rights reserved. See LICENSE in the project root for license information.\n */\n\nimport { TTLCache } from './ttl-cache';\n\nexport interface IRequestVectorizerOptions {\n    removalThresholdInMs?: number;\n    intervalForRemovalInMs?: number;\n}\n\n/**\n * Class which handles vectorizing requests\n */\nclass RequestVectorizer {\n    // differentiate vectors generated client/server side\n    public static SEP: string = process.env.CURRENT_ENVIRONMENT === 'node' ? '.' : '/';\n    private _cache: TTLCache<number>;\n\n    constructor(options?: IRequestVectorizerOptions) {\n        this._cache = new TTLCache(options);\n        // binds\n        this.next = this.next.bind(this);\n    }\n\n    /**\n     * The next request in the sequence\n     *\n     * @param {string} requestId\n     * @returns {string} the next vectorized request\n     */\n    public next(requestId: string): string {\n        const value = this._cache.get(requestId);\n        const nextValue = value === undefined ? 0 : value + 1;\n        this._cache.set(requestId, nextValue);\n        return `${requestId}${RequestVectorizer.SEP}${nextValue}`;\n    }\n}\nconst RequestVectorizerInstance = new RequestVectorizer();\nexport { RequestVectorizerInstance, RequestVectorizer };\n"]}