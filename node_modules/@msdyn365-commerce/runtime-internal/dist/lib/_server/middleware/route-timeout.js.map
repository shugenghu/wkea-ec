{"version":3,"file":"route-timeout.js","sourceRoot":"","sources":["../../../../src/_server/middleware/route-timeout.ts"],"names":[],"mappings":"AAAA;;;GAGG;AAEH,OAAO,EAAE,sBAAsB,EAAE,MAAM,uCAAuC,CAAC;AAE/E,OAAO,EAAE,uBAAuB,EAAE,MAAM,cAAc,CAAC;AACvD,OAAO,EAAE,SAAS,EAAE,MAAM,qBAAqB,CAAC;AAEhD,MAAM,CAAC,MAAM,cAAc,GAAG,SAAS,CAAC,KAAK,EAAE,GAAY,EAAE,GAAa,EAAE,IAAkB,EAAE,EAAE;IAC9F,2BAA2B;IAC3B,GAAG,CAAC,UAAU,CAAC,uBAAuB,EAAE,GAAG,EAAE;QACzC,IAAI,CAAC,IAAI,KAAK,CAAC,sBAAsB,CAAC,CAAC,CAAC;IAC5C,CAAC,CAAC,CAAC;IACH,IAAI,EAAE,CAAC;AACX,CAAC,CAAC,CAAC","sourcesContent":["/*!\n * Copyright (c) Microsoft Corporation.\n * All rights reserved. See LICENSE in the project root for license information.\n */\n\nimport { EXCEPTION_HTTP_TIMEOUT } from '@msdyn365-commerce/telemetry-internal';\nimport { NextFunction, Request, Response } from 'express';\nimport { DEFAULT_REQUEST_TIMEOUT } from '../../consts';\nimport { safeRoute } from '../../utils/helpers';\n\nexport const requestTimeout = safeRoute(async (req: Request, res: Response, next: NextFunction) => {\n    // one minute timeout error\n    res.setTimeout(DEFAULT_REQUEST_TIMEOUT, () => {\n        next(new Error(EXCEPTION_HTTP_TIMEOUT));\n    });\n    next();\n});\n"]}