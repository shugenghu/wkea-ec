{"version":3,"file":"route-timers.js","sourceRoot":"","sources":["../../../../src/_server/middleware/route-timers.ts"],"names":[],"mappings":"AAAA;;;GAGG;AACH,OAAO,EAAE,gBAAgB,EAAE,QAAQ,EAAE,eAAe,EAAE,MAAM,uCAAuC,CAAC;AAEpG,MAAM,CAAC,MAAM,mBAAmB,GAAG,iBAAiB,CAAC;AACrD,MAAM,CAAC,MAAM,gBAAgB,GAAG,cAAc,CAAC;AAE/C,MAAM,kBAAkB,GAAG,CAAC,WAA6B,EAAU,EAAE;IACjE,MAAM,aAAa,GAAG,OAAO,CAAC,MAAM,CAAC,WAAW,CAAC,CAAC;IAClD,OAAO,aAAa,CAAC,CAAC,CAAC,GAAG,IAAI,GAAG,aAAa,CAAC,CAAC,CAAC,GAAG,GAAG,CAAC;AAC5D,CAAC,CAAC;AAEF;;GAEG;AACH,MAAM,CAAC,MAAM,iBAAiB,GAAG,CAAC,GAAY,EAAE,GAAa,EAAE,IAAkB,EAAQ,EAAE;IACvF,MAAM,SAAS,GAAG,OAAO,CAAC,MAAM,EAAE,CAAC;IACnC,IAAI,GAAG,CAAC,KAAK,IAAI,GAAG,CAAC,KAAK,CAAC,IAAI,EAAE;QAC7B,GAAG,CAAC,EAAE,CAAC,QAAQ,EAAE,GAAG,EAAE;YAClB,MAAM,aAAa,GAAG,kBAAkB,CAAC,SAAS,CAAC,CAAC;YACpD,eAAe,CAAC,GAAG,CAAC,QAAQ,CAAC,WAAW,EAAE,uBAAuB,EAAE;gBAC/D,MAAM,EAAE,CAAC,gBAAgB,CAAC,GAAG,CAAC,KAAK,CAAC,IAAI,CAAC,EAAE,gBAAgB,CAAC,aAAa,CAAC,CAAC;aAC9E,CAAC,CAAC;QACP,CAAC,CAAC,CAAC;KACN;IACD,IAAI,EAAE,CAAC;AACX,CAAC,CAAC","sourcesContent":["/*!\n * Copyright (c) Microsoft Corporation.\n * All rights reserved. See LICENSE in the project root for license information.\n */\nimport { asSystemMetadata, LogLevel, StaticTelemetry } from '@msdyn365-commerce/telemetry-internal';\nimport { NextFunction, Request, Response } from 'express';\nexport const KEY_REQUESTRECEIVED = 'RequestReceived';\nexport const KEY_REQUESTENDED = 'RequestEnded';\n\nconst getElapsedTimeInMs = (startHrTime: [number, number]): number => {\n    const elapsedHrTime = process.hrtime(startHrTime);\n    return elapsedHrTime[0] * 1000 + elapsedHrTime[1] / 1e6;\n};\n\n/**\n * This is route middleware to time each route\n */\nexport const requestRouteTimer = (req: Request, res: Response, next: NextFunction): void => {\n    const startTime = process.hrtime();\n    if (req.route && req.route.path) {\n        res.on('finish', () => {\n            const elapsedMsTime = getElapsedTimeInMs(startTime);\n            StaticTelemetry.log(LogLevel.Information, `{route} took {time}ms`, {\n                values: [asSystemMetadata(req.route.path), asSystemMetadata(elapsedMsTime)]\n            });\n        });\n    }\n    next();\n};\n"]}