{"version":3,"file":"server-render.vnext.js","sourceRoot":"","sources":["../../../src/_server/server-render.vnext.tsx"],"names":[],"mappings":"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","sourcesContent":["/*!\n * Copyright (c) Microsoft Corporation.\n * All rights reserved. See LICENSE in the project root for license information.\n */\n\n// tslint:disable:max-func-body-length\nimport { ActionContext } from '@msdyn365-commerce/action-internal';\nimport {\n    ICache,\n    ICacheKey,\n    readCachedExperimentsEntries,\n    RequestCache,\n    saveCachedExperimentsEntries\n} from '@msdyn365-commerce/cache-internal';\nimport {\n    CoreContext,\n    CultureInfoFormatter,\n    EXPERIMENTATION_DATAFILE_CACHE_TYPE,\n    ICoreContext,\n    IExperimentRefreshOptions,\n    IModuleContract,\n    IPageConfig,\n    IPageResponse,\n    IRequestContext,\n    msdyn365Commerce,\n    RefreshType\n} from '@msdyn365-commerce/core-internal';\nimport {\n    asSystemMetadata,\n    EVENT_LOAD_DATA_START,\n    EVENT_LOAD_DATA_STOP,\n    EVENT_SERVER_RENDER_START,\n    EVENT_SERVER_RENDER_STOP,\n    EXCEPTION_PAGERENDERING,\n    IEventLoadDataRenderProperties,\n    IEventTime,\n    InternalTelemetry,\n    ITelemetry,\n    LogLevel\n} from '@msdyn365-commerce/telemetry-internal';\nimport { safeFileExists } from '@msdyn365-commerce/utilities-internal';\nimport { Provider } from 'mobx-react';\nimport { join } from 'path';\nimport * as React from 'react';\nimport { ReportChunks } from 'react-universal-component';\nimport { basePageTemplate } from '../components/base-page';\nimport SafeRenderModule from '../components/safe-render-module';\nimport { PROCESS_TYPE, RETAIL_SERVER_BASE_URL_HEADER_KEY } from '../consts';\nimport { loadData } from '../data/load-data';\nimport { processComplexDataTypesAsync } from '../hydrators/process-page-response';\nimport { populateClientCache } from '../mock/action-mock-helper';\nimport paths from '../paths';\nimport { PageContext } from '../store/page-context';\nimport { getCurrencyCodeFromContext, patchedRenderToString } from '../utils/helpers';\nimport { processClientStatsForChunking } from './chunking';\nimport { generateAssetUrls } from './statics-pipeline/statics-helpers';\nimport { getTheme } from './theming';\n\n// allow named parameters\nexport interface IRenderDefaultRouterOptions {\n    content: IPageResponse;\n    options: { clientStats: {} };\n    context: IRequestContext;\n    telemetry: InternalTelemetry;\n    moduleTelemetry: ITelemetry;\n    pageConfig: IPageConfig;\n    requestCache: RequestCache;\n}\n\nexport interface IMakeLoadDataCallsOptions {\n    content: IPageResponse;\n    context: IRequestContext;\n    internalTelemetry: InternalTelemetry;\n    moduleTelemetry: ITelemetry;\n    requestCache: ICache;\n    appCache: ICache;\n}\n\n// TODO: refactor based on how site css should be served\nconst getSiteCss = async (context: IRequestContext, telemetry: InternalTelemetry) => {\n    // always check to include site-level css as site.css\n    const siteCssFileName = `css/site${context.params.isDebug ? '' : '.min'}.css`;\n    const filePath = join(paths.KEYSTONE_STATIC_DIR, siteCssFileName);\n    const siteCss = (await safeFileExists(filePath)) && siteCssFileName;\n\n    if (!siteCss) {\n        telemetry.log(LogLevel.Debug, 'Unable to resolve SiteCSS {FilePath}, {SiteCssFileName}', {\n            values: [asSystemMetadata(filePath), asSystemMetadata(siteCssFileName)]\n        });\n    }\n\n    return siteCss;\n};\n\nconst makeLoadDataCalls = (\n    { internalTelemetry: telemetry, moduleTelemetry: moduleTelemetry, content, context, requestCache, appCache }: IMakeLoadDataCallsOptions,\n    complexPromise?: Promise<void>[]\n): Promise<void> => {\n    try {\n        const correlationId = InternalTelemetry.generateGuid();\n        telemetry.startTimer(correlationId);\n\n        telemetry.trackEvent<IEventLoadDataRenderProperties, {}>(EVENT_LOAD_DATA_START, {\n            id: correlationId,\n            initiator: 'MakeLoadDataCall'\n        });\n        return loadData(content.slots, context, telemetry, moduleTelemetry, requestCache, appCache, complexPromise).then(() => {\n            telemetry.trackEvent<IEventLoadDataRenderProperties, IEventTime>(\n                EVENT_LOAD_DATA_STOP,\n                { id: correlationId, initiator: 'MakeLoadDataCall' },\n                { time: telemetry.stopTimer(correlationId) }\n            );\n        });\n    } catch (e) {\n        telemetry.log(LogLevel.Error, '', { exception: e });\n        return Promise.resolve();\n    }\n};\n\n/**\n * Performs a safe render module on each module defined inside a non-body slot\n * Returns the JSX from the safe render.\n *\n * @param coreContext The core context provided to the page\n * @param addChunk addChunk function\n * @param pageContext The page context object\n * @param currentModule The module that is being passed into safe render module\n */\nconst getSafeRenderModuleResultForSlotItem = (\n    coreContext: ICoreContext,\n    pageContext: PageContext,\n    currentModule: IModuleContract\n): JSX.Element => {\n    // Use this method to perform a render for non body slots only\n    // Setting isNotBodyModule true allows modules to have empty render results (valid for non body slots only)\n    return (\n        <CoreContext.Provider value={coreContext}>\n            <SafeRenderModule {...currentModule} store={pageContext} isNotBodyModule={true} />\n        </CoreContext.Provider>\n    );\n};\n\n/**\n * Performs the render result of all the modules in a given slot\n * and returns the result of the render as an html string\n *\n * @param coreContext The core context provided to the page\n * @param addChunk addChunk function\n * @param pageContext The page context object\n * @param slot The slot (htmlHead, bodyBegin, etc) for which you are expecting the render to string result\n */\nconst getSlotRenderResult = (coreContext: ICoreContext, pageContext: PageContext, slot: string): string => {\n    let content: string = '';\n    const shouldDisableServerSideErrorChecking =\n        coreContext.request &&\n        coreContext.request.app &&\n        coreContext.request.app.config &&\n        coreContext.request.app.config.disableServerSideErrorChecking;\n    if (pageContext.pageRoot.modules && pageContext.pageRoot.modules[slot]) {\n        for (let i = 0; i < pageContext.pageRoot.modules[slot].length; ++i) {\n            content += patchedRenderToString(\n                getSafeRenderModuleResultForSlotItem(coreContext, pageContext, pageContext.pageRoot.modules[slot][i]),\n                shouldDisableServerSideErrorChecking\n            );\n        }\n    }\n    return content;\n};\n// tslint:disable:no-any\nconst getClientInitialConfigWithCache = async (retailServerBaseUrl: string, telemetry: InternalTelemetry): Promise<any> => {\n    const experimentConnector = msdyn365Commerce.experimentationConnector && msdyn365Commerce.experimentationConnector;\n    if (!experimentConnector || !experimentConnector.provider) {\n        return '';\n    }\n\n    const refreshOption: IExperimentRefreshOptions = {\n        refreshType: RefreshType.DataFile,\n        parameters: []\n    };\n    const cacheKey: ICacheKey = {\n        typeName: EXPERIMENTATION_DATAFILE_CACHE_TYPE,\n        key: experimentConnector.name\n    };\n    let expClientConfig = await readCachedExperimentsEntries<any>(\n        cacheKey,\n        refreshOption,\n        experimentConnector.provider,\n        experimentConnector.name,\n        retailServerBaseUrl\n    );\n    if (!expClientConfig) {\n        try {\n            const expClientConfigRaw = await experimentConnector.provider.getConfigForClientSideInit();\n            if (expClientConfigRaw) {\n                expClientConfig = JSON.stringify(expClientConfigRaw);\n                await saveCachedExperimentsEntries<any>(cacheKey, expClientConfig);\n            }\n        } catch (err) {\n            telemetry.log(LogLevel.Error, 'Could not fetch exp data file for client side initalization', { exception: err });\n        }\n    }\n    return expClientConfig || {};\n};\n\nconst getBodyClassName = (pageConfig: IPageConfig, context: IRequestContext): string => {\n    const bodyClass: string[] = [];\n    bodyClass.push(context.device.Type);\n    pageConfig.className && bodyClass.push(pageConfig.className);\n    context.params.theme && bodyClass.push(context.params.theme);\n    return bodyClass.join(' ').toLowerCase();\n};\n\nconst getPrefetchLinks = (context: IRequestContext): string => {\n    const apiSettings = context.apiSettings;\n    const endpoints: string[] = [\n        apiSettings.baseUrl,\n        apiSettings.baseImageUrl,\n        apiSettings.ratingsReviewsEndpoint,\n        ...(context.app.platform?.dnsPrefetchUrls ? context.app.platform.dnsPrefetchUrls : [])\n    ];\n    const linkEndpoints = endpoints.map(endpoint => {\n        try {\n            const url = new URL(endpoint);\n            return `<link rel=\"preconnect\" href=\"${url.origin}\" />\n                <link rel=\"dns-prefetch\" href=\"${url.origin}\"/>`;\n        } catch {\n            return '';\n        }\n    });\n\n    return linkEndpoints.filter(link => link !== '').join('\\n');\n};\n\nconst serverRenderVnext = async ({\n    content,\n    context,\n    options: { clientStats },\n    pageConfig,\n    telemetry,\n    moduleTelemetry,\n    requestCache\n}: IRenderDefaultRouterOptions): Promise<string> => {\n    telemetry.trackEvent(EVENT_SERVER_RENDER_START);\n    const serverRenderCorrelationId = InternalTelemetry.generateGuid();\n    telemetry.startTimer(serverRenderCorrelationId);\n\n    const correlationIdRequestPrep = InternalTelemetry.generateGuid();\n    telemetry.startTimer(correlationIdRequestPrep);\n\n    const chunkNames: { [chunkName: string]: string } = {};\n    const isDebug = context.params && context.params.isDebug;\n    const isEditor = context.params && context.params.isEditor;\n    const theme = context.params.theme || pageConfig.pageTheme;\n\n    const addChunk = (chunkName: string) => {\n        if (!chunkNames[chunkName]) {\n            chunkNames[chunkName] = chunkName;\n        }\n    };\n\n    await populateClientCache(context, content, requestCache, telemetry);\n\n    // tslint:disable-next-line:no-any\n    const appCache = (msdyn365Commerce as any).getAppCache(context);\n\n    // Set the expected actionCount to 5000\n    // this will wait for the actionCount to be 5000 before call goes out\n    // this will give us control to parallelize these calls and avoid redundancy\n    const actionContext = new ActionContext({\n        id: 'Server Action Context',\n        requestContext: context,\n        requestCache: requestCache,\n        telemetry: moduleTelemetry,\n        appCache,\n        expectedActionCount: 5000\n    });\n    const timerRequestPrep = telemetry.stopTimer(correlationIdRequestPrep);\n\n    const correlationIdComplexTypes = InternalTelemetry.generateGuid();\n    telemetry.startTimer(correlationIdComplexTypes);\n\n    const LAZYLOAD_ALL_SWITCH: boolean = context.features.lazyload_all;\n\n    let complexDataTypesPromises: Promise<void>[] | undefined;\n\n    try {\n        complexDataTypesPromises = processComplexDataTypesAsync(LAZYLOAD_ALL_SWITCH, PROCESS_TYPE.server, content.slots, actionContext);\n    } catch (e) {\n        telemetry.log(LogLevel.Error, 'Could not process data types', { exception: e });\n    }\n    const timerComplexTypes = telemetry.stopTimer(correlationIdComplexTypes);\n\n    const correlationIdloadData = InternalTelemetry.generateGuid();\n    telemetry.startTimer(correlationIdloadData);\n\n    await makeLoadDataCalls(\n        { content, context, requestCache, internalTelemetry: telemetry, moduleTelemetry: moduleTelemetry, appCache },\n        complexDataTypesPromises\n    );\n    const timerLoadData = telemetry.stopTimer(correlationIdloadData);\n\n    const correlationIdRenderPage = InternalTelemetry.generateGuid();\n    telemetry.startTimer(correlationIdRenderPage);\n\n    const pageContext = new PageContext(content, context, requestCache, msdyn365Commerce.resourceManager);\n    const coreContext: ICoreContext = {\n        actionContext: actionContext,\n        app: context.app,\n        telemetry: moduleTelemetry,\n        // @ts-ignore\n        internalTelemetry: telemetry,\n        request: context,\n        cultureFormatter: new CultureInfoFormatter(context.locale, getCurrencyCodeFromContext(context))\n    };\n\n    const pageRenderResult = (\n        <CoreContext.Provider value={coreContext}>\n            <ReportChunks report={addChunk}>\n                <Provider store={pageContext}>\n                    {pageContext.pageRoot.modules && pageContext.pageRoot.modules.body ? (\n                        <SafeRenderModule {...pageContext.pageRoot.modules.body[0]} addChunk={addChunk} store={pageContext} />\n                    ) : (\n                        <SafeRenderModule {...pageContext.pageRoot} addChunk={addChunk} store={pageContext} />\n                    )}\n                </Provider>\n            </ReportChunks>\n        </CoreContext.Provider>\n    );\n    const timerRenderPage = telemetry.stopTimer(correlationIdRenderPage);\n\n    let bodyContent: string = '';\n    const correlationIdRenderToString = InternalTelemetry.generateGuid();\n    telemetry.startTimer(correlationIdRenderToString);\n    try {\n        const shouldDisableServerSideErrorChecking =\n            coreContext.request &&\n            coreContext.request.app &&\n            coreContext.request.app.config &&\n            coreContext.request.app.config.disableServerSideErrorChecking;\n        bodyContent = patchedRenderToString(pageRenderResult, shouldDisableServerSideErrorChecking);\n    } catch (e) {\n        telemetry.log(LogLevel.Error, EXCEPTION_PAGERENDERING, { exception: e });\n        bodyContent = e;\n    }\n    const timerRenderToString = telemetry.stopTimer(correlationIdRenderToString);\n\n    const correlationIdBasePageCreation = InternalTelemetry.generateGuid();\n    telemetry.startTimer(correlationIdBasePageCreation);\n\n    const [processedChunkInfo, siteCss] = await Promise.all([\n        processClientStatsForChunking(context.url.staticCdnUrl, Object.keys(chunkNames), clientStats, telemetry, context),\n        getSiteCss(context, telemetry)\n    ]);\n    const css: string[] = [siteCss].filter(Boolean) as string[];\n    const bodyClass = getBodyClassName(pageConfig, context);\n\n    // generate links to construct pre-fetch links to all endpoints\n    const prefetchLinks = getPrefetchLinks(context);\n\n    const retailServerBaseUrl =\n        coreContext.request && coreContext.request.headers && coreContext.request.headers[RETAIL_SERVER_BASE_URL_HEADER_KEY];\n    // get experiment data file.\n    const expDataFile = await getClientInitialConfigWithCache(retailServerBaseUrl, telemetry);\n    // Need to pull the requestUrl from rendering context\n    const basePage = basePageTemplate(\n        {\n            baseUrl: context.url.staticCdnUrl,\n            requestUrl: context.url.requestUrl,\n            bodyContent,\n            headContent: getSlotRenderResult(coreContext, pageContext, 'htmlHead'),\n            bodyBeginContent: getSlotRenderResult(coreContext, pageContext, 'bodyBegin'),\n            bodyEndContent: getSlotRenderResult(coreContext, pageContext, 'bodyEnd'),\n            chunks: processedChunkInfo,\n            css,\n            // @ts-ignore - ignore that the compiler complains types don't match\n            initialData: pageContext,\n            isDebug: isDebug,\n            isEditor: isEditor,\n            context: context,\n            jsHashedUrls: generateAssetUrls(context.url.staticCdnUrl, processedChunkInfo),\n            themeCss: getTheme(isDebug, theme, context.textDirection),\n            appData: { bv: msdyn365Commerce.buildVersion },\n            telemetry,\n            bodyClassName: bodyClass,\n            experimentClientInitConfig: expDataFile,\n            prefetchLinks: prefetchLinks\n        },\n        telemetry\n    );\n    const timerBasePageCreation = telemetry.stopTimer(correlationIdBasePageCreation);\n\n    // stop render server timer\n    telemetry.trackEvent<{}, {}>(\n        EVENT_SERVER_RENDER_STOP,\n        {},\n        {\n            ServerRender: telemetry.stopTimer(serverRenderCorrelationId),\n            RequestPrep: timerRequestPrep,\n            ComplexTypes: timerComplexTypes,\n            LoadData: timerLoadData,\n            RenderPage: timerRenderPage,\n            RenderToString: timerRenderToString,\n            BasePageCreation: timerBasePageCreation\n        }\n    );\n    return basePage;\n};\n\nexport default serverRenderVnext;\n"]}