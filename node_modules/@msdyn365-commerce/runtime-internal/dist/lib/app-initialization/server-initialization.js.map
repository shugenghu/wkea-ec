{"version":3,"file":"server-initialization.js","sourceRoot":"","sources":["../../../src/app-initialization/server-initialization.ts"],"names":[],"mappings":"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","sourcesContent":["/*!\n * Copyright (c) Microsoft Corporation.\n * All rights reserved. See LICENSE in the project root for license information.\n */\n\nimport { AppCache, ICache, ICacheSettings } from '@msdyn365-commerce/cache-internal';\nimport {\n    IAny,\n    IAppSettings,\n    IConnectorSettings,\n    IDictionary,\n    IExperimentationConnector,\n    IExperimentationProvider,\n    IGeneric,\n    IGeoLocationConnector,\n    IGeoLookupProvider,\n    ILocalCredentials,\n    IPartnerImageSettings,\n    IPlatformSettings,\n    IRequestContext,\n    ISecretManager,\n    IThemeModule,\n    MSDyn365Commerce,\n    msdyn365Commerce\n} from '@msdyn365-commerce/core-internal';\nimport { safeFileExists, safeFileExistsSync, safeReadJson } from '@msdyn365-commerce/utilities-internal';\nimport * as appInsights from 'applicationinsights';\nimport { SeverityLevel } from 'applicationinsights/out/Declarations/Contracts';\nimport axios from 'axios';\nimport { merge } from 'lodash';\nimport { useStaticRendering } from 'mobx-react';\nimport { dirname, join, resolve } from 'path';\nimport { isDAPIOptimizationDisabled, THEME_MODULE } from '../_server/Definition/moduleDefinition';\nimport { initPrevivews } from '../_server/Definition/previewDefinition';\nimport { HttpsRequestInterceptor } from '../_server/inteceptors/https-agent-inteceptor';\nimport keystonePaths from '../paths';\nimport { ResourceManager } from '../resources/resource-manager';\nimport sdkAppSettings from '../settings/app.settings.json';\nimport { getModuleName } from '../utils/helpers';\nimport {\n    getAppSecretsCacheSetings,\n    getCacheSettings,\n    getConnectorSettings,\n    getExperimentsCacheSettings,\n    getGeoLookupCacheSettings,\n    getPlatformSettingsSync\n} from '../utils/platform-utils';\nimport { SecretManager } from '../utils/secret-manager';\nimport { initializeApp } from './initialization';\nimport { IBinding, IModuleBinder, IModuleDefinition, IMSDyn365CommerceExtension, IMSDyn365CommerceWithPrototype } from './models';\nimport { createComponent } from './render-component';\n\nconst APP_SETTINGS = 'app.settings';\nconst IMAGE_SETTINGS = 'image.settings';\nconst THEME_SETTINGS = 'theme.settings';\nconst ROOT_SITE = '__root_site__';\nconst CONNECTOR_SETTINGS = 'connector.settings';\nconst PLATFORM_SETTINGS = 'platform.settings';\n\n/**\n * @function {getAppSettings}   - Method to return merged object of both sdk and partner app settings\n */\nconst getAppSettings = async (bindings: IBinding) => {\n    const appSettings = {\n        app: <IAppSettings>{ config: {}, routes: {} },\n        msdyn365: { config: sdkAppSettings.config, contentSecurityPolicy: sdkAppSettings.contentSecurityPolicy }\n    };\n\n    const partnerAppSettings = <IAppSettings>await safeReadJson(resolve(keystonePaths.KEYSTONE_APP_SETTINGS_DIR, `${APP_SETTINGS}.json`));\n\n    if (partnerAppSettings) {\n        appSettings.app = partnerAppSettings;\n    }\n\n    if (sdkAppSettings.routes) {\n        appSettings.app.routes = merge({}, sdkAppSettings.routes, appSettings.app.routes || {});\n    }\n\n    if (msdyn365Commerce.themes && msdyn365Commerce.themes.themes) {\n        appSettings.app.themes = merge({}, msdyn365Commerce.themes.themes, appSettings.app.themes || {});\n    }\n\n    // Add friendly name to theme where applicable\n    const themeModules = isDAPIOptimizationDisabled() ? msdyn365Commerce.themeModules : bindings.dapi.themes;\n    themeModules.forEach((themeModule: IThemeModule) => {\n        if (appSettings.app.themes && appSettings.app.themes[themeModule.name] && !appSettings.app.themes[themeModule.name].friendlyName) {\n            appSettings.app.themes[themeModule.name].friendlyName = themeModule.friendlyName;\n        }\n    });\n\n    return appSettings;\n};\n\n/**\n * @function {getImageSettings}   - Method to return merged object of both sdk and partner image settings\n */\nconst getImageSettings = async () => {\n    return <IPartnerImageSettings>await safeReadJson(resolve(keystonePaths.KEYSTONE_APP_SETTINGS_DIR, `${IMAGE_SETTINGS}.json`)) || {};\n};\n\n/**\n * @function {getThemeSettings}   - Method to return partner theme settings\n */\nconst getThemeSettings = async (platformSettings: IPlatformSettings) => {\n    const themeSettings = {};\n    // theme settings defined prior to serviceability\n    const partnerThemeSettings =\n        <IPartnerImageSettings>await safeReadJson(resolve(keystonePaths.KEYSTONE_APP_SETTINGS_DIR, `${THEME_SETTINGS}.json`)) || {};\n\n    if (!isDAPIOptimizationDisabled(platformSettings)) {\n        const generatedThemeSettings = await safeReadJson(resolve(keystonePaths.KEYSTONE_APP_SETTINGS_DAPI_FILEPATH));\n        return {\n            default: partnerThemeSettings,\n            ...generatedThemeSettings\n        };\n    }\n\n    const allModulesBinder = (await (<IGeneric<IAny>>msdyn365Commerce).getAllModuleBinder()) || [];\n    const themeModules = <IModuleBinder[]>allModulesBinder.filter(def => (<IModuleBinder>def).$type === 'themeModule');\n    await Promise.all(\n        themeModules.map(async themeModule => {\n            let settings = {};\n            if (themeModule.themeSettings) {\n                settings = (await safeReadJson(resolve(themeModule.moduleDirectory, themeModule.themeSettings))) || {};\n            }\n\n            if (themeModule.parentDefinitionPath) {\n                const parentModuleName = getModuleName(themeModule.parentDefinitionPath);\n                const parentSettingsPath = join(\n                    dirname(themeModule.parentDefinitionPath),\n                    `${parentModuleName}${THEME_MODULE.SETTINGS_FILE}`\n                );\n                if (await safeFileExists(parentSettingsPath)) {\n                    settings = merge(settings, (await safeReadJson(parentSettingsPath)) || {});\n                }\n            }\n\n            let overrideSettings = {};\n            const overrideSettingsFile = resolve(\n                keystonePaths.KEYSTONE_THEMES_DIR,\n                themeModule.name,\n                `${themeModule.name}${THEME_MODULE.SETTINGS_FILE}`\n            );\n            if (await safeFileExists(overrideSettingsFile)) {\n                overrideSettings = (await safeReadJson(overrideSettingsFile)) || {};\n            }\n\n            themeSettings[themeModule.name] = merge(settings, overrideSettings);\n        })\n    );\n\n    return {\n        default: partnerThemeSettings,\n        ...themeSettings\n    };\n};\n\nconst getPlatformSettings = async () => {\n    const platFormSettings = await safeReadJson<IPlatformSettings>(\n        resolve(keystonePaths.KEYSTONE_APP_SETTINGS_DIR, `${PLATFORM_SETTINGS}.json`)\n    );\n    return platFormSettings ? platFormSettings : {};\n};\n\nconst createAndGetConnectorCache = async (): Promise<ICache> => {\n    const experimentCacheSettings = getExperimentsCacheSettings();\n    const geoLookupCacheSettings = getGeoLookupCacheSettings();\n    let cacheSetting: ICacheSettings = getCacheSettings();\n    cacheSetting = merge({}, cacheSetting, experimentCacheSettings, geoLookupCacheSettings);\n    return new AppCache(cacheSetting);\n};\n\n/**\n * Creates and returns a refernce to the app cache used to store\n * RS access token and any C1 secrets\n */\nconst createAppSecretsCache = async (): Promise<ICache> => {\n    const cacheSettings = getAppSecretsCacheSetings();\n    return new AppCache(cacheSettings);\n};\n\n/**\n * During local development, we capture the secrets file stored locally\n * to read necessary secret values\n */\nconst getLocalSecretsFile = async (): Promise<IDictionary<string> | undefined> => {\n    let localSecrets: IDictionary<string> | undefined;\n    if (safeFileExistsSync(resolve(keystonePaths.KEYSTONE_SECRETS_DIR, `secrets.json`))) {\n        localSecrets = await safeReadJson<IDictionary<string>>(resolve(keystonePaths.KEYSTONE_SECRETS_DIR, `secrets.json`));\n    }\n    return localSecrets;\n};\n\n/**\n * During local development, read and store the credentials json file to mock user signed in behavior\n */\nconst getLocalCredentialsFile = async (): Promise<IDictionary<ILocalCredentials> | undefined> => {\n    let localCreds: IDictionary<ILocalCredentials> | undefined;\n    if (safeFileExistsSync(resolve(keystonePaths.KEYSTONE_SECRETS_DIR, `credentials.json`))) {\n        localCreds = await safeReadJson<IDictionary<ILocalCredentials>>(resolve(keystonePaths.KEYSTONE_SECRETS_DIR, `credentials.json`));\n    }\n    return localCreds;\n};\n\nconst getGeoLookupConnector = async (connectorSettings?: IConnectorSettings): Promise<IGeoLocationConnector | undefined> => {\n    if (connectorSettings && connectorSettings.geoLookup) {\n        const connectorSettingsForGeoLookup = connectorSettings.geoLookup;\n        const geoLookupProvider = <IGeoLookupProvider>(\n            // @ts-ignore - Compiler indicates that types of IMSDyn365CommerceExtension and MSDyn365Commerce do not overlap\n            // but typeof IMSDyn365CommerceWithPrototype = typeof MSDyn365Commerce & IPrototype\n            // See initialization.ts for an explanation of why we use prototype in conjunction with IMSDyn365CommerceWithPrototype\n            (<IMSDyn365CommerceExtension>msdyn365Commerce).getConnector(connectorSettingsForGeoLookup.name)?.provider\n        );\n        if (!geoLookupProvider) {\n            console.error(`No geoLookup connector registered with name ${connectorSettingsForGeoLookup.name}`);\n            appInsights.defaultClient.trackTrace({\n                message: `No geoLookup connector registered with name ${connectorSettingsForGeoLookup.name}`,\n                severity: SeverityLevel.Error\n            });\n            return undefined;\n        }\n        try {\n            const geoLookupProviderReady = await geoLookupProvider.initialize(connectorSettingsForGeoLookup.config);\n            if (!geoLookupProviderReady) {\n                console.error(\n                    `geoLookup connector registered with name ${connectorSettingsForGeoLookup.name} not initialized successfully`\n                );\n                appInsights.defaultClient.trackTrace({\n                    message: `geoLookup connector registered with name ${connectorSettingsForGeoLookup.name} not initialized successfully`,\n                    severity: SeverityLevel.Error\n                });\n                return undefined;\n            }\n        } catch (err) {\n            console.error(`geoLookup connector registered error ${err} with name ${connectorSettingsForGeoLookup.name}`);\n            appInsights.defaultClient.trackTrace({\n                message: `geoLookup connector registered error ${err} with name ${connectorSettingsForGeoLookup.name}`,\n                severity: SeverityLevel.Error\n            });\n            return undefined;\n        }\n\n        appInsights.defaultClient.trackTrace({\n            message: `Node server successfully registered and started geoLookup connector ${connectorSettingsForGeoLookup.name}`,\n            severity: SeverityLevel.Verbose\n        });\n\n        return { name: connectorSettingsForGeoLookup.name, provider: geoLookupProvider };\n    }\n    return undefined;\n};\n\nconst getExperimentaionConnector = async (\n    secretManager: ISecretManager,\n    connectorSettings?: IConnectorSettings\n): Promise<IExperimentationConnector | undefined> => {\n    if (connectorSettings && connectorSettings.experimentation) {\n        const connectorSettingsForExperimentation = connectorSettings.experimentation;\n\n        const experimentationProvider = <IExperimentationProvider>(\n            // @ts-ignore - Compiler indicates that types of IMSDyn365CommerceExtension and MSDyn365Commerce do not overlap\n            // but typeof IMSDyn365CommerceWithPrototype = typeof MSDyn365Commerce & IPrototype\n            // See initialization.ts for an explanation of why we use prototype in conjunction with IMSDyn365CommerceWithPrototype\n            (<IMSDyn365CommerceExtension>msdyn365Commerce).getConnector(connectorSettingsForExperimentation.name)?.provider\n        );\n        if (experimentationProvider) {\n            try {\n                const experimentReady = await experimentationProvider.initialize(connectorSettingsForExperimentation.config, secretManager);\n                if (!experimentReady) {\n                    console.error(\n                        `experimentation connector registered with name ${connectorSettingsForExperimentation.name} not initialized successfully`\n                    );\n                    appInsights.defaultClient.trackTrace({\n                        message: `experimentation connector registered with name ${connectorSettingsForExperimentation.name} not initialized successfully`,\n                        severity: SeverityLevel.Error\n                    });\n                    return undefined;\n                }\n            } catch (err) {\n                console.error(`experimentation connector registered error ${err} with name ${connectorSettingsForExperimentation.name}`);\n                appInsights.defaultClient.trackTrace({\n                    message: `experimentation connector registered error ${err} with name ${connectorSettingsForExperimentation.name}`,\n                    severity: SeverityLevel.Error\n                });\n                return undefined;\n            }\n            appInsights.defaultClient.trackTrace({\n                message: `Node server successfully registered and started experimentation connector ${connectorSettingsForExperimentation.name}`,\n                severity: SeverityLevel.Verbose\n            });\n            return { name: connectorSettingsForExperimentation.name, provider: experimentationProvider };\n        }\n        console.error(`No experimentation connector registered with name ${connectorSettingsForExperimentation.name}`);\n        appInsights.defaultClient.trackTrace({\n            message: `No experimentation connector registered with name ${connectorSettingsForExperimentation.name}`,\n            severity: SeverityLevel.Error\n        });\n        return undefined;\n    }\n    return undefined;\n};\n\nconst getDAPIBindings = async () => {\n    return {\n        modules: (await safeReadJson<{}>(keystonePaths.KEYSTONE_APP_DAPI_FILEPATH)) || {},\n        themes: (await safeReadJson<IThemeModule[]>(keystonePaths.KEYSTONE_APP_THEMES_DAPI_FILEPATH)) || []\n    };\n};\n\n/**\n * @function {getAppCacheForRootSite} - Method to return app cache instance for root site\n */\nconst getAppCacheForRootSite = (): IDictionary<ICache> => {\n    const appCacheDictionary: IDictionary<ICache> = {};\n    appCacheDictionary[ROOT_SITE] = new AppCache(getCacheSettings());\n    return appCacheDictionary;\n};\n\nconst removeExcludedModues = (bindings: IBinding) => {\n    // remove excluded modules from binding\n    const platformSettings = getPlatformSettingsSync();\n    const excludedModules = platformSettings.excludedModules;\n    if (excludedModules && excludedModules.length > 0) {\n        for (const moduleName of excludedModules) {\n            delete bindings.modules[`${moduleName}`];\n        }\n    }\n};\n\n// tslint:disable:no-invalid-this\n// tslint:disable:max-func-body-length\nexport const initializeServerApp = async (bindings: IBinding) => {\n    bindings.dapi = await getDAPIBindings();\n    await initPrevivews();\n    removeExcludedModues(bindings);\n    initializeApp(bindings);\n    useStaticRendering(true);\n    axios.interceptors.request.use(HttpsRequestInterceptor);\n\n    const packageVersion = await safeReadJson(keystonePaths.KEYSTONE_APP_PACKAGE_VERSION);\n    const appSecretsCache = await createAppSecretsCache();\n    const platformSettings = await getPlatformSettings();\n    const cacheSetting = getCacheSettings();\n\n    // In local dev mode read local secrets file and credentials file\n    let localAppSecrets: IDictionary<string> | undefined;\n    let localCredentials: IDictionary<ILocalCredentials> | undefined;\n    if (process.env.NODE_ENV === 'development') {\n        localAppSecrets = await getLocalSecretsFile();\n        localCredentials = await getLocalCredentialsFile();\n    }\n    const connectorSettings = await getConnectorSettings();\n\n    const secretManager: ISecretManager = new SecretManager(appSecretsCache, localAppSecrets);\n    const appSettingsPromise = getAppSettings(bindings);\n    const imageSettingsPromise = getImageSettings();\n    const themeSettingsPromise = getThemeSettings(platformSettings);\n    const experimentationConnectorPromise = getExperimentaionConnector(secretManager, connectorSettings);\n    const geoLookupConnectorPromise = getGeoLookupConnector(connectorSettings);\n    const connectorCachePromise = createAndGetConnectorCache();\n    const [appSettings, imageSettings, themeSettings, experimentationConnector, connectorCache, geoLookupConnector] = await Promise.all([\n        appSettingsPromise,\n        imageSettingsPromise,\n        themeSettingsPromise,\n        experimentationConnectorPromise,\n        connectorCachePromise,\n        geoLookupConnectorPromise\n    ]);\n\n    const resourceManager = new ResourceManager();\n    await resourceManager.init(platformSettings);\n\n    (<IMSDyn365CommerceWithPrototype>MSDyn365Commerce).prototype.updatePrivateVariable = function(): void {\n        // @ts-ignore\n        this._buildVersion = packageVersion && packageVersion.buildVersion;\n        // @ts-ignore\n        this._resourceManager = resourceManager;\n        // @ts-ignore\n        this._appSettings = appSettings;\n        // @ts-ignore\n        this._imageSettings = imageSettings;\n        // @ts-ignore\n        this._themeSettings = themeSettings;\n        // @ts-ignore\n        this.createComponent = createComponent;\n        // @ts-ignore\n        this._connectorCache = connectorCache;\n        // @ts-ignore\n        this._secretManager = secretManager;\n        // @ts-ignore\n        this._experimentationConnector = experimentationConnector;\n        // @ts-ignore\n        this._platformSettings = platformSettings;\n        // @ts-ignore\n        this._localCredentials = localCredentials;\n        // @ts-ignore\n        this._geoLookupConnector = geoLookupConnector;\n    };\n\n    (<IMSDyn365CommerceWithPrototype>MSDyn365Commerce).prototype.appCache = getAppCacheForRootSite();\n\n    (<IMSDyn365CommerceWithPrototype>MSDyn365Commerce).prototype.getAppCache = function(requestContext: IRequestContext): ICache {\n        if (!requestContext || !requestContext.apiSettings) {\n            return this.appCache[ROOT_SITE];\n        }\n\n        const appCacheKey = `${requestContext.apiSettings.baseUrl}-${requestContext.apiSettings.channelId}`;\n        if (!this.appCache[appCacheKey]) {\n            this.appCache[appCacheKey] = new AppCache(getCacheSettings());\n        }\n        const appCache = <AppCache>this.appCache[appCacheKey];\n        appCache.setRequestContext(requestContext);\n        return appCache;\n    };\n\n    (<IGeneric<IAny>>msdyn365Commerce).updatePrivateVariable();\n\n    appInsights.defaultClient.trackTrace({\n        message: `Server starting on PORT ${process.env.PORT || 3000}`,\n        properties: {\n            'ISV packages': `${platformSettings[`namespaceExtensions`] ? JSON.stringify(platformSettings[`namespaceExtensions`]) : 'None'}`,\n            'Platform Settings': `${platformSettings ? JSON.stringify(platformSettings) : 'No platform.settings.json file'}`,\n            'Cache Settings': `${cacheSetting ? JSON.stringify(cacheSetting) : 'No cache.settings.json file'}`\n        },\n        severity: SeverityLevel.Verbose\n    });\n};\n"]}