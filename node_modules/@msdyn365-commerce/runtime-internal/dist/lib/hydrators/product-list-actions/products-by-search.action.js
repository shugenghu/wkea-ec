/*!
 * Copyright (c) Microsoft Corporation.
 * All rights reserved. See LICENSE in the project root for license information.
 */
import { createObservableDataAction } from '@msdyn365-commerce/action-internal';
import { searchByTextAsync } from '@msdyn365-commerce/retail-proxy/dist/DataActions/ProductsDataActions.g';
import { getProductImageUrls } from '../../utils/product-list-utils';
export const getProductsBySearchList = async (input, context) => {
    let searchText;
    if (input.listMetadata.searchText) {
        searchText = input.listMetadata.searchText;
    }
    else if (context.requestContext.query && context.requestContext.query && context.requestContext.query.q) {
        searchText = context.requestContext.query.q;
    }
    else {
        throw new Error('Search text missing for ProductsBySearch. Query string ?q={searchText} or search text in list meta data must be present.');
    }
    return searchByTextAsync({ callerContext: context, queryResultSettings: { Paging: { Top: input.listMetadata.pageSize || 10 } } }, input.channelId, input.catalogId, searchText)
        .then((products) => {
        context.telemetry.debug('Products returned by productsBySearch action:', products);
        return getProductImageUrls(products, context.requestContext.apiSettings);
    })
        .catch(error => {
        context.telemetry.error(`Error running productsBySearch action: ${error}`);
        throw new Error(error);
    });
};
export const getProductsBySearchListAction = createObservableDataAction({
    action: getProductsBySearchList,
    id: '@msdyn365-commerce/products-by-search'
});
//# sourceMappingURL=products-by-search.action.js.map