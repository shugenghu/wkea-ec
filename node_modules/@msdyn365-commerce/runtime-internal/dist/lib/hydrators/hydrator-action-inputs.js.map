{"version":3,"file":"hydrator-action-inputs.js","sourceRoot":"","sources":["../../../src/hydrators/hydrator-action-inputs.ts"],"names":[],"mappings":"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","sourcesContent":["/*!\n * Copyright (c) Microsoft Corporation.\n * All rights reserved. See LICENSE in the project root for license information.\n */\nimport { CacheType, IActionContext, IActionInput, ICommerceApiSettings } from '@msdyn365-commerce/core-internal';\nimport { getCacheKey } from '../utils/link-utils';\n\n/**\n * Links coming from OneRF will have the following structure\n */\nexport interface IServerLink {\n    type: string;\n    productId?: number;\n    categoryId?: number;\n    destinationUrl?: string;\n    error?: string;\n    // tslint:disable-next-line: no-any\n    [x: string]: any;\n}\n\n/**\n * Used by the URL builder to construct the formatted\n * category or product link\n */\nexport interface IPageTypeContext {\n    category?: {\n        Slug: string;\n        RecordId: number;\n    };\n    product?: {\n        Name: string;\n        RecordId: number;\n    };\n    // tslint:disable-next-line: no-any needed because type pageTypeContext in url builder allows additional properties\n    [x: string]: any;\n}\n\n/**\n * Input Class for ProductLink related actions\n */\nexport class ProductLinkInput implements IActionInput {\n    public categoryId: number;\n    public productId: number | undefined;\n    public channelId: number;\n    private apiSettings: ICommerceApiSettings;\n\n    constructor(apiSettings: ICommerceApiSettings, categoryId: number, productId?: number) {\n        this.categoryId = categoryId;\n        this.productId = productId;\n        this.channelId = apiSettings.channelId;\n        this.apiSettings = apiSettings;\n    }\n\n    public getCacheKey = () => `${getCacheKey(this.apiSettings)}-${this.categoryId}-${this.productId}`;\n    public getCacheObjectType = () => 'ProductLink';\n    public dataCacheType = (): CacheType => 'application';\n}\n\n/**\n * Input Class for CategoryLink related actions\n */\nexport class CategoryLinkInput implements IActionInput {\n    public categoryId: number;\n    public channelId: number;\n    private apiSettings: ICommerceApiSettings;\n\n    constructor(apiSettings: ICommerceApiSettings, categoryId: number) {\n        this.categoryId = categoryId;\n        this.channelId = apiSettings.channelId;\n        this.apiSettings = apiSettings;\n    }\n\n    public getCacheKey = () => `${getCacheKey(this.apiSettings)}-${this.categoryId}`;\n    public getCacheObjectType = () => 'CategoryLink';\n    public dataCacheType = (): CacheType => 'application';\n}\n\n/**\n * ProductList metadata passed from CMS used to hydrate product list\n */\nexport interface IProductListMetaData {\n    listType: string;\n    productIds?: number[];\n    categoryIds?: number[];\n    searchText?: string;\n    includePageContext?: boolean;\n    includeDescendentCategoryChildren?: boolean;\n    includeCart?: boolean;\n    personalization?: boolean;\n    recommendationListId?: string;\n    relationshipId?: string;\n    pageSize?: number;\n}\n\n// Enum Representing all supported ProductList types\nexport enum ProductListType {\n    algo,\n    editorial,\n    productByCategory,\n    productBySearch,\n    recommendation,\n    relatedProducts\n}\n\n/**\n * Input Class for ProductList related actions\n */\nexport class ProductListInput implements IActionInput {\n    public listMetadata: IProductListMetaData;\n    public channelId: number;\n    public catalogId: number;\n    private _cacheType: CacheType;\n    private _cacheObjectType: string;\n    private _cacheKey: string;\n\n    constructor(listMetadata: IProductListMetaData, actionContext: IActionContext) {\n        const requestContext = actionContext.requestContext;\n\n        this.listMetadata = listMetadata;\n        this.catalogId = requestContext.apiSettings.catalogId;\n        this.channelId = requestContext.apiSettings.channelId;\n        this._cacheObjectType = `ProductList-${listMetadata.listType}`;\n\n        const query = requestContext.query || {};\n        const skipToken = query.skip;\n        const context = JSON.stringify(requestContext.urlTokens);\n        const locale = actionContext.requestContext.locale || 'unknown';\n        const baseCacheKey = `${this.channelId}-${this.catalogId}-${locale}-${JSON.stringify(listMetadata)}-${skipToken || ''}`;\n\n        switch (ProductListType[listMetadata.listType]) {\n            case ProductListType.productBySearch:\n                // application cache if not reading from context\n                this._cacheType = listMetadata.searchText ? 'application' : 'request';\n                this._cacheKey = listMetadata.searchText ? baseCacheKey : `${baseCacheKey}-${query.q || ''}`;\n                break;\n            case ProductListType.productByCategory:\n                this._cacheType = 'application';\n                this._cacheKey = listMetadata.categoryIds && listMetadata.categoryIds.length ? baseCacheKey : `${baseCacheKey}-${context}`;\n                break;\n            case ProductListType.relatedProducts:\n                this._cacheType = 'application';\n                this._cacheKey = listMetadata.productIds && listMetadata.productIds.length ? baseCacheKey : `${baseCacheKey}-${context}`;\n                break;\n            case ProductListType.editorial:\n            case ProductListType.algo:\n            case ProductListType.recommendation:\n            default:\n                this._cacheType = listMetadata.includeCart || listMetadata.personalization ? 'request' : 'application';\n                this._cacheKey = `${baseCacheKey}-${context}`;\n        }\n    }\n\n    public getCacheKey = () => this._cacheKey;\n    public getCacheObjectType = () => this._cacheObjectType;\n    public dataCacheType = (): CacheType => this._cacheType;\n}\n"]}