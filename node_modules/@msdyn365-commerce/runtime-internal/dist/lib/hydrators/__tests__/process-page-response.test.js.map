{"version":3,"file":"process-page-response.test.js","sourceRoot":"","sources":["../../../../src/hydrators/__tests__/process-page-response.test.ts"],"names":[],"mappings":"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","sourcesContent":["/*!\n * Copyright (c) Microsoft Corporation.\n * All rights reserved. See LICENSE in the project root for license information.\n */\n\nimport { buildMockActionContext, buildMockRequest } from '@msdyn365-commerce/core';\nimport { Telemetry } from '@msdyn365-commerce/telemetry-internal';\nimport * as fs from 'fs';\nimport 'jest';\nimport * as path from 'path';\nimport { getPageConfig } from '../../_server/parse-request';\n// @ts-ignore: compiler will complain that we aren't using these imports when in fact they are being used to mock return values\nimport { getPageTypeContextByIdAction } from '../link-actions/page-type-context-by-id';\nimport { processComplexDataTypesAsync } from '../process-page-response';\n\ndescribe('process-page-response tests', () => {\n    const queryParamsWithPreview = { preview: 'inprogress', locale: 'en-us', market: 'us', item: 'nodeserviceproxy:false' };\n\n    const requestContextWithSite = buildMockRequest({ sitePath: '/contoso' });\n    const requestContextWithSiteWithPreviewQueryParam = buildMockRequest({ sitePath: '/contoso', query: queryParamsWithPreview });\n    const actionContextWithSite = buildMockActionContext({ requestContext: requestContextWithSite });\n    const actionContextWithSiteWithPreviewQueryParam = buildMockActionContext({\n        requestContext: requestContextWithSiteWithPreviewQueryParam\n    });\n\n    describe('process links tests', () => {\n        const routeContext = {\n            product: {\n                Name: 'My Awesome Product',\n                RecordId: 2256223231321\n            },\n            category: {\n                Slug: 'cat-1/cat-2/cat-3',\n                RecordId: 1234\n            }\n        };\n\n        beforeEach(() => {\n            // @ts-ignore: Jest Mocking Confuses TS Complier\n            getPageTypeContextByIdAction = jest.fn().mockResolvedValue(routeContext);\n        });\n\n        it('replace link object with the constructed url given a page response', async () => {\n            const pageResponse = JSON.parse(\n                fs.readFileSync(path.resolve(__dirname, '../../_server/__mocks__/page-response.1.json')).toString()\n            );\n            getPageConfig(pageResponse, new Telemetry());\n\n            const complexPromises = processComplexDataTypesAsync(\n                false,\n                'server',\n                pageResponse.slots,\n                actionContextWithSiteWithPreviewQueryParam\n            );\n            if (complexPromises) {\n                await Promise.all(complexPromises);\n            }\n\n            expect(JSON.stringify(pageResponse, null, 4)).toMatchSnapshot();\n        });\n\n        it('replace link object with the constructed url given a page response with complex object', async () => {\n            const pageResponse = JSON.parse(\n                fs.readFileSync(path.resolve(__dirname, '../../_server/__mocks__/page-response.2.json')).toString()\n            );\n            getPageConfig(pageResponse, new Telemetry());\n\n            const complexPromises = processComplexDataTypesAsync(false, 'server', pageResponse.slots, actionContextWithSite);\n            if (complexPromises) {\n                await Promise.all(complexPromises);\n            }\n            expect(JSON.stringify(pageResponse, null, 4)).toMatchSnapshot();\n        });\n    });\n});\n"]}