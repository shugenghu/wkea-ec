{"version":3,"file":"session-storage-utils.test.js","sourceRoot":"","sources":["../../../../src/utils/__tests__/session-storage-utils.test.ts"],"names":[],"mappings":"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","sourcesContent":["/*!\n * Copyright (c) Microsoft Corporation.\n * All rights reserved. See LICENSE in the project root for license information.\n */\n\nimport msdyn365Commerce, { ICookieContextOptions } from '@msdyn365-commerce/core';\nimport { CookieContext } from '../cookie-utils';\nimport { SessionStorageContext } from '../session-storage-utils';\n\ndescribe('Session Storage Utilities', () => {\n    const cookieGetter = jest.fn();\n    const cookieSetter = jest.fn();\n    // workaround to allow cookies in jsdom when imitating client browser (document.cookie)\n    const createCookieContext = (contextArgs?: ICookieContextOptions) => {\n        const cookie: CookieContext = new CookieContext(contextArgs);\n        // tslint:disable-next-line\n        cookie['_cookies']['HAS_DOCUMENT_COOKIE'] = true;\n        return cookie;\n    };\n\n    const createSessionStorageContext = (cookieContext: CookieContext) => {\n        return new SessionStorageContext(cookieContext);\n    };\n\n    beforeAll(() => {\n        Object.defineProperty(document, 'cookie', {\n            get: cookieGetter,\n            set: cookieSetter\n        });\n    });\n\n    afterEach(() => {\n        cookieGetter.mockReset();\n        cookieSetter.mockReset();\n        sessionStorage.clear();\n        jest.clearAllMocks();\n    });\n\n    const mockCookieContext = createCookieContext({ isConsentRequired: false });\n    const mockSessionStorage = createSessionStorageContext(mockCookieContext);\n\n    describe('test get and set data from storage', () => {\n        it('gets and sets data from storage and validate the returned value', () => {\n            const key = '<testKey>';\n            const obj = { label: 'MyTestLabel', value: 'SomeValue' };\n\n            mockSessionStorage.setDataInStorage(key, obj);\n            expect(sessionStorage.setItem).toBeCalledTimes(1);\n            expect(sessionStorage.setItem).toBeCalledWith(key, `{\\\"label\\\":\\\"MyTestLabel\\\",\\\"value\\\":\\\"SomeValue\\\"}`);\n\n            const objFromStorage = mockSessionStorage.getDataFromStorage(key);\n            expect(sessionStorage.getItem).toBeCalledTimes(1);\n            expect(sessionStorage.getItem).toBeCalledWith(key);\n            expect(objFromStorage).toMatchObject(obj);\n        });\n\n        it('gets and sets data from storage with empty key and validate if it returns a empty object', () => {\n            const key = '';\n            const obj = { label: 'MyTestLabel', value: 'SomeValue' };\n\n            mockSessionStorage.setDataInStorage(key, obj);\n            expect(sessionStorage.setItem).toBeCalledTimes(0);\n\n            const objFromStorage = mockSessionStorage.getDataFromStorage(key);\n            expect(sessionStorage.getItem).toBeCalledTimes(0);\n            expect(objFromStorage).toMatchObject({});\n        });\n\n        it('gets and sets data from storage with non existent key and validate if it returns a empty object', () => {\n            const key = 'NonExistentKey';\n\n            const objFromStorage = mockSessionStorage.getDataFromStorage(key);\n            expect(sessionStorage.getItem).toBeCalledTimes(1);\n            expect(sessionStorage.getItem).toBeCalledWith(key);\n            expect(objFromStorage).toMatchObject({});\n        });\n    });\n\n    describe('test remove data from session storage', () => {\n        it('remove item when key is provided', () => {\n            const key1 = '<testKey1>';\n            const key2 = '<testKey2>';\n            const obj1 = { label: 'MyTestLabel', value: 'SomeValue' };\n            const obj2 = { label: 'MyOtherTestLabel', value: 'DifferentValue' };\n\n            mockSessionStorage.setDataInStorage(key1, obj1);\n            mockSessionStorage.setDataInStorage(key2, obj2);\n\n            mockSessionStorage.removeDataFromStorage(key1);\n            expect(sessionStorage.removeItem).toBeCalledTimes(1);\n            expect(sessionStorage.removeItem).toBeCalledWith(key1);\n\n            let objFromStorage = mockSessionStorage.getDataFromStorage(key1);\n            expect(objFromStorage).toMatchObject({});\n            objFromStorage = mockSessionStorage.getDataFromStorage(key2);\n            expect(objFromStorage).toMatchObject(obj2);\n        });\n\n        it('do not remove items when non existent key is provided', () => {\n            const key1 = '<testKey>';\n            const nonExistentKey = 'NonExistentKey';\n            const obj1 = { label: 'MyTestLabel', value: 'SomeValue' };\n\n            mockSessionStorage.setDataInStorage(key1, obj1);\n\n            mockSessionStorage.removeDataFromStorage(nonExistentKey);\n            expect(sessionStorage.removeItem).toBeCalledTimes(1);\n            expect(sessionStorage.removeItem).toBeCalledWith(nonExistentKey);\n\n            const objFromStorage = mockSessionStorage.getDataFromStorage(key1);\n            expect(objFromStorage).toMatchObject(obj1);\n        });\n    });\n\n    describe('test get and set checkout cart data from session storage', () => {\n        it('gets and sets checkout cart data in the session storage', () => {\n            const checkoutCartDataObj = { Id: 'cart', data: 'SomeData' };\n            const testKey = '<testKey>';\n            cookieGetter.mockReturnValue(`${msdyn365Commerce.checkoutCartCookie}=<checkout-cart-cookie-id>`);\n\n            mockSessionStorage.setCheckoutCartData(testKey, checkoutCartDataObj);\n            expect(sessionStorage.setItem).toBeCalledTimes(1);\n            expect(sessionStorage.setItem).toBeCalledWith(\n                `${msdyn365Commerce.checkoutCartKeyPrefix}-<checkout-cart-cookie-id>-${testKey}`,\n                `{\\\"Id\\\":\\\"cart\\\",\\\"data\\\":\\\"SomeData\\\"}`\n            );\n\n            const checkoutCartFromStorage = mockSessionStorage.getCheckoutCartData(testKey);\n            expect(sessionStorage.getItem).toBeCalledTimes(1);\n            expect(sessionStorage.getItem).toBeCalledWith(`${msdyn365Commerce.checkoutCartKeyPrefix}-<checkout-cart-cookie-id>-${testKey}`);\n            expect(checkoutCartFromStorage).toMatchObject(checkoutCartDataObj);\n        });\n\n        it('gets and sets checkout cart data in the session storage when there is not checkout cart cookie', () => {\n            const checkoutCartDataObj = { Id: 'cart', data: 'SomeData' };\n            const testKey = '<testKey>';\n            cookieGetter.mockReturnValue('');\n\n            mockSessionStorage.setCheckoutCartData(testKey, checkoutCartDataObj);\n            expect(sessionStorage.setItem).toBeCalledTimes(0);\n\n            const checkoutCartFromStorage = mockSessionStorage.getCheckoutCartData(testKey);\n            expect(sessionStorage.getItem).toBeCalledTimes(0);\n            expect(checkoutCartFromStorage).toMatchObject({});\n        });\n\n        it('gets and sets checkout cart data in the session storage with empty key', () => {\n            const checkoutCartDataObj = { Id: 'cart', data: 'SomeData' };\n            const testKey = '';\n            cookieGetter.mockReturnValue(`${msdyn365Commerce.checkoutCartCookie}=<checkout-cart-cookie-id>`);\n\n            mockSessionStorage.setCheckoutCartData(testKey, checkoutCartDataObj);\n            expect(sessionStorage.getItem).toBeCalledTimes(0);\n            expect(sessionStorage.setItem).toBeCalledTimes(0);\n\n            const checkoutCartFromStorage = mockSessionStorage.getCheckoutCartData(testKey);\n            expect(sessionStorage.getItem).toBeCalledTimes(0);\n            expect(checkoutCartFromStorage).toMatchObject({});\n        });\n\n        it('gets checkout cart data in the session storage with non existent data', () => {\n            const testKey = 'NonExistentKey';\n            cookieGetter.mockReturnValue(`${msdyn365Commerce.checkoutCartCookie}=<checkout-cart-cookie-id>`);\n\n            const checkoutCartFromStorage = mockSessionStorage.getCheckoutCartData(testKey);\n            expect(sessionStorage.getItem).toBeCalledTimes(1);\n            expect(sessionStorage.getItem).toBeCalledWith(`${msdyn365Commerce.checkoutCartKeyPrefix}-<checkout-cart-cookie-id>-${testKey}`);\n            expect(checkoutCartFromStorage).toMatchObject({});\n        });\n    });\n\n    describe('test remove checkout cart data from session storage', () => {\n        it('remove checkout cart data when key is provided', () => {\n            const key1 = '<testKey1>';\n            const key2 = '<testKey2>';\n            const checkoutCartObj1 = { id: 'cart1', value: 'SomeValue' };\n            const checkoutCartObj2 = { id: 'cart2', value: 'DifferentValue' };\n\n            cookieGetter.mockReturnValue(`${msdyn365Commerce.checkoutCartCookie}=<checkout-cart-cookie-id>`);\n            mockSessionStorage.setCheckoutCartData(key1, checkoutCartObj1);\n            mockSessionStorage.setCheckoutCartData(key2, checkoutCartObj2);\n\n            mockSessionStorage.removeCheckoutCartData(key1);\n            expect(sessionStorage.removeItem).toBeCalledTimes(1);\n            expect(sessionStorage.removeItem).toBeCalledWith(`${msdyn365Commerce.checkoutCartKeyPrefix}-<checkout-cart-cookie-id>-${key1}`);\n\n            let checkoutCartFromStorage = mockSessionStorage.getCheckoutCartData(key1);\n            expect(checkoutCartFromStorage).toMatchObject({});\n            checkoutCartFromStorage = mockSessionStorage.getCheckoutCartData(key2);\n            expect(checkoutCartFromStorage).toMatchObject(checkoutCartObj2);\n        });\n\n        it('remove all checkout cart data when no key is provided', () => {\n            const key1 = '<testKey1>';\n            const key2 = '<testKey2>';\n            const checkoutCartObj1 = { id: 'cart1', value: 'SomeValue' };\n            const checkoutCartObj2 = { id: 'cart2', value: 'DifferentValue' };\n\n            cookieGetter.mockReturnValue(`${msdyn365Commerce.checkoutCartCookie}=<checkout-cart-cookie-id>`);\n            mockSessionStorage.setCheckoutCartData(key1, checkoutCartObj1);\n            mockSessionStorage.setCheckoutCartData(key2, checkoutCartObj2);\n\n            mockSessionStorage.removeCheckoutCartData();\n            expect(sessionStorage.removeItem).toBeCalledTimes(2);\n            expect(sessionStorage.removeItem).toBeCalledWith(`${msdyn365Commerce.checkoutCartKeyPrefix}-<checkout-cart-cookie-id>-${key1}`);\n            expect(sessionStorage.removeItem).toBeCalledWith(`${msdyn365Commerce.checkoutCartKeyPrefix}-<checkout-cart-cookie-id>-${key2}`);\n\n            let checkoutCartFromStorage = mockSessionStorage.getCheckoutCartData(key1);\n            expect(checkoutCartFromStorage).toMatchObject({});\n            checkoutCartFromStorage = mockSessionStorage.getCheckoutCartData(key2);\n            expect(checkoutCartFromStorage).toMatchObject({});\n        });\n\n        it('do not remove checkout cart data when non existent key is provided', () => {\n            const key1 = '<testKey1>s';\n            const nonExistentKey = 'NonExistentKey';\n            const obj1 = { label: 'MyTestLabel', value: 'SomeValue' };\n\n            mockSessionStorage.setDataInStorage(key1, obj1);\n\n            mockSessionStorage.removeDataFromStorage(nonExistentKey);\n            expect(sessionStorage.removeItem).toBeCalledTimes(1);\n            expect(sessionStorage.removeItem).toBeCalledWith(nonExistentKey);\n\n            const objFromStorage = mockSessionStorage.getDataFromStorage(key1);\n            expect(objFromStorage).toMatchObject(obj1);\n        });\n    });\n});\n"]}