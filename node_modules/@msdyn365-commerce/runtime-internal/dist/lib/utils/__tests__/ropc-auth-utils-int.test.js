/**
 * @jest-environment node
 */
import 'jest';
import { getUserInformationROPC } from '../ropc-auth-utils';
describe('login scenario w/integration', () => {
    xit('login happy path w/integration', async () => {
        const credentials = {
            loginDomain: 'login.fabrikam.com',
            b2cTenant: 'rushmoreb2c',
            nativeApplicationId: 'af2b5746-95d9-412f-a4e9-ef9b19f32edc',
            ropcUserFlowName: 'B2C_1_ROPC_Sidd_Test',
            userImpersonationScopeURL: 'https://login.fabrikam.com/B2CAPI/user_impersonation',
            defaultUser: {
                name: 'default',
                email: 'xibiki4869@gomaild.com',
                password: 'test123!123'
            },
            additionalUsers: [
                {
                    name: 'test-user',
                    email: 'xibiki4869@gomaild.com',
                    password: 'test123!'
                }
            ]
        };
        // If this test fails but the tests in without integration pass it means the integration with Azure AD failed
        // Check to see if the test credentials are valid and the rest of the configuration is still valid
        await getUserInformationROPC(credentials, 'test-user');
        expect(credentials.accessToken).toBeDefined();
        expect(credentials.currentUser).toBe('test-user');
        expect(credentials.expiryDate).toBeDefined();
    });
});
//# sourceMappingURL=ropc-auth-utils-int.test.js.map