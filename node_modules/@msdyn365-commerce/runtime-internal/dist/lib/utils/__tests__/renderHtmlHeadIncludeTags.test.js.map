{"version":3,"file":"renderHtmlHeadIncludeTags.test.js","sourceRoot":"","sources":["../../../../src/utils/__tests__/renderHtmlHeadIncludeTags.test.ts"],"names":[],"mappings":"AAAA;;;GAGG;AAGH,OAAO,MAAM,CAAC;AAGd,OAAO,KAAK,MAAM,OAAO,CAAC;AAC1B,OAAO,EAAE,UAAU,EAAE,MAAM,oBAAoB,CAAC;AAEhD,QAAQ,CAAC,4BAA4B,EAAE,GAAG,EAAE;IACxC,EAAE,CAAC,kDAAkD,EAAE,KAAK,IAAI,EAAE;QAC9D,MAAM,YAAY,GAAG,KAAK,CAAC,aAAa,CAAC,QAAQ,EAAC,EAAE,EAAC,MAAM,CAAC,CAAC;QAC7D,MAAM,cAAc,GAAG,KAAK,CAAC,aAAa,CAAC,QAAQ,EAAC,EAAC,GAAG,EAAC,SAAS,EAAC,CAAC,CAAC;QACrE,MAAM,SAAS,GAAG,KAAK,CAAC,aAAa,CAAC,MAAM,EAAC,EAAC,GAAG,EAAC,SAAS,EAAC,CAAC,CAAC;QAC9D,6BAA6B;QAC7B,MAAM,kBAAkB,GAAG,UAAU,CAAC,CAAC,YAAY,EAAE,cAAc,EAAE,SAAS,CAAC,CAAC,CAAC;QACjF,MAAM,CAAC,kBAAkB,CAAC,CAAC,IAAI,CAAC,iIAAiI,CAAC,CAAC;QAEnK,0BAA0B;QAC1B,MAAM,gBAAgB,GAAG,UAAU,CAAC,CAAC,YAAY,EAAE,cAAc,EAAE,SAAS,CAAC,EAAE,MAAM,CAAC,CAAC;QACvF,MAAM,CAAC,gBAAgB,CAAC,CAAC,IAAI,CAAC,4IAA4I,CAAC,CAAC;IAChL,CAAC,CAAC,CAAC;AACP,CAAC,CAAC,CAAC","sourcesContent":["/*!\n * Copyright (c) Microsoft Corporation.\n * All rights reserved. See LICENSE in the project root for license information.\n */\n\nimport * as fs from 'fs-extra';\nimport 'jest';\nimport * as path from 'path';\n\nimport React from 'react';\nimport { renderTags } from '../base-page-utils';\n\ndescribe('Render htmlHeadIncludeTags', () => {\n    it('verify the nonce token is added to inline script', async () => {\n        const inlineScript = React.createElement('script',{},'asdf');\n        const externalScript = React.createElement('script',{src:'testSrc'});\n        const otherTags = React.createElement('meta',{src:'testSrc'});\n        // render tags without nonce.\n        const resultWithoutNonce = renderTags([inlineScript, externalScript, otherTags]);\n        expect(resultWithoutNonce).toBe('<script data-reactroot=\"\">asdf</script><script src=\"testSrc\" data-reactroot=\"\"></script><meta src=\"testSrc\" data-reactroot=\"\"/>');\n\n        // render tags with nonce.\n        const resultWithtNonce = renderTags([inlineScript, externalScript, otherTags], 'hash');\n        expect(resultWithtNonce).toBe('<script nonce=hash data-reactroot=\"\">asdf</script><script src=\"testSrc\" data-reactroot=\"\"></script><meta src=\"testSrc\" data-reactroot=\"\"/>');\n    });\n});\n"]}