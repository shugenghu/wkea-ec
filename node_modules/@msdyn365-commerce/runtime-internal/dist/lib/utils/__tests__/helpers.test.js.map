{"version":3,"file":"helpers.test.js","sourceRoot":"","sources":["../../../../src/utils/__tests__/helpers.test.tsx"],"names":[],"mappings":"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","sourcesContent":["/*!\n * Copyright (c) Microsoft Corporation.\n * All rights reserved. See LICENSE in the project root for license information.\n */\n\n// tslint:disable:react-no-dangerous-html -- intentionally set inner html\nimport { IParsedQSP, SDK_FRAGMENT_NAME } from '@msdyn365-commerce/core-internal';\nimport 'jest';\nimport * as React from 'react';\nimport { renderToString } from 'react-dom/server';\nimport { isTruthy, parseItemQSP, parseToQSPObject, patchedRenderToString } from '../helpers';\n\ntype TTruthy = number | boolean | string | undefined | null;\n\ndescribe('helpers', () => {\n    describe('patchedRenderToString', () => {\n        it('properly replaces tag', () => {\n            // arrange\n            const expectedOutput = '<div>Hello world</div>';\n            const element = React.createElement(SDK_FRAGMENT_NAME, { dangerouslySetInnerHTML: { __html: expectedOutput } });\n\n            // act\n            const defaultResult = renderToString(element);\n            const patchedResult = patchedRenderToString(element, false);\n\n            // assert\n            expect(defaultResult).not.toEqual(patchedResult);\n            expect(patchedResult).toEqual(expectedOutput);\n        });\n        it('skips other output', () => {\n            // arrange\n            const inputElement = <div>hello world</div>;\n\n            // act\n            const baselineResult = renderToString(inputElement);\n            const patchedResult = patchedRenderToString(inputElement, false);\n\n            // assert -- if baseline changed, then snapshot & functions should be re-evaluated\n            expect(baselineResult).toMatchSnapshot('renderToString baseline');\n            expect(patchedResult).toMatchSnapshot('patched');\n            expect(baselineResult).toEqual(patchedResult);\n        });\n    });\n\n    describe('isTruthy', () => {\n        it('detects truthy values correctly', () => {\n            const truthyValues = [1, '1', true, 'true', 'yes', 'YEs', 'TRue'];\n            truthyValues.forEach((value: TTruthy) => expect(isTruthy(value)).toBe(true));\n        });\n        it('detects falsy values correctly', () => {\n            const truthyValues = [0, '0', false, 'false', null, undefined, 'no', 'FAlse', ''];\n            truthyValues.forEach((value: TTruthy) => expect(isTruthy(value)).toBe(false));\n        });\n    });\n    describe('parseToQSPObject', () => {\n        it('parses valid falsy value successfully', () => {\n            const qsp = 'somevalidqspvalue';\n            const result = parseToQSPObject(qsp);\n            const expectedResult: IParsedQSP<string> = { hasValue: true, isTruthy: true, value: qsp };\n            expect(result).toEqual(expectedResult);\n        });\n        it('parses valid truthy value successfully', () => {\n            const qsp = 'true';\n            const result = parseToQSPObject(qsp);\n            const expectedResult: IParsedQSP<string> = { hasValue: true, isTruthy: true, value: qsp };\n            expect(result).toEqual(expectedResult);\n        });\n        it('parses undefined successfully', () => {\n            const qsp = undefined;\n            const result = parseToQSPObject(qsp);\n            const expectedResult: IParsedQSP<string> = { hasValue: false, isTruthy: false, value: qsp };\n            expect(result).toEqual(expectedResult);\n        });\n    });\n    describe('parseItemQSP', () => {\n        it('detects single valid flag', () => {\n            const qsp = encodeURIComponent('debug:true');\n            const result = parseItemQSP(qsp);\n            expect(result).toEqual({ debug: 'true' });\n        });\n\n        it('detects multiple valid flags', () => {\n            const qsp = encodeURIComponent('debug:false,otherarg:3,foobar:yes');\n            const result = parseItemQSP(qsp);\n            expect(result).toEqual({ debug: 'false', otherarg: '3', foobar: 'yes' });\n        });\n\n        it('handles undefined gracefully', () => {\n            const result = parseItemQSP(undefined);\n            expect(result).toEqual({});\n        });\n\n        it('handles null gracefully', () => {\n            const result = parseItemQSP(null);\n            expect(result).toEqual({});\n        });\n\n        it('handles bad arguments', () => {\n            const qsp = encodeURIComponent('debug:,,');\n            const result = parseItemQSP(qsp);\n            expect(result).toEqual({});\n        });\n\n        it('handles mix of bad & valid arguments', () => {\n            const qsp = encodeURIComponent('debug:true,,foo=12:');\n            const result = parseItemQSP(qsp);\n            expect(result).toEqual({ debug: 'true' });\n        });\n    });\n});\n"]}