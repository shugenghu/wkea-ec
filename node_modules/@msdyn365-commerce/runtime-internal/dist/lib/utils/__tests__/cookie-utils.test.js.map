{"version":3,"file":"cookie-utils.test.js","sourceRoot":"","sources":["../../../../src/utils/__tests__/cookie-utils.test.ts"],"names":[],"mappings":"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","sourcesContent":["/*!\n * Copyright (c) Microsoft Corporation.\n * All rights reserved. See LICENSE in the project root for license information.\n */\n\nimport msdyn365Commerce, { ICookieContextOptions, ICookieSetOptions } from '@msdyn365-commerce/core';\nimport { CookieContext } from '../cookie-utils';\n\ndescribe('Cookie Utilities', () => {\n    const cookieGetter = jest.fn();\n    const cookieSetter = jest.fn();\n    // workaround to allow cookies in jsdom when imitating client browser (document.cookie)\n    const createCookieContext = (contextArgs?: ICookieContextOptions) => {\n        const cookie: CookieContext = new CookieContext(contextArgs);\n        // tslint:disable-next-line\n        cookie['_cookies']['HAS_DOCUMENT_COOKIE'] = true;\n        return cookie;\n    };\n\n    beforeAll(() => {\n        Object.defineProperty(document, 'cookie', {\n            get: cookieGetter,\n            set: cookieSetter\n        });\n    });\n\n    afterEach(() => {\n        cookieGetter.mockReset();\n        cookieSetter.mockReset();\n    });\n\n    describe('test cart cookie utilities', () => {\n        const mockCookieContext = createCookieContext({ isConsentRequired: false });\n        describe('test get cart cookie function', () => {\n            it('returns default value of empty string when cookie context does not contain cart cookie', () => {\n                cookieGetter.mockReturnValue('');\n                expect(mockCookieContext.getCartCookie()).toBe('');\n            });\n\n            it('returns cart cookie value when cookie context contains cart cookie', () => {\n                cookieGetter.mockReturnValue(`${msdyn365Commerce.CartCookie}=cart-cookie-value`);\n                expect(mockCookieContext.getCartCookie()).toBe('cart-cookie-value');\n            });\n        });\n\n        describe('test set cart cookie function', () => {\n            it('sets the cart cookie as a session cookie', () => {\n                const constantDate = new Date();\n                jest.spyOn(global.Date, 'now').mockImplementationOnce(() => constantDate.valueOf());\n                const isAuthenticated = false;\n                mockCookieContext.setCartCookie({ Id: 'cart' }, isAuthenticated);\n                expect(cookieSetter).toBeCalled();\n                expect(cookieSetter).toBeCalledWith(`${msdyn365Commerce.CartCookie}=p%3Acart; Path=/; Secure`);\n            });\n\n            it('sets the cart cookie with an expiration time', () => {\n                const cookieContext = createCookieContext({ isConsentRequired: false, cartExpirationInDays: 365 });\n                const constantDate = new Date();\n                jest.spyOn(global.Date, 'now').mockImplementationOnce(() => constantDate.valueOf());\n                const expiryDate = new Date(new Date(constantDate.getTime()).setDate(constantDate.getDate() + 365));\n                const isAuthenticated = false;\n                cookieContext.setCartCookie({ Id: 'cart' }, isAuthenticated);\n                expect(cookieSetter).toBeCalled();\n                expect(cookieSetter).toBeCalledWith(\n                    `${msdyn365Commerce.CartCookie}=p%3Acart; Path=/; Expires=${expiryDate.toUTCString()}; Secure`\n                );\n            });\n        });\n    });\n\n    describe('test checkout cart cookie utilities', () => {\n        const mockCookieContext = createCookieContext({ isConsentRequired: false });\n        describe('test get checkout cart cookie function', () => {\n            it('returns default value of empty string when cookie context does not contain checkout cart cookie', () => {\n                cookieGetter.mockReturnValue('');\n                expect(mockCookieContext.getCheckoutCartCookie()).toBe('');\n            });\n\n            it('returns cart cookie value when cookie context contains cart cookie', () => {\n                cookieGetter.mockReturnValue(`${msdyn365Commerce.checkoutCartCookie}=checkout-cart-cookie-value`);\n                expect(mockCookieContext.getCheckoutCartCookie()).toBe('checkout-cart-cookie-value');\n            });\n        });\n\n        describe('test set checkout cart cookie function', () => {\n            it('sets the checkout cart cookie as a session cookie', () => {\n                const constantDate = new Date();\n                jest.spyOn(global.Date, 'now').mockImplementationOnce(() => constantDate.valueOf());\n                const isAuthenticated = false;\n                mockCookieContext.setCheckoutCartCookie({ Id: 'cart' }, isAuthenticated);\n                expect(cookieSetter).toBeCalled();\n                expect(cookieSetter).toBeCalledWith(`${msdyn365Commerce.checkoutCartCookie}=p%3Acart; Path=/; Secure`);\n            });\n\n            it('sets the checkout cart cookie with an expiration time', () => {\n                const constantDate = new Date();\n                jest.spyOn(global.Date, 'now')\n                    .mockImplementationOnce(() => constantDate.valueOf())\n                    .mockImplementationOnce(() => constantDate.valueOf());\n                const cookieContext = createCookieContext({ isConsentRequired: false, cartExpirationInDays: 365 });\n                const expiryDate = new Date(Date.now() + 365 * 86400000);\n                const isAuthenticated = false;\n                cookieContext.setCheckoutCartCookie({ Id: 'cart' }, isAuthenticated);\n                expect(cookieSetter).toBeCalled();\n                expect(cookieSetter).toBeCalledWith(\n                    `${msdyn365Commerce.checkoutCartCookie}=p%3Acart; Path=/; Expires=${expiryDate.toUTCString()}; Secure`\n                );\n            });\n        });\n\n        describe('test remove checkout cart cookie function', () => {\n            it('validate if remove method is called with expected checkout cart cookie key', () => {\n                // tslint:disable-next-line:no-string-literal\n                const removeSpy = jest.spyOn(mockCookieContext['_cookies'], 'remove');\n                mockCookieContext.removeCheckoutCartCookie();\n                expect(removeSpy).toBeCalledWith(msdyn365Commerce.checkoutCartCookie, { path: '/' });\n            });\n        });\n    });\n\n    describe('test set cookie consent functionality', () => {\n        it('sets the consent cookie', () => {\n            const mockCookieContext = createCookieContext({ isConsentRequired: false });\n            mockCookieContext.setConsentCookie();\n            expect(mockCookieContext.clientCookie).toStrictEqual(['_msdyn365___ucc_=now; Path=/; Max-Age=31536000; Secure']);\n        });\n\n        it('sets the consent cookie without samesite', () => {\n            const mockCookieContext = createCookieContext({ isConsentRequired: false, sameSiteRequired: true });\n            mockCookieContext.setConsentCookie();\n            expect(mockCookieContext.clientCookie).toStrictEqual(['_msdyn365___ucc_=now; Path=/; Max-Age=31536000; Secure; SameSite=none']);\n        });\n    });\n\n    describe('Get Cookies', () => {\n        describe('Client side', () => {\n            it('Should be able to get cookies from the document', () => {\n                cookieGetter.mockReturnValue('SPECIAL-COOKIE=HELLOWORLD;');\n\n                let cookie = createCookieContext({ isConsentRequired: false });\n                expect(cookie.get<string>('SPECIAL-COOKIE').value).toBe('HELLOWORLD');\n                expect(cookie.get<string>('SPECIAL-COOKIE').status).toBe('FOUND');\n                expect(cookie.get('notdefined').value).toBeUndefined();\n                expect(cookie.get('notdefined').status).toBe('NOT_FOUND');\n\n                cookieGetter.mockReturnValue('SPECIAL-COOKIE=HELLOWORLD;');\n                cookie = createCookieContext();\n                expect(cookie.get<string>('SPECIAL-COOKIE').value).toBeUndefined();\n                expect(cookie.get<string>('SPECIAL-COOKIE').status).toBe('NO_CONSENT');\n                expect(cookie.get('notdefined').value).toBeUndefined();\n                expect(cookie.get('notdefined').status).toBe('NO_CONSENT');\n\n                cookieGetter.mockReturnValue('SPECIAL-COOKIE=HELLOWORLD;_msdyn365___ucc_=1');\n                cookie = createCookieContext();\n                expect(cookie.get<string>('SPECIAL-COOKIE').value).toBe('HELLOWORLD');\n                expect(cookie.get<string>('SPECIAL-COOKIE').status).toBe('FOUND');\n                expect(cookie.get('notdefined').value).toBeUndefined();\n                expect(cookie.get('notdefined').status).toBe('NOT_FOUND');\n            });\n\n            it('Should set cookies with correct options when sameSiteRequired: true', () => {\n                jest.spyOn(msdyn365Commerce, 'isBrowser', 'get').mockReturnValue(true);\n                const cookie = createCookieContext({ isConsentRequired: false, sameSiteRequired: true });\n                cookie.set('test-cookie', 'test-value');\n                expect(cookie.clientCookie).toStrictEqual(['test-cookie=test-value; Path=/; Secure; SameSite=none']);\n            });\n\n            it('Should set cookies with correct options when sameSiteRequired: false', () => {\n                jest.spyOn(msdyn365Commerce, 'isBrowser', 'get').mockReturnValue(true);\n                const cookie = createCookieContext({ isConsentRequired: false, sameSiteRequired: false });\n                const options: ICookieSetOptions = { sameSite: 'none', httpOnly: true };\n                cookie.set('test-cookie', 'test-value', options);\n                expect(cookie.clientCookie).toStrictEqual(['test-cookie=test-value; Path=/; Secure; HttpOnly']);\n            });\n        });\n\n        describe('Server Side', () => {\n            afterAll(() => {\n                jest.restoreAllMocks();\n            });\n\n            it('Should be able to get cookies from the request object', () => {\n                const mockReq = (cookieString: string) => {\n                    return {\n                        headers: {\n                            cookie: cookieString\n                        }\n                    };\n                };\n\n                // @ts-ignore\n                let cookie = new CookieContext({ req: mockReq('server-cookie=superduperhello;'), isConsentRequired: false });\n                expect(cookie.get<string>('server-cookie').value).toBe('superduperhello');\n                expect(cookie.get<string>('server-cookie').status).toBe('FOUND');\n                expect(cookie.get('notdefined').value).toBeUndefined();\n                expect(cookie.get('notdefined').status).toBe('NOT_FOUND');\n\n                // @ts-ignore\n                cookie = new CookieContext({ req: mockReq('server-cookie=superduperhello;') });\n                expect(cookie.get<string>('server-cookie').value).toBeUndefined();\n                expect(cookie.get<string>('server-cookie').status).toBe('NO_CONSENT');\n                expect(cookie.get('notdefined').value).toBeUndefined();\n                expect(cookie.get('notdefined').status).toBe('NO_CONSENT');\n\n                // @ts-ignore\n                cookie = new CookieContext({ req: mockReq('server-cookie=superduperhello;_msdyn365___ucc_=1') });\n                expect(cookie.get<string>('server-cookie').value).toBe('superduperhello');\n                expect(cookie.get<string>('server-cookie').status).toBe('FOUND');\n                expect(cookie.get('notdefined').value).toBeUndefined();\n                expect(cookie.get('notdefined').status).toBe('NOT_FOUND');\n            });\n\n            it('Should be able to store cookies server side and pass to platform', () => {\n                jest.spyOn(msdyn365Commerce, 'isBrowser', 'get').mockReturnValue(false);\n                const cookie = createCookieContext({ isConsentRequired: false, sameSiteRequired: true });\n\n                // No cookies set should return an empty array\n                expect(cookie.serverCookies).toStrictEqual([]);\n                // Single cookie test\n                cookie.set('server-cookie', 'superduperhello');\n                expect(cookie.serverCookies).toStrictEqual(['server-cookie=superduperhello; Path=/; Secure; SameSite=none']);\n                // Multiple cookies with options\n                cookie.set('server-cookie-2', 'superduperhello', { maxAge: 60, secure: true });\n                expect(cookie.serverCookies).toStrictEqual([\n                    'server-cookie=superduperhello; Path=/; Secure; SameSite=none',\n                    'server-cookie-2=superduperhello; Path=/; Max-Age=60; Secure; SameSite=none'\n                ]);\n            });\n        });\n    });\n});\n"]}