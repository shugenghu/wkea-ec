{"version":3,"file":"cookie-utils.js","sourceRoot":"","sources":["../../../src/utils/cookie-utils.ts"],"names":[],"mappings":"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","sourcesContent":["/*!\n * Copyright (c) Microsoft Corporation.\n * All rights reserved. See LICENSE in the project root for license information.\n */\n\nimport msdyn365Commerce, { ICookieContext, ICookieContextOptions, ICookieValue } from '@msdyn365-commerce/core-internal';\nimport { Cart } from '@msdyn365-commerce/retail-proxy';\nimport Cookies, { CookieSetOptions } from 'universal-cookie';\nimport { USER_CONSENT_GIVEN_EVENT } from '../consts';\n\nexport interface ICookieSetOptions extends CookieSetOptions {\n    isEssential?: boolean;\n}\n\nexport const enum CartTokenPrefix {\n    Auth = 't',\n    Anon = 'p'\n}\n\nconst UserConsentCookieName: string = '_msdyn365___ucc_';\n\n/**\n * Context for cookie handling\n *\n * @export\n * @class CookieContext\n */\nexport class CookieContext implements ICookieContext {\n    private _cookies: Cookies;\n    private _setCookieList: (() => void)[] = [];\n    private _serverCookieList: string[] = [];\n    private _clientCookieList: string[] = [];\n    private _options: ICookieContextOptions;\n\n    /**\n     * Returns a cookies class from the selected cookie store. If the express server\n     * is passed the cookie header will be used otherwise the global cookie store will be used.\n     * @param options Optional ICookieContextOptions.\n     */\n    constructor(options?: ICookieContextOptions) {\n        this._options = { isConsentRequired: true, ...options };\n        this._cookies = new Cookies(\n            this._options.req &&\n                this._options.req.headers &&\n                (this._options.req.headers['x-msdyn365-cookie'] || this._options.req.headers.cookie)\n        );\n    }\n\n    /**\n     * Get Cookie Value\n     *\n     * @param {string} cookieName - A string cookie name\n     * @return {ICookieValue} cookie value with status\n     */\n    public get = <T>(cookieName: string, isEssential?: boolean): ICookieValue<T> => {\n        if (isEssential || this.isConsentGiven()) {\n            const cookieValue = this._cookies.get(cookieName);\n            return { name: cookieName, value: <T>cookieValue, status: cookieValue ? 'FOUND' : 'NOT_FOUND' };\n        }\n\n        return { name: cookieName, value: undefined, status: 'NO_CONSENT' };\n    };\n\n    /**\n     * Set Cookie\n     *\n     * @param {string} cookieName - A string cookie name\n     * @param {T} cookieValue - A cookie value\n     * @param {ICookieSetOptions} options cookie options same as document.cookie\n     */\n    public set = <T>(cookieName: string, cookieValue: T, options?: ICookieSetOptions): void => {\n        const sameSiteRequiredFlag = this._options.sameSiteRequired;\n        let cookieOptionsWithDefaults: ICookieSetOptions;\n\n        cookieOptionsWithDefaults = { path: '/', secure: true, isEssential: false };\n\n        if (sameSiteRequiredFlag === true) {\n            cookieOptionsWithDefaults = { path: '/', secure: true, isEssential: false, sameSite: 'none', ...options };\n        } else {\n            if (options) {\n                const filteredOptions: ICookieSetOptions = {};\n                for (const [key, value] of Object.entries(options)) {\n                    if (key.toLowerCase() !== 'samesite') {\n                        filteredOptions[key] = value;\n                    }\n                }\n                cookieOptionsWithDefaults = { path: '/', secure: true, isEssential: false, ...filteredOptions };\n            }\n        }\n\n        if (cookieOptionsWithDefaults.isEssential || this.isConsentGiven()) {\n            // Set the cookie if client side\n            if (msdyn365Commerce.isBrowser) {\n                this._cookies.set(cookieName, cookieValue, cookieOptionsWithDefaults);\n                const clientCookieString = this.createCookieString(cookieName, cookieValue, cookieOptionsWithDefaults);\n                this._clientCookieList.push(clientCookieString);\n                return;\n            }\n            // If server side, convert the cookie into a header string and push it onto an array\n            const serverCookieString = this.createCookieString(cookieName, cookieValue, cookieOptionsWithDefaults);\n            this._serverCookieList.push(serverCookieString);\n        } else {\n            this._setCookieList.push(() => {\n                this._cookies.set(cookieName, cookieValue, cookieOptionsWithDefaults);\n            });\n        }\n    };\n\n    /**\n     * Gets the value stored in the cart cookie that contains the\n     * cart context and information. Returns an empty string if no such value exists.\n     *\n     */\n    public getCartCookie = (): string => {\n        return this.get<string>(msdyn365Commerce.CartCookie, true).value || '';\n    };\n\n    /**\n     * Sets the cart cookie with a new expiry time time of one year\n     * from the current date\n     *\n     * @param cart The object containing the current cart information\n     * @param isAuthenticated Boolean representing whether current user is authenticated or not\n     */\n    public setCartCookie = (cart: Cart, isAuthenticated: boolean): void => {\n        const prefix = isAuthenticated ? CartTokenPrefix.Auth : CartTokenPrefix.Anon;\n        const cartCookieOptions: ICookieSetOptions = { isEssential: true, secure: true, sameSite: 'none' };\n        if (this._options.cartExpirationInDays) {\n            // 86400000 is 1 day in ms\n            cartCookieOptions.expires = new Date(Date.now() + this._options.cartExpirationInDays * 86400000);\n        }\n        this.set<string>(msdyn365Commerce.CartCookie, `${prefix}:${cart.Id}`, cartCookieOptions);\n    };\n\n    /**\n     * Gets the value stored in the checkout cart cookie that contains the\n     * checkout cart context and information. Returns an empty string if no such value exists.\n     */\n    public getCheckoutCartCookie = (): string => {\n        return this.get<string>(msdyn365Commerce.checkoutCartCookie, true).value || '';\n    };\n\n    /**\n     * Sets the checkout cart cookie with a new expiry time time of one year\n     * from the current date\n     *\n     * @param cart The object containing the current checkout cart information\n     * @param isAuthenticated Boolean representing whether current user is authenticated or not\n     */\n    public setCheckoutCartCookie = (cart: Cart, isAuthenticated: boolean): void => {\n        const prefix = isAuthenticated ? CartTokenPrefix.Auth : CartTokenPrefix.Anon;\n        const checkoutCartCookieOptions: ICookieSetOptions = { isEssential: true, secure: true, sameSite: 'none' };\n        if (this._options.cartExpirationInDays) {\n            // 86400000 is 1 day in ms\n            checkoutCartCookieOptions.expires = new Date(Date.now() + this._options.cartExpirationInDays * 86400000);\n        }\n        this.set<string>(msdyn365Commerce.checkoutCartCookie, `${prefix}:${cart.Id}`, checkoutCartCookieOptions);\n    };\n\n    /**\n     * Remove checkout cart cookie.\n     */\n    public removeCheckoutCartCookie = (): void => {\n        this.remove(msdyn365Commerce.checkoutCartCookie);\n    };\n\n    /**\n     * Remove cookie\n     *\n     */\n    public remove = (cookieName: string): void => {\n        return this._cookies.remove(cookieName, { path: '/' });\n    };\n\n    /**\n     * Get whether consent is given or not\n     *\n     */\n    public isConsentGiven = (): boolean => {\n        return this._options.isConsentRequired ? !!this._cookies.get(UserConsentCookieName) : true;\n    };\n\n    /**\n     * Set consent cookie\n     *\n     */\n    public setConsentCookie = (): void => {\n        const sameSiteRequiredFlag = this._options.sameSiteRequired;\n        const cookieOptionsWithDefaults: ICookieSetOptions = { path: '/', maxAge: 31536000, secure: true };\n\n        if (sameSiteRequiredFlag) {\n            cookieOptionsWithDefaults.sameSite = 'none';\n        }\n\n        this._cookies.set(UserConsentCookieName, Date.now(), cookieOptionsWithDefaults);\n        const clientCookieString = this.createCookieString(UserConsentCookieName, 'now', cookieOptionsWithDefaults);\n        this._clientCookieList.push(clientCookieString);\n\n        this._setCookieList.forEach(setCookieFunction => setCookieFunction());\n        if (process.env.CURRENT_ENVIRONMENT === 'web') {\n            document.dispatchEvent(new Event(USER_CONSENT_GIVEN_EVENT));\n        }\n    };\n\n    /**\n     * Remove consent cookie\n     *\n     */\n    public deleteConsentCookie = (): void => {\n        return this._cookies.remove(UserConsentCookieName);\n    };\n\n    /**\n     * Returns the list of server side cookies to set\n     * only if currently executing server side\n     */\n    get serverCookies(): string[] {\n        // tslint:disable-next-line: prefer-object-spread\n        return msdyn365Commerce.isBrowser ? [] : Object.assign([], this._serverCookieList);\n    }\n\n    /**\n     * Returns the list of client side cookies to set\n     */\n    get clientCookie(): string[] {\n        // tslint:disable-next-line: prefer-object-spread\n        return msdyn365Commerce.isBrowser ? Object.assign([], this._clientCookieList) : [];\n    }\n\n    private createCookieString = <T>(cookieName: string, cookieValue: T, cookieOptionsWithDefaults: ICookieSetOptions): string => {\n        let cookieString = `${cookieName}=${cookieValue}`;\n        if (cookieOptionsWithDefaults) {\n            const optionsString = this._appendCookieOptions(cookieOptionsWithDefaults);\n            if (optionsString) {\n                cookieString = `${cookieString}; ${optionsString}`;\n            }\n        }\n        return cookieString;\n    };\n\n    private _appendCookieOptions = (options: ICookieSetOptions): string => {\n        const cookieOptions: string[] = [];\n        if (options.path) {\n            cookieOptions.push(`Path=${options.path}`);\n        }\n        if (options.expires) {\n            cookieOptions.push(`Expires=${options.expires}`);\n        }\n        if (options.maxAge) {\n            cookieOptions.push(`Max-Age=${options.maxAge}`);\n        }\n        if (options.domain) {\n            cookieOptions.push(`Domain=${options.domain}`);\n        }\n        if (options.secure) {\n            cookieOptions.push(`Secure`);\n        }\n        if (options.httpOnly) {\n            cookieOptions.push(`HttpOnly`);\n        }\n        if (options.sameSite) {\n            cookieOptions.push(`SameSite=${options.sameSite}`);\n        }\n        return cookieOptions.length !== 0 ? cookieOptions.join('; ') : '';\n    };\n}\n"]}