{"version":3,"file":"data-action-extension-helper.js","sourceRoot":"","sources":["../../../src/utils/data-action-extension-helper.ts"],"names":[],"mappings":"AAAA;;;GAGG;AAGH,OAAO,EAAE,eAAe,EAAE,MAAM,kBAAkB,CAAC;AAEnD,MAAM,yBAAyB,GAAG,CAAC,gBAAgB,EAAE,aAAa,EAAE,UAAU,EAAE,EAAE,CAC9E,gBAAgB;KACX,MAAM,CAAC,YAAY,CAAC,EAAE,CAAC,CAAC,aAAa,CAAC,IAAI,CAAC,SAAS,CAAC,EAAE,CAAC,YAAY,CAAC,UAAU,CAAC,KAAK,SAAS,CAAC,UAAU,CAAC,CAAC,CAAC;KAC5G,MAAM,CAAC,aAAa,CAAC,CAAC;AAE/B,MAAM,CAAC,MAAM,iCAAiC,GAAG,CAAC,oBAAmC,EAAE,UAAkB,EAAE,SAAiB,EAAE,EAAE;IAC5H,MAAM,WAAW,GAAG,eAAe,CAAC,SAAS,CAAC,CAAC;IAC/C,IAAI,CAAC,WAAW,IAAI,CAAC,oBAAoB,EAAE;QACvC,OAAO,oBAAoB,CAAC;KAC/B;IAED,IAAI,WAAW,CAAC,WAAW,CAAC,MAAM,KAAK,CAAC,EAAE;QACtC,OAAO,oBAAoB,CAAC;KAC/B;IACD,MAAM,yBAAyB,GAAG,WAAW,CAAC,WAAW,CAAC,MAAM,CAC5D,UAAU,CAAC,EAAE,CAAC,UAAU,CAAC,UAAU,IAAI,UAAU,CAAC,UAAU,KAAK,UAAU,CAC9E,CAAC;IAEF,MAAM,iBAAiB,GAAG,oBAAoB,CAAC,WAAW,CAAC,CAAC,CAAC,oBAAoB,CAAC,WAAW,CAAC,CAAC,CAAC,EAAE,CAAC;IACnG,oBAAoB,CAAC,WAAW,GAAG,yBAAyB,CAAC,iBAAiB,EAAE,yBAAyB,EAAE,MAAM,CAAC,CAAC;IACnH,OAAO,oBAAoB,CAAC;AAChC,CAAC,CAAC","sourcesContent":["/*!\n * Copyright (c) Microsoft Corporation.\n * All rights reserved. See LICENSE in the project root for license information.\n */\n\nimport { IModuleBinder } from '../app-initialization/models';\nimport { getModuleBinder } from '../utils/helpers';\n\nconst dataActionCustimizedMerge = (originDataAction, newDataAction, customizer) =>\n    originDataAction\n        .filter(originAction => !newDataAction.find(newAction => originAction[customizer] === newAction[customizer]))\n        .concat(newDataAction);\n\nexport const combineExtendedDataActionToModule = (originalModuleBinder: IModuleBinder, moduleName: string, themeName: string) => {\n    const themeBinder = getModuleBinder(themeName);\n    if (!themeBinder || !originalModuleBinder) {\n        return originalModuleBinder;\n    }\n\n    if (themeBinder.dataActions.length === 0) {\n        return originalModuleBinder;\n    }\n    const themeDataActionsForModule = themeBinder.dataActions.filter(\n        dataAction => dataAction.moduleName && dataAction.moduleName === moduleName\n    );\n\n    const moduleDataActions = originalModuleBinder.dataActions ? originalModuleBinder.dataActions : [];\n    originalModuleBinder.dataActions = dataActionCustimizedMerge(moduleDataActions, themeDataActionsForModule, 'name');\n    return originalModuleBinder;\n};\n"]}