/*!
 * Copyright (c) Microsoft Corporation.
 * All rights reserved. See LICENSE in the project root for license information.
 */
import { getModuleBinder } from '../utils/helpers';
const dataActionCustimizedMerge = (originDataAction, newDataAction, customizer) => originDataAction
    .filter(originAction => !newDataAction.find(newAction => originAction[customizer] === newAction[customizer]))
    .concat(newDataAction);
export const combineExtendedDataActionToModule = (originalModuleBinder, moduleName, themeName) => {
    const themeBinder = getModuleBinder(themeName);
    if (!themeBinder || !originalModuleBinder) {
        return originalModuleBinder;
    }
    if (themeBinder.dataActions.length === 0) {
        return originalModuleBinder;
    }
    const themeDataActionsForModule = themeBinder.dataActions.filter(dataAction => dataAction.moduleName && dataAction.moduleName === moduleName);
    const moduleDataActions = originalModuleBinder.dataActions ? originalModuleBinder.dataActions : [];
    originalModuleBinder.dataActions = dataActionCustimizedMerge(moduleDataActions, themeDataActionsForModule, 'name');
    return originalModuleBinder;
};
//# sourceMappingURL=data-action-extension-helper.js.map