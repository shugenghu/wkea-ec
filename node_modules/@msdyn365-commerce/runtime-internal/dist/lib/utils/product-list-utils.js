/*!
 * Copyright (c) Microsoft Corporation.
 * All rights reserved. See LICENSE in the project root for license information.
 */
/**
 * Generates a Image URL based on data return from retail server
 * @param imageUrl The image url returned by Retail Server
 * @param ctx The request context
 */
export const generateImageUrl = (imageUrl, apiSettings) => {
    if (imageUrl) {
        // Images hosted in CMS include schema
        if (imageUrl.startsWith('http')) {
            return imageUrl;
        }
        // Images hosted in Retail Server must be encoded and joined with the base image url
        return apiSettings.baseImageUrl + encodeURIComponent(imageUrl);
    }
    else {
        // d365Commerce.telemetry.warning(`Unable to generate a proper Image URL for Product: ${product.RecordId}`);
        return undefined;
    }
};
/**
 * Generates a Image URL for a product based on data return from retail server
 * @param product The Product returned by Retail Server
 * @param ctx The request context
 */
export const getProductImageUrls = (products, apiSettings) => {
    const productsWithImageUrls = [];
    products &&
        products.forEach(product => {
            if (product && product.RecordId) {
                product.PrimaryImageUrl = generateImageUrl(product.PrimaryImageUrl, apiSettings);
                productsWithImageUrls.push(product);
            }
        });
    return productsWithImageUrls;
};
/**
 * Uses the order in which the product ids were returned from the reco call to order
 * the results from the product hydration call
 *
 * @param itemIdOrder The order of product ids to observe
 * @param unorderedProductSearchResults Unordered set of hydrated products
 */
export const orderProductSearchResults = (itemIdOrder, unorderedProductSearchResults) => {
    return itemIdOrder.reduce((result, itemId) => {
        const product = unorderedProductSearchResults.find(element => element.RecordId === itemId);
        if (product) {
            result.push(product);
        }
        return result;
        // tslint:disable-next-line: align
    }, []);
};
//# sourceMappingURL=product-list-utils.js.map