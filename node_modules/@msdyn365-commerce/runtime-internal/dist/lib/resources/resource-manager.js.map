{"version":3,"file":"resource-manager.js","sourceRoot":"","sources":["../../../src/resources/resource-manager.ts"],"names":[],"mappings":"AAAA;;;GAGG;AAEH,OAAO,EAQH,gBAAgB,EACnB,MAAM,kCAAkC,CAAC;AAC1C,OAAO,EAAE,eAAe,EAAE,MAAM,uCAAuC,CAAC;AACxE,OAAO,EAAE,mBAAmB,EAAE,YAAY,EAAE,MAAM,uCAAuC,CAAC;AAC1F,OAAO,EAAE,KAAK,IAAI,MAAM,EAAE,MAAM,QAAQ,CAAC;AACzC,OAAO,IAAI,MAAM,MAAM,CAAC;AACxB,OAAO,EAAE,mBAAmB,EAAE,eAAe,EAA8B,MAAM,wCAAwC,CAAC;AAE1H,OAAO,aAAa,MAAM,UAAU,CAAC;AACrC,OAAO,EAAE,mBAAmB,EAAE,MAAM,kBAAkB,CAAC;AACvD,OAAO,EACH,oCAAoC,EACpC,kCAAkC,EAClC,sCAAsC,EACtC,oCAAoC,EACpC,kCAAkC,EAClC,gCAAgC,EACnC,MAAM,aAAa,CAAC;AAErB,MAAM,aAAa,GAAG,QAAQ,CAAC;AAC/B,MAAM,sBAAsB,GAAG,qEAAqE,CAAC;AASrG;;GAEG;AACH,MAAM,OAAO,eAAe;IASxB;QACI,IAAI,CAAC,qBAAqB,GAAG,EAAE,CAAC;QAChC,IAAI,CAAC,kBAAkB,GAAG,EAAE,CAAC;QAC7B,IAAI,CAAC,kBAAkB,GAAG,EAAE,CAAC;QAC7B,IAAI,CAAC,kBAAkB,GAAG,EAAE,CAAC;IACjC,CAAC;IAED;;OAEG;IACI,KAAK,CAAC,IAAI,CAAC,gBAAmC;QACjD,IAAI,gBAAgB,IAAI,CAAC,CAAC,CAAC,gBAAgB,CAAC,wBAAwB,EAAE;YAClE,MAAM,aAAa,GACC,MAAM,YAAY,CAAC,aAAa,CAAC,oCAAoC,CAAC,IAAI,EAAE,CAAC;YACjG,IAAI,CAAC,qBAAqB,GAAG,aAAa,CAAC,qBAAqB,IAAI,EAAE,CAAC;YACvE,IAAI,CAAC,kBAAkB,GAAG,aAAa,CAAC,kBAAkB,IAAI,EAAE,CAAC;YACjE,IAAI,CAAC,kBAAkB,GAAG,aAAa,CAAC,kBAAkB,IAAI,EAAE,CAAC;YACjE,IAAI,CAAC,kBAAkB,GAAG,aAAa,CAAC,kBAAkB,IAAI,EAAE,CAAC;YACjE,OAAO;SACV;QAED,MAAM,IAAI,CAAC,2BAA2B,EAAE,CAAC;QAEzC,MAAM,2BAA2B,GAAG,MAAM,mBAAmB,CAAC,kCAAkC,CAAC,CAAC;QAElG,IAAI,2BAA2B,CAAC,MAAM,GAAG,CAAC,EAAE;YACxC,MAAM,OAAO,CAAC,GAAG,CACb,2BAA2B,CAAC,GAAG,CAAC,KAAK,EAAE,YAAoB,EAAE,EAAE;gBAC3D,MAAM,MAAM,GAAG,IAAI,CAAC,QAAQ,CAAC,YAAY,EAAE,OAAO,CAAC,CAAC,iBAAiB,EAAE,CAAC;gBACxE,MAAM,OAAO,GAA+D,MAAM,YAAY,CAAC,YAAY,CAAC,CAAC;gBAE7G,IAAI,CAAC,OAAO,IAAI,CAAC,OAAO,CAAC,OAAO,EAAE;oBAC9B,OAAO;iBACV;gBAED,IAAI,CAAC,qBAAqB,CAAC,MAAM,CAAC,GAAG,IAAI,CAAC,qBAAqB,CAAC,MAAM,CAAC,IAAI;oBACvE,QAAQ,EAAE,EAAE;oBACZ,OAAO,EAAE,EAAE;oBACX,MAAM,EAAE,EAAE;iBACb,CAAC;gBAEF,OAAO,CAAC,OAAO;oBACX,MAAM,CAAC,IAAI,CAAC,OAAO,CAAC,OAAO,CAAC,CAAC,OAAO,CAAC,UAAU,CAAC,EAAE;wBAC9C,IAAI,CAAC,qBAAqB,CAAC,MAAM,CAAC,CAAC,OAAO,CAAC,UAAU,CAAC,GAAG,IAAI,CAAC,4BAA4B,CACtF,IAAI,CAAC,qBAAqB,CAAC,MAAM,CAAC,CAAC,OAAO,CAAC,UAAU,CAAC,EACtD,OAAO,CAAC,OAAO,CAAC,UAAU,CAAC,CAC9B,CAAC;wBAEF,IAAI,OAAO,CAAC,QAAQ,EAAE;4BAClB,IAAI,CAAC,qBAAqB,CAAC,MAAM,CAAC,CAAC,QAAQ,GAAG,OAAO,CAAC,QAAQ,CAAC;yBAClE;wBACD,IAAI,CAAC,qBAAqB,CAAC,MAAM,CAAC,CAAC,MAAM,GAAG,EAAE,CAAC;oBACnD,CAAC,CAAC,CAAC;gBAEP,IAAI,OAAO,CAAC,MAAM,EAAE;oBAChB,MAAM,CAAC,IAAI,CAAC,OAAO,CAAC,MAAM,CAAC,CAAC,OAAO,CAAC,SAAS,CAAC,EAAE;wBAC5C,IAAI,CAAC,qBAAqB,CAAC,MAAM,CAAC,CAAC,MAAM,CAAC,SAAS,CAAC,GAAG,MAAM,CACzD,IAAI,CAAC,qBAAqB,CAAC,MAAM,CAAC,CAAC,MAAM,CAAC,SAAS,CAAC,EACpD,OAAO,CAAC,MAAM,CAAC,SAAS,CAAC,CAC5B,CAAC;oBACN,CAAC,CAAC,CAAC;iBACN;YACL,CAAC,CAAC,CACL,CAAC;SACL;QAED,MAAM,IAAI,CAAC,wBAAwB,EAAE,CAAC;QAEtC,MAAM,yBAAyB,GAAG,MAAM,mBAAmB,CAAC,gCAAgC,CAAC,CAAC;QAE9F,IAAI,yBAAyB,CAAC,MAAM,GAAG,CAAC,EAAE;YACtC,MAAM,OAAO,CAAC,GAAG,CACb,yBAAyB,CAAC,GAAG,CAAC,KAAK,EAAE,YAAoB,EAAE,EAAE;gBACzD,MAAM,MAAM,GAAG,IAAI,CAAC,QAAQ,CAAC,YAAY,EAAE,OAAO,CAAC,CAAC,iBAAiB,EAAE,CAAC;gBACxE,MAAM,OAAO,GAAmE,MAAM,YAAY,CAAC,YAAY,CAAC,CAAC;gBAEjH,IAAI,CAAC,OAAO,EAAE;oBACV,OAAO;iBACV;gBAED,IAAI,CAAC,kBAAkB,CAAC,MAAM,CAAC,GAAG,IAAI,CAAC,kBAAkB,CAAC,MAAM,CAAC,IAAI,EAAE,CAAC;gBACxE,MAAM,YAAY,GAAG,MAAM,CAAC,IAAI,CAAC,OAAO,CAAC,CAAC;gBAC1C,YAAY,CAAC,OAAO,CAAC,WAAW,CAAC,EAAE;oBAC/B,IAAI,OAAO,CAAC,WAAW,CAAC,CAAC,KAAK,EAAE;wBAC5B,IAAI,CAAC,kBAAkB,CAAC,MAAM,CAAC,CAAC,WAAW,CAAC,GAAG,OAAO,CAAC,WAAW,CAAC,CAAC,KAAK,CAAC;qBAC7E;gBACL,CAAC,CAAC,CAAC;YACP,CAAC,CAAC,CACL,CAAC;SACL;QAED,MAAM,IAAI,CAAC,wBAAwB,EAAE,CAAC;IAC1C,CAAC;IAED;;;;;OAKG;IACI,kBAAkB,CAAC,UAAkB,EAAE,SAAiB,EAAE,MAAc;QAC3E,IACI,CAAC,IAAI,CAAC,kBAAkB;YACxB,CAAC,IAAI,CAAC,kBAAkB,CAAC,UAAU,CAAC;YACpC,CAAC,IAAI,CAAC,kBAAkB;YACxB,CAAC,IAAI,CAAC,kBAAkB,CAAC,UAAU,CAAC,EACtC;YACE,OAAO,EAAE,CAAC;SACb;QAED,MAAM,oBAAoB,GAAG,MAAM,CAAC,MAAM,GAAG,CAAC,CAAC,CAAC,CAAC,MAAM,CAAC,KAAK,CAAC,GAAG,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,iBAAiB,EAAE,CAAC,CAAC,CAAC,EAAE,CAAC;QAClG,MAAM,GAAG,MAAM,CAAC,CAAC,CAAC,MAAM,CAAC,iBAAiB,EAAE,CAAC,CAAC,CAAC,aAAa,CAAC;QAE7D,MAAM,YAAY,GAAG,EAAE,CAAC;QACxB,MAAM,eAAe,GAAG,IAAI,CAAC,kBAAkB,CAAC,UAAU,CAAC,CAAC;QAC5D,MAAM,YAAY,GAAG,MAAM,CAAC,IAAI,CAAC,IAAI,CAAC,kBAAkB,CAAC,UAAU,CAAC,CAAC,CAAC;QACtE,MAAM,cAAc,GAAG,IAAI,CAAC,kBAAkB,CAAC,SAAS,CAAC,CAAC;QAC1D,MAAM,eAAe,GAAG,mBAAmB,CAAC,SAAS,CAAC,CAAC;QACvD,MAAM,oBAAoB,GAAG,IAAI,CAAC,kBAAkB,CAAC,eAAe,CAAC,CAAC;QAEtE,MAAM,mBAAmB,GAAG,CAAC,WAAmB,EAAE,SAAiB,EAAE,EAAE;YACnE,IAAI,IAAI,CAAC,kBAAkB,CAAC,SAAS,CAAC,EAAE;gBACpC,mIAAmI;gBACnI,0CAA0C;gBAC1C,IAAI,SAAS,IAAI,cAAc,IAAI,IAAI,CAAC,kBAAkB,CAAC,SAAS,CAAC,CAAC,GAAG,cAAc,IAAI,SAAS,IAAI,WAAW,EAAE,CAAC,EAAE;oBACpH,YAAY,CAAC,WAAW,CAAC,GAAG,IAAI,CAAC,kBAAkB,CAAC,SAAS,CAAC,CAAC,GAAG,cAAc,IAAI,SAAS,IAAI,WAAW,EAAE,CAAC,CAAC;iBACnH;qBAAM,IACH,eAAe,KAAK,EAAE;oBACtB,oBAAoB;oBACpB,IAAI,CAAC,kBAAkB,CAAC,SAAS,CAAC,CAAC,GAAG,oBAAoB,IAAI,eAAe,IAAI,WAAW,EAAE,CAAC,EACjG;oBACE,2CAA2C;oBAC3C,YAAY,CAAC,WAAW,CAAC,GAAG,IAAI,CAAC,kBAAkB,CAAC,SAAS,CAAC,CAC1D,GAAG,oBAAoB,IAAI,eAAe,IAAI,WAAW,EAAE,CAC9D,CAAC;iBACL;qBAAM,IAAI,eAAe,KAAK,WAAW,IAAI,IAAI,CAAC,kBAAkB,CAAC,SAAS,CAAC,CAAC,WAAW,CAAC,EAAE;oBAC3F,YAAY,CAAC,WAAW,CAAC,GAAG,IAAI,CAAC,kBAAkB,CAAC,SAAS,CAAC,CAAC,WAAW,CAAC,CAAC;iBAC/E;qBAAM,IAAI,IAAI,CAAC,kBAAkB,CAAC,SAAS,CAAC,CAAC,GAAG,eAAe,IAAI,WAAW,EAAE,CAAC,EAAE;oBAChF,YAAY,CAAC,WAAW,CAAC,GAAG,IAAI,CAAC,kBAAkB,CAAC,SAAS,CAAC,CAAC,GAAG,eAAe,IAAI,WAAW,EAAE,CAAC,CAAC;iBACvG;aACJ;QACL,CAAC,CAAC;QACF,YAAY,CAAC,OAAO,CAAC,WAAW,CAAC,EAAE;YAC/B,mBAAmB,CAAC,WAAW,EAAE,MAAM,CAAC,CAAC;YAEzC,kFAAkF;YAClF,IAAI,CAAC,YAAY,CAAC,WAAW,CAAC,EAAE;gBAC5B,mBAAmB,CAAC,WAAW,EAAE,oBAAoB,CAAC,CAAC;aAC1D;YAED,qCAAqC;YACrC,IAAI,CAAC,YAAY,CAAC,WAAW,CAAC,EAAE;gBAC5B,mBAAmB,CAAC,WAAW,EAAE,aAAa,CAAC,CAAC;aACnD;YAED,6CAA6C;YAC7C,IAAI,CAAC,YAAY,CAAC,WAAW,CAAC,EAAE;gBAC5B,YAAY,CAAC,WAAW,CAAC,GAAG,IAAI,CAAC,kBAAkB,CAAC,UAAU,CAAC,CAAC,WAAW,CAAC,CAAC;aAChF;QACL,CAAC,CAAC,CAAC;QAEH,OAAO,YAAY,CAAC;IACxB,CAAC;IAEM,qBAAqB;QACxB,OAAO,IAAI,CAAC,qBAAqB,CAAC;IACtC,CAAC;IAEO,KAAK,CAAC,2BAA2B;QACrC,IAAI,+BAA+B,GAAG,MAAM,mBAAmB,CAAC,sCAAsC,CAAC,CAAC;QACxG,+BAA+B,GAAG,+BAA+B,CAAC,MAAM,CACpE,MAAM,mBAAmB,CAAC,oCAAoC,CAAC,CAClE,CAAC;QAEF,MAAM,OAAO,CAAC,GAAG,CACb,+BAA+B,CAAC,GAAG,CAAC,KAAK,EAAE,YAAoB,EAAE,EAAE;YAC/D,MAAM,MAAM,GAAG,IAAI,CAAC,QAAQ,CAAC,YAAY,EAAE,OAAO,CAAC,CAAC,iBAAiB,EAAE,CAAC;YACxE,MAAM,OAAO,GAAG,MAAM,YAAY,CAA+B,YAAY,CAAC,CAAC;YAC/E,IAAI,OAAO,EAAE;gBACT,IAAI,CAAC,qBAAqB,CAAC,MAAM,CAAC,GAAG,OAAO,CAAC;aAChD;QACL,CAAC,CAAC,CACL,CAAC;IACN,CAAC;IAEO,KAAK,CAAC,wBAAwB;QAClC,IAAI,6BAA6B,GAAG,MAAM,mBAAmB,CAAC,oCAAoC,CAAC,CAAC;QACpG,6BAA6B,GAAG,6BAA6B,CAAC,MAAM,CAAC,MAAM,mBAAmB,CAAC,kCAAkC,CAAC,CAAC,CAAC;QAEpI,MAAM,OAAO,CAAC,GAAG,CACb,6BAA6B,CAAC,GAAG,CAAC,KAAK,EAAE,YAAoB,EAAE,EAAE;YAC7D,MAAM,WAAW,GAAG,YAAY,CAAC,KAAK,CAAC,sBAAsB,CAAC,CAAC;YAC/D,IAAI,eAAe,GAAG,eAAe,CAAC;YACtC,IAAI,WAAW,KAAK,IAAI,IAAI,WAAW,CAAC,MAAM,IAAI,WAAW,CAAC,MAAM,CAAC,SAAS,EAAE;gBAC5E,eAAe,GAAG,WAAW,CAAC,MAAM,CAAC,SAAS,CAAC;aAClD;YAED,MAAM,MAAM,GAAG,IAAI,CAAC,QAAQ,CAAC,YAAY,EAAE,OAAO,CAAC,CAAC,iBAAiB,EAAE,CAAC;YACxE,MAAM,OAAO,GAAmE,MAAM,YAAY,CAAC,YAAY,CAAC,CAAC;YAEjH,IAAI,CAAC,OAAO,EAAE;gBACV,OAAO;aACV;YAED,IAAI,CAAC,kBAAkB,CAAC,MAAM,CAAC,GAAG,IAAI,CAAC,kBAAkB,CAAC,MAAM,CAAC,IAAI,EAAE,CAAC;YACxE,MAAM,CAAC,IAAI,CAAC,OAAO,CAAC,CAAC,OAAO,CAAC,WAAW,CAAC,EAAE;gBACvC,IAAI,OAAO,CAAC,WAAW,CAAC,CAAC,KAAK,EAAE;oBAC5B,IAAI,CAAC,kBAAkB,CAAC,MAAM,CAAC,CAAC,GAAG,eAAe,IAAI,WAAW,EAAE,CAAC,GAAG,OAAO,CAAC,WAAW,CAAC,CAAC,KAAK,CAAC;iBACrG;YACL,CAAC,CAAC,CAAC;QACP,CAAC,CAAC,CACL,CAAC;IACN,CAAC;IAEO,KAAK,CAAC,wBAAwB;QAClC,kCAAkC;QAClC,MAAM,OAAO,GAAS,gBAAiB,CAAC,kBAAkB,EAAE,CAAC;QAC7D,MAAM,YAAY,GAAmB,MAAM,eAAe,CAAC,IAAI,EAAE,eAAe,CAAC,CAAC;QAClF,MAAM,eAAe,GAAG,EAAE,CAAC;QAE3B,mEAAmE;QACnE,IAAI,YAAY,IAAI,KAAK,CAAC,OAAO,CAAC,YAAY,CAAC,EAAE;YAC7C,CAAC,YAAY,IAAI,EAAE,CAAC,CAAC,GAAG,CAAC,WAAW,CAAC,EAAE;gBACnC,MAAM,CAAC,IAAI,CAAC,WAAW,CAAC,oBAAoB,IAAI,EAAE,CAAC,CAAC,GAAG,CAAC,UAAU,CAAC,EAAE;oBACjE,IAAI,eAAe,CAAC,UAAU,CAAC,EAAE;wBAC7B,eAAe,CAAC,UAAU,CAAC,GAAG;4BAC1B,GAAG,eAAe,CAAC,UAAU,CAAC;4BAC9B,GAAG,CAAC,WAAW,CAAC,oBAAoB,CAAC,UAAU,CAAC,CAAC,SAAS,IAAI,EAAE,CAAC;yBACpE,CAAC;qBACL;yBAAM;wBACH,eAAe,CAAC,UAAU,CAAC,GAAG,WAAW,CAAC,oBAAoB,CAAC,UAAU,CAAC,CAAC,SAAS,IAAI,EAAE,CAAC;qBAC9F;gBACL,CAAC,CAAC,CAAC;YACP,CAAC,CAAC,CAAC;SACN;QAED,OAAO,OAAO,CAAC,GAAG,CACd,OAAO,CAAC,GAAG,CAAC,KAAK,EAAE,YAA2B,EAAE,EAAE;YAC9C,MAAM,UAAU,GAAG,MAAM,mBAAmB,CAAC,YAAY,EAAE,eAAe,CAAC,CAAC;YAC5E,IAAI,CAAC,kBAAkB,CAAC,YAAY,CAAC,IAAI,CAAC,GAAG,YAAY,CAAC,eAAe,CAAC;YAC1E,IAAI,eAAe,GAAG,UAAU,CAAC,SAAS,IAAI,EAAE,CAAC;YAEjD,uCAAuC;YACvC,IAAI,eAAe,CAAC,YAAY,CAAC,IAAI,CAAC,EAAE;gBACpC,eAAe,GAAG;oBACd,GAAG,eAAe;oBAClB,GAAG,eAAe,CAAC,YAAY,CAAC,IAAI,CAAC;iBACxC,CAAC;aACL;YAED,MAAM,eAAe,GAAG,EAAE,CAAC;YAC3B,MAAM,CAAC,IAAI,CAAC,eAAe,CAAC,CAAC,GAAG,CAAC,GAAG,CAAC,EAAE;gBACnC,eAAe,CAAC,GAAG,CAAC,GAAG,eAAe,CAAC,GAAG,CAAC,CAAC,KAAK,CAAC;YACtD,CAAC,CAAC,CAAC;YAEH,IAAI,CAAC,kBAAkB,CAAC,UAAU,CAAC,IAAI,CAAC,GAAG,eAAe,CAAC;YAE3D,OAAO,UAAU,CAAC;QACtB,CAAC,CAAC,CACL,CAAC;IACN,CAAC;IAEO,4BAA4B,CAChC,wBAA4D,EAC5D,gCAAoE;QAEpE,wBAAwB,GAAG,wBAAwB,IAAI,EAAE,CAAC;QAC1D,gCAAgC,GAAG,gCAAgC,IAAI,EAAE,CAAC;QAE1E,MAAM,8BAA8B,GAAG;YACnC,GAAG,wBAAwB;YAC3B,GAAG,gCAAgC;SACtC,CAAC;QAEF,4EAA4E;QAE5E,MAAM,iCAAiC,GAAG,MAAM,CAAC,IAAI,CAAC,wBAAwB,CAAC,CAAC;QAChF,IAAI,iCAAiC,EAAE;YACnC,iCAAiC,CAAC,OAAO,CAAC,QAAQ,CAAC,EAAE;gBACjD,IAAI,gCAAgC,CAAC,QAAQ,CAAC,EAAE;oBAC5C,8BAA8B,CAAC,QAAQ,CAAC,GAAG;wBACvC,GAAG,wBAAwB,CAAC,QAAQ,CAAC;wBACrC,GAAG,CAAC,gCAAgC,CAAC,QAAQ,CAAC,IAAI,EAAE,CAAC;qBACxD,CAAC;iBACL;YACL,CAAC,CAAC,CAAC;SACN;QAED,OAAO,8BAA8B,CAAC;IAC1C,CAAC;CACJ","sourcesContent":["/*!\n * Copyright (c) Microsoft Corporation.\n * All rights reserved. See LICENSE in the project root for license information.\n */\n\nimport {\n    IAuthoringResourceDefinition,\n    IDictionary,\n    IModuleAuthoringResourceDefinition,\n    IPlatformSettings,\n    IResourceManager,\n    IResourceProperty,\n    IThemeModule,\n    msdyn365Commerce\n} from '@msdyn365-commerce/core-internal';\nimport { StaticTelemetry } from '@msdyn365-commerce/telemetry-internal';\nimport { safeGetAllFilesPath, safeReadJson } from '@msdyn365-commerce/utilities-internal';\nimport { merge as _merge } from 'lodash';\nimport path from 'path';\nimport { getModuleDefinition, getThemeModules, isDAPIOptimizationDisabled } from '../_server/Definition/moduleDefinition';\nimport { IModuleBinder } from '../app-initialization/models';\nimport keystonePaths from '../paths';\nimport { getParentModuleName } from '../utils/helpers';\nimport {\n    hoistedAuthoringResourcesPathPattern,\n    hoistedModulesResourcesPathPattern,\n    installedAuthoringResourcesPathPattern,\n    installedModulesResourcesPathPattern,\n    localAuthoringResourcesPathPattern,\n    localModulesResourcesPathPattern\n} from './constants';\n\nconst GLOBAL_LOCALE = 'global';\nconst RESOURCE_DETAILS_REGEX = /\\/node_modules\\/(?<namespace>.*)\\/(?<packageName>.*)\\/dist\\/lib\\/.*/;\n\ninterface IResourcesDAPI {\n    authoringResourcesMap: IDictionary<IAuthoringResourceDefinition>;\n    moduleResourcesMap: IDictionary<IDictionary<string>>;\n    moduleResourceKeys: IDictionary<IDictionary<string>>;\n    moduleNamespaceMap: IDictionary<string>;\n}\n\n/**\n * Resource manager implementation\n */\nexport class ResourceManager implements IResourceManager {\n    private authoringResourcesMap: IDictionary<IAuthoringResourceDefinition>;\n\n    private moduleResourcesMap: IDictionary<IDictionary<string>>;\n\n    private moduleResourceKeys: IDictionary<IDictionary<string>>;\n\n    private moduleNamespaceMap: IDictionary<string>;\n\n    public constructor() {\n        this.authoringResourcesMap = {};\n        this.moduleResourcesMap = {};\n        this.moduleResourceKeys = {};\n        this.moduleNamespaceMap = {};\n    }\n\n    /**\n     * @function        {init}          - Method to initialize and load all the resource strings\n     */\n    public async init(platformSettings: IPlatformSettings): Promise<void> {\n        if (platformSettings && !!!platformSettings.disableDAPIOptimizations) {\n            const resourcesDapi: IResourcesDAPI =\n                <IResourcesDAPI>await safeReadJson(keystonePaths.KEYSTONE_APP_RESOURCES_DAPI_FILEPATH) || {};\n            this.authoringResourcesMap = resourcesDapi.authoringResourcesMap || {};\n            this.moduleResourcesMap = resourcesDapi.moduleResourcesMap || {};\n            this.moduleResourceKeys = resourcesDapi.moduleResourceKeys || {};\n            this.moduleNamespaceMap = resourcesDapi.moduleNamespaceMap || {};\n            return;\n        }\n\n        await this._readAuthoringResourceFiles();\n\n        const localAuthoringResourceFiles = await safeGetAllFilesPath(localAuthoringResourcesPathPattern);\n\n        if (localAuthoringResourceFiles.length > 0) {\n            await Promise.all(\n                localAuthoringResourceFiles.map(async (resourceFile: string) => {\n                    const locale = path.basename(resourceFile, '.json').toLocaleLowerCase();\n                    const content: IAuthoringResourceDefinition = <IAuthoringResourceDefinition>await safeReadJson(resourceFile);\n\n                    if (!content || !content.modules) {\n                        return;\n                    }\n\n                    this.authoringResourcesMap[locale] = this.authoringResourcesMap[locale] || {\n                        settings: {},\n                        modules: {},\n                        themes: {}\n                    };\n\n                    content.modules &&\n                        Object.keys(content.modules).forEach(moduleName => {\n                            this.authoringResourcesMap[locale].modules[moduleName] = this._getMergedAuthoringResources(\n                                this.authoringResourcesMap[locale].modules[moduleName],\n                                content.modules[moduleName]\n                            );\n\n                            if (content.settings) {\n                                this.authoringResourcesMap[locale].settings = content.settings;\n                            }\n                            this.authoringResourcesMap[locale].themes = {};\n                        });\n\n                    if (content.themes) {\n                        Object.keys(content.themes).forEach(themeName => {\n                            this.authoringResourcesMap[locale].themes[themeName] = _merge(\n                                this.authoringResourcesMap[locale].themes[themeName],\n                                content.themes[themeName]\n                            );\n                        });\n                    }\n                })\n            );\n        }\n\n        await this._readModuleResourceFiles();\n\n        const localModulesResourceFiles = await safeGetAllFilesPath(localModulesResourcesPathPattern);\n\n        if (localModulesResourceFiles.length > 0) {\n            await Promise.all(\n                localModulesResourceFiles.map(async (resourceFile: string) => {\n                    const locale = path.basename(resourceFile, '.json').toLocaleLowerCase();\n                    const content: IDictionary<IResourceProperty> = <IDictionary<IResourceProperty>>await safeReadJson(resourceFile);\n\n                    if (!content) {\n                        return;\n                    }\n\n                    this.moduleResourcesMap[locale] = this.moduleResourcesMap[locale] || {};\n                    const resourceKeys = Object.keys(content);\n                    resourceKeys.forEach(resourceKey => {\n                        if (content[resourceKey].value) {\n                            this.moduleResourcesMap[locale][resourceKey] = content[resourceKey].value;\n                        }\n                    });\n                })\n            );\n        }\n\n        await this._getAllModuleDefinitions();\n    }\n\n    /**\n     * @function    {getModuleResources}    - Method to fetch resource strings of a module for given locale\n     * @param       {moduleName}            - name of the module\n     * @param       {themeName}             - name of the theme\n     * @param       {locale}                - locale for which resource strings need to be fetched\n     */\n    public getModuleResources(moduleName: string, themeName: string, locale: string): IDictionary<string> {\n        if (\n            !this.moduleResourceKeys ||\n            !this.moduleResourceKeys[moduleName] ||\n            !this.moduleNamespaceMap ||\n            !this.moduleNamespaceMap[moduleName]\n        ) {\n            return {};\n        }\n\n        const parentFallbackLocale = locale.length > 0 ? locale.split('-', 1)[0].toLocaleLowerCase() : '';\n        locale = locale ? locale.toLocaleLowerCase() : GLOBAL_LOCALE;\n\n        const resourcesObj = {};\n        const moduleNamespace = this.moduleNamespaceMap[moduleName];\n        const resourceKeys = Object.keys(this.moduleResourceKeys[moduleName]);\n        const themeNamespace = this.moduleNamespaceMap[themeName];\n        const parentThemeName = getParentModuleName(themeName);\n        const parentThemeNamespace = this.moduleNamespaceMap[parentThemeName];\n\n        const fillModuleResources = (resourceKey: string, localeStr: string) => {\n            if (this.moduleResourcesMap[localeStr]) {\n                // Resource string override preference in order: 1) Theme specific resource string override, 2) All module resource string override\n                // Theme specific resource string override\n                if (themeName && themeNamespace && this.moduleResourcesMap[localeStr][`${themeNamespace}.${themeName}.${resourceKey}`]) {\n                    resourcesObj[resourceKey] = this.moduleResourcesMap[localeStr][`${themeNamespace}.${themeName}.${resourceKey}`];\n                } else if (\n                    parentThemeName !== '' &&\n                    parentThemeNamespace &&\n                    this.moduleResourcesMap[localeStr][`${parentThemeNamespace}.${parentThemeName}.${resourceKey}`]\n                ) {\n                    // Fallback to parent theme resource string\n                    resourcesObj[resourceKey] = this.moduleResourcesMap[localeStr][\n                        `${parentThemeNamespace}.${parentThemeName}.${resourceKey}`\n                    ];\n                } else if (moduleNamespace === '__local__' && this.moduleResourcesMap[localeStr][resourceKey]) {\n                    resourcesObj[resourceKey] = this.moduleResourcesMap[localeStr][resourceKey];\n                } else if (this.moduleResourcesMap[localeStr][`${moduleNamespace}.${resourceKey}`]) {\n                    resourcesObj[resourceKey] = this.moduleResourcesMap[localeStr][`${moduleNamespace}.${resourceKey}`];\n                }\n            }\n        };\n        resourceKeys.forEach(resourceKey => {\n            fillModuleResources(resourceKey, locale);\n\n            // Fallback to parent locale resource, eg: if `es-ar` then parent fallback is `es`\n            if (!resourcesObj[resourceKey]) {\n                fillModuleResources(resourceKey, parentFallbackLocale);\n            }\n\n            // Fallback to global locale resource\n            if (!resourcesObj[resourceKey]) {\n                fillModuleResources(resourceKey, GLOBAL_LOCALE);\n            }\n\n            // Fall back to defaults in module definition\n            if (!resourcesObj[resourceKey]) {\n                resourcesObj[resourceKey] = this.moduleResourceKeys[moduleName][resourceKey];\n            }\n        });\n\n        return resourcesObj;\n    }\n\n    public getAuthoringResources(): IDictionary<IAuthoringResourceDefinition> {\n        return this.authoringResourcesMap;\n    }\n\n    private async _readAuthoringResourceFiles(): Promise<void> {\n        let installedAuthoringResourceFiles = await safeGetAllFilesPath(installedAuthoringResourcesPathPattern);\n        installedAuthoringResourceFiles = installedAuthoringResourceFiles.concat(\n            await safeGetAllFilesPath(hoistedAuthoringResourcesPathPattern)\n        );\n\n        await Promise.all(\n            installedAuthoringResourceFiles.map(async (resourceFile: string) => {\n                const locale = path.basename(resourceFile, '.json').toLocaleLowerCase();\n                const content = await safeReadJson<IAuthoringResourceDefinition>(resourceFile);\n                if (content) {\n                    this.authoringResourcesMap[locale] = content;\n                }\n            })\n        );\n    }\n\n    private async _readModuleResourceFiles(): Promise<void> {\n        let installedModulesResourceFiles = await safeGetAllFilesPath(installedModulesResourcesPathPattern);\n        installedModulesResourceFiles = installedModulesResourceFiles.concat(await safeGetAllFilesPath(hoistedModulesResourcesPathPattern));\n\n        await Promise.all(\n            installedModulesResourceFiles.map(async (resourceFile: string) => {\n                const matchResult = resourceFile.match(RESOURCE_DETAILS_REGEX);\n                let moduleNamespace = '__installed__';\n                if (matchResult !== null && matchResult.groups && matchResult.groups.namespace) {\n                    moduleNamespace = matchResult.groups.namespace;\n                }\n\n                const locale = path.basename(resourceFile, '.json').toLocaleLowerCase();\n                const content: IDictionary<IResourceProperty> = <IDictionary<IResourceProperty>>await safeReadJson(resourceFile);\n\n                if (!content) {\n                    return;\n                }\n\n                this.moduleResourcesMap[locale] = this.moduleResourcesMap[locale] || {};\n                Object.keys(content).forEach(resourceKey => {\n                    if (content[resourceKey].value) {\n                        this.moduleResourcesMap[locale][`${moduleNamespace}.${resourceKey}`] = content[resourceKey].value;\n                    }\n                });\n            })\n        );\n    }\n\n    private async _getAllModuleDefinitions(): Promise<object[]> {\n        // tslint:disable-next-line:no-any\n        const modules = (<any>msdyn365Commerce).getAllModuleBinder();\n        const themeModules = <IThemeModule[]>await getThemeModules(null, StaticTelemetry);\n        const defExtResources = {};\n\n        // Get resources object from definition extensions of theme modules\n        if (themeModules && Array.isArray(themeModules)) {\n            (themeModules || []).map(themeModule => {\n                Object.keys(themeModule.definitionExtensions || []).map(moduleName => {\n                    if (defExtResources[moduleName]) {\n                        defExtResources[moduleName] = {\n                            ...defExtResources[moduleName],\n                            ...(themeModule.definitionExtensions[moduleName].resources || {})\n                        };\n                    } else {\n                        defExtResources[moduleName] = themeModule.definitionExtensions[moduleName].resources || {};\n                    }\n                });\n            });\n        }\n\n        return Promise.all(\n            modules.map(async (moduleBinder: IModuleBinder) => {\n                const definition = await getModuleDefinition(moduleBinder, StaticTelemetry);\n                this.moduleNamespaceMap[moduleBinder.name] = moduleBinder.moduleNamespace;\n                let moduleResources = definition.resources || {};\n\n                // Merge definition extension resources\n                if (defExtResources[moduleBinder.name]) {\n                    moduleResources = {\n                        ...moduleResources,\n                        ...defExtResources[moduleBinder.name]\n                    };\n                }\n\n                const resourcesObject = {};\n                Object.keys(moduleResources).map(key => {\n                    resourcesObject[key] = moduleResources[key].value;\n                });\n\n                this.moduleResourceKeys[definition.name] = resourcesObject;\n\n                return definition;\n            })\n        );\n    }\n\n    private _getMergedAuthoringResources(\n        moduleAuthoringResources: IModuleAuthoringResourceDefinition,\n        overrideModuleAuthoringResources: IModuleAuthoringResourceDefinition\n    ): IModuleAuthoringResourceDefinition {\n        moduleAuthoringResources = moduleAuthoringResources || {};\n        overrideModuleAuthoringResources = overrideModuleAuthoringResources || {};\n\n        const mergedModuleAuthoringResources = {\n            ...moduleAuthoringResources,\n            ...overrideModuleAuthoringResources\n        };\n\n        // Do explicit merge of each properties as '...' does not do recursive merge\n\n        const moduleAuthoringResourceProperties = Object.keys(moduleAuthoringResources);\n        if (moduleAuthoringResourceProperties) {\n            moduleAuthoringResourceProperties.forEach(property => {\n                if (overrideModuleAuthoringResources[property]) {\n                    mergedModuleAuthoringResources[property] = {\n                        ...moduleAuthoringResources[property],\n                        ...(overrideModuleAuthoringResources[property] || {})\n                    };\n                }\n            });\n        }\n\n        return mergedModuleAuthoringResources;\n    }\n}\n"]}