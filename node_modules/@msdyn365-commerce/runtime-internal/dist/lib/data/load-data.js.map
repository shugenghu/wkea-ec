{"version":3,"file":"load-data.js","sourceRoot":"","sources":["../../../src/data/load-data.ts"],"names":[],"mappings":"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","sourcesContent":["/*!\n * Copyright (c) Microsoft Corporation.\n * All rights reserved. See LICENSE in the project root for license information.\n */\n\nimport { ActionContext, addLocaleInformation } from '@msdyn365-commerce/action-internal';\nimport { ICache } from '@msdyn365-commerce/cache-internal';\nimport {\n    IAction,\n    IActionInput,\n    IDataActionOptions,\n    IDictionary,\n    IModuleContract,\n    IRequestContext,\n    IThemeModule,\n    msdyn365Commerce\n} from '@msdyn365-commerce/core-internal';\nimport {\n    asSystemMetadata,\n    EXCEPTION_DATAACTION_EXECUTION,\n    EXCEPTION_LOADDATA_ACTION,\n    EXCEPTION_LOADDATA_ACTION_0,\n    EXCEPTION_LOADDATA_ACTION_1,\n    EXCEPTION_LOADDATA_ACTION_2,\n    InternalTelemetry,\n    ITelemetry,\n    LogLevel,\n    MESSAGE_CREATE_INPUT_LOADDATA\n} from '@msdyn365-commerce/telemetry-internal';\nimport { ActionRuntime, IDataAction } from '../app-initialization/models';\nimport { LAZYLOAD_SWITCH_PREFIX } from '../consts';\nimport { combineExtendedDataActionToModule } from '../utils/data-action-extension-helper';\n\ninterface IDataActionMetadata {\n    dataActionFunction: IAction<unknown>;\n    inputs: IActionInput[];\n    name: string;\n    path: string;\n    runOn: ActionRuntime;\n    id: string;\n    options?: IDataActionOptions;\n}\n\n/**\n * Method which stores temporary async results in the cache for actions which\n * will be run at a later time\n * @param tempMetadataList The list of actions which need temporary AsyncResults\n * @param requestCache The request cache\n */\nconst storeTemporaryAsyncResults = (tempMetadataList: IDataActionMetadata[], requestCache: ICache): void => {\n    const tempResultCacheItem = { item: { _type: 'AsyncResult', status: 'LOADING', runOn: 'client' } };\n\n    // Insert fake temporary AsyncResults for actions that will be deferred to client\n    tempMetadataList.forEach(tempMetadata => {\n        // Non-observable and instance actions should not get a temp promise\n        const firstInput = Array.isArray(tempMetadata.inputs) ? tempMetadata.inputs[0] : tempMetadata.inputs;\n        if (\n            !tempMetadata.dataActionFunction.prototype.isObservable ||\n            !tempMetadata.inputs ||\n            (firstInput && firstInput.dataCacheType && firstInput.dataCacheType() === 'instance')\n        ) {\n            return;\n        }\n\n        if (!Array.isArray(tempMetadata.inputs)) {\n            tempMetadata.inputs = [tempMetadata.inputs];\n        }\n\n        tempMetadata.inputs.forEach(tempInput => {\n            // Don't add temp promise if there is a mock or if the resolved data has already been inserted into the cache\n            if (\n                requestCache.get({ key: `${tempInput.getCacheObjectType()}:${tempInput.getCacheKey()}`, typeName: '__MOCK' }) ===\n                    undefined &&\n                requestCache.get({ key: `${tempInput.getCacheKey()}`, typeName: tempInput.getCacheObjectType() }) === undefined\n            ) {\n                requestCache.put({ key: tempInput.getCacheKey(), typeName: tempInput.getCacheObjectType() }, tempResultCacheItem);\n            }\n        });\n    });\n};\n\n/**\n * Runs all the data actions specificed in module definitions present on the page\n */\nexport const loadData = async (\n    modules: IModuleContract[],\n    context: IRequestContext,\n    internalTelemetry: InternalTelemetry,\n    moduleTelemetry: ITelemetry,\n    requestCache: ICache,\n    appCache: ICache | null,\n    complexDataTypesPromises?: Promise<void>[]\n) => {\n    if (!modules || modules.length === 0) {\n        return;\n    }\n\n    const dataActionMetadataList: IDataActionMetadata[] = [];\n    const lazyLoadModuleIds: { [index: string]: boolean } = {};\n    const tempMetadataList: IDataActionMetadata[] = [];\n\n    // Note: What modules will need to be lazyloaded due to feature switches\n    storeLazyloadModuleId(context, lazyLoadModuleIds);\n    loadDataProcessing(modules, lazyLoadModuleIds, context, internalTelemetry, dataActionMetadataList, tempMetadataList);\n    storeTemporaryAsyncResults(tempMetadataList, requestCache);\n\n    if (dataActionMetadataList.length === 0) {\n        // When there is no data actions, we still need to resolve complexTypePromises\n        if (complexDataTypesPromises) {\n            await Promise.all(complexDataTypesPromises);\n        }\n        return;\n    }\n    const promises = processDataActionMetadataList(\n        context,\n        requestCache,\n        dataActionMetadataList,\n        moduleTelemetry,\n        appCache,\n        internalTelemetry\n    );\n\n    if (complexDataTypesPromises) {\n        promises.push(...complexDataTypesPromises);\n    }\n\n    await Promise.all(promises);\n};\n\nconst fetchDataActionWithActionid = (lookupId: string) => {\n    // @ts-ignore\n    const dataActionFunction = msdyn365Commerce.dataAction(lookupId);\n    if (\n        dataActionFunction &&\n        dataActionFunction.default &&\n        dataActionFunction.default.prototype &&\n        dataActionFunction.default.prototype.inputFunc &&\n        typeof dataActionFunction.default.prototype.inputFunc === 'function'\n    ) {\n        return dataActionFunction;\n    }\n    return null;\n};\n\nconst loadDataProcessing = (\n    modules: IModuleContract[],\n    lazyLoadModuleIds: IDictionary<boolean>,\n    context: IRequestContext,\n    internalTelemetry: InternalTelemetry,\n    dataActionMetadataList: IDataActionMetadata[],\n    tempMetadataList: IDataActionMetadata[]\n) => {\n    modules.forEach((moduleContract: IModuleContract) => {\n        const moduleConfig = moduleContract.config;\n        if (typeof moduleConfig === 'object' && moduleConfig && moduleConfig.hasOwnProperty('clientRender')) {\n            lazyLoadModuleIds[moduleContract.id] = true;\n        }\n\n        // @ts-ignore\n        const moduleBinderInitial = msdyn365Commerce.moduleBinder(moduleContract.typeName);\n\n        const moduleBinder = context.params.theme\n            ? combineExtendedDataActionToModule(moduleBinderInitial, moduleContract.typeName, context.params.theme)\n            : moduleBinderInitial;\n\n        if (moduleBinder && moduleBinder.dataActions && moduleBinder.dataActions.length > 0) {\n            moduleBinder.dataActions.forEach((dataAction: IDataAction) => {\n                const lookupId = dataAction.id || dataAction.path;\n                if (dataAction.name && lookupId) {\n                    // @ts-ignore: DataAction method is not typed\n                    let dataActionFunction = msdyn365Commerce.dataAction(lookupId);\n                    if (\n                        dataActionFunction &&\n                        dataActionFunction.default &&\n                        dataActionFunction.default.prototype &&\n                        dataActionFunction.default.prototype.id\n                    ) {\n                        const newLookUpId = dataActionFunction.default.prototype.id;\n                        // if the dataAction function's id is different with lookup id, try to fetch the dataAction based on its id again.\n                        if (newLookUpId !== lookupId) {\n                            dataActionFunction = fetchDataActionWithActionid(newLookUpId) || dataActionFunction;\n                        }\n                    }\n                    if (\n                        dataActionFunction &&\n                        dataActionFunction.default &&\n                        dataActionFunction.default.prototype &&\n                        dataActionFunction.default.prototype.inputFunc &&\n                        typeof dataActionFunction.default.prototype.inputFunc === 'function'\n                    ) {\n                        try {\n                            processModuleDataAction(\n                                dataActionFunction,\n                                context,\n                                moduleContract,\n                                dataAction,\n                                dataActionMetadataList,\n                                internalTelemetry,\n                                lazyLoadModuleIds,\n                                tempMetadataList\n                            );\n                        } catch (e) {\n                            internalTelemetry.log(\n                                LogLevel.Debug,\n                                internalTelemetry.stringFormat(EXCEPTION_LOADDATA_ACTION_0, [dataAction.name, moduleContract.id])\n                            );\n                            internalTelemetry.log(LogLevel.Error, EXCEPTION_LOADDATA_ACTION, { exception: e });\n                        }\n                    } else {\n                        internalTelemetry.log(\n                            LogLevel.Debug,\n                            internalTelemetry.stringFormat(EXCEPTION_LOADDATA_ACTION_2, [dataAction.path, moduleContract.typeName])\n                        );\n                        internalTelemetry.log(LogLevel.Error, '', { exception: new Error(EXCEPTION_LOADDATA_ACTION_1) });\n                    }\n                }\n            });\n            internalTelemetry.log(\n                LogLevel.Debug,\n                internalTelemetry.stringFormat(MESSAGE_CREATE_INPUT_LOADDATA, [\n                    (moduleContract.dataActions || []).map(d => d.name).join(' | '),\n                    moduleContract.typeName,\n                    moduleContract.id\n                ])\n            );\n        }\n    });\n};\n\nconst processModuleDataAction = (\n    dataActionFunction,\n    context: IRequestContext,\n    moduleContract: IModuleContract,\n    dataAction: IDataAction,\n    dataActionMetadataList: IDataActionMetadata[],\n    internalTelemetry: InternalTelemetry,\n    lazyLoadModuleIds: IDictionary<boolean>,\n    tempMetadataList: IDataActionMetadata[]\n) => {\n    let inputs;\n    try {\n        inputs = dataActionFunction.default.prototype.inputFunc({\n            requestContext: context,\n            config: moduleContract.config,\n            data: moduleContract.data\n        });\n        const isArray = Array.isArray(inputs);\n        moduleContract.dataActions = moduleContract.dataActions || [];\n        addLocaleInformation(inputs, context.locale);\n        moduleContract.dataActions.push({\n            name: dataAction.name,\n            entity: isArray ? inputs[0].getCacheObjectType() : inputs.getCacheObjectType(),\n            inputs: isArray ? inputs.map((input: IActionInput) => input.getCacheKey()) : inputs.getCacheKey()\n        });\n    } catch (e) {\n        internalTelemetry.log(LogLevel.Debug, 'Unable to create input for Module: {id}, Action: {name}', {\n            values: [asSystemMetadata(moduleContract.id), asSystemMetadata(dataAction.name)]\n        });\n        moduleContract.dataActions = moduleContract.dataActions || [];\n        moduleContract.dataActions.push({\n            name: dataAction.name,\n            entity: undefined,\n            inputs: undefined\n        });\n    }\n\n    if (\n        msdyn365Commerce.isBrowser ||\n        (!context.features.lazyload_all &&\n            dataAction.runOn === ActionRuntime.server &&\n            !lazyLoadModuleIds[moduleContract.id] &&\n            !lazyLoadModuleIds[moduleContract.typeName])\n    ) {\n        dataActionMetadataList.push({\n            name: dataAction.name,\n            runOn: dataAction.runOn,\n            path: dataAction.path,\n            id: dataAction.id,\n            inputs: inputs,\n            dataActionFunction: dataActionFunction.default,\n            ...(dataAction.options && { options: dataAction.options })\n        });\n    } else {\n        tempMetadataList.push({\n            name: dataAction.name,\n            runOn: dataAction.runOn,\n            path: dataAction.path,\n            id: dataAction.id,\n            inputs: inputs,\n            dataActionFunction: dataActionFunction.default\n        });\n    }\n};\n\n//\nconst storeLazyloadModuleId = (renderingContext: IRequestContext, lazyLoadModuleIds: IDictionary<boolean>) => {\n    if (renderingContext.features) {\n        Object.keys(renderingContext.features).forEach(switchName => {\n            if (switchName.startsWith(LAZYLOAD_SWITCH_PREFIX) && renderingContext.features[switchName]) {\n                lazyLoadModuleIds[switchName.replace(LAZYLOAD_SWITCH_PREFIX, '')] = true;\n            }\n        });\n    }\n};\n\nconst processDataActionMetadataList = (\n    context: IRequestContext,\n    requestCache: ICache,\n    dataActionMetadataList: IDataActionMetadata[],\n    moduleTelemetry: ITelemetry,\n    appCache: ICache | null,\n    internalTelemetry: InternalTelemetry\n) => {\n    const actionContext = new ActionContext({\n        id: 'T1',\n        requestContext: context,\n        requestCache: requestCache,\n        expectedActionCount: dataActionMetadataList.length,\n        telemetry: moduleTelemetry,\n        appCache\n    });\n\n    return dataActionMetadataList\n        .map((dataActionMetadata: IDataActionMetadata) => {\n            // all client side actions are lazy loaded inorder not to interfere with the client hydrate.\n            // therefore only return those promises that are non-observable and instance actions\n            if (process.env.CURRENT_ENVIRONMENT === 'web') {\n                const promise = actionContext\n                    .chainAction(dataActionMetadata.dataActionFunction, dataActionMetadata.inputs, dataActionMetadata.options)\n                    .catch(e => {\n                        internalTelemetry.log(LogLevel.Error, EXCEPTION_DATAACTION_EXECUTION, {\n                            values: [asSystemMetadata(dataActionMetadata.path)],\n                            exception: (e && e.error) || e\n                        });\n                    });\n\n                // We still need to await non-observable client-side data actions (public-preview)\n                if (!dataActionMetadata.dataActionFunction.prototype.isObservable) {\n                    return promise;\n                }\n\n                // we should await on observable 'instance' actions that are configured to runOn 'server'\n                if (context.features && !context.features.disable_inst_action_await && isServerInstanceAction(dataActionMetadata)) {\n                    return promise;\n                }\n            } else {\n                return actionContext\n                    .chainAction(dataActionMetadata.dataActionFunction, dataActionMetadata.inputs, dataActionMetadata.options)\n                    .catch(e => {\n                        internalTelemetry.log(LogLevel.Error, EXCEPTION_DATAACTION_EXECUTION, {\n                            values: [asSystemMetadata(dataActionMetadata.id || dataActionMetadata.name)],\n                            exception: (e && e.error) || e\n                        });\n                    });\n            }\n        })\n        .filter(Boolean);\n};\n\nconst isServerInstanceAction = (dataActionMetadata: IDataActionMetadata) => {\n    const firstInput = Array.isArray(dataActionMetadata.inputs) ? dataActionMetadata.inputs[0] : dataActionMetadata.inputs;\n    return (\n        dataActionMetadata.runOn === ActionRuntime.server &&\n        dataActionMetadata.dataActionFunction.prototype.isObservable &&\n        firstInput &&\n        firstInput.dataCacheType &&\n        firstInput.dataCacheType() === 'instance'\n    );\n};\n"]}