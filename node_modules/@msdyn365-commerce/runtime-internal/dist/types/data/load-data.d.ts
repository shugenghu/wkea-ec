/*!
 * Copyright (c) Microsoft Corporation.
 * All rights reserved. See LICENSE in the project root for license information.
 */
import { ActionContext, IRefreshConfigs } from '@msdyn365-commerce/action-internal';
import { ICache } from '@msdyn365-commerce/cache-internal';
import { IAction, IActionInput, IDataActionOptions, IModuleContract, IRequestContext } from '@msdyn365-commerce/core-internal';
import { InternalTelemetry, ITelemetry } from '@msdyn365-commerce/telemetry-internal';
import { ActionRuntime } from '../app-initialization/models';
export interface IDataActionMetadata {
    dataActionFunction: IAction<unknown>;
    inputs: IActionInput[];
    name: string;
    runOn: ActionRuntime;
    id: string;
    options?: IDataActionOptions;
}
/**
 * Runs all the data actions specificed in module definitions present on the page
 */
export declare const loadData: (modules: IModuleContract<{}, unknown>[], context: IRequestContext, internalTelemetry: InternalTelemetry, moduleTelemetry: ITelemetry, requestCache: ICache, appCache: ICache | null, complexDataTypesPromises?: Promise<void>[] | undefined) => Promise<IRefreshConfigs[]>;
export declare const processDataActionMetadataList: (actionContext: ActionContext, dataActionMetadataList: IDataActionMetadata[], internalTelemetry: InternalTelemetry) => (Promise<unknown> | undefined)[];
export declare const convertRunOnToString: (runtime: ActionRuntime) => "client" | "server" | "serverOnly";
