/*!
 * Copyright (c) Microsoft Corporation.
 * All rights reserved. See LICENSE in the project root for license information.
 */
import { CacheType, IActionContext, IActionInput, ICommerceApiSettings } from '@msdyn365-commerce/core-internal';
/**
 * Links coming from OneRF will have the following structure
 */
export interface IServerLink {
    type: string;
    productId?: number;
    categoryId?: number;
    destinationUrl?: string;
    error?: string;
    [x: string]: any;
}
/**
 * Used by the URL builder to construct the formatted
 * category or product link
 */
export interface IPageTypeContext {
    category?: {
        Slug: string;
        RecordId: number;
    };
    product?: {
        Name: string;
        RecordId: number;
    };
    [x: string]: any;
}
/**
 * Input Class for ProductLink related actions
 */
export declare class ProductLinkInput implements IActionInput {
    categoryId: number;
    productId: number | undefined;
    channelId: number;
    private apiSettings;
    constructor(apiSettings: ICommerceApiSettings, categoryId: number, productId?: number);
    getCacheKey: () => string;
    getCacheObjectType: () => string;
    dataCacheType: () => CacheType;
}
/**
 * Input Class for CategoryLink related actions
 */
export declare class CategoryLinkInput implements IActionInput {
    categoryId: number;
    channelId: number;
    private apiSettings;
    constructor(apiSettings: ICommerceApiSettings, categoryId: number);
    getCacheKey: () => string;
    getCacheObjectType: () => string;
    dataCacheType: () => CacheType;
}
/**
 * ProductList metadata passed from CMS used to hydrate product list
 */
export interface IProductListMetaData {
    listType: string;
    productIds?: number[];
    categoryIds?: number[];
    searchText?: string;
    includePageContext?: boolean;
    includeDescendentCategoryChildren?: boolean;
    includeCart?: boolean;
    personalization?: boolean;
    recommendationListId?: string;
    relationshipId?: string;
    pageSize?: number;
}
export declare enum ProductListType {
    algo = 0,
    editorial = 1,
    productByCategory = 2,
    productBySearch = 3,
    recommendation = 4,
    relatedProducts = 5
}
/**
 * Input Class for ProductList related actions
 */
export declare class ProductListInput implements IActionInput {
    listMetadata: IProductListMetaData;
    channelId: number;
    catalogId: number;
    private _cacheType;
    private _cacheObjectType;
    private _cacheKey;
    constructor(listMetadata: IProductListMetaData, actionContext: IActionContext);
    getCacheKey: () => string;
    getCacheObjectType: () => string;
    dataCacheType: () => CacheType;
}
