/*!
 * Copyright (c) Microsoft Corporation.
 * All rights reserved. See LICENSE in the project root for license information.
 */
import { IInternalTelemetry, InternalTelemetry } from '@msdyn365-commerce/telemetry-internal';
import { NextFunction, Request, Response } from 'express';
export declare const preProcessRequest: (req: Request<import("express-serve-static-core").ParamsDictionary>, res: Response<any>, computerName: string | undefined, telemetry: IInternalTelemetry) => import("@msdyn365-commerce/core-internal").IRequestContext;
export declare const handleServerException: (res: Response<any>, message: string, error: Error, telemetry: InternalTelemetry, status?: number) => Response<any>;
/**
 * Express middleware function for error handling.
 * @param error javascript Error object that was thrown by the server
 * @param req Express request object
 * @param res Express response object
 * @param next Express Next function
 */
export declare const serverExceptionParser: (error: Error, req: Request<import("express-serve-static-core").ParamsDictionary>, res: Response<any>, next: NextFunction) => void;
export declare const prepareErrorResponse: (request: Request<import("express-serve-static-core").ParamsDictionary>, response: Response<any>, error: Error, telemetry: IInternalTelemetry) => void;
