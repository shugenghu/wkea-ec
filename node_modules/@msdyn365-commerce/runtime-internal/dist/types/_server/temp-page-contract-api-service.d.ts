/*!
 * Copyright (c) Microsoft Corporation.
 * All rights reserved. See LICENSE in the project root for license information.
 */
import { IPageResponse, IRequestContext } from '@msdyn365-commerce/core-internal';
import { IInternalTelemetry, InternalTelemetry } from '@msdyn365-commerce/telemetry-internal';
import { Request, Response } from 'express';
/**
 * PageContract API
 *
 */
export declare namespace PageContractApiService {
    /**
     * Populates page module section
     * @param page
     */
    const _inlineMockModules: (page: IPageResponse) => Promise<IPageResponse>;
    /**
     * Retireves page response data from mock JSON files
     */
    const getMockPayload: (mockName: string) => Promise<IPageResponse>;
    /**
     * Retrieves page response data from theme layout
     */
    const getThemeLayout: (themeName: string, pageType: string, layout: string, telemetry: IInternalTelemetry) => Promise<any>;
    /**
     * Retrieves theme segment
     */
    const getThemeSegment: (themeName: string, segmentName: string, telemetry: IInternalTelemetry) => Promise<any>;
    /**
     * Call server to retrieve page response
     */
    const getServerPageResponse: (url: string, telemetry: IInternalTelemetry, requestContext: IRequestContext, idToken: string, userAgent: string | undefined, mockUser?: boolean, retry?: boolean) => any;
    const parsePayload: (content: string | object) => IPageResponse;
    /**
     * Sets the pageResponse object by either using mock if mock query param is supplied
     * or by requesting the page response object from OneRF
     *
     * @param req Request
     * @param res Response
     * @param serverHost OneRF server host
     */
    const handleGetPageResponse: (req: Request<import("express-serve-static-core").ParamsDictionary>, res: Response<any>, serverHost: string) => Promise<void>;
    /**
     * Retrieves a page response from server or Mock data
     */
    const getPageResponse: (telemetry: InternalTelemetry, requestContext: IRequestContext, idToken: string, userAgent: string | undefined, serverUrlConfigs: {
        serverHost: string;
        pathname: string;
        query: string;
    }, mockUser: boolean) => Promise<IPageResponse>;
}
export default PageContractApiService;
