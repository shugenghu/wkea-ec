/*!
 * Copyright (c) Microsoft Corporation.
 * All rights reserved. See LICENSE in the project root for license information.
 */
import { ICache } from '@msdyn365-commerce/cache-internal';
import { IDataActionOptions, IDictionary, IRequestContext, IResourceManager, IThemeModule, MSDyn365Commerce } from '@msdyn365-commerce/core-internal';
import * as React from 'react';
export interface IDataAction {
    moduleName?: string;
    id: string;
    name: string;
    path: string;
    runOn: ActionRuntime;
    options?: IDataActionOptions;
}
export declare enum ActionRuntime {
    server = 0,
    client = 1,
    serverOnly = 2
}
export interface IModuleDefinition {
    name: string;
}
export interface IModuleBinder {
    $type: string;
    component: any;
    dataActions: IDataAction[];
    definitionExtensions?: string[];
    definitionPath: string;
    isNodeModule: boolean;
    moduleNamespace: string;
    name: string;
    packageName: string;
    pages?: IDictionary<string[]>;
    parentDefinitionPath: string;
    path: string;
    segments: string[];
    moduleDirectory: string;
    themeSettings: string;
}
export interface IPrototype {
    prototype: IMSDyn365CommerceExtension;
}
interface IDAPIBindings {
    modules: IDictionary<any>;
    themes: IThemeModule[];
}
export interface IBinding {
    modules: IDictionary<IModuleBinder>;
    dataActions: IDictionary<Function>;
    views: IDictionary<React.FC>;
    components: IDictionary<React.FC>;
    connectors: IDictionary<any>;
    dapi: IDAPIBindings;
}
export interface IMSDyn365CommerceExtension {
    bindings: IBinding;
    appCache: IDictionary<ICache>;
    resourceManager: IResourceManager;
    getResourceManager(): IResourceManager;
    dataAction(name: string): Function;
    getConnector(name: string): any;
    getAppCache(requestContext: IRequestContext): ICache;
    moduleBinder(name: string): IModuleBinder;
    viewBinder(name: string): any;
    componentBinder(name: string): any;
    getAllModuleBinder(): IModuleBinder[];
    updatePrivateVariable(): void;
}
export declare type IMSDyn365CommerceWithPrototype = typeof MSDyn365Commerce & IPrototype;
export {};
