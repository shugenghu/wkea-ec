/*!
 * Copyright (c) Microsoft Corporation.
 * All rights reserved. See LICENSE in the project root for license information.
 */
import React from 'react';
export declare type IAddModuleProps = {
    moduleId: string;
    slotId: string;
    enabled: boolean;
    mode: AddControlMode;
    index?: number;
    slotName?: string;
    parentId?: string;
};
export declare enum AddControlMode {
    EmptySlot = 0,
    Sibling = 1
}
export interface IAddModuleState {
    moduleId: string;
}
/**
 * Editable field component, containing all the logic for inline editable properties in editorial preview
 * Current support: text, image
 */
export declare class AddModuleControl extends React.Component<IAddModuleProps, IAddModuleState> {
    constructor(props: IAddModuleProps);
    render(): JSX.Element | null;
    toggleMenuDisplay: () => void;
    hideMenuDisplay: () => void;
    getAddButtonId: () => string;
    onKeyPressMenu: (event: React.KeyboardEvent<Element>) => void;
    onKeyPressAddModule: (event: React.KeyboardEvent<Element>) => void;
    onKeyPressAddFragment: (event: React.KeyboardEvent<Element>) => void;
    getAddButtonMenuId: () => string;
    addModule: () => void;
    addFragment: () => void;
}
