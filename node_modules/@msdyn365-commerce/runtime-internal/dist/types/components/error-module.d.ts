/*!
 * Copyright (c) Microsoft Corporation.
 * All rights reserved. See LICENSE in the project root for license information.
 */
import { IDictionary, IModule } from '@msdyn365-commerce/core-internal';
import { InternalTelemetry } from '@msdyn365-commerce/telemetry-internal';
import React from 'react';
import { TSafeRenderModuleProps, TSafeRenderModuleState } from './safe-render-module';
declare type ErrorType = 'empty' | 'unregistered' | 'error';
interface IErrorModuleProps extends IModule {
    id: string;
    errorType: ErrorType;
    error: Error;
    message?: string;
}
/**
 * The error module
 */
export declare const ErrorModule: React.SFC<IErrorModuleProps>;
export declare const renderErrorOrPlaceHolderModules: (err: Error, internalTelemetry: InternalTelemetry, mappedProps: any, state: TSafeRenderModuleState, props: TSafeRenderModuleProps, isEditor: boolean, renderModuleAttributes: (props: {
    [x: string]: any;
}) => IDictionary<string>) => JSX.Element | undefined;
export {};
