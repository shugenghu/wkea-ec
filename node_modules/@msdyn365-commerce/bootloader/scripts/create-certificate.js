/*******************************************************************************
* Copyright (c) Microsoft Corporation.
* All rights reserved. See LICENSE in the project root for license information.
*******************************************************************************/


const selfsigned = require('selfsigned');
const { safeReadFileSync, safeWriteFile } = require('@msdyn365-commerce/utilities-internal');

// TODO: allow this to be overwritten
const keyPath = './.ssl/key.pem';
const certPath = './.ssl/cert.pem';

function generateCert(attrs) {
    return selfsigned.generate(attrs, {
        algorithm: 'sha256',
        days: 1,
        keySize: 2048,
        extensions: [
            {
                name: 'basicConstraints',
                cA: true
            },
            {
                name: 'keyUsage',
                keyCertSign: true,
                digitalSignature: true,
                nonRepudiation: true,
                keyEncipherment: true,
                dataEncipherment: true
            },
            {
                name: 'subjectAltName',
                altNames: [
                    {
                        // type 2 is DNS
                        type: 2,
                        value: 'localhost'
                    },
                    {
                        type: 2,
                        value: 'localhost.localdomain'
                    },
                    {
                        type: 2,
                        value: 'lvh.me'
                    },
                    {
                        type: 2,
                        value: '*.lvh.me'
                    },
                    {
                        type: 2,
                        value: '[::1]'
                    },
                    {
                        // type 7 is IP
                        type: 7,
                        ip: '127.0.0.1'
                    },
                    {
                        type: 7,
                        ip: 'fe80::1'
                    }
                ]
            }
        ]
    });
}

function createCertificate() {
    let key = safeReadFileSync(keyPath);
    let cert = safeReadFileSync(certPath);

    if (!key || !cert || process.argv.includes('--new-certs')) {
        const perms = generateCert([
            {
                name: 'commonName',
                value: 'localhost'
            }
        ]);
        key = perms.private;
        cert = perms.cert;
        safeWriteFile(keyPath, key);
        safeWriteFile(certPath, cert);
    }

    return {
        key,
        cert
    };
}

module.exports = createCertificate;
