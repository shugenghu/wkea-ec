/*******************************************************************************
* Copyright (c) Microsoft Corporation.
* All rights reserved. See LICENSE in the project root for license information.
*******************************************************************************/


module.exports = (target, isDev) => {
    return {
        sourceType: 'unambiguous',
        babelrc: false,
        sourceMaps: 'inline',
        presets: [
            [
                require.resolve('@babel/preset-env'),

                target === 'web'
                    ? {
                          modules: false,
                          // build for browsers with global usage statistics greater than .5%, last two major versions of all browsers,
                          // Edge versions 15 through 18 (the last four versions of old Edge),
                          // no IE 11 and browsers that are not 'dead'
                          // 'dead': browsers without official support or updates for 24 months. 
                          // Right now it is IE 10, IE_Mob 11, BlackBerry 10, BlackBerry 7, Samsung 4 and OperaMobile 12.1.
                          // For more info on how this query is built see https://github.com/browserslist/browserslist
                          targets: "> 0.5%, last 2 major versions, Edge 15-18, not IE 11, not dead",
                          useBuiltIns: 'usage',
                          corejs: 3
                      }
                    : {
                          modules: false
                      }
            ],
            require.resolve('@babel/preset-react')
        ],
        plugins: [
            !isDev && target === 'node' && [require.resolve('babel-plugin-transform-remove-console'), { exclude: ['error', 'warn'] }],
            require.resolve('babel-plugin-lodash'),
            // TSC with module:esnext will emit this
            require.resolve('@babel/plugin-proposal-optional-catch-binding'),

            // universal import wrapper
            [require.resolve('babel-plugin-universal-import')],

            // // Stage 3
            require.resolve('@babel/plugin-syntax-dynamic-import'),
            require.resolve('@babel/plugin-syntax-import-meta'),

            [
                require.resolve('@babel/plugin-transform-runtime'),
                {
                    useESModules: true,
                    helpers: true
                }
            ],
            [
                require.resolve('babel-plugin-transform-imports'),
                {
                    reactstrap: {
                        transform: function(importName, matches) {
                            return `reactstrap/lib/${importName}`;
                        },
                        preventFullImport: true
                    }
                }
            ]
        ].filter(Boolean),
        overrides: [
            {
                // don't try to pretty-print js files, they could already be minified
                test: /\.js/,
                compact: true
            }
        ]
    };
};
