/*!
 * Copyright (c) Microsoft Corporation.
 * All rights reserved. See LICENSE in the project root for license information.
 */
import { ILoggingSink } from './ConsoleEventWriter';
/**
 * Attaches the logging sink to the LoggerBase.
 *
 * @method attachLoggingSink
 * @param sink {ILoggingSink} Sink to attach to Retail Logger.
 */
export declare function attachLoggingSink(sink: ILoggingSink): void;
/**
 * Class represents proxy events.
 * Event Code Range: 44000 - 44999.
 */
export declare class RetailLogger {
    static LogEvent(eventName: Function, error?: string): void;
    static genericError(message: string): void;
    static genericWarning(message: string): void;
    static genericInfo(message: string): void;
    static modelManagersRetailServerRequestStarted(requestId: string, requestUrl: string): void;
    static modelManagersRetailServerRequestError(requestId: string, requestUrl: string, error: string): void;
    static modelManagersRetailServerRequestFinished(requestId: string, requestUrl: string): void;
    static initEntitySetInvalidError(entitySetId: string): void;
    static initEntitySetMultipleTimesError(entitySetId: string): void;
    static initEntitySetNoMethodNumberError(): void;
    static initPaymentEntitySetInvalidError(entitySetId: string): void;
    static initPaymentEntitySetMultipleTimesError(entitySetId: string): void;
    static initPaymentEntitySetNoMethodNumberError(): void;
    static shoppingCartServiceGetShoppingCartStarted(): void;
    static shoppingCartServiceGetShoppingCartError(error: string): void;
    static shoppingCartServiceGetShoppingCartFinished(): void;
    static shoppingCartServiceRemoveFromCartStarted(): void;
    static shoppingCartServiceRemoveFromCartError(error: string): void;
    static shoppingCartServiceRemoveFromCartFinished(): void;
    static shoppingCartApplyPromotionCodeStarted(): void;
    static shoppingCartApplyPromotionCodeError(error: string): void;
    static shoppingCartApplyPromotionCodeFinished(): void;
    static shoppingCartUpdateQuantityStarted(): void;
    static shoppingCartUpdateQuantityError(error: string): void;
    static shoppingCartUpdateQuantityFinished(): void;
    static shoppingCartRemovePromotionCodeStarted(): void;
    static shoppingCartRemovePromotionCodeError(error: string): void;
    static shoppingCartRemovePromotionCodeFinished(): void;
    static shoppingCartUpdateLoyaltyCardIdStarted(): void;
    static shoppingCartUpdateLoyaltyCardIdError(error: string): void;
    static shoppingCartUpdateLoyaltyCardIdFinished(): void;
    static shoppingCartCommenceCheckoutStarted(): void;
    static shoppingCartCommenceCheckoutError(error: string): void;
    static shoppingCartCommenceCheckoutFinished(): void;
    static shoppingCartGetPromotionsStarted(): void;
    static shoppingCartGetPromotionsError(error: string): void;
    static shoppingCartGetPromotionsFinished(): void;
    static getSimpleProductsByIdStarted(): void;
    static getSimpleProductsByIdError(error: string): void;
    static getSimpleProductsByIdFinished(): void;
    static getKitComponentsError(): void;
    static searchProductsByProductIdsStarted(): void;
    static searchProductsByProductIdsError(error: string): void;
    static searchProductsByProductIdsFinished(): void;
    static checkoutServiceGetAllDeliveryOptionDescriptionsStarted(): void;
    static checkoutServiceGetAllDeliveryOptionDescriptionsError(error: string): void;
    static checkoutServiceGetAllDeliveryOptionDescriptionsFinished(): void;
    static checkoutServiceGetDeliveryPreferencesStarted(): void;
    static checkoutServiceGetDeliveryPreferencesError(error: string): void;
    static checkoutServiceGetDeliveryPreferencesFinished(): void;
    static checkoutServiceGetOrderDeliveryOptionsStarted(): void;
    static checkoutServiceGetOrderDeliveryOptionsError(error: string): void;
    static checkoutServiceGetOrderDeliveryOptionsFinished(): void;
    static checkoutServiceGetItemDeliveryOptionsStarted(): void;
    static checkoutServiceGetItemDeliveryOptionsError(error: string): void;
    static checkoutServiceGetItemDeliveryOptionsFinished(): void;
    static checkoutServiceUpdateDeliverySpecificationsStarted(): void;
    static checkoutServiceUpdateDeliverySpecificationsError(error: string): void;
    static checkoutServiceUpdateDeliverySpecificationsFinished(): void;
    static checkoutServiceUpdateLineDeliverySpecificationsStarted(): void;
    static checkoutServiceUpdateLineDeliverySpecificationsError(error: string): void;
    static checkoutServiceUpdateLineDeliverySpecificationsFinished(): void;
    static checkoutServiceGetPaymentCardTypesStarted(): void;
    static checkoutServiceGetPaymentCardTypesError(error: string): void;
    static checkoutServiceGetPaymentCardTypesFinished(): void;
    static checkoutServiceGetGiftCardBalanceStarted(): void;
    static checkoutServiceGetGiftCardBalanceError(error: string): void;
    static checkoutServiceGetGiftCardBalanceFinished(): void;
    static checkoutServiceSubmitOrderStarted(): void;
    static checkoutServiceSubmitOrderError(error: string): void;
    static checkoutServiceSubmitOrderFinished(): void;
    static checkoutServiceGetCardPaymentAcceptUrlStarted(): void;
    static checkoutServiceGetCardPaymentAcceptUrlFinished(): void;
    static checkoutServiceGetCardPaymentAcceptUrlError(error: string): void;
    static checkoutServiceRetrieveCardPaymentAcceptResultStarted(): void;
    static checkoutServiceRetrieveCardPaymentAcceptResultFinished(): void;
    static checkoutServiceRetrieveCardPaymentAcceptResultError(error: string): void;
    static checkoutServiceCleanUpAfterSuccessfulOrderStarted(): void;
    static checkoutServiceCleanUpAfterSuccessfulOrderError(error: string): void;
    static checkoutServiceCleanUpAfterSuccessfulOrderFinished(): void;
    static channelServiceGetChannelConfigurationStarted(): void;
    static channelServiceGetChannelConfigurationError(error: string): void;
    static channelServiceGetChannelConfigurationFinished(): void;
    static channelServiceGetCountryRegionInfoStarted(): void;
    static channelServiceGetCountryRegionInfoError(error: string): void;
    static channelServiceGetCountryRegionInfoFinished(): void;
    static channelServiceGetStateProvinceInfoStarted(): void;
    static channelServiceGetStateProvinceInfoError(error: string): void;
    static channelServiceGetStateProvinceInfoFinished(): void;
    static channelServiceGetTenderTypesStarted(): void;
    static channelServiceGetTenderTypesError(error: string): void;
    static channelServiceGetTenderTypesFinished(): void;
    static channelServiceGetCardTypesStarted(): void;
    static channelServiceGetCardTypesError(error: string): void;
    static channelServiceGetCardTypesFinished(): void;
    static storeProductAvailabilityServiceGetNearbyStoresWithAvailabilityStarted(): void;
    static storeProductAvailabilityServiceGetNearbyStoresWithAvailabilityError(error: string): void;
    static storeProductAvailabilityServiceGetNearbyStoresWithAvailabilityFinished(): void;
    static storeProductAvailabilityServiceGetNearbyStoresStarted(): void;
    static storeProductAvailabilityServiceGetNearbyStoresError(error: string): void;
    static storeProductAvailabilityServiceGetNearbyStoresFinished(): void;
    static loyaltyServiceGetLoyaltyCardsStarted(): void;
    static loyaltyServiceGetLoyaltyCardsError(error: string): void;
    static loyaltyServiceGetLoyaltyCardsFinished(): void;
    static loyaltyServiceUpdateLoyaltyCardIdStarted(): void;
    static loyaltyServiceUpdateLoyaltyCardIdError(error: string): void;
    static loyaltyServiceUpdateLoyaltyCardIdFinished(): void;
    static customerServiceGetCustomerStarted(): void;
    static customerServiceGetCustomerError(error: string): void;
    static customerServiceGetCustomerFinished(): void;
    static customerServiceIsAuthenticationSessionStarted(): void;
    static customerServiceIsAuthenticationSessionError(error: string): void;
    static customerServiceIsAuthenticationSessionFinished(): void;
    static getOrderHistoryStarted(): void;
    static getOrderHistoryError(error: string): void;
    static getOrderHistoryFinished(): void;
    static getOrderDetailsStarted(): void;
    static getOrderDetailsError(error: string): void;
    static getOrderDetailsFinished(): void;
    static createWishListStarted(): void;
    static createWishListError(error: string): void;
    static createWishListFinished(): void;
    static deleteWishListStarted(): void;
    static deleteWishListError(error: string): void;
    static deleteWishListFinished(): void;
    static updateWishListStarted(): void;
    static updateWishListError(error: string): void;
    static updateWishListFinished(): void;
    static getWishListsStarted(): void;
    static getWishListsError(error: string): void;
    static getWishListsFinished(): void;
    static getWishListStarted(): void;
    static getWishListError(error: string): void;
    static getWishListFinished(): void;
    static addLinesToWishListStarted(): void;
    static addLinesToWishListError(error: string): void;
    static addLinesToWishListFinished(): void;
    static removeItemsFromWishListStarted(): void;
    static removeItemsFromWishListError(error: string): void;
    static removeItemsFromWishListFinished(): void;
    static updateLinesOnWishListStarted(): void;
    static updateLinesOnWishListError(error: string): void;
    static updateLinesOnWishListFinished(): void;
    static addItemsToCartStarted(): void;
    static addItemsToCartError(error: string): void;
    static addItemsToCartFinished(): void;
}
