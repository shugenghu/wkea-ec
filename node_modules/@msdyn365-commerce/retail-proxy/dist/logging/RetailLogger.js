/*!
 * Copyright (c) Microsoft Corporation.
 * All rights reserved. See LICENSE in the project root for license information.
 */
import { EventChannel, EventLevel, LoggerBase } from './ConsoleEventWriter';
/**
 * Attaches the logging sink to the LoggerBase.
 *
 * @method attachLoggingSink
 * @param sink {ILoggingSink} Sink to attach to Retail Logger.
 */
export function attachLoggingSink(sink) {
    LoggerBase.addLoggingSink(sink);
}
/**
 * Class represents proxy events.
 * Event Code Range: 44000 - 44999.
 */
export class RetailLogger {
    static LogEvent(eventName, error) {
        error ? eventName(error) : eventName();
    }
    // Core - Event Range: 44000 - 44099.
    static genericError(message) {
        LoggerBase.writeEvent('GenericEvent', 44000, 1, EventChannel.Operational, EventLevel.Error, [], '', '', '{0}');
    }
    static genericWarning(message) {
        LoggerBase.writeEvent('GenericWarning', 44001, 1, EventChannel.Operational, EventLevel.Warning, [], '', '', '{0}');
    }
    static genericInfo(message) {
        LoggerBase.writeEvent('GenericInfo', 44002, 1, EventChannel.Operational, EventLevel.Informational, [], '', '', '{0}');
    }
    static modelManagersRetailServerRequestStarted(requestId, requestUrl) {
        LoggerBase.writeEvent('ModelManagersRetailServerRequestStarted', 44004, 1, EventChannel.Debug, EventLevel.Informational, [], '', '', 'The Retail Server Request with request id \'{0}\' and request url \'{1}\' started.');
    }
    static modelManagersRetailServerRequestError(requestId, requestUrl, error) {
        LoggerBase.writeEvent('ModelManagersRetailServerRequestError', 44005, 1, EventChannel.Operational, EventLevel.Error, [], '', '', 'The Retail Server Request with request id \'{0}\' and request url \'{1}\' failed.  Error: {2}.');
    }
    static modelManagersRetailServerRequestFinished(requestId, requestUrl) {
        LoggerBase.writeEvent('ModelManagersRetailServerRequestFinished', 44006, EventChannel.Debug, 1, EventLevel.Informational, [], '', '', 'The Retail Server Request with request id \'{0}\' and request url \'{1}\' succeeded.');
    }
    static initEntitySetInvalidError(entitySetId) {
        LoggerBase.writeEvent('InitEntitySetInvalidError', 44007, 1, EventChannel.Operational, EventLevel.Error, [], '', '', 'A method with invalid InitEntitySet id \'{0}\' was reported.');
    }
    static initEntitySetMultipleTimesError(entitySetId) {
        LoggerBase.writeEvent('InitEntitySetMultipleTimesError', 44008, 1, EventChannel.Operational, EventLevel.Error, [], '', '', 'A method with InitEntitySet ID \'{0}\' was reported multiple times.');
    }
    static initEntitySetNoMethodNumberError() {
        LoggerBase.writeEvent('InitEntitySetNoMethodNumberError', 44009, 1, EventChannel.Operational, EventLevel.Error, [], '', '', 'The value InitEntitySet.All does not represent the number of methods that can be run');
    }
    static initPaymentEntitySetInvalidError(entitySetId) {
        LoggerBase.writeEvent('InitPaymentEntitySetInvalidError', 44010, 1, EventChannel.Operational, EventLevel.Error, [], '', '', 'A method with invalid InitPaymentEntitySet id \'{0}\' was reported.');
    }
    static initPaymentEntitySetMultipleTimesError(entitySetId) {
        LoggerBase.writeEvent('InitPaymentEntitySetMultipleTimesError', 44011, 1, EventChannel.Operational, EventLevel.Error, [], '', '', 'A method with InitPaymentEntitySet ID \'{0}\' was reported multiple times.');
    }
    static initPaymentEntitySetNoMethodNumberError() {
        LoggerBase.writeEvent('InitPaymentEntitySetNoMethodNumberError', 44012, 1, EventChannel.Operational, EventLevel.Error, [], '', '', 'The value InitPaymentEntitySet.All does not represent the number of methods that can be run');
    }
    // Shopping Cart Service - Event Range: 44100 - 44199.
    static shoppingCartServiceGetShoppingCartStarted() {
        LoggerBase.writeEvent('ShoppingCartServiceGetShoppingCartStarted', 44100, 1, EventChannel.Debug, EventLevel.Informational, [], '', '', 'Get shopping cart started.');
    }
    static shoppingCartServiceGetShoppingCartError(error) {
        LoggerBase.writeEvent('ShoppingCartServiceGetShoppingCartError', 44101, 1, EventChannel.Operational, EventLevel.Error, [], '', '', 'Get shopping cart failed with error {0}.');
    }
    static shoppingCartServiceGetShoppingCartFinished() {
        LoggerBase.writeEvent('ShoppingCartServiceGetShoppingCartFinished', 44102, 1, EventChannel.Debug, EventLevel.Informational, [], '', '', 'Get shopping cart finished.');
    }
    static shoppingCartServiceRemoveFromCartStarted() {
        LoggerBase.writeEvent('ShoppingCartServiceRemoveFromCartStarted', 44104, 1, EventChannel.Debug, EventLevel.Informational, [], '', '', 'Removing item from cart started.');
    }
    static shoppingCartServiceRemoveFromCartError(error) {
        LoggerBase.writeEvent('ShoppingCartServiceRemoveFromCartError', 44105, 1, EventChannel.Operational, EventLevel.Error, [], '', '', 'Removing item from cart failed with error {0}.');
    }
    static shoppingCartServiceRemoveFromCartFinished() {
        LoggerBase.writeEvent('ShoppingCartServiceRemoveFromCartFinished', 44106, 1, EventChannel.Debug, EventLevel.Informational, [], '', '', 'Removing item from cart finished.');
    }
    static shoppingCartApplyPromotionCodeStarted() {
        LoggerBase.writeEvent('ShoppingCartApplyPromotionCodeStarted', 44108, 1, EventChannel.Debug, EventLevel.Informational, [], '', '', 'Applying promotion code started.');
    }
    static shoppingCartApplyPromotionCodeError(error) {
        LoggerBase.writeEvent('ShoppingCartApplyPromotionCodeError', 44109, 1, EventChannel.Operational, EventLevel.Error, [], '', '', 'Applying promotion code failed with error {0}.');
    }
    static shoppingCartApplyPromotionCodeFinished() {
        LoggerBase.writeEvent('ShoppingCartApplyPromotionCodeFinished', 44110, 1, EventChannel.Debug, EventLevel.Informational, [], '', '', 'Applying promotion code finished.');
    }
    static shoppingCartUpdateQuantityStarted() {
        LoggerBase.writeEvent('ShoppingCartUpdateQuantityStarted', 44112, 1, EventChannel.Debug, EventLevel.Informational, [], '', '', 'Updating quantity started.');
    }
    static shoppingCartUpdateQuantityError(error) {
        LoggerBase.writeEvent('ShoppingCartUpdateQuantityError', 44113, 1, EventChannel.Operational, EventLevel.Error, [], '', '', 'Updating quantity failed with error {0}.');
    }
    static shoppingCartUpdateQuantityFinished() {
        LoggerBase.writeEvent('ShoppingCartUpdateQuantityFinished', 44114, 1, EventChannel.Debug, EventLevel.Informational, [], '', '', 'Updating quantity finished.');
    }
    static shoppingCartRemovePromotionCodeStarted() {
        LoggerBase.writeEvent('ShoppingCartRemovePromotionCodeStarted', 44116, 1, EventChannel.Debug, EventLevel.Informational, [], '', '', 'Removing promotion code started.');
    }
    static shoppingCartRemovePromotionCodeError(error) {
        LoggerBase.writeEvent('ShoppingCartRemovePromotionCodeError', 44117, 1, EventChannel.Operational, EventLevel.Error, [], '', '', 'Removing promotion code failed with error {0}.');
    }
    static shoppingCartRemovePromotionCodeFinished() {
        LoggerBase.writeEvent('ShoppingCartRemovePromotionCodeFinished', 44118, 1, EventChannel.Debug, EventLevel.Informational, [], '', '', 'Removing promotion code finished.');
    }
    static shoppingCartUpdateLoyaltyCardIdStarted() {
        LoggerBase.writeEvent('ShoppingCartUpdateLoyaltyCardIdStarted', 44120, 1, EventChannel.Debug, EventLevel.Informational, [], '', '', 'Updating loyalty card id started.');
    }
    static shoppingCartUpdateLoyaltyCardIdError(error) {
        LoggerBase.writeEvent('ShoppingCartUpdateLoyaltyCardIdError', 44121, 1, EventChannel.Operational, EventLevel.Error, [], '', '', 'Updating loyalty card id failed with error {0}.');
    }
    static shoppingCartUpdateLoyaltyCardIdFinished() {
        LoggerBase.writeEvent('ShoppingCartUpdateLoyaltyCardIdFinished', 44122, 1, EventChannel.Debug, EventLevel.Informational, [], '', '', 'Updating loyalty card id finished.');
    }
    static shoppingCartCommenceCheckoutStarted() {
        LoggerBase.writeEvent('ShoppingCartCommenceCheckoutStarted', 44124, 1, EventChannel.Debug, EventLevel.Informational, [], '', '', 'Commence checkout started.');
    }
    static shoppingCartCommenceCheckoutError(error) {
        LoggerBase.writeEvent('ShoppingCartCommenceCheckoutError', 44125, 1, EventChannel.Operational, EventLevel.Error, [], '', '', 'Commence checkout failed with error {0}.');
    }
    static shoppingCartCommenceCheckoutFinished() {
        LoggerBase.writeEvent('ShoppingCartCommenceCheckoutFinished', 44126, 1, EventChannel.Debug, EventLevel.Informational, [], '', '', 'Commence checkout finished.');
    }
    static shoppingCartGetPromotionsStarted() {
        LoggerBase.writeEvent('ShoppingCartGetPromotionsStarted', 44128, 1, EventChannel.Debug, EventLevel.Informational, [], '', '', 'Getting promotions started.');
    }
    static shoppingCartGetPromotionsError(error) {
        LoggerBase.writeEvent('ShoppingCartGetPromotionsError', 44129, 1, EventChannel.Operational, EventLevel.Error, [], '', '', 'Getting promotions failed with error {0}.');
    }
    static shoppingCartGetPromotionsFinished() {
        LoggerBase.writeEvent('ShoppingCartGetPromotionsFinished', 44130, 1, EventChannel.Debug, EventLevel.Informational, [], '', '', 'Getting promotions finished.');
    }
    static getSimpleProductsByIdStarted() {
        LoggerBase.writeEvent('getSimpleProductsByIdStarted', 44132, 1, EventChannel.Debug, EventLevel.Informational, [], '', '', 'Getting simple products by ids started.');
    }
    static getSimpleProductsByIdError(error) {
        LoggerBase.writeEvent('getSimpleProductsByIdError', 44133, 1, EventChannel.Operational, EventLevel.Error, [], '', '', 'Getting simple products by ids failed with error {0}.');
    }
    static getSimpleProductsByIdFinished() {
        LoggerBase.writeEvent('getSimpleProductsByIdFinished', 44134, 1, EventChannel.Debug, EventLevel.Informational, [], '', '', 'Getting simple products by ids finished.');
    }
    static getKitComponentsError() {
        LoggerBase.writeEvent('GetKitComponentsError', 44136, 1, EventChannel.Operational, EventLevel.Error, [], '', '', 'One of the kit components could not be retrieved.');
    }
    static searchProductsByProductIdsStarted() {
        LoggerBase.writeEvent('SearchProductsByProductIdsStarted', 44140, 1, EventChannel.Debug, EventLevel.Informational, [], '', '', 'Searching products by product ids started.');
    }
    static searchProductsByProductIdsError(error) {
        LoggerBase.writeEvent('SearchProductsByProductIdsError', 44141, 1, EventChannel.Operational, EventLevel.Error, [], '', '', 'Searching products by product ids failed with error {0}.');
    }
    static searchProductsByProductIdsFinished() {
        LoggerBase.writeEvent('SearchProductsByProductIdsFinished', 44142, 1, EventChannel.Debug, EventLevel.Informational, [], '', '', 'Searching products by product ids finished.');
    }
    // Checkout Service - Event Range: 44200 - 44299.
    static checkoutServiceGetAllDeliveryOptionDescriptionsStarted() {
        LoggerBase.writeEvent('CheckoutServiceGetAllDeliveryOptionDescriptionsStarted', 44200, 1, EventChannel.Debug, EventLevel.Informational, [], '', '', 'Get all delivery option descriptions started.');
    }
    static checkoutServiceGetAllDeliveryOptionDescriptionsError(error) {
        LoggerBase.writeEvent('CheckoutServiceGetAllDeliveryOptionDescriptionsError', 44201, 1, EventChannel.Operational, EventLevel.Error, [], '', '', 'Get all delivery option descriptions failed with error {0}.');
    }
    static checkoutServiceGetAllDeliveryOptionDescriptionsFinished() {
        LoggerBase.writeEvent('CheckoutServiceGetAllDeliveryOptionDescriptionsFinished', 44202, 1, EventChannel.Debug, EventLevel.Informational, [], '', '', 'Get all delivery option descriptions finished.');
    }
    static checkoutServiceGetDeliveryPreferencesStarted() {
        LoggerBase.writeEvent('CheckoutServiceGetDeliveryPreferencesStarted', 44204, 1, EventChannel.Debug, EventLevel.Informational, [], '', '', 'Getting delivery preferences started.');
    }
    static checkoutServiceGetDeliveryPreferencesError(error) {
        LoggerBase.writeEvent('CheckoutServiceGetDeliveryPreferencesError', 44205, 1, EventChannel.Operational, EventLevel.Error, [], '', '', 'Getting delivery preferences failed with error {0}.');
    }
    static checkoutServiceGetDeliveryPreferencesFinished() {
        LoggerBase.writeEvent('CheckoutServiceGetDeliveryPreferencesFinished', 44206, 1, EventChannel.Debug, EventLevel.Informational, [], '', '', 'Getting delivery preferences finished.');
    }
    static checkoutServiceGetOrderDeliveryOptionsStarted() {
        LoggerBase.writeEvent('CheckoutServiceGetOrderDeliveryOptionsStarted', 44208, 1, EventChannel.Debug, EventLevel.Informational, [], '', '', 'Getting order delivery options started.');
    }
    static checkoutServiceGetOrderDeliveryOptionsError(error) {
        LoggerBase.writeEvent('CheckoutServiceGetOrderDeliveryOptionsError', 44209, 1, EventChannel.Operational, EventLevel.Error, [], '', '', 'Getting order delivery options failed with error {0}.');
    }
    static checkoutServiceGetOrderDeliveryOptionsFinished() {
        LoggerBase.writeEvent('CheckoutServiceGetOrderDeliveryOptionsFinished', 44210, 1, EventChannel.Debug, EventLevel.Informational, [], '', '', 'Getting order delivery options finished.');
    }
    static checkoutServiceGetItemDeliveryOptionsStarted() {
        LoggerBase.writeEvent('CheckoutServiceGetItemDeliveryOptionsStarted', 44212, 1, EventChannel.Debug, EventLevel.Informational, [], '', '', 'Getting item delivery options started.');
    }
    static checkoutServiceGetItemDeliveryOptionsError(error) {
        LoggerBase.writeEvent('CheckoutServiceGetItemDeliveryOptionsError', 44213, 1, EventChannel.Operational, EventLevel.Error, [], '', '', 'Getting item delivery options failed with error {0}.');
    }
    static checkoutServiceGetItemDeliveryOptionsFinished() {
        LoggerBase.writeEvent('CheckoutServiceGetItemDeliveryOptionsFinished', 44214, 1, EventChannel.Debug, EventLevel.Informational, [], '', '', 'Getting item delivery options finished.');
    }
    static checkoutServiceUpdateDeliverySpecificationsStarted() {
        LoggerBase.writeEvent('CheckoutServiceUpdateDeliverySpecificationsStarted', 44216, 1, EventChannel.Debug, EventLevel.Informational, [], '', '', 'Update of order delivery specifications started.');
    }
    static checkoutServiceUpdateDeliverySpecificationsError(error) {
        LoggerBase.writeEvent('CheckoutServiceUpdateDeliverySpecificationsError', 44217, 1, EventChannel.Operational, EventLevel.Error, [], '', '', 'Update of order delivery specifications failed with error {0}.');
    }
    static checkoutServiceUpdateDeliverySpecificationsFinished() {
        LoggerBase.writeEvent('CheckoutServiceUpdateDeliverySpecificationsFinished', 44218, 1, EventChannel.Debug, EventLevel.Informational, [], '', '', 'Update of order delivery specifications finished.');
    }
    static checkoutServiceUpdateLineDeliverySpecificationsStarted() {
        LoggerBase.writeEvent('CheckoutServiceUpdateLineDeliverySpecificationsStarted', 44220, 1, EventChannel.Debug, EventLevel.Informational, [], '', '', 'Update of line delivery specifications started.');
    }
    static checkoutServiceUpdateLineDeliverySpecificationsError(error) {
        LoggerBase.writeEvent('CheckoutServiceUpdateLineDeliverySpecificationsError', 44221, 1, EventChannel.Operational, EventLevel.Error, [], '', '', 'Update of line delivery specifications failed with error {0}.');
    }
    static checkoutServiceUpdateLineDeliverySpecificationsFinished() {
        LoggerBase.writeEvent('CheckoutServiceUpdateLineDeliverySpecificationsFinished', 44222, 1, EventChannel.Debug, EventLevel.Informational, [], '', '', 'Update of line delivery specifications finished.');
    }
    static checkoutServiceGetPaymentCardTypesStarted() {
        LoggerBase.writeEvent('CheckoutServiceGetPaymentCardTypesStarted', 44224, 1, EventChannel.Debug, EventLevel.Informational, [], '', '', 'Getting payment card types started.');
    }
    static checkoutServiceGetPaymentCardTypesError(error) {
        LoggerBase.writeEvent('CheckoutServiceGetPaymentCardTypesError', 44225, 1, EventChannel.Operational, EventLevel.Error, [], '', '', 'Getting payment card types failed with error {0}.');
    }
    static checkoutServiceGetPaymentCardTypesFinished() {
        LoggerBase.writeEvent('CheckoutServiceGetPaymentCardTypesFinished', 44226, 1, EventChannel.Debug, EventLevel.Informational, [], '', '', 'Getting payment card types finished.');
    }
    static checkoutServiceGetGiftCardBalanceStarted() {
        LoggerBase.writeEvent('CheckoutServiceGetGiftCardBalanceStarted', 44228, 1, EventChannel.Debug, EventLevel.Informational, [], '', '', 'Getting gift card balance started.');
    }
    static checkoutServiceGetGiftCardBalanceError(error) {
        LoggerBase.writeEvent('CheckoutServiceGetGiftCardBalanceError', 44229, 1, EventChannel.Operational, EventLevel.Error, [], '', '', 'Getting gift card balance failed with error {0}.');
    }
    static checkoutServiceGetGiftCardBalanceFinished() {
        LoggerBase.writeEvent('CheckoutServiceGetGiftCardBalanceFinished', 44230, 1, EventChannel.Debug, EventLevel.Informational, [], '', '', 'Getting gift card balance finished.');
    }
    static checkoutServiceSubmitOrderStarted() {
        LoggerBase.writeEvent('CheckoutServiceSubmitOrderStarted', 44232, 1, EventChannel.Debug, EventLevel.Informational, [], '', '', 'Submit order started.');
    }
    static checkoutServiceSubmitOrderError(error) {
        LoggerBase.writeEvent('CheckoutServiceSubmitOrderError', 44233, 1, EventChannel.Operational, EventLevel.Error, [], '', '', 'Submit order failed with error {0}.');
    }
    static checkoutServiceSubmitOrderFinished() {
        LoggerBase.writeEvent('CheckoutServiceSubmitOrderFinished', 44234, 1, EventChannel.Debug, EventLevel.Informational, [], '', '', 'Submit order finished.');
    }
    static checkoutServiceGetCardPaymentAcceptUrlStarted() {
        LoggerBase.writeEvent('CheckoutServiceGetCardPaymentAcceptUrlStarted', 44235, 1, EventChannel.Debug, EventLevel.Informational, [], '', '', 'Get card payment accept url started.');
    }
    static checkoutServiceGetCardPaymentAcceptUrlFinished() {
        LoggerBase.writeEvent('CheckoutServiceGetCardPaymentAcceptUrlFinished', 44236, 1, EventChannel.Debug, EventLevel.Informational, [], '', '', 'Get card payment accept url finished.');
    }
    static checkoutServiceGetCardPaymentAcceptUrlError(error) {
        LoggerBase.writeEvent('CheckoutServiceGetCardPaymentAcceptUrlError', 44237, 1, EventChannel.Operational, EventLevel.Error, [], '', '', 'Get card payment accept url failed with error {0}.');
    }
    static checkoutServiceRetrieveCardPaymentAcceptResultStarted() {
        LoggerBase.writeEvent('CheckoutServiceRetrieveCardPaymentAcceptResultStarted', 44238, 1, EventChannel.Debug, EventLevel.Informational, [], '', '', 'Retrieve card payment accept result started.');
    }
    static checkoutServiceRetrieveCardPaymentAcceptResultFinished() {
        LoggerBase.writeEvent('CheckoutServiceRetrieveCardPaymentAcceptResultFinished', 44239, 1, EventChannel.Debug, EventLevel.Informational, [], '', '', 'Retrieve card payment accept result finished.');
    }
    static checkoutServiceRetrieveCardPaymentAcceptResultError(error) {
        LoggerBase.writeEvent('CheckoutServiceRetrieveCardPaymentAcceptResultError', 44240, 1, EventChannel.Operational, EventLevel.Error, [], '', '', 'Retrieve card payment accept result failed with error {0}.');
    }
    static checkoutServiceCleanUpAfterSuccessfulOrderStarted() {
        LoggerBase.writeEvent('CheckoutServiceCleanUpAfterSuccessfulOrderStarted', 44241, 1, EventChannel.Debug, EventLevel.Informational, [], '', '', 'Shopping cart clean failed post successful submit order started.');
    }
    static checkoutServiceCleanUpAfterSuccessfulOrderError(error) {
        LoggerBase.writeEvent('CheckoutServiceCleanUpAfterSuccessfulOrderError', 44242, 1, EventChannel.Operational, EventLevel.Error, [], '', '', 'Shopping cart clean failed post successful submit order with error {0}.');
    }
    static checkoutServiceCleanUpAfterSuccessfulOrderFinished() {
        LoggerBase.writeEvent('CheckoutServiceCleanUpAfterSuccessfulOrderFinished', 44243, 1, EventChannel.Debug, EventLevel.Informational, [], '', '', 'Shopping cart clean failed post successful submit order finished.');
    }
    // Channel Service - Event Range: 44300 - 44349.
    static channelServiceGetChannelConfigurationStarted() {
        LoggerBase.writeEvent('ChannelServiceGetChannelConfigurationStarted', 44300, 1, EventChannel.Debug, EventLevel.Informational, [], '', '', 'Get channel Configuration started.');
    }
    static channelServiceGetChannelConfigurationError(error) {
        LoggerBase.writeEvent('ChannelServiceGetChannelConfigurationError', 44301, 1, EventChannel.Operational, EventLevel.Error, [], '', '', 'Get channel Configuration failed with error {0}.');
    }
    static channelServiceGetChannelConfigurationFinished() {
        LoggerBase.writeEvent('ChannelServiceGetChannelConfigurationFinished', 44302, 1, EventChannel.Debug, EventLevel.Informational, [], '', '', 'Get channel Configuration finished.');
    }
    static channelServiceGetCountryRegionInfoStarted() {
        LoggerBase.writeEvent('ChannelServiceGetCountryRegionInfoStarted', 44304, 1, EventChannel.Debug, EventLevel.Informational, [], '', '', 'Get country region info started.');
    }
    static channelServiceGetCountryRegionInfoError(error) {
        LoggerBase.writeEvent('ChannelServiceGetCountryRegionInfoError', 44305, 1, EventChannel.Operational, EventLevel.Error, [], '', '', 'Get country region info failed with error {0}.');
    }
    static channelServiceGetCountryRegionInfoFinished() {
        LoggerBase.writeEvent('ChannelServiceGetCountryRegionInfoFinished', 44306, 1, EventChannel.Debug, EventLevel.Informational, [], '', '', 'Get country region info finished.');
    }
    static channelServiceGetStateProvinceInfoStarted() {
        LoggerBase.writeEvent('ChannelServiceGetStateProvinceInfoStarted', 44308, 1, EventChannel.Debug, EventLevel.Informational, [], '', '', 'Get state province info started.');
    }
    static channelServiceGetStateProvinceInfoError(error) {
        LoggerBase.writeEvent('ChannelServiceGetStateProvinceInfoError', 44309, 1, EventChannel.Operational, EventLevel.Error, [], '', '', 'Get state province info error {0}.');
    }
    static channelServiceGetStateProvinceInfoFinished() {
        LoggerBase.writeEvent('ChannelServiceGetStateProvinceInfoFinished', 44310, 1, EventChannel.Debug, EventLevel.Informational, [], '', '', 'Get state province info finished.');
    }
    static channelServiceGetTenderTypesStarted() {
        LoggerBase.writeEvent('ChannelServiceGetTenderTypesStarted', 44312, 1, EventChannel.Debug, EventLevel.Informational, [], '', '', 'Get tender types started.');
    }
    static channelServiceGetTenderTypesError(error) {
        LoggerBase.writeEvent('ChannelServiceGetTenderTypesError', 44313, 1, EventChannel.Operational, EventLevel.Error, [], '', '', 'Get tender types failed with error {0}.');
    }
    static channelServiceGetTenderTypesFinished() {
        LoggerBase.writeEvent('ChannelServiceGetTenderTypesFinished', 44314, 1, EventChannel.Debug, EventLevel.Informational, [], '', '', 'Get tender types finished.');
    }
    static channelServiceGetCardTypesStarted() {
        LoggerBase.writeEvent('ChannelServiceGetCardTypesStarted', 44315, 1, EventChannel.Debug, EventLevel.Informational, [], '', '', 'Get card types started.');
    }
    static channelServiceGetCardTypesError(error) {
        LoggerBase.writeEvent('ChannelServiceGetCardTypesError', 44316, 1, EventChannel.Operational, EventLevel.Error, [], '', '', 'Get card types failed with error {0}.');
    }
    static channelServiceGetCardTypesFinished() {
        LoggerBase.writeEvent('ChannelServiceGetCardTypesFinished', 44317, 1, EventChannel.Debug, EventLevel.Informational, [], '', '', 'Get card types finished.');
    }
    // Item Availability Service - Event Range: 44350 - 44369.
    static storeProductAvailabilityServiceGetNearbyStoresWithAvailabilityStarted() {
        LoggerBase.writeEvent('StoreProductAvailabilityServiceGetNearbyStoresWithAvailabilityStarted', 44350, 1, EventChannel.Debug, EventLevel.Informational, [], '', '', 'Get nearby stores with availability started.');
    }
    static storeProductAvailabilityServiceGetNearbyStoresWithAvailabilityError(error) {
        LoggerBase.writeEvent('StoreProductAvailabilityServiceGetNearbyStoresWithAvailabilityError', 44351, 1, EventChannel.Operational, EventLevel.Error, [], '', '', 'Get nearby stores with availability failed with error {0}.');
    }
    static storeProductAvailabilityServiceGetNearbyStoresWithAvailabilityFinished() {
        LoggerBase.writeEvent('StoreProductAvailabilityServiceGetNearbyStoresWithAvailabilityFinished', 44352, 1, EventChannel.Debug, EventLevel.Informational, [], '', '', 'Get nearby stores with availability finished.');
    }
    static storeProductAvailabilityServiceGetNearbyStoresStarted() {
        LoggerBase.writeEvent('StoreProductAvailabilityServiceGetNearbyStoresStarted', 44354, 1, EventChannel.Debug, EventLevel.Informational, [], '', '', 'Get nearby stores started.');
    }
    static storeProductAvailabilityServiceGetNearbyStoresError(error) {
        LoggerBase.writeEvent('StoreProductAvailabilityServiceGetNearbyStoresError', 44355, 1, EventChannel.Operational, EventLevel.Error, [], '', '', 'Get nearby stores failed with error {0}.');
    }
    static storeProductAvailabilityServiceGetNearbyStoresFinished() {
        LoggerBase.writeEvent('StoreProductAvailabilityServiceGetNearbyStoresFinished', 44356, 1, EventChannel.Debug, EventLevel.Informational, [], '', '', 'Get nearby stores finished.');
    }
    // Loyalty Service - Event Range: 44370 - 44399.
    static loyaltyServiceGetLoyaltyCardsStarted() {
        LoggerBase.writeEvent('LoyaltyServiceGetLoyaltyCardsStarted', 44370, 1, EventChannel.Debug, EventLevel.Informational, [], '', '', 'Get loyalty cards started.');
    }
    static loyaltyServiceGetLoyaltyCardsError(error) {
        LoggerBase.writeEvent('LoyaltyServiceGetLoyaltyCardsError', 44371, 1, EventChannel.Operational, EventLevel.Error, [], '', '', 'Get loyalty cards failed with error {0}.');
    }
    static loyaltyServiceGetLoyaltyCardsFinished() {
        LoggerBase.writeEvent('LoyaltyServiceGetLoyaltyCardsFinished', 44372, 1, EventChannel.Debug, EventLevel.Informational, [], '', '', 'Get loyalty cards finished.');
    }
    static loyaltyServiceUpdateLoyaltyCardIdStarted() {
        LoggerBase.writeEvent('loyaltyServiceUpdateLoyaltyCardIdStarted', 44374, 1, EventChannel.Debug, EventLevel.Informational, [], '', '', 'Update loyalty card id started.');
    }
    static loyaltyServiceUpdateLoyaltyCardIdError(error) {
        LoggerBase.writeEvent('LoyaltyServiceUpdateLoyaltyCardIdError', 44375, 1, EventChannel.Operational, EventLevel.Error, [], '', '', 'Update loyalty card id failed with error {0}.');
    }
    static loyaltyServiceUpdateLoyaltyCardIdFinished() {
        LoggerBase.writeEvent('LoyaltyServiceUpdateLoyaltyCardIdFinished', 44376, 1, EventChannel.Debug, EventLevel.Informational, [], '', '', 'Update loyalty card id finished.');
    }
    // Customer Service - Event Range: 44400 - 44499.
    static customerServiceGetCustomerStarted() {
        LoggerBase.writeEvent('CustomerServiceGetCustomerStarted', 44400, 1, EventChannel.Debug, EventLevel.Informational, [], '', '', 'Get customer started.');
    }
    static customerServiceGetCustomerError(error) {
        LoggerBase.writeEvent('CustomerServiceGetCustomerError', 44401, 1, EventChannel.Operational, EventLevel.Error, [], '', '', 'Get customer failed with error {0}.');
    }
    static customerServiceGetCustomerFinished() {
        LoggerBase.writeEvent('CustomerServiceGetCustomerFinished', 44402, 1, EventChannel.Debug, EventLevel.Informational, [], '', '', 'Get customer finished.');
    }
    static customerServiceIsAuthenticationSessionStarted() {
        LoggerBase.writeEvent('CustomerServiceIsAuthenticationSessionStarted', 44403, 1, EventChannel.Debug, EventLevel.Informational, [], '', '', 'Is authentication session started.');
    }
    static customerServiceIsAuthenticationSessionError(error) {
        LoggerBase.writeEvent('CustomerServiceIsAuthenticationSessionError', 44404, 1, EventChannel.Operational, EventLevel.Error, [], '', '', 'Is authentication session failed with error {0}.');
    }
    static customerServiceIsAuthenticationSessionFinished() {
        LoggerBase.writeEvent('CustomerServiceIsAuthenticationSessionFinished', 44405, 1, EventChannel.Debug, EventLevel.Informational, [], '', '', 'Is authentication session finished.');
    }
    // Order Service - Event Range: 44500 - 44599.
    static getOrderHistoryStarted() {
        LoggerBase.writeEvent('GetOrderHistoryStarted', 44500, 1, EventChannel.Debug, EventLevel.Informational, [], '', '', 'Get order history started.');
    }
    static getOrderHistoryError(error) {
        LoggerBase.writeEvent('GetOrderHistoryError', 44501, 1, EventChannel.Operational, EventLevel.Error, [], '', '', 'Get order history failed with error {0}.');
    }
    static getOrderHistoryFinished() {
        LoggerBase.writeEvent('GetOrderHistoryFinished', 44502, 1, EventChannel.Debug, EventLevel.Informational, [], '', '', 'Get order history finished.');
    }
    static getOrderDetailsStarted() {
        LoggerBase.writeEvent('GetOrderDetailsStarted', 44504, 1, EventChannel.Debug, EventLevel.Informational, [], '', '', 'Get order details started.');
    }
    static getOrderDetailsError(error) {
        LoggerBase.writeEvent('GetOrderDetailsError', 44505, 1, EventChannel.Operational, EventLevel.Error, [], '', '', 'Get order details failed with error {0}.');
    }
    static getOrderDetailsFinished() {
        LoggerBase.writeEvent('GetOrderDetailsFinished', 44506, 1, EventChannel.Debug, EventLevel.Informational, [], '', '', 'Get order details finished.');
    }
    // Commerce list realtime service - Event Range: 44600 - 44699.
    static createWishListStarted() {
        LoggerBase.writeEvent('CreateWishListStarted', 44600, 1, EventChannel.Debug, EventLevel.Informational, [], '', '', 'Create wish list started.');
    }
    static createWishListError(error) {
        LoggerBase.writeEvent('CreateWishListError', 44601, 1, EventChannel.Operational, EventLevel.Error, [], '', '', 'Create wish list failed with error {0}.');
    }
    static createWishListFinished() {
        LoggerBase.writeEvent('CreateWishListFinished', 44602, 1, EventChannel.Debug, EventLevel.Informational, [], '', '', 'Create wish list finished.');
    }
    static deleteWishListStarted() {
        LoggerBase.writeEvent('DeleteWishListStarted', 44604, 1, EventChannel.Debug, EventLevel.Informational, [], '', '', 'Delete wish list started.');
    }
    static deleteWishListError(error) {
        LoggerBase.writeEvent('DeleteWishListError', 44605, 1, EventChannel.Operational, EventLevel.Error, [], '', '', 'Delete wish list failed with error {0}.');
    }
    static deleteWishListFinished() {
        LoggerBase.writeEvent('DeleteWishListFinished', 44606, 1, EventChannel.Debug, EventLevel.Informational, [], '', '', 'Delete wish list finished.');
    }
    static updateWishListStarted() {
        LoggerBase.writeEvent('UpdateWishListStarted', 44608, 1, EventChannel.Debug, EventLevel.Informational, [], '', '', 'Update wish list started.');
    }
    static updateWishListError(error) {
        LoggerBase.writeEvent('UpdateWishListError', 44609, 1, EventChannel.Operational, EventLevel.Error, [], '', '', 'Update wish list failed with error {0}.');
    }
    static updateWishListFinished() {
        LoggerBase.writeEvent('UpdateWishListFinished', 44610, 1, EventChannel.Debug, EventLevel.Informational, [], '', '', 'Update wish list finished.');
    }
    static getWishListsStarted() {
        LoggerBase.writeEvent('GetWishListsStarted', 44612, 1, EventChannel.Debug, EventLevel.Informational, [], '', '', 'Get wish lists started.');
    }
    static getWishListsError(error) {
        LoggerBase.writeEvent('GetWishListsError', 44613, 1, EventChannel.Operational, EventLevel.Error, [], '', '', 'Get wish lists failed with error {0}.');
    }
    static getWishListsFinished() {
        LoggerBase.writeEvent('GetWishListsFinished', 44614, 1, EventChannel.Debug, EventLevel.Informational, [], '', '', 'Get wish lists finished.');
    }
    static getWishListStarted() {
        LoggerBase.writeEvent('GetWishListStarted', 44616, 1, EventChannel.Debug, EventLevel.Informational, [], '', '', 'Get wish list started.');
    }
    static getWishListError(error) {
        LoggerBase.writeEvent('GetWishListError', 44617, 1, EventChannel.Operational, EventLevel.Error, [], '', '', 'Get wish list failed with error {0}.');
    }
    static getWishListFinished() {
        LoggerBase.writeEvent('GetWishListFinished', 44618, 1, EventChannel.Debug, EventLevel.Informational, [], '', '', 'Get wish list finished.');
    }
    static addLinesToWishListStarted() {
        LoggerBase.writeEvent('AddLinesToWishListStarted', 44620, 1, EventChannel.Debug, EventLevel.Informational, [], '', '', 'Add lines to wish list started.');
    }
    static addLinesToWishListError(error) {
        LoggerBase.writeEvent('AddLinesToWishListError', 44621, 1, EventChannel.Operational, EventLevel.Error, [], '', '', 'Add lines to wish list failed with error {0}.');
    }
    static addLinesToWishListFinished() {
        LoggerBase.writeEvent('AddLinesToWishListFinished', 44622, 1, EventChannel.Debug, EventLevel.Informational, [], '', '', 'Add lines to wish list finished.');
    }
    static removeItemsFromWishListStarted() {
        LoggerBase.writeEvent('RemoveItemsFromWishListStarted', 44624, 1, EventChannel.Debug, EventLevel.Informational, [], '', '', 'Remove items from wish list started.');
    }
    static removeItemsFromWishListError(error) {
        LoggerBase.writeEvent('RemoveItemsFromWishListError', 44625, 1, EventChannel.Operational, EventLevel.Error, [], '', '', 'Remove items from wish list failed with error {0}.');
    }
    static removeItemsFromWishListFinished() {
        LoggerBase.writeEvent('RemoveItemsFromWishListFinished', 44626, 1, EventChannel.Debug, EventLevel.Informational, [], '', '', 'Remove items from wish list finished.');
    }
    static updateLinesOnWishListStarted() {
        LoggerBase.writeEvent('UpdateLinesOnWishListStarted', 44628, 1, EventChannel.Debug, EventLevel.Informational, [], '', '', 'Update lines on wish list started.');
    }
    static updateLinesOnWishListError(error) {
        LoggerBase.writeEvent('UpdateLinesOnWishListError', 44629, 1, EventChannel.Operational, EventLevel.Error, [], '', '', 'Update lines on wish list failed with error {0}.');
    }
    static updateLinesOnWishListFinished() {
        LoggerBase.writeEvent('UpdateLinesOnWishListFinished', 44630, 1, EventChannel.Debug, EventLevel.Informational, [], '', '', 'Update lines on wish list finished.');
    }
    static addItemsToCartStarted() {
        LoggerBase.writeEvent('AddItemsToCartStarted', 44632, 1, EventChannel.Debug, EventLevel.Informational, [], '', '', 'Add items to cart started.');
    }
    static addItemsToCartError(error) {
        LoggerBase.writeEvent('AddItemsToCartError', 44633, 1, EventChannel.Operational, EventLevel.Error, [], '', '', 'Add items to cart failed with error {0}.');
    }
    static addItemsToCartFinished() {
        LoggerBase.writeEvent('AddItemsToCartFinished', 44634, 1, EventChannel.Debug, EventLevel.Informational, [], '', '', 'Add items to cart finished.');
    }
}
//# sourceMappingURL=RetailLogger.js.map