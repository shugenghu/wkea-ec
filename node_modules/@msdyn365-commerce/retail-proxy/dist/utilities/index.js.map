{"version":3,"file":"index.js","sourceRoot":"","sources":["../../src/utilities/index.ts"],"names":[],"mappings":"AAAA;;;GAGG;AAEH,MAAM,aAAa,GAAG,eAAe,CAAC;AAEtC;;;;GAIG;AACH,MAAM,CAAC,MAAM,gBAAgB,GAAG,CAAC,QAA4B,EAAE,WAAqC,EAAsB,EAAE;IACxH,IAAI,QAAQ,EAAE;QACV,IAAI,aAAa,CAAC,IAAI,CAAC,QAAQ,CAAC,EAAE;YAC9B,OAAO,QAAQ,CAAC;SACnB;QAED,oFAAoF;QACpF,OAAO,WAAW,CAAC,YAAY,GAAG,kBAAkB,CAAC,QAAQ,CAAC,CAAC;KAClE;AACL,CAAC,CAAC","sourcesContent":["/*!\n * Copyright (c) Microsoft Corporation.\n * All rights reserved. See LICENSE in the project root for license information.\n */\n\nconst fullImagePath = /^(\\/\\/|^)http/;\n\n/**\n * Generates a Image URL based on data return from retail server\n * @param imageUrl The image url returned by Retail Server\n * @param apiSettings Api settings\n */\nexport const generateImageUrl = (imageUrl: string | undefined, apiSettings: { baseImageUrl: string }): string | undefined => {\n    if (imageUrl) {\n        if (fullImagePath.test(imageUrl)) {\n            return imageUrl;\n        }\n\n        // Images hosted in Retail Server must be encoded and joined with the base image url\n        return apiSettings.baseImageUrl + encodeURIComponent(imageUrl);\n    }\n};\n"]}