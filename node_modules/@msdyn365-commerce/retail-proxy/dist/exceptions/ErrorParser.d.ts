/*!
 * Copyright (c) Microsoft Corporation.
 * All rights reserved. See LICENSE in the project root for license information.
 */
import { ProxyError } from './ProxyError';
/**
 * Error parser class.
 */
export declare class ErrorParser {
    private static DataValidationExceptionType;
    private static CartValidationExceptionType;
    private static StorageExceptionType;
    /**
     * Parses an error message.
     *
     * @param {any} error The error message.
     * @return {ProxyError[]} The collection of error messages.
     */
    static parseErrorMessage(error: any): ProxyError[];
    /**
     * Parses an error message sent from Hardware station.
     *
     * @param {any} error The error message.
     * @retunrs {ProxyError[]} The collection of error messages.
     */
    static parseHardwareStationErrorMessage(error: any): ProxyError[];
    static parseJSONError(errorString: string, errorResponse?: any): ProxyError[];
    private static convertExceptionToErrors;
    private static getErrorsFromDataValidationFailures;
    /**
     * Parses an error to get the error code and error message.
     *
     * @param {any} error The error message.
     * @retunrs {ProxyError[]} The collection of error messages.
     */
    private static parseError;
}
