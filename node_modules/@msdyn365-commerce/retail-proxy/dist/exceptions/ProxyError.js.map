{"version":3,"file":"ProxyError.js","sourceRoot":"","sources":["../../src/exceptions/ProxyError.ts"],"names":[],"mappings":"AAAA;;;GAGG;AAEH,wGAAwG;AACxG,qGAAqG;AAErG,YAAY,CAAC;AAEb;;GAEG;AACH,MAAM,OAAO,UAAU;IASnB,YACI,SAAiB,EACjB,YAAoB,EACpB,qBAAqB,EACrB,QAAiB,EACjB,SAAc,EACd,GAAG,UAAiB;QAXhB,cAAS,GAAY,KAAK,CAAC;QAa/B,IAAI,CAAC,UAAU,GAAG,SAAS,CAAC;QAC5B,IAAI,CAAC,aAAa,GAAG,YAAY,CAAC;QAClC,IAAI,CAAC,sBAAsB,GAAG,qBAAqB,CAAC;QACpD,IAAI,CAAC,SAAS,GAAG,QAAQ,CAAC;QAC1B,IAAI,CAAC,kBAAkB,GAAG,IAAI,CAAC;QAC/B,IAAI,CAAC,WAAW,GAAG,UAAU,CAAC;QAC9B,IAAI,CAAC,UAAU,GAAG,SAAS,CAAC;IAChC,CAAC;IAED;;;OAGG;IACI,MAAM,CAAC,OAAO,CAAC,UAAsB;QACxC,MAAM,CAAC,GAAG,IAAI,KAAK,EAAE,CAAC;QACtB,CAAC,CAAC,IAAI,GAAG,UAAU,CAAC,SAAS,IAAI,aAAa,CAAC;QAC/C,CAAC,CAAC,OAAO,GAAG,UAAU,CAAC,YAAY,IAAI,UAAU,CAAC,qBAAqB,CAAC;QAExE,uCAAuC;QACvC,4EAA4E;QAC5E,IAAI,UAAU,CAAC,SAAS,EAAE;YACtB,aAAa;YACb,CAAC,CAAC,UAAU,GAAG,UAAU,CAAC,SAAS,CAAC,UAAU,CAAC;YAE/C,aAAa;YACb,CAAC,CAAC,IAAI,GAAG,UAAU,CAAC,SAAS,CAAC,IAAI,CAAC;YAEnC,aAAa;YACb,CAAC,CAAC,UAAU,GAAG,UAAU,CAAC,SAAS,CAAC,UAAU,CAAC;SAClD;QAED,OAAO,CAAC,CAAC;IACb,CAAC;IAED;;;;OAIG;IACH,IAAW,iBAAiB;QACxB,OAAO,IAAI,CAAC,kBAAkB,CAAC;IACnC,CAAC;IAED;;;;OAIG;IACH,IAAW,iBAAiB,CAAC,SAAc;QACvC,IAAI,CAAC,kBAAkB,GAAG,SAAS,CAAC;IACxC,CAAC;IAED;;;;OAIG;IACH,IAAW,SAAS;QAChB,OAAO,IAAI,CAAC,UAAU,CAAC;IAC3B,CAAC;IAED;;;;OAIG;IACH,IAAW,YAAY;QACnB,OAAO,IAAI,CAAC,aAAa,CAAC;IAC9B,CAAC;IAED;;;;OAIG;IACH,IAAW,qBAAqB;QAC5B,OAAO,IAAI,CAAC,sBAAsB,CAAC;IACvC,CAAC;IAED;;;;OAIG;IACH,IAAW,UAAU;QACjB,OAAO,IAAI,CAAC,WAAW,CAAC;IAC5B,CAAC;IAED;;;;OAIG;IACH,IAAW,SAAS;QAChB,OAAO,IAAI,CAAC,UAAU,CAAC;IAC3B,CAAC;IAED;;;OAGG;IACH,IAAW,oBAAoB;QAC3B,MAAM,oBAAoB,GAAG,cAAc,CAAC,CAAC,mDAAmD;QAChG,OAAO,oBAAoB,CAAC;IAChC,CAAC;IAED;;;;OAIG;IACH,IAAW,QAAQ;QACf,OAAO,IAAI,CAAC,SAAS,CAAC;IAC1B,CAAC;CACJ","sourcesContent":["/*!\n * Copyright (c) Microsoft Corporation.\n * All rights reserved. See LICENSE in the project root for license information.\n */\n\n// Following reference is added to fix the build dependency between CommerceContxt and DataServiceQuery.\n// This will eventually be moved to CommerceContext.ts when MPOS proxy and Commerce Proxy are merged.\n\n'use strict';\n\n/**\n * Class for representing an error.\n */\nexport class ProxyError {\n    private _errorCode: string;\n    private _errorMessage: string;\n    private _localizedErrorMessage: string;\n    private _canRetry: boolean = false;\n    private _commerceException: any;\n    private _formatData: any[];\n    private _extraData: any;\n\n    constructor(\n        errorCode: string,\n        errorMessage: string,\n        localizedErrorMessage,\n        canRetry: boolean,\n        extraData: any,\n        ...formatData: any[]\n    ) {\n        this._errorCode = errorCode;\n        this._errorMessage = errorMessage;\n        this._localizedErrorMessage = localizedErrorMessage;\n        this._canRetry = canRetry;\n        this._commerceException = null;\n        this._formatData = formatData;\n        this._extraData = extraData;\n    }\n\n    /**\n     * Takes a proxy error and returns a proper JS error version of it\n     * @param proxyError The proxyError\n     */\n    public static toError(proxyError: ProxyError): Error {\n        const e = new Error();\n        e.name = proxyError.ErrorCode || 'Proxy Error';\n        e.message = proxyError.ErrorMessage || proxyError.LocalizedErrorMessage;\n\n        // Assign extra error details to error.\n        // ts-ignoring as the standard error contract only supports name and message\n        if (proxyError.extraData) {\n            // @ts-ignore\n            e.requestUri = proxyError.extraData.requestUri;\n\n            // @ts-ignore\n            e.data = proxyError.extraData.data;\n\n            // @ts-ignore\n            e.statusCode = proxyError.extraData.statusCode;\n        }\n\n        return e;\n    }\n\n    /**\n     * Gets the commerce exception that caused this error.\n     *\n     * @return {any} The commerce exception.\n     */\n    public get commerceException(): any {\n        return this._commerceException;\n    }\n\n    /**\n     * Sets the commerce exception that caused this error.\n     *\n     * @param {any} exception The commerce exception.\n     */\n    public set commerceException(exception: any) {\n        this._commerceException = exception;\n    }\n\n    /**\n     * Gets the error code.\n     *\n     * @return {string} The error code.\n     */\n    public get ErrorCode(): string {\n        return this._errorCode;\n    }\n\n    /**\n     * Gets the error message.\n     *\n     * @return {string} The error message.\n     */\n    public get ErrorMessage(): string {\n        return this._errorMessage;\n    }\n\n    /**\n     * Gets the localized error message.\n     *\n     * @return {string} The localized error message.\n     */\n    public get LocalizedErrorMessage(): string {\n        return this._localizedErrorMessage;\n    }\n\n    /**\n     * Gets the format data used on formatted error messages.\n     *\n     * @return {any[]} The format data.\n     */\n    public get formatData(): any[] {\n        return this._formatData;\n    }\n\n    /**\n     * Gets the additional information the might be supplied by the error.\n     *\n     * @return {any} The extra data.\n     */\n    public get extraData(): any {\n        return this._extraData;\n    }\n\n    /**\n     * Gets the error title. Defaults to the resource string string_29004 for the error title if\n     * no error title is mapped for the error.\n     */\n    public get ErrorTitleResourceId(): string {\n        const errorTitleResourceId = 'string_29004'; // Error string: There is a problem with the server\n        return errorTitleResourceId;\n    }\n\n    /**\n     * Gets whether the action that generated the error can be retried.\n     *\n     * @return {string} Whether the action that generated the error can be retried.\n     */\n    public get CanRetry(): boolean {\n        return this._canRetry;\n    }\n}\n"]}