import { AsyncResult } from '../async-result';
import { Category, AttributeCategory } from '../Entities/CommerceTypes.g';
import { IContext, IDataServiceRequest, IQueryResultSettings, NullResult } from '../Interfaces';
export declare function createCreateInput(entity: Category): IDataServiceRequest;
export declare function createCategoryAsync(context: IContext, entity: Category): AsyncResult<Category>;
export declare function createUpdateInput(entity: Category): IDataServiceRequest;
export declare function updateAsync(context: IContext, entity: Category): AsyncResult<Category>;
export declare function createDeleteAsync(entity: Category): IDataServiceRequest;
export declare function deleteAsync(context: IContext, entity: Category): AsyncResult<NullResult>;
export declare function createReadAsync(recordId: number): IDataServiceRequest;
export declare function readAsync(context: IContext, recordId: number): AsyncResult<Category>;
export declare function createReadAllAsync(queryResultSettings: IQueryResultSettings): IDataServiceRequest;
export declare function readAllAsync(context: IContext): AsyncResult<Category[]>;
export declare function createGetCategoriesInput(queryResultSettings: IQueryResultSettings, channelId: number): IDataServiceRequest;
export declare function getCategoriesAsync(context: IContext, channelId: number): AsyncResult<Category[]>;
export declare function createGetAttributesInput(queryResultSettings: IQueryResultSettings, categoryId: number): IDataServiceRequest;
export declare function getAttributesAsync(context: IContext, categoryId: number): AsyncResult<AttributeCategory[]>;
export declare function createGetChildrenInput(queryResultSettings: IQueryResultSettings, channelId: number, categoryId: number): IDataServiceRequest;
export declare function getChildrenAsync(context: IContext, channelId: number, categoryId: number): AsyncResult<Category[]>;
