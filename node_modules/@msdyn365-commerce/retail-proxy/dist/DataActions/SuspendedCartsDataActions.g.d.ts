import { AsyncResult } from '../async-result';
import { SuspendedCart } from '../Entities/CommerceTypes.g';
import { IContext, IDataServiceRequest, IQueryResultSettings, NullResult } from '../Interfaces';
export declare function createCreateInput(entity: SuspendedCart): IDataServiceRequest;
export declare function createSuspendedCartAsync(context: IContext, entity: SuspendedCart): AsyncResult<SuspendedCart>;
export declare function createUpdateInput(entity: SuspendedCart): IDataServiceRequest;
export declare function updateAsync(context: IContext, entity: SuspendedCart): AsyncResult<SuspendedCart>;
export declare function createDeleteAsync(entity: SuspendedCart): IDataServiceRequest;
export declare function deleteAsync(context: IContext, entity: SuspendedCart): AsyncResult<NullResult>;
export declare function createReadAsync(id: string): IDataServiceRequest;
export declare function readAsync(context: IContext, id: string): AsyncResult<SuspendedCart>;
export declare function createReadAllAsync(queryResultSettings: IQueryResultSettings): IDataServiceRequest;
export declare function readAllAsync(context: IContext): AsyncResult<SuspendedCart[]>;
export declare function createGetAllSuspendedCartsInput(queryResultSettings: IQueryResultSettings): IDataServiceRequest;
export declare function getAllSuspendedCartsAsync(context: IContext): AsyncResult<SuspendedCart[]>;
