import { AsyncResult } from '../async-result';
import { PickingList } from '../Entities/CommerceTypes.g';
import { IContext, IDataServiceRequest, IQueryResultSettings, NullResult } from '../Interfaces';
export declare function createCreateInput(entity: PickingList): IDataServiceRequest;
export declare function createPickingListAsync(context: IContext, entity: PickingList): AsyncResult<PickingList>;
export declare function createUpdateInput(entity: PickingList): IDataServiceRequest;
export declare function updateAsync(context: IContext, entity: PickingList): AsyncResult<PickingList>;
export declare function createDeleteAsync(entity: PickingList): IDataServiceRequest;
export declare function deleteAsync(context: IContext, entity: PickingList): AsyncResult<NullResult>;
export declare function createReadAsync(orderId: string): IDataServiceRequest;
export declare function readAsync(context: IContext, orderId: string): AsyncResult<PickingList>;
export declare function createReadAllAsync(queryResultSettings: IQueryResultSettings): IDataServiceRequest;
export declare function readAllAsync(context: IContext): AsyncResult<PickingList[]>;
export declare function createCommitInput(orderId: string): IDataServiceRequest;
export declare function commitAsync(context: IContext, orderId: string): AsyncResult<NullResult>;
