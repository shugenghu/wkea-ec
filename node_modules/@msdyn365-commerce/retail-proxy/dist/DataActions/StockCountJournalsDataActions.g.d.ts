import { AsyncResult } from '../async-result';
import { StockCountJournal, StockCountJournalTransaction } from '../Entities/CommerceTypes.g';
import { IContext, IDataServiceRequest, IQueryResultSettings, NullResult } from '../Interfaces';
export declare function createCreateInput(entity: StockCountJournal): IDataServiceRequest;
export declare function createStockCountJournalAsync(context: IContext, entity: StockCountJournal): AsyncResult<StockCountJournal>;
export declare function createUpdateInput(entity: StockCountJournal): IDataServiceRequest;
export declare function updateAsync(context: IContext, entity: StockCountJournal): AsyncResult<StockCountJournal>;
export declare function createDeleteAsync(entity: StockCountJournal): IDataServiceRequest;
export declare function deleteAsync(context: IContext, entity: StockCountJournal): AsyncResult<NullResult>;
export declare function createReadAsync(journalId: string): IDataServiceRequest;
export declare function readAsync(context: IContext, journalId: string): AsyncResult<StockCountJournal>;
export declare function createReadAllAsync(queryResultSettings: IQueryResultSettings): IDataServiceRequest;
export declare function readAllAsync(context: IContext): AsyncResult<StockCountJournal[]>;
export declare function createSyncInput(queryResultSettings: IQueryResultSettings): IDataServiceRequest;
export declare function syncAsync(context: IContext): AsyncResult<StockCountJournal[]>;
export declare function createSyncTransactionsInput(queryResultSettings: IQueryResultSettings, journalId: string): IDataServiceRequest;
export declare function syncTransactionsAsync(context: IContext, journalId: string): AsyncResult<StockCountJournalTransaction[]>;
export declare function createCalculateEstimatedOnHandInventoryInput(queryResultSettings: IQueryResultSettings, journalId: string): IDataServiceRequest;
export declare function calculateEstimatedOnHandInventoryAsync(context: IContext, journalId: string): AsyncResult<StockCountJournalTransaction[]>;
export declare function createRemoveJournalInput(journalId: string): IDataServiceRequest;
export declare function removeJournalAsync(context: IContext, journalId: string): AsyncResult<NullResult>;
export declare function createRemoveTransactionInput(journalId: string, itemId: string | null, inventSizeId: string | null, inventColorId: string | null, inventStyleId: string | null, configurationId: string | null): IDataServiceRequest;
export declare function removeTransactionAsync(context: IContext, journalId: string, itemId: string | null, inventSizeId: string | null, inventColorId: string | null, inventStyleId: string | null, configurationId: string | null): AsyncResult<NullResult>;
export declare function createRemoveStockCountLineByLineIdInput(journalId: string, stockCountLineId: number): IDataServiceRequest;
export declare function removeStockCountLineByLineIdAsync(context: IContext, journalId: string, stockCountLineId: number): AsyncResult<NullResult>;
export declare function createRemoveStockCountLineByProductRecIdInput(journalId: string, productId: number): IDataServiceRequest;
export declare function removeStockCountLineByProductRecIdAsync(context: IContext, journalId: string, productId: number): AsyncResult<NullResult>;
export declare function createCommitInput(journalId: string): IDataServiceRequest;
export declare function commitAsync(context: IContext, journalId: string): AsyncResult<NullResult>;
