import { AsyncResult } from '../async-result';
import { Recommendation, RecommendationCriteria, RecommendedElement } from '../Entities/CommerceTypes.g';
import { IContext, IDataServiceRequest, IQueryResultSettings, NullResult } from '../Interfaces';
export declare function createCreateInput(entity: Recommendation): IDataServiceRequest;
export declare function createRecommendationAsync(context: IContext, entity: Recommendation): AsyncResult<Recommendation>;
export declare function createUpdateInput(entity: Recommendation): IDataServiceRequest;
export declare function updateAsync(context: IContext, entity: Recommendation): AsyncResult<Recommendation>;
export declare function createDeleteAsync(entity: Recommendation): IDataServiceRequest;
export declare function deleteAsync(context: IContext, entity: Recommendation): AsyncResult<NullResult>;
export declare function createReadAsync(id: string): IDataServiceRequest;
export declare function readAsync(context: IContext, id: string): AsyncResult<Recommendation>;
export declare function createReadAllAsync(queryResultSettings: IQueryResultSettings): IDataServiceRequest;
export declare function readAllAsync(context: IContext): AsyncResult<Recommendation[]>;
export declare function createGetElementsInput(queryResultSettings: IQueryResultSettings, id: string, recommendationCriteria: RecommendationCriteria | null): IDataServiceRequest;
export declare function getElementsAsync(context: IContext, id: string, recommendationCriteria: RecommendationCriteria | null): AsyncResult<RecommendedElement[]>;
