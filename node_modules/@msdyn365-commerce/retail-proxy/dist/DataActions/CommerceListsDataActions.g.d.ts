import { AsyncResult } from '../async-result';
import { CommerceList, CommerceListLine, CommerceListContributor, CommerceListInvitation } from '../Entities/CommerceTypes.g';
import { IContext, IDataServiceRequest, IQueryResultSettings, NullResult } from '../Interfaces';
export declare function createCreateInput(entity: CommerceList): IDataServiceRequest;
export declare function createCommerceListAsync(context: IContext, entity: CommerceList): AsyncResult<CommerceList>;
export declare function createUpdateInput(entity: CommerceList): IDataServiceRequest;
export declare function updateAsync(context: IContext, entity: CommerceList): AsyncResult<CommerceList>;
export declare function createDeleteAsync(entity: CommerceList): IDataServiceRequest;
export declare function deleteAsync(context: IContext, entity: CommerceList): AsyncResult<NullResult>;
export declare function createReadAsync(id: number): IDataServiceRequest;
export declare function readAsync(context: IContext, id: number): AsyncResult<CommerceList>;
export declare function createReadAllAsync(queryResultSettings: IQueryResultSettings): IDataServiceRequest;
export declare function readAllAsync(context: IContext): AsyncResult<CommerceList[]>;
export declare function createGetByCustomerInput(queryResultSettings: IQueryResultSettings, customerId: string | null): IDataServiceRequest;
export declare function getByCustomerAsync(context: IContext, customerId: string | null): AsyncResult<CommerceList[]>;
export declare function createAddLinesInput(id: number, commerceListLines: CommerceListLine[] | null): IDataServiceRequest;
export declare function addLinesAsync(context: IContext, id: number, commerceListLines: CommerceListLine[] | null): AsyncResult<CommerceList>;
export declare function createUpdateLinesInput(id: number, commerceListLines: CommerceListLine[] | null): IDataServiceRequest;
export declare function updateLinesAsync(context: IContext, id: number, commerceListLines: CommerceListLine[] | null): AsyncResult<CommerceList>;
export declare function createRemoveLinesInput(id: number, commerceListLines: CommerceListLine[] | null): IDataServiceRequest;
export declare function removeLinesAsync(context: IContext, id: number, commerceListLines: CommerceListLine[] | null): AsyncResult<CommerceList>;
export declare function createMoveLinesInput(commerceListLines: CommerceListLine[] | null, destinationId: number): IDataServiceRequest;
export declare function moveLinesAsync(context: IContext, commerceListLines: CommerceListLine[] | null, destinationId: number): AsyncResult<CommerceList>;
export declare function createCopyLinesInput(commerceListLines: CommerceListLine[] | null, destinationId: number): IDataServiceRequest;
export declare function copyLinesAsync(context: IContext, commerceListLines: CommerceListLine[] | null, destinationId: number): AsyncResult<CommerceList>;
export declare function createAddContributorsInput(id: number, commerceListContributors: CommerceListContributor[] | null): IDataServiceRequest;
export declare function addContributorsAsync(context: IContext, id: number, commerceListContributors: CommerceListContributor[] | null): AsyncResult<CommerceList>;
export declare function createRemoveContributorsInput(id: number, commerceListContributors: CommerceListContributor[] | null): IDataServiceRequest;
export declare function removeContributorsAsync(context: IContext, id: number, commerceListContributors: CommerceListContributor[] | null): AsyncResult<CommerceList>;
export declare function createCreateInvitationsInput(id: number, commerceListInvitations: CommerceListInvitation[] | null): IDataServiceRequest;
export declare function createInvitationsAsync(context: IContext, id: number, commerceListInvitations: CommerceListInvitation[] | null): AsyncResult<CommerceList>;
export declare function createAcceptInvitationInput(invitationToken: string | null, customerId: string | null): IDataServiceRequest;
export declare function acceptInvitationAsync(context: IContext, invitationToken: string | null, customerId: string | null): AsyncResult<NullResult>;
