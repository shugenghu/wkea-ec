import { AsyncResult } from '../async-result';
import { Employee, EmployeeActivitySearchCriteria, EmployeeActivity, OrgUnit, ClientBookCustomerSearchCriteria, ClientBookCustomer, ClientBookRefiner, ClientBookChanges } from '../Entities/CommerceTypes.g';
import { IContext, IDataServiceRequest, IQueryResultSettings, NullResult } from '../Interfaces';
export declare function createCreateInput(entity: Employee): IDataServiceRequest;
export declare function createEmployeeAsync(context: IContext, entity: Employee): AsyncResult<Employee>;
export declare function createUpdateInput(entity: Employee): IDataServiceRequest;
export declare function updateAsync(context: IContext, entity: Employee): AsyncResult<Employee>;
export declare function createDeleteAsync(entity: Employee): IDataServiceRequest;
export declare function deleteAsync(context: IContext, entity: Employee): AsyncResult<NullResult>;
export declare function createReadAsync(staffId: string): IDataServiceRequest;
export declare function readAsync(context: IContext, staffId: string): AsyncResult<Employee>;
export declare function createReadAllAsync(queryResultSettings: IQueryResultSettings): IDataServiceRequest;
export declare function readAllAsync(context: IContext): AsyncResult<Employee[]>;
export declare function createGetActivitiesInput(queryResultSettings: IQueryResultSettings, employeeActivitySearchCriteria: EmployeeActivitySearchCriteria | null): IDataServiceRequest;
export declare function getActivitiesAsync(context: IContext, employeeActivitySearchCriteria: EmployeeActivitySearchCriteria | null): AsyncResult<EmployeeActivity[]>;
export declare function createGetManagerActivityViewInput(queryResultSettings: IQueryResultSettings, employeeActivitySearchCriteria: EmployeeActivitySearchCriteria | null): IDataServiceRequest;
export declare function getManagerActivityViewAsync(context: IContext, employeeActivitySearchCriteria: EmployeeActivitySearchCriteria | null): AsyncResult<EmployeeActivity[]>;
export declare function createRegisterActivityInput(staffId: string, employeeActivityType: number): IDataServiceRequest;
export declare function registerActivityAsync(context: IContext, staffId: string, employeeActivityType: number): AsyncResult<Date>;
export declare function createGetAccessibleOrgUnitsInput(queryResultSettings: IQueryResultSettings): IDataServiceRequest;
export declare function getAccessibleOrgUnitsAsync(context: IContext): AsyncResult<OrgUnit[]>;
export declare function createGetLatestActivityInput(): IDataServiceRequest;
export declare function getLatestActivityAsync(context: IContext): AsyncResult<EmployeeActivity>;
export declare function createSearchClientBookCustomersInput(queryResultSettings: IQueryResultSettings, clientBookCustomerSearchCriteria: ClientBookCustomerSearchCriteria | null): IDataServiceRequest;
export declare function searchClientBookCustomersAsync(context: IContext, clientBookCustomerSearchCriteria: ClientBookCustomerSearchCriteria | null): AsyncResult<ClientBookCustomer[]>;
export declare function createGetClientBookSearchRefinersInput(queryResultSettings: IQueryResultSettings, refinerSourceTypes: number[], searchCriteria: ClientBookCustomerSearchCriteria | null): IDataServiceRequest;
export declare function getClientBookSearchRefinersAsync(context: IContext, refinerSourceTypes: number[], searchCriteria: ClientBookCustomerSearchCriteria | null): AsyncResult<ClientBookRefiner[]>;
export declare function createUpdateClientBookInput(clientBookChanges: ClientBookChanges | null): IDataServiceRequest;
export declare function updateClientBookAsync(context: IContext, clientBookChanges: ClientBookChanges | null): AsyncResult<NullResult>;
export declare function createGetCurrentEmployeeInput(): IDataServiceRequest;
export declare function getCurrentEmployeeAsync(context: IContext): AsyncResult<Employee>;
