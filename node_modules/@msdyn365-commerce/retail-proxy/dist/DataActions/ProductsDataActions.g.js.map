{"version":3,"file":"ProductsDataActions.g.js","sourceRoot":"","sources":["../../src/DataActions/ProductsDataActions.g.ts"],"names":[],"mappings":"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","sourcesContent":["    // <auto-generated />\n    import { AsyncResult } from '../async-result';\n    import { DataServiceQuery } from '../DataServiceQuery';\n    import { Product, ProductDimension, ProductVariantResolutionOnKitSelectionContext, ProductDimensionValue, SimpleProduct, ComponentInSlotRelation, ProductComparisonLine, ProductSearchResult, ProductRefinerValue, ProductSearchCriteria, ProductRefiner, ChangedProductsSearchCriteria, ReadChangedProductsSession, DeletedListingsResult, ProductRating, ProductAssortmentInterval, Address, ProductDeliveryOptions, ListingPublishStatus, ProductPrice, ProductAvailableQuantity, ProjectionDomain, AffiliationLoyaltyTier, ProductComponent, CategoryPathLookup, CategoryPathResult, ProductLookupClause, SearchSuggestion, AttributeProduct, AttributeValue, MediaLocation, MediaBlob, ProductRelationType, UnitOfMeasure, ProductWarrantiesMapping, ProductWarehouse, ProductWarehouseInventoryInformation, InventoryAvailabilitySearchCriteria } from '../Entities/CommerceTypes.g';\n    import { ProductClass, ProductDimensionValueClass, SimpleProductClass, ProductComparisonLineClass, ProductSearchResultClass, ProductRefinerClass, ReadChangedProductsSessionClass, DeletedListingsResultClass, ProductRatingClass, ProductAssortmentIntervalClass, ProductDeliveryOptionsClass, ProductPriceClass, ProductAvailableQuantityClass, ProductComponentClass, CategoryPathResultClass, SearchSuggestionClass, ProductRefinerValueClass, AttributeProductClass, AttributeValueClass, MediaLocationClass, MediaBlobClass, ProductRelationTypeClass, UnitOfMeasureClass, ProductWarrantiesMappingClass, ProductWarehouseInventoryInformationClass } from '../Entities/CommerceModels.g';\n    import { IContext, IDataServiceRequest, IQueryResultSettings, NullResult } from '../Interfaces';\n    import { executeAction } from '../retail-action';\n    \n    \n    function productsQuery(recordId?: number): DataServiceQuery {\n      var key = (recordId) ? { RecordId: recordId } : null;\n      return new DataServiceQuery(\"Products\", \"Product\", ProductClass, key);\n    }\n    \n    export function createCreateInput(entity: Product): IDataServiceRequest {\n        return productsQuery().create(entity);\n    }\n    export function createProductAsync(context: IContext, entity: Product): AsyncResult<Product> {\n        const request = createCreateInput(entity, );\n        return executeAction<Product>(request, context);\n    }\n    export function createUpdateInput(entity: Product): IDataServiceRequest {\n        return productsQuery(entity.RecordId).update(entity);\n    }\n    export function updateAsync(context: IContext, entity: Product): AsyncResult<Product> {\n        const request = createUpdateInput(entity, );\n        return executeAction<Product>(request, context);\n    }\n    export function createDeleteAsync(entity: Product): IDataServiceRequest {\n        return productsQuery(entity.RecordId).delete();\n    }\n    export function deleteAsync(context: IContext, entity: Product): AsyncResult<NullResult> {\n        const request = createDeleteAsync(entity, );\n        return executeAction<NullResult>(request, context);\n    }\n    export function createReadAsync(recordId: number): IDataServiceRequest {\n        return productsQuery(recordId).read();\n    }\n    export function readAsync(context: IContext, recordId: number): AsyncResult<Product> {\n        const request = createReadAsync(recordId, );\n        return executeAction<Product>(request, context);\n    }\n    export function createReadAllAsync(queryResultSettings: IQueryResultSettings): IDataServiceRequest {\n        return productsQuery().resultSettings(queryResultSettings).read();\n    }\n    export function readAllAsync(context: IContext): AsyncResult<Product[]> {\n        const request = createReadAllAsync(context.queryResultSettings, );\n        return executeAction<Product[]>(request, context);\n    }\n    \n    export function createGetDimensionValuesInput(queryResultSettings: IQueryResultSettings, recordId: number, channelId: number, dimension: number, matchingDimensionValues: ProductDimension[] | null, kitVariantResolutionContext: ProductVariantResolutionOnKitSelectionContext | null): IDataServiceRequest {      \n        const query = productsQuery(recordId).resultSettings(queryResultSettings);\n        return query.createDataServiceRequestForOperation('GetDimensionValues', true, ProductDimensionValueClass, 'true', { bypassCache: 'none', returnEntity: 'ProductDimensionValue'}, {channelId: channelId, dimension: dimension, matchingDimensionValues: matchingDimensionValues, kitVariantResolutionContext: kitVariantResolutionContext });\n    }    \n    \n    export function getDimensionValuesAsync(context: IContext, recordId: number, channelId: number, dimension: number, matchingDimensionValues: ProductDimension[] | null, kitVariantResolutionContext: ProductVariantResolutionOnKitSelectionContext | null):AsyncResult<ProductDimensionValue[]> {\n        const request = createGetDimensionValuesInput(context.queryResultSettings, recordId, channelId, dimension, matchingDimensionValues, kitVariantResolutionContext, );\n        return executeAction<ProductDimensionValue[]>(request, context);\n    }          \n          \n    export function createGetVariantsByDimensionValuesInput(queryResultSettings: IQueryResultSettings, recordId: number, channelId: number, matchingDimensionValues: ProductDimension[] | null): IDataServiceRequest {      \n        const query = productsQuery(recordId).resultSettings(queryResultSettings);\n        return query.createDataServiceRequestForOperation('GetVariantsByDimensionValues', true, SimpleProductClass, 'true', { bypassCache: 'none', returnEntity: 'SimpleProduct'}, {channelId: channelId, matchingDimensionValues: matchingDimensionValues });\n    }    \n    \n    export function getVariantsByDimensionValuesAsync(context: IContext, recordId: number, channelId: number, matchingDimensionValues: ProductDimension[] | null):AsyncResult<SimpleProduct[]> {\n        const request = createGetVariantsByDimensionValuesInput(context.queryResultSettings, recordId, channelId, matchingDimensionValues, );\n        return executeAction<SimpleProduct[]>(request, context);\n    }          \n          \n    export function createGetVariantsByComponentsInSlotsInput(queryResultSettings: IQueryResultSettings, recordId: number, channelId: number, matchingSlotToComponentRelationship: ComponentInSlotRelation[] | null): IDataServiceRequest {      \n        const query = productsQuery(recordId).resultSettings(queryResultSettings);\n        return query.createDataServiceRequestForOperation('GetVariantsByComponentsInSlots', true, SimpleProductClass, 'true', { bypassCache: 'none', returnEntity: 'SimpleProduct'}, {channelId: channelId, matchingSlotToComponentRelationship: matchingSlotToComponentRelationship });\n    }    \n    \n    export function getVariantsByComponentsInSlotsAsync(context: IContext, recordId: number, channelId: number, matchingSlotToComponentRelationship: ComponentInSlotRelation[] | null):AsyncResult<SimpleProduct[]> {\n        const request = createGetVariantsByComponentsInSlotsInput(context.queryResultSettings, recordId, channelId, matchingSlotToComponentRelationship, );\n        return executeAction<SimpleProduct[]>(request, context);\n    }          \n          \n    export function createGetByIdsInput(queryResultSettings: IQueryResultSettings, channelId: number, productIds: number[]): IDataServiceRequest {      \n        const query = productsQuery().resultSettings(queryResultSettings);\n        return query.createDataServiceRequestForOperation('GetByIds', true, SimpleProductClass, 'true', { bypassCache: 'none', returnEntity: 'SimpleProduct'}, {channelId: channelId, productIds: productIds });\n    }    \n    \n    export function getByIdsAsync(context: IContext, channelId: number, productIds: number[]):AsyncResult<SimpleProduct[]> {\n        const request = createGetByIdsInput(context.queryResultSettings, channelId, productIds, );\n        return executeAction<SimpleProduct[]>(request, context);\n    }          \n          \n    export function createCompareInput(queryResultSettings: IQueryResultSettings, channelId: number, catalogId: number, productIds: number[]): IDataServiceRequest {      \n        const query = productsQuery().resultSettings(queryResultSettings);\n        return query.createDataServiceRequestForOperation('Compare', true, ProductComparisonLineClass, 'true', { bypassCache: 'get', returnEntity: 'ProductComparisonLine'}, {channelId: channelId, catalogId: catalogId, productIds: productIds });\n    }    \n    \n    export function compareAsync(context: IContext, channelId: number, catalogId: number, productIds: number[]):AsyncResult<ProductComparisonLine[]> {\n        const request = createCompareInput(context.queryResultSettings, channelId, catalogId, productIds, );\n        return executeAction<ProductComparisonLine[]>(request, context);\n    }          \n          \n    export function createGetRecommendedProductsInput(queryResultSettings: IQueryResultSettings, productIds: number[], customerId: string | null): IDataServiceRequest {      \n        const query = productsQuery().resultSettings(queryResultSettings);\n        return query.createDataServiceRequestForOperation('GetRecommendedProducts', true, ProductSearchResultClass, 'true', { bypassCache: 'none', returnEntity: 'ProductSearchResult'}, {productIds: productIds, customerId: customerId });\n    }    \n    \n    export function getRecommendedProductsAsync(context: IContext, productIds: number[], customerId: string | null):AsyncResult<ProductSearchResult[]> {\n        const request = createGetRecommendedProductsInput(context.queryResultSettings, productIds, customerId, );\n        return executeAction<ProductSearchResult[]>(request, context);\n    }          \n          \n    export function createRefineSearchByCategoryInput(queryResultSettings: IQueryResultSettings, channelId: number, catalogId: number, categoryId: number, refinementCriteria: ProductRefinerValue[] | null): IDataServiceRequest {      \n        const query = productsQuery().resultSettings(queryResultSettings);\n        return query.createDataServiceRequestForOperation('RefineSearchByCategory', true, ProductSearchResultClass, 'true', { bypassCache: 'get', returnEntity: 'ProductSearchResult'}, {channelId: channelId, catalogId: catalogId, categoryId: categoryId, refinementCriteria: refinementCriteria });\n    }    \n    \n    export function refineSearchByCategoryAsync(context: IContext, channelId: number, catalogId: number, categoryId: number, refinementCriteria: ProductRefinerValue[] | null):AsyncResult<ProductSearchResult[]> {\n        const request = createRefineSearchByCategoryInput(context.queryResultSettings, channelId, catalogId, categoryId, refinementCriteria, );\n        return executeAction<ProductSearchResult[]>(request, context);\n    }          \n          \n    export function createRefineSearchByTextInput(queryResultSettings: IQueryResultSettings, channelId: number, catalogId: number, searchText: string | null, refinementCriteria: ProductRefinerValue[] | null): IDataServiceRequest {      \n        const query = productsQuery().resultSettings(queryResultSettings);\n        return query.createDataServiceRequestForOperation('RefineSearchByText', true, ProductSearchResultClass, 'true', { bypassCache: 'get', returnEntity: 'ProductSearchResult'}, {channelId: channelId, catalogId: catalogId, searchText: searchText, refinementCriteria: refinementCriteria });\n    }    \n    \n    export function refineSearchByTextAsync(context: IContext, channelId: number, catalogId: number, searchText: string | null, refinementCriteria: ProductRefinerValue[] | null):AsyncResult<ProductSearchResult[]> {\n        const request = createRefineSearchByTextInput(context.queryResultSettings, channelId, catalogId, searchText, refinementCriteria, );\n        return executeAction<ProductSearchResult[]>(request, context);\n    }          \n          \n    export function createGetProductSearchRefinersInput(queryResultSettings: IQueryResultSettings, searchCriteria: ProductSearchCriteria | null): IDataServiceRequest {      \n        const query = productsQuery().resultSettings(queryResultSettings);\n        return query.createDataServiceRequestForOperation('GetProductSearchRefiners', true, ProductRefinerClass, 'true', { bypassCache: 'none', returnEntity: 'ProductRefiner'}, {searchCriteria: searchCriteria });\n    }    \n    \n    export function getProductSearchRefinersAsync(context: IContext, searchCriteria: ProductSearchCriteria | null):AsyncResult<ProductRefiner[]> {\n        const request = createGetProductSearchRefinersInput(context.queryResultSettings, searchCriteria, );\n        return executeAction<ProductRefiner[]>(request, context);\n    }          \n          \n    export function createSearchInput(queryResultSettings: IQueryResultSettings, productSearchCriteria: ProductSearchCriteria | null): IDataServiceRequest {      \n        const query = productsQuery().resultSettings(queryResultSettings);\n        return query.createDataServiceRequestForOperation('Search', true, ProductClass, 'true', { bypassCache: 'none', returnEntity: 'Product'}, {productSearchCriteria: productSearchCriteria });\n    }    \n    \n    export function searchAsync(context: IContext, productSearchCriteria: ProductSearchCriteria | null):AsyncResult<Product[]> {\n        const request = createSearchInput(context.queryResultSettings, productSearchCriteria, );\n        return executeAction<Product[]>(request, context);\n    }          \n          \n    export function createGetRefinersInput(queryResultSettings: IQueryResultSettings, productSearchCriteria: ProductSearchCriteria | null): IDataServiceRequest {      \n        const query = productsQuery().resultSettings(queryResultSettings);\n        return query.createDataServiceRequestForOperation('GetRefiners', true, ProductRefinerClass, 'true', { bypassCache: 'none', returnEntity: 'ProductRefiner'}, {productSearchCriteria: productSearchCriteria });\n    }    \n    \n    export function getRefinersAsync(context: IContext, productSearchCriteria: ProductSearchCriteria | null):AsyncResult<ProductRefiner[]> {\n        const request = createGetRefinersInput(context.queryResultSettings, productSearchCriteria, );\n        return executeAction<ProductRefiner[]>(request, context);\n    }          \n          \n    export function createChangesInput(queryResultSettings: IQueryResultSettings, productSearchCriteria: ChangedProductsSearchCriteria | null): IDataServiceRequest {      \n        const query = productsQuery().resultSettings(queryResultSettings);\n        return query.createDataServiceRequestForOperation('Changes', true, ProductClass, 'true', { bypassCache: 'get', returnEntity: 'Product'}, {productSearchCriteria: productSearchCriteria });\n    }    \n    \n    export function changesAsync(context: IContext, productSearchCriteria: ChangedProductsSearchCriteria | null):AsyncResult<Product[]> {\n        const request = createChangesInput(context.queryResultSettings, productSearchCriteria, );\n        return executeAction<Product[]>(request, context);\n    }          \n          \n    export function createBeginReadChangedProductsInput(changedProductSearchCriteria: ChangedProductsSearchCriteria | null): IDataServiceRequest {      \n        const query = productsQuery();\n        return query.createDataServiceRequestForOperation('BeginReadChangedProducts', true, ReadChangedProductsSessionClass, 'false', { bypassCache: 'get', returnEntity: 'ReadChangedProductsSession'}, {changedProductSearchCriteria: changedProductSearchCriteria });\n    }    \n    \n    export function beginReadChangedProductsAsync(context: IContext, changedProductSearchCriteria: ChangedProductsSearchCriteria | null):AsyncResult<ReadChangedProductsSession> {\n        const request = createBeginReadChangedProductsInput(changedProductSearchCriteria, );\n        return executeAction<ReadChangedProductsSession>(request, context);\n    }          \n          \n    export function createReadChangedProductsInput(queryResultSettings: IQueryResultSettings, productSearchCriteria: ChangedProductsSearchCriteria | null): IDataServiceRequest {      \n        const query = productsQuery().resultSettings(queryResultSettings);\n        return query.createDataServiceRequestForOperation('ReadChangedProducts', true, ProductClass, 'true', { bypassCache: 'none', returnEntity: 'Product'}, {productSearchCriteria: productSearchCriteria });\n    }    \n    \n    export function readChangedProductsAsync(context: IContext, productSearchCriteria: ChangedProductsSearchCriteria | null):AsyncResult<Product[]> {\n        const request = createReadChangedProductsInput(context.queryResultSettings, productSearchCriteria, );\n        return executeAction<Product[]>(request, context);\n    }          \n          \n    export function createGetDeletedListingsInput(catalogId: number, skip: number, top: number): IDataServiceRequest {      \n        const query = productsQuery();\n        return query.createDataServiceRequestForOperation('GetDeletedListings', true, DeletedListingsResultClass, 'false', { bypassCache: 'none', returnEntity: 'DeletedListingsResult'}, {catalogId: catalogId, skip: skip, top: top });\n    }    \n    \n    export function getDeletedListingsAsync(context: IContext, catalogId: number, skip: number, top: number):AsyncResult<DeletedListingsResult> {\n        const request = createGetDeletedListingsInput(catalogId, skip, top, );\n        return executeAction<DeletedListingsResult>(request, context);\n    }          \n          \n    export function createGetDeletedCatalogsInput(queryResultSettings: IQueryResultSettings): IDataServiceRequest {      \n        const query = productsQuery().resultSettings(queryResultSettings);\n        return query.createDataServiceRequestForOperation('GetDeletedCatalogs', false, '', 'true', { bypassCache: 'none', returnEntity: ''}, { });\n    }    \n    \n    export function getDeletedCatalogsAsync(context: IContext):AsyncResult<number[]> {\n        const request = createGetDeletedCatalogsInput(context.queryResultSettings, );\n        return executeAction<number[]>(request, context);\n    }          \n          \n    export function createGetDeletedLanguagesInput(queryResultSettings: IQueryResultSettings): IDataServiceRequest {      \n        const query = productsQuery().resultSettings(queryResultSettings);\n        return query.createDataServiceRequestForOperation('GetDeletedLanguages', false, '', 'true', { bypassCache: 'none', returnEntity: ''}, { });\n    }    \n    \n    export function getDeletedLanguagesAsync(context: IContext):AsyncResult<string[]> {\n        const request = createGetDeletedLanguagesInput(context.queryResultSettings, );\n        return executeAction<string[]>(request, context);\n    }          \n          \n    export function createGetProductRatingsInput(queryResultSettings: IQueryResultSettings, productIds: number[]): IDataServiceRequest {      \n        const query = productsQuery().resultSettings(queryResultSettings);\n        return query.createDataServiceRequestForOperation('GetProductRatings', true, ProductRatingClass, 'true', { bypassCache: 'none', returnEntity: 'ProductRating'}, {productIds: productIds });\n    }    \n    \n    export function getProductRatingsAsync(context: IContext, productIds: number[]):AsyncResult<ProductRating[]> {\n        const request = createGetProductRatingsInput(context.queryResultSettings, productIds, );\n        return executeAction<ProductRating[]>(request, context);\n    }          \n          \n    export function createGetProductAssortmentIntervalsInput(queryResultSettings: IQueryResultSettings, productIds: number[]): IDataServiceRequest {      \n        const query = productsQuery().resultSettings(queryResultSettings);\n        return query.createDataServiceRequestForOperation('GetProductAssortmentIntervals', true, ProductAssortmentIntervalClass, 'true', { bypassCache: 'none', returnEntity: 'ProductAssortmentInterval'}, {productIds: productIds });\n    }    \n    \n    export function getProductAssortmentIntervalsAsync(context: IContext, productIds: number[]):AsyncResult<ProductAssortmentInterval[]> {\n        const request = createGetProductAssortmentIntervalsInput(context.queryResultSettings, productIds, );\n        return executeAction<ProductAssortmentInterval[]>(request, context);\n    }          \n          \n    export function createGetDeliveryOptionsInput(queryResultSettings: IQueryResultSettings, productIds: number[], address: Address | null, filterOption: number | null): IDataServiceRequest {      \n        const query = productsQuery().resultSettings(queryResultSettings);\n        return query.createDataServiceRequestForOperation('GetDeliveryOptions', true, ProductDeliveryOptionsClass, 'true', { bypassCache: 'none', returnEntity: 'ProductDeliveryOptions'}, {productIds: productIds, address: address, filterOption: filterOption });\n    }    \n    \n    export function getDeliveryOptionsAsync(context: IContext, productIds: number[], address: Address | null, filterOption: number | null):AsyncResult<ProductDeliveryOptions[]> {\n        const request = createGetDeliveryOptionsInput(context.queryResultSettings, productIds, address, filterOption, );\n        return executeAction<ProductDeliveryOptions[]>(request, context);\n    }          \n          \n    export function createDeleteListingsByCatalogsInput(catalogIds: number[]): IDataServiceRequest {      \n        const query = productsQuery();\n        return query.createDataServiceRequestForOperation('DeleteListingsByCatalogs', true, '', '', { bypassCache: 'get', returnEntity: ''}, {catalogIds: catalogIds });\n    }    \n    \n    export function deleteListingsByCatalogsAsync(context: IContext, catalogIds: number[]):AsyncResult<NullResult> {\n        const request = createDeleteListingsByCatalogsInput(catalogIds, );\n        return executeAction<NullResult>(request, context);\n    }          \n          \n    export function createDeleteListingsByLanguagesInput(languages: string[] | null): IDataServiceRequest {      \n        const query = productsQuery();\n        return query.createDataServiceRequestForOperation('DeleteListingsByLanguages', true, '', '', { bypassCache: 'get', returnEntity: ''}, {languages: languages });\n    }    \n    \n    export function deleteListingsByLanguagesAsync(context: IContext, languages: string[] | null):AsyncResult<NullResult> {\n        const request = createDeleteListingsByLanguagesInput(languages, );\n        return executeAction<NullResult>(request, context);\n    }          \n          \n    export function createEndReadChangedProductsInput(session: ReadChangedProductsSession | null): IDataServiceRequest {      \n        const query = productsQuery();\n        return query.createDataServiceRequestForOperation('EndReadChangedProducts', true, '', '', { bypassCache: 'get', returnEntity: ''}, {session: session });\n    }    \n    \n    export function endReadChangedProductsAsync(context: IContext, session: ReadChangedProductsSession | null):AsyncResult<NullResult> {\n        const request = createEndReadChangedProductsInput(session, );\n        return executeAction<NullResult>(request, context);\n    }          \n          \n    export function createUpdateListingPublishingStatusInput(publishingStatuses: ListingPublishStatus[] | null): IDataServiceRequest {      \n        const query = productsQuery();\n        return query.createDataServiceRequestForOperation('UpdateListingPublishingStatus', true, '', '', { bypassCache: 'get', returnEntity: ''}, {publishingStatuses: publishingStatuses });\n    }    \n    \n    export function updateListingPublishingStatusAsync(context: IContext, publishingStatuses: ListingPublishStatus[] | null):AsyncResult<NullResult> {\n        const request = createUpdateListingPublishingStatusInput(publishingStatuses, );\n        return executeAction<NullResult>(request, context);\n    }          \n          \n    export function createGetPricesInput(queryResultSettings: IQueryResultSettings, itemId: string | null, inventoryDimensionId: string | null, barcode: string | null, customerAccountNumber: string | null, unitOfMeasureSymbol: string | null, quantity: number): IDataServiceRequest {      \n        const query = productsQuery().resultSettings(queryResultSettings);\n        return query.createDataServiceRequestForOperation('GetPrices', true, ProductPriceClass, 'true', { bypassCache: 'none', returnEntity: 'ProductPrice'}, {itemId: itemId, inventoryDimensionId: inventoryDimensionId, barcode: barcode, customerAccountNumber: customerAccountNumber, unitOfMeasureSymbol: unitOfMeasureSymbol, quantity: quantity });\n    }    \n    \n    export function getPricesAsync(context: IContext, itemId: string | null, inventoryDimensionId: string | null, barcode: string | null, customerAccountNumber: string | null, unitOfMeasureSymbol: string | null, quantity: number):AsyncResult<ProductPrice[]> {\n        const request = createGetPricesInput(context.queryResultSettings, itemId, inventoryDimensionId, barcode, customerAccountNumber, unitOfMeasureSymbol, quantity, );\n        return executeAction<ProductPrice[]>(request, context);\n    }          \n          \n    export function createGetProductAvailabilitiesInput(queryResultSettings: IQueryResultSettings, itemIds: number[], channelId: number): IDataServiceRequest {      \n        const query = productsQuery().resultSettings(queryResultSettings);\n        return query.createDataServiceRequestForOperation('GetProductAvailabilities', true, ProductAvailableQuantityClass, 'true', { bypassCache: 'none', returnEntity: 'ProductAvailableQuantity'}, {itemIds: itemIds, channelId: channelId });\n    }    \n    \n    export function getProductAvailabilitiesAsync(context: IContext, itemIds: number[], channelId: number):AsyncResult<ProductAvailableQuantity[]> {\n        const request = createGetProductAvailabilitiesInput(context.queryResultSettings, itemIds, channelId, );\n        return executeAction<ProductAvailableQuantity[]>(request, context);\n    }          \n          \n    export function createGetActivePricesInput(queryResultSettings: IQueryResultSettings, projectDomain: ProjectionDomain | null, productIds: number[], activeDate: Date, customerId: string | null, affiliationLoyaltyTiers: AffiliationLoyaltyTier[] | null, includeSimpleDiscountsInContextualPrice: boolean | null): IDataServiceRequest {      \n        const query = productsQuery().resultSettings(queryResultSettings);\n        return query.createDataServiceRequestForOperation('GetActivePrices', true, ProductPriceClass, 'true', { bypassCache: 'none', returnEntity: 'ProductPrice'}, {projectDomain: projectDomain, productIds: productIds, activeDate: activeDate, customerId: customerId, affiliationLoyaltyTiers: affiliationLoyaltyTiers, includeSimpleDiscountsInContextualPrice: includeSimpleDiscountsInContextualPrice });\n    }    \n    \n    export function getActivePricesAsync(context: IContext, projectDomain: ProjectionDomain | null, productIds: number[], activeDate: Date, customerId: string | null, affiliationLoyaltyTiers: AffiliationLoyaltyTier[] | null, includeSimpleDiscountsInContextualPrice: boolean | null):AsyncResult<ProductPrice[]> {\n        const request = createGetActivePricesInput(context.queryResultSettings, projectDomain, productIds, activeDate, customerId, affiliationLoyaltyTiers, includeSimpleDiscountsInContextualPrice, );\n        return executeAction<ProductPrice[]>(request, context);\n    }          \n          \n    export function createGetFilteredSlotComponentsInput(queryResultSettings: IQueryResultSettings, recordId: number, channelId: number, slotId: number, selectedComponents: ComponentInSlotRelation[] | null): IDataServiceRequest {      \n        const query = productsQuery(recordId).resultSettings(queryResultSettings);\n        return query.createDataServiceRequestForOperation('GetFilteredSlotComponents', true, ProductComponentClass, 'true', { bypassCache: 'none', returnEntity: 'ProductComponent'}, {channelId: channelId, slotId: slotId, selectedComponents: selectedComponents });\n    }    \n    \n    export function getFilteredSlotComponentsAsync(context: IContext, recordId: number, channelId: number, slotId: number, selectedComponents: ComponentInSlotRelation[] | null):AsyncResult<ProductComponent[]> {\n        const request = createGetFilteredSlotComponentsInput(context.queryResultSettings, recordId, channelId, slotId, selectedComponents, );\n        return executeAction<ProductComponent[]>(request, context);\n    }          \n          \n    export function createGetComponentByProductSlotRelationInput(channelId: number, componentRelation: ComponentInSlotRelation | null): IDataServiceRequest {      \n        const query = productsQuery();\n        return query.createDataServiceRequestForOperation('GetComponentByProductSlotRelation', true, ProductComponentClass, 'false', { bypassCache: 'none', returnEntity: 'ProductComponent'}, {channelId: channelId, componentRelation: componentRelation });\n    }    \n    \n    export function getComponentByProductSlotRelationAsync(context: IContext, channelId: number, componentRelation: ComponentInSlotRelation | null):AsyncResult<ProductComponent> {\n        const request = createGetComponentByProductSlotRelationInput(channelId, componentRelation, );\n        return executeAction<ProductComponent>(request, context);\n    }          \n          \n    export function createGetCategoryPathsInput(queryResultSettings: IQueryResultSettings, channelId: number, catalogId: number, categoryPathLookups: CategoryPathLookup[] | null): IDataServiceRequest {      \n        const query = productsQuery().resultSettings(queryResultSettings);\n        return query.createDataServiceRequestForOperation('GetCategoryPaths', true, CategoryPathResultClass, 'true', { bypassCache: 'none', returnEntity: 'CategoryPathResult'}, {channelId: channelId, catalogId: catalogId, CategoryPathLookups: categoryPathLookups });\n    }    \n    \n    export function getCategoryPathsAsync(context: IContext, channelId: number, catalogId: number, categoryPathLookups: CategoryPathLookup[] | null):AsyncResult<CategoryPathResult[]> {\n        const request = createGetCategoryPathsInput(context.queryResultSettings, channelId, catalogId, categoryPathLookups, );\n        return executeAction<CategoryPathResult[]>(request, context);\n    }          \n          \n    export function createSearchByCategoryInput(queryResultSettings: IQueryResultSettings, channelId: number, catalogId: number, categoryId: number): IDataServiceRequest {      \n        const query = productsQuery().resultSettings(queryResultSettings);\n        return query.createDataServiceRequestForOperation('SearchByCategory', false, ProductSearchResultClass, 'true', { bypassCache: 'none', returnEntity: 'ProductSearchResult'}, {channelId: channelId, catalogId: catalogId, categoryId: categoryId });\n    }    \n    \n    export function searchByCategoryAsync(context: IContext, channelId: number, catalogId: number, categoryId: number):AsyncResult<ProductSearchResult[]> {\n        const request = createSearchByCategoryInput(context.queryResultSettings, channelId, catalogId, categoryId, );\n        return executeAction<ProductSearchResult[]>(request, context);\n    }          \n          \n    export function createSearchByTextInput(queryResultSettings: IQueryResultSettings, channelId: number, catalogId: number, searchText: string | null): IDataServiceRequest {      \n        const query = productsQuery().resultSettings(queryResultSettings);\n        return query.createDataServiceRequestForOperation('SearchByText', false, ProductSearchResultClass, 'true', { bypassCache: 'none', returnEntity: 'ProductSearchResult'}, {channelId: channelId, catalogId: catalogId, searchText: searchText });\n    }    \n    \n    export function searchByTextAsync(context: IContext, channelId: number, catalogId: number, searchText: string | null):AsyncResult<ProductSearchResult[]> {\n        const request = createSearchByTextInput(context.queryResultSettings, channelId, catalogId, searchText, );\n        return executeAction<ProductSearchResult[]>(request, context);\n    }          \n          \n    export function createSearchByCriteriaInput(queryResultSettings: IQueryResultSettings, searchCriteria: ProductSearchCriteria | null): IDataServiceRequest {      \n        const query = productsQuery().resultSettings(queryResultSettings);\n        return query.createDataServiceRequestForOperation('SearchByCriteria', true, ProductSearchResultClass, 'true', { bypassCache: 'none', returnEntity: 'ProductSearchResult'}, {searchCriteria: searchCriteria });\n    }    \n    \n    export function searchByCriteriaAsync(context: IContext, searchCriteria: ProductSearchCriteria | null):AsyncResult<ProductSearchResult[]> {\n        const request = createSearchByCriteriaInput(context.queryResultSettings, searchCriteria, );\n        return executeAction<ProductSearchResult[]>(request, context);\n    }          \n          \n    export function createGetByLookupClausesInput(queryResultSettings: IQueryResultSettings, channelId: number, productLookupClauses: ProductLookupClause[] | null): IDataServiceRequest {      \n        const query = productsQuery().resultSettings(queryResultSettings);\n        return query.createDataServiceRequestForOperation('GetByLookupClauses', true, SimpleProductClass, 'true', { bypassCache: 'none', returnEntity: 'SimpleProduct'}, {channelId: channelId, productLookupClauses: productLookupClauses });\n    }    \n    \n    export function getByLookupClausesAsync(context: IContext, channelId: number, productLookupClauses: ProductLookupClause[] | null):AsyncResult<SimpleProduct[]> {\n        const request = createGetByLookupClausesInput(context.queryResultSettings, channelId, productLookupClauses, );\n        return executeAction<SimpleProduct[]>(request, context);\n    }          \n          \n    export function createGetSearchSuggestionsInput(queryResultSettings: IQueryResultSettings, channelId: number, catalogId: number, searchText: string | null, hitPrefix: string | null, hitSuffix: string | null): IDataServiceRequest {      \n        const query = productsQuery().resultSettings(queryResultSettings);\n        return query.createDataServiceRequestForOperation('GetSearchSuggestions', false, SearchSuggestionClass, 'true', { bypassCache: 'none', returnEntity: 'SearchSuggestion'}, {channelId: channelId, catalogId: catalogId, searchText: searchText, hitPrefix: hitPrefix, hitSuffix: hitSuffix });\n    }    \n    \n    export function getSearchSuggestionsAsync(context: IContext, channelId: number, catalogId: number, searchText: string | null, hitPrefix: string | null, hitSuffix: string | null):AsyncResult<SearchSuggestion[]> {\n        const request = createGetSearchSuggestionsInput(context.queryResultSettings, channelId, catalogId, searchText, hitPrefix, hitSuffix, );\n        return executeAction<SearchSuggestion[]>(request, context);\n    }          \n          \n    export function createGetRefinersByCategoryInput(queryResultSettings: IQueryResultSettings, catalogId: number, categoryId: number): IDataServiceRequest {      \n        const query = productsQuery().resultSettings(queryResultSettings);\n        return query.createDataServiceRequestForOperation('GetRefinersByCategory', false, ProductRefinerClass, 'true', { bypassCache: 'none', returnEntity: 'ProductRefiner'}, {catalogId: catalogId, categoryId: categoryId });\n    }    \n    \n    export function getRefinersByCategoryAsync(context: IContext, catalogId: number, categoryId: number):AsyncResult<ProductRefiner[]> {\n        const request = createGetRefinersByCategoryInput(context.queryResultSettings, catalogId, categoryId, );\n        return executeAction<ProductRefiner[]>(request, context);\n    }          \n          \n    export function createGetRefinersByTextInput(queryResultSettings: IQueryResultSettings, catalogId: number, searchText: string | null): IDataServiceRequest {      \n        const query = productsQuery().resultSettings(queryResultSettings);\n        return query.createDataServiceRequestForOperation('GetRefinersByText', false, ProductRefinerClass, 'true', { bypassCache: 'none', returnEntity: 'ProductRefiner'}, {catalogId: catalogId, searchText: searchText });\n    }    \n    \n    export function getRefinersByTextAsync(context: IContext, catalogId: number, searchText: string | null):AsyncResult<ProductRefiner[]> {\n        const request = createGetRefinersByTextInput(context.queryResultSettings, catalogId, searchText, );\n        return executeAction<ProductRefiner[]>(request, context);\n    }          \n          \n    export function createGetRefinerValuesByCategoryInput(queryResultSettings: IQueryResultSettings, catalogId: number, categoryId: number, refinerId: number, refinerSourceValue: number): IDataServiceRequest {      \n        const query = productsQuery().resultSettings(queryResultSettings);\n        return query.createDataServiceRequestForOperation('GetRefinerValuesByCategory', false, ProductRefinerValueClass, 'true', { bypassCache: 'none', returnEntity: 'ProductRefinerValue'}, {catalogId: catalogId, categoryId: categoryId, refinerId: refinerId, refinerSourceValue: refinerSourceValue });\n    }    \n    \n    export function getRefinerValuesByCategoryAsync(context: IContext, catalogId: number, categoryId: number, refinerId: number, refinerSourceValue: number):AsyncResult<ProductRefinerValue[]> {\n        const request = createGetRefinerValuesByCategoryInput(context.queryResultSettings, catalogId, categoryId, refinerId, refinerSourceValue, );\n        return executeAction<ProductRefinerValue[]>(request, context);\n    }          \n          \n    export function createGetRefinerValuesByTextInput(queryResultSettings: IQueryResultSettings, catalogId: number, searchText: string | null, refinerId: number, refinerSourceValue: number): IDataServiceRequest {      \n        const query = productsQuery().resultSettings(queryResultSettings);\n        return query.createDataServiceRequestForOperation('GetRefinerValuesByText', false, ProductRefinerValueClass, 'true', { bypassCache: 'none', returnEntity: 'ProductRefinerValue'}, {catalogId: catalogId, searchText: searchText, refinerId: refinerId, refinerSourceValue: refinerSourceValue });\n    }    \n    \n    export function getRefinerValuesByTextAsync(context: IContext, catalogId: number, searchText: string | null, refinerId: number, refinerSourceValue: number):AsyncResult<ProductRefinerValue[]> {\n        const request = createGetRefinerValuesByTextInput(context.queryResultSettings, catalogId, searchText, refinerId, refinerSourceValue, );\n        return executeAction<ProductRefinerValue[]>(request, context);\n    }          \n          \n    export function createGetChannelProductAttributesInput(queryResultSettings: IQueryResultSettings): IDataServiceRequest {      \n        const query = productsQuery().resultSettings(queryResultSettings);\n        return query.createDataServiceRequestForOperation('GetChannelProductAttributes', false, AttributeProductClass, 'true', { bypassCache: 'none', returnEntity: 'AttributeProduct'}, { });\n    }    \n    \n    export function getChannelProductAttributesAsync(context: IContext):AsyncResult<AttributeProduct[]> {\n        const request = createGetChannelProductAttributesInput(context.queryResultSettings, );\n        return executeAction<AttributeProduct[]>(request, context);\n    }          \n          \n    export function createGetByIdInput(recordId: number, channelId: number): IDataServiceRequest {      \n        const query = productsQuery(recordId);\n        return query.createDataServiceRequestForOperation('GetById', false, SimpleProductClass, 'false', { bypassCache: 'none', returnEntity: 'SimpleProduct'}, {channelId: channelId });\n    }    \n    \n    export function getByIdAsync(context: IContext, recordId: number, channelId: number):AsyncResult<SimpleProduct> {\n        const request = createGetByIdInput(recordId, channelId, );\n        return executeAction<SimpleProduct>(request, context);\n    }          \n          \n    export function createGetAttributeValuesInput(queryResultSettings: IQueryResultSettings, recordId: number, channelId: number, catalogId: number): IDataServiceRequest {      \n        const query = productsQuery(recordId).resultSettings(queryResultSettings);\n        return query.createDataServiceRequestForOperation('GetAttributeValues', false, AttributeValueClass, 'true', { bypassCache: 'none', returnEntity: 'AttributeValue'}, {channelId: channelId, catalogId: catalogId });\n    }    \n    \n    export function getAttributeValuesAsync(context: IContext, recordId: number, channelId: number, catalogId: number):AsyncResult<AttributeValue[]> {\n        const request = createGetAttributeValuesInput(context.queryResultSettings, recordId, channelId, catalogId, );\n        return executeAction<AttributeValue[]>(request, context);\n    }          \n          \n    export function createGetMediaLocationsInput(queryResultSettings: IQueryResultSettings, recordId: number, channelId: number, catalogId: number): IDataServiceRequest {      \n        const query = productsQuery(recordId).resultSettings(queryResultSettings);\n        return query.createDataServiceRequestForOperation('GetMediaLocations', false, MediaLocationClass, 'true', { bypassCache: 'none', returnEntity: 'MediaLocation'}, {channelId: channelId, catalogId: catalogId });\n    }    \n    \n    export function getMediaLocationsAsync(context: IContext, recordId: number, channelId: number, catalogId: number):AsyncResult<MediaLocation[]> {\n        const request = createGetMediaLocationsInput(context.queryResultSettings, recordId, channelId, catalogId, );\n        return executeAction<MediaLocation[]>(request, context);\n    }          \n          \n    export function createGetMediaBlobsInput(queryResultSettings: IQueryResultSettings, recordId: number, channelId: number, catalogId: number): IDataServiceRequest {      \n        const query = productsQuery(recordId).resultSettings(queryResultSettings);\n        return query.createDataServiceRequestForOperation('GetMediaBlobs', false, MediaBlobClass, 'true', { bypassCache: 'none', returnEntity: 'MediaBlob'}, {channelId: channelId, catalogId: catalogId });\n    }    \n    \n    export function getMediaBlobsAsync(context: IContext, recordId: number, channelId: number, catalogId: number):AsyncResult<MediaBlob[]> {\n        const request = createGetMediaBlobsInput(context.queryResultSettings, recordId, channelId, catalogId, );\n        return executeAction<MediaBlob[]>(request, context);\n    }          \n          \n    export function createGetDefaultComponentsInput(queryResultSettings: IQueryResultSettings, recordId: number, channelId: number): IDataServiceRequest {      \n        const query = productsQuery(recordId).resultSettings(queryResultSettings);\n        return query.createDataServiceRequestForOperation('GetDefaultComponents', false, ProductComponentClass, 'true', { bypassCache: 'none', returnEntity: 'ProductComponent'}, {channelId: channelId });\n    }    \n    \n    export function getDefaultComponentsAsync(context: IContext, recordId: number, channelId: number):AsyncResult<ProductComponent[]> {\n        const request = createGetDefaultComponentsInput(context.queryResultSettings, recordId, channelId, );\n        return executeAction<ProductComponent[]>(request, context);\n    }          \n          \n    export function createGetSlotComponentsInput(queryResultSettings: IQueryResultSettings, recordId: number, channelId: number, slotId: number): IDataServiceRequest {      \n        const query = productsQuery(recordId).resultSettings(queryResultSettings);\n        return query.createDataServiceRequestForOperation('GetSlotComponents', false, ProductComponentClass, 'true', { bypassCache: 'none', returnEntity: 'ProductComponent'}, {channelId: channelId, slotId: slotId });\n    }    \n    \n    export function getSlotComponentsAsync(context: IContext, recordId: number, channelId: number, slotId: number):AsyncResult<ProductComponent[]> {\n        const request = createGetSlotComponentsInput(context.queryResultSettings, recordId, channelId, slotId, );\n        return executeAction<ProductComponent[]>(request, context);\n    }          \n          \n    export function createGetAllRelationTypesInput(queryResultSettings: IQueryResultSettings): IDataServiceRequest {      \n        const query = productsQuery().resultSettings(queryResultSettings);\n        return query.createDataServiceRequestForOperation('GetAllRelationTypes', false, ProductRelationTypeClass, 'true', { bypassCache: 'none', returnEntity: 'ProductRelationType'}, { });\n    }    \n    \n    export function getAllRelationTypesAsync(context: IContext):AsyncResult<ProductRelationType[]> {\n        const request = createGetAllRelationTypesInput(context.queryResultSettings, );\n        return executeAction<ProductRelationType[]>(request, context);\n    }          \n          \n    export function createGetRelationTypesInput(queryResultSettings: IQueryResultSettings, recordId: number, channelId: number, catalogId: number): IDataServiceRequest {      \n        const query = productsQuery(recordId).resultSettings(queryResultSettings);\n        return query.createDataServiceRequestForOperation('GetRelationTypes', false, ProductRelationTypeClass, 'true', { bypassCache: 'none', returnEntity: 'ProductRelationType'}, {channelId: channelId, catalogId: catalogId });\n    }    \n    \n    export function getRelationTypesAsync(context: IContext, recordId: number, channelId: number, catalogId: number):AsyncResult<ProductRelationType[]> {\n        const request = createGetRelationTypesInput(context.queryResultSettings, recordId, channelId, catalogId, );\n        return executeAction<ProductRelationType[]>(request, context);\n    }          \n          \n    export function createGetRelatedProductsInput(queryResultSettings: IQueryResultSettings, recordId: number, channelId: number, catalogId: number, relationTypeId: number): IDataServiceRequest {      \n        const query = productsQuery(recordId).resultSettings(queryResultSettings);\n        return query.createDataServiceRequestForOperation('GetRelatedProducts', false, ProductSearchResultClass, 'true', { bypassCache: 'none', returnEntity: 'ProductSearchResult'}, {channelId: channelId, catalogId: catalogId, relationTypeId: relationTypeId });\n    }    \n    \n    export function getRelatedProductsAsync(context: IContext, recordId: number, channelId: number, catalogId: number, relationTypeId: number):AsyncResult<ProductSearchResult[]> {\n        const request = createGetRelatedProductsInput(context.queryResultSettings, recordId, channelId, catalogId, relationTypeId, );\n        return executeAction<ProductSearchResult[]>(request, context);\n    }          \n          \n    export function createGetUnitsOfMeasureInput(queryResultSettings: IQueryResultSettings, recordId: number): IDataServiceRequest {      \n        const query = productsQuery(recordId).resultSettings(queryResultSettings);\n        return query.createDataServiceRequestForOperation('GetUnitsOfMeasure', false, UnitOfMeasureClass, 'true', { bypassCache: 'none', returnEntity: 'UnitOfMeasure'}, { });\n    }    \n    \n    export function getUnitsOfMeasureAsync(context: IContext, recordId: number):AsyncResult<UnitOfMeasure[]> {\n        const request = createGetUnitsOfMeasureInput(context.queryResultSettings, recordId, );\n        return executeAction<UnitOfMeasure[]>(request, context);\n    }          \n          \n    export function createGetApplicableWarrantiesInput(queryResultSettings: IQueryResultSettings, catalogId: number, warrantableProductIds: number[]): IDataServiceRequest {      \n        const query = productsQuery().resultSettings(queryResultSettings);\n        return query.createDataServiceRequestForOperation('GetApplicableWarranties', true, ProductWarrantiesMappingClass, 'true', { bypassCache: 'none', returnEntity: 'ProductWarrantiesMapping'}, {catalogId: catalogId, warrantableProductIds: warrantableProductIds });\n    }    \n    \n    export function getApplicableWarrantiesAsync(context: IContext, catalogId: number, warrantableProductIds: number[]):AsyncResult<ProductWarrantiesMapping[]> {\n        const request = createGetApplicableWarrantiesInput(context.queryResultSettings, catalogId, warrantableProductIds, );\n        return executeAction<ProductWarrantiesMapping[]>(request, context);\n    }          \n          \n    export function createGetPriceInput(recordId: number, customerAccountNumber: string | null, unitOfMeasureSymbol: string | null): IDataServiceRequest {      \n        const query = productsQuery(recordId);\n        return query.createDataServiceRequestForOperation('GetPrice', false, ProductPriceClass, 'false', { bypassCache: 'none', returnEntity: 'ProductPrice'}, {customerAccountNumber: customerAccountNumber, unitOfMeasureSymbol: unitOfMeasureSymbol });\n    }    \n    \n    export function getPriceAsync(context: IContext, recordId: number, customerAccountNumber: string | null, unitOfMeasureSymbol: string | null):AsyncResult<ProductPrice> {\n        const request = createGetPriceInput(recordId, customerAccountNumber, unitOfMeasureSymbol, );\n        return executeAction<ProductPrice>(request, context);\n    }          \n          \n    export function createCalculateProductPriceInput(recordId: number, customerAccountNumber: string | null, unitOfMeasureSymbol: string | null, loyaltyCardId: string | null, affiliationLoyaltyTiers: AffiliationLoyaltyTier[] | null): IDataServiceRequest {      \n        const query = productsQuery(recordId);\n        return query.createDataServiceRequestForOperation('CalculateProductPrice', true, ProductPriceClass, 'false', { bypassCache: 'get', returnEntity: 'ProductPrice'}, {customerAccountNumber: customerAccountNumber, unitOfMeasureSymbol: unitOfMeasureSymbol, loyaltyCardId: loyaltyCardId, affiliationLoyaltyTiers: affiliationLoyaltyTiers });\n    }    \n    \n    export function calculateProductPriceAsync(context: IContext, recordId: number, customerAccountNumber: string | null, unitOfMeasureSymbol: string | null, loyaltyCardId: string | null, affiliationLoyaltyTiers: AffiliationLoyaltyTier[] | null):AsyncResult<ProductPrice> {\n        const request = createCalculateProductPriceInput(recordId, customerAccountNumber, unitOfMeasureSymbol, loyaltyCardId, affiliationLoyaltyTiers, );\n        return executeAction<ProductPrice>(request, context);\n    }          \n          \n    export function createGetEstimatedProductWarehouseAvailabilityInput(productWarehouses: ProductWarehouse[] | null): IDataServiceRequest {      \n        const query = productsQuery();\n        return query.createDataServiceRequestForOperation('GetEstimatedProductWarehouseAvailability', true, ProductWarehouseInventoryInformationClass, 'false', { bypassCache: 'none', returnEntity: 'ProductWarehouseInventoryInformation'}, {productWarehouses: productWarehouses });\n    }    \n    \n    export function getEstimatedProductWarehouseAvailabilityAsync(context: IContext, productWarehouses: ProductWarehouse[] | null):AsyncResult<ProductWarehouseInventoryInformation> {\n        const request = createGetEstimatedProductWarehouseAvailabilityInput(productWarehouses, );\n        return executeAction<ProductWarehouseInventoryInformation>(request, context);\n    }          \n          \n    export function createGetEstimatedAvailabilityInput(searchCriteria: InventoryAvailabilitySearchCriteria | null): IDataServiceRequest {      \n        const query = productsQuery();\n        return query.createDataServiceRequestForOperation('GetEstimatedAvailability', true, ProductWarehouseInventoryInformationClass, 'false', { bypassCache: 'none', returnEntity: 'ProductWarehouseInventoryInformation'}, {searchCriteria: searchCriteria });\n    }    \n    \n    export function getEstimatedAvailabilityAsync(context: IContext, searchCriteria: InventoryAvailabilitySearchCriteria | null):AsyncResult<ProductWarehouseInventoryInformation> {\n        const request = createGetEstimatedAvailabilityInput(searchCriteria, );\n        return executeAction<ProductWarehouseInventoryInformation>(request, context);\n    }          \n          \n    "]}