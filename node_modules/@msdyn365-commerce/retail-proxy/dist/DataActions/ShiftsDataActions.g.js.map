{"version":3,"file":"ShiftsDataActions.g.js","sourceRoot":"","sources":["../../src/DataActions/ShiftsDataActions.g.ts"],"names":[],"mappings":"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","sourcesContent":["    // <auto-generated />\n    import { AsyncResult } from '../async-result';\n    import { DataServiceQuery } from '../DataServiceQuery';\n    import { Shift, SuspendedCart, ShiftTenderLine, ShiftRetrievalCriteria, Receipt } from '../Entities/CommerceTypes.g';\n    import { ShiftClass, SuspendedCartClass, ReceiptClass, ShiftTenderLineClass } from '../Entities/CommerceModels.g';\n    import { IContext, IDataServiceRequest, IQueryResultSettings, NullResult } from '../Interfaces';\n    import { executeAction } from '../retail-action';\n    \n    \n    function shiftsQuery(shiftId?: number, terminalId?: string): DataServiceQuery {\n      var key = (shiftId && terminalId) ? { ShiftId: shiftId, TerminalId: terminalId } : null;\n      return new DataServiceQuery(\"Shifts\", \"Shift\", ShiftClass, key);\n    }\n    \n    export function createCreateInput(entity: Shift): IDataServiceRequest {\n        return shiftsQuery().create(entity);\n    }\n    export function createShiftAsync(context: IContext, entity: Shift): AsyncResult<Shift> {\n        const request = createCreateInput(entity, );\n        return executeAction<Shift>(request, context);\n    }\n    export function createUpdateInput(entity: Shift): IDataServiceRequest {\n        return shiftsQuery(entity.ShiftId, entity.TerminalId).update(entity);\n    }\n    export function updateAsync(context: IContext, entity: Shift): AsyncResult<Shift> {\n        const request = createUpdateInput(entity, );\n        return executeAction<Shift>(request, context);\n    }\n    export function createDeleteAsync(entity: Shift): IDataServiceRequest {\n        return shiftsQuery(entity.ShiftId, entity.TerminalId).delete();\n    }\n    export function deleteAsync(context: IContext, entity: Shift): AsyncResult<NullResult> {\n        const request = createDeleteAsync(entity, );\n        return executeAction<NullResult>(request, context);\n    }\n    export function createReadAsync(shiftId: number, terminalId: string): IDataServiceRequest {\n        return shiftsQuery(shiftId, terminalId).read();\n    }\n    export function readAsync(context: IContext, shiftId: number, terminalId: string): AsyncResult<Shift> {\n        const request = createReadAsync(shiftId, terminalId, );\n        return executeAction<Shift>(request, context);\n    }\n    export function createReadAllAsync(queryResultSettings: IQueryResultSettings): IDataServiceRequest {\n        return shiftsQuery().resultSettings(queryResultSettings).read();\n    }\n    export function readAllAsync(context: IContext): AsyncResult<Shift[]> {\n        const request = createReadAllAsync(context.queryResultSettings, );\n        return executeAction<Shift[]>(request, context);\n    }\n    \n    export function createUpsertShiftsInput(shifts: Shift[] | null): IDataServiceRequest {      \n        const query = shiftsQuery();\n        return query.createDataServiceRequestForOperation('UpsertShifts', true, '', 'false', { bypassCache: 'get', returnEntity: ''}, {shifts: shifts });\n    }    \n    \n    export function upsertShiftsAsync(context: IContext, shifts: Shift[] | null):AsyncResult<boolean> {\n        const request = createUpsertShiftsInput(shifts, );\n        return executeAction<boolean>(request, context);\n    }          \n          \n    export function createUpsertAndValidateShiftsInput(shiftId: number | null, terminalId: string | null, shifts: Shift[] | null): IDataServiceRequest {      \n        const query = shiftsQuery();\n        return query.createDataServiceRequestForOperation('UpsertAndValidateShifts', true, '', 'false', { bypassCache: 'get', returnEntity: ''}, {shiftId: shiftId, terminalId: terminalId, shifts: shifts });\n    }    \n    \n    export function upsertAndValidateShiftsAsync(context: IContext, shiftId: number | null, terminalId: string | null, shifts: Shift[] | null):AsyncResult<boolean> {\n        const request = createUpsertAndValidateShiftsInput(shiftId, terminalId, shifts, );\n        return executeAction<boolean>(request, context);\n    }          \n          \n    export function createDeleteShiftsInput(): IDataServiceRequest {      \n        const query = shiftsQuery();\n        return query.createDataServiceRequestForOperation('DeleteShifts', true, '', 'false', { bypassCache: 'get', returnEntity: ''}, { });\n    }    \n    \n    export function deleteShiftsAsync(context: IContext):AsyncResult<boolean> {\n        const request = createDeleteShiftsInput();\n        return executeAction<boolean>(request, context);\n    }          \n          \n    export function createOpenInput(shiftId: number | null, cashDrawer: string | null, isShared: boolean): IDataServiceRequest {      \n        const query = shiftsQuery();\n        return query.createDataServiceRequestForOperation('Open', true, ShiftClass, 'false', { bypassCache: 'get', returnEntity: 'Shift'}, {shiftId: shiftId, cashDrawer: cashDrawer, isShared: isShared });\n    }    \n    \n    export function openAsync(context: IContext, shiftId: number | null, cashDrawer: string | null, isShared: boolean):AsyncResult<Shift> {\n        const request = createOpenInput(shiftId, cashDrawer, isShared, );\n        return executeAction<Shift>(request, context);\n    }          \n          \n    export function createCloseInput(shiftId: number, terminalId: string, transactionId: string | null, forceClose: boolean, hasOfflinePendingTransactions: boolean | null): IDataServiceRequest {      \n        const query = shiftsQuery(shiftId, terminalId);\n        return query.createDataServiceRequestForOperation('Close', true, ShiftClass, 'false', { bypassCache: 'get', returnEntity: 'Shift'}, {transactionId: transactionId, forceClose: forceClose, hasOfflinePendingTransactions: hasOfflinePendingTransactions });\n    }    \n    \n    export function closeAsync(context: IContext, shiftId: number, terminalId: string, transactionId: string | null, forceClose: boolean, hasOfflinePendingTransactions: boolean | null):AsyncResult<Shift> {\n        const request = createCloseInput(shiftId, terminalId, transactionId, forceClose, hasOfflinePendingTransactions, );\n        return executeAction<Shift>(request, context);\n    }          \n          \n    export function createGetSuspendedCartsByShiftInput(queryResultSettings: IQueryResultSettings, shiftTerminalId: string | null, shiftId: number): IDataServiceRequest {      \n        const query = shiftsQuery().resultSettings(queryResultSettings);\n        return query.createDataServiceRequestForOperation('GetSuspendedCartsByShift', true, SuspendedCartClass, 'true', { bypassCache: 'none', returnEntity: 'SuspendedCart'}, {shiftTerminalId: shiftTerminalId, shiftId: shiftId });\n    }    \n    \n    export function getSuspendedCartsByShiftAsync(context: IContext, shiftTerminalId: string | null, shiftId: number):AsyncResult<SuspendedCart[]> {\n        const request = createGetSuspendedCartsByShiftInput(context.queryResultSettings, shiftTerminalId, shiftId, );\n        return executeAction<SuspendedCart[]>(request, context);\n    }          \n          \n    export function createVoidSuspendedCartsInput(shiftId: number, terminalId: string): IDataServiceRequest {      \n        const query = shiftsQuery(shiftId, terminalId);\n        return query.createDataServiceRequestForOperation('VoidSuspendedCarts', true, '', '', { bypassCache: 'get', returnEntity: ''}, { });\n    }    \n    \n    export function voidSuspendedCartsAsync(context: IContext, shiftId: number, terminalId: string):AsyncResult<NullResult> {\n        const request = createVoidSuspendedCartsInput(shiftId, terminalId, );\n        return executeAction<NullResult>(request, context);\n    }          \n          \n    export function createSaveTenderLinesInput(shiftId: number, terminalId: string, tenderLines: ShiftTenderLine[] | null): IDataServiceRequest {      \n        const query = shiftsQuery(shiftId, terminalId);\n        return query.createDataServiceRequestForOperation('SaveTenderLines', true, '', '', { bypassCache: 'get', returnEntity: ''}, {tenderLines: tenderLines });\n    }    \n    \n    export function saveTenderLinesAsync(context: IContext, shiftId: number, terminalId: string, tenderLines: ShiftTenderLine[] | null):AsyncResult<NullResult> {\n        const request = createSaveTenderLinesInput(shiftId, terminalId, tenderLines, );\n        return executeAction<NullResult>(request, context);\n    }          \n          \n    export function createBlindCloseInput(shiftId: number, terminalId: string, transactionId: string | null, forceClose: boolean): IDataServiceRequest {      \n        const query = shiftsQuery(shiftId, terminalId);\n        return query.createDataServiceRequestForOperation('BlindClose', true, ShiftClass, 'false', { bypassCache: 'get', returnEntity: 'Shift'}, {transactionId: transactionId, forceClose: forceClose });\n    }    \n    \n    export function blindCloseAsync(context: IContext, shiftId: number, terminalId: string, transactionId: string | null, forceClose: boolean):AsyncResult<Shift> {\n        const request = createBlindCloseInput(shiftId, terminalId, transactionId, forceClose, );\n        return executeAction<Shift>(request, context);\n    }          \n          \n    export function createForceDeleteInput(shiftId: number, terminalId: string, transactionId: string | null): IDataServiceRequest {      \n        const query = shiftsQuery(shiftId, terminalId);\n        return query.createDataServiceRequestForOperation('ForceDelete', true, '', '', { bypassCache: 'get', returnEntity: ''}, {transactionId: transactionId });\n    }    \n    \n    export function forceDeleteAsync(context: IContext, shiftId: number, terminalId: string, transactionId: string | null):AsyncResult<NullResult> {\n        const request = createForceDeleteInput(shiftId, terminalId, transactionId, );\n        return executeAction<NullResult>(request, context);\n    }          \n          \n    export function createResumeInput(shiftId: number, terminalId: string, cashDrawer: string | null): IDataServiceRequest {      \n        const query = shiftsQuery(shiftId, terminalId);\n        return query.createDataServiceRequestForOperation('Resume', true, ShiftClass, 'false', { bypassCache: 'get', returnEntity: 'Shift'}, {cashDrawer: cashDrawer });\n    }    \n    \n    export function resumeAsync(context: IContext, shiftId: number, terminalId: string, cashDrawer: string | null):AsyncResult<Shift> {\n        const request = createResumeInput(shiftId, terminalId, cashDrawer, );\n        return executeAction<Shift>(request, context);\n    }          \n          \n    export function createUseInput(shiftId: number, terminalId: string): IDataServiceRequest {      \n        const query = shiftsQuery(shiftId, terminalId);\n        return query.createDataServiceRequestForOperation('Use', true, ShiftClass, 'false', { bypassCache: 'get', returnEntity: 'Shift'}, { });\n    }    \n    \n    export function useAsync(context: IContext, shiftId: number, terminalId: string):AsyncResult<Shift> {\n        const request = createUseInput(shiftId, terminalId, );\n        return executeAction<Shift>(request, context);\n    }          \n          \n    export function createSuspendInput(shiftId: number, terminalId: string, transactionId: string | null): IDataServiceRequest {      \n        const query = shiftsQuery(shiftId, terminalId);\n        return query.createDataServiceRequestForOperation('Suspend', true, ShiftClass, 'false', { bypassCache: 'get', returnEntity: 'Shift'}, {transactionId: transactionId });\n    }    \n    \n    export function suspendAsync(context: IContext, shiftId: number, terminalId: string, transactionId: string | null):AsyncResult<Shift> {\n        const request = createSuspendInput(shiftId, terminalId, transactionId, );\n        return executeAction<Shift>(request, context);\n    }          \n          \n    export function createGetByStatusInput(queryResultSettings: IQueryResultSettings, statusValue: number): IDataServiceRequest {      \n        const query = shiftsQuery().resultSettings(queryResultSettings);\n        return query.createDataServiceRequestForOperation('GetByStatus', false, ShiftClass, 'true', { bypassCache: 'none', returnEntity: 'Shift'}, {statusValue: statusValue });\n    }    \n    \n    export function getByStatusAsync(context: IContext, statusValue: number):AsyncResult<Shift[]> {\n        const request = createGetByStatusInput(context.queryResultSettings, statusValue, );\n        return executeAction<Shift[]>(request, context);\n    }          \n          \n    export function createGetByStatusFilterByUserRoleInput(queryResultSettings: IQueryResultSettings, statusValue: number, filterByUserRole: boolean): IDataServiceRequest {      \n        const query = shiftsQuery().resultSettings(queryResultSettings);\n        return query.createDataServiceRequestForOperation('GetByStatusFilterByUserRole', false, ShiftClass, 'true', { bypassCache: 'none', returnEntity: 'Shift'}, {statusValue: statusValue, filterByUserRole: filterByUserRole });\n    }    \n    \n    export function getByStatusFilterByUserRoleAsync(context: IContext, statusValue: number, filterByUserRole: boolean):AsyncResult<Shift[]> {\n        const request = createGetByStatusFilterByUserRoleInput(context.queryResultSettings, statusValue, filterByUserRole, );\n        return executeAction<Shift[]>(request, context);\n    }          \n          \n    export function createGetByRetrievalCriteriaInput(queryResultSettings: IQueryResultSettings, shiftRetrievalCriteria: ShiftRetrievalCriteria | null): IDataServiceRequest {      \n        const query = shiftsQuery().resultSettings(queryResultSettings);\n        return query.createDataServiceRequestForOperation('GetByRetrievalCriteria', true, ShiftClass, 'true', { bypassCache: 'none', returnEntity: 'Shift'}, {shiftRetrievalCriteria: shiftRetrievalCriteria });\n    }    \n    \n    export function getByRetrievalCriteriaAsync(context: IContext, shiftRetrievalCriteria: ShiftRetrievalCriteria | null):AsyncResult<Shift[]> {\n        const request = createGetByRetrievalCriteriaInput(context.queryResultSettings, shiftRetrievalCriteria, );\n        return executeAction<Shift[]>(request, context);\n    }          \n          \n    export function createGetXReportInput(shiftId: number, terminalId: string, transactionId: string | null, hardwareProfileId: string | null): IDataServiceRequest {      \n        const query = shiftsQuery(shiftId, terminalId);\n        return query.createDataServiceRequestForOperation('GetXReport', false, ReceiptClass, 'false', { bypassCache: 'none', returnEntity: 'Receipt'}, {transactionId: transactionId, hardwareProfileId: hardwareProfileId });\n    }    \n    \n    export function getXReportAsync(context: IContext, shiftId: number, terminalId: string, transactionId: string | null, hardwareProfileId: string | null):AsyncResult<Receipt> {\n        const request = createGetXReportInput(shiftId, terminalId, transactionId, hardwareProfileId, );\n        return executeAction<Receipt>(request, context);\n    }          \n          \n    export function createGetZReportInput(transactionId: string | null, hardwareProfileId: string | null): IDataServiceRequest {      \n        const query = shiftsQuery();\n        return query.createDataServiceRequestForOperation('GetZReport', false, ReceiptClass, 'false', { bypassCache: 'none', returnEntity: 'Receipt'}, {transactionId: transactionId, hardwareProfileId: hardwareProfileId });\n    }    \n    \n    export function getZReportAsync(context: IContext, transactionId: string | null, hardwareProfileId: string | null):AsyncResult<Receipt> {\n        const request = createGetZReportInput(transactionId, hardwareProfileId, );\n        return executeAction<Receipt>(request, context);\n    }          \n          \n    export function createGetOpenTenderLinesInput(queryResultSettings: IQueryResultSettings, shiftId: number, terminalId: string): IDataServiceRequest {      \n        const query = shiftsQuery(shiftId, terminalId).resultSettings(queryResultSettings);\n        return query.createDataServiceRequestForOperation('GetOpenTenderLines', false, ShiftTenderLineClass, 'true', { bypassCache: 'none', returnEntity: 'ShiftTenderLine'}, { });\n    }    \n    \n    export function getOpenTenderLinesAsync(context: IContext, shiftId: number, terminalId: string):AsyncResult<ShiftTenderLine[]> {\n        const request = createGetOpenTenderLinesInput(context.queryResultSettings, shiftId, terminalId, );\n        return executeAction<ShiftTenderLine[]>(request, context);\n    }          \n          \n    export function createValidateCashDrawerLimitInput(shiftTerminalId: string | null, shiftId: number): IDataServiceRequest {      \n        const query = shiftsQuery();\n        return query.createDataServiceRequestForOperation('ValidateCashDrawerLimit', true, '', '', { bypassCache: 'get', returnEntity: ''}, {shiftTerminalId: shiftTerminalId, shiftId: shiftId });\n    }    \n    \n    export function validateCashDrawerLimitAsync(context: IContext, shiftTerminalId: string | null, shiftId: number):AsyncResult<NullResult> {\n        const request = createValidateCashDrawerLimitInput(shiftTerminalId, shiftId, );\n        return executeAction<NullResult>(request, context);\n    }          \n          \n    "]}