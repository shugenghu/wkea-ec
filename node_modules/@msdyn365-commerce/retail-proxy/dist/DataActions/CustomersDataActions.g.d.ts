import { AsyncResult } from '../async-result';
import { Customer, CustomerSearchCriteria, GlobalCustomer, CustomerSearchByFieldCriteria, CustomerTimelineItem, SalesOrder, OrderShipments, PurchaseHistory, CustomerSearchField, CustomerTimelineItemTypeMap, CustomerTimelineRefiner, CustomerTitle } from '../Entities/CommerceTypes.g';
import { IContext, IDataServiceRequest, IQueryResultSettings, NullResult } from '../Interfaces';
export declare function createCreateInput(entity: Customer): IDataServiceRequest;
export declare function createCustomerAsync(context: IContext, entity: Customer): AsyncResult<Customer>;
export declare function createUpdateInput(entity: Customer): IDataServiceRequest;
export declare function updateAsync(context: IContext, entity: Customer): AsyncResult<Customer>;
export declare function createDeleteAsync(entity: Customer): IDataServiceRequest;
export declare function deleteAsync(context: IContext, entity: Customer): AsyncResult<NullResult>;
export declare function createReadAsync(accountNumber: string): IDataServiceRequest;
export declare function readAsync(context: IContext, accountNumber: string): AsyncResult<Customer>;
export declare function createReadAllAsync(queryResultSettings: IQueryResultSettings): IDataServiceRequest;
export declare function readAllAsync(context: IContext): AsyncResult<Customer[]>;
export declare function createSearchInput(queryResultSettings: IQueryResultSettings, customerSearchCriteria: CustomerSearchCriteria | null): IDataServiceRequest;
export declare function searchAsync(context: IContext, customerSearchCriteria: CustomerSearchCriteria | null): AsyncResult<GlobalCustomer[]>;
export declare function createSearchByFieldsInput(queryResultSettings: IQueryResultSettings, customerSearchByFieldCriteria: CustomerSearchByFieldCriteria | null): IDataServiceRequest;
export declare function searchByFieldsAsync(context: IContext, customerSearchByFieldCriteria: CustomerSearchByFieldCriteria | null): AsyncResult<GlobalCustomer[]>;
export declare function createGetByAccountNumbersInput(queryResultSettings: IQueryResultSettings, accountNumbers: string[] | null, searchLocationValue: number): IDataServiceRequest;
export declare function getByAccountNumbersAsync(context: IContext, accountNumbers: string[] | null, searchLocationValue: number): AsyncResult<Customer[]>;
export declare function createCreateCustomerTimelineItemInput(customerTimelineItem: CustomerTimelineItem | null): IDataServiceRequest;
export declare function createCustomerTimelineItemAsync(context: IContext, customerTimelineItem: CustomerTimelineItem | null): AsyncResult<CustomerTimelineItem>;
export declare function createUpdateCustomerTimelineItemInput(customerTimelineItem: CustomerTimelineItem | null): IDataServiceRequest;
export declare function updateCustomerTimelineItemAsync(context: IContext, customerTimelineItem: CustomerTimelineItem | null): AsyncResult<CustomerTimelineItem>;
export declare function createGetOrderHistoryInput(queryResultSettings: IQueryResultSettings, accountNumber: string): IDataServiceRequest;
export declare function getOrderHistoryAsync(context: IContext, accountNumber: string): AsyncResult<SalesOrder[]>;
export declare function createGetOrderShipmentsHistoryInput(queryResultSettings: IQueryResultSettings, accountNumber: string): IDataServiceRequest;
export declare function getOrderShipmentsHistoryAsync(context: IContext, accountNumber: string): AsyncResult<OrderShipments[]>;
export declare function createPostNonTransactionalActivityLoyaltyPointsInput(loyaltyCardId: string | null, channelId: number, affiliationId: number, activityTypeId: string | null): IDataServiceRequest;
export declare function postNonTransactionalActivityLoyaltyPointsAsync(context: IContext, loyaltyCardId: string | null, channelId: number, affiliationId: number, activityTypeId: string | null): AsyncResult<NullResult>;
export declare function createGetPurchaseHistoryInput(queryResultSettings: IQueryResultSettings, accountNumber: string): IDataServiceRequest;
export declare function getPurchaseHistoryAsync(context: IContext, accountNumber: string): AsyncResult<PurchaseHistory[]>;
export declare function createGetCustomerSearchFieldsInput(queryResultSettings: IQueryResultSettings): IDataServiceRequest;
export declare function getCustomerSearchFieldsAsync(context: IContext): AsyncResult<CustomerSearchField[]>;
export declare function createGetCustomerTimelineItemTypesInput(queryResultSettings: IQueryResultSettings): IDataServiceRequest;
export declare function getCustomerTimelineItemTypesAsync(context: IContext): AsyncResult<CustomerTimelineItemTypeMap[]>;
export declare function createGetCustomerTimelineItemsInput(queryResultSettings: IQueryResultSettings, accountNumber: string): IDataServiceRequest;
export declare function getCustomerTimelineItemsAsync(context: IContext, accountNumber: string): AsyncResult<CustomerTimelineItem[]>;
export declare function createGetCustomerTimelineRefinersInput(queryResultSettings: IQueryResultSettings, accountNumber: string): IDataServiceRequest;
export declare function getCustomerTimelineRefinersAsync(context: IContext, accountNumber: string): AsyncResult<CustomerTimelineRefiner[]>;
export declare function createGetTitlesInput(queryResultSettings: IQueryResultSettings): IDataServiceRequest;
export declare function getTitlesAsync(context: IContext): AsyncResult<CustomerTitle[]>;
