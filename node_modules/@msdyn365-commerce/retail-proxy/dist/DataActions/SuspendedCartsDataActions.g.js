import { DataServiceQuery } from '../DataServiceQuery';
import { SuspendedCartClass } from '../Entities/CommerceModels.g';
import { executeAction } from '../retail-action';
function suspendedCartsQuery(id) {
    var key = (id) ? { Id: id } : null;
    return new DataServiceQuery("SuspendedCarts", "SuspendedCart", SuspendedCartClass, key);
}
export function createCreateInput(entity) {
    return suspendedCartsQuery().create(entity);
}
export function createSuspendedCartAsync(context, entity) {
    const request = createCreateInput(entity);
    return executeAction(request, context);
}
export function createUpdateInput(entity) {
    return suspendedCartsQuery(entity.Id).update(entity);
}
export function updateAsync(context, entity) {
    const request = createUpdateInput(entity);
    return executeAction(request, context);
}
export function createDeleteAsync(entity) {
    return suspendedCartsQuery(entity.Id).delete();
}
export function deleteAsync(context, entity) {
    const request = createDeleteAsync(entity);
    return executeAction(request, context);
}
export function createReadAsync(id) {
    return suspendedCartsQuery(id).read();
}
export function readAsync(context, id) {
    const request = createReadAsync(id);
    return executeAction(request, context);
}
export function createReadAllAsync(queryResultSettings) {
    return suspendedCartsQuery().resultSettings(queryResultSettings).read();
}
export function readAllAsync(context) {
    const request = createReadAllAsync(context.queryResultSettings);
    return executeAction(request, context);
}
export function createGetAllSuspendedCartsInput(queryResultSettings) {
    const query = suspendedCartsQuery().resultSettings(queryResultSettings);
    return query.createDataServiceRequestForOperation('GetAllSuspendedCarts', true, SuspendedCartClass, 'true', { bypassCache: 'none', returnEntity: 'SuspendedCart' }, {});
}
export function getAllSuspendedCartsAsync(context) {
    const request = createGetAllSuspendedCartsInput(context.queryResultSettings);
    return executeAction(request, context);
}
//# sourceMappingURL=SuspendedCartsDataActions.g.js.map