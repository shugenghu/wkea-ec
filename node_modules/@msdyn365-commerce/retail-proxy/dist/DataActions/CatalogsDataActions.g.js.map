{"version":3,"file":"CatalogsDataActions.g.js","sourceRoot":"","sources":["../../src/DataActions/CatalogsDataActions.g.ts"],"names":[],"mappings":"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","sourcesContent":["    // <auto-generated />\n    import { AsyncResult } from '../async-result';\n    import { DataServiceQuery } from '../DataServiceQuery';\n    import { ProductCatalog } from '../Entities/CommerceTypes.g';\n    import { ProductCatalogClass } from '../Entities/CommerceModels.g';\n    import { IContext, IDataServiceRequest, IQueryResultSettings, NullResult } from '../Interfaces';\n    import { executeAction } from '../retail-action';\n    \n    \n    function catalogsQuery(recordId?: number): DataServiceQuery {\n      var key = (recordId) ? { RecordId: recordId } : null;\n      return new DataServiceQuery(\"Catalogs\", \"ProductCatalog\", ProductCatalogClass, key);\n    }\n    \n    export function createCreateInput(entity: ProductCatalog): IDataServiceRequest {\n        return catalogsQuery().create(entity);\n    }\n    export function createProductCatalogAsync(context: IContext, entity: ProductCatalog): AsyncResult<ProductCatalog> {\n        const request = createCreateInput(entity, );\n        return executeAction<ProductCatalog>(request, context);\n    }\n    export function createUpdateInput(entity: ProductCatalog): IDataServiceRequest {\n        return catalogsQuery(entity.RecordId).update(entity);\n    }\n    export function updateAsync(context: IContext, entity: ProductCatalog): AsyncResult<ProductCatalog> {\n        const request = createUpdateInput(entity, );\n        return executeAction<ProductCatalog>(request, context);\n    }\n    export function createDeleteAsync(entity: ProductCatalog): IDataServiceRequest {\n        return catalogsQuery(entity.RecordId).delete();\n    }\n    export function deleteAsync(context: IContext, entity: ProductCatalog): AsyncResult<NullResult> {\n        const request = createDeleteAsync(entity, );\n        return executeAction<NullResult>(request, context);\n    }\n    export function createReadAsync(recordId: number): IDataServiceRequest {\n        return catalogsQuery(recordId).read();\n    }\n    export function readAsync(context: IContext, recordId: number): AsyncResult<ProductCatalog> {\n        const request = createReadAsync(recordId, );\n        return executeAction<ProductCatalog>(request, context);\n    }\n    export function createReadAllAsync(queryResultSettings: IQueryResultSettings): IDataServiceRequest {\n        return catalogsQuery().resultSettings(queryResultSettings).read();\n    }\n    export function readAllAsync(context: IContext): AsyncResult<ProductCatalog[]> {\n        const request = createReadAllAsync(context.queryResultSettings, );\n        return executeAction<ProductCatalog[]>(request, context);\n    }\n    \n    export function createGetCatalogsInput(queryResultSettings: IQueryResultSettings, channelId: number, activeOnly: boolean): IDataServiceRequest {      \n        const query = catalogsQuery().resultSettings(queryResultSettings);\n        return query.createDataServiceRequestForOperation('GetCatalogs', true, ProductCatalogClass, 'true', { bypassCache: 'none', returnEntity: 'ProductCatalog'}, {channelId: channelId, activeOnly: activeOnly });\n    }    \n    \n    export function getCatalogsAsync(context: IContext, channelId: number, activeOnly: boolean):AsyncResult<ProductCatalog[]> {\n        const request = createGetCatalogsInput(context.queryResultSettings, channelId, activeOnly, );\n        return executeAction<ProductCatalog[]>(request, context);\n    }          \n          \n    "]}