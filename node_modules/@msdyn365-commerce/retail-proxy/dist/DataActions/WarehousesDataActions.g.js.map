{"version":3,"file":"WarehousesDataActions.g.js","sourceRoot":"","sources":["../../src/DataActions/WarehousesDataActions.g.ts"],"names":[],"mappings":"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","sourcesContent":["    // <auto-generated />\n    import { AsyncResult } from '../async-result';\n    import { DataServiceQuery } from '../DataServiceQuery';\n    import { Warehouse, WarehouseLocationSearchCriteria, WarehouseLocation } from '../Entities/CommerceTypes.g';\n    import { WarehouseClass, WarehouseLocationClass } from '../Entities/CommerceModels.g';\n    import { IContext, IDataServiceRequest, IQueryResultSettings, NullResult } from '../Interfaces';\n    import { executeAction } from '../retail-action';\n    \n    \n    function warehousesQuery(inventLocation?: string): DataServiceQuery {\n      var key = (inventLocation) ? { InventLocation: inventLocation } : null;\n      return new DataServiceQuery(\"Warehouses\", \"Warehouse\", WarehouseClass, key);\n    }\n    \n    export function createCreateInput(entity: Warehouse): IDataServiceRequest {\n        return warehousesQuery().create(entity);\n    }\n    export function createWarehouseAsync(context: IContext, entity: Warehouse): AsyncResult<Warehouse> {\n        const request = createCreateInput(entity, );\n        return executeAction<Warehouse>(request, context);\n    }\n    export function createUpdateInput(entity: Warehouse): IDataServiceRequest {\n        return warehousesQuery(entity.InventLocation).update(entity);\n    }\n    export function updateAsync(context: IContext, entity: Warehouse): AsyncResult<Warehouse> {\n        const request = createUpdateInput(entity, );\n        return executeAction<Warehouse>(request, context);\n    }\n    export function createDeleteAsync(entity: Warehouse): IDataServiceRequest {\n        return warehousesQuery(entity.InventLocation).delete();\n    }\n    export function deleteAsync(context: IContext, entity: Warehouse): AsyncResult<NullResult> {\n        const request = createDeleteAsync(entity, );\n        return executeAction<NullResult>(request, context);\n    }\n    export function createReadAsync(inventLocation: string): IDataServiceRequest {\n        return warehousesQuery(inventLocation).read();\n    }\n    export function readAsync(context: IContext, inventLocation: string): AsyncResult<Warehouse> {\n        const request = createReadAsync(inventLocation, );\n        return executeAction<Warehouse>(request, context);\n    }\n    export function createReadAllAsync(queryResultSettings: IQueryResultSettings): IDataServiceRequest {\n        return warehousesQuery().resultSettings(queryResultSettings).read();\n    }\n    export function readAllAsync(context: IContext): AsyncResult<Warehouse[]> {\n        const request = createReadAllAsync(context.queryResultSettings, );\n        return executeAction<Warehouse[]>(request, context);\n    }\n    \n    export function createSearchWarehouseLocationsAsyncInput(queryResultSettings: IQueryResultSettings, searchCriteria: WarehouseLocationSearchCriteria | null): IDataServiceRequest {      \n        const query = warehousesQuery().resultSettings(queryResultSettings);\n        return query.createDataServiceRequestForOperation('SearchWarehouseLocationsAsync', true, WarehouseLocationClass, 'true', { bypassCache: 'none', returnEntity: 'WarehouseLocation'}, {searchCriteria: searchCriteria });\n    }    \n    \n    export function searchWarehouseLocationsAsyncAsync(context: IContext, searchCriteria: WarehouseLocationSearchCriteria | null):AsyncResult<WarehouseLocation[]> {\n        const request = createSearchWarehouseLocationsAsyncInput(context.queryResultSettings, searchCriteria, );\n        return executeAction<WarehouseLocation[]>(request, context);\n    }          \n          \n    export function createGetWarehouseByIdInput(inventLocation: string): IDataServiceRequest {      \n        const query = warehousesQuery(inventLocation);\n        return query.createDataServiceRequestForOperation('GetWarehouseById', false, WarehouseClass, 'false', { bypassCache: 'none', returnEntity: 'Warehouse'}, { });\n    }    \n    \n    export function getWarehouseByIdAsync(context: IContext, inventLocation: string):AsyncResult<Warehouse> {\n        const request = createGetWarehouseByIdInput(inventLocation, );\n        return executeAction<Warehouse>(request, context);\n    }          \n          \n    export function createSearchWarehousesInput(queryResultSettings: IQueryResultSettings, searchText: string | null): IDataServiceRequest {      \n        const query = warehousesQuery().resultSettings(queryResultSettings);\n        return query.createDataServiceRequestForOperation('SearchWarehouses', false, WarehouseClass, 'true', { bypassCache: 'none', returnEntity: 'Warehouse'}, {searchText: searchText });\n    }    \n    \n    export function searchWarehousesAsync(context: IContext, searchText: string | null):AsyncResult<Warehouse[]> {\n        const request = createSearchWarehousesInput(context.queryResultSettings, searchText, );\n        return executeAction<Warehouse[]>(request, context);\n    }          \n          \n    export function createGetLocationsInput(queryResultSettings: IQueryResultSettings, inventLocation: string): IDataServiceRequest {      \n        const query = warehousesQuery(inventLocation).resultSettings(queryResultSettings);\n        return query.createDataServiceRequestForOperation('GetLocations', false, WarehouseLocationClass, 'true', { bypassCache: 'none', returnEntity: 'WarehouseLocation'}, { });\n    }    \n    \n    export function getLocationsAsync(context: IContext, inventLocation: string):AsyncResult<WarehouseLocation[]> {\n        const request = createGetLocationsInput(context.queryResultSettings, inventLocation, );\n        return executeAction<WarehouseLocation[]>(request, context);\n    }          \n          \n    export function createSearchLocationsInput(queryResultSettings: IQueryResultSettings, inventLocation: string, searchText: string | null): IDataServiceRequest {      \n        const query = warehousesQuery(inventLocation).resultSettings(queryResultSettings);\n        return query.createDataServiceRequestForOperation('SearchLocations', false, WarehouseLocationClass, 'true', { bypassCache: 'none', returnEntity: 'WarehouseLocation'}, {searchText: searchText });\n    }    \n    \n    export function searchLocationsAsync(context: IContext, inventLocation: string, searchText: string | null):AsyncResult<WarehouseLocation[]> {\n        const request = createSearchLocationsInput(context.queryResultSettings, inventLocation, searchText, );\n        return executeAction<WarehouseLocation[]>(request, context);\n    }          \n          \n    export function createGetAvailableFulfillmentLocationsInput(queryResultSettings: IQueryResultSettings, deliveryModeTypeFilter: number): IDataServiceRequest {      \n        const query = warehousesQuery().resultSettings(queryResultSettings);\n        return query.createDataServiceRequestForOperation('GetAvailableFulfillmentLocations', false, WarehouseClass, 'true', { bypassCache: 'none', returnEntity: 'Warehouse'}, {deliveryModeTypeFilter: deliveryModeTypeFilter });\n    }    \n    \n    export function getAvailableFulfillmentLocationsAsync(context: IContext, deliveryModeTypeFilter: number):AsyncResult<Warehouse[]> {\n        const request = createGetAvailableFulfillmentLocationsInput(context.queryResultSettings, deliveryModeTypeFilter, );\n        return executeAction<Warehouse[]>(request, context);\n    }          \n          \n    "]}