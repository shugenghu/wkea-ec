{"version":3,"file":"ApplicableOperationsDataActions.g.js","sourceRoot":"","sources":["../../src/DataActions/ApplicableOperationsDataActions.g.ts"],"names":[],"mappings":"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","sourcesContent":["    // <auto-generated />\n    import { AsyncResult } from '../async-result';\n    import { DataServiceQuery } from '../DataServiceQuery';\n    import { SalesOrderContextualOperationsMap, OrderSearchCriteria, FulfillmentLineSearchCriteria, FulfillmentLineContextualOperationsMap } from '../Entities/CommerceTypes.g';\n    import { SalesOrderContextualOperationsMapClass, FulfillmentLineContextualOperationsMapClass } from '../Entities/CommerceModels.g';\n    import { IContext, IDataServiceRequest, IQueryResultSettings, NullResult } from '../Interfaces';\n    import { executeAction } from '../retail-action';\n    \n    \n    function applicableOperationsQuery(id?: string): DataServiceQuery {\n      var key = (id) ? { Id: id } : null;\n      return new DataServiceQuery(\"ApplicableOperations\", \"SalesOrderContextualOperationsMap\", SalesOrderContextualOperationsMapClass, key);\n    }\n    \n    export function createCreateInput(entity: SalesOrderContextualOperationsMap): IDataServiceRequest {\n        return applicableOperationsQuery().create(entity);\n    }\n    export function createSalesOrderContextualOperationsMapAsync(context: IContext, entity: SalesOrderContextualOperationsMap): AsyncResult<SalesOrderContextualOperationsMap> {\n        const request = createCreateInput(entity, );\n        return executeAction<SalesOrderContextualOperationsMap>(request, context);\n    }\n    export function createUpdateInput(entity: SalesOrderContextualOperationsMap): IDataServiceRequest {\n        return applicableOperationsQuery(entity.Id).update(entity);\n    }\n    export function updateAsync(context: IContext, entity: SalesOrderContextualOperationsMap): AsyncResult<SalesOrderContextualOperationsMap> {\n        const request = createUpdateInput(entity, );\n        return executeAction<SalesOrderContextualOperationsMap>(request, context);\n    }\n    export function createDeleteAsync(entity: SalesOrderContextualOperationsMap): IDataServiceRequest {\n        return applicableOperationsQuery(entity.Id).delete();\n    }\n    export function deleteAsync(context: IContext, entity: SalesOrderContextualOperationsMap): AsyncResult<NullResult> {\n        const request = createDeleteAsync(entity, );\n        return executeAction<NullResult>(request, context);\n    }\n    export function createReadAsync(id: string): IDataServiceRequest {\n        return applicableOperationsQuery(id).read();\n    }\n    export function readAsync(context: IContext, id: string): AsyncResult<SalesOrderContextualOperationsMap> {\n        const request = createReadAsync(id, );\n        return executeAction<SalesOrderContextualOperationsMap>(request, context);\n    }\n    export function createReadAllAsync(queryResultSettings: IQueryResultSettings): IDataServiceRequest {\n        return applicableOperationsQuery().resultSettings(queryResultSettings).read();\n    }\n    export function readAllAsync(context: IContext): AsyncResult<SalesOrderContextualOperationsMap[]> {\n        const request = createReadAllAsync(context.queryResultSettings, );\n        return executeAction<SalesOrderContextualOperationsMap[]>(request, context);\n    }\n    \n    export function createGetOrdersInput(queryResultSettings: IQueryResultSettings, orderSearchCriteria: OrderSearchCriteria | null): IDataServiceRequest {      \n        const query = applicableOperationsQuery().resultSettings(queryResultSettings);\n        return query.createDataServiceRequestForOperation('GetOrders', true, SalesOrderContextualOperationsMapClass, 'true', { bypassCache: 'none', returnEntity: 'SalesOrderContextualOperationsMap'}, {orderSearchCriteria: orderSearchCriteria });\n    }    \n    \n    export function getOrdersAsync(context: IContext, orderSearchCriteria: OrderSearchCriteria | null):AsyncResult<SalesOrderContextualOperationsMap[]> {\n        const request = createGetOrdersInput(context.queryResultSettings, orderSearchCriteria, );\n        return executeAction<SalesOrderContextualOperationsMap[]>(request, context);\n    }          \n          \n    export function createGetFulfillmentLinesInput(queryResultSettings: IQueryResultSettings, fulfillmentLineSearchCriteria: FulfillmentLineSearchCriteria | null): IDataServiceRequest {      \n        const query = applicableOperationsQuery().resultSettings(queryResultSettings);\n        return query.createDataServiceRequestForOperation('GetFulfillmentLines', true, FulfillmentLineContextualOperationsMapClass, 'true', { bypassCache: 'none', returnEntity: 'FulfillmentLineContextualOperationsMap'}, {fulfillmentLineSearchCriteria: fulfillmentLineSearchCriteria });\n    }    \n    \n    export function getFulfillmentLinesAsync(context: IContext, fulfillmentLineSearchCriteria: FulfillmentLineSearchCriteria | null):AsyncResult<FulfillmentLineContextualOperationsMap[]> {\n        const request = createGetFulfillmentLinesInput(context.queryResultSettings, fulfillmentLineSearchCriteria, );\n        return executeAction<FulfillmentLineContextualOperationsMap[]>(request, context);\n    }          \n          \n    "]}