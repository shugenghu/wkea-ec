import { AsyncResult } from '../async-result';
import { BusinessPartnerUser } from '../Entities/CommerceTypes.g';
import { IContext, IDataServiceRequest, IQueryResultSettings, NullResult } from '../Interfaces';
export declare function createCreateInput(entity: BusinessPartnerUser): IDataServiceRequest;
export declare function createBusinessPartnerUserAsync(context: IContext, entity: BusinessPartnerUser): AsyncResult<BusinessPartnerUser>;
export declare function createUpdateInput(entity: BusinessPartnerUser): IDataServiceRequest;
export declare function updateAsync(context: IContext, entity: BusinessPartnerUser): AsyncResult<BusinessPartnerUser>;
export declare function createDeleteAsync(entity: BusinessPartnerUser): IDataServiceRequest;
export declare function deleteAsync(context: IContext, entity: BusinessPartnerUser): AsyncResult<NullResult>;
export declare function createReadAsync(email: string): IDataServiceRequest;
export declare function readAsync(context: IContext, email: string): AsyncResult<BusinessPartnerUser>;
export declare function createReadAllAsync(queryResultSettings: IQueryResultSettings): IDataServiceRequest;
export declare function readAllAsync(context: IContext): AsyncResult<BusinessPartnerUser[]>;
