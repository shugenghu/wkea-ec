import { AsyncResult } from '../async-result';
import { InventoryInboundOutboundDocument, InventoryDocumentLineFilterCriteria, InventoryDocumentUpdateLinesAction, InventoryDocumentLineOperationResultSettings, InventoryInboundOutboundDocumentUpdateLinesByCriteriaResult, InventoryInboundOutboundDocumentLine, InventoryDocumentSerialNumberLineSearchCriteria, InventoryDocumentSerialNumberLine, InventoryDocumentValidationResultSummary, InventoryDocumentValidationResultSearchCriteria, InventoryDocumentValidationResultLine, InventoryDocumentSearchCriteria, InventoryDocumentLineSearchCriteria, InventoryDocumentSerialNumberLineResetAction, InventoryDocumentSerialNumberLineUpdateAction, InventoryInboundOutboundDocumentLinesSummary, InventoryDocumentSerialNumberLinesSummary } from '../Entities/CommerceTypes.g';
import { IContext, IDataServiceRequest, IQueryResultSettings, NullResult } from '../Interfaces';
export declare function createCreateInput(entity: InventoryInboundOutboundDocument): IDataServiceRequest;
export declare function createInventoryInboundOutboundDocumentAsync(context: IContext, entity: InventoryInboundOutboundDocument): AsyncResult<InventoryInboundOutboundDocument>;
export declare function createUpdateInput(entity: InventoryInboundOutboundDocument): IDataServiceRequest;
export declare function updateAsync(context: IContext, entity: InventoryInboundOutboundDocument): AsyncResult<InventoryInboundOutboundDocument>;
export declare function createDeleteAsync(entity: InventoryInboundOutboundDocument): IDataServiceRequest;
export declare function deleteAsync(context: IContext, entity: InventoryInboundOutboundDocument): AsyncResult<NullResult>;
export declare function createReadAsync(workDocumentId: string): IDataServiceRequest;
export declare function readAsync(context: IContext, workDocumentId: string): AsyncResult<InventoryInboundOutboundDocument>;
export declare function createReadAllAsync(queryResultSettings: IQueryResultSettings): IDataServiceRequest;
export declare function readAllAsync(context: IContext): AsyncResult<InventoryInboundOutboundDocument[]>;
export declare function createUpdateStatusInput(workDocumentId: string, documentStatus: number, documentVersion: number | null): IDataServiceRequest;
export declare function updateStatusAsync(context: IContext, workDocumentId: string, documentStatus: number, documentVersion: number | null): AsyncResult<InventoryInboundOutboundDocument>;
export declare function createUpdateLinesByCriteriaInput(workDocumentId: string, filterCriteria: InventoryDocumentLineFilterCriteria | null, updateLinesAction: InventoryDocumentUpdateLinesAction | null, returnUpdatedLinesPolicy: InventoryDocumentLineOperationResultSettings | null): IDataServiceRequest;
export declare function updateLinesByCriteriaAsync(context: IContext, workDocumentId: string, filterCriteria: InventoryDocumentLineFilterCriteria | null, updateLinesAction: InventoryDocumentUpdateLinesAction | null, returnUpdatedLinesPolicy: InventoryDocumentLineOperationResultSettings | null): AsyncResult<InventoryInboundOutboundDocumentUpdateLinesByCriteriaResult>;
export declare function createUpdateLineInput(workDocumentId: string, documentLine: InventoryInboundOutboundDocumentLine | null): IDataServiceRequest;
export declare function updateLineAsync(context: IContext, workDocumentId: string, documentLine: InventoryInboundOutboundDocumentLine | null): AsyncResult<InventoryInboundOutboundDocumentLine>;
export declare function createUpdateWorkingTerminalInput(workDocumentId: string, documentVersion: number | null): IDataServiceRequest;
export declare function updateWorkingTerminalAsync(context: IContext, workDocumentId: string, documentVersion: number | null): AsyncResult<InventoryInboundOutboundDocument>;
export declare function createUpdateNoteInput(workDocumentId: string, documentNote: string | null, documentVersion: number | null): IDataServiceRequest;
export declare function updateNoteAsync(context: IContext, workDocumentId: string, documentNote: string | null, documentVersion: number | null): AsyncResult<InventoryInboundOutboundDocument>;
export declare function createUpdateReceiptIdInput(workDocumentId: string, documentReceiptId: string | null, documentVersion: number | null): IDataServiceRequest;
export declare function updateReceiptIdAsync(context: IContext, workDocumentId: string, documentReceiptId: string | null, documentVersion: number | null): AsyncResult<InventoryInboundOutboundDocument>;
export declare function createCommitInput(workDocumentId: string, documentVersion: number | null): IDataServiceRequest;
export declare function commitAsync(context: IContext, workDocumentId: string, documentVersion: number | null): AsyncResult<InventoryInboundOutboundDocument>;
export declare function createRefreshOperationStatusInput(workDocumentId: string): IDataServiceRequest;
export declare function refreshOperationStatusAsync(context: IContext, workDocumentId: string): AsyncResult<InventoryInboundOutboundDocument>;
export declare function createStartInput(sourceDocumentId: string | null, sourceDocumentType: number): IDataServiceRequest;
export declare function startAsync(context: IContext, sourceDocumentId: string | null, sourceDocumentType: number): AsyncResult<InventoryInboundOutboundDocument>;
export declare function createAddLineInput(workDocumentId: string, documentLine: InventoryInboundOutboundDocumentLine | null): IDataServiceRequest;
export declare function addLineAsync(context: IContext, workDocumentId: string, documentLine: InventoryInboundOutboundDocumentLine | null): AsyncResult<InventoryInboundOutboundDocumentLine>;
export declare function createDeleteLineInput(workDocumentId: string, documentLineId: string | null, documentLineVersion: number | null): IDataServiceRequest;
export declare function deleteLineAsync(context: IContext, workDocumentId: string, documentLineId: string | null, documentLineVersion: number | null): AsyncResult<NullResult>;
export declare function createSearchSerialNumberLinesInput(queryResultSettings: IQueryResultSettings, workDocumentId: string, searchCriteria: InventoryDocumentSerialNumberLineSearchCriteria | null): IDataServiceRequest;
export declare function searchSerialNumberLinesAsync(context: IContext, workDocumentId: string, searchCriteria: InventoryDocumentSerialNumberLineSearchCriteria | null): AsyncResult<InventoryDocumentSerialNumberLine[]>;
export declare function createValidateInput(workDocumentId: string, documentVersion: number | null): IDataServiceRequest;
export declare function validateAsync(context: IContext, workDocumentId: string, documentVersion: number | null): AsyncResult<InventoryDocumentValidationResultSummary>;
export declare function createSearchValidationResultLinesInput(queryResultSettings: IQueryResultSettings, searchCriteria: InventoryDocumentValidationResultSearchCriteria | null): IDataServiceRequest;
export declare function searchValidationResultLinesAsync(context: IContext, searchCriteria: InventoryDocumentValidationResultSearchCriteria | null): AsyncResult<InventoryDocumentValidationResultLine[]>;
export declare function createSyncSourceDocumentInput(sourceDocumentId: string | null, sourceDocumentType: number): IDataServiceRequest;
export declare function syncSourceDocumentAsync(context: IContext, sourceDocumentId: string | null, sourceDocumentType: number): AsyncResult<NullResult>;
export declare function createSearchInboundDocumentsInput(queryResultSettings: IQueryResultSettings, searchCriteria: InventoryDocumentSearchCriteria | null): IDataServiceRequest;
export declare function searchInboundDocumentsAsync(context: IContext, searchCriteria: InventoryDocumentSearchCriteria | null): AsyncResult<InventoryInboundOutboundDocument[]>;
export declare function createSearchOutboundDocumentsInput(queryResultSettings: IQueryResultSettings, searchCriteria: InventoryDocumentSearchCriteria | null): IDataServiceRequest;
export declare function searchOutboundDocumentsAsync(context: IContext, searchCriteria: InventoryDocumentSearchCriteria | null): AsyncResult<InventoryInboundOutboundDocument[]>;
export declare function createSearchLinesInput(queryResultSettings: IQueryResultSettings, searchCriteria: InventoryDocumentLineSearchCriteria | null): IDataServiceRequest;
export declare function searchLinesAsync(context: IContext, searchCriteria: InventoryDocumentLineSearchCriteria | null): AsyncResult<InventoryInboundOutboundDocumentLine[]>;
export declare function createResetSerialNumberLineInput(workDocumentId: string, resetSerialNumberLineAction: InventoryDocumentSerialNumberLineResetAction | null): IDataServiceRequest;
export declare function resetSerialNumberLineAsync(context: IContext, workDocumentId: string, resetSerialNumberLineAction: InventoryDocumentSerialNumberLineResetAction | null): AsyncResult<InventoryDocumentSerialNumberLine>;
export declare function createUpdateSerialNumberLineInput(workDocumentId: string, updateSerialNumberLineAction: InventoryDocumentSerialNumberLineUpdateAction | null): IDataServiceRequest;
export declare function updateSerialNumberLineAsync(context: IContext, workDocumentId: string, updateSerialNumberLineAction: InventoryDocumentSerialNumberLineUpdateAction | null): AsyncResult<InventoryDocumentSerialNumberLine>;
export declare function createGetLinesSummaryInput(workDocumentId: string): IDataServiceRequest;
export declare function getLinesSummaryAsync(context: IContext, workDocumentId: string): AsyncResult<InventoryInboundOutboundDocumentLinesSummary>;
export declare function createGetSerialNumberLinesSummaryInput(workDocumentId: string, documentLineId: string | null): IDataServiceRequest;
export declare function getSerialNumberLinesSummaryAsync(context: IContext, workDocumentId: string, documentLineId: string | null): AsyncResult<InventoryDocumentSerialNumberLinesSummary>;
