import { AsyncResult } from '../async-result';
import { ProductList, ProductListSearchCriteria, ProductListLine } from '../Entities/CommerceTypes.g';
import { IContext, IDataServiceRequest, IQueryResultSettings, NullResult } from '../Interfaces';
export declare function createCreateInput(entity: ProductList): IDataServiceRequest;
export declare function createProductListAsync(context: IContext, entity: ProductList): AsyncResult<ProductList>;
export declare function createUpdateInput(entity: ProductList): IDataServiceRequest;
export declare function updateAsync(context: IContext, entity: ProductList): AsyncResult<ProductList>;
export declare function createDeleteAsync(entity: ProductList): IDataServiceRequest;
export declare function deleteAsync(context: IContext, entity: ProductList): AsyncResult<NullResult>;
export declare function createReadAsync(id: string): IDataServiceRequest;
export declare function readAsync(context: IContext, id: string): AsyncResult<ProductList>;
export declare function createReadAllAsync(queryResultSettings: IQueryResultSettings): IDataServiceRequest;
export declare function readAllAsync(context: IContext): AsyncResult<ProductList[]>;
export declare function createSearchInput(queryResultSettings: IQueryResultSettings, searchCriteria: ProductListSearchCriteria | null): IDataServiceRequest;
export declare function searchAsync(context: IContext, searchCriteria: ProductListSearchCriteria | null): AsyncResult<ProductList[]>;
export declare function createGetProductListLinesInput(queryResultSettings: IQueryResultSettings, id: string, searchText: string | null): IDataServiceRequest;
export declare function getProductListLinesAsync(context: IContext, id: string, searchText: string | null): AsyncResult<ProductListLine[]>;
export declare function createAddProductListLinesInput(queryResultSettings: IQueryResultSettings, id: string, productListLines: ProductListLine[] | null): IDataServiceRequest;
export declare function addProductListLinesAsync(context: IContext, id: string, productListLines: ProductListLine[] | null): AsyncResult<ProductListLine[]>;
export declare function createUpdateProductListLinesInput(queryResultSettings: IQueryResultSettings, id: string, productListLines: ProductListLine[] | null): IDataServiceRequest;
export declare function updateProductListLinesAsync(context: IContext, id: string, productListLines: ProductListLine[] | null): AsyncResult<ProductListLine[]>;
export declare function createRemoveProductListLinesInput(id: string, productListLines: ProductListLine[] | null): IDataServiceRequest;
export declare function removeProductListLinesAsync(context: IContext, id: string, productListLines: ProductListLine[] | null): AsyncResult<NullResult>;
export declare function createCopyCartToProductListInput(id: string, cartId: string | null, isRewrite: boolean | null, isQuantityAggregate: boolean | null): IDataServiceRequest;
export declare function copyCartToProductListAsync(context: IContext, id: string, cartId: string | null, isRewrite: boolean | null, isQuantityAggregate: boolean | null): AsyncResult<ProductList>;
