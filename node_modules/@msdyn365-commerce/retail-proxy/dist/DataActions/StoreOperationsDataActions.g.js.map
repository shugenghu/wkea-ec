{"version":3,"file":"StoreOperationsDataActions.g.js","sourceRoot":"","sources":["../../src/DataActions/StoreOperationsDataActions.g.ts"],"names":[],"mappings":"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","sourcesContent":["    // <auto-generated />\n    import { AsyncResult } from '../async-result';\n    import { DataServiceQuery } from '../DataServiceQuery';\n    import { ReasonCodeLine, PaymentMerchantInformation, StoreSafe, ShiftReconciliationLineRetrievalCriteria, ShiftReconciliationLine, ReceiptMask, SearchSuggestionCriteria, SearchSuggestion, DeviceActivationResult, CreateHardwareStationTokenResult, ValidateHardwareStationTokenResult, Barcode, ButtonGrid, GetButtonGridsByIdsCriteria, CardTypeInfo, CityInfo, CountryRegionInfo, CountyInfo, CreditMemo, TerminalDataDownloadRequestInfo, DataDownloadParameters, TerminalDataUploadRequestInfo, DataUploadParameters, DownloadSession, NumberSequenceSeedData, ReceiptNumberResetInfo, LoyaltyRewardPointActivity, CurrencyRequest, CurrencyAmount, DiscountCode, DistrictInfo, HardwareStationProfile, HardwareProfile, LocalizedString, OperationPermission, ReasonCode, CommerceProperty, ReportDataSet, IncomeExpenseAccount, StateProvinceInfo, ZipCodeInfo, KitTransaction, LoyaltyCard, LoyaltyCardTransaction, TransactionSearchCriteria, Transaction, GiftCard, NonSalesTransaction, DropAndDeclareTransaction, TaxOverride, CustomerBalances, NameValuePair, LinkToExistingCustomerResult, OfflineSyncStatsLine, StorageAccessToken, Framework, TaskGuidesSearchResult, Recording, AttributeDefinitionCriteria, AttributeDefinition, AttributeGroupDefinitionCriteria, AttributeGroupDefinition, FiscalTransaction, SalesOrder, AuditEvent, InventoryAvailableToPromise, NotificationItem, FiscalIntegrationDocumentRetrievalCriteria, FiscalIntegrationDocument, FiscalIntegrationRegistrationResult, FiscalIntegrationRegistrationProcess, FiscalIntegrationSupportedEvents, FiscalIntegrationTechnicalProfile, FiscalIntegrationTechnicalProfileSearchCriteria, FiscalIntegrationServiceInfo, FiscalIntegrationServiceStatus, FiscalIntegrationServiceCommunicationResult, FeatureState, FiscalIntegrationSequentialSignatureData, DiscountsSearchCriteria, Promotion, CashDeclaration, CustomerGroup, DeliveryOption, ChannelIdentity, EnvironmentConfiguration, SearchConfiguration, ExtensionPackageDefinition, ExtensionProfile, DeviceConfiguration, VisualProfile, SupportedLanguage, Affiliation, SalesTaxGroup, TenderType, UnitOfMeasure, Currency, CommissionSalesGroup, ChannelInventoryConfiguration, Device, UserDefinedSecretCertificateResult, MediaBlob, ExtensibleEnumerationContainer, AddressPurpose, ReturnPolicy, } from '../Entities/CommerceTypes.g';\n    import { ReceiptMaskClass, PaymentMerchantInformationClass, StoreSafeClass, ShiftReconciliationLineClass, SearchSuggestionClass, DeviceActivationResultClass, CreateHardwareStationTokenResultClass, ValidateHardwareStationTokenResultClass, BarcodeClass, ButtonGridClass, CardTypeInfoClass, CityInfoClass, CountryRegionInfoClass, CountyInfoClass, CreditMemoClass, DataDownloadParametersClass, DataUploadParametersClass, DownloadSessionClass, NumberSequenceSeedDataClass, ReceiptNumberResetInfoClass, LoyaltyRewardPointActivityClass, CurrencyAmountClass, DiscountCodeClass, DistrictInfoClass, HardwareStationProfileClass, HardwareProfileClass, LocalizedStringClass, OperationPermissionClass, ReasonCodeClass, ReportDataSetClass, IncomeExpenseAccountClass, StateProvinceInfoClass, ZipCodeInfoClass, KitTransactionClass, LoyaltyCardClass, LoyaltyCardTransactionClass, TransactionClass, GiftCardClass, NonSalesTransactionClass, DropAndDeclareTransactionClass, TaxOverrideClass, CustomerBalancesClass, LinkToExistingCustomerResultClass, OfflineSyncStatsLineClass, StorageAccessTokenClass, FrameworkClass, TaskGuidesSearchResultClass, RecordingClass, AttributeDefinitionClass, AttributeGroupDefinitionClass, AuditEventClass, InventoryAvailableToPromiseClass, SalesOrderClass, NotificationItemClass, FiscalIntegrationDocumentClass, FiscalIntegrationRegistrationProcessClass, FiscalIntegrationSupportedEventsClass, FiscalIntegrationTechnicalProfileClass, FiscalIntegrationServiceStatusClass, FiscalIntegrationServiceCommunicationResultClass, FeatureStateClass, FiscalIntegrationSequentialSignatureDataClass, PromotionClass, FiscalTransactionClass, CashDeclarationClass, CustomerGroupClass, DeliveryOptionClass, ChannelIdentityClass, EnvironmentConfigurationClass, SearchConfigurationClass, ExtensionPackageDefinitionClass, ExtensionProfileClass, DeviceConfigurationClass, VisualProfileClass, SupportedLanguageClass, AffiliationClass, SalesTaxGroupClass, TenderTypeClass, UnitOfMeasureClass, CurrencyClass, CommissionSalesGroupClass, ChannelInventoryConfigurationClass, DeviceClass, UserDefinedSecretCertificateResultClass, MediaBlobClass, ExtensibleEnumerationContainerClass, AddressPurposeClass, ReturnPolicyClass } from '../Entities/CommerceModels.g';\n    import { IContext, IDataServiceRequest, IQueryResultSettings, NullResult } from '../Interfaces';\n    import { executeAction } from '../retail-action';\n    function storeQuery(): DataServiceQuery {\n    return new DataServiceQuery();\n    }\n    \n      export function createRoundAmountByTenderTypeInput(amount: number, tenderTypeId: string | null): IDataServiceRequest {\n        const query = storeQuery();\n        return query.createDataServiceRequestForOperation('RoundAmountByTenderType', true, '', 'false', {  bypassCache: 'get', returnEntity: ''}, {amount: amount, tenderTypeId: tenderTypeId });\n      }\n      export function roundAmountByTenderTypeAsync(context: IContext, amount: number, tenderTypeId: string | null):AsyncResult<number> {\n        const request = createRoundAmountByTenderTypeInput(amount, tenderTypeId, );\n        return executeAction<number>(request, context);\n      }\n  \n      export function createVoidSuspendedTransactionsInput(suspendedCartIds: string[] | null, shiftId: number | null, shiftTerminalId: string | null, reasonCodeLines: ReasonCodeLine[] | null): IDataServiceRequest {\n        const query = storeQuery();\n        return query.createDataServiceRequestForOperation('VoidSuspendedTransactions', true, '', '', {  bypassCache: 'get', returnEntity: ''}, {suspendedCartIds: suspendedCartIds, shiftId: shiftId, shiftTerminalId: shiftTerminalId, reasonCodeLines: reasonCodeLines });\n      }\n      export function voidSuspendedTransactionsAsync(context: IContext, suspendedCartIds: string[] | null, shiftId: number | null, shiftTerminalId: string | null, reasonCodeLines: ReasonCodeLine[] | null):AsyncResult<NullResult> {\n        const request = createVoidSuspendedTransactionsInput(suspendedCartIds, shiftId, shiftTerminalId, reasonCodeLines, );\n        return executeAction<NullResult>(request, context);\n      }\n  \n      export function createGetMerchantPropertiesByServiceAccountIdInput(queryResultSettings: IQueryResultSettings, serviceAccountIds: string[] | null): IDataServiceRequest {\n        const query = storeQuery().resultSettings(queryResultSettings);\n        return query.createDataServiceRequestForOperation('GetMerchantPropertiesByServiceAccountId', true, PaymentMerchantInformationClass, 'true', {  bypassCache: 'none', returnEntity: 'PaymentMerchantInformation'}, {serviceAccountIds: serviceAccountIds });\n      }\n      export function getMerchantPropertiesByServiceAccountIdAsync(context: IContext, serviceAccountIds: string[] | null):AsyncResult<PaymentMerchantInformation[]> {\n        const request = createGetMerchantPropertiesByServiceAccountIdInput(context.queryResultSettings, serviceAccountIds, );\n        return executeAction<PaymentMerchantInformation[]>(request, context);\n      }\n  \n      export function createGetStoreSafesInput(queryResultSettings: IQueryResultSettings): IDataServiceRequest {\n        const query = storeQuery().resultSettings(queryResultSettings);\n        return query.createDataServiceRequestForOperation('GetStoreSafes', true, StoreSafeClass, 'true', {  bypassCache: 'none', returnEntity: 'StoreSafe'}, { });\n      }\n      export function getStoreSafesAsync(context: IContext):AsyncResult<StoreSafe[]> {\n        const request = createGetStoreSafesInput(context.queryResultSettings, );\n        return executeAction<StoreSafe[]>(request, context);\n      }\n  \n      export function createGetShiftReconciliationLinesInput(queryResultSettings: IQueryResultSettings, shiftReconciliationLineRetrievalCriteria: ShiftReconciliationLineRetrievalCriteria | null): IDataServiceRequest {\n        const query = storeQuery().resultSettings(queryResultSettings);\n        return query.createDataServiceRequestForOperation('GetShiftReconciliationLines', true, ShiftReconciliationLineClass, 'true', {  bypassCache: 'none', returnEntity: 'ShiftReconciliationLine'}, {shiftReconciliationLineRetrievalCriteria: shiftReconciliationLineRetrievalCriteria });\n      }\n      export function getShiftReconciliationLinesAsync(context: IContext, shiftReconciliationLineRetrievalCriteria: ShiftReconciliationLineRetrievalCriteria | null):AsyncResult<ShiftReconciliationLine[]> {\n        const request = createGetShiftReconciliationLinesInput(context.queryResultSettings, shiftReconciliationLineRetrievalCriteria, );\n        return executeAction<ShiftReconciliationLine[]>(request, context);\n      }\n  \n      export function createReconcileLinesInput(shiftReconciliationLines: ShiftReconciliationLine[] | null, description: string | null): IDataServiceRequest {\n        const query = storeQuery();\n        return query.createDataServiceRequestForOperation('ReconcileLines', true, '', '', {  bypassCache: 'get', returnEntity: ''}, {shiftReconciliationLines: shiftReconciliationLines, Description: description });\n      }\n      export function reconcileLinesAsync(context: IContext, shiftReconciliationLines: ShiftReconciliationLine[] | null, description: string | null):AsyncResult<NullResult> {\n        const request = createReconcileLinesInput(shiftReconciliationLines, description, );\n        return executeAction<NullResult>(request, context);\n      }\n  \n      export function createUndoReconciliationInput(shiftReconciliationLines: ShiftReconciliationLine[] | null): IDataServiceRequest {\n        const query = storeQuery();\n        return query.createDataServiceRequestForOperation('UndoReconciliation', true, '', '', {  bypassCache: 'get', returnEntity: ''}, {shiftReconciliationLines: shiftReconciliationLines });\n      }\n      export function undoReconciliationAsync(context: IContext, shiftReconciliationLines: ShiftReconciliationLine[] | null):AsyncResult<NullResult> {\n        const request = createUndoReconciliationInput(shiftReconciliationLines, );\n        return executeAction<NullResult>(request, context);\n      }\n  \n      export function createGetReceiptMasksInput(queryResultSettings: IQueryResultSettings, receiptTransactionType: number | null): IDataServiceRequest {\n        const query = storeQuery().resultSettings(queryResultSettings);\n        return query.createDataServiceRequestForOperation('GetReceiptMasks', true, ReceiptMaskClass, 'true', {  bypassCache: 'none', returnEntity: 'ReceiptMask'}, {receiptTransactionType: receiptTransactionType });\n      }\n      export function getReceiptMasksAsync(context: IContext, receiptTransactionType: number | null):AsyncResult<ReceiptMask[]> {\n        const request = createGetReceiptMasksInput(context.queryResultSettings, receiptTransactionType, );\n        return executeAction<ReceiptMask[]>(request, context);\n      }\n  \n      export function createGetSearchSuggestionsInput(queryResultSettings: IQueryResultSettings, searchSuggestionCriteria: SearchSuggestionCriteria | null): IDataServiceRequest {\n        const query = storeQuery().resultSettings(queryResultSettings);\n        return query.createDataServiceRequestForOperation('GetSearchSuggestions', true, SearchSuggestionClass, 'true', {  bypassCache: 'none', returnEntity: 'SearchSuggestion'}, {searchSuggestionCriteria: searchSuggestionCriteria });\n      }\n      export function getSearchSuggestionsAsync(context: IContext, searchSuggestionCriteria: SearchSuggestionCriteria | null):AsyncResult<SearchSuggestion[]> {\n        const request = createGetSearchSuggestionsInput(context.queryResultSettings, searchSuggestionCriteria, );\n        return executeAction<SearchSuggestion[]>(request, context);\n      }\n  \n      export function createStartSessionInput(transactionId: string | null): IDataServiceRequest {\n        const query = storeQuery();\n        return query.createDataServiceRequestForOperation('StartSession', true, '', '', {  bypassCache: 'get', returnEntity: ''}, {transactionId: transactionId });\n      }\n      export function startSessionAsync(context: IContext, transactionId: string | null):AsyncResult<NullResult> {\n        const request = createStartSessionInput(transactionId, );\n        return executeAction<NullResult>(request, context);\n      }\n  \n      export function createEndSessionInput(transactionId: string | null): IDataServiceRequest {\n        const query = storeQuery();\n        return query.createDataServiceRequestForOperation('EndSession', true, '', '', {  bypassCache: 'get', returnEntity: ''}, {transactionId: transactionId });\n      }\n      export function endSessionAsync(context: IContext, transactionId: string | null):AsyncResult<NullResult> {\n        const request = createEndSessionInput(transactionId, );\n        return executeAction<NullResult>(request, context);\n      }\n  \n      export function createActivateDeviceInput(deviceNumber: string | null, terminalId: string | null, deviceId: string | null, forceActivate: boolean, deviceType: number | null): IDataServiceRequest {\n        const query = storeQuery();\n        return query.createDataServiceRequestForOperation('ActivateDevice', true, DeviceActivationResultClass, 'false', {  bypassCache: 'get', returnEntity: 'DeviceActivationResult'}, {deviceNumber: deviceNumber, terminalId: terminalId, deviceId: deviceId, forceActivate: forceActivate, deviceType: deviceType });\n      }\n      export function activateDeviceAsync(context: IContext, deviceNumber: string | null, terminalId: string | null, deviceId: string | null, forceActivate: boolean, deviceType: number | null):AsyncResult<DeviceActivationResult> {\n        const request = createActivateDeviceInput(deviceNumber, terminalId, deviceId, forceActivate, deviceType, );\n        return executeAction<DeviceActivationResult>(request, context);\n      }\n  \n      export function createMassActivateDeviceInput(deviceNumber: string | null, terminalId: string | null, deviceId: string | null, deviceType: number | null): IDataServiceRequest {\n        const query = storeQuery();\n        return query.createDataServiceRequestForOperation('MassActivateDevice', true, DeviceActivationResultClass, 'false', {  bypassCache: 'get', returnEntity: 'DeviceActivationResult'}, {deviceNumber: deviceNumber, terminalId: terminalId, deviceId: deviceId, deviceType: deviceType });\n      }\n      export function massActivateDeviceAsync(context: IContext, deviceNumber: string | null, terminalId: string | null, deviceId: string | null, deviceType: number | null):AsyncResult<DeviceActivationResult> {\n        const request = createMassActivateDeviceInput(deviceNumber, terminalId, deviceId, deviceType, );\n        return executeAction<DeviceActivationResult>(request, context);\n      }\n  \n      export function createDeactivateDeviceInput(transactionId: string | null): IDataServiceRequest {\n        const query = storeQuery();\n        return query.createDataServiceRequestForOperation('DeactivateDevice', true, '', '', {  bypassCache: 'get', returnEntity: ''}, {transactionId: transactionId });\n      }\n      export function deactivateDeviceAsync(context: IContext, transactionId: string | null):AsyncResult<NullResult> {\n        const request = createDeactivateDeviceInput(transactionId, );\n        return executeAction<NullResult>(request, context);\n      }\n  \n      export function createCreateHardwareStationTokenInput(): IDataServiceRequest {\n        const query = storeQuery();\n        return query.createDataServiceRequestForOperation('CreateHardwareStationToken', true, CreateHardwareStationTokenResultClass, 'false', {  bypassCache: 'get', returnEntity: 'CreateHardwareStationTokenResult'}, { });\n      }\n      export function createHardwareStationTokenAsync(context: IContext):AsyncResult<CreateHardwareStationTokenResult> {\n        const request = createCreateHardwareStationTokenInput();\n        return executeAction<CreateHardwareStationTokenResult>(request, context);\n      }\n  \n      export function createValidateHardwareStationTokenInput(deviceNumber: string | null, hardwareStationToken: string | null): IDataServiceRequest {\n        const query = storeQuery();\n        return query.createDataServiceRequestForOperation('ValidateHardwareStationToken', true, ValidateHardwareStationTokenResultClass, 'false', {  bypassCache: 'get', returnEntity: 'ValidateHardwareStationTokenResult'}, {deviceNumber: deviceNumber, hardwareStationToken: hardwareStationToken });\n      }\n      export function validateHardwareStationTokenAsync(context: IContext, deviceNumber: string | null, hardwareStationToken: string | null):AsyncResult<ValidateHardwareStationTokenResult> {\n        const request = createValidateHardwareStationTokenInput(deviceNumber, hardwareStationToken, );\n        return executeAction<ValidateHardwareStationTokenResult>(request, context);\n      }\n  \n      export function createGetBarcodeByIdInput(barcodeId: string | null): IDataServiceRequest {\n        const query = storeQuery();\n        return query.createDataServiceRequestForOperation('GetBarcodeById', true, BarcodeClass, 'false', {  bypassCache: 'none', returnEntity: 'Barcode'}, {barcodeId: barcodeId });\n      }\n      export function getBarcodeByIdAsync(context: IContext, barcodeId: string | null):AsyncResult<Barcode> {\n        const request = createGetBarcodeByIdInput(barcodeId, );\n        return executeAction<Barcode>(request, context);\n      }\n  \n      export function createGetButtonGridByIdInput(buttonGridId: string | null): IDataServiceRequest {\n        const query = storeQuery();\n        return query.createDataServiceRequestForOperation('GetButtonGridById', true, ButtonGridClass, 'false', {  bypassCache: 'none', returnEntity: 'ButtonGrid'}, {buttonGridId: buttonGridId });\n      }\n      export function getButtonGridByIdAsync(context: IContext, buttonGridId: string | null):AsyncResult<ButtonGrid> {\n        const request = createGetButtonGridByIdInput(buttonGridId, );\n        return executeAction<ButtonGrid>(request, context);\n      }\n  \n      export function createGetButtonGridsByIdsInput(queryResultSettings: IQueryResultSettings, getButtonGridsByIdsCriteria: GetButtonGridsByIdsCriteria | null): IDataServiceRequest {\n        const query = storeQuery().resultSettings(queryResultSettings);\n        return query.createDataServiceRequestForOperation('GetButtonGridsByIds', true, ButtonGridClass, 'true', {  bypassCache: 'none', returnEntity: 'ButtonGrid'}, {getButtonGridsByIdsCriteria: getButtonGridsByIdsCriteria });\n      }\n      export function getButtonGridsByIdsAsync(context: IContext, getButtonGridsByIdsCriteria: GetButtonGridsByIdsCriteria | null):AsyncResult<ButtonGrid[]> {\n        const request = createGetButtonGridsByIdsInput(context.queryResultSettings, getButtonGridsByIdsCriteria, );\n        return executeAction<ButtonGrid[]>(request, context);\n      }\n  \n      export function createGetCardTypesInput(queryResultSettings: IQueryResultSettings): IDataServiceRequest {\n        const query = storeQuery().resultSettings(queryResultSettings);\n        return query.createDataServiceRequestForOperation('GetCardTypes', true, CardTypeInfoClass, 'true', {  bypassCache: 'none', returnEntity: 'CardTypeInfo'}, { });\n      }\n      export function getCardTypesAsync(context: IContext):AsyncResult<CardTypeInfo[]> {\n        const request = createGetCardTypesInput(context.queryResultSettings, );\n        return executeAction<CardTypeInfo[]>(request, context);\n      }\n  \n      export function createResolveCardTypesInput(queryResultSettings: IQueryResultSettings, cardNumberPrefix: string | null, cardType: number | null, paymentToken?: string | null): IDataServiceRequest {\n        const query = storeQuery().resultSettings(queryResultSettings);\n        return query.createDataServiceRequestForOperation('ResolveCardTypes', true, CardTypeInfoClass, 'true', {  bypassCache: 'get', returnEntity: 'CardTypeInfo'}, {cardNumberPrefix: cardNumberPrefix, cardType: cardType, paymentToken: paymentToken });\n      }\n      export function resolveCardTypesAsync(context: IContext, cardNumberPrefix: string | null, cardType: number | null, paymentToken?: string | null):AsyncResult<CardTypeInfo[]> {\n        const request = createResolveCardTypesInput(context.queryResultSettings, cardNumberPrefix, cardType, paymentToken, );\n        return executeAction<CardTypeInfo[]>(request, context);\n      }\n  \n      export function createGetSupportedPaymentCardTypesInput(queryResultSettings: IQueryResultSettings): IDataServiceRequest {\n        const query = storeQuery().resultSettings(queryResultSettings);\n        return query.createDataServiceRequestForOperation('GetSupportedPaymentCardTypes', true, '', 'true', {  bypassCache: 'none', returnEntity: ''}, { });\n      }\n      export function getSupportedPaymentCardTypesAsync(context: IContext):AsyncResult<string[]> {\n        const request = createGetSupportedPaymentCardTypesInput(context.queryResultSettings, );\n        return executeAction<string[]>(request, context);\n      }\n  \n      export function createGetCitiesInput(queryResultSettings: IQueryResultSettings, countryRegionId: string | null, stateProvinceId: string | null, countyId: string | null): IDataServiceRequest {\n        const query = storeQuery().resultSettings(queryResultSettings);\n        return query.createDataServiceRequestForOperation('GetCities', true, CityInfoClass, 'true', {  bypassCache: 'none', returnEntity: 'CityInfo'}, {countryRegionId: countryRegionId, stateProvinceId: stateProvinceId, countyId: countyId });\n      }\n      export function getCitiesAsync(context: IContext, countryRegionId: string | null, stateProvinceId: string | null, countyId: string | null):AsyncResult<CityInfo[]> {\n        const request = createGetCitiesInput(context.queryResultSettings, countryRegionId, stateProvinceId, countyId, );\n        return executeAction<CityInfo[]>(request, context);\n      }\n  \n      export function createGetCountryRegionsForShippingInput(queryResultSettings: IQueryResultSettings): IDataServiceRequest {\n        const query = storeQuery().resultSettings(queryResultSettings);\n        return query.createDataServiceRequestForOperation('GetCountryRegionsForShipping', false, CountryRegionInfoClass, 'true', {  bypassCache: 'none', returnEntity: 'CountryRegionInfo'}, { });\n      }\n      export function getCountryRegionsForShippingAsync(context: IContext):AsyncResult<CountryRegionInfo[]> {\n        const request = createGetCountryRegionsForShippingInput(context.queryResultSettings, );\n        return executeAction<CountryRegionInfo[]>(request, context);\n      }\n  \n      export function createGetCountryRegionsByLanguageIdInput(queryResultSettings: IQueryResultSettings, languageId: string | null): IDataServiceRequest {\n        const query = storeQuery().resultSettings(queryResultSettings);\n        return query.createDataServiceRequestForOperation('GetCountryRegionsByLanguageId', true, CountryRegionInfoClass, 'true', {  bypassCache: 'none', returnEntity: 'CountryRegionInfo'}, {languageId: languageId });\n      }\n      export function getCountryRegionsByLanguageIdAsync(context: IContext, languageId: string | null):AsyncResult<CountryRegionInfo[]> {\n        const request = createGetCountryRegionsByLanguageIdInput(context.queryResultSettings, languageId, );\n        return executeAction<CountryRegionInfo[]>(request, context);\n      }\n  \n      export function createGetCountiesInput(queryResultSettings: IQueryResultSettings, countryRegionId: string | null, stateProvinceId: string | null): IDataServiceRequest {\n        const query = storeQuery().resultSettings(queryResultSettings);\n        return query.createDataServiceRequestForOperation('GetCounties', true, CountyInfoClass, 'true', {  bypassCache: 'none', returnEntity: 'CountyInfo'}, {countryRegionId: countryRegionId, stateProvinceId: stateProvinceId });\n      }\n      export function getCountiesAsync(context: IContext, countryRegionId: string | null, stateProvinceId: string | null):AsyncResult<CountyInfo[]> {\n        const request = createGetCountiesInput(context.queryResultSettings, countryRegionId, stateProvinceId, );\n        return executeAction<CountyInfo[]>(request, context);\n      }\n  \n      export function createGetCreditMemoByIdInput(creditMemoId: string | null): IDataServiceRequest {\n        const query = storeQuery();\n        return query.createDataServiceRequestForOperation('GetCreditMemoById', true, CreditMemoClass, 'false', {  bypassCache: 'none', returnEntity: 'CreditMemo'}, {creditMemoId: creditMemoId });\n      }\n      export function getCreditMemoByIdAsync(context: IContext, creditMemoId: string | null):AsyncResult<CreditMemo> {\n        const request = createGetCreditMemoByIdInput(creditMemoId, );\n        return executeAction<CreditMemo>(request, context);\n      }\n  \n      export function createGetDownloadIntervalInput(dataStoreName: string | null): IDataServiceRequest {\n        const query = storeQuery();\n        return query.createDataServiceRequestForOperation('GetDownloadInterval', true, '', 'false', {  bypassCache: 'none', returnEntity: ''}, {dataStoreName: dataStoreName });\n      }\n      export function getDownloadIntervalAsync(context: IContext, dataStoreName: string | null):AsyncResult<string> {\n        const request = createGetDownloadIntervalInput(dataStoreName, );\n        return executeAction<string>(request, context);\n      }\n  \n      export function createGetTerminalDataStoreNameInput(terminalId: string | null): IDataServiceRequest {\n        const query = storeQuery();\n        return query.createDataServiceRequestForOperation('GetTerminalDataStoreName', true, '', 'false', {  bypassCache: 'none', returnEntity: ''}, {terminalId: terminalId });\n      }\n      export function getTerminalDataStoreNameAsync(context: IContext, terminalId: string | null):AsyncResult<string> {\n        const request = createGetTerminalDataStoreNameInput(terminalId, );\n        return executeAction<string>(request, context);\n      }\n  \n      export function createGetDownloadLinkInput(dataStoreName: string | null, downloadSessionId: number): IDataServiceRequest {\n        const query = storeQuery();\n        return query.createDataServiceRequestForOperation('GetDownloadLink', true, '', 'false', {  bypassCache: 'none', returnEntity: ''}, {dataStoreName: dataStoreName, downloadSessionId: downloadSessionId });\n      }\n      export function getDownloadLinkAsync(context: IContext, dataStoreName: string | null, downloadSessionId: number):AsyncResult<string> {\n        const request = createGetDownloadLinkInput(dataStoreName, downloadSessionId, );\n        return executeAction<string>(request, context);\n      }\n  \n      export function createGetDataDownloadParametersByTerminalInput(terminalDataDownloadRequestInfo: TerminalDataDownloadRequestInfo | null): IDataServiceRequest {\n        const query = storeQuery();\n        return query.createDataServiceRequestForOperation('GetDataDownloadParametersByTerminal', true, DataDownloadParametersClass, 'false', {  bypassCache: 'none', returnEntity: 'DataDownloadParameters'}, {TerminalDataDownloadRequestInfo: terminalDataDownloadRequestInfo });\n      }\n      export function getDataDownloadParametersByTerminalAsync(context: IContext, terminalDataDownloadRequestInfo: TerminalDataDownloadRequestInfo | null):AsyncResult<DataDownloadParameters> {\n        const request = createGetDataDownloadParametersByTerminalInput(terminalDataDownloadRequestInfo, );\n        return executeAction<DataDownloadParameters>(request, context);\n      }\n  \n      export function createGetDataUploadParametersByTerminalInput(terminalDataUploadRequestInfo: TerminalDataUploadRequestInfo | null): IDataServiceRequest {\n        const query = storeQuery();\n        return query.createDataServiceRequestForOperation('GetDataUploadParametersByTerminal', true, DataUploadParametersClass, 'false', {  bypassCache: 'none', returnEntity: 'DataUploadParameters'}, {TerminalDataUploadRequestInfo: terminalDataUploadRequestInfo });\n      }\n      export function getDataUploadParametersByTerminalAsync(context: IContext, terminalDataUploadRequestInfo: TerminalDataUploadRequestInfo | null):AsyncResult<DataUploadParameters> {\n        const request = createGetDataUploadParametersByTerminalInput(terminalDataUploadRequestInfo, );\n        return executeAction<DataUploadParameters>(request, context);\n      }\n  \n      export function createGetDownloadSessionsInput(queryResultSettings: IQueryResultSettings, dataStoreName: string | null): IDataServiceRequest {\n        const query = storeQuery().resultSettings(queryResultSettings);\n        return query.createDataServiceRequestForOperation('GetDownloadSessions', true, DownloadSessionClass, 'true', {  bypassCache: 'none', returnEntity: 'DownloadSession'}, {dataStoreName: dataStoreName });\n      }\n      export function getDownloadSessionsAsync(context: IContext, dataStoreName: string | null):AsyncResult<DownloadSession[]> {\n        const request = createGetDownloadSessionsInput(context.queryResultSettings, dataStoreName, );\n        return executeAction<DownloadSession[]>(request, context);\n      }\n  \n      export function createGetInitialDownloadSessionsInput(queryResultSettings: IQueryResultSettings, dataStoreName: string | null): IDataServiceRequest {\n        const query = storeQuery().resultSettings(queryResultSettings);\n        return query.createDataServiceRequestForOperation('GetInitialDownloadSessions', true, DownloadSessionClass, 'true', {  bypassCache: 'none', returnEntity: 'DownloadSession'}, {dataStoreName: dataStoreName });\n      }\n      export function getInitialDownloadSessionsAsync(context: IContext, dataStoreName: string | null):AsyncResult<DownloadSession[]> {\n        const request = createGetInitialDownloadSessionsInput(context.queryResultSettings, dataStoreName, );\n        return executeAction<DownloadSession[]>(request, context);\n      }\n  \n      export function createGetUploadJobDefinitionsInput(queryResultSettings: IQueryResultSettings, dataStoreName: string | null): IDataServiceRequest {\n        const query = storeQuery().resultSettings(queryResultSettings);\n        return query.createDataServiceRequestForOperation('GetUploadJobDefinitions', true, '', 'true', {  bypassCache: 'none', returnEntity: ''}, {dataStoreName: dataStoreName });\n      }\n      export function getUploadJobDefinitionsAsync(context: IContext, dataStoreName: string | null):AsyncResult<string[]> {\n        const request = createGetUploadJobDefinitionsInput(context.queryResultSettings, dataStoreName, );\n        return executeAction<string[]>(request, context);\n      }\n  \n      export function createGetUploadIntervalInput(dataStoreName: string | null): IDataServiceRequest {\n        const query = storeQuery();\n        return query.createDataServiceRequestForOperation('GetUploadInterval', true, '', 'false', {  bypassCache: 'none', returnEntity: ''}, {dataStoreName: dataStoreName });\n      }\n      export function getUploadIntervalAsync(context: IContext, dataStoreName: string | null):AsyncResult<string> {\n        const request = createGetUploadIntervalInput(dataStoreName, );\n        return executeAction<string>(request, context);\n      }\n  \n      export function createPostOfflineTransactionsInput(offlineTransactionForMPOS: string[] | null): IDataServiceRequest {\n        const query = storeQuery();\n        return query.createDataServiceRequestForOperation('PostOfflineTransactions', true, '', 'false', {  bypassCache: 'get', returnEntity: ''}, {offlineTransactionForMPOS: offlineTransactionForMPOS });\n      }\n      export function postOfflineTransactionsAsync(context: IContext, offlineTransactionForMPOS: string[] | null):AsyncResult<boolean> {\n        const request = createPostOfflineTransactionsInput(offlineTransactionForMPOS, );\n        return executeAction<boolean>(request, context);\n      }\n  \n      export function createGetRetailTrialPlanOfferInput(): IDataServiceRequest {\n        const query = storeQuery();\n        return query.createDataServiceRequestForOperation('GetRetailTrialPlanOffer', true, '', 'false', {  bypassCache: 'none', returnEntity: ''}, { });\n      }\n      export function getRetailTrialPlanOfferAsync(context: IContext):AsyncResult<boolean> {\n        const request = createGetRetailTrialPlanOfferInput();\n        return executeAction<boolean>(request, context);\n      }\n  \n      export function createGetLatestNumberSequenceInput(queryResultSettings: IQueryResultSettings): IDataServiceRequest {\n        const query = storeQuery().resultSettings(queryResultSettings);\n        return query.createDataServiceRequestForOperation('GetLatestNumberSequence', true, NumberSequenceSeedDataClass, 'true', {  bypassCache: 'none', returnEntity: 'NumberSequenceSeedData'}, { });\n      }\n      export function getLatestNumberSequenceAsync(context: IContext):AsyncResult<NumberSequenceSeedData[]> {\n        const request = createGetLatestNumberSequenceInput(context.queryResultSettings, );\n        return executeAction<NumberSequenceSeedData[]>(request, context);\n      }\n  \n      export function createGetReceiptNumberResetInfoInput(queryResultSettings: IQueryResultSettings): IDataServiceRequest {\n        const query = storeQuery().resultSettings(queryResultSettings);\n        return query.createDataServiceRequestForOperation('GetReceiptNumberResetInfo', true, ReceiptNumberResetInfoClass, 'true', {  bypassCache: 'none', returnEntity: 'ReceiptNumberResetInfo'}, { });\n      }\n      export function getReceiptNumberResetInfoAsync(context: IContext):AsyncResult<ReceiptNumberResetInfo[]> {\n        const request = createGetReceiptNumberResetInfoInput(context.queryResultSettings, );\n        return executeAction<ReceiptNumberResetInfo[]>(request, context);\n      }\n  \n      export function createGetLoyaltyRewardPointActivityTimelineInput(queryResultSettings: IQueryResultSettings, cardNumber: string | null, rewardPointId: string | null): IDataServiceRequest {\n        const query = storeQuery().resultSettings(queryResultSettings);\n        return query.createDataServiceRequestForOperation('GetLoyaltyRewardPointActivityTimeline', true, LoyaltyRewardPointActivityClass, 'true', {  bypassCache: 'none', returnEntity: 'LoyaltyRewardPointActivity'}, {cardNumber: cardNumber, rewardPointId: rewardPointId });\n      }\n      export function getLoyaltyRewardPointActivityTimelineAsync(context: IContext, cardNumber: string | null, rewardPointId: string | null):AsyncResult<LoyaltyRewardPointActivity[]> {\n        const request = createGetLoyaltyRewardPointActivityTimelineInput(context.queryResultSettings, cardNumber, rewardPointId, );\n        return executeAction<LoyaltyRewardPointActivity[]>(request, context);\n      }\n  \n      export function createGetLoyaltyRewardPointActivityTimelineForExpiredPointsInput(queryResultSettings: IQueryResultSettings, cardNumber: string | null, rewardPointId: string | null): IDataServiceRequest {\n        const query = storeQuery().resultSettings(queryResultSettings);\n        return query.createDataServiceRequestForOperation('GetLoyaltyRewardPointActivityTimelineForExpiredPoints', true, LoyaltyRewardPointActivityClass, 'true', {  bypassCache: 'none', returnEntity: 'LoyaltyRewardPointActivity'}, {cardNumber: cardNumber, rewardPointId: rewardPointId });\n      }\n      export function getLoyaltyRewardPointActivityTimelineForExpiredPointsAsync(context: IContext, cardNumber: string | null, rewardPointId: string | null):AsyncResult<LoyaltyRewardPointActivity[]> {\n        const request = createGetLoyaltyRewardPointActivityTimelineForExpiredPointsInput(context.queryResultSettings, cardNumber, rewardPointId, );\n        return executeAction<LoyaltyRewardPointActivity[]>(request, context);\n      }\n  \n      export function createCalculateTotalCurrencyAmountInput(currenciesAmount: CurrencyRequest[] | null): IDataServiceRequest {\n        const query = storeQuery();\n        return query.createDataServiceRequestForOperation('CalculateTotalCurrencyAmount', true, CurrencyAmountClass, 'false', {  bypassCache: 'get', returnEntity: 'CurrencyAmount'}, {currenciesAmount: currenciesAmount });\n      }\n      export function calculateTotalCurrencyAmountAsync(context: IContext, currenciesAmount: CurrencyRequest[] | null):AsyncResult<CurrencyAmount> {\n        const request = createCalculateTotalCurrencyAmountInput(currenciesAmount, );\n        return executeAction<CurrencyAmount>(request, context);\n      }\n  \n      export function createGetDiscountCodeInput(discountCode: string | null): IDataServiceRequest {\n        const query = storeQuery();\n        return query.createDataServiceRequestForOperation('GetDiscountCode', true, DiscountCodeClass, 'false', {  bypassCache: 'none', returnEntity: 'DiscountCode'}, {discountCode: discountCode });\n      }\n      export function getDiscountCodeAsync(context: IContext, discountCode: string | null):AsyncResult<DiscountCode> {\n        const request = createGetDiscountCodeInput(discountCode, );\n        return executeAction<DiscountCode>(request, context);\n      }\n  \n      export function createGetDiscountCodesByOfferIdInput(queryResultSettings: IQueryResultSettings, offerId: string | null): IDataServiceRequest {\n        const query = storeQuery().resultSettings(queryResultSettings);\n        return query.createDataServiceRequestForOperation('GetDiscountCodesByOfferId', true, DiscountCodeClass, 'true', {  bypassCache: 'none', returnEntity: 'DiscountCode'}, {offerId: offerId });\n      }\n      export function getDiscountCodesByOfferIdAsync(context: IContext, offerId: string | null):AsyncResult<DiscountCode[]> {\n        const request = createGetDiscountCodesByOfferIdInput(context.queryResultSettings, offerId, );\n        return executeAction<DiscountCode[]>(request, context);\n      }\n  \n      export function createGetDiscountCodesByKeywordInput(queryResultSettings: IQueryResultSettings, keyword: string | null, activeDate: Date): IDataServiceRequest {\n        const query = storeQuery().resultSettings(queryResultSettings);\n        return query.createDataServiceRequestForOperation('GetDiscountCodesByKeyword', true, DiscountCodeClass, 'true', {  bypassCache: 'none', returnEntity: 'DiscountCode'}, {keyword: keyword, activeDate: activeDate });\n      }\n      export function getDiscountCodesByKeywordAsync(context: IContext, keyword: string | null, activeDate: Date):AsyncResult<DiscountCode[]> {\n        const request = createGetDiscountCodesByKeywordInput(context.queryResultSettings, keyword, activeDate, );\n        return executeAction<DiscountCode[]>(request, context);\n      }\n  \n      export function createGetDistrictsInput(queryResultSettings: IQueryResultSettings, countryRegionId: string | null, stateProvinceId: string | null, countyId: string | null, cityName: string | null): IDataServiceRequest {\n        const query = storeQuery().resultSettings(queryResultSettings);\n        return query.createDataServiceRequestForOperation('GetDistricts', true, DistrictInfoClass, 'true', {  bypassCache: 'none', returnEntity: 'DistrictInfo'}, {countryRegionId: countryRegionId, stateProvinceId: stateProvinceId, countyId: countyId, cityName: cityName });\n      }\n      export function getDistrictsAsync(context: IContext, countryRegionId: string | null, stateProvinceId: string | null, countyId: string | null, cityName: string | null):AsyncResult<DistrictInfo[]> {\n        const request = createGetDistrictsInput(context.queryResultSettings, countryRegionId, stateProvinceId, countyId, cityName, );\n        return executeAction<DistrictInfo[]>(request, context);\n      }\n  \n      export function createGetHardwareStationProfilesInput(queryResultSettings: IQueryResultSettings): IDataServiceRequest {\n        const query = storeQuery().resultSettings(queryResultSettings);\n        return query.createDataServiceRequestForOperation('GetHardwareStationProfiles', true, HardwareStationProfileClass, 'true', {  bypassCache: 'none', returnEntity: 'HardwareStationProfile'}, { });\n      }\n      export function getHardwareStationProfilesAsync(context: IContext):AsyncResult<HardwareStationProfile[]> {\n        const request = createGetHardwareStationProfilesInput(context.queryResultSettings, );\n        return executeAction<HardwareStationProfile[]>(request, context);\n      }\n  \n      export function createGetHardwareProfileByIdInput(hardwareProfileId: string | null): IDataServiceRequest {\n        const query = storeQuery();\n        return query.createDataServiceRequestForOperation('GetHardwareProfileById', true, HardwareProfileClass, 'false', {  bypassCache: 'none', returnEntity: 'HardwareProfile'}, {hardwareProfileId: hardwareProfileId });\n      }\n      export function getHardwareProfileByIdAsync(context: IContext, hardwareProfileId: string | null):AsyncResult<HardwareProfile> {\n        const request = createGetHardwareProfileByIdInput(hardwareProfileId, );\n        return executeAction<HardwareProfile>(request, context);\n      }\n  \n      export function createGetLocalizedStringsInput(queryResultSettings: IQueryResultSettings, languageId: string | null, textId: number | null): IDataServiceRequest {\n        const query = storeQuery().resultSettings(queryResultSettings);\n        return query.createDataServiceRequestForOperation('GetLocalizedStrings', true, LocalizedStringClass, 'true', {  bypassCache: 'none', returnEntity: 'LocalizedString'}, {languageId: languageId, textId: textId });\n      }\n      export function getLocalizedStringsAsync(context: IContext, languageId: string | null, textId: number | null):AsyncResult<LocalizedString[]> {\n        const request = createGetLocalizedStringsInput(context.queryResultSettings, languageId, textId, );\n        return executeAction<LocalizedString[]>(request, context);\n      }\n  \n      export function createGetOperationPermissionByIdInput(operationId: number): IDataServiceRequest {\n        const query = storeQuery();\n        return query.createDataServiceRequestForOperation('GetOperationPermissionById', true, OperationPermissionClass, 'false', {  bypassCache: 'none', returnEntity: 'OperationPermission'}, {operationId: operationId });\n      }\n      export function getOperationPermissionByIdAsync(context: IContext, operationId: number):AsyncResult<OperationPermission> {\n        const request = createGetOperationPermissionByIdInput(operationId, );\n        return executeAction<OperationPermission>(request, context);\n      }\n  \n      export function createGetReasonCodesByIdInput(queryResultSettings: IQueryResultSettings, reasonCodeGroupId: string | null): IDataServiceRequest {\n        const query = storeQuery().resultSettings(queryResultSettings);\n        return query.createDataServiceRequestForOperation('GetReasonCodesById', true, ReasonCodeClass, 'true', {  bypassCache: 'none', returnEntity: 'ReasonCode'}, {reasonCodeGroupId: reasonCodeGroupId });\n      }\n      export function getReasonCodesByIdAsync(context: IContext, reasonCodeGroupId: string | null):AsyncResult<ReasonCode[]> {\n        const request = createGetReasonCodesByIdInput(context.queryResultSettings, reasonCodeGroupId, );\n        return executeAction<ReasonCode[]>(request, context);\n      }\n  \n      export function createSearchReportDataSetInput(reportId: string | null, parameters: CommerceProperty[] | null): IDataServiceRequest {\n        const query = storeQuery();\n        return query.createDataServiceRequestForOperation('SearchReportDataSet', true, ReportDataSetClass, 'false', {  bypassCache: 'none', returnEntity: 'ReportDataSet'}, {reportId: reportId, parameters: parameters });\n      }\n      export function searchReportDataSetAsync(context: IContext, reportId: string | null, parameters: CommerceProperty[] | null):AsyncResult<ReportDataSet> {\n        const request = createSearchReportDataSetInput(reportId, parameters, );\n        return executeAction<ReportDataSet>(request, context);\n      }\n  \n      export function createGetReportDataSetByIdInput(reportId: string | null): IDataServiceRequest {\n        const query = storeQuery();\n        return query.createDataServiceRequestForOperation('GetReportDataSetById', true, ReportDataSetClass, 'false', {  bypassCache: 'none', returnEntity: 'ReportDataSet'}, {reportId: reportId });\n      }\n      export function getReportDataSetByIdAsync(context: IContext, reportId: string | null):AsyncResult<ReportDataSet> {\n        const request = createGetReportDataSetByIdInput(reportId, );\n        return executeAction<ReportDataSet>(request, context);\n      }\n  \n      export function createGetSrsReportDataSetInput(reportId: string | null, parameters: CommerceProperty[] | null): IDataServiceRequest {\n        const query = storeQuery();\n        return query.createDataServiceRequestForOperation('GetSrsReportDataSet', true, ReportDataSetClass, 'false', {  bypassCache: 'none', returnEntity: 'ReportDataSet'}, {reportId: reportId, parameters: parameters });\n      }\n      export function getSrsReportDataSetAsync(context: IContext, reportId: string | null, parameters: CommerceProperty[] | null):AsyncResult<ReportDataSet> {\n        const request = createGetSrsReportDataSetInput(reportId, parameters, );\n        return executeAction<ReportDataSet>(request, context);\n      }\n  \n      export function createGetIncomeExpenseAccountsInput(queryResultSettings: IQueryResultSettings, incomeExpenseAccountType: number): IDataServiceRequest {\n        const query = storeQuery().resultSettings(queryResultSettings);\n        return query.createDataServiceRequestForOperation('GetIncomeExpenseAccounts', true, IncomeExpenseAccountClass, 'true', {  bypassCache: 'none', returnEntity: 'IncomeExpenseAccount'}, {incomeExpenseAccountType: incomeExpenseAccountType });\n      }\n      export function getIncomeExpenseAccountsAsync(context: IContext, incomeExpenseAccountType: number):AsyncResult<IncomeExpenseAccount[]> {\n        const request = createGetIncomeExpenseAccountsInput(context.queryResultSettings, incomeExpenseAccountType, );\n        return executeAction<IncomeExpenseAccount[]>(request, context);\n      }\n  \n      export function createGetStateProvincesInput(queryResultSettings: IQueryResultSettings, countryRegionId: string | null): IDataServiceRequest {\n        const query = storeQuery().resultSettings(queryResultSettings);\n        return query.createDataServiceRequestForOperation('GetStateProvinces', true, StateProvinceInfoClass, 'true', {  bypassCache: 'none', returnEntity: 'StateProvinceInfo'}, {countryRegionId: countryRegionId });\n      }\n      export function getStateProvincesAsync(context: IContext, countryRegionId: string | null):AsyncResult<StateProvinceInfo[]> {\n        const request = createGetStateProvincesInput(context.queryResultSettings, countryRegionId, );\n        return executeAction<StateProvinceInfo[]>(request, context);\n      }\n  \n      export function createGetZipCodesInput(queryResultSettings: IQueryResultSettings, countryRegionId: string | null, stateProvinceId: string | null, countyId: string | null, cityName: string | null, district: string | null): IDataServiceRequest {\n        const query = storeQuery().resultSettings(queryResultSettings);\n        return query.createDataServiceRequestForOperation('GetZipCodes', true, ZipCodeInfoClass, 'true', {  bypassCache: 'none', returnEntity: 'ZipCodeInfo'}, {countryRegionId: countryRegionId, stateProvinceId: stateProvinceId, countyId: countyId, cityName: cityName, district: district });\n      }\n      export function getZipCodesAsync(context: IContext, countryRegionId: string | null, stateProvinceId: string | null, countyId: string | null, cityName: string | null, district: string | null):AsyncResult<ZipCodeInfo[]> {\n        const request = createGetZipCodesInput(context.queryResultSettings, countryRegionId, stateProvinceId, countyId, cityName, district, );\n        return executeAction<ZipCodeInfo[]>(request, context);\n      }\n  \n      export function createGetAddressFromZipCodeInput(queryResultSettings: IQueryResultSettings, countryRegionId: string | null, zipPostalCode: string | null): IDataServiceRequest {\n        const query = storeQuery().resultSettings(queryResultSettings);\n        return query.createDataServiceRequestForOperation('GetAddressFromZipCode', true, ZipCodeInfoClass, 'true', {  bypassCache: 'none', returnEntity: 'ZipCodeInfo'}, {countryRegionId: countryRegionId, zipPostalCode: zipPostalCode });\n      }\n      export function getAddressFromZipCodeAsync(context: IContext, countryRegionId: string | null, zipPostalCode: string | null):AsyncResult<ZipCodeInfo[]> {\n        const request = createGetAddressFromZipCodeInput(context.queryResultSettings, countryRegionId, zipPostalCode, );\n        return executeAction<ZipCodeInfo[]>(request, context);\n      }\n  \n      export function createDisassembleKitTransactionsInput(kitTransaction: KitTransaction | null): IDataServiceRequest {\n        const query = storeQuery();\n        return query.createDataServiceRequestForOperation('DisassembleKitTransactions', true, KitTransactionClass, 'false', {  bypassCache: 'get', returnEntity: 'KitTransaction'}, {kitTransaction: kitTransaction });\n      }\n      export function disassembleKitTransactionsAsync(context: IContext, kitTransaction: KitTransaction | null):AsyncResult<KitTransaction> {\n        const request = createDisassembleKitTransactionsInput(kitTransaction, );\n        return executeAction<KitTransaction>(request, context);\n      }\n  \n      export function createIssueLoyaltyCardInput(loyaltyCard: LoyaltyCard | null): IDataServiceRequest {\n        const query = storeQuery();\n        return query.createDataServiceRequestForOperation('IssueLoyaltyCard', true, LoyaltyCardClass, 'false', {  bypassCache: 'get', returnEntity: 'LoyaltyCard'}, {loyaltyCard: loyaltyCard });\n      }\n      export function issueLoyaltyCardAsync(context: IContext, loyaltyCard: LoyaltyCard | null):AsyncResult<LoyaltyCard> {\n        const request = createIssueLoyaltyCardInput(loyaltyCard, );\n        return executeAction<LoyaltyCard>(request, context);\n      }\n  \n      export function createGetLoyaltyCardInput(cardNumber: string | null): IDataServiceRequest {\n        const query = storeQuery();\n        return query.createDataServiceRequestForOperation('GetLoyaltyCard', true, LoyaltyCardClass, 'false', {  bypassCache: 'none', returnEntity: 'LoyaltyCard'}, {cardNumber: cardNumber });\n      }\n      export function getLoyaltyCardAsync(context: IContext, cardNumber: string | null):AsyncResult<LoyaltyCard> {\n        const request = createGetLoyaltyCardInput(cardNumber, );\n        return executeAction<LoyaltyCard>(request, context);\n      }\n  \n      export function createGetCustomerLoyaltyCardsInput(queryResultSettings: IQueryResultSettings, accountNumber: string | null): IDataServiceRequest {\n        const query = storeQuery().resultSettings(queryResultSettings);\n        return query.createDataServiceRequestForOperation('GetCustomerLoyaltyCards', true, LoyaltyCardClass, 'true', {  bypassCache: 'none', returnEntity: 'LoyaltyCard'}, {accountNumber: accountNumber });\n      }\n      export function getCustomerLoyaltyCardsAsync(context: IContext, accountNumber: string | null):AsyncResult<LoyaltyCard[]> {\n        const request = createGetCustomerLoyaltyCardsInput(context.queryResultSettings, accountNumber, );\n        return executeAction<LoyaltyCard[]>(request, context);\n      }\n  \n      export function createGetLoyaltyCardTransactionsInput(queryResultSettings: IQueryResultSettings, cardNumber: string | null, rewardPointId: string | null): IDataServiceRequest {\n        const query = storeQuery().resultSettings(queryResultSettings);\n        return query.createDataServiceRequestForOperation('GetLoyaltyCardTransactions', true, LoyaltyCardTransactionClass, 'true', {  bypassCache: 'none', returnEntity: 'LoyaltyCardTransaction'}, {cardNumber: cardNumber, rewardPointId: rewardPointId });\n      }\n      export function getLoyaltyCardTransactionsAsync(context: IContext, cardNumber: string | null, rewardPointId: string | null):AsyncResult<LoyaltyCardTransaction[]> {\n        const request = createGetLoyaltyCardTransactionsInput(context.queryResultSettings, cardNumber, rewardPointId, );\n        return executeAction<LoyaltyCardTransaction[]>(request, context);\n      }\n  \n      export function createGetLoyaltyRewardPointsExpiringSoonInput(queryResultSettings: IQueryResultSettings, cardNumber: string | null, rewardPointId: string | null, daysToExpiry: number): IDataServiceRequest {\n        const query = storeQuery().resultSettings(queryResultSettings);\n        return query.createDataServiceRequestForOperation('GetLoyaltyRewardPointsExpiringSoon', true, LoyaltyRewardPointActivityClass, 'true', {  bypassCache: 'none', returnEntity: 'LoyaltyRewardPointActivity'}, {cardNumber: cardNumber, rewardPointId: rewardPointId, daysToExpiry: daysToExpiry });\n      }\n      export function getLoyaltyRewardPointsExpiringSoonAsync(context: IContext, cardNumber: string | null, rewardPointId: string | null, daysToExpiry: number):AsyncResult<LoyaltyRewardPointActivity[]> {\n        const request = createGetLoyaltyRewardPointsExpiringSoonInput(context.queryResultSettings, cardNumber, rewardPointId, daysToExpiry, );\n        return executeAction<LoyaltyRewardPointActivity[]>(request, context);\n      }\n  \n      export function createSearchJournalTransactionsInput(queryResultSettings: IQueryResultSettings, searchCriteria: TransactionSearchCriteria | null): IDataServiceRequest {\n        const query = storeQuery().resultSettings(queryResultSettings);\n        return query.createDataServiceRequestForOperation('SearchJournalTransactions', true, TransactionClass, 'true', {  bypassCache: 'none', returnEntity: 'Transaction'}, {searchCriteria: searchCriteria });\n      }\n      export function searchJournalTransactionsAsync(context: IContext, searchCriteria: TransactionSearchCriteria | null):AsyncResult<Transaction[]> {\n        const request = createSearchJournalTransactionsInput(context.queryResultSettings, searchCriteria, );\n        return executeAction<Transaction[]>(request, context);\n      }\n  \n      export function createGetGiftCardInput(giftCardId: string | null, tenderTypeId: string | null, pin: string | null, expirationMonth: number | null, expirationYear: number | null): IDataServiceRequest {\n        const query = storeQuery();\n        return query.createDataServiceRequestForOperation('GetGiftCard', true, GiftCardClass, 'false', {  bypassCache: 'none', returnEntity: 'GiftCard'}, {giftCardId: giftCardId, tenderTypeId: tenderTypeId, pin: pin, expirationMonth: expirationMonth, expirationYear: expirationYear });\n      }\n      export function getGiftCardAsync(context: IContext, giftCardId: string | null, tenderTypeId: string | null, pin: string | null, expirationMonth: number | null, expirationYear: number | null):AsyncResult<GiftCard> {\n        const request = createGetGiftCardInput(giftCardId, tenderTypeId, pin, expirationMonth, expirationYear, );\n        return executeAction<GiftCard>(request, context);\n      }\n  \n      export function createGetGiftCardInquiryInput(giftCardId: string | null): IDataServiceRequest {\n        const query = storeQuery();\n        return query.createDataServiceRequestForOperation('GetGiftCardInquiry', true, GiftCardClass, 'false', {  bypassCache: 'none', returnEntity: 'GiftCard'}, {giftCardId: giftCardId });\n      }\n      export function getGiftCardInquiryAsync(context: IContext, giftCardId: string | null):AsyncResult<GiftCard> {\n        const request = createGetGiftCardInquiryInput(giftCardId, );\n        return executeAction<GiftCard>(request, context);\n      }\n  \n      export function createGetNonSalesTransactionsInput(queryResultSettings: IQueryResultSettings, shiftId: string | null, shiftTerminalId: string | null, nonSalesTenderTypeValue: number): IDataServiceRequest {\n        const query = storeQuery().resultSettings(queryResultSettings);\n        return query.createDataServiceRequestForOperation('GetNonSalesTransactions', true, NonSalesTransactionClass, 'true', {  bypassCache: 'none', returnEntity: 'NonSalesTransaction'}, {shiftId: shiftId, shiftTerminalId: shiftTerminalId, nonSalesTenderTypeValue: nonSalesTenderTypeValue });\n      }\n      export function getNonSalesTransactionsAsync(context: IContext, shiftId: string | null, shiftTerminalId: string | null, nonSalesTenderTypeValue: number):AsyncResult<NonSalesTransaction[]> {\n        const request = createGetNonSalesTransactionsInput(context.queryResultSettings, shiftId, shiftTerminalId, nonSalesTenderTypeValue, );\n        return executeAction<NonSalesTransaction[]>(request, context);\n      }\n  \n      export function createCreateNonSalesTransactionInput(nonSalesTransaction: NonSalesTransaction | null): IDataServiceRequest {\n        const query = storeQuery();\n        return query.createDataServiceRequestForOperation('CreateNonSalesTransaction', true, NonSalesTransactionClass, 'false', {  bypassCache: 'get', returnEntity: 'NonSalesTransaction'}, {nonSalesTransaction: nonSalesTransaction });\n      }\n      export function createNonSalesTransactionAsync(context: IContext, nonSalesTransaction: NonSalesTransaction | null):AsyncResult<NonSalesTransaction> {\n        const request = createCreateNonSalesTransactionInput(nonSalesTransaction, );\n        return executeAction<NonSalesTransaction>(request, context);\n      }\n  \n      export function createCreateDropAndDeclareTransactionInput(dropAndDeclareTransaction: DropAndDeclareTransaction | null): IDataServiceRequest {\n        const query = storeQuery();\n        return query.createDataServiceRequestForOperation('CreateDropAndDeclareTransaction', true, DropAndDeclareTransactionClass, 'false', {  bypassCache: 'get', returnEntity: 'DropAndDeclareTransaction'}, {dropAndDeclareTransaction: dropAndDeclareTransaction });\n      }\n      export function createDropAndDeclareTransactionAsync(context: IContext, dropAndDeclareTransaction: DropAndDeclareTransaction | null):AsyncResult<DropAndDeclareTransaction> {\n        const request = createCreateDropAndDeclareTransactionInput(dropAndDeclareTransaction, );\n        return executeAction<DropAndDeclareTransaction>(request, context);\n      }\n  \n      export function createGetTaxOverridesInput(queryResultSettings: IQueryResultSettings, overrideBy: string | null): IDataServiceRequest {\n        const query = storeQuery().resultSettings(queryResultSettings);\n        return query.createDataServiceRequestForOperation('GetTaxOverrides', true, TaxOverrideClass, 'true', {  bypassCache: 'none', returnEntity: 'TaxOverride'}, {overrideBy: overrideBy });\n      }\n      export function getTaxOverridesAsync(context: IContext, overrideBy: string | null):AsyncResult<TaxOverride[]> {\n        const request = createGetTaxOverridesInput(context.queryResultSettings, overrideBy, );\n        return executeAction<TaxOverride[]>(request, context);\n      }\n  \n      export function createGetCustomerBalanceInput(accountNumber: string | null, invoiceAccountNumber: string | null): IDataServiceRequest {\n        const query = storeQuery();\n        return query.createDataServiceRequestForOperation('GetCustomerBalance', true, CustomerBalancesClass, 'false', {  bypassCache: 'none', returnEntity: 'CustomerBalances'}, {accountNumber: accountNumber, invoiceAccountNumber: invoiceAccountNumber });\n      }\n      export function getCustomerBalanceAsync(context: IContext, accountNumber: string | null, invoiceAccountNumber: string | null):AsyncResult<CustomerBalances> {\n        const request = createGetCustomerBalanceInput(accountNumber, invoiceAccountNumber, );\n        return executeAction<CustomerBalances>(request, context);\n      }\n  \n      export function createInitiateLinkToExistingCustomerInput(email: string | null, activationToken: string | null, emailTemplateId: string | null, emailProperties: NameValuePair[] | null): IDataServiceRequest {\n        const query = storeQuery();\n        return query.createDataServiceRequestForOperation('InitiateLinkToExistingCustomer', true, LinkToExistingCustomerResultClass, 'false', {  bypassCache: 'get', returnEntity: 'LinkToExistingCustomerResult'}, {email: email, ActivationToken: activationToken, emailTemplateId: emailTemplateId, emailProperties: emailProperties });\n      }\n      export function initiateLinkToExistingCustomerAsync(context: IContext, email: string | null, activationToken: string | null, emailTemplateId: string | null, emailProperties: NameValuePair[] | null):AsyncResult<LinkToExistingCustomerResult> {\n        const request = createInitiateLinkToExistingCustomerInput(email, activationToken, emailTemplateId, emailProperties, );\n        return executeAction<LinkToExistingCustomerResult>(request, context);\n      }\n  \n      export function createFinalizeLinkToExistingCustomerInput(email: string | null, activationToken: string | null): IDataServiceRequest {\n        const query = storeQuery();\n        return query.createDataServiceRequestForOperation('FinalizeLinkToExistingCustomer', true, LinkToExistingCustomerResultClass, 'false', {  bypassCache: 'get', returnEntity: 'LinkToExistingCustomerResult'}, {email: email, ActivationToken: activationToken });\n      }\n      export function finalizeLinkToExistingCustomerAsync(context: IContext, email: string | null, activationToken: string | null):AsyncResult<LinkToExistingCustomerResult> {\n        const request = createFinalizeLinkToExistingCustomerInput(email, activationToken, );\n        return executeAction<LinkToExistingCustomerResult>(request, context);\n      }\n  \n      export function createUnlinkFromExistingCustomerInput(): IDataServiceRequest {\n        const query = storeQuery();\n        return query.createDataServiceRequestForOperation('UnlinkFromExistingCustomer', true, '', '', {  bypassCache: 'get', returnEntity: ''}, { });\n      }\n      export function unlinkFromExistingCustomerAsync(context: IContext):AsyncResult<NullResult> {\n        const request = createUnlinkFromExistingCustomerInput();\n        return executeAction<NullResult>(request, context);\n      }\n  \n      export function createGetOfflineSyncStatusInput(queryResultSettings: IQueryResultSettings): IDataServiceRequest {\n        const query = storeQuery().resultSettings(queryResultSettings);\n        return query.createDataServiceRequestForOperation('GetOfflineSyncStatus', true, OfflineSyncStatsLineClass, 'true', {  bypassCache: 'none', returnEntity: 'OfflineSyncStatsLine'}, { });\n      }\n      export function getOfflineSyncStatusAsync(context: IContext):AsyncResult<OfflineSyncStatsLine[]> {\n        const request = createGetOfflineSyncStatusInput(context.queryResultSettings, );\n        return executeAction<OfflineSyncStatsLine[]>(request, context);\n      }\n  \n      export function createGetOfflinePendingTransactionCountInput(): IDataServiceRequest {\n        const query = storeQuery();\n        return query.createDataServiceRequestForOperation('GetOfflinePendingTransactionCount', true, '', 'false', {  bypassCache: 'none', returnEntity: ''}, { });\n      }\n      export function getOfflinePendingTransactionCountAsync(context: IContext):AsyncResult<number> {\n        const request = createGetOfflinePendingTransactionCountInput();\n        return executeAction<number>(request, context);\n      }\n  \n      export function createGetOfflinePendingTransactionCountByShiftInput(shiftId: number, shiftTerminalId: string | null): IDataServiceRequest {\n        const query = storeQuery();\n        return query.createDataServiceRequestForOperation('GetOfflinePendingTransactionCountByShift', true, '', 'false', {  bypassCache: 'none', returnEntity: ''}, {shiftId: shiftId, shiftTerminalId: shiftTerminalId });\n      }\n      export function getOfflinePendingTransactionCountByShiftAsync(context: IContext, shiftId: number, shiftTerminalId: string | null):AsyncResult<number> {\n        const request = createGetOfflinePendingTransactionCountByShiftInput(shiftId, shiftTerminalId, );\n        return executeAction<number>(request, context);\n      }\n  \n      export function createUpdateDownloadSessionInput(downloadSession: DownloadSession | null): IDataServiceRequest {\n        const query = storeQuery();\n        return query.createDataServiceRequestForOperation('UpdateDownloadSession', true, '', 'false', {  bypassCache: 'get', returnEntity: ''}, {downloadSession: downloadSession });\n      }\n      export function updateDownloadSessionAsync(context: IContext, downloadSession: DownloadSession | null):AsyncResult<boolean> {\n        const request = createUpdateDownloadSessionInput(downloadSession, );\n        return executeAction<boolean>(request, context);\n      }\n  \n      export function createUpdateApplicationVersionInput(appVersion: string | null): IDataServiceRequest {\n        const query = storeQuery();\n        return query.createDataServiceRequestForOperation('UpdateApplicationVersion', true, '', '', {  bypassCache: 'get', returnEntity: ''}, {appVersion: appVersion });\n      }\n      export function updateApplicationVersionAsync(context: IContext, appVersion: string | null):AsyncResult<NullResult> {\n        const request = createUpdateApplicationVersionInput(appVersion, );\n        return executeAction<NullResult>(request, context);\n      }\n  \n      export function createGetStorageAccessTokenForUploadInput(): IDataServiceRequest {\n        const query = storeQuery();\n        return query.createDataServiceRequestForOperation('GetStorageAccessTokenForUpload', true, StorageAccessTokenClass, 'false', {  bypassCache: 'none', returnEntity: 'StorageAccessToken'}, { });\n      }\n      export function getStorageAccessTokenForUploadAsync(context: IContext):AsyncResult<StorageAccessToken> {\n        const request = createGetStorageAccessTokenForUploadInput();\n        return executeAction<StorageAccessToken>(request, context);\n      }\n  \n      export function createGetBusinessProcessModelLibrariesInput(queryResultSettings: IQueryResultSettings): IDataServiceRequest {\n        const query = storeQuery().resultSettings(queryResultSettings);\n        return query.createDataServiceRequestForOperation('GetBusinessProcessModelLibraries', true, FrameworkClass, 'true', {  bypassCache: 'none', returnEntity: 'Framework'}, { });\n      }\n      export function getBusinessProcessModelLibrariesAsync(context: IContext):AsyncResult<Framework[]> {\n        const request = createGetBusinessProcessModelLibrariesInput(context.queryResultSettings, );\n        return executeAction<Framework[]>(request, context);\n      }\n  \n      export function createGetBusinessProcessModelLibraryInput(businessProcessModelFrameworkLineId: number, hierarchyDepth: number): IDataServiceRequest {\n        const query = storeQuery();\n        return query.createDataServiceRequestForOperation('GetBusinessProcessModelLibrary', true, FrameworkClass, 'false', {  bypassCache: 'none', returnEntity: 'Framework'}, {businessProcessModelFrameworkLineId: businessProcessModelFrameworkLineId, hierarchyDepth: hierarchyDepth });\n      }\n      export function getBusinessProcessModelLibraryAsync(context: IContext, businessProcessModelFrameworkLineId: number, hierarchyDepth: number):AsyncResult<Framework> {\n        const request = createGetBusinessProcessModelLibraryInput(businessProcessModelFrameworkLineId, hierarchyDepth, );\n        return executeAction<Framework>(request, context);\n      }\n  \n      export function createSearchTaskGuidesByTitleInput(queryResultSettings: IQueryResultSettings, businessProcessModelFrameworkLineId: number, taskGuideSearchText: string | null, queryTypeValue: number): IDataServiceRequest {\n        const query = storeQuery().resultSettings(queryResultSettings);\n        return query.createDataServiceRequestForOperation('SearchTaskGuidesByTitle', true, TaskGuidesSearchResultClass, 'true', {  bypassCache: 'none', returnEntity: 'TaskGuidesSearchResult'}, {businessProcessModelFrameworkLineId: businessProcessModelFrameworkLineId, taskGuideSearchText: taskGuideSearchText, queryTypeValue: queryTypeValue });\n      }\n      export function searchTaskGuidesByTitleAsync(context: IContext, businessProcessModelFrameworkLineId: number, taskGuideSearchText: string | null, queryTypeValue: number):AsyncResult<TaskGuidesSearchResult[]> {\n        const request = createSearchTaskGuidesByTitleInput(context.queryResultSettings, businessProcessModelFrameworkLineId, taskGuideSearchText, queryTypeValue, );\n        return executeAction<TaskGuidesSearchResult[]>(request, context);\n      }\n  \n      export function createGenerateBusinessProcessModelPackageInput(taskRecording: Recording | null): IDataServiceRequest {\n        const query = storeQuery();\n        return query.createDataServiceRequestForOperation('GenerateBusinessProcessModelPackage', true, '', 'false', {  bypassCache: 'get', returnEntity: ''}, {taskRecording: taskRecording });\n      }\n      export function generateBusinessProcessModelPackageAsync(context: IContext, taskRecording: Recording | null):AsyncResult<string> {\n        const request = createGenerateBusinessProcessModelPackageInput(taskRecording, );\n        return executeAction<string>(request, context);\n      }\n  \n      export function createDownloadRecordingInput(businessProcessModelLineId: number): IDataServiceRequest {\n        const query = storeQuery();\n        return query.createDataServiceRequestForOperation('DownloadRecording', true, RecordingClass, 'false', {  bypassCache: 'get', returnEntity: 'Recording'}, {businessProcessModelLineId: businessProcessModelLineId });\n      }\n      export function downloadRecordingAsync(context: IContext, businessProcessModelLineId: number):AsyncResult<Recording> {\n        const request = createDownloadRecordingInput(businessProcessModelLineId, );\n        return executeAction<Recording>(request, context);\n      }\n  \n      export function createLoadRecordingFromFileInput(recordingUrl: string | null): IDataServiceRequest {\n        const query = storeQuery();\n        return query.createDataServiceRequestForOperation('LoadRecordingFromFile', true, RecordingClass, 'false', {  bypassCache: 'get', returnEntity: 'Recording'}, {recordingUrl: recordingUrl });\n      }\n      export function loadRecordingFromFileAsync(context: IContext, recordingUrl: string | null):AsyncResult<Recording> {\n        const request = createLoadRecordingFromFileInput(recordingUrl, );\n        return executeAction<Recording>(request, context);\n      }\n  \n      export function createGenerateRecordingFileInput(taskRecording: Recording | null): IDataServiceRequest {\n        const query = storeQuery();\n        return query.createDataServiceRequestForOperation('GenerateRecordingFile', true, '', 'false', {  bypassCache: 'get', returnEntity: ''}, {taskRecording: taskRecording });\n      }\n      export function generateRecordingFileAsync(context: IContext, taskRecording: Recording | null):AsyncResult<string> {\n        const request = createGenerateRecordingFileInput(taskRecording, );\n        return executeAction<string>(request, context);\n      }\n  \n      export function createGenerateTrainingDocumentInput(taskRecording: Recording | null): IDataServiceRequest {\n        const query = storeQuery();\n        return query.createDataServiceRequestForOperation('GenerateTrainingDocument', true, '', 'false', {  bypassCache: 'get', returnEntity: ''}, {taskRecording: taskRecording });\n      }\n      export function generateTrainingDocumentAsync(context: IContext, taskRecording: Recording | null):AsyncResult<string> {\n        const request = createGenerateTrainingDocumentInput(taskRecording, );\n        return executeAction<string>(request, context);\n      }\n  \n      export function createGenerateRecordingBundleInput(taskRecording: Recording | null): IDataServiceRequest {\n        const query = storeQuery();\n        return query.createDataServiceRequestForOperation('GenerateRecordingBundle', true, '', 'false', {  bypassCache: 'get', returnEntity: ''}, {taskRecording: taskRecording });\n      }\n      export function generateRecordingBundleAsync(context: IContext, taskRecording: Recording | null):AsyncResult<string> {\n        const request = createGenerateRecordingBundleInput(taskRecording, );\n        return executeAction<string>(request, context);\n      }\n  \n      export function createUploadRecordingInput(taskRecording: Recording | null, businessProcessModelLineId: number): IDataServiceRequest {\n        const query = storeQuery();\n        return query.createDataServiceRequestForOperation('UploadRecording', true, '', '', {  bypassCache: 'get', returnEntity: ''}, {taskRecording: taskRecording, businessProcessModelLineId: businessProcessModelLineId });\n      }\n      export function uploadRecordingAsync(context: IContext, taskRecording: Recording | null, businessProcessModelLineId: number):AsyncResult<NullResult> {\n        const request = createUploadRecordingInput(taskRecording, businessProcessModelLineId, );\n        return executeAction<NullResult>(request, context);\n      }\n  \n      export function createGetAttributeDefinitionsInput(queryResultSettings: IQueryResultSettings, attributeDefinitionCriteria: AttributeDefinitionCriteria | null): IDataServiceRequest {\n        const query = storeQuery().resultSettings(queryResultSettings);\n        return query.createDataServiceRequestForOperation('GetAttributeDefinitions', true, AttributeDefinitionClass, 'true', {  bypassCache: 'none', returnEntity: 'AttributeDefinition'}, {attributeDefinitionCriteria: attributeDefinitionCriteria });\n      }\n      export function getAttributeDefinitionsAsync(context: IContext, attributeDefinitionCriteria: AttributeDefinitionCriteria | null):AsyncResult<AttributeDefinition[]> {\n        const request = createGetAttributeDefinitionsInput(context.queryResultSettings, attributeDefinitionCriteria, );\n        return executeAction<AttributeDefinition[]>(request, context);\n      }\n  \n      export function createGetAttributeGroupDefinitionsInput(queryResultSettings: IQueryResultSettings, attributeGroupDefinitionCriteria: AttributeGroupDefinitionCriteria | null): IDataServiceRequest {\n        const query = storeQuery().resultSettings(queryResultSettings);\n        return query.createDataServiceRequestForOperation('GetAttributeGroupDefinitions', true, AttributeGroupDefinitionClass, 'true', {  bypassCache: 'none', returnEntity: 'AttributeGroupDefinition'}, {attributeGroupDefinitionCriteria: attributeGroupDefinitionCriteria });\n      }\n      export function getAttributeGroupDefinitionsAsync(context: IContext, attributeGroupDefinitionCriteria: AttributeGroupDefinitionCriteria | null):AsyncResult<AttributeGroupDefinition[]> {\n        const request = createGetAttributeGroupDefinitionsInput(context.queryResultSettings, attributeGroupDefinitionCriteria, );\n        return executeAction<AttributeGroupDefinition[]>(request, context);\n      }\n  \n      export function createSaveFiscalTransactionInput(fiscalTransaction: FiscalTransaction | null): IDataServiceRequest {\n        const query = storeQuery();\n        return query.createDataServiceRequestForOperation('SaveFiscalTransaction', true, '', '', {  bypassCache: 'get', returnEntity: ''}, {fiscalTransaction: fiscalTransaction });\n      }\n      export function saveFiscalTransactionAsync(context: IContext, fiscalTransaction: FiscalTransaction | null):AsyncResult<NullResult> {\n        const request = createSaveFiscalTransactionInput(fiscalTransaction, );\n        return executeAction<NullResult>(request, context);\n      }\n  \n      export function createValidatePrintReceiptCopyAllowedInput(salesOrderToPrint: SalesOrder | null): IDataServiceRequest {\n        const query = storeQuery();\n        return query.createDataServiceRequestForOperation('ValidatePrintReceiptCopyAllowed', true, '', '', {  bypassCache: 'get', returnEntity: ''}, {salesOrderToPrint: salesOrderToPrint });\n      }\n      export function validatePrintReceiptCopyAllowedAsync(context: IContext, salesOrderToPrint: SalesOrder | null):AsyncResult<NullResult> {\n        const request = createValidatePrintReceiptCopyAllowedInput(salesOrderToPrint, );\n        return executeAction<NullResult>(request, context);\n      }\n  \n      export function createRegisterAuditEventInput(auditEvent: AuditEvent | null): IDataServiceRequest {\n        const query = storeQuery();\n        return query.createDataServiceRequestForOperation('RegisterAuditEvent', true, '', '', {  bypassCache: 'get', returnEntity: ''}, {auditEvent: auditEvent });\n      }\n      export function registerAuditEventAsync(context: IContext, auditEvent: AuditEvent | null):AsyncResult<NullResult> {\n        const request = createRegisterAuditEventInput(auditEvent, );\n        return executeAction<NullResult>(request, context);\n      }\n  \n      export function createRegisterAndGetAuditEventInput(auditEvent: AuditEvent | null): IDataServiceRequest {\n        const query = storeQuery();\n        return query.createDataServiceRequestForOperation('RegisterAndGetAuditEvent', true, AuditEventClass, 'false', {  bypassCache: 'get', returnEntity: 'AuditEvent'}, {auditEvent: auditEvent });\n      }\n      export function registerAndGetAuditEventAsync(context: IContext, auditEvent: AuditEvent | null):AsyncResult<AuditEvent> {\n        const request = createRegisterAndGetAuditEventInput(auditEvent, );\n        return executeAction<AuditEvent>(request, context);\n      }\n  \n      export function createGetInventoryAvailableToPromiseInput(queryResultSettings: IQueryResultSettings, productId: number, itemId: string | null, inventLocationId: string | null): IDataServiceRequest {\n        const query = storeQuery().resultSettings(queryResultSettings);\n        return query.createDataServiceRequestForOperation('GetInventoryAvailableToPromise', true, InventoryAvailableToPromiseClass, 'true', {  bypassCache: 'none', returnEntity: 'InventoryAvailableToPromise'}, {productId: productId, itemId: itemId, inventLocationId: inventLocationId });\n      }\n      export function getInventoryAvailableToPromiseAsync(context: IContext, productId: number, itemId: string | null, inventLocationId: string | null):AsyncResult<InventoryAvailableToPromise[]> {\n        const request = createGetInventoryAvailableToPromiseInput(context.queryResultSettings, productId, itemId, inventLocationId, );\n        return executeAction<InventoryAvailableToPromise[]>(request, context);\n      }\n  \n      export function createGetSalesOrdersWithNoFiscalTransactionsInput(queryResultSettings: IQueryResultSettings, storeNumber: string | null, terminalId: string | null): IDataServiceRequest {\n        const query = storeQuery().resultSettings(queryResultSettings);\n        return query.createDataServiceRequestForOperation('GetSalesOrdersWithNoFiscalTransactions', true, SalesOrderClass, 'true', {  bypassCache: 'none', returnEntity: 'SalesOrder'}, {storeNumber: storeNumber, terminalId: terminalId });\n      }\n      export function getSalesOrdersWithNoFiscalTransactionsAsync(context: IContext, storeNumber: string | null, terminalId: string | null):AsyncResult<SalesOrder[]> {\n        const request = createGetSalesOrdersWithNoFiscalTransactionsInput(context.queryResultSettings, storeNumber, terminalId, );\n        return executeAction<SalesOrder[]>(request, context);\n      }\n  \n      export function createGetNotificationsInput(queryResultSettings: IQueryResultSettings, subscribedOperations: number[]): IDataServiceRequest {\n        const query = storeQuery().resultSettings(queryResultSettings);\n        return query.createDataServiceRequestForOperation('GetNotifications', true, NotificationItemClass, 'true', {  bypassCache: 'none', returnEntity: 'NotificationItem'}, {subscribedOperations: subscribedOperations });\n      }\n      export function getNotificationsAsync(context: IContext, subscribedOperations: number[]):AsyncResult<NotificationItem[]> {\n        const request = createGetNotificationsInput(context.queryResultSettings, subscribedOperations, );\n        return executeAction<NotificationItem[]>(request, context);\n      }\n  \n      export function createAcknowledgeNotificationsInput(lastPullDateTime: Date): IDataServiceRequest {\n        const query = storeQuery();\n        return query.createDataServiceRequestForOperation('AcknowledgeNotifications', true, '', '', {  bypassCache: 'get', returnEntity: ''}, {lastPullDateTime: lastPullDateTime });\n      }\n      export function acknowledgeNotificationsAsync(context: IContext, lastPullDateTime: Date):AsyncResult<NullResult> {\n        const request = createAcknowledgeNotificationsInput(lastPullDateTime, );\n        return executeAction<NullResult>(request, context);\n      }\n  \n      export function createGetFiscalIntegrationFiscalDocumentInput(hardwareProfileId: string | null, functionalityProfileGroupId: string | null, fiscalIntegrationDocumentRetrievalCriteria: FiscalIntegrationDocumentRetrievalCriteria | null, connectorType: number | null): IDataServiceRequest {\n        const query = storeQuery();\n        return query.createDataServiceRequestForOperation('GetFiscalIntegrationFiscalDocument', true, FiscalIntegrationDocumentClass, 'false', {  bypassCache: 'none', returnEntity: 'FiscalIntegrationDocument'}, {hardwareProfileId: hardwareProfileId, functionalityProfileGroupId: functionalityProfileGroupId, fiscalIntegrationDocumentRetrievalCriteria: fiscalIntegrationDocumentRetrievalCriteria, connectorType: connectorType });\n      }\n      export function getFiscalIntegrationFiscalDocumentAsync(context: IContext, hardwareProfileId: string | null, functionalityProfileGroupId: string | null, fiscalIntegrationDocumentRetrievalCriteria: FiscalIntegrationDocumentRetrievalCriteria | null, connectorType: number | null):AsyncResult<FiscalIntegrationDocument> {\n        const request = createGetFiscalIntegrationFiscalDocumentInput(hardwareProfileId, functionalityProfileGroupId, fiscalIntegrationDocumentRetrievalCriteria, connectorType, );\n        return executeAction<FiscalIntegrationDocument>(request, context);\n      }\n  \n      export function createGetFiscalIntegrationNonFiscalDocumentInput(hardwareProfileId: string | null, functionalityProfileGroupId: string | null, fiscalIntegrationDocumentRetrievalCriteria: FiscalIntegrationDocumentRetrievalCriteria | null, connectorType: number | null): IDataServiceRequest {\n        const query = storeQuery();\n        return query.createDataServiceRequestForOperation('GetFiscalIntegrationNonFiscalDocument', true, FiscalIntegrationDocumentClass, 'false', {  bypassCache: 'none', returnEntity: 'FiscalIntegrationDocument'}, {hardwareProfileId: hardwareProfileId, functionalityProfileGroupId: functionalityProfileGroupId, fiscalIntegrationDocumentRetrievalCriteria: fiscalIntegrationDocumentRetrievalCriteria, connectorType: connectorType });\n      }\n      export function getFiscalIntegrationNonFiscalDocumentAsync(context: IContext, hardwareProfileId: string | null, functionalityProfileGroupId: string | null, fiscalIntegrationDocumentRetrievalCriteria: FiscalIntegrationDocumentRetrievalCriteria | null, connectorType: number | null):AsyncResult<FiscalIntegrationDocument> {\n        const request = createGetFiscalIntegrationNonFiscalDocumentInput(hardwareProfileId, functionalityProfileGroupId, fiscalIntegrationDocumentRetrievalCriteria, connectorType, );\n        return executeAction<FiscalIntegrationDocument>(request, context);\n      }\n  \n      export function createGetFiscalIntegrationFiscalServiceSetupDocumentInput(hardwareProfileId: string | null, functionalityProfileGroupId: string | null, connectorType: number | null): IDataServiceRequest {\n        const query = storeQuery();\n        return query.createDataServiceRequestForOperation('GetFiscalIntegrationFiscalServiceSetupDocument', true, FiscalIntegrationDocumentClass, 'false', {  bypassCache: 'none', returnEntity: 'FiscalIntegrationDocument'}, {hardwareProfileId: hardwareProfileId, functionalityProfileGroupId: functionalityProfileGroupId, connectorType: connectorType });\n      }\n      export function getFiscalIntegrationFiscalServiceSetupDocumentAsync(context: IContext, hardwareProfileId: string | null, functionalityProfileGroupId: string | null, connectorType: number | null):AsyncResult<FiscalIntegrationDocument> {\n        const request = createGetFiscalIntegrationFiscalServiceSetupDocumentInput(hardwareProfileId, functionalityProfileGroupId, connectorType, );\n        return executeAction<FiscalIntegrationDocument>(request, context);\n      }\n  \n      export function createGetFiscalIntegrationFiscalServiceReadDataDocumentInput(hardwareProfileId: string | null, functionalityProfileGroupId: string | null, connectorType: number | null): IDataServiceRequest {\n        const query = storeQuery();\n        return query.createDataServiceRequestForOperation('GetFiscalIntegrationFiscalServiceReadDataDocument', true, FiscalIntegrationDocumentClass, 'false', {  bypassCache: 'none', returnEntity: 'FiscalIntegrationDocument'}, {hardwareProfileId: hardwareProfileId, functionalityProfileGroupId: functionalityProfileGroupId, connectorType: connectorType });\n      }\n      export function getFiscalIntegrationFiscalServiceReadDataDocumentAsync(context: IContext, hardwareProfileId: string | null, functionalityProfileGroupId: string | null, connectorType: number | null):AsyncResult<FiscalIntegrationDocument> {\n        const request = createGetFiscalIntegrationFiscalServiceReadDataDocumentInput(hardwareProfileId, functionalityProfileGroupId, connectorType, );\n        return executeAction<FiscalIntegrationDocument>(request, context);\n      }\n  \n      export function createProcessFiscalIntegrationFiscalServiceReadDataResultInput(hardwareProfileId: string | null, functionalityProfileGroupId: string | null, documentToProcess: string | null, connectorType: number | null): IDataServiceRequest {\n        const query = storeQuery();\n        return query.createDataServiceRequestForOperation('ProcessFiscalIntegrationFiscalServiceReadDataResult', true, '', '', {  bypassCache: 'get', returnEntity: ''}, {hardwareProfileId: hardwareProfileId, functionalityProfileGroupId: functionalityProfileGroupId, documentToProcess: documentToProcess, connectorType: connectorType });\n      }\n      export function processFiscalIntegrationFiscalServiceReadDataResultAsync(context: IContext, hardwareProfileId: string | null, functionalityProfileGroupId: string | null, documentToProcess: string | null, connectorType: number | null):AsyncResult<NullResult> {\n        const request = createProcessFiscalIntegrationFiscalServiceReadDataResultInput(hardwareProfileId, functionalityProfileGroupId, documentToProcess, connectorType, );\n        return executeAction<NullResult>(request, context);\n      }\n  \n      export function createSaveFiscalIntegrationRegistrationResultInput(hardwareProfileId: string | null, functionalityProfileGroupId: string | null, registrationResult: FiscalIntegrationRegistrationResult | null, connectorType: number | null): IDataServiceRequest {\n        const query = storeQuery();\n        return query.createDataServiceRequestForOperation('SaveFiscalIntegrationRegistrationResult', true, '', '', {  bypassCache: 'get', returnEntity: ''}, {hardwareProfileId: hardwareProfileId, functionalityProfileGroupId: functionalityProfileGroupId, registrationResult: registrationResult, connectorType: connectorType });\n      }\n      export function saveFiscalIntegrationRegistrationResultAsync(context: IContext, hardwareProfileId: string | null, functionalityProfileGroupId: string | null, registrationResult: FiscalIntegrationRegistrationResult | null, connectorType: number | null):AsyncResult<NullResult> {\n        const request = createSaveFiscalIntegrationRegistrationResultInput(hardwareProfileId, functionalityProfileGroupId, registrationResult, connectorType, );\n        return executeAction<NullResult>(request, context);\n      }\n  \n      export function createGetFiscalIntegrationRegistrationProcessInput(): IDataServiceRequest {\n        const query = storeQuery();\n        return query.createDataServiceRequestForOperation('GetFiscalIntegrationRegistrationProcess', true, FiscalIntegrationRegistrationProcessClass, 'false', {  bypassCache: 'none', returnEntity: 'FiscalIntegrationRegistrationProcess'}, { });\n      }\n      export function getFiscalIntegrationRegistrationProcessAsync(context: IContext):AsyncResult<FiscalIntegrationRegistrationProcess> {\n        const request = createGetFiscalIntegrationRegistrationProcessInput();\n        return executeAction<FiscalIntegrationRegistrationProcess>(request, context);\n      }\n  \n      export function createGetChannelSupportedFiscalIntegrationEventsByGroupInput(functionalityProfileGroupId: string | null): IDataServiceRequest {\n        const query = storeQuery();\n        return query.createDataServiceRequestForOperation('GetChannelSupportedFiscalIntegrationEventsByGroup', true, FiscalIntegrationSupportedEventsClass, 'false', {  bypassCache: 'none', returnEntity: 'FiscalIntegrationSupportedEvents'}, {functionalityProfileGroupId: functionalityProfileGroupId });\n      }\n      export function getChannelSupportedFiscalIntegrationEventsByGroupAsync(context: IContext, functionalityProfileGroupId: string | null):AsyncResult<FiscalIntegrationSupportedEvents> {\n        const request = createGetChannelSupportedFiscalIntegrationEventsByGroupInput(functionalityProfileGroupId, );\n        return executeAction<FiscalIntegrationSupportedEvents>(request, context);\n      }\n  \n      export function createGetFiscalIntegrationTechnicalProfilesInput(queryResultSettings: IQueryResultSettings, hardwareProfileId: string | null): IDataServiceRequest {\n        const query = storeQuery().resultSettings(queryResultSettings);\n        return query.createDataServiceRequestForOperation('GetFiscalIntegrationTechnicalProfiles', true, FiscalIntegrationTechnicalProfileClass, 'true', {  bypassCache: 'none', returnEntity: 'FiscalIntegrationTechnicalProfile'}, {hardwareProfileId: hardwareProfileId });\n      }\n      export function getFiscalIntegrationTechnicalProfilesAsync(context: IContext, hardwareProfileId: string | null):AsyncResult<FiscalIntegrationTechnicalProfile[]> {\n        const request = createGetFiscalIntegrationTechnicalProfilesInput(context.queryResultSettings, hardwareProfileId, );\n        return executeAction<FiscalIntegrationTechnicalProfile[]>(request, context);\n      }\n  \n      export function createGetFiscalIntegrationTechnicalProfilesByFunctionalityGroupIdsInput(queryResultSettings: IQueryResultSettings, hardwareProfileId: string | null, functionalityProfileGroupId: string[] | null): IDataServiceRequest {\n        const query = storeQuery().resultSettings(queryResultSettings);\n        return query.createDataServiceRequestForOperation('GetFiscalIntegrationTechnicalProfilesByFunctionalityGroupIds', true, FiscalIntegrationTechnicalProfileClass, 'true', {  bypassCache: 'none', returnEntity: 'FiscalIntegrationTechnicalProfile'}, {hardwareProfileId: hardwareProfileId, functionalityProfileGroupId: functionalityProfileGroupId });\n      }\n      export function getFiscalIntegrationTechnicalProfilesByFunctionalityGroupIdsAsync(context: IContext, hardwareProfileId: string | null, functionalityProfileGroupId: string[] | null):AsyncResult<FiscalIntegrationTechnicalProfile[]> {\n        const request = createGetFiscalIntegrationTechnicalProfilesByFunctionalityGroupIdsInput(context.queryResultSettings, hardwareProfileId, functionalityProfileGroupId, );\n        return executeAction<FiscalIntegrationTechnicalProfile[]>(request, context);\n      }\n  \n      export function createBackupFiscalRegistrationProcessContextInput(terminalId: string | null, storeNumber: string | null, channelId: number, fiscalProcessCompleted: boolean, fiscalIntegrationSerializedContext: string | null): IDataServiceRequest {\n        const query = storeQuery();\n        return query.createDataServiceRequestForOperation('BackupFiscalRegistrationProcessContext', true, '', '', {  bypassCache: 'get', returnEntity: ''}, {terminalId: terminalId, storeNumber: storeNumber, channelId: channelId, fiscalProcessCompleted: fiscalProcessCompleted, fiscalIntegrationSerializedContext: fiscalIntegrationSerializedContext });\n      }\n      export function backupFiscalRegistrationProcessContextAsync(context: IContext, terminalId: string | null, storeNumber: string | null, channelId: number, fiscalProcessCompleted: boolean, fiscalIntegrationSerializedContext: string | null):AsyncResult<NullResult> {\n        const request = createBackupFiscalRegistrationProcessContextInput(terminalId, storeNumber, channelId, fiscalProcessCompleted, fiscalIntegrationSerializedContext, );\n        return executeAction<NullResult>(request, context);\n      }\n  \n      export function createGetActiveFiscalRegistrationProcessContextBackupInput(terminalId: string | null, storeNumber: string | null, channelId: number): IDataServiceRequest {\n        const query = storeQuery();\n        return query.createDataServiceRequestForOperation('GetActiveFiscalRegistrationProcessContextBackup', true, '', 'false', {  bypassCache: 'none', returnEntity: ''}, {terminalId: terminalId, storeNumber: storeNumber, channelId: channelId });\n      }\n      export function getActiveFiscalRegistrationProcessContextBackupAsync(context: IContext, terminalId: string | null, storeNumber: string | null, channelId: number):AsyncResult<string> {\n        const request = createGetActiveFiscalRegistrationProcessContextBackupInput(terminalId, storeNumber, channelId, );\n        return executeAction<string>(request, context);\n      }\n  \n      export function createGetFiscalIntegrationTechnicalProfilesBySearchCriteriaInput(queryResultSettings: IQueryResultSettings, hardwareProfileId: string | null, fiscalIntegrationTechnicalProfileSearchCriteria: FiscalIntegrationTechnicalProfileSearchCriteria | null): IDataServiceRequest {\n        const query = storeQuery().resultSettings(queryResultSettings);\n        return query.createDataServiceRequestForOperation('GetFiscalIntegrationTechnicalProfilesBySearchCriteria', true, FiscalIntegrationTechnicalProfileClass, 'true', {  bypassCache: 'none', returnEntity: 'FiscalIntegrationTechnicalProfile'}, {hardwareProfileId: hardwareProfileId, fiscalIntegrationTechnicalProfileSearchCriteria: fiscalIntegrationTechnicalProfileSearchCriteria });\n      }\n      export function getFiscalIntegrationTechnicalProfilesBySearchCriteriaAsync(context: IContext, hardwareProfileId: string | null, fiscalIntegrationTechnicalProfileSearchCriteria: FiscalIntegrationTechnicalProfileSearchCriteria | null):AsyncResult<FiscalIntegrationTechnicalProfile[]> {\n        const request = createGetFiscalIntegrationTechnicalProfilesBySearchCriteriaInput(context.queryResultSettings, hardwareProfileId, fiscalIntegrationTechnicalProfileSearchCriteria, );\n        return executeAction<FiscalIntegrationTechnicalProfile[]>(request, context);\n      }\n  \n      export function createGetFiscalIntegrationServiceStatusInput(fiscalIntegrationServiceInfo: FiscalIntegrationServiceInfo | null): IDataServiceRequest {\n        const query = storeQuery();\n        return query.createDataServiceRequestForOperation('GetFiscalIntegrationServiceStatus', true, FiscalIntegrationServiceStatusClass, 'false', {  bypassCache: 'none', returnEntity: 'FiscalIntegrationServiceStatus'}, {fiscalIntegrationServiceInfo: fiscalIntegrationServiceInfo });\n      }\n      export function getFiscalIntegrationServiceStatusAsync(context: IContext, fiscalIntegrationServiceInfo: FiscalIntegrationServiceInfo | null):AsyncResult<FiscalIntegrationServiceStatus> {\n        const request = createGetFiscalIntegrationServiceStatusInput(fiscalIntegrationServiceInfo, );\n        return executeAction<FiscalIntegrationServiceStatus>(request, context);\n      }\n  \n      export function createSubmitFiscalIntegrationDocumentInput(documentToSubmit: string | null, fiscalIntegrationServiceInfo: FiscalIntegrationServiceInfo | null): IDataServiceRequest {\n        const query = storeQuery();\n        return query.createDataServiceRequestForOperation('SubmitFiscalIntegrationDocument', true, FiscalIntegrationServiceCommunicationResultClass, 'false', {  bypassCache: 'get', returnEntity: 'FiscalIntegrationServiceCommunicationResult'}, {documentToSubmit: documentToSubmit, fiscalIntegrationServiceInfo: fiscalIntegrationServiceInfo });\n      }\n      export function submitFiscalIntegrationDocumentAsync(context: IContext, documentToSubmit: string | null, fiscalIntegrationServiceInfo: FiscalIntegrationServiceInfo | null):AsyncResult<FiscalIntegrationServiceCommunicationResult> {\n        const request = createSubmitFiscalIntegrationDocumentInput(documentToSubmit, fiscalIntegrationServiceInfo, );\n        return executeAction<FiscalIntegrationServiceCommunicationResult>(request, context);\n      }\n  \n      export function createGetFeatureStatesInput(queryResultSettings: IQueryResultSettings, featureNames: string[] | null): IDataServiceRequest {\n        const query = storeQuery().resultSettings(queryResultSettings);\n        return query.createDataServiceRequestForOperation('GetFeatureStates', true, FeatureStateClass, 'true', {  bypassCache: 'none', returnEntity: 'FeatureState'}, {featureNames: featureNames });\n      }\n      export function getFeatureStatesAsync(context: IContext, featureNames: string[] | null):AsyncResult<FeatureState[]> {\n        const request = createGetFeatureStatesInput(context.queryResultSettings, featureNames, );\n        return executeAction<FeatureState[]>(request, context);\n      }\n  \n      export function createGetLastFiscalIntegrationSequentialSignaturesInput(queryResultSettings: IQueryResultSettings, sequentialKeys: string[] | null): IDataServiceRequest {\n        const query = storeQuery().resultSettings(queryResultSettings);\n        return query.createDataServiceRequestForOperation('GetLastFiscalIntegrationSequentialSignatures', true, FiscalIntegrationSequentialSignatureDataClass, 'true', {  bypassCache: 'none', returnEntity: 'FiscalIntegrationSequentialSignatureData'}, {sequentialKeys: sequentialKeys });\n      }\n      export function getLastFiscalIntegrationSequentialSignaturesAsync(context: IContext, sequentialKeys: string[] | null):AsyncResult<FiscalIntegrationSequentialSignatureData[]> {\n        const request = createGetLastFiscalIntegrationSequentialSignaturesInput(context.queryResultSettings, sequentialKeys, );\n        return executeAction<FiscalIntegrationSequentialSignatureData[]>(request, context);\n      }\n  \n      export function createGetAvailablePromotionsInput(queryResultSettings: IQueryResultSettings, searchCriteria: DiscountsSearchCriteria | null): IDataServiceRequest {\n        const query = storeQuery().resultSettings(queryResultSettings);\n        return query.createDataServiceRequestForOperation('GetAvailablePromotions', true, PromotionClass, 'true', {  bypassCache: 'none', returnEntity: 'Promotion'}, {searchCriteria: searchCriteria });\n      }\n      export function getAvailablePromotionsAsync(context: IContext, searchCriteria: DiscountsSearchCriteria | null):AsyncResult<Promotion[]> {\n        const request = createGetAvailablePromotionsInput(context.queryResultSettings, searchCriteria, );\n        return executeAction<Promotion[]>(request, context);\n      }\n  \n      export function createCreateFiscalTransactionInput(functionalityProfileGroupId: string | null, registrationResult: FiscalIntegrationRegistrationResult | null, connectorType: number): IDataServiceRequest {\n        const query = storeQuery();\n        return query.createDataServiceRequestForOperation('CreateFiscalTransaction', true, FiscalTransactionClass, 'false', {  bypassCache: 'get', returnEntity: 'FiscalTransaction'}, {functionalityProfileGroupId: functionalityProfileGroupId, registrationResult: registrationResult, connectorType: connectorType });\n      }\n      export function createFiscalTransactionAsync(context: IContext, functionalityProfileGroupId: string | null, registrationResult: FiscalIntegrationRegistrationResult | null, connectorType: number):AsyncResult<FiscalTransaction> {\n        const request = createCreateFiscalTransactionInput(functionalityProfileGroupId, registrationResult, connectorType, );\n        return executeAction<FiscalTransaction>(request, context);\n      }\n  \n      export function createGetButtonGridsInput(queryResultSettings: IQueryResultSettings): IDataServiceRequest {\n        const query = storeQuery().resultSettings(queryResultSettings);\n        return query.createDataServiceRequestForOperation('GetButtonGrids', false, ButtonGridClass, 'true', {  bypassCache: 'none', returnEntity: 'ButtonGrid'}, { });\n      }\n      export function getButtonGridsAsync(context: IContext):AsyncResult<ButtonGrid[]> {\n        const request = createGetButtonGridsInput(context.queryResultSettings, );\n        return executeAction<ButtonGrid[]>(request, context);\n      }\n  \n      export function createGetButtonGridsByScreenSizeInput(queryResultSettings: IQueryResultSettings, height: number, width: number): IDataServiceRequest {\n        const query = storeQuery().resultSettings(queryResultSettings);\n        return query.createDataServiceRequestForOperation('GetButtonGridsByScreenSize', false, ButtonGridClass, 'true', {  bypassCache: 'none', returnEntity: 'ButtonGrid'}, {height: height, width: width });\n      }\n      export function getButtonGridsByScreenSizeAsync(context: IContext, height: number, width: number):AsyncResult<ButtonGrid[]> {\n        const request = createGetButtonGridsByScreenSizeInput(context.queryResultSettings, height, width, );\n        return executeAction<ButtonGrid[]>(request, context);\n      }\n  \n      export function createGetCashDeclarationsInput(queryResultSettings: IQueryResultSettings): IDataServiceRequest {\n        const query = storeQuery().resultSettings(queryResultSettings);\n        return query.createDataServiceRequestForOperation('GetCashDeclarations', false, CashDeclarationClass, 'true', {  bypassCache: 'none', returnEntity: 'CashDeclaration'}, { });\n      }\n      export function getCashDeclarationsAsync(context: IContext):AsyncResult<CashDeclaration[]> {\n        const request = createGetCashDeclarationsInput(context.queryResultSettings, );\n        return executeAction<CashDeclaration[]>(request, context);\n      }\n  \n      export function createGetCountryRegionsInput(queryResultSettings: IQueryResultSettings): IDataServiceRequest {\n        const query = storeQuery().resultSettings(queryResultSettings);\n        return query.createDataServiceRequestForOperation('GetCountryRegions', false, CountryRegionInfoClass, 'true', {  bypassCache: 'none', returnEntity: 'CountryRegionInfo'}, { });\n      }\n      export function getCountryRegionsAsync(context: IContext):AsyncResult<CountryRegionInfo[]> {\n        const request = createGetCountryRegionsInput(context.queryResultSettings, );\n        return executeAction<CountryRegionInfo[]>(request, context);\n      }\n  \n      export function createGetCustomerGroupsInput(queryResultSettings: IQueryResultSettings): IDataServiceRequest {\n        const query = storeQuery().resultSettings(queryResultSettings);\n        return query.createDataServiceRequestForOperation('GetCustomerGroups', false, CustomerGroupClass, 'true', {  bypassCache: 'none', returnEntity: 'CustomerGroup'}, { });\n      }\n      export function getCustomerGroupsAsync(context: IContext):AsyncResult<CustomerGroup[]> {\n        const request = createGetCustomerGroupsInput(context.queryResultSettings, );\n        return executeAction<CustomerGroup[]>(request, context);\n      }\n  \n      export function createGetDeliveryOptionsInput(queryResultSettings: IQueryResultSettings): IDataServiceRequest {\n        const query = storeQuery().resultSettings(queryResultSettings);\n        return query.createDataServiceRequestForOperation('GetDeliveryOptions', false, DeliveryOptionClass, 'true', {  bypassCache: 'none', returnEntity: 'DeliveryOption'}, { });\n      }\n      export function getDeliveryOptionsAsync(context: IContext):AsyncResult<DeliveryOption[]> {\n        const request = createGetDeliveryOptionsInput(context.queryResultSettings, );\n        return executeAction<DeliveryOption[]>(request, context);\n      }\n  \n      export function createGetChannelsByTypeInput(queryResultSettings: IQueryResultSettings, channelType: string | null): IDataServiceRequest {\n        const query = storeQuery().resultSettings(queryResultSettings);\n        return query.createDataServiceRequestForOperation('GetChannelsByType', false, ChannelIdentityClass, 'true', {  bypassCache: 'none', returnEntity: 'ChannelIdentity'}, {channelType: channelType });\n      }\n      export function getChannelsByTypeAsync(context: IContext, channelType: string | null):AsyncResult<ChannelIdentity[]> {\n        const request = createGetChannelsByTypeInput(context.queryResultSettings, channelType, );\n        return executeAction<ChannelIdentity[]>(request, context);\n      }\n  \n      export function createGetChannelsInput(queryResultSettings: IQueryResultSettings): IDataServiceRequest {\n        const query = storeQuery().resultSettings(queryResultSettings);\n        return query.createDataServiceRequestForOperation('GetChannels', false, ChannelIdentityClass, 'true', {  bypassCache: 'none', returnEntity: 'ChannelIdentity'}, { });\n      }\n      export function getChannelsAsync(context: IContext):AsyncResult<ChannelIdentity[]> {\n        const request = createGetChannelsInput(context.queryResultSettings, );\n        return executeAction<ChannelIdentity[]>(request, context);\n      }\n  \n      export function createGetEnvironmentConfigurationInput(): IDataServiceRequest {\n        const query = storeQuery();\n        return query.createDataServiceRequestForOperation('GetEnvironmentConfiguration', false, EnvironmentConfigurationClass, 'false', {  bypassCache: 'none', returnEntity: 'EnvironmentConfiguration'}, { });\n      }\n      export function getEnvironmentConfigurationAsync(context: IContext):AsyncResult<EnvironmentConfiguration> {\n        const request = createGetEnvironmentConfigurationInput();\n        return executeAction<EnvironmentConfiguration>(request, context);\n      }\n  \n      export function createGetSearchConfigurationInput(): IDataServiceRequest {\n        const query = storeQuery();\n        return query.createDataServiceRequestForOperation('GetSearchConfiguration', false, SearchConfigurationClass, 'false', {  bypassCache: 'none', returnEntity: 'SearchConfiguration'}, { });\n      }\n      export function getSearchConfigurationAsync(context: IContext):AsyncResult<SearchConfiguration> {\n        const request = createGetSearchConfigurationInput();\n        return executeAction<SearchConfiguration>(request, context);\n      }\n  \n      export function createGetExtensionPackageDefinitionsInput(queryResultSettings: IQueryResultSettings): IDataServiceRequest {\n        const query = storeQuery().resultSettings(queryResultSettings);\n        return query.createDataServiceRequestForOperation('GetExtensionPackageDefinitions', false, ExtensionPackageDefinitionClass, 'true', {  bypassCache: 'none', returnEntity: 'ExtensionPackageDefinition'}, { });\n      }\n      export function getExtensionPackageDefinitionsAsync(context: IContext):AsyncResult<ExtensionPackageDefinition[]> {\n        const request = createGetExtensionPackageDefinitionsInput(context.queryResultSettings, );\n        return executeAction<ExtensionPackageDefinition[]>(request, context);\n      }\n  \n      export function createGetExtensionProfileInput(): IDataServiceRequest {\n        const query = storeQuery();\n        return query.createDataServiceRequestForOperation('GetExtensionProfile', false, ExtensionProfileClass, 'false', {  bypassCache: 'none', returnEntity: 'ExtensionProfile'}, { });\n      }\n      export function getExtensionProfileAsync(context: IContext):AsyncResult<ExtensionProfile> {\n        const request = createGetExtensionProfileInput();\n        return executeAction<ExtensionProfile>(request, context);\n      }\n  \n      export function createGetDeviceConfigurationInput(): IDataServiceRequest {\n        const query = storeQuery();\n        return query.createDataServiceRequestForOperation('GetDeviceConfiguration', false, DeviceConfigurationClass, 'false', {  bypassCache: 'none', returnEntity: 'DeviceConfiguration'}, { });\n      }\n      export function getDeviceConfigurationAsync(context: IContext):AsyncResult<DeviceConfiguration> {\n        const request = createGetDeviceConfigurationInput();\n        return executeAction<DeviceConfiguration>(request, context);\n      }\n  \n      export function createGetVisualProfileInput(): IDataServiceRequest {\n        const query = storeQuery();\n        return query.createDataServiceRequestForOperation('GetVisualProfile', false, VisualProfileClass, 'false', {  bypassCache: 'none', returnEntity: 'VisualProfile'}, { });\n      }\n      export function getVisualProfileAsync(context: IContext):AsyncResult<VisualProfile> {\n        const request = createGetVisualProfileInput();\n        return executeAction<VisualProfile>(request, context);\n      }\n  \n      export function createGetLanguagesInput(queryResultSettings: IQueryResultSettings): IDataServiceRequest {\n        const query = storeQuery().resultSettings(queryResultSettings);\n        return query.createDataServiceRequestForOperation('GetLanguages', false, SupportedLanguageClass, 'true', {  bypassCache: 'none', returnEntity: 'SupportedLanguage'}, { });\n      }\n      export function getLanguagesAsync(context: IContext):AsyncResult<SupportedLanguage[]> {\n        const request = createGetLanguagesInput(context.queryResultSettings, );\n        return executeAction<SupportedLanguage[]>(request, context);\n      }\n  \n      export function createGetAffiliationsInput(queryResultSettings: IQueryResultSettings): IDataServiceRequest {\n        const query = storeQuery().resultSettings(queryResultSettings);\n        return query.createDataServiceRequestForOperation('GetAffiliations', false, AffiliationClass, 'true', {  bypassCache: 'none', returnEntity: 'Affiliation'}, { });\n      }\n      export function getAffiliationsAsync(context: IContext):AsyncResult<Affiliation[]> {\n        const request = createGetAffiliationsInput(context.queryResultSettings, );\n        return executeAction<Affiliation[]>(request, context);\n      }\n  \n      export function createGetOperationPermissionsInput(queryResultSettings: IQueryResultSettings): IDataServiceRequest {\n        const query = storeQuery().resultSettings(queryResultSettings);\n        return query.createDataServiceRequestForOperation('GetOperationPermissions', false, OperationPermissionClass, 'true', {  bypassCache: 'none', returnEntity: 'OperationPermission'}, { });\n      }\n      export function getOperationPermissionsAsync(context: IContext):AsyncResult<OperationPermission[]> {\n        const request = createGetOperationPermissionsInput(context.queryResultSettings, );\n        return executeAction<OperationPermission[]>(request, context);\n      }\n  \n      export function createGetReasonCodesInput(queryResultSettings: IQueryResultSettings): IDataServiceRequest {\n        const query = storeQuery().resultSettings(queryResultSettings);\n        return query.createDataServiceRequestForOperation('GetReasonCodes', false, ReasonCodeClass, 'true', {  bypassCache: 'none', returnEntity: 'ReasonCode'}, { });\n      }\n      export function getReasonCodesAsync(context: IContext):AsyncResult<ReasonCode[]> {\n        const request = createGetReasonCodesInput(context.queryResultSettings, );\n        return executeAction<ReasonCode[]>(request, context);\n      }\n  \n      export function createGetReturnOrderReasonCodesInput(queryResultSettings: IQueryResultSettings): IDataServiceRequest {\n        const query = storeQuery().resultSettings(queryResultSettings);\n        return query.createDataServiceRequestForOperation('GetReturnOrderReasonCodes', false, ReasonCodeClass, 'true', {  bypassCache: 'none', returnEntity: 'ReasonCode'}, { });\n      }\n      export function getReturnOrderReasonCodesAsync(context: IContext):AsyncResult<ReasonCode[]> {\n        const request = createGetReturnOrderReasonCodesInput(context.queryResultSettings, );\n        return executeAction<ReasonCode[]>(request, context);\n      }\n  \n      export function createGetSalesTaxGroupsInput(queryResultSettings: IQueryResultSettings): IDataServiceRequest {\n        const query = storeQuery().resultSettings(queryResultSettings);\n        return query.createDataServiceRequestForOperation('GetSalesTaxGroups', false, SalesTaxGroupClass, 'true', {  bypassCache: 'none', returnEntity: 'SalesTaxGroup'}, { });\n      }\n      export function getSalesTaxGroupsAsync(context: IContext):AsyncResult<SalesTaxGroup[]> {\n        const request = createGetSalesTaxGroupsInput(context.queryResultSettings, );\n        return executeAction<SalesTaxGroup[]>(request, context);\n      }\n  \n      export function createGetTenderTypesInput(queryResultSettings: IQueryResultSettings): IDataServiceRequest {\n        const query = storeQuery().resultSettings(queryResultSettings);\n        return query.createDataServiceRequestForOperation('GetTenderTypes', false, TenderTypeClass, 'true', {  bypassCache: 'none', returnEntity: 'TenderType'}, { });\n      }\n      export function getTenderTypesAsync(context: IContext):AsyncResult<TenderType[]> {\n        const request = createGetTenderTypesInput(context.queryResultSettings, );\n        return executeAction<TenderType[]>(request, context);\n      }\n  \n      export function createGetUnitsOfMeasureInput(queryResultSettings: IQueryResultSettings): IDataServiceRequest {\n        const query = storeQuery().resultSettings(queryResultSettings);\n        return query.createDataServiceRequestForOperation('GetUnitsOfMeasure', false, UnitOfMeasureClass, 'true', {  bypassCache: 'none', returnEntity: 'UnitOfMeasure'}, { });\n      }\n      export function getUnitsOfMeasureAsync(context: IContext):AsyncResult<UnitOfMeasure[]> {\n        const request = createGetUnitsOfMeasureInput(context.queryResultSettings, );\n        return executeAction<UnitOfMeasure[]>(request, context);\n      }\n  \n      export function createGetDiscountCodesInput(queryResultSettings: IQueryResultSettings): IDataServiceRequest {\n        const query = storeQuery().resultSettings(queryResultSettings);\n        return query.createDataServiceRequestForOperation('GetDiscountCodes', false, DiscountCodeClass, 'true', {  bypassCache: 'none', returnEntity: 'DiscountCode'}, { });\n      }\n      export function getDiscountCodesAsync(context: IContext):AsyncResult<DiscountCode[]> {\n        const request = createGetDiscountCodesInput(context.queryResultSettings, );\n        return executeAction<DiscountCode[]>(request, context);\n      }\n  \n      export function createGetCurrenciesInput(queryResultSettings: IQueryResultSettings): IDataServiceRequest {\n        const query = storeQuery().resultSettings(queryResultSettings);\n        return query.createDataServiceRequestForOperation('GetCurrencies', false, CurrencyClass, 'true', {  bypassCache: 'none', returnEntity: 'Currency'}, { });\n      }\n      export function getCurrenciesAsync(context: IContext):AsyncResult<Currency[]> {\n        const request = createGetCurrenciesInput(context.queryResultSettings, );\n        return executeAction<Currency[]>(request, context);\n      }\n  \n      export function createGetCurrenciesAmountInput(queryResultSettings: IQueryResultSettings, currencyCode: string | null, amount: number): IDataServiceRequest {\n        const query = storeQuery().resultSettings(queryResultSettings);\n        return query.createDataServiceRequestForOperation('GetCurrenciesAmount', false, CurrencyAmountClass, 'true', {  bypassCache: 'none', returnEntity: 'CurrencyAmount'}, {currencyCode: currencyCode, amount: amount });\n      }\n      export function getCurrenciesAmountAsync(context: IContext, currencyCode: string | null, amount: number):AsyncResult<CurrencyAmount[]> {\n        const request = createGetCurrenciesAmountInput(context.queryResultSettings, currencyCode, amount, );\n        return executeAction<CurrencyAmount[]>(request, context);\n      }\n  \n      export function createGetCommissionSalesGroupsInput(queryResultSettings: IQueryResultSettings): IDataServiceRequest {\n        const query = storeQuery().resultSettings(queryResultSettings);\n        return query.createDataServiceRequestForOperation('GetCommissionSalesGroups', false, CommissionSalesGroupClass, 'true', {  bypassCache: 'none', returnEntity: 'CommissionSalesGroup'}, { });\n      }\n      export function getCommissionSalesGroupsAsync(context: IContext):AsyncResult<CommissionSalesGroup[]> {\n        const request = createGetCommissionSalesGroupsInput(context.queryResultSettings, );\n        return executeAction<CommissionSalesGroup[]>(request, context);\n      }\n  \n      export function createSearchCommissionSalesGroupsInput(queryResultSettings: IQueryResultSettings, searchText: string | null): IDataServiceRequest {\n        const query = storeQuery().resultSettings(queryResultSettings);\n        return query.createDataServiceRequestForOperation('SearchCommissionSalesGroups', false, CommissionSalesGroupClass, 'true', {  bypassCache: 'none', returnEntity: 'CommissionSalesGroup'}, {searchText: searchText });\n      }\n      export function searchCommissionSalesGroupsAsync(context: IContext, searchText: string | null):AsyncResult<CommissionSalesGroup[]> {\n        const request = createSearchCommissionSalesGroupsInput(context.queryResultSettings, searchText, );\n        return executeAction<CommissionSalesGroup[]>(request, context);\n      }\n  \n      export function createGetPaymentMerchantInformationInput(hardwareProfileId: string | null): IDataServiceRequest {\n        const query = storeQuery();\n        return query.createDataServiceRequestForOperation('GetPaymentMerchantInformation', false, PaymentMerchantInformationClass, 'false', {  bypassCache: 'none', returnEntity: 'PaymentMerchantInformation'}, {hardwareProfileId: hardwareProfileId });\n      }\n      export function getPaymentMerchantInformationAsync(context: IContext, hardwareProfileId: string | null):AsyncResult<PaymentMerchantInformation> {\n        const request = createGetPaymentMerchantInformationInput(hardwareProfileId, );\n        return executeAction<PaymentMerchantInformation>(request, context);\n      }\n  \n      export function createGetPaymentPropertiesIfModifiedInput(hardwareProfileId: string | null, merchantInformationHash: string | null): IDataServiceRequest {\n        const query = storeQuery();\n        return query.createDataServiceRequestForOperation('GetPaymentPropertiesIfModified', false, PaymentMerchantInformationClass, 'false', {  bypassCache: 'none', returnEntity: 'PaymentMerchantInformation'}, {hardwareProfileId: hardwareProfileId, merchantInformationHash: merchantInformationHash });\n      }\n      export function getPaymentPropertiesIfModifiedAsync(context: IContext, hardwareProfileId: string | null, merchantInformationHash: string | null):AsyncResult<PaymentMerchantInformation> {\n        const request = createGetPaymentPropertiesIfModifiedInput(hardwareProfileId, merchantInformationHash, );\n        return executeAction<PaymentMerchantInformation>(request, context);\n      }\n  \n      export function createGetOnlineChannelPublishStatusInput(): IDataServiceRequest {\n        const query = storeQuery();\n        return query.createDataServiceRequestForOperation('GetOnlineChannelPublishStatus', false, '', 'false', {  bypassCache: 'none', returnEntity: ''}, { });\n      }\n      export function getOnlineChannelPublishStatusAsync(context: IContext):AsyncResult<number> {\n        const request = createGetOnlineChannelPublishStatusInput();\n        return executeAction<number>(request, context);\n      }\n  \n      export function createSetOnlineChannelPublishStatusInput(publishingStatus: number, statusMessage: string | null): IDataServiceRequest {\n        const query = storeQuery();\n        return query.createDataServiceRequestForOperation('SetOnlineChannelPublishStatus', true, '', '', {  bypassCache: 'get', returnEntity: ''}, {publishingStatus: publishingStatus, statusMessage: statusMessage });\n      }\n      export function setOnlineChannelPublishStatusAsync(context: IContext, publishingStatus: number, statusMessage: string | null):AsyncResult<NullResult> {\n        const request = createSetOnlineChannelPublishStatusInput(publishingStatus, statusMessage, );\n        return executeAction<NullResult>(request, context);\n      }\n  \n      export function createGetInventoryConfigurationInput(): IDataServiceRequest {\n        const query = storeQuery();\n        return query.createDataServiceRequestForOperation('GetInventoryConfiguration', false, ChannelInventoryConfigurationClass, 'false', {  bypassCache: 'none', returnEntity: 'ChannelInventoryConfiguration'}, { });\n      }\n      export function getInventoryConfigurationAsync(context: IContext):AsyncResult<ChannelInventoryConfiguration> {\n        const request = createGetInventoryConfigurationInput();\n        return executeAction<ChannelInventoryConfiguration>(request, context);\n      }\n  \n      export function createGetAvailableDevicesInput(queryResultSettings: IQueryResultSettings, deviceType: number): IDataServiceRequest {\n        const query = storeQuery().resultSettings(queryResultSettings);\n        return query.createDataServiceRequestForOperation('GetAvailableDevices', false, DeviceClass, 'true', {  bypassCache: 'none', returnEntity: 'Device'}, {deviceType: deviceType });\n      }\n      export function getAvailableDevicesAsync(context: IContext, deviceType: number):AsyncResult<Device[]> {\n        const request = createGetAvailableDevicesInput(context.queryResultSettings, deviceType, );\n        return executeAction<Device[]>(request, context);\n      }\n  \n      export function createGetUserDefinedSecretStringInput(secretName: string | null): IDataServiceRequest {\n        const query = storeQuery();\n        return query.createDataServiceRequestForOperation('GetUserDefinedSecretString', false, '', 'false', {  bypassCache: 'none', returnEntity: ''}, {secretName: secretName });\n      }\n      export function getUserDefinedSecretStringAsync(context: IContext, secretName: string | null):AsyncResult<string> {\n        const request = createGetUserDefinedSecretStringInput(secretName, );\n        return executeAction<string>(request, context);\n      }\n  \n      export function createGetUserDefinedSecretCertificateInput(secretName: string | null): IDataServiceRequest {\n        const query = storeQuery();\n        return query.createDataServiceRequestForOperation('GetUserDefinedSecretCertificate', false, UserDefinedSecretCertificateResultClass, 'false', {  bypassCache: 'none', returnEntity: 'UserDefinedSecretCertificateResult'}, {secretName: secretName });\n      }\n      export function getUserDefinedSecretCertificateAsync(context: IContext, secretName: string | null):AsyncResult<UserDefinedSecretCertificateResult> {\n        const request = createGetUserDefinedSecretCertificateInput(secretName, );\n        return executeAction<UserDefinedSecretCertificateResult>(request, context);\n      }\n  \n      export function createGetImageBlobInput(imageId: number): IDataServiceRequest {\n        const query = storeQuery();\n        return query.createDataServiceRequestForOperation('GetImageBlob', false, MediaBlobClass, 'false', {  bypassCache: 'none', returnEntity: 'MediaBlob'}, {imageId: imageId });\n      }\n      export function getImageBlobAsync(context: IContext, imageId: number):AsyncResult<MediaBlob> {\n        const request = createGetImageBlobInput(imageId, );\n        return executeAction<MediaBlob>(request, context);\n      }\n  \n      export function createGetExtensibleEnumerationsInput(queryResultSettings: IQueryResultSettings): IDataServiceRequest {\n        const query = storeQuery().resultSettings(queryResultSettings);\n        return query.createDataServiceRequestForOperation('GetExtensibleEnumerations', false, ExtensibleEnumerationContainerClass, 'true', {  bypassCache: 'none', returnEntity: 'ExtensibleEnumerationContainer'}, { });\n      }\n      export function getExtensibleEnumerationsAsync(context: IContext):AsyncResult<ExtensibleEnumerationContainer[]> {\n        const request = createGetExtensibleEnumerationsInput(context.queryResultSettings, );\n        return executeAction<ExtensibleEnumerationContainer[]>(request, context);\n      }\n  \n      export function createGetAddressPurposesInput(queryResultSettings: IQueryResultSettings): IDataServiceRequest {\n        const query = storeQuery().resultSettings(queryResultSettings);\n        return query.createDataServiceRequestForOperation('GetAddressPurposes', false, AddressPurposeClass, 'true', {  bypassCache: 'none', returnEntity: 'AddressPurpose'}, { });\n      }\n      export function getAddressPurposesAsync(context: IContext):AsyncResult<AddressPurpose[]> {\n        const request = createGetAddressPurposesInput(context.queryResultSettings, );\n        return executeAction<AddressPurpose[]>(request, context);\n      }\n  \n      export function createGetReturnPolicyInput(): IDataServiceRequest {\n        const query = storeQuery();\n        return query.createDataServiceRequestForOperation('GetReturnPolicy', false, ReturnPolicyClass, 'false', {  bypassCache: 'none', returnEntity: 'ReturnPolicy'}, { });\n      }\n      export function getReturnPolicyAsync(context: IContext):AsyncResult<ReturnPolicy> {\n        const request = createGetReturnPolicyInput();\n        return executeAction<ReturnPolicy>(request, context);\n      }\n  \n    "]}