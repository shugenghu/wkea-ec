{"version":3,"file":"OrgUnitsDataActions.g.js","sourceRoot":"","sources":["../../src/DataActions/OrgUnitsDataActions.g.ts"],"names":[],"mappings":"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","sourcesContent":["    // <auto-generated />\n    import { AsyncResult } from '../async-result';\n    import { DataServiceQuery } from '../DataServiceQuery';\n    import { OrgUnit, TillLayout, SearchStoreCriteria, SearchArea, OrgUnitLocation, OrgUnitLocationSearchCriteria, ChannelConfiguration, StoreHours, OrgUnitAvailability, ItemUnit, ProductDimensionCombination, OrgUnitAvailabilitySearchCriteria, TerminalInfo } from '../Entities/CommerceTypes.g';\n    import { OrgUnitClass, TillLayoutClass, OrgUnitLocationClass, ChannelConfigurationClass, StoreHoursClass, OrgUnitAvailabilityClass, TerminalInfoClass } from '../Entities/CommerceModels.g';\n    import { IContext, IDataServiceRequest, IQueryResultSettings, NullResult } from '../Interfaces';\n    import { executeAction } from '../retail-action';\n    \n    \n    function orgUnitsQuery(orgUnitNumber?: string): DataServiceQuery {\n      var key = (orgUnitNumber) ? { OrgUnitNumber: orgUnitNumber } : null;\n      return new DataServiceQuery(\"OrgUnits\", \"OrgUnit\", OrgUnitClass, key);\n    }\n    \n    export function createCreateInput(entity: OrgUnit): IDataServiceRequest {\n        return orgUnitsQuery().create(entity);\n    }\n    export function createOrgUnitAsync(context: IContext, entity: OrgUnit): AsyncResult<OrgUnit> {\n        const request = createCreateInput(entity, );\n        return executeAction<OrgUnit>(request, context);\n    }\n    export function createUpdateInput(entity: OrgUnit): IDataServiceRequest {\n        return orgUnitsQuery(entity.OrgUnitNumber).update(entity);\n    }\n    export function updateAsync(context: IContext, entity: OrgUnit): AsyncResult<OrgUnit> {\n        const request = createUpdateInput(entity, );\n        return executeAction<OrgUnit>(request, context);\n    }\n    export function createDeleteAsync(entity: OrgUnit): IDataServiceRequest {\n        return orgUnitsQuery(entity.OrgUnitNumber).delete();\n    }\n    export function deleteAsync(context: IContext, entity: OrgUnit): AsyncResult<NullResult> {\n        const request = createDeleteAsync(entity, );\n        return executeAction<NullResult>(request, context);\n    }\n    export function createReadAsync(orgUnitNumber: string): IDataServiceRequest {\n        return orgUnitsQuery(orgUnitNumber).read();\n    }\n    export function readAsync(context: IContext, orgUnitNumber: string): AsyncResult<OrgUnit> {\n        const request = createReadAsync(orgUnitNumber, );\n        return executeAction<OrgUnit>(request, context);\n    }\n    export function createReadAllAsync(queryResultSettings: IQueryResultSettings): IDataServiceRequest {\n        return orgUnitsQuery().resultSettings(queryResultSettings).read();\n    }\n    export function readAllAsync(context: IContext): AsyncResult<OrgUnit[]> {\n        const request = createReadAllAsync(context.queryResultSettings, );\n        return executeAction<OrgUnit[]>(request, context);\n    }\n    \n    export function createGetTillLayoutInput(height: number | null, width: number | null): IDataServiceRequest {      \n        const query = orgUnitsQuery();\n        return query.createDataServiceRequestForOperation('GetTillLayout', true, TillLayoutClass, 'false', { bypassCache: 'none', returnEntity: 'TillLayout'}, {height: height, width: width });\n    }    \n    \n    export function getTillLayoutAsync(context: IContext, height: number | null, width: number | null):AsyncResult<TillLayout> {\n        const request = createGetTillLayoutInput(height, width, );\n        return executeAction<TillLayout>(request, context);\n    }          \n          \n    export function createSearchInput(queryResultSettings: IQueryResultSettings, storeSearchCriteria: SearchStoreCriteria | null): IDataServiceRequest {      \n        const query = orgUnitsQuery().resultSettings(queryResultSettings);\n        return query.createDataServiceRequestForOperation('Search', true, OrgUnitClass, 'true', { bypassCache: 'none', returnEntity: 'OrgUnit'}, {storeSearchCriteria: storeSearchCriteria });\n    }    \n    \n    export function searchAsync(context: IContext, storeSearchCriteria: SearchStoreCriteria | null):AsyncResult<OrgUnit[]> {\n        const request = createSearchInput(context.queryResultSettings, storeSearchCriteria, );\n        return executeAction<OrgUnit[]>(request, context);\n    }          \n          \n    export function createGetOrgUnitLocationsByAreaInput(queryResultSettings: IQueryResultSettings, searchArea: SearchArea | null, deliveryModeTypeFilter?: number | null): IDataServiceRequest {      \n        const query = orgUnitsQuery().resultSettings(queryResultSettings);\n        return query.createDataServiceRequestForOperation('GetOrgUnitLocationsByArea', true, OrgUnitLocationClass, 'true', { bypassCache: 'none', returnEntity: 'OrgUnitLocation'}, {searchArea: searchArea, deliveryModeTypeFilter: deliveryModeTypeFilter });\n    }    \n    \n    export function getOrgUnitLocationsByAreaAsync(context: IContext, searchArea: SearchArea | null, deliveryModeTypeFilter?: number | null):AsyncResult<OrgUnitLocation[]> {\n        const request = createGetOrgUnitLocationsByAreaInput(context.queryResultSettings, searchArea, deliveryModeTypeFilter, );\n        return executeAction<OrgUnitLocation[]>(request, context);\n    }          \n          \n    export function createSearchOrgUnitLocationsInput(queryResultSettings: IQueryResultSettings, orgUnitLocationSearchCriteria: OrgUnitLocationSearchCriteria | null): IDataServiceRequest {      \n        const query = orgUnitsQuery().resultSettings(queryResultSettings);\n        return query.createDataServiceRequestForOperation('SearchOrgUnitLocations', true, OrgUnitLocationClass, 'true', { bypassCache: 'none', returnEntity: 'OrgUnitLocation'}, {orgUnitLocationSearchCriteria: orgUnitLocationSearchCriteria });\n    }    \n    \n    export function searchOrgUnitLocationsAsync(context: IContext, orgUnitLocationSearchCriteria: OrgUnitLocationSearchCriteria | null):AsyncResult<OrgUnitLocation[]> {\n        const request = createSearchOrgUnitLocationsInput(context.queryResultSettings, orgUnitLocationSearchCriteria, );\n        return executeAction<OrgUnitLocation[]>(request, context);\n    }          \n          \n    export function createGetOrgUnitConfigurationInput(): IDataServiceRequest {      \n        const query = orgUnitsQuery();\n        return query.createDataServiceRequestForOperation('GetOrgUnitConfiguration', true, ChannelConfigurationClass, 'false', { bypassCache: 'none', returnEntity: 'ChannelConfiguration'}, { });\n    }    \n    \n    export function getOrgUnitConfigurationAsync(context: IContext):AsyncResult<ChannelConfiguration> {\n        const request = createGetOrgUnitConfigurationInput();\n        return executeAction<ChannelConfiguration>(request, context);\n    }          \n          \n    export function createGetStoreHoursInput(storeNumber: string | null): IDataServiceRequest {      \n        const query = orgUnitsQuery();\n        return query.createDataServiceRequestForOperation('GetStoreHours', false, StoreHoursClass, 'false', { bypassCache: 'none', returnEntity: 'StoreHours'}, {storeNumber: storeNumber });\n    }    \n    \n    export function getStoreHoursAsync(context: IContext, storeNumber: string | null):AsyncResult<StoreHours> {\n        const request = createGetStoreHoursInput(storeNumber, );\n        return executeAction<StoreHours>(request, context);\n    }          \n          \n    export function createGetAvailableInventoryInput(queryResultSettings: IQueryResultSettings, itemId: string | null, variantId: string | null, barcode: string | null): IDataServiceRequest {      \n        const query = orgUnitsQuery().resultSettings(queryResultSettings);\n        return query.createDataServiceRequestForOperation('GetAvailableInventory', true, OrgUnitAvailabilityClass, 'true', { bypassCache: 'none', returnEntity: 'OrgUnitAvailability'}, {itemId: itemId, variantId: variantId, barcode: barcode });\n    }    \n    \n    export function getAvailableInventoryAsync(context: IContext, itemId: string | null, variantId: string | null, barcode: string | null):AsyncResult<OrgUnitAvailability[]> {\n        const request = createGetAvailableInventoryInput(context.queryResultSettings, itemId, variantId, barcode, );\n        return executeAction<OrgUnitAvailability[]>(request, context);\n    }          \n          \n    export function createGetAvailableInventoryNearbyInput(queryResultSettings: IQueryResultSettings, itemIds: ItemUnit[] | null, searchArea: SearchArea | null): IDataServiceRequest {      \n        const query = orgUnitsQuery().resultSettings(queryResultSettings);\n        return query.createDataServiceRequestForOperation('GetAvailableInventoryNearby', true, OrgUnitAvailabilityClass, 'true', { bypassCache: 'none', returnEntity: 'OrgUnitAvailability'}, {itemIds: itemIds, searchArea: searchArea });\n    }    \n    \n    export function getAvailableInventoryNearbyAsync(context: IContext, itemIds: ItemUnit[] | null, searchArea: SearchArea | null):AsyncResult<OrgUnitAvailability[]> {\n        const request = createGetAvailableInventoryNearbyInput(context.queryResultSettings, itemIds, searchArea, );\n        return executeAction<OrgUnitAvailability[]>(request, context);\n    }          \n          \n    export function createGetProductAvailabilityByDimensionsInput(queryResultSettings: IQueryResultSettings, inventLocationIds: string[] | null, productId: number, productDimensionCombinations: ProductDimensionCombination[] | null): IDataServiceRequest {      \n        const query = orgUnitsQuery().resultSettings(queryResultSettings);\n        return query.createDataServiceRequestForOperation('GetProductAvailabilityByDimensions', true, OrgUnitAvailabilityClass, 'true', { bypassCache: 'none', returnEntity: 'OrgUnitAvailability'}, {inventLocationIds: inventLocationIds, productId: productId, productDimensionCombinations: productDimensionCombinations });\n    }    \n    \n    export function getProductAvailabilityByDimensionsAsync(context: IContext, inventLocationIds: string[] | null, productId: number, productDimensionCombinations: ProductDimensionCombination[] | null):AsyncResult<OrgUnitAvailability[]> {\n        const request = createGetProductAvailabilityByDimensionsInput(context.queryResultSettings, inventLocationIds, productId, productDimensionCombinations, );\n        return executeAction<OrgUnitAvailability[]>(request, context);\n    }          \n          \n    export function createSearchProductAvailabilityInput(queryResultSettings: IQueryResultSettings, productId: number, orgUnitAvailabilitySearchCriteria: OrgUnitAvailabilitySearchCriteria | null): IDataServiceRequest {      \n        const query = orgUnitsQuery().resultSettings(queryResultSettings);\n        return query.createDataServiceRequestForOperation('SearchProductAvailability', true, OrgUnitAvailabilityClass, 'true', { bypassCache: 'none', returnEntity: 'OrgUnitAvailability'}, {productId: productId, orgUnitAvailabilitySearchCriteria: orgUnitAvailabilitySearchCriteria });\n    }    \n    \n    export function searchProductAvailabilityAsync(context: IContext, productId: number, orgUnitAvailabilitySearchCriteria: OrgUnitAvailabilitySearchCriteria | null):AsyncResult<OrgUnitAvailability[]> {\n        const request = createSearchProductAvailabilityInput(context.queryResultSettings, productId, orgUnitAvailabilitySearchCriteria, );\n        return executeAction<OrgUnitAvailability[]>(request, context);\n    }          \n          \n    export function createGetTerminalInfoInput(queryResultSettings: IQueryResultSettings, orgUnitNumber: string, deviceType: number): IDataServiceRequest {      \n        const query = orgUnitsQuery(orgUnitNumber).resultSettings(queryResultSettings);\n        return query.createDataServiceRequestForOperation('GetTerminalInfo', false, TerminalInfoClass, 'true', { bypassCache: 'none', returnEntity: 'TerminalInfo'}, {deviceType: deviceType });\n    }    \n    \n    export function getTerminalInfoAsync(context: IContext, orgUnitNumber: string, deviceType: number):AsyncResult<TerminalInfo[]> {\n        const request = createGetTerminalInfoInput(context.queryResultSettings, orgUnitNumber, deviceType, );\n        return executeAction<TerminalInfo[]>(request, context);\n    }          \n          \n    export function createGetProductAvailabilityInput(queryResultSettings: IQueryResultSettings, productId: number): IDataServiceRequest {      \n        const query = orgUnitsQuery().resultSettings(queryResultSettings);\n        return query.createDataServiceRequestForOperation('GetProductAvailability', false, OrgUnitAvailabilityClass, 'true', { bypassCache: 'none', returnEntity: 'OrgUnitAvailability'}, {productId: productId });\n    }    \n    \n    export function getProductAvailabilityAsync(context: IContext, productId: number):AsyncResult<OrgUnitAvailability[]> {\n        const request = createGetProductAvailabilityInput(context.queryResultSettings, productId, );\n        return executeAction<OrgUnitAvailability[]>(request, context);\n    }          \n          \n    "]}