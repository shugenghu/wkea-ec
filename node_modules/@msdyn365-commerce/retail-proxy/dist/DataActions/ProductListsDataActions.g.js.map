{"version":3,"file":"ProductListsDataActions.g.js","sourceRoot":"","sources":["../../src/DataActions/ProductListsDataActions.g.ts"],"names":[],"mappings":"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","sourcesContent":["    // <auto-generated />\n    import { AsyncResult } from '../async-result';\n    import { DataServiceQuery } from '../DataServiceQuery';\n    import { ProductList, ProductListSearchCriteria, ProductListLine } from '../Entities/CommerceTypes.g';\n    import { ProductListClass, ProductListLineClass } from '../Entities/CommerceModels.g';\n    import { IContext, IDataServiceRequest, IQueryResultSettings, NullResult } from '../Interfaces';\n    import { executeAction } from '../retail-action';\n    \n    \n    function productListsQuery(id?: string): DataServiceQuery {\n      var key = (id) ? { Id: id } : null;\n      return new DataServiceQuery(\"ProductLists\", \"ProductList\", ProductListClass, key);\n    }\n    \n    export function createCreateInput(entity: ProductList): IDataServiceRequest {\n        return productListsQuery().create(entity);\n    }\n    export function createProductListAsync(context: IContext, entity: ProductList): AsyncResult<ProductList> {\n        const request = createCreateInput(entity, );\n        return executeAction<ProductList>(request, context);\n    }\n    export function createUpdateInput(entity: ProductList): IDataServiceRequest {\n        return productListsQuery(entity.Id).update(entity);\n    }\n    export function updateAsync(context: IContext, entity: ProductList): AsyncResult<ProductList> {\n        const request = createUpdateInput(entity, );\n        return executeAction<ProductList>(request, context);\n    }\n    export function createDeleteAsync(entity: ProductList): IDataServiceRequest {\n        return productListsQuery(entity.Id).delete();\n    }\n    export function deleteAsync(context: IContext, entity: ProductList): AsyncResult<NullResult> {\n        const request = createDeleteAsync(entity, );\n        return executeAction<NullResult>(request, context);\n    }\n    export function createReadAsync(id: string): IDataServiceRequest {\n        return productListsQuery(id).read();\n    }\n    export function readAsync(context: IContext, id: string): AsyncResult<ProductList> {\n        const request = createReadAsync(id, );\n        return executeAction<ProductList>(request, context);\n    }\n    export function createReadAllAsync(queryResultSettings: IQueryResultSettings): IDataServiceRequest {\n        return productListsQuery().resultSettings(queryResultSettings).read();\n    }\n    export function readAllAsync(context: IContext): AsyncResult<ProductList[]> {\n        const request = createReadAllAsync(context.queryResultSettings, );\n        return executeAction<ProductList[]>(request, context);\n    }\n    \n    export function createSearchInput(queryResultSettings: IQueryResultSettings, searchCriteria: ProductListSearchCriteria | null): IDataServiceRequest {      \n        const query = productListsQuery().resultSettings(queryResultSettings);\n        return query.createDataServiceRequestForOperation('Search', true, ProductListClass, 'true', { bypassCache: 'none', returnEntity: 'ProductList'}, {searchCriteria: searchCriteria });\n    }    \n    \n    export function searchAsync(context: IContext, searchCriteria: ProductListSearchCriteria | null):AsyncResult<ProductList[]> {\n        const request = createSearchInput(context.queryResultSettings, searchCriteria, );\n        return executeAction<ProductList[]>(request, context);\n    }          \n          \n    export function createGetProductListLinesInput(queryResultSettings: IQueryResultSettings, id: string, searchText: string | null): IDataServiceRequest {      \n        const query = productListsQuery(id).resultSettings(queryResultSettings);\n        return query.createDataServiceRequestForOperation('GetProductListLines', true, ProductListLineClass, 'true', { bypassCache: 'none', returnEntity: 'ProductListLine'}, {searchText: searchText });\n    }    \n    \n    export function getProductListLinesAsync(context: IContext, id: string, searchText: string | null):AsyncResult<ProductListLine[]> {\n        const request = createGetProductListLinesInput(context.queryResultSettings, id, searchText, );\n        return executeAction<ProductListLine[]>(request, context);\n    }          \n          \n    export function createAddProductListLinesInput(queryResultSettings: IQueryResultSettings, id: string, productListLines: ProductListLine[] | null): IDataServiceRequest {      \n        const query = productListsQuery(id).resultSettings(queryResultSettings);\n        return query.createDataServiceRequestForOperation('AddProductListLines', true, ProductListLineClass, 'true', { bypassCache: 'get', returnEntity: 'ProductListLine'}, {productListLines: productListLines });\n    }    \n    \n    export function addProductListLinesAsync(context: IContext, id: string, productListLines: ProductListLine[] | null):AsyncResult<ProductListLine[]> {\n        const request = createAddProductListLinesInput(context.queryResultSettings, id, productListLines, );\n        return executeAction<ProductListLine[]>(request, context);\n    }          \n          \n    export function createUpdateProductListLinesInput(queryResultSettings: IQueryResultSettings, id: string, productListLines: ProductListLine[] | null): IDataServiceRequest {      \n        const query = productListsQuery(id).resultSettings(queryResultSettings);\n        return query.createDataServiceRequestForOperation('UpdateProductListLines', true, ProductListLineClass, 'true', { bypassCache: 'get', returnEntity: 'ProductListLine'}, {productListLines: productListLines });\n    }    \n    \n    export function updateProductListLinesAsync(context: IContext, id: string, productListLines: ProductListLine[] | null):AsyncResult<ProductListLine[]> {\n        const request = createUpdateProductListLinesInput(context.queryResultSettings, id, productListLines, );\n        return executeAction<ProductListLine[]>(request, context);\n    }          \n          \n    export function createRemoveProductListLinesInput(id: string, productListLines: ProductListLine[] | null): IDataServiceRequest {      \n        const query = productListsQuery(id);\n        return query.createDataServiceRequestForOperation('RemoveProductListLines', true, '', '', { bypassCache: 'get', returnEntity: ''}, {productListLines: productListLines });\n    }    \n    \n    export function removeProductListLinesAsync(context: IContext, id: string, productListLines: ProductListLine[] | null):AsyncResult<NullResult> {\n        const request = createRemoveProductListLinesInput(id, productListLines, );\n        return executeAction<NullResult>(request, context);\n    }          \n          \n    export function createCopyCartToProductListInput(id: string, cartId: string | null, isRewrite: boolean | null, isQuantityAggregate: boolean | null): IDataServiceRequest {      \n        const query = productListsQuery(id);\n        return query.createDataServiceRequestForOperation('CopyCartToProductList', true, ProductListClass, 'false', { bypassCache: 'get', returnEntity: 'ProductList'}, {cartId: cartId, isRewrite: isRewrite, isQuantityAggregate: isQuantityAggregate });\n    }    \n    \n    export function copyCartToProductListAsync(context: IContext, id: string, cartId: string | null, isRewrite: boolean | null, isQuantityAggregate: boolean | null):AsyncResult<ProductList> {\n        const request = createCopyCartToProductListInput(id, cartId, isRewrite, isQuantityAggregate, );\n        return executeAction<ProductList>(request, context);\n    }          \n          \n    "]}