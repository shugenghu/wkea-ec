import { DataServiceQuery } from '../DataServiceQuery';
import { PickingListClass } from '../Entities/CommerceModels.g';
import { executeAction } from '../retail-action';
function pickingListsQuery(orderId) {
    var key = (orderId) ? { OrderId: orderId } : null;
    return new DataServiceQuery("PickingLists", "PickingList", PickingListClass, key);
}
export function createCreateInput(entity) {
    return pickingListsQuery().create(entity);
}
export function createPickingListAsync(context, entity) {
    const request = createCreateInput(entity);
    return executeAction(request, context);
}
export function createUpdateInput(entity) {
    return pickingListsQuery(entity.OrderId).update(entity);
}
export function updateAsync(context, entity) {
    const request = createUpdateInput(entity);
    return executeAction(request, context);
}
export function createDeleteAsync(entity) {
    return pickingListsQuery(entity.OrderId).delete();
}
export function deleteAsync(context, entity) {
    const request = createDeleteAsync(entity);
    return executeAction(request, context);
}
export function createReadAsync(orderId) {
    return pickingListsQuery(orderId).read();
}
export function readAsync(context, orderId) {
    const request = createReadAsync(orderId);
    return executeAction(request, context);
}
export function createReadAllAsync(queryResultSettings) {
    return pickingListsQuery().resultSettings(queryResultSettings).read();
}
export function readAllAsync(context) {
    const request = createReadAllAsync(context.queryResultSettings);
    return executeAction(request, context);
}
export function createCommitInput(orderId) {
    const query = pickingListsQuery(orderId);
    return query.createDataServiceRequestForOperation('Commit', true, '', '', { bypassCache: 'get', returnEntity: '' }, {});
}
export function commitAsync(context, orderId) {
    const request = createCommitInput(orderId);
    return executeAction(request, context);
}
//# sourceMappingURL=PickingListsDataActions.g.js.map