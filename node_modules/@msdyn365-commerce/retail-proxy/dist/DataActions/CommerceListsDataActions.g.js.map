{"version":3,"file":"CommerceListsDataActions.g.js","sourceRoot":"","sources":["../../src/DataActions/CommerceListsDataActions.g.ts"],"names":[],"mappings":"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","sourcesContent":["    // <auto-generated />\n    import { AsyncResult } from '../async-result';\n    import { DataServiceQuery } from '../DataServiceQuery';\n    import { CommerceList, CommerceListLine, CommerceListContributor, CommerceListInvitation } from '../Entities/CommerceTypes.g';\n    import { CommerceListClass } from '../Entities/CommerceModels.g';\n    import { IContext, IDataServiceRequest, IQueryResultSettings, NullResult } from '../Interfaces';\n    import { executeAction } from '../retail-action';\n    \n    \n    function commerceListsQuery(id?: number): DataServiceQuery {\n      var key = (id) ? { Id: id } : null;\n      return new DataServiceQuery(\"CommerceLists\", \"CommerceList\", CommerceListClass, key);\n    }\n    \n    export function createCreateInput(entity: CommerceList): IDataServiceRequest {\n        return commerceListsQuery().create(entity);\n    }\n    export function createCommerceListAsync(context: IContext, entity: CommerceList): AsyncResult<CommerceList> {\n        const request = createCreateInput(entity, );\n        return executeAction<CommerceList>(request, context);\n    }\n    export function createUpdateInput(entity: CommerceList): IDataServiceRequest {\n        return commerceListsQuery(entity.Id).update(entity);\n    }\n    export function updateAsync(context: IContext, entity: CommerceList): AsyncResult<CommerceList> {\n        const request = createUpdateInput(entity, );\n        return executeAction<CommerceList>(request, context);\n    }\n    export function createDeleteAsync(entity: CommerceList): IDataServiceRequest {\n        return commerceListsQuery(entity.Id).delete();\n    }\n    export function deleteAsync(context: IContext, entity: CommerceList): AsyncResult<NullResult> {\n        const request = createDeleteAsync(entity, );\n        return executeAction<NullResult>(request, context);\n    }\n    export function createReadAsync(id: number): IDataServiceRequest {\n        return commerceListsQuery(id).read();\n    }\n    export function readAsync(context: IContext, id: number): AsyncResult<CommerceList> {\n        const request = createReadAsync(id, );\n        return executeAction<CommerceList>(request, context);\n    }\n    export function createReadAllAsync(queryResultSettings: IQueryResultSettings): IDataServiceRequest {\n        return commerceListsQuery().resultSettings(queryResultSettings).read();\n    }\n    export function readAllAsync(context: IContext): AsyncResult<CommerceList[]> {\n        const request = createReadAllAsync(context.queryResultSettings, );\n        return executeAction<CommerceList[]>(request, context);\n    }\n    \n    export function createGetByCustomerInput(queryResultSettings: IQueryResultSettings, customerId: string | null): IDataServiceRequest {      \n        const query = commerceListsQuery().resultSettings(queryResultSettings);\n        return query.createDataServiceRequestForOperation('GetByCustomer', true, CommerceListClass, 'true', { bypassCache: 'none', returnEntity: 'CommerceList'}, {customerId: customerId });\n    }    \n    \n    export function getByCustomerAsync(context: IContext, customerId: string | null):AsyncResult<CommerceList[]> {\n        const request = createGetByCustomerInput(context.queryResultSettings, customerId, );\n        return executeAction<CommerceList[]>(request, context);\n    }          \n          \n    export function createAddLinesInput(id: number, commerceListLines: CommerceListLine[] | null): IDataServiceRequest {      \n        const query = commerceListsQuery(id);\n        return query.createDataServiceRequestForOperation('AddLines', true, CommerceListClass, 'false', { bypassCache: 'get', returnEntity: 'CommerceList'}, {commerceListLines: commerceListLines });\n    }    \n    \n    export function addLinesAsync(context: IContext, id: number, commerceListLines: CommerceListLine[] | null):AsyncResult<CommerceList> {\n        const request = createAddLinesInput(id, commerceListLines, );\n        return executeAction<CommerceList>(request, context);\n    }          \n          \n    export function createUpdateLinesInput(id: number, commerceListLines: CommerceListLine[] | null): IDataServiceRequest {      \n        const query = commerceListsQuery(id);\n        return query.createDataServiceRequestForOperation('UpdateLines', true, CommerceListClass, 'false', { bypassCache: 'get', returnEntity: 'CommerceList'}, {commerceListLines: commerceListLines });\n    }    \n    \n    export function updateLinesAsync(context: IContext, id: number, commerceListLines: CommerceListLine[] | null):AsyncResult<CommerceList> {\n        const request = createUpdateLinesInput(id, commerceListLines, );\n        return executeAction<CommerceList>(request, context);\n    }          \n          \n    export function createRemoveLinesInput(id: number, commerceListLines: CommerceListLine[] | null): IDataServiceRequest {      \n        const query = commerceListsQuery(id);\n        return query.createDataServiceRequestForOperation('RemoveLines', true, CommerceListClass, 'false', { bypassCache: 'get', returnEntity: 'CommerceList'}, {commerceListLines: commerceListLines });\n    }    \n    \n    export function removeLinesAsync(context: IContext, id: number, commerceListLines: CommerceListLine[] | null):AsyncResult<CommerceList> {\n        const request = createRemoveLinesInput(id, commerceListLines, );\n        return executeAction<CommerceList>(request, context);\n    }          \n          \n    export function createMoveLinesInput(commerceListLines: CommerceListLine[] | null, destinationId: number): IDataServiceRequest {      \n        const query = commerceListsQuery();\n        return query.createDataServiceRequestForOperation('MoveLines', true, CommerceListClass, 'false', { bypassCache: 'get', returnEntity: 'CommerceList'}, {commerceListLines: commerceListLines, destinationId: destinationId });\n    }    \n    \n    export function moveLinesAsync(context: IContext, commerceListLines: CommerceListLine[] | null, destinationId: number):AsyncResult<CommerceList> {\n        const request = createMoveLinesInput(commerceListLines, destinationId, );\n        return executeAction<CommerceList>(request, context);\n    }          \n          \n    export function createCopyLinesInput(commerceListLines: CommerceListLine[] | null, destinationId: number): IDataServiceRequest {      \n        const query = commerceListsQuery();\n        return query.createDataServiceRequestForOperation('CopyLines', true, CommerceListClass, 'false', { bypassCache: 'get', returnEntity: 'CommerceList'}, {commerceListLines: commerceListLines, destinationId: destinationId });\n    }    \n    \n    export function copyLinesAsync(context: IContext, commerceListLines: CommerceListLine[] | null, destinationId: number):AsyncResult<CommerceList> {\n        const request = createCopyLinesInput(commerceListLines, destinationId, );\n        return executeAction<CommerceList>(request, context);\n    }          \n          \n    export function createAddContributorsInput(id: number, commerceListContributors: CommerceListContributor[] | null): IDataServiceRequest {      \n        const query = commerceListsQuery(id);\n        return query.createDataServiceRequestForOperation('AddContributors', true, CommerceListClass, 'false', { bypassCache: 'get', returnEntity: 'CommerceList'}, {commerceListContributors: commerceListContributors });\n    }    \n    \n    export function addContributorsAsync(context: IContext, id: number, commerceListContributors: CommerceListContributor[] | null):AsyncResult<CommerceList> {\n        const request = createAddContributorsInput(id, commerceListContributors, );\n        return executeAction<CommerceList>(request, context);\n    }          \n          \n    export function createRemoveContributorsInput(id: number, commerceListContributors: CommerceListContributor[] | null): IDataServiceRequest {      \n        const query = commerceListsQuery(id);\n        return query.createDataServiceRequestForOperation('RemoveContributors', true, CommerceListClass, 'false', { bypassCache: 'get', returnEntity: 'CommerceList'}, {commerceListContributors: commerceListContributors });\n    }    \n    \n    export function removeContributorsAsync(context: IContext, id: number, commerceListContributors: CommerceListContributor[] | null):AsyncResult<CommerceList> {\n        const request = createRemoveContributorsInput(id, commerceListContributors, );\n        return executeAction<CommerceList>(request, context);\n    }          \n          \n    export function createCreateInvitationsInput(id: number, commerceListInvitations: CommerceListInvitation[] | null): IDataServiceRequest {      \n        const query = commerceListsQuery(id);\n        return query.createDataServiceRequestForOperation('CreateInvitations', true, CommerceListClass, 'false', { bypassCache: 'get', returnEntity: 'CommerceList'}, {commerceListInvitations: commerceListInvitations });\n    }    \n    \n    export function createInvitationsAsync(context: IContext, id: number, commerceListInvitations: CommerceListInvitation[] | null):AsyncResult<CommerceList> {\n        const request = createCreateInvitationsInput(id, commerceListInvitations, );\n        return executeAction<CommerceList>(request, context);\n    }          \n          \n    export function createAcceptInvitationInput(invitationToken: string | null, customerId: string | null): IDataServiceRequest {      \n        const query = commerceListsQuery();\n        return query.createDataServiceRequestForOperation('AcceptInvitation', true, '', '', { bypassCache: 'get', returnEntity: ''}, {invitationToken: invitationToken, customerId: customerId });\n    }    \n    \n    export function acceptInvitationAsync(context: IContext, invitationToken: string | null, customerId: string | null):AsyncResult<NullResult> {\n        const request = createAcceptInvitationInput(invitationToken, customerId, );\n        return executeAction<NullResult>(request, context);\n    }          \n          \n    "]}