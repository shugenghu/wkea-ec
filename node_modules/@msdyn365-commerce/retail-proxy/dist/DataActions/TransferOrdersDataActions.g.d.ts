import { AsyncResult } from '../async-result';
import { TransferOrder, TransferOrderLine, Comment, TransferOrderJournal, ReceiptRetrievalCriteria, Receipt } from '../Entities/CommerceTypes.g';
import { IContext, IDataServiceRequest, IQueryResultSettings, NullResult } from '../Interfaces';
export declare function createCreateInput(entity: TransferOrder): IDataServiceRequest;
export declare function createTransferOrderAsync(context: IContext, entity: TransferOrder): AsyncResult<TransferOrder>;
export declare function createUpdateInput(entity: TransferOrder): IDataServiceRequest;
export declare function updateAsync(context: IContext, entity: TransferOrder): AsyncResult<TransferOrder>;
export declare function createDeleteAsync(entity: TransferOrder): IDataServiceRequest;
export declare function deleteAsync(context: IContext, entity: TransferOrder): AsyncResult<NullResult>;
export declare function createReadAsync(orderId: string): IDataServiceRequest;
export declare function readAsync(context: IContext, orderId: string): AsyncResult<TransferOrder>;
export declare function createReadAllAsync(queryResultSettings: IQueryResultSettings): IDataServiceRequest;
export declare function readAllAsync(context: IContext): AsyncResult<TransferOrder[]>;
export declare function createCommitInput(orderId: string, skipNotValidLines: boolean | null): IDataServiceRequest;
export declare function commitAsync(context: IContext, orderId: string, skipNotValidLines: boolean | null): AsyncResult<NullResult>;
export declare function createGetTransferOrderLinesInput(queryResultSettings: IQueryResultSettings, orderId: string): IDataServiceRequest;
export declare function getTransferOrderLinesAsync(context: IContext, orderId: string): AsyncResult<TransferOrderLine[]>;
export declare function createCreateTransferOrderLinesInput(queryResultSettings: IQueryResultSettings, orderId: string, transferOrderLines: TransferOrderLine[] | null): IDataServiceRequest;
export declare function createTransferOrderLinesAsync(context: IContext, orderId: string, transferOrderLines: TransferOrderLine[] | null): AsyncResult<TransferOrderLine[]>;
export declare function createUpdateTransferOrderLinesInput(queryResultSettings: IQueryResultSettings, orderId: string, transferOrderLines: TransferOrderLine[] | null): IDataServiceRequest;
export declare function updateTransferOrderLinesAsync(context: IContext, orderId: string, transferOrderLines: TransferOrderLine[] | null): AsyncResult<TransferOrderLine[]>;
export declare function createGetTransferOrderCommentsInput(queryResultSettings: IQueryResultSettings, orderId: string): IDataServiceRequest;
export declare function getTransferOrderCommentsAsync(context: IContext, orderId: string): AsyncResult<Comment[]>;
export declare function createAddTransferOrderCommentInput(orderId: string, authorStaffId: string | null, commentText: string | null): IDataServiceRequest;
export declare function addTransferOrderCommentAsync(context: IContext, orderId: string, authorStaffId: string | null, commentText: string | null): AsyncResult<Comment>;
export declare function createDeleteTransferOrderLinesInput(queryResultSettings: IQueryResultSettings, orderId: string, transferOrderLines: TransferOrderLine[] | null): IDataServiceRequest;
export declare function deleteTransferOrderLinesAsync(context: IContext, orderId: string, transferOrderLines: TransferOrderLine[] | null): AsyncResult<TransferOrderLine[]>;
export declare function createGetTransferOrderJournalsInput(queryResultSettings: IQueryResultSettings, orderId: string): IDataServiceRequest;
export declare function getTransferOrderJournalsAsync(context: IContext, orderId: string): AsyncResult<TransferOrderJournal[]>;
export declare function createGetTransferPackingSlipInput(queryResultSettings: IQueryResultSettings, orderId: string, voucherId: string | null, receiptRetrievalCriteria: ReceiptRetrievalCriteria | null): IDataServiceRequest;
export declare function getTransferPackingSlipAsync(context: IContext, orderId: string, voucherId: string | null, receiptRetrievalCriteria: ReceiptRetrievalCriteria | null): AsyncResult<Receipt[]>;
