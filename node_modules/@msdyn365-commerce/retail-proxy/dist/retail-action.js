/*!
 * Copyright (c) Microsoft Corporation.
 * All rights reserved. See LICENSE in the project root for license information.
 */
import { AsyncResult } from './async-result';
/**
 * Calls the Retail action
 */
export function retailAction(input, callerContext) {
    return input.execute(callerContext);
}
retailAction.prototype = {
    isAction: true,
    isObservable: true
};
export function callActionOrExecute(request, callerContext) {
    return callerContext.chainAction ? callerContext.chainAction(retailAction, request) : request.execute(callerContext);
}
export function executeAction(request, context) {
    if (!context) {
        throw new Error('context is undefined while executing action');
    }
    if (context.callerContext && context.callerContext.chainAction) {
        context.bypassCache && request.overrideCacheType(context.bypassCache);
        return context.callerContext.chainAction(retailAction, request);
    }
    else if (context.chainAction) {
        return context.chainAction(retailAction, request);
    }
    return new AsyncResult((resolve, reject) => {
        request
            .execute(context)
            .then(result => {
            resolve(result);
        })
            .catch(error => {
            reject(error);
        });
    });
}
//# sourceMappingURL=retail-action.js.map