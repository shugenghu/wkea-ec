/*!
 * Copyright (c) Microsoft Corporation.
 * All rights reserved. See LICENSE in the project root for license information.
 */

import { EventChannel, EventLevel, ILoggingSink, LoggerBase } from './ConsoleEventWriter';

/**
 * Attaches the logging sink to the LoggerBase.
 *
 * @method attachLoggingSink
 * @param sink {ILoggingSink} Sink to attach to Retail Logger.
 */
export function attachLoggingSink(sink: ILoggingSink) {
    LoggerBase.addLoggingSink(sink);
}

/**
 * Class represents proxy events.
 * Event Code Range: 44000 - 44999.
 */
export class RetailLogger {
    public static LogEvent(eventName: Function, error?: string): void {
        error ? eventName(error) : eventName();
    }

    // Core - Event Range: 44000 - 44099.
    public static genericError(message: string): void {
        LoggerBase.writeEvent('GenericEvent', 44000, 1, EventChannel.Operational, EventLevel.Error, [], '', '', '{0}');
    }

    public static genericWarning(message: string): void {
        LoggerBase.writeEvent('GenericWarning', 44001, 1, EventChannel.Operational, EventLevel.Warning, [], '', '', '{0}');
    }

    public static genericInfo(message: string): void {
        LoggerBase.writeEvent('GenericInfo', 44002, 1, EventChannel.Operational, EventLevel.Informational, [], '', '', '{0}');
    }

    public static modelManagersRetailServerRequestStarted(requestId: string, requestUrl: string): void {
        LoggerBase.writeEvent(
            'ModelManagersRetailServerRequestStarted',
            44004,
            1,
            EventChannel.Debug,
            EventLevel.Informational,
            [],
            '',
            '',
            'The Retail Server Request with request id \'{0}\' and request url \'{1}\' started.'
        );
    }

    public static modelManagersRetailServerRequestError(requestId: string, requestUrl: string, error: string): void {
        LoggerBase.writeEvent(
            'ModelManagersRetailServerRequestError',
            44005,
            1,
            EventChannel.Operational,
            EventLevel.Error,
            [],
            '',
            '',
            'The Retail Server Request with request id \'{0}\' and request url \'{1}\' failed.  Error: {2}.'
        );
    }

    public static modelManagersRetailServerRequestFinished(requestId: string, requestUrl: string): void {
        LoggerBase.writeEvent(
            'ModelManagersRetailServerRequestFinished',
            44006,
            EventChannel.Debug,
            1,
            EventLevel.Informational,
            [],
            '',
            '',
            'The Retail Server Request with request id \'{0}\' and request url \'{1}\' succeeded.'
        );
    }

    public static initEntitySetInvalidError(entitySetId: string): void {
        LoggerBase.writeEvent(
            'InitEntitySetInvalidError',
            44007,
            1,
            EventChannel.Operational,
            EventLevel.Error,
            [],
            '',
            '',
            'A method with invalid InitEntitySet id \'{0}\' was reported.'
        );
    }

    public static initEntitySetMultipleTimesError(entitySetId: string): void {
        LoggerBase.writeEvent(
            'InitEntitySetMultipleTimesError',
            44008,
            1,
            EventChannel.Operational,
            EventLevel.Error,
            [],
            '',
            '',
            'A method with InitEntitySet ID \'{0}\' was reported multiple times.'
        );
    }

    public static initEntitySetNoMethodNumberError(): void {
        LoggerBase.writeEvent(
            'InitEntitySetNoMethodNumberError',
            44009,
            1,
            EventChannel.Operational,
            EventLevel.Error,
            [],
            '',
            '',
            'The value InitEntitySet.All does not represent the number of methods that can be run'
        );
    }

    public static initPaymentEntitySetInvalidError(entitySetId: string): void {
        LoggerBase.writeEvent(
            'InitPaymentEntitySetInvalidError',
            44010,
            1,
            EventChannel.Operational,
            EventLevel.Error,
            [],
            '',
            '',
            'A method with invalid InitPaymentEntitySet id \'{0}\' was reported.'
        );
    }

    public static initPaymentEntitySetMultipleTimesError(entitySetId: string): void {
        LoggerBase.writeEvent(
            'InitPaymentEntitySetMultipleTimesError',
            44011,
            1,
            EventChannel.Operational,
            EventLevel.Error,
            [],
            '',
            '',
            'A method with InitPaymentEntitySet ID \'{0}\' was reported multiple times.'
        );
    }

    public static initPaymentEntitySetNoMethodNumberError(): void {
        LoggerBase.writeEvent(
            'InitPaymentEntitySetNoMethodNumberError',
            44012,
            1,
            EventChannel.Operational,
            EventLevel.Error,
            [],
            '',
            '',
            'The value InitPaymentEntitySet.All does not represent the number of methods that can be run'
        );
    }

    // Shopping Cart Service - Event Range: 44100 - 44199.
    public static shoppingCartServiceGetShoppingCartStarted(): void {
        LoggerBase.writeEvent(
            'ShoppingCartServiceGetShoppingCartStarted',
            44100,
            1,
            EventChannel.Debug,
            EventLevel.Informational,
            [],
            '',
            '',
            'Get shopping cart started.'
        );
    }

    public static shoppingCartServiceGetShoppingCartError(error: string): void {
        LoggerBase.writeEvent(
            'ShoppingCartServiceGetShoppingCartError',
            44101,
            1,
            EventChannel.Operational,
            EventLevel.Error,
            [],
            '',
            '',
            'Get shopping cart failed with error {0}.'
        );
    }

    public static shoppingCartServiceGetShoppingCartFinished(): void {
        LoggerBase.writeEvent(
            'ShoppingCartServiceGetShoppingCartFinished',
            44102,
            1,
            EventChannel.Debug,
            EventLevel.Informational,
            [],
            '',
            '',
            'Get shopping cart finished.'
        );
    }

    public static shoppingCartServiceRemoveFromCartStarted(): void {
        LoggerBase.writeEvent(
            'ShoppingCartServiceRemoveFromCartStarted',
            44104,
            1,
            EventChannel.Debug,
            EventLevel.Informational,
            [],
            '',
            '',
            'Removing item from cart started.'
        );
    }

    public static shoppingCartServiceRemoveFromCartError(error: string): void {
        LoggerBase.writeEvent(
            'ShoppingCartServiceRemoveFromCartError',
            44105,
            1,
            EventChannel.Operational,
            EventLevel.Error,
            [],
            '',
            '',
            'Removing item from cart failed with error {0}.'
        );
    }

    public static shoppingCartServiceRemoveFromCartFinished(): void {
        LoggerBase.writeEvent(
            'ShoppingCartServiceRemoveFromCartFinished',
            44106,
            1,
            EventChannel.Debug,
            EventLevel.Informational,
            [],
            '',
            '',
            'Removing item from cart finished.'
        );
    }

    public static shoppingCartApplyPromotionCodeStarted(): void {
        LoggerBase.writeEvent(
            'ShoppingCartApplyPromotionCodeStarted',
            44108,
            1,
            EventChannel.Debug,
            EventLevel.Informational,
            [],
            '',
            '',
            'Applying promotion code started.'
        );
    }

    public static shoppingCartApplyPromotionCodeError(error: string): void {
        LoggerBase.writeEvent(
            'ShoppingCartApplyPromotionCodeError',
            44109,
            1,
            EventChannel.Operational,
            EventLevel.Error,
            [],
            '',
            '',
            'Applying promotion code failed with error {0}.'
        );
    }

    public static shoppingCartApplyPromotionCodeFinished(): void {
        LoggerBase.writeEvent(
            'ShoppingCartApplyPromotionCodeFinished',
            44110,
            1,
            EventChannel.Debug,
            EventLevel.Informational,
            [],
            '',
            '',
            'Applying promotion code finished.'
        );
    }

    public static shoppingCartUpdateQuantityStarted(): void {
        LoggerBase.writeEvent(
            'ShoppingCartUpdateQuantityStarted',
            44112,
            1,
            EventChannel.Debug,
            EventLevel.Informational,
            [],
            '',
            '',
            'Updating quantity started.'
        );
    }

    public static shoppingCartUpdateQuantityError(error: string): void {
        LoggerBase.writeEvent(
            'ShoppingCartUpdateQuantityError',
            44113,
            1,
            EventChannel.Operational,
            EventLevel.Error,
            [],
            '',
            '',
            'Updating quantity failed with error {0}.'
        );
    }

    public static shoppingCartUpdateQuantityFinished(): void {
        LoggerBase.writeEvent(
            'ShoppingCartUpdateQuantityFinished',
            44114,
            1,
            EventChannel.Debug,
            EventLevel.Informational,
            [],
            '',
            '',
            'Updating quantity finished.'
        );
    }

    public static shoppingCartRemovePromotionCodeStarted(): void {
        LoggerBase.writeEvent(
            'ShoppingCartRemovePromotionCodeStarted',
            44116,
            1,
            EventChannel.Debug,
            EventLevel.Informational,
            [],
            '',
            '',
            'Removing promotion code started.'
        );
    }

    public static shoppingCartRemovePromotionCodeError(error: string): void {
        LoggerBase.writeEvent(
            'ShoppingCartRemovePromotionCodeError',
            44117,
            1,
            EventChannel.Operational,
            EventLevel.Error,
            [],
            '',
            '',
            'Removing promotion code failed with error {0}.'
        );
    }

    public static shoppingCartRemovePromotionCodeFinished(): void {
        LoggerBase.writeEvent(
            'ShoppingCartRemovePromotionCodeFinished',
            44118,
            1,
            EventChannel.Debug,
            EventLevel.Informational,
            [],
            '',
            '',
            'Removing promotion code finished.'
        );
    }

    public static shoppingCartUpdateLoyaltyCardIdStarted(): void {
        LoggerBase.writeEvent(
            'ShoppingCartUpdateLoyaltyCardIdStarted',
            44120,
            1,
            EventChannel.Debug,
            EventLevel.Informational,
            [],
            '',
            '',
            'Updating loyalty card id started.'
        );
    }

    public static shoppingCartUpdateLoyaltyCardIdError(error: string): void {
        LoggerBase.writeEvent(
            'ShoppingCartUpdateLoyaltyCardIdError',
            44121,
            1,
            EventChannel.Operational,
            EventLevel.Error,
            [],
            '',
            '',
            'Updating loyalty card id failed with error {0}.'
        );
    }

    public static shoppingCartUpdateLoyaltyCardIdFinished(): void {
        LoggerBase.writeEvent(
            'ShoppingCartUpdateLoyaltyCardIdFinished',
            44122,
            1,
            EventChannel.Debug,
            EventLevel.Informational,
            [],
            '',
            '',
            'Updating loyalty card id finished.'
        );
    }

    public static shoppingCartCommenceCheckoutStarted(): void {
        LoggerBase.writeEvent(
            'ShoppingCartCommenceCheckoutStarted',
            44124,
            1,
            EventChannel.Debug,
            EventLevel.Informational,
            [],
            '',
            '',
            'Commence checkout started.'
        );
    }

    public static shoppingCartCommenceCheckoutError(error: string): void {
        LoggerBase.writeEvent(
            'ShoppingCartCommenceCheckoutError',
            44125,
            1,
            EventChannel.Operational,
            EventLevel.Error,
            [],
            '',
            '',
            'Commence checkout failed with error {0}.'
        );
    }

    public static shoppingCartCommenceCheckoutFinished(): void {
        LoggerBase.writeEvent(
            'ShoppingCartCommenceCheckoutFinished',
            44126,
            1,
            EventChannel.Debug,
            EventLevel.Informational,
            [],
            '',
            '',
            'Commence checkout finished.'
        );
    }

    public static shoppingCartGetPromotionsStarted(): void {
        LoggerBase.writeEvent(
            'ShoppingCartGetPromotionsStarted',
            44128,
            1,
            EventChannel.Debug,
            EventLevel.Informational,
            [],
            '',
            '',
            'Getting promotions started.'
        );
    }

    public static shoppingCartGetPromotionsError(error: string): void {
        LoggerBase.writeEvent(
            'ShoppingCartGetPromotionsError',
            44129,
            1,
            EventChannel.Operational,
            EventLevel.Error,
            [],
            '',
            '',
            'Getting promotions failed with error {0}.'
        );
    }

    public static shoppingCartGetPromotionsFinished(): void {
        LoggerBase.writeEvent(
            'ShoppingCartGetPromotionsFinished',
            44130,
            1,
            EventChannel.Debug,
            EventLevel.Informational,
            [],
            '',
            '',
            'Getting promotions finished.'
        );
    }

    public static getSimpleProductsByIdStarted(): void {
        LoggerBase.writeEvent(
            'getSimpleProductsByIdStarted',
            44132,
            1,
            EventChannel.Debug,
            EventLevel.Informational,
            [],
            '',
            '',
            'Getting simple products by ids started.'
        );
    }

    public static getSimpleProductsByIdError(error: string): void {
        LoggerBase.writeEvent(
            'getSimpleProductsByIdError',
            44133,
            1,
            EventChannel.Operational,
            EventLevel.Error,
            [],
            '',
            '',
            'Getting simple products by ids failed with error {0}.'
        );
    }

    public static getSimpleProductsByIdFinished(): void {
        LoggerBase.writeEvent(
            'getSimpleProductsByIdFinished',
            44134,
            1,
            EventChannel.Debug,
            EventLevel.Informational,
            [],
            '',
            '',
            'Getting simple products by ids finished.'
        );
    }

    public static getKitComponentsError(): void {
        LoggerBase.writeEvent(
            'GetKitComponentsError',
            44136,
            1,
            EventChannel.Operational,
            EventLevel.Error,
            [],
            '',
            '',
            'One of the kit components could not be retrieved.'
        );
    }

    public static searchProductsByProductIdsStarted(): void {
        LoggerBase.writeEvent(
            'SearchProductsByProductIdsStarted',
            44140,
            1,
            EventChannel.Debug,
            EventLevel.Informational,
            [],
            '',
            '',
            'Searching products by product ids started.'
        );
    }

    public static searchProductsByProductIdsError(error: string): void {
        LoggerBase.writeEvent(
            'SearchProductsByProductIdsError',
            44141,
            1,
            EventChannel.Operational,
            EventLevel.Error,
            [],
            '',
            '',
            'Searching products by product ids failed with error {0}.'
        );
    }

    public static searchProductsByProductIdsFinished(): void {
        LoggerBase.writeEvent(
            'SearchProductsByProductIdsFinished',
            44142,
            1,
            EventChannel.Debug,
            EventLevel.Informational,
            [],
            '',
            '',
            'Searching products by product ids finished.'
        );
    }

    // Checkout Service - Event Range: 44200 - 44299.
    public static checkoutServiceGetAllDeliveryOptionDescriptionsStarted(): void {
        LoggerBase.writeEvent(
            'CheckoutServiceGetAllDeliveryOptionDescriptionsStarted',
            44200,
            1,
            EventChannel.Debug,
            EventLevel.Informational,
            [],
            '',
            '',
            'Get all delivery option descriptions started.'
        );
    }

    public static checkoutServiceGetAllDeliveryOptionDescriptionsError(error: string): void {
        LoggerBase.writeEvent(
            'CheckoutServiceGetAllDeliveryOptionDescriptionsError',
            44201,
            1,
            EventChannel.Operational,
            EventLevel.Error,
            [],
            '',
            '',
            'Get all delivery option descriptions failed with error {0}.'
        );
    }

    public static checkoutServiceGetAllDeliveryOptionDescriptionsFinished(): void {
        LoggerBase.writeEvent(
            'CheckoutServiceGetAllDeliveryOptionDescriptionsFinished',
            44202,
            1,
            EventChannel.Debug,
            EventLevel.Informational,
            [],
            '',
            '',
            'Get all delivery option descriptions finished.'
        );
    }

    public static checkoutServiceGetDeliveryPreferencesStarted(): void {
        LoggerBase.writeEvent(
            'CheckoutServiceGetDeliveryPreferencesStarted',
            44204,
            1,
            EventChannel.Debug,
            EventLevel.Informational,
            [],
            '',
            '',
            'Getting delivery preferences started.'
        );
    }

    public static checkoutServiceGetDeliveryPreferencesError(error: string): void {
        LoggerBase.writeEvent(
            'CheckoutServiceGetDeliveryPreferencesError',
            44205,
            1,
            EventChannel.Operational,
            EventLevel.Error,
            [],
            '',
            '',
            'Getting delivery preferences failed with error {0}.'
        );
    }

    public static checkoutServiceGetDeliveryPreferencesFinished(): void {
        LoggerBase.writeEvent(
            'CheckoutServiceGetDeliveryPreferencesFinished',
            44206,
            1,
            EventChannel.Debug,
            EventLevel.Informational,
            [],
            '',
            '',
            'Getting delivery preferences finished.'
        );
    }

    public static checkoutServiceGetOrderDeliveryOptionsStarted(): void {
        LoggerBase.writeEvent(
            'CheckoutServiceGetOrderDeliveryOptionsStarted',
            44208,
            1,
            EventChannel.Debug,
            EventLevel.Informational,
            [],
            '',
            '',
            'Getting order delivery options started.'
        );
    }

    public static checkoutServiceGetOrderDeliveryOptionsError(error: string): void {
        LoggerBase.writeEvent(
            'CheckoutServiceGetOrderDeliveryOptionsError',
            44209,
            1,
            EventChannel.Operational,
            EventLevel.Error,
            [],
            '',
            '',
            'Getting order delivery options failed with error {0}.'
        );
    }

    public static checkoutServiceGetOrderDeliveryOptionsFinished(): void {
        LoggerBase.writeEvent(
            'CheckoutServiceGetOrderDeliveryOptionsFinished',
            44210,
            1,
            EventChannel.Debug,
            EventLevel.Informational,
            [],
            '',
            '',
            'Getting order delivery options finished.'
        );
    }

    public static checkoutServiceGetItemDeliveryOptionsStarted(): void {
        LoggerBase.writeEvent(
            'CheckoutServiceGetItemDeliveryOptionsStarted',
            44212,
            1,
            EventChannel.Debug,
            EventLevel.Informational,
            [],
            '',
            '',
            'Getting item delivery options started.'
        );
    }

    public static checkoutServiceGetItemDeliveryOptionsError(error: string): void {
        LoggerBase.writeEvent(
            'CheckoutServiceGetItemDeliveryOptionsError',
            44213,
            1,
            EventChannel.Operational,
            EventLevel.Error,
            [],
            '',
            '',
            'Getting item delivery options failed with error {0}.'
        );
    }

    public static checkoutServiceGetItemDeliveryOptionsFinished(): void {
        LoggerBase.writeEvent(
            'CheckoutServiceGetItemDeliveryOptionsFinished',
            44214,
            1,
            EventChannel.Debug,
            EventLevel.Informational,
            [],
            '',
            '',
            'Getting item delivery options finished.'
        );
    }

    public static checkoutServiceUpdateDeliverySpecificationsStarted(): void {
        LoggerBase.writeEvent(
            'CheckoutServiceUpdateDeliverySpecificationsStarted',
            44216,
            1,
            EventChannel.Debug,
            EventLevel.Informational,
            [],
            '',
            '',
            'Update of order delivery specifications started.'
        );
    }

    public static checkoutServiceUpdateDeliverySpecificationsError(error: string): void {
        LoggerBase.writeEvent(
            'CheckoutServiceUpdateDeliverySpecificationsError',
            44217,
            1,
            EventChannel.Operational,
            EventLevel.Error,
            [],
            '',
            '',
            'Update of order delivery specifications failed with error {0}.'
        );
    }

    public static checkoutServiceUpdateDeliverySpecificationsFinished(): void {
        LoggerBase.writeEvent(
            'CheckoutServiceUpdateDeliverySpecificationsFinished',
            44218,
            1,
            EventChannel.Debug,
            EventLevel.Informational,
            [],
            '',
            '',
            'Update of order delivery specifications finished.'
        );
    }

    public static checkoutServiceUpdateLineDeliverySpecificationsStarted(): void {
        LoggerBase.writeEvent(
            'CheckoutServiceUpdateLineDeliverySpecificationsStarted',
            44220,
            1,
            EventChannel.Debug,
            EventLevel.Informational,
            [],
            '',
            '',
            'Update of line delivery specifications started.'
        );
    }

    public static checkoutServiceUpdateLineDeliverySpecificationsError(error: string): void {
        LoggerBase.writeEvent(
            'CheckoutServiceUpdateLineDeliverySpecificationsError',
            44221,
            1,
            EventChannel.Operational,
            EventLevel.Error,
            [],
            '',
            '',
            'Update of line delivery specifications failed with error {0}.'
        );
    }

    public static checkoutServiceUpdateLineDeliverySpecificationsFinished(): void {
        LoggerBase.writeEvent(
            'CheckoutServiceUpdateLineDeliverySpecificationsFinished',
            44222,
            1,
            EventChannel.Debug,
            EventLevel.Informational,
            [],
            '',
            '',
            'Update of line delivery specifications finished.'
        );
    }

    public static checkoutServiceGetPaymentCardTypesStarted(): void {
        LoggerBase.writeEvent(
            'CheckoutServiceGetPaymentCardTypesStarted',
            44224,
            1,
            EventChannel.Debug,
            EventLevel.Informational,
            [],
            '',
            '',
            'Getting payment card types started.'
        );
    }

    public static checkoutServiceGetPaymentCardTypesError(error: string): void {
        LoggerBase.writeEvent(
            'CheckoutServiceGetPaymentCardTypesError',
            44225,
            1,
            EventChannel.Operational,
            EventLevel.Error,
            [],
            '',
            '',
            'Getting payment card types failed with error {0}.'
        );
    }

    public static checkoutServiceGetPaymentCardTypesFinished(): void {
        LoggerBase.writeEvent(
            'CheckoutServiceGetPaymentCardTypesFinished',
            44226,
            1,
            EventChannel.Debug,
            EventLevel.Informational,
            [],
            '',
            '',
            'Getting payment card types finished.'
        );
    }

    public static checkoutServiceGetGiftCardBalanceStarted(): void {
        LoggerBase.writeEvent(
            'CheckoutServiceGetGiftCardBalanceStarted',
            44228,
            1,
            EventChannel.Debug,
            EventLevel.Informational,
            [],
            '',
            '',
            'Getting gift card balance started.'
        );
    }

    public static checkoutServiceGetGiftCardBalanceError(error: string): void {
        LoggerBase.writeEvent(
            'CheckoutServiceGetGiftCardBalanceError',
            44229,
            1,
            EventChannel.Operational,
            EventLevel.Error,
            [],
            '',
            '',
            'Getting gift card balance failed with error {0}.'
        );
    }

    public static checkoutServiceGetGiftCardBalanceFinished(): void {
        LoggerBase.writeEvent(
            'CheckoutServiceGetGiftCardBalanceFinished',
            44230,
            1,
            EventChannel.Debug,
            EventLevel.Informational,
            [],
            '',
            '',
            'Getting gift card balance finished.'
        );
    }

    public static checkoutServiceSubmitOrderStarted(): void {
        LoggerBase.writeEvent(
            'CheckoutServiceSubmitOrderStarted',
            44232,
            1,
            EventChannel.Debug,
            EventLevel.Informational,
            [],
            '',
            '',
            'Submit order started.'
        );
    }

    public static checkoutServiceSubmitOrderError(error: string): void {
        LoggerBase.writeEvent(
            'CheckoutServiceSubmitOrderError',
            44233,
            1,
            EventChannel.Operational,
            EventLevel.Error,
            [],
            '',
            '',
            'Submit order failed with error {0}.'
        );
    }

    public static checkoutServiceSubmitOrderFinished(): void {
        LoggerBase.writeEvent(
            'CheckoutServiceSubmitOrderFinished',
            44234,
            1,
            EventChannel.Debug,
            EventLevel.Informational,
            [],
            '',
            '',
            'Submit order finished.'
        );
    }

    public static checkoutServiceGetCardPaymentAcceptUrlStarted(): void {
        LoggerBase.writeEvent(
            'CheckoutServiceGetCardPaymentAcceptUrlStarted',
            44235,
            1,
            EventChannel.Debug,
            EventLevel.Informational,
            [],
            '',
            '',
            'Get card payment accept url started.'
        );
    }

    public static checkoutServiceGetCardPaymentAcceptUrlFinished(): void {
        LoggerBase.writeEvent(
            'CheckoutServiceGetCardPaymentAcceptUrlFinished',
            44236,
            1,
            EventChannel.Debug,
            EventLevel.Informational,
            [],
            '',
            '',
            'Get card payment accept url finished.'
        );
    }

    public static checkoutServiceGetCardPaymentAcceptUrlError(error: string): void {
        LoggerBase.writeEvent(
            'CheckoutServiceGetCardPaymentAcceptUrlError',
            44237,
            1,
            EventChannel.Operational,
            EventLevel.Error,
            [],
            '',
            '',
            'Get card payment accept url failed with error {0}.'
        );
    }

    public static checkoutServiceRetrieveCardPaymentAcceptResultStarted(): void {
        LoggerBase.writeEvent(
            'CheckoutServiceRetrieveCardPaymentAcceptResultStarted',
            44238,
            1,
            EventChannel.Debug,
            EventLevel.Informational,
            [],
            '',
            '',
            'Retrieve card payment accept result started.'
        );
    }

    public static checkoutServiceRetrieveCardPaymentAcceptResultFinished(): void {
        LoggerBase.writeEvent(
            'CheckoutServiceRetrieveCardPaymentAcceptResultFinished',
            44239,
            1,
            EventChannel.Debug,
            EventLevel.Informational,
            [],
            '',
            '',
            'Retrieve card payment accept result finished.'
        );
    }

    public static checkoutServiceRetrieveCardPaymentAcceptResultError(error: string): void {
        LoggerBase.writeEvent(
            'CheckoutServiceRetrieveCardPaymentAcceptResultError',
            44240,
            1,
            EventChannel.Operational,
            EventLevel.Error,
            [],
            '',
            '',
            'Retrieve card payment accept result failed with error {0}.'
        );
    }

    public static checkoutServiceCleanUpAfterSuccessfulOrderStarted(): void {
        LoggerBase.writeEvent(
            'CheckoutServiceCleanUpAfterSuccessfulOrderStarted',
            44241,
            1,
            EventChannel.Debug,
            EventLevel.Informational,
            [],
            '',
            '',
            'Shopping cart clean failed post successful submit order started.'
        );
    }

    public static checkoutServiceCleanUpAfterSuccessfulOrderError(error: string): void {
        LoggerBase.writeEvent(
            'CheckoutServiceCleanUpAfterSuccessfulOrderError',
            44242,
            1,
            EventChannel.Operational,
            EventLevel.Error,
            [],
            '',
            '',
            'Shopping cart clean failed post successful submit order with error {0}.'
        );
    }

    public static checkoutServiceCleanUpAfterSuccessfulOrderFinished(): void {
        LoggerBase.writeEvent(
            'CheckoutServiceCleanUpAfterSuccessfulOrderFinished',
            44243,
            1,
            EventChannel.Debug,
            EventLevel.Informational,
            [],
            '',
            '',
            'Shopping cart clean failed post successful submit order finished.'
        );
    }

    // Channel Service - Event Range: 44300 - 44349.
    public static channelServiceGetChannelConfigurationStarted(): void {
        LoggerBase.writeEvent(
            'ChannelServiceGetChannelConfigurationStarted',
            44300,
            1,
            EventChannel.Debug,
            EventLevel.Informational,
            [],
            '',
            '',
            'Get channel Configuration started.'
        );
    }

    public static channelServiceGetChannelConfigurationError(error: string): void {
        LoggerBase.writeEvent(
            'ChannelServiceGetChannelConfigurationError',
            44301,
            1,
            EventChannel.Operational,
            EventLevel.Error,
            [],
            '',
            '',
            'Get channel Configuration failed with error {0}.'
        );
    }

    public static channelServiceGetChannelConfigurationFinished(): void {
        LoggerBase.writeEvent(
            'ChannelServiceGetChannelConfigurationFinished',
            44302,
            1,
            EventChannel.Debug,
            EventLevel.Informational,
            [],
            '',
            '',
            'Get channel Configuration finished.'
        );
    }

    public static channelServiceGetCountryRegionInfoStarted(): void {
        LoggerBase.writeEvent(
            'ChannelServiceGetCountryRegionInfoStarted',
            44304,
            1,
            EventChannel.Debug,
            EventLevel.Informational,
            [],
            '',
            '',
            'Get country region info started.'
        );
    }

    public static channelServiceGetCountryRegionInfoError(error: string): void {
        LoggerBase.writeEvent(
            'ChannelServiceGetCountryRegionInfoError',
            44305,
            1,
            EventChannel.Operational,
            EventLevel.Error,
            [],
            '',
            '',
            'Get country region info failed with error {0}.'
        );
    }

    public static channelServiceGetCountryRegionInfoFinished(): void {
        LoggerBase.writeEvent(
            'ChannelServiceGetCountryRegionInfoFinished',
            44306,
            1,
            EventChannel.Debug,
            EventLevel.Informational,
            [],
            '',
            '',
            'Get country region info finished.'
        );
    }

    public static channelServiceGetStateProvinceInfoStarted(): void {
        LoggerBase.writeEvent(
            'ChannelServiceGetStateProvinceInfoStarted',
            44308,
            1,
            EventChannel.Debug,
            EventLevel.Informational,
            [],
            '',
            '',
            'Get state province info started.'
        );
    }

    public static channelServiceGetStateProvinceInfoError(error: string): void {
        LoggerBase.writeEvent(
            'ChannelServiceGetStateProvinceInfoError',
            44309,
            1,
            EventChannel.Operational,
            EventLevel.Error,
            [],
            '',
            '',
            'Get state province info error {0}.'
        );
    }

    public static channelServiceGetStateProvinceInfoFinished(): void {
        LoggerBase.writeEvent(
            'ChannelServiceGetStateProvinceInfoFinished',
            44310,
            1,
            EventChannel.Debug,
            EventLevel.Informational,
            [],
            '',
            '',
            'Get state province info finished.'
        );
    }

    public static channelServiceGetTenderTypesStarted(): void {
        LoggerBase.writeEvent(
            'ChannelServiceGetTenderTypesStarted',
            44312,
            1,
            EventChannel.Debug,
            EventLevel.Informational,
            [],
            '',
            '',
            'Get tender types started.'
        );
    }

    public static channelServiceGetTenderTypesError(error: string): void {
        LoggerBase.writeEvent(
            'ChannelServiceGetTenderTypesError',
            44313,
            1,
            EventChannel.Operational,
            EventLevel.Error,
            [],
            '',
            '',
            'Get tender types failed with error {0}.'
        );
    }

    public static channelServiceGetTenderTypesFinished(): void {
        LoggerBase.writeEvent(
            'ChannelServiceGetTenderTypesFinished',
            44314,
            1,
            EventChannel.Debug,
            EventLevel.Informational,
            [],
            '',
            '',
            'Get tender types finished.'
        );
    }

    public static channelServiceGetCardTypesStarted(): void {
        LoggerBase.writeEvent(
            'ChannelServiceGetCardTypesStarted',
            44315,
            1,
            EventChannel.Debug,
            EventLevel.Informational,
            [],
            '',
            '',
            'Get card types started.'
        );
    }

    public static channelServiceGetCardTypesError(error: string): void {
        LoggerBase.writeEvent(
            'ChannelServiceGetCardTypesError',
            44316,
            1,
            EventChannel.Operational,
            EventLevel.Error,
            [],
            '',
            '',
            'Get card types failed with error {0}.'
        );
    }

    public static channelServiceGetCardTypesFinished(): void {
        LoggerBase.writeEvent(
            'ChannelServiceGetCardTypesFinished',
            44317,
            1,
            EventChannel.Debug,
            EventLevel.Informational,
            [],
            '',
            '',
            'Get card types finished.'
        );
    }

    // Item Availability Service - Event Range: 44350 - 44369.
    public static storeProductAvailabilityServiceGetNearbyStoresWithAvailabilityStarted(): void {
        LoggerBase.writeEvent(
            'StoreProductAvailabilityServiceGetNearbyStoresWithAvailabilityStarted',
            44350,
            1,
            EventChannel.Debug,
            EventLevel.Informational,
            [],
            '',
            '',
            'Get nearby stores with availability started.'
        );
    }

    public static storeProductAvailabilityServiceGetNearbyStoresWithAvailabilityError(error: string): void {
        LoggerBase.writeEvent(
            'StoreProductAvailabilityServiceGetNearbyStoresWithAvailabilityError',
            44351,
            1,
            EventChannel.Operational,
            EventLevel.Error,
            [],
            '',
            '',
            'Get nearby stores with availability failed with error {0}.'
        );
    }

    public static storeProductAvailabilityServiceGetNearbyStoresWithAvailabilityFinished(): void {
        LoggerBase.writeEvent(
            'StoreProductAvailabilityServiceGetNearbyStoresWithAvailabilityFinished',
            44352,
            1,
            EventChannel.Debug,
            EventLevel.Informational,
            [],
            '',
            '',
            'Get nearby stores with availability finished.'
        );
    }

    public static storeProductAvailabilityServiceGetNearbyStoresStarted(): void {
        LoggerBase.writeEvent(
            'StoreProductAvailabilityServiceGetNearbyStoresStarted',
            44354,
            1,
            EventChannel.Debug,
            EventLevel.Informational,
            [],
            '',
            '',
            'Get nearby stores started.'
        );
    }

    public static storeProductAvailabilityServiceGetNearbyStoresError(error: string): void {
        LoggerBase.writeEvent(
            'StoreProductAvailabilityServiceGetNearbyStoresError',
            44355,
            1,
            EventChannel.Operational,
            EventLevel.Error,
            [],
            '',
            '',
            'Get nearby stores failed with error {0}.'
        );
    }

    public static storeProductAvailabilityServiceGetNearbyStoresFinished(): void {
        LoggerBase.writeEvent(
            'StoreProductAvailabilityServiceGetNearbyStoresFinished',
            44356,
            1,
            EventChannel.Debug,
            EventLevel.Informational,
            [],
            '',
            '',
            'Get nearby stores finished.'
        );
    }

    // Loyalty Service - Event Range: 44370 - 44399.
    public static loyaltyServiceGetLoyaltyCardsStarted(): void {
        LoggerBase.writeEvent(
            'LoyaltyServiceGetLoyaltyCardsStarted',
            44370,
            1,
            EventChannel.Debug,
            EventLevel.Informational,
            [],
            '',
            '',
            'Get loyalty cards started.'
        );
    }

    public static loyaltyServiceGetLoyaltyCardsError(error: string): void {
        LoggerBase.writeEvent(
            'LoyaltyServiceGetLoyaltyCardsError',
            44371,
            1,
            EventChannel.Operational,
            EventLevel.Error,
            [],
            '',
            '',
            'Get loyalty cards failed with error {0}.'
        );
    }

    public static loyaltyServiceGetLoyaltyCardsFinished(): void {
        LoggerBase.writeEvent(
            'LoyaltyServiceGetLoyaltyCardsFinished',
            44372,
            1,
            EventChannel.Debug,
            EventLevel.Informational,
            [],
            '',
            '',
            'Get loyalty cards finished.'
        );
    }

    public static loyaltyServiceUpdateLoyaltyCardIdStarted(): void {
        LoggerBase.writeEvent(
            'loyaltyServiceUpdateLoyaltyCardIdStarted',
            44374,
            1,
            EventChannel.Debug,
            EventLevel.Informational,
            [],
            '',
            '',
            'Update loyalty card id started.'
        );
    }

    public static loyaltyServiceUpdateLoyaltyCardIdError(error: string): void {
        LoggerBase.writeEvent(
            'LoyaltyServiceUpdateLoyaltyCardIdError',
            44375,
            1,
            EventChannel.Operational,
            EventLevel.Error,
            [],
            '',
            '',
            'Update loyalty card id failed with error {0}.'
        );
    }

    public static loyaltyServiceUpdateLoyaltyCardIdFinished(): void {
        LoggerBase.writeEvent(
            'LoyaltyServiceUpdateLoyaltyCardIdFinished',
            44376,
            1,
            EventChannel.Debug,
            EventLevel.Informational,
            [],
            '',
            '',
            'Update loyalty card id finished.'
        );
    }

    // Customer Service - Event Range: 44400 - 44499.
    public static customerServiceGetCustomerStarted(): void {
        LoggerBase.writeEvent(
            'CustomerServiceGetCustomerStarted',
            44400,
            1,
            EventChannel.Debug,
            EventLevel.Informational,
            [],
            '',
            '',
            'Get customer started.'
        );
    }

    public static customerServiceGetCustomerError(error: string): void {
        LoggerBase.writeEvent(
            'CustomerServiceGetCustomerError',
            44401,
            1,
            EventChannel.Operational,
            EventLevel.Error,
            [],
            '',
            '',
            'Get customer failed with error {0}.'
        );
    }

    public static customerServiceGetCustomerFinished(): void {
        LoggerBase.writeEvent(
            'CustomerServiceGetCustomerFinished',
            44402,
            1,
            EventChannel.Debug,
            EventLevel.Informational,
            [],
            '',
            '',
            'Get customer finished.'
        );
    }

    public static customerServiceIsAuthenticationSessionStarted(): void {
        LoggerBase.writeEvent(
            'CustomerServiceIsAuthenticationSessionStarted',
            44403,
            1,
            EventChannel.Debug,
            EventLevel.Informational,
            [],
            '',
            '',
            'Is authentication session started.'
        );
    }

    public static customerServiceIsAuthenticationSessionError(error: string): void {
        LoggerBase.writeEvent(
            'CustomerServiceIsAuthenticationSessionError',
            44404,
            1,
            EventChannel.Operational,
            EventLevel.Error,
            [],
            '',
            '',
            'Is authentication session failed with error {0}.'
        );
    }

    public static customerServiceIsAuthenticationSessionFinished(): void {
        LoggerBase.writeEvent(
            'CustomerServiceIsAuthenticationSessionFinished',
            44405,
            1,
            EventChannel.Debug,
            EventLevel.Informational,
            [],
            '',
            '',
            'Is authentication session finished.'
        );
    }

    // Order Service - Event Range: 44500 - 44599.
    public static getOrderHistoryStarted(): void {
        LoggerBase.writeEvent(
            'GetOrderHistoryStarted',
            44500,
            1,
            EventChannel.Debug,
            EventLevel.Informational,
            [],
            '',
            '',
            'Get order history started.'
        );
    }

    public static getOrderHistoryError(error: string): void {
        LoggerBase.writeEvent(
            'GetOrderHistoryError',
            44501,
            1,
            EventChannel.Operational,
            EventLevel.Error,
            [],
            '',
            '',
            'Get order history failed with error {0}.'
        );
    }

    public static getOrderHistoryFinished(): void {
        LoggerBase.writeEvent(
            'GetOrderHistoryFinished',
            44502,
            1,
            EventChannel.Debug,
            EventLevel.Informational,
            [],
            '',
            '',
            'Get order history finished.'
        );
    }

    public static getOrderDetailsStarted(): void {
        LoggerBase.writeEvent(
            'GetOrderDetailsStarted',
            44504,
            1,
            EventChannel.Debug,
            EventLevel.Informational,
            [],
            '',
            '',
            'Get order details started.'
        );
    }

    public static getOrderDetailsError(error: string): void {
        LoggerBase.writeEvent(
            'GetOrderDetailsError',
            44505,
            1,
            EventChannel.Operational,
            EventLevel.Error,
            [],
            '',
            '',
            'Get order details failed with error {0}.'
        );
    }

    public static getOrderDetailsFinished(): void {
        LoggerBase.writeEvent(
            'GetOrderDetailsFinished',
            44506,
            1,
            EventChannel.Debug,
            EventLevel.Informational,
            [],
            '',
            '',
            'Get order details finished.'
        );
    }

    // Commerce list realtime service - Event Range: 44600 - 44699.
    public static createWishListStarted(): void {
        LoggerBase.writeEvent(
            'CreateWishListStarted',
            44600,
            1,
            EventChannel.Debug,
            EventLevel.Informational,
            [],
            '',
            '',
            'Create wish list started.'
        );
    }

    public static createWishListError(error: string): void {
        LoggerBase.writeEvent(
            'CreateWishListError',
            44601,
            1,
            EventChannel.Operational,
            EventLevel.Error,
            [],
            '',
            '',
            'Create wish list failed with error {0}.'
        );
    }

    public static createWishListFinished(): void {
        LoggerBase.writeEvent(
            'CreateWishListFinished',
            44602,
            1,
            EventChannel.Debug,
            EventLevel.Informational,
            [],
            '',
            '',
            'Create wish list finished.'
        );
    }

    public static deleteWishListStarted(): void {
        LoggerBase.writeEvent(
            'DeleteWishListStarted',
            44604,
            1,
            EventChannel.Debug,
            EventLevel.Informational,
            [],
            '',
            '',
            'Delete wish list started.'
        );
    }

    public static deleteWishListError(error: string): void {
        LoggerBase.writeEvent(
            'DeleteWishListError',
            44605,
            1,
            EventChannel.Operational,
            EventLevel.Error,
            [],
            '',
            '',
            'Delete wish list failed with error {0}.'
        );
    }

    public static deleteWishListFinished(): void {
        LoggerBase.writeEvent(
            'DeleteWishListFinished',
            44606,
            1,
            EventChannel.Debug,
            EventLevel.Informational,
            [],
            '',
            '',
            'Delete wish list finished.'
        );
    }

    public static updateWishListStarted(): void {
        LoggerBase.writeEvent(
            'UpdateWishListStarted',
            44608,
            1,
            EventChannel.Debug,
            EventLevel.Informational,
            [],
            '',
            '',
            'Update wish list started.'
        );
    }

    public static updateWishListError(error: string): void {
        LoggerBase.writeEvent(
            'UpdateWishListError',
            44609,
            1,
            EventChannel.Operational,
            EventLevel.Error,
            [],
            '',
            '',
            'Update wish list failed with error {0}.'
        );
    }

    public static updateWishListFinished(): void {
        LoggerBase.writeEvent(
            'UpdateWishListFinished',
            44610,
            1,
            EventChannel.Debug,
            EventLevel.Informational,
            [],
            '',
            '',
            'Update wish list finished.'
        );
    }

    public static getWishListsStarted(): void {
        LoggerBase.writeEvent(
            'GetWishListsStarted',
            44612,
            1,
            EventChannel.Debug,
            EventLevel.Informational,
            [],
            '',
            '',
            'Get wish lists started.'
        );
    }

    public static getWishListsError(error: string): void {
        LoggerBase.writeEvent(
            'GetWishListsError',
            44613,
            1,
            EventChannel.Operational,
            EventLevel.Error,
            [],
            '',
            '',
            'Get wish lists failed with error {0}.'
        );
    }

    public static getWishListsFinished(): void {
        LoggerBase.writeEvent(
            'GetWishListsFinished',
            44614,
            1,
            EventChannel.Debug,
            EventLevel.Informational,
            [],
            '',
            '',
            'Get wish lists finished.'
        );
    }

    public static getWishListStarted(): void {
        LoggerBase.writeEvent(
            'GetWishListStarted',
            44616,
            1,
            EventChannel.Debug,
            EventLevel.Informational,
            [],
            '',
            '',
            'Get wish list started.'
        );
    }

    public static getWishListError(error: string): void {
        LoggerBase.writeEvent(
            'GetWishListError',
            44617,
            1,
            EventChannel.Operational,
            EventLevel.Error,
            [],
            '',
            '',
            'Get wish list failed with error {0}.'
        );
    }

    public static getWishListFinished(): void {
        LoggerBase.writeEvent(
            'GetWishListFinished',
            44618,
            1,
            EventChannel.Debug,
            EventLevel.Informational,
            [],
            '',
            '',
            'Get wish list finished.'
        );
    }

    public static addLinesToWishListStarted(): void {
        LoggerBase.writeEvent(
            'AddLinesToWishListStarted',
            44620,
            1,
            EventChannel.Debug,
            EventLevel.Informational,
            [],
            '',
            '',
            'Add lines to wish list started.'
        );
    }

    public static addLinesToWishListError(error: string): void {
        LoggerBase.writeEvent(
            'AddLinesToWishListError',
            44621,
            1,
            EventChannel.Operational,
            EventLevel.Error,
            [],
            '',
            '',
            'Add lines to wish list failed with error {0}.'
        );
    }

    public static addLinesToWishListFinished(): void {
        LoggerBase.writeEvent(
            'AddLinesToWishListFinished',
            44622,
            1,
            EventChannel.Debug,
            EventLevel.Informational,
            [],
            '',
            '',
            'Add lines to wish list finished.'
        );
    }

    public static removeItemsFromWishListStarted(): void {
        LoggerBase.writeEvent(
            'RemoveItemsFromWishListStarted',
            44624,
            1,
            EventChannel.Debug,
            EventLevel.Informational,
            [],
            '',
            '',
            'Remove items from wish list started.'
        );
    }

    public static removeItemsFromWishListError(error: string): void {
        LoggerBase.writeEvent(
            'RemoveItemsFromWishListError',
            44625,
            1,
            EventChannel.Operational,
            EventLevel.Error,
            [],
            '',
            '',
            'Remove items from wish list failed with error {0}.'
        );
    }

    public static removeItemsFromWishListFinished(): void {
        LoggerBase.writeEvent(
            'RemoveItemsFromWishListFinished',
            44626,
            1,
            EventChannel.Debug,
            EventLevel.Informational,
            [],
            '',
            '',
            'Remove items from wish list finished.'
        );
    }

    public static updateLinesOnWishListStarted(): void {
        LoggerBase.writeEvent(
            'UpdateLinesOnWishListStarted',
            44628,
            1,
            EventChannel.Debug,
            EventLevel.Informational,
            [],
            '',
            '',
            'Update lines on wish list started.'
        );
    }

    public static updateLinesOnWishListError(error: string): void {
        LoggerBase.writeEvent(
            'UpdateLinesOnWishListError',
            44629,
            1,
            EventChannel.Operational,
            EventLevel.Error,
            [],
            '',
            '',
            'Update lines on wish list failed with error {0}.'
        );
    }

    public static updateLinesOnWishListFinished(): void {
        LoggerBase.writeEvent(
            'UpdateLinesOnWishListFinished',
            44630,
            1,
            EventChannel.Debug,
            EventLevel.Informational,
            [],
            '',
            '',
            'Update lines on wish list finished.'
        );
    }

    public static addItemsToCartStarted(): void {
        LoggerBase.writeEvent(
            'AddItemsToCartStarted',
            44632,
            1,
            EventChannel.Debug,
            EventLevel.Informational,
            [],
            '',
            '',
            'Add items to cart started.'
        );
    }

    public static addItemsToCartError(error: string): void {
        LoggerBase.writeEvent(
            'AddItemsToCartError',
            44633,
            1,
            EventChannel.Operational,
            EventLevel.Error,
            [],
            '',
            '',
            'Add items to cart failed with error {0}.'
        );
    }

    public static addItemsToCartFinished(): void {
        LoggerBase.writeEvent(
            'AddItemsToCartFinished',
            44634,
            1,
            EventChannel.Debug,
            EventLevel.Informational,
            [],
            '',
            '',
            'Add items to cart finished.'
        );
    }
}
