/*!
 * Copyright (c) Microsoft Corporation.
 * All rights reserved. See LICENSE in the project root for license information.
 */
import { IEventLogger, TelemetryEvent, TelemetryEventContent } from '../interfaces';
/**
 * Commerce Insights logger that sends events to MS clickstream pipeline
 */
export declare class CommerceInsightsLogger implements IEventLogger {
    private _client;
    /**
     * Registers the Web Analytics plugin for use with the Commerce Insights logger
     */
    registerWebAnalyticsPlugin: (webAnalyticsPlugin: object) => void;
    /**
     * Sends the given event to the Commerce Insights data pipeline
     * @param eventType Type of event to log
     * @param payload Extra parameters dependent on the eventType
     */
    logEvent(eventType: TelemetryEvent, payload: TelemetryEventContent): void;
    /**
     * Determines if the telemetry event data is array of ICartInfo
     * @param payload Telemetry event data to check
     */
    private _isCartInfo;
    /**
     * Determines if the telemetry event data is IProductTransaction
     * @param payload Telemetry event data to check
     */
    private _isProductTransaction;
    /**
     * Converts ICartInfo data into the format 1DS expects
     * @param payload Telemetry event data to convert
     */
    private _populateCartInfo;
    /**
     * Converts IProductInfo data into the format 1DS expects
     * @param payload Telemetry event data to convert
     */
    private _populateProductInfo;
    /**
     * Converts IProductTransaction data into the format 1DS expects
     * @param payload Telemetry event data to convert
     */
    private _populateProductTransaction;
}
