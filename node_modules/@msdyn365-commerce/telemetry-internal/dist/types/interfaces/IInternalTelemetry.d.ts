/*!
 * Copyright (c) Microsoft Corporation.
 * All rights reserved. See LICENSE in the project root for license information.
 */
import { ITelemetryCommon, ITelemetryModuleContext, LogLevel } from '../interfaces';
import { InternalTelemetryLogOptions } from '../telemetry/internal-telemetry-log-options';
export interface IInternalTelemetry extends ITelemetryCommon {
    /**
     * Logs a structured message at the given log level, with optional custom tags and/or an exception
     * @param logLevel LogLevel of the message
     * @param messageTemplate String to log, denoting placeholders with {placeholder}
     * @param logOptions Contains arguments to replace placeholders, custom tags for log, and optional error object
     */
    log(logLevel: LogLevel, messageTemplate: string, logOptions?: InternalTelemetryLogOptions): void;
    /**
     * Sets the portion of the telemetry context that will be attached to all logs for a module
     * @param moduleContext Part of the telemetry context that lasts during a module rendering
     */
    setTelemetryModuleContext(moduleContext: ITelemetryModuleContext): () => IInternalTelemetry;
}
