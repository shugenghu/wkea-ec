/*!
 * Copyright (c) Microsoft Corporation.
 * All rights reserved. See LICENSE in the project root for license information.
 */
import { ITelemetryContext, ITraceLogger, ITraceLoggerParams, LogLevel } from '../interfaces';
import { ITrackDependency } from '../interfaces/ITrackDependency';
/**
 * Page Logger
 * Captures server side logs and surfaces them to the client
 */
declare class PageLogger implements ITraceLogger {
    logs: string[];
    private options;
    initialize(options: ITraceLoggerParams): void;
    /**
     * @internal
     * Logs a message to the console, prefixed with custom tags, and with arguments following
     * @param logLevel LogLevel of the message
     * @param context Telemetry context to add to log
     * @param messageTemplate Structured log formatted string
     * @param placeholders List of placeholders in messageTemplate along with position in string
     * @param values Arguments to replace placeholders
     * @param customTags Array of strings to attach to log
     */
    sendLog(logLevel: LogLevel, context: ITelemetryContext, messageTemplate: string, placeholders: Map<string, any>, customTags?: string[], exception?: Error): void;
    /**
     * @internal
     * Logs a message to the console based on LogLevel
     */
    log(logLevel: LogLevel, message: string, args: unknown[], context: ITelemetryContext): void;
    /**
     * @internal
     * Logs an exception object to the console
     */
    exception(error: Error, context: ITelemetryContext): void;
    /**
     * @internal
     * Tracks a metric
     * @param name Metric name
     * @param value Metric value
     */
    trackMetric(name: string, value: number, context: ITelemetryContext): void;
    trackEvent<TProperties, TMeasurements>(name: string, properties?: TProperties, measurements?: TMeasurements, context?: ITelemetryContext): void;
    /**
     * Track a page view
     *
     * @param {string} name
     * @param {string} [url]
     */
    trackPageView(name: string, url?: string): void;
    /**
     * Track request
     * @param options the request options
     */
    trackDependency(options: ITrackDependency): void;
    private _print;
}
export { PageLogger };
