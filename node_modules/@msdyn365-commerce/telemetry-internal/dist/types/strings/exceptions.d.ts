/*!
 * Copyright (c) Microsoft Corporation.
 * All rights reserved. See LICENSE in the project root for license information.
 */
export declare const EXCEPTION_CURRENCY_FORMATTER = "Unable to determine currency format";
export declare const NAME_CURRENCY_FORMATTER_EXCEPTION = "CurrencyFormatterException";
export declare const EXCEPTION_LOAD_DATA_EXCEPTION = "Load data exception";
export declare const EXCEPTION_PARSE_ISSUE = "Content not parsed correctly";
export declare const EXCEPTION_GENERIC_EXPRESS = "Express Caught an exception";
export declare const EXCEPTION_INVALID_URL = "Invalid URL";
export declare const EXCEPTION_HTTP_TIMEOUT = "Request timed out";
export declare const EXCEPTION_PAGECONFIG = "Error while attempting to get page config";
export declare const EXCEPTION_PAGERENDERING = "Error in page rendering";
export declare const EXCEPTION_NO1RFRESPONSE = "Unable to retrieve Server page response";
export declare const EXCEPTION_UNREGISTEREDMODULEID = "Module id: $0, type: $1 is not registered";
export declare const EXCEPTION_ERROR_CLIENT_BOUNDARY = "Error in client error boundary";
export declare const EXCEPTION_MISSINGMODULECONFIG = "Module config is missing for module with id $0 type $1";
export declare const EXCEPTION_NOMODULEBINDER = "Cannot get module binder for $0";
export declare const EXCEPTION_MODULERENDERFAIL = "Failed to render module with id $0";
export declare const EXCEPTION_CLIENT_CACHE_HYDRATE = "Error while hydrating the client-side cache $0";
export declare const EXCEPTION_LOADDATA_ACTION = "Threw error while processing action";
export declare const EXCEPTION_LOADDATA_ACTION_0 = "Threw error while processing action $0 for module $1";
export declare const EXCEPTION_LOADDATA_ACTION_1 = "Issue with data action";
export declare const EXCEPTION_LOADDATA_ACTION_2 = "Issue with data action registered at $0 for module $1";
export declare const EXCEPTION_DATAACTION_EXECUTION = "Error encountered with execution of action: {actionError}";
export declare const EXCEPTION_NO_MOCKS_FOUND = "No mock files found with mock paths";
export declare const EXCEPTION_NOTYPEQUERY = "Please specify type query string. Eg: http://localhost:3000/modules?type=hero:hero1,hero:hero2";
export declare const EXCEPTION_JSONPARSEFAILED = "JSON Parsing failed";
export declare const EXCEPTION_BADCONFIGPASSED = "Malformed config $0 passed";
export declare const EXCEPTION_BADPAGECONTEXT = "PageContext can't be created with null or empty page data";
export declare const EXCEPTION_INITIALDATAFAIL = "Backend state not found on `window.___initialData___`. Unable to initialize client code.";
export declare const EXCEPTION_EXPECTED501 = "expected to throw 501: $0";
export declare const EXCEPTION_PARSECONFIGVALUE = "Failed to parse the given config value";
export declare const EXCEPTION_PRODUCT_LIST_ACTION = "Error while running productList hydration action";
export declare const EXCEPTION_PRODUCT_LIST_CLIENTSIDE_HYDRATION = "Error while hydrating productList on client";
export declare const EXCEPTION_LINK_ACTION = "Error while running link hydration action";
export declare const INVALID_PRODUCT_LIST_TYPE = "An invalid productList type was found $0";
export declare const NAME_CULTURE_INFO_FORMATTER_EXCEPTION = "CultureInfoFormatterException";
export declare const EXCEPTION_RS_INTERCEPT = "Could not intercept RS request";
export declare const EXCEPTION_INVALID_ARGUMENT: (functionName: string, invalidVariable: string) => string;
