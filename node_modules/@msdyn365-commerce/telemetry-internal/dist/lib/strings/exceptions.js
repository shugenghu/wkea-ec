/*!
 * Copyright (c) Microsoft Corporation.
 * All rights reserved. See LICENSE in the project root for license information.
 */
export const EXCEPTION_CURRENCY_FORMATTER = 'Unable to determine currency format';
export const NAME_CURRENCY_FORMATTER_EXCEPTION = 'CurrencyFormatterException';
export const EXCEPTION_LOAD_DATA_EXCEPTION = 'Load data exception';
export const EXCEPTION_PARSE_ISSUE = 'Content not parsed correctly';
export const EXCEPTION_GENERIC_EXPRESS = 'Express Caught an exception';
export const EXCEPTION_INVALID_URL = 'Invalid URL';
export const EXCEPTION_HTTP_TIMEOUT = 'Request timed out';
export const EXCEPTION_PAGECONFIG = 'Error while attempting to get page config';
export const EXCEPTION_PAGERENDERING = 'Error in page rendering';
export const EXCEPTION_NO1RFRESPONSE = 'Unable to retrieve Server page response';
export const EXCEPTION_UNREGISTEREDMODULEID = 'Module id: $0, type: $1 is not registered';
export const EXCEPTION_ERROR_CLIENT_BOUNDARY = 'Error in client error boundary';
export const EXCEPTION_MISSINGMODULECONFIG = 'Module config is missing for module with id $0 type $1';
export const EXCEPTION_NOMODULEBINDER = 'Cannot get module binder for $0';
export const EXCEPTION_MODULERENDERFAIL = 'Failed to render module with id $0';
export const EXCEPTION_CLIENT_CACHE_HYDRATE = 'Error while hydrating the client-side cache $0';
export const EXCEPTION_LOADDATA_ACTION = 'Threw error while processing action';
export const EXCEPTION_LOADDATA_ACTION_0 = 'Threw error while processing action $0 for module $1';
export const EXCEPTION_LOADDATA_ACTION_1 = 'Issue with data action';
export const EXCEPTION_LOADDATA_ACTION_2 = 'Issue with data action registered at $0 for module $1';
export const EXCEPTION_LOADDATA_ACTION_3 = 'Encountered an error while processing ajax data action $0';
export const EXCEPTION_API_ROUTE1 = 'missing id parameter';
export const EXCEPTION_API_ROUTE2 = 'invalid action id parameter passed';
export const EXCEPTION_DATAACTION_EXECUTION = 'Error encountered with execution of action: {actionError}';
export const EXCEPTION_NO_MOCKS_FOUND = 'No mock files found with mock paths';
export const EXCEPTION_NOTYPEQUERY = 'Please specify type query string. Eg: http://localhost:3000/modules?type=hero:hero1,hero:hero2';
export const EXCEPTION_JSONPARSEFAILED = 'JSON Parsing failed';
export const EXCEPTION_BADCONFIGPASSED = 'Malformed config $0 passed';
export const EXCEPTION_BADPAGECONTEXT = `PageContext can't be created with null or empty page data`;
export const EXCEPTION_INITIALDATAFAIL = 'Backend state not found on `window.___initialData___`. Unable to initialize client code.';
export const EXCEPTION_EXPECTED501 = 'expected to throw 501: $0';
export const EXCEPTION_PARSECONFIGVALUE = 'Failed to parse the given config value';
export const EXCEPTION_PRODUCT_LIST_ACTION = 'Error while running productList hydration action';
export const EXCEPTION_PRODUCT_LIST_CLIENTSIDE_HYDRATION = 'Error while hydrating productList on client';
export const EXCEPTION_LINK_ACTION = 'Error while running link hydration action';
export const INVALID_PRODUCT_LIST_TYPE = 'An invalid productList type was found $0';
export const NAME_CULTURE_INFO_FORMATTER_EXCEPTION = 'CultureInfoFormatterException';
export const EXCEPTION_RS_INTERCEPT = `Could not intercept RS request`;
export const EXCEPTION_INVALID_ARGUMENT = (functionName, invalidVariable) => {
    return `Invalid input. Argument ${invalidVariable} to ${functionName} is invalid or undefined.`;
};
//# sourceMappingURL=exceptions.js.map