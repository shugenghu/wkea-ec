{"version":3,"file":"commerce-insights-attribute-renderer.js","sourceRoot":"","sources":["../../../src/attribute-renderers/commerce-insights-attribute-renderer.ts"],"names":[],"mappings":"AAAA;;;GAGG;AAKH;;GAEG;AACH,MAAM,CAAC,MAAM,iCAAiC,GAA2B,CACrE,WAAmB,EACnB,uBAAgC,EACb,EAAE;IACrB,IAAI,UAAU,GAAW,EAAE,CAAC;IAE5B,IAAI,uBAAuB,EAAE;QACzB,KAAK,MAAM,IAAI,IAAI,MAAM,CAAC,OAAO,CAAC,uBAAuB,CAAC,EAAE;YACxD,UAAU,IAAI,KAAK,IAAI,CAAC,CAAC,CAAC,MAAM,IAAI,CAAC,CAAC,CAAC,GAAG,CAAC;SAC9C;KACJ;IAED,OAAO;QACH,YAAY,EAAE,GAAG,WAAW,EAAE;QAC9B,QAAQ,EAAE,WAAW,WAAW,IAAI,UAAU,GAAG;KACpD,CAAC;AACN,CAAC,CAAC","sourcesContent":["/*!\n * Copyright (c) Microsoft Corporation.\n * All rights reserved. See LICENSE in the project root for license information.\n */\n\nimport { IDataAttributeRenderer } from '../interfaces';\nimport { IDictionary } from '../interfaces/IDictionary';\n\n/**\n * Commerce Insights attribute renderer that generates a 'data-m' telemetry attribute\n */\nexport const commerceInsightsAttributeRenderer: IDataAttributeRenderer = (\n    telemetryId: string,\n    additionalTelemetryData?: object\n): IDictionary<string> => {\n    let properties: string = '';\n\n    if (additionalTelemetryData) {\n        for (const prop of Object.entries(additionalTelemetryData)) {\n            properties += `,\"${prop[0]}\":\"${prop[1]}\"`;\n        }\n    }\n\n    return {\n        'data-bi-id': `${telemetryId}`,\n        'data-m': `{\"tid\":\"${telemetryId}\"${properties}}`\n    };\n};\n"]}