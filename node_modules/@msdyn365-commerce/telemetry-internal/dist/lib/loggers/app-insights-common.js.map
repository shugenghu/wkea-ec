{"version":3,"file":"app-insights-common.js","sourceRoot":"","sources":["../../../src/loggers/app-insights-common.ts"],"names":[],"mappings":"AAAA;;;GAGG;AAKH,MAAM,CAAC,MAAM,cAAc,GAAG,CAAC,OAA0B,EAAuB,EAAE;IAC9E,MAAM,UAAU,GAAwB,EAAE,CAAC;IAC3C,0EAA0E;IAC1E,MAAM,EAAE,QAAQ,EAAE,UAAU,EAAE,GAAG,OAAO,CAAC,aAAa,CAAC;IACvD,IAAI,QAAQ,EAAE;QACV,UAAU,CAAC,WAAW,CAAC,GAAG,QAAQ,CAAC;KACtC;IACD,IAAI,UAAU,EAAE;QACZ,UAAU,CAAC,aAAa,CAAC,GAAG,UAAU,CAAC;KAC1C;IACD,OAAO,UAAU,CAAC;AACtB,CAAC,CAAC","sourcesContent":["/*!\n * Copyright (c) Microsoft Corporation.\n * All rights reserved. See LICENSE in the project root for license information.\n */\n\nimport { ITelemetryContext } from '../interfaces';\nimport { IDictionary } from '../interfaces/IDictionary';\n\nexport const _getProperties = (context: ITelemetryContext): IDictionary<string> => {\n    const properties: IDictionary<string> = {};\n    // Only add context to properties if they have been set (non-empty string)\n    const { moduleId, moduleType } = context.moduleContext;\n    if (moduleId) {\n        properties['Module ID'] = moduleId;\n    }\n    if (moduleType) {\n        properties['Module Type'] = moduleType;\n    }\n    return properties;\n};\n"]}