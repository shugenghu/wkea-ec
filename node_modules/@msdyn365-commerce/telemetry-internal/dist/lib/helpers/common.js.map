{"version":3,"file":"common.js","sourceRoot":"","sources":["../../../src/helpers/common.ts"],"names":[],"mappings":"AAAA;;;GAGG;AAEH,OAAO,EAAE,MAAM,EAAE,MAAM,WAAW,CAAC;AAEnC;;GAEG;AACH,kCAAkC;AAClC,MAAM,CAAC,MAAM,CAAC,GAAG,CAAU,aAAkC,EAAE,EAAE,CAAC,aAAa,EAAE,CAAC;AAElF,MAAM,CAAC,MAAM,qBAAqB,GAAG,CAAC,SAAiB,EAAU,EAAE;IAC/D,iCAAiC;IACjC,gDAAgD;IAChD,IAAI,OAAO,MAAM,KAAK,WAAW,EAAE;QAC/B,OAAO,MAAM,CAAC,SAAS,CAAC,CAAC;KAC5B;IACD,OAAO,SAAS,CAAC;AACrB,CAAC,CAAC","sourcesContent":["/*!\n * Copyright (c) Microsoft Corporation.\n * All rights reserved. See LICENSE in the project root for license information.\n */\n\nimport { sha256 } from 'js-sha256';\n\n/**\n * execute callback. Variable name intentionally short\n */\n// tslint:disable-next-line:no-any\nexport const p = <T = any>(innerFunction: (...args: any) => T) => innerFunction();\n\nexport const generateEventNameHash = (eventName: string): string => {\n    // Only generate hash client side\n    // tslint:disable-next-line: no-typeof-undefined\n    if (typeof window !== 'undefined') {\n        return sha256(eventName);\n    }\n    return eventName;\n};\n"]}