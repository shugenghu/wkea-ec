{"version":3,"file":"ITraceLogger.js","sourceRoot":"","sources":["../../../src/interfaces/ITraceLogger.ts"],"names":[],"mappings":"AAAA;;;GAGG","sourcesContent":["/*!\n * Copyright (c) Microsoft Corporation.\n * All rights reserved. See LICENSE in the project root for license information.\n */\n\n// tslint:disable:interface-name no-any\nimport { IDictionary, ITelemetryContext, ITraceLoggerParams, ITrackDependency, LogLevel } from '../interfaces';\n\n/***\n * Interface for which methods need to be implemented for a trace logger.\n * NOTE: Please do not call these methods directly, as they are meant to be\n * hooked up to the telemetry framework, not used directly. If you want to\n * call a logging method, please use this.props.telemetry instead.\n */\nexport interface ITraceLogger {\n    /**\n     * Additional context arguments passed to the logger from the telemetry object itself\n     *\n     * @param options Options from telemetry object initializing this\n     */\n    initialize?(options: ITraceLoggerParams): void;\n\n    /**\n     * @internal\n     * NOTE: Please do not call these methods directly, as they are meant to be\n     * hooked up to the telemetry framework, not used directly. If you want to\n     * call a logging method, please use this.props.telemetry.<log method> instead.\n     * @param logLevel LogLevel of the message\n     * @param context Telemetry context to add to log\n     * @param messageTemplate Structured log formatted string\n     * @param placeholders List of placeholders in messageTemplate along with position in string\n     * @param values Arguments to replace placeholders\n     * @param customTags Array of strings to attach to log\n     */\n    sendLog(\n        logLevel: LogLevel,\n        context: ITelemetryContext,\n        messageTemplate: string,\n        placeholders: Map<string, any>,\n        customTags?: string[],\n        exception?: Error\n    ): void;\n\n    /**\n     * @internal\n     * Logs a trace message with the given LogLevel\n     * NOTE: Please do not call these methods directly, as they are meant to be\n     * hooked up to the telemetry framework, not used directly. If you want to\n     * call a logging method, please use this.props.telemetry.<log method> instead.\n     */\n    log(logLevel: LogLevel, message: string, args: any[], context: ITelemetryContext): void;\n\n    /**\n     * @internal\n     * Logs an Error object as an exception\n     * NOTE: Please do not call these methods directly, as they are meant to be\n     * hooked up to the telemetry framework, not used directly. If you want to\n     * call a logging method, please use telemetry.exception(error) instead.\n     */\n    exception(error: Error, context: ITelemetryContext): void;\n\n    /**\n     * @internal\n     * Logs an metric value\n     * NOTE: Please do not call these methods directly, as they are meant to be\n     * hooked up to the telemetry framework, not used directly. If you want to\n     * call a logging method, please use telemetry.trackMetric(name, vlaue) instead.\n     */\n    trackMetric(name: string, value: number, context: ITelemetryContext): void;\n\n    /**\n     * Tracks page view event\n     * NOTE: Please do not call these methods directly, as they are meant to be\n     * hooked up to the telemetry framework, not used directly. If you want to\n     * call a logging method, please use telemetry.trackMetric(name, vlaue) instead.\n     *\n     * @param {string} name\n     * @param {string} [url]\n     * @memberof ITraceLogger\n     * @interal\n     */\n    trackPageView(name: string, url?: string): void;\n\n    /**\n     * @internal\n     * Logs an event\n     */\n    trackEvent<TProperties = Partial<IDictionary<string>>, TMeasurements = Partial<IDictionary<number>>>(\n        name: string,\n        properties?: TProperties,\n        measurements?: TMeasurements,\n        context?: ITelemetryContext\n    ): void;\n\n    /**\n     * Track a dependency\n     *\n     * @internal\n     * @param options the dependency options\n     */\n    trackDependency(options: ITrackDependency): void;\n}\n"]}