{"version":3,"file":"IModule.js","sourceRoot":"","sources":["../../../src/contract/IModule.ts"],"names":[],"mappings":"AAAA;;;GAGG","sourcesContent":["/*!\n * Copyright (c) Microsoft Corporation.\n * All rights reserved. See LICENSE in the project root for license information.\n */\n\nimport { ITelemetry } from '@msdyn365-commerce/telemetry-internal';\nimport * as React from 'react';\nimport { IBase } from '.';\nimport { IAny, ICoreContext, IDictionary, IGeneric } from '../interfaces';\n\nexport interface IModuleContract<TDataModel = {}, TBase = unknown> extends IBase<TBase> {\n    modules?: IDictionary<IModuleContract[]>;\n    data: TDataModel;\n    dataActions: IGeneric<IAny>;\n}\n\nexport interface IAddModuleSlot {\n    slotId: string;\n    slotName?: string;\n    index?: number[];\n}\n\nexport interface IModule<TDataModel = {}, TAppModel = IGeneric<IAny>> extends IModuleContract<TDataModel> {\n    app: TAppModel;\n    context: ICoreContext<TAppModel>;\n    component?: IGeneric<IAny>;\n    telemetry: ITelemetry;\n    slots?: IDictionary<React.ReactNode[]>;\n    slotsForAddModule?: IAddModuleSlot[];\n    slotId?: string;\n    parentId?: string;\n    renderModuleAttributes(props: unknown): IDictionary<string>;\n    renderView<T extends IModule>(props: T): React.ReactElement | null;\n    renderModule?<T>(moduleInfo: { name: string; props: T; view?: string }): React.ReactElement | null;\n}\n"]}