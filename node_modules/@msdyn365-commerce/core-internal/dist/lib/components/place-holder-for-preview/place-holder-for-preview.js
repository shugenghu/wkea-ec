/*!
 * Copyright (c) Microsoft Corporation.
 * All rights reserved. See LICENSE in the project root for license information.
 */
// tslint:disable:align no-inner-html
import React, { useEffect, useMemo, useRef } from 'react';
const PlaceholderForContainerPreview = (props) => {
    const ref = useRef(null);
    useEffect(() => {
        if (ref.current) {
            const { id, error, message, typeName } = props;
            const comment = {
                id,
                error: error && error.toString(),
                message,
                typeName,
                // @ts-ignore
                slotId: props.slotId,
                // @ts-ignore
                parentId: props.parentId
            };
            ref.current.innerHTML = `<!-- ${JSON.stringify(comment, null, 4)} -->`;
        }
    }, []);
    return useMemo(() => {
        return (React.createElement("div", Object.assign({ className: 'card-body', style: { color: '#fff', backgroundColor: '#6c757d', textAlign: 'center' }, role: 'button', "data-ft": 'setting-icon', id: props.id }, props.renderModuleAttributes(props)),
            React.createElement("div", { ref: ref, style: { display: 'none' } }),
            React.createElement("p", { className: 'card-text' },
                React.createElement("i", { className: 'ms-Icon ms-Icon--EditCreate' }),
                props.resources.clickToConfigure)));
    }, [props]);
};
export const PlaceholderForContainerPreviewComponent = PlaceholderForContainerPreview;
//# sourceMappingURL=place-holder-for-preview.js.map