{"version":3,"file":"mock-helper.test.js","sourceRoot":"","sources":["../../../src/mock/mock-helper.test.ts"],"names":[],"mappings":"AAAA;;;GAGG;AAGH,OAAO,EAAE,oBAAoB,EAAE,MAAM,eAAe,CAAC;AAErD,QAAQ,CAAC,aAAa,EAAE,GAAG,EAAE;IACzB,QAAQ,CAAC,sBAAsB,EAAE,GAAG,EAAE;QAClC,EAAE,CAAC,4BAA4B,EAAE,GAAG,EAAE;YAClC,MAAM,QAAQ,GAAG,EAAE,GAAG,EAAE,KAAK,EAAE,CAAC;YAChC,MAAM,WAAW,GAAG;gBAChB,UAAU,EAAE,GAAG,EAAE;oBACb,OAAO,EAAE,EAAE,EAAE,CAAC,EAAE,IAAI,EAAE,KAAK,EAAE,CAAC;gBAClC,CAAC;aACJ,CAAC;YACF,MAAM,UAAU,GAAG,EAAE,MAAM,EAAE,KAAK,EAAE,CAAC;YACrC,MAAM,WAAW,GAAoC;gBACjD,OAAO,EAAE,MAAM;aACjB,CAAC;YACH,MAAM,SAAS,GAAG,oBAAoB,CAAC,QAAQ,EAAE,WAAW,EAAE,UAAU,EAAE,WAAW,CAAC,CAAC;YACvF,MAAM,CAAC,SAAS,CAAC,OAAO,CAAC,aAAa,CAAC,CAAC,GAAG,CAAC,aAAa,EAAE,CAAC;YAC5D,MAAM,CAAC,SAAS,CAAC,OAAO,CAAC,aAAa,CAAC,cAAc,CAAC,CAAC,GAAG,CAAC,aAAa,EAAE,CAAC;YAC3E,MAAM,CAAC,SAAS,CAAC,OAAO,CAAC,OAAO,CAAC,CAAC,GAAG,CAAC,aAAa,EAAE,CAAC;YACtD,MAAM,CAAC,SAAS,CAAC,MAAM,CAAC,CAAC,IAAI,CAAC,UAAU,CAAC,CAAC;YAC1C,MAAM,CAAC,SAAS,CAAC,IAAI,CAAC,CAAC,IAAI,CAAC,QAAQ,CAAC,CAAC;YACtC,MAAM,CAAC,SAAS,CAAC,WAAW,CAAC,CAAC,IAAI,CAAC,WAAW,CAAC,CAAC;QACpD,CAAC,CAAC,CAAC;IACP,CAAC,CAAC,CAAC;AACP,CAAC,CAAC,CAAC","sourcesContent":["/*!\n * Copyright (c) Microsoft Corporation.\n * All rights reserved. See LICENSE in the project root for license information.\n */\n\nimport { ICoreContext } from '../interfaces';\nimport { buildMockModuleProps } from './mock-helper';\n\ndescribe('mock helper', () => {\n    describe('buildMockModuleProps', () => {\n        it('Should return a mock props', () => {\n            const mockData = { foo: 'bar' };\n            const dataActions = {\n                getProduct: () => {\n                    return { id: 1, name: 'foo' };\n                }\n            };\n            const mockConfig = { config: 'foo' };\n            const mockContext: ICoreContext = <ICoreContext>(<{}>{\n                context: 'booo'\n            });\n            const mockProps = buildMockModuleProps(mockData, dataActions, mockConfig, mockContext);\n            expect(mockProps.context.actionContext).not.toBeUndefined();\n            expect(mockProps.context.actionContext.requestContext).not.toBeUndefined();\n            expect(mockProps.context.request).not.toBeUndefined();\n            expect(mockProps.config).toBe(mockConfig);\n            expect(mockProps.data).toBe(mockData);\n            expect(mockProps.dataActions).toBe(dataActions);\n        });\n    });\n});\n"]}