{"version":3,"file":"mock-helper.js","sourceRoot":"","sources":["../../../src/mock/mock-helper.ts"],"names":[],"mappings":"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","sourcesContent":["/*!\n * Copyright (c) Microsoft Corporation.\n * All rights reserved. See LICENSE in the project root for license information.\n */\n// tslint:disable:no-any\n\nimport {\n    ITelemetry,\n    ITelemetryModuleContext,\n    ITrackDependency,\n    LogLevel,\n    TelemetryEvent,\n    TelemetryEventContent,\n    TelemetryLogOptions\n} from '@msdyn365-commerce/telemetry-internal';\nimport { merge as _merge } from 'lodash';\nimport * as React from 'react';\nimport { ICommerceApiSettings, IModule } from '../contract';\nimport {\n    IAction,\n    IActionContext,\n    IActionInput,\n    IAny,\n    ICoreContext,\n    IDictionary,\n    IGeneric,\n    IRequestContext,\n    ISessionStorageContext\n} from '../interfaces';\nimport { ICookieContext } from '../interfaces/context/ICookieContext';\nimport msdyn365Commerce, { MSDyn365Commerce } from '../msdyn365-commerce';\nimport { CultureInfoFormatter, getCurrencyCodeFromContext } from '../utilities';\n\ndeclare var process: IGeneric<IAny>;\n\nconst renderModuleAttributes = (props: IGeneric<IAny>): IDictionary<string> => {\n    if (!props || !props.id) {\n        return {};\n    }\n\n    return { 'data-m-t': props.typeName };\n};\n\n/**\n * Creates a new mock telemetry object, takes a partial ITelemetry and fills in missing required properties\n * @param telemetry A partial or full implmentation of ITelemetry\n */\nexport const buildMockTelemetry = (telemetry?: Partial<ITelemetry>): ITelemetry => {\n    const defaultMockTelemetry: ITelemetry = {\n        trace: (message: string) => console.log(`[Mock Trace]: ${message}`),\n        debug: (message: string, ...meta: IAny[]) => console.log(`[Mock Debug]: ${message}`, ...meta),\n        information: (message: string) => console.log(`[Mock Info]: ${message}`),\n        warning: (message: string) => console.log(`[Mock Warning]: ${message}`),\n        error: (message: string, ...meta: IAny[]) => console.log(`[Mock Error]: ${message}`, ...meta),\n        exception: (error: Error) => console.log(`[Mock Exception]: ${error}`),\n        critical: (message: string) => console.log(`[Mock Info]: ${message}`),\n        log: (logLevel: LogLevel, messageTemplate: string, logOptions?: TelemetryLogOptions) =>\n            console.log('[Mock Log]: ', logLevel, messageTemplate, logOptions),\n        logEvent: (eventType: TelemetryEvent, payload: TelemetryEventContent) => {\n            // intentionally blank\n        },\n        trackMetric: (name: string, value: number) => console.log('[Mock Track Metric]: ', name, value),\n        trackEvent: (name: string, properties, measurements) => console.log('[Mock Track Event]: ', properties, measurements),\n        setTelemetryRequestContext: () => {\n            return;\n        },\n        setTelemetryModuleContext: (moduleContext: ITelemetryModuleContext) => buildMockTelemetry,\n        trackDependency: (options: ITrackDependency) => {\n            console.log('[Mock Track Dependency]: ', options);\n        },\n        setTelemetryAttribute: (telemetryId: string, additionalTelemetryProperties: object) => {\n            return { 'data-bi-id': '12345', 'data-m': '{\"id\":\"12345\",\"key1\":\"val1\"}\"' };\n        }\n    };\n    return telemetry ? { ...defaultMockTelemetry, ...telemetry } : defaultMockTelemetry;\n};\n\n/**\n * Creates a mock CookieContext. Takes a partial ICookieContext and fills in required properties\n * @param context Partial action context.\n */\n// tslint:disable-next-line:cyclomatic-complexity\nexport const buildMockCookieContext = (context?: Partial<ICookieContext>): ICookieContext => {\n    return {\n        get:\n            (context && context.get) ||\n            ((cookiename: string) => {\n                return { name: cookiename, value: undefined, status: 'NOT_FOUND' };\n            }),\n        set:\n            (context && context.set) ||\n            (<T>(_cookieName: string, _cookieValue: T): void => {\n                console.log('set called');\n            }),\n        remove:\n            (context && context.remove) ||\n            ((): void => {\n                console.log('remove called');\n            }),\n        getCartCookie:\n            (context && context.getCartCookie) ||\n            ((): string => {\n                console.log('getCartCookie called');\n                return '';\n            }),\n        setCartCookie:\n            (context && context.setCartCookie) ||\n            ((): void => {\n                console.log('setCartCookie called');\n            }),\n        getCheckoutCartCookie:\n            (context && context.getCheckoutCartCookie) ||\n            ((): string => {\n                console.log('getCheckouCartCookie called');\n                return '';\n            }),\n        setCheckoutCartCookie:\n            (context && context.setCheckoutCartCookie) ||\n            ((): void => {\n                console.log('setCheckouCartCookie called');\n            }),\n        removeCheckoutCartCookie:\n            (context && context.removeCheckoutCartCookie) ||\n            ((): void => {\n                console.log('removeCheckoutCartCookie called');\n            }),\n        isConsentGiven:\n            (context && context.isConsentGiven) ||\n            ((): boolean => {\n                return true;\n            }),\n        setConsentCookie:\n            (context && context.setConsentCookie) ||\n            ((): void => {\n                console.log('setConsentCookie called');\n            }),\n        deleteConsentCookie:\n            (context && context.deleteConsentCookie) ||\n            ((): void => {\n                console.log('deleteConsentCookie called');\n            })\n    };\n};\n\nexport const buildMockSessionStorageContext = (context?: Partial<ISessionStorageContext>): ISessionStorageContext => {\n    return {\n        getDataFromStorage:\n            (context && context.getDataFromStorage) ||\n            ((): object => {\n                console.log('getDataFromStorage called');\n                return {};\n            }),\n        setDataInStorage:\n            (context && context.setDataInStorage) ||\n            ((): void => {\n                console.log('setDataInStorage called');\n                return;\n            }),\n        getCheckoutCartData:\n            (context && context.getCheckoutCartData) ||\n            ((): object => {\n                console.log('getCheckoutCartData called');\n                return {};\n            }),\n        setCheckoutCartData:\n            (context && context.setCheckoutCartData) ||\n            ((): void => {\n                console.log('setCheckoutCartData called');\n                return;\n            }),\n        removeDataFromStorage:\n            (context && context.removeDataFromStorage) ||\n            ((): void => {\n                console.log('removeDataFromStorage called');\n                return;\n            }),\n        removeCheckoutCartData:\n            (context && context.removeCheckoutCartData) ||\n            ((): void => {\n                console.log('removeCheckoutCartData called');\n                return;\n            })\n    };\n};\n\n/**\n * Creates a mock IRequestContext. Takes a partial IRequestContext and fills in required properties\n * @param requestContext Partial IRequestContext\n */\n// tslint:disable-next-line:max-func-body-length\nexport const buildMockRequest = (requestContext?: Partial<IRequestContext>): IRequestContext => {\n    const mockRequest: IRequestContext = {\n        url: {\n            requestUrl: new URL('https://contoso.com'),\n            staticCdnUrl: 'string'\n        },\n        canonicalDomain: 'contoso.com',\n        canonicalUrl: 'https://contoso.com',\n        locale: 'en-us',\n        textDirection: 'ltr',\n        params: {\n            isDebug: false,\n            isEditor: false,\n            isPreview: false,\n            concatJs: {\n                hasValue: false,\n                isTruthy: false,\n                value: undefined\n            },\n            /**\n             * Theme SCSS override matching registered theme name\n             */\n            theme: ''\n        },\n        device: {\n            Type: 'pc'\n        },\n        user: {\n            token: 'mockToken',\n            isAuthenticated: false,\n            optOutWebActivityTracking: false\n        },\n        app: {},\n        apiSettings: {\n            baseUrl: 'mockBaseUrl',\n            channelId: 1,\n            oun: 'mockOUN',\n            catalogId: 2,\n            baseImageUrl: 'mockBaseImageUrl',\n            ratingsReviewsEndpoint: '',\n            retailServerProxyVersion: '9.0.0',\n            rnr: {\n                proxyUrl: '',\n                url: '',\n                id: ''\n            }\n        },\n        gridSettings: {\n            xs: { w: 768 },\n            sm: { w: 992 },\n            md: { w: 1200 },\n            lg: { w: 1600 },\n            xl: { w: 1800 }\n        },\n        urlTokens: {},\n        operationId: 'mockOperationId',\n        // feature switches coming from server\n        features: {},\n        pageData: {},\n        headers: {},\n        cookies: buildMockCookieContext(),\n        sessionStorage: buildMockSessionStorageContext(),\n        themeOverride: {\n            url: '',\n            disableDefault: false\n        },\n        telemetrySettings: {\n            eventHubAuthToken: '',\n            eventHubEndPoint: '',\n            optOutWebActivityTracking: false,\n            operationId: 'mockOperationId',\n            instrumentationKey: '',\n            environmentId: 'Development'\n        },\n        telemetryData: {\n            Checkout: [\n                {\n                    orderId: '',\n                    cartId: '097504969642348742',\n                    cartVersion: '12432',\n                    Products: [\n                        {\n                            productChannelId: 18629762,\n                            productChannelName: 'store',\n                            productCategoryId: '9754',\n                            productCategoryName: 'Sunglasses',\n                            productId: '970374',\n                            productName: 'Aviator',\n                            productSku: 'special',\n                            productPrice: 120,\n                            productQuantity: 1,\n                            productCurrency: 'USD'\n                        }\n                    ]\n                }\n            ],\n            ProductPageView: {\n                productChannelId: 18629762,\n                productChannelName: '',\n                productCategoryId: '',\n                productCategoryName: '',\n                productId: '08439484',\n                productName: 'Awesome Tie',\n                productSku: '',\n                productPrice: 98,\n                productQuantity: '',\n                productCurrency: ''\n            }\n        },\n        siteStylePreset: ''\n    };\n    return _merge(mockRequest, requestContext);\n};\n\nconst mockRenderView = (FunctionalComponent?: React.FC) => <T extends IModule>(props: T) => {\n    if (!FunctionalComponent) {\n        return null;\n    }\n\n    // @ts-ignore\n    return React.createElement(FunctionalComponent, props);\n};\n\n/**\n * Creates a mock IMSDyn365ActionContext. Takes a partial IActionContext and fills in required properties\n * @param context Partial action context.\n */\nexport const buildMockActionContext = (context?: Partial<IActionContext>): IActionContext => {\n    return {\n        chainAction:\n            (context && context.chainAction) ||\n            (async <T = unknown>(action: IAction<T>, input: IActionInput | IActionInput[]) => {\n                return null;\n            }),\n        update:\n            (context && context.update) ||\n            ((input: IActionInput | IActionInput[], data: any): any => {\n                return data;\n            }),\n        trace:\n            (context && context.trace) ||\n            ((message: string): void => {\n                return;\n            }),\n        get:\n            (context && context.get) ||\n            ((cacheObjectType: string, cacheKey: string) => {\n                return null;\n            }),\n        getAll:\n            (context && context.getAll) ||\n            ((cacheObjectType: string) => {\n                return null;\n            }),\n        runAllActionsInQueue: async () => {\n            return;\n        },\n        requestContext: buildMockRequest(context && context.requestContext),\n        telemetry: buildMockTelemetry(context && context.telemetry),\n        ...context\n    };\n};\n\n/**\n * Creates a mock Core Context\n * @param coreContext Partial core context\n */\nexport const buildMockCoreContext = <TApp extends {} = {}>(coreContext: Partial<ICoreContext<TApp>>): ICoreContext<TApp> => {\n    const request = buildMockRequest(coreContext.request);\n    return {\n        actionContext: buildMockActionContext(coreContext.actionContext),\n        app: coreContext.app || <TApp>{},\n        telemetry: buildMockTelemetry(coreContext.telemetry),\n        request,\n        cultureFormatter: coreContext.cultureFormatter || new CultureInfoFormatter(request.locale, getCurrencyCodeFromContext(request))\n    };\n};\n\n/**\n * Creates a mock MSDyn365 App with fake API settings for use in testing\n */\nexport const initializeMockApp = (mockSettings?: ICommerceApiSettings) => {\n    (<IGeneric<IAny>>MSDyn365Commerce).prototype.setMockSettings = function(): void {\n        // tslint:disable-next-line\n        this._env = process.env.NODE_ENV;\n        // tslint:disable-next-line\n        this._commerceApiSetting = mockSettings || {\n            // tslint:disable-next-line\n            baseUrl: 'http://mock.cloud.retail.dynamics.com/',\n            channelId: 1,\n            catalogId: 0,\n            oun: '1',\n            // tslint:disable-next-line\n            baseImageUrl: `http://mock.cloud.retail.dynamics.com/MediaServer/`\n        };\n    };\n\n    (<IGeneric<IAny>>msdyn365Commerce).setMockSettings();\n};\n\n/**\n * Generates a mock IModule<TData> prop\n * @param moduleData Mock TData that maps to props.data\n * @param dataActions Mock data actions that map to props.dataActions\n * @param moduleConfig Mock module configs that map to props.config\n * @param mockContext Mock ICoreContext that map to props.context\n * @param mockTelemetry Mock ITelemetry that map to props.telemetry. If no mock is provided a default will be passed that logs to console.\n */\nexport const buildMockModuleProps = <TData = IGeneric<IAny>, TConfig = IGeneric<IAny>>(\n    moduleData: TData,\n    dataActions: IGeneric<IAny>,\n    moduleConfig?: TConfig,\n    mockContext?: ICoreContext,\n    mockTelemetry?: ITelemetry,\n    app?: IGeneric<IAny>,\n    view?: React.FC\n): IModule<TData> => {\n    mockContext = buildMockCoreContext(mockContext || {});\n    return {\n        // @ts-ignore TODO: Generate a default mock context.\n        context: mockContext,\n        data: moduleData,\n        dataActions: dataActions,\n        config: moduleConfig || {},\n        id: 'mock-id',\n        friendlyName: 'Mock Id',\n        typeName: 'mock-type',\n        telemetry: buildMockTelemetry(mockTelemetry),\n        app: { ...{ config: {} }, ...app },\n        renderModuleAttributes: renderModuleAttributes,\n        renderView: mockRenderView(view)\n    };\n};\n"]}