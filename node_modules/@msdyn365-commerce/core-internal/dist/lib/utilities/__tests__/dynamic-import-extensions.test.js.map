{"version":3,"file":"dynamic-import-extensions.test.js","sourceRoot":"","sources":["../../../../src/utilities/__tests__/dynamic-import-extensions.test.ts"],"names":[],"mappings":"AAEA,OAAO,EAAE,YAAY,EAAE,kBAAkB,EAAE,MAAM,+CAA+C,CAAC;AAYjG,MAAM,cAAc,GAAG,CAAC,KAAsC,EAAE,EAAE;IAC9D,MAAM,qBAAqB,GAAG,KAAK,CAAC,GAAG,CAAC,CAAC,QAAuC,EAAE,EAAE;QAChF,OAAO;YACH,EAAE,EAAE,QAAQ,CAAC,EAAE;YACf,SAAS,EAAE,GAAG,EAAE,CAAC,QAAQ,CAAC,SAAS;SACtC,CAAC;IACN,CAAC,CAAC,CAAC;IAEH,OAAO,qBAAqB,CAAC,GAAG,CAAC,CAAC,QAA+B,EAAE,EAAE,CAAC,YAAY,CAAmB,QAAQ,CAAC,CAAC,CAAC;AACpH,CAAC,CAAC;AAEF,QAAQ,CAAC,2BAA2B,EAAE,GAAG,EAAE;IACvC,EAAE,CAAC,4BAA4B,EAAE,GAAG,EAAE;QAClC,UAAU;QACV,MAAM,SAAS,GAAoC;YAC/C;gBACI,EAAE,EAAE,UAAU;gBACd,SAAS,EAAE,2BAA2B;gBACtC,aAAa,EAAE,2BAA2B;aAC7C;YACD;gBACI,EAAE,EAAE,cAAc;gBAClB,SAAS,EAAE,+BAA+B;gBAC1C,aAAa,EAAE,+BAA+B;aACjD;YACD;gBACI,EAAE,EAAE,mBAAmB;gBACvB,SAAS,EAAE,oCAAoC;gBAC/C,aAAa,EAAE,oCAAoC;aACtD;SACJ,CAAC;QAEF,MAAM;QACN,MAAM,OAAO,GAAG,cAAc,CAAC,SAAS,CAAC,CAAC;QAE1C,SAAS;QACT,OAAO,CAAC,GAAG,CAAC,CAAC,MAAc,EAAE,KAAa,EAAE,EAAE,CAAC,MAAM,CAAC,MAAM,CAAC,CAAC,OAAO,CAAC,SAAS,CAAC,KAAK,CAAC,CAAC,aAAa,CAAC,CAAC,CAAC;IAC3G,CAAC,CAAC,CAAC;IAEH,QAAQ,CAAC,gBAAgB,EAAE,GAAG,EAAE;QAC5B,EAAE,CAAC,8CAA8C,EAAE,GAAG,EAAE;YACpD,UAAU;YACV,MAAM,GAAG,GAAG;gBACR,OAAO,EAAE,GAAG,EAAE;oBACV,OAAO,IAAI,CAAC;gBAChB,CAAC;aACJ,CAAC;YACF,MAAM;YACN,MAAM,MAAM,GAAG,kBAAkB,CAAC,GAAG,CAAC,CAAC;YACvC,SAAS;YACT,MAAM,CAAC,MAAM,CAAC,CAAC,IAAI,CAAC,GAAG,CAAC,OAAO,CAAC,CAAC;QACrC,CAAC,CAAC,CAAC;QAEH,EAAE,CAAC,yCAAyC,EAAE,GAAG,EAAE;YAC/C,MAAM,GAAG,GAAG;gBACR,WAAW,EAAE,GAAG,EAAE;oBACd,OAAO,IAAI,CAAC;gBAChB,CAAC;aACJ,CAAC;YACF,kCAAkC;YAClC,MAAM,MAAM,GAAG,kBAAkB,CAAM,GAAG,CAAC,CAAC;YAE5C,MAAM,CAAC,MAAM,CAAC,CAAC,IAAI,CAAC,GAAG,CAAC,CAAC;QAC7B,CAAC,CAAC,CAAC;QAEH,EAAE,CAAC,wBAAwB,EAAE,GAAG,EAAE;YAC9B,kCAAkC;YAClC,MAAM,MAAM,GAAG,kBAAkB,CAAM,SAAS,CAAC,CAAC;YAElD,MAAM,CAAC,MAAM,CAAC,CAAC,IAAI,CAAC,SAAS,CAAC,CAAC;QACnC,CAAC,CAAC,CAAC;QAEH,EAAE,CAAC,wBAAwB,EAAE,GAAG,EAAE;YAC9B,MAAM,GAAG,GAAG,OAAO,CAAC,OAAO,EAAE,CAAC;YAC9B,kCAAkC;YAClC,MAAM,MAAM,GAAG,kBAAkB,CAAM,GAAG,CAAC,CAAC;YAE5C,MAAM,CAAC,MAAM,CAAC,CAAC,IAAI,CAAC,GAAG,CAAC,CAAC;QAC7B,CAAC,CAAC,CAAC;IACP,CAAC,CAAC,CAAC;AACP,CAAC,CAAC,CAAC","sourcesContent":["// tslint:disable-next-line:no-import-side-effect\nimport { IUniversalImport } from '../../interfaces';\nimport { fixChunkName, getDefaultOrResult } from '../internal/dynamic-import-extensions-helpers';\ninterface IMockedUniveralImportTestCase {\n    id: string;\n    chunkName: string;\n    expectedValue: string;\n}\n\ninterface IMockedUniveralImport {\n    id: string;\n    chunkName(): string;\n}\n\nconst fixNameHarness = (input: IMockedUniveralImportTestCase[]) => {\n    const mockedUniveralImports = input.map((testCase: IMockedUniveralImportTestCase) => {\n        return {\n            id: testCase.id,\n            chunkName: () => testCase.chunkName\n        };\n    });\n\n    return mockedUniveralImports.map((testCase: IMockedUniveralImport) => fixChunkName(<IUniversalImport>testCase));\n};\n\ndescribe('dynamic-import-extensions', () => {\n    it('properly fixes chunk names', () => {\n        // arrange\n        const testCases: IMockedUniveralImportTestCase[] = [\n            {\n                id: 'partner/',\n                chunkName: 'partner/path/to/my-module',\n                expectedValue: 'partner/path-to-my-module'\n            },\n            {\n                id: 'partner/foo/',\n                chunkName: 'partner/foo/path/to/my-module',\n                expectedValue: 'partner/foo/path-to-my-module'\n            },\n            {\n                id: 'partner/foo/.real',\n                chunkName: 'partner/foo/path/to/my-module.real',\n                expectedValue: 'partner/foo/path-to-my-module-real'\n            }\n        ];\n\n        // act\n        const results = fixNameHarness(testCases);\n\n        // assert\n        results.map((result: string, index: number) => expect(result).toEqual(testCases[index].expectedValue));\n    });\n\n    describe('default helper', () => {\n        it('can properly get default export if available', () => {\n            // arrange\n            const obj = {\n                default: () => {\n                    return null;\n                }\n            };\n            // act\n            const result = getDefaultOrResult(obj);\n            // assert\n            expect(result).toBe(obj.default);\n        });\n\n        it('returns object if no default is defined', () => {\n            const obj = {\n                NamedExport: () => {\n                    return null;\n                }\n            };\n            // tslint:disable-next-line:no-any\n            const result = getDefaultOrResult(<any>obj);\n\n            expect(result).toBe(obj);\n        });\n\n        it('pass undefined through', () => {\n            // tslint:disable-next-line:no-any\n            const result = getDefaultOrResult(<any>undefined);\n\n            expect(result).toBe(undefined);\n        });\n\n        it('passes promise through', () => {\n            const obj = Promise.resolve();\n            // tslint:disable-next-line:no-any\n            const result = getDefaultOrResult(<any>obj);\n\n            expect(result).toBe(obj);\n        });\n    });\n});\n"]}