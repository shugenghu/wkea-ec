{"version":3,"file":"video-field.js","sourceRoot":"","sources":["../../../../src/utilities/editable-fields/video-field.tsx"],"names":[],"mappings":"AAAA;;;GAGG;AAEH,OAAO,KAAK,MAAM,OAAO,CAAC;AAG1B,OAAO,EAAE,yBAAyB,EAAE,MAAM,SAAS,CAAC;AAEpD,MAAM,CAAC,MAAM,UAAU,GAAG,CAAC,KAAuE,EAAE,EAAE;IAClG,MAAM,UAAU,GAAG,CAAC,KAA4C,EAAE,EAAE;QAChE,cAAc;QACd,IAAI,KAAK,CAAC,QAAQ,KAAK,EAAE,IAAI,KAAK,CAAC,QAAQ,EAAE;YACzC,KAAK,CAAC,cAAc,EAAE,CAAC;YACvB,KAAK,CAAC,QAAQ,CAAC,KAAK,CAAC,CAAC;SACzB;IACL,CAAC,CAAC;IACF,MAAM,aAAa,GAAG,KAAK,CAAC,QAAQ;QAChC,CAAC,CAAC,EAAE;QACJ,CAAC,CAAC;YACI,UAAU,EAAE,UAAU;YACtB,aAAa,EAAE,KAAK,CAAC,QAAQ;YAC7B,WAAW,EAAE,KAAK,CAAC,WAAW;YAC9B,OAAO,EAAE,KAAK,CAAC,OAAO;YACtB,MAAM,EAAE,KAAK,CAAC,MAAM;YACpB,UAAU,EAAE,KAAK,CAAC,UAAU;YAC5B,QAAQ,EAAE,CAAC;SACd,CAAC;IAER,OAAO,CACH,6CACQ,aAAa,IACjB,IAAI,EAAE,KAAK,CAAC,UAAU,CAAC,IAAI,IAAI,cAAc,EAC7C,SAAS,EAAE,yBAAyB,CAAC,KAAK,CAAC,QAAQ,EAAE,KAAK,CAAC,UAAU,CAAC,SAAS,EAAE,KAAK,CAAC,cAAc,CAAC,KAErG,KAAK,CAAC,UAAU,CAAC,QAAQ,CACxB,CACT,CAAC;AACN,CAAC,CAAC","sourcesContent":["/*!\n * Copyright (c) Microsoft Corporation.\n * All rights reserved. See LICENSE in the project root for license information.\n */\n\nimport React from 'react';\nimport { IAny, IGeneric } from '../../interfaces';\nimport { IEditableFieldProps } from './editable-field';\nimport { getEditableFieldClassName } from './utils';\n\nexport const VideoField = (props: IEditableFieldProps<IGeneric<IAny> & { children?: JSX.Element }>) => {\n    const onKeyPress = (event: React.KeyboardEvent<HTMLImageElement>) => {\n        // 'enter' key\n        if (event.charCode === 13 && props.onChange) {\n            event.preventDefault();\n            props.onChange(event);\n        }\n    };\n    const editableProps = props.disabled\n        ? {}\n        : {\n              onKeyPress: onKeyPress,\n              onDoubleClick: props.onChange,\n              onMouseOver: props.onMouseOver,\n              onFocus: props.onFocus,\n              onBlur: props.onBlur,\n              onMouseOut: props.onMouseOut,\n              tabIndex: 0\n          };\n\n    return (\n        <div\n            {...editableProps}\n            role={props.fieldProps.role || 'presentation'}\n            className={getEditableFieldClassName(props.disabled, props.fieldProps.className, props.requestContext)}\n        >\n            {props.fieldProps.children}\n        </div>\n    );\n};\n"]}