/*!
 * Copyright (c) Microsoft Corporation.
 * All rights reserved. See LICENSE in the project root for license information.
 */
import React from 'react';
import { placeholderImageUrl } from '../../components/image';
import { getEditableFieldClassName } from './utils';
export const ImageField = (props) => {
    const onKeyPress = (event) => {
        // 'enter' key
        if (event.charCode === 13 && props.onChange) {
            event.preventDefault();
            props.onChange(event);
        }
    };
    const editableProps = props.disabled
        ? {}
        : {
            onKeyPress: onKeyPress,
            onDoubleClick: props.onChange,
            onMouseOver: props.onMouseOver,
            onFocus: props.onFocus,
            onBlur: props.onBlur,
            onMouseOut: props.onMouseOut,
            tabIndex: 0
        };
    // tslint:disable-next-line: no-any
    const fieldProps = {
        ...props.fieldProps,
        editProps: undefined
    };
    // If the image source is the placeholder image, set it's height to 1px
    if (props.fieldProps.src === placeholderImageUrl &&
        (!props.fieldProps['data-src'] || props.fieldProps['data-src'] === placeholderImageUrl)) {
        fieldProps.height = '1px';
    }
    return (React.createElement("img", Object.assign({}, fieldProps, editableProps, { className: getEditableFieldClassName(props.disabled, props.fieldProps.className, props.requestContext) }, (props.fieldProps.additionalProperties || {}))));
};
//# sourceMappingURL=image-field.js.map