{"version":3,"file":"editable-field.js","sourceRoot":"","sources":["../../../../src/utilities/editable-fields/editable-field.tsx"],"names":[],"mappings":"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","sourcesContent":["/*!\n * Copyright (c) Microsoft Corporation.\n * All rights reserved. See LICENSE in the project root for license information.\n */\n\nimport React from 'react';\nimport { ContentEditableEvent } from 'react-contenteditable';\nimport { IDictionary, IRequestContext } from '../../interfaces';\nimport { isAuthoringEditEnabled } from '../helper';\nimport { EditError, PROPERTY_DISABLED, PROPERTY_INIT } from './edit-errors';\nimport { ImageField } from './image-field';\nimport { LinkField } from './link-field';\nimport { TextField } from './text-field';\nimport { VideoField } from './video-field';\n\nexport interface IText {\n    tag?: string;\n    text: string;\n    required?: boolean;\n    className?: string;\n    additionalProperties?: IDictionary<string>;\n}\n\nexport interface ILink {\n    title: string;\n    text: string;\n    key: string;\n    openInNewTab: boolean;\n    className?: string;\n    innerClassName?: string;\n    href?: string;\n    role?: string;\n    ariaLabel: string;\n    additionalProperties?: IDictionary<string>;\n    linkTag?: string;\n    onClick?(ev: React.SyntheticEvent): void;\n}\n\nexport interface ITextEditProps {\n    requestContext: IRequestContext;\n    placeholderText?: string;\n    onEdit(event: ContentEditableEvent): void;\n}\n\nexport interface IEditProps {\n    key: object;\n    requestContext: IRequestContext;\n}\n\nexport interface IEditableFieldProps<T> {\n    editPropKey?: object;\n    requestContext?: IRequestContext;\n    placeholderText?: string;\n    disabled?: boolean;\n    fieldProps: T;\n    type?: FieldType;\n    children?: JSX.Element;\n    onChange?(event: React.SyntheticEvent): void;\n    onMouseOver?(event: React.SyntheticEvent): void;\n    onMouseOut?(event: React.SyntheticEvent): void;\n    onFocus?(event: React.SyntheticEvent): void;\n    onBlur?(event: React.SyntheticEvent): void;\n}\n\ninterface IEditableFieldState {\n    isDisabled: boolean;\n}\n\nexport enum FieldType {\n    Text,\n    RichText,\n    Image,\n    Video,\n    Link\n}\n\n/**\n * Editable field component, containing all the logic for inline editable properties in editorial preview\n * Current support: text, image\n */\n// tslint:disable-next-line:no-any\nexport class EditableField extends React.Component<IEditableFieldProps<any>, IEditableFieldState> {\n    private _isRequired: boolean;\n    // tslint:disable-next-line:no-any\n    public constructor(props: IEditableFieldProps<any>) {\n        super(props);\n        this._onChangeHandler = this._onChangeHandler.bind(this);\n        this._isRequired = false;\n        this.state = {\n            isDisabled: props.disabled || true\n        };\n    }\n\n    public componentDidMount(): void {\n        this._checkDisabledStatus();\n    }\n\n    // tslint:disable-next-line:no-any\n    public componentWillReceiveProps(nextProps: IEditableFieldProps<any>): void {\n        // hook to handle props changes - when a field is changed between edit enabled/disabled states\n        this._checkDisabledStatus();\n    }\n\n    public render(): JSX.Element | null {\n        const props = this.props;\n        const enabled = !this.state.isDisabled;\n\n        switch (props.type) {\n            case FieldType.Text:\n            case FieldType.RichText:\n                props.fieldProps.required = this._isRequired;\n                return <TextField disabled={!!!enabled} {...props} onChange={this._onChangeHandler} />;\n            case FieldType.Image:\n                return <ImageField disabled={!!!enabled} {...props} onChange={this._onChangeHandler} />;\n            case FieldType.Video:\n                // tslint:disable-next-line:no-any\n                const videoProps: IEditableFieldProps<any> = {\n                    ...this.props,\n                    disabled: !!!enabled,\n                    onChange: this._onChangeHandler\n                };\n                return videoProps.fieldProps.children ? <VideoField {...videoProps} /> : null;\n            case FieldType.Link:\n                return <LinkField type={FieldType.Link} {...props} disabled={!!!enabled} onChange={this._onChangeHandler} />;\n            default:\n                return null;\n        }\n    }\n    private _onChangeHandler(event: React.SyntheticEvent | { target: { value: string } }): void {\n        try {\n            if (this.props.onChange) {\n                // @ts-ignore\n                this.props.onChange(event);\n            }\n\n            if (this.props.editPropKey) {\n                const binding = this.props.editPropKey;\n                // @ts-ignore\n                binding.$type = event.target.value;\n            }\n        } catch (e) {\n            // if property is disabled, disable editing\n            if (e instanceof EditError) {\n                if (e.name === PROPERTY_DISABLED) {\n                    this._updateStatus(true);\n                } else if (e.name === PROPERTY_INIT) {\n                    this._updateStatus(false);\n                    this._isRequired = !!e.required;\n                }\n            }\n        }\n    }\n\n    private _checkDisabledStatus(): void {\n        if (isAuthoringEditEnabled(this.props.requestContext)) {\n            this._onChangeHandler({ target: { value: '__MSDYN365_WYSIWYG_INIT__' } });\n        }\n    }\n\n    private _updateStatus(status: boolean): void {\n        if (status !== this.state.isDisabled) {\n            this.setState({\n                isDisabled: status\n            });\n        }\n    }\n}\n"]}