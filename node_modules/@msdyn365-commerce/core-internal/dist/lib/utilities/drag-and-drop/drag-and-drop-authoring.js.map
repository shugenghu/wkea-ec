{"version":3,"file":"drag-and-drop-authoring.js","sourceRoot":"","sources":["../../../../src/utilities/drag-and-drop/drag-and-drop-authoring.ts"],"names":[],"mappings":"AAAA;;;GAGG;AAEH,OAAO,iBAAiB,MAAM,wBAAwB,CAAC;AACvD,OAAO,sBAAsB,MAAM,4BAA4B,CAAC;AAEhE;;;;;;GAMG;AACH,MAAM,UAAU,MAAM,CAAC,QAAgB,EAAE,KAAa,EAAE,MAAc,EAAE,QAAiB;IACrF,sBAAsB,CAAC,eAAe,CAAC,QAAQ,EAAE,KAAK,EAAE,MAAM,EAAE,QAAQ,CAAC,CAAC;AAC9E,CAAC;AAED;;GAEG;AACH,MAAM,UAAU,iBAAiB;IAC7B,sBAAsB,CAAC,KAAK,EAAE,CAAC;AACnC,CAAC;AAED;;;GAGG;AACH,MAAM,UAAU,YAAY,CAAC,QAAgB;IACzC,iBAAiB,CAAC,oBAAoB,CAAC,QAAQ,CAAC,CAAC;AACrD,CAAC","sourcesContent":["/*!\n * Copyright (c) Microsoft Corporation.\n * All rights reserved. See LICENSE in the project root for license information.\n */\n\nimport dragAndDropEvents from './drag-and-drop-events';\nimport dragAndDropPlaceholder from './drag-and-drop-placehoder';\n\n/**\n * Helper function used to sync the placeholder between rendering and tools in drag/drop scenarios\n * @param parentId The module id where the module/container should to be dropped\n * @param index The index position for the module drop.\n * @param slotId The slot id where the module/container should to be dropped.\n * @param moduleId The module id of the element being dropped.\n */\nexport function onDrag(parentId: string, index: number, slotId: string, moduleId?: string): void {\n    dragAndDropPlaceholder.movePlaceholder(parentId, index, slotId, moduleId);\n}\n\n/**\n * Helper function used to remove the placeholder between rendering and tools in drag/drop scenarios\n */\nexport function removePlaceholder(): void {\n    dragAndDropPlaceholder.clear();\n}\n\n/**\n * Helper function used to set modules as draggable in drag/drop scenarios.\n * @param moduleId The module to be set as draggable.\n */\nexport function setDraggable(moduleId: string): void {\n    dragAndDropEvents.setModuleAsDraggable(moduleId);\n}\n"]}