/*!
 * Copyright (c) Microsoft Corporation.
 * All rights reserved. See LICENSE in the project root for license information.
 */
import dragAndDropEvents from './drag-and-drop-events';
import dragAndDropPlaceholder from './drag-and-drop-placehoder';
/**
 * Helper function used to sync the placeholder between rendering and tools in drag/drop scenarios
 * @param parentId The module id where the module/container should to be dropped
 * @param index The index position for the module drop.
 * @param slotId The slot id where the module/container should to be dropped.
 * @param moduleId The module id of the element being dropped.
 */
export function onDrag(parentId, index, slotId, moduleId) {
    dragAndDropPlaceholder.movePlaceholder(parentId, index, slotId, moduleId);
}
/**
 * Helper function used to remove the placeholder between rendering and tools in drag/drop scenarios
 */
export function removePlaceholder() {
    dragAndDropPlaceholder.clear();
}
/**
 * Helper function used to set modules as draggable in drag/drop scenarios.
 * @param moduleId The module to be set as draggable.
 * @param rootModuleId The root module to be set as droppable.
 */
export function setDraggable(moduleId, rootModuleId) {
    dragAndDropEvents.setModuleAsDraggable(moduleId, rootModuleId);
}
//# sourceMappingURL=drag-and-drop-authoring.js.map