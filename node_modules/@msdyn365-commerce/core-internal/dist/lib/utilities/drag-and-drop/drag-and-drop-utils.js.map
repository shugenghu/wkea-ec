{"version":3,"file":"drag-and-drop-utils.js","sourceRoot":"","sources":["../../../../src/utilities/drag-and-drop/drag-and-drop-utils.ts"],"names":[],"mappings":"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","sourcesContent":["/*!\n * Copyright (c) Microsoft Corporation.\n * All rights reserved. See LICENSE in the project root for license information.\n */\n\nimport { IRenderingHelper } from '../../interfaces/IRenderingHelper';\n\nexport const DATA_ATTRIBUTE = 'data-i';\nexport const FRAGMENT_ATTRIBUTE = 'fragment';\nexport const FRAGMENT_MODULE_ATTRIBUTE = 'fragmentmodule';\nexport const CONTAINER_TYPE = 'containerModule';\nexport const EMPTY_SLOT_TYPE_NAME = 'empty-slot';\nexport const ADD_CONTAINER_CLASS_NAME = 'add-container-inner';\nexport const ADD_CONTAINER_CLASS_NAME_ON_DRAG_OVER = 'ondrop';\nexport const ADD_CONTAINER_CLASS_NAME_ON_DRAGGING_MODULE = 'drop-module';\nexport const ADD_CONTAINER_CLASS_NAME_ON_DRAGGING_FRAGMENT = 'drop-fragment';\nexport const ADD_CONTAINER_CLASS_NAME_ON_DRAGGING_NOT_ALLOWED = 'drop-error';\nexport const NO_POINTER_EVENTS_CLASS_NAME = 'ms-no-pointer-events';\n\nexport type AddModuleBoxState = 'Initial' | 'InsertModule' | 'InsertFragment' | 'MoveNotAllowed';\n\nexport type ElementDataInfo = {\n    dataInfo: DataInfo;\n    element: HTMLElement | null;\n};\n\ntype DataInfo = {\n    id: string;\n    parentId: string;\n    slotId: string;\n    typeName: string;\n    friendlyName: string;\n    moduleType: string;\n    isFragment: boolean;\n    isFragmentModule: boolean;\n};\n\n/**\n * Get HTML element by a given Id.\n * @param elementId The HTML element Id.\n * @returns {HTMLElement | null} Returns the html element if element exists. Otherwise, return null.\n */\nexport function getElementById(elementId: string): HTMLElement | null {\n    return elementId ? document.getElementById(elementId) : null;\n}\n\n/**\n * Get the module html element by data Id.\n * @param moduleDataId The module data Id.\n * @returns {HTMLElement | null} Returns the html module element if module exists. Otherwise, return null.\n */\nexport function getModuleById(moduleDataId: string): HTMLElement | null {\n    if (!moduleDataId) {\n        return null;\n    }\n    const modules = [...Array.from(document.body.querySelectorAll(`[${DATA_ATTRIBUTE}]`))];\n    const foundModule = modules.find(c => getElementDataInfo(<HTMLElement>c).dataInfo.id === moduleDataId);\n    return foundModule ? <HTMLElement>foundModule : null;\n}\n\n/**\n * Get a list of all add module boxes.\n * @returns {ElementDataInfo[]} list of modules.\n */\nexport function getAllAddModuleBoxes(): ElementDataInfo[] {\n    const modules = [...Array.from(document.body.querySelectorAll(`[${DATA_ATTRIBUTE}]`))];\n    return modules.map(m => getElementDataInfo(<HTMLElement>m)).filter(m => m.dataInfo.typeName === EMPTY_SLOT_TYPE_NAME);\n}\n\n/**\n * Get a list of modules by parent data Id and slot data Id.\n * @param parentId The parent data Id.\n * @param slotId The slot Id.\n * @returns {Element[]} list of modules.\n */\nexport function getModulesByParentIdAndSlotId(parentId: string, slotId: string): Element[] {\n    let modules: Element[] = [];\n\n    if (!parentId || !slotId) {\n        return modules;\n    }\n\n    const parentModule = getElementDataInfoById(parentId);\n    if (parentModule.element) {\n        modules = [...Array.from(parentModule.element.querySelectorAll(`[${DATA_ATTRIBUTE}]`))];\n        modules = modules.filter(m => {\n            const dataInfo = getElementDataInfo(<HTMLElement>m).dataInfo;\n            if (dataInfo.parentId === parentId && dataInfo.slotId === slotId && dataInfo.typeName !== EMPTY_SLOT_TYPE_NAME) {\n                return true;\n            }\n            return false;\n        });\n    }\n    return modules;\n}\n\n/**\n * Get the closest module to a specific html element target.\n * @param target The specific html element target.\n * @returns {HTMLElement | null} Returns the html module element if element exists. Otherwise, return null.\n */\nexport function getModuleByTarget(target: HTMLElement): HTMLElement | null {\n    let moduleElement: HTMLElement | null = target;\n    const dataAttribute = moduleElement.getAttribute(DATA_ATTRIBUTE);\n    if (!dataAttribute) {\n        // Returns the closest ancestor which has an attribute equals to DATA_ATTRIBUTE\n        // Gets the closest module to the target\n        moduleElement = moduleElement.closest(`[${DATA_ATTRIBUTE}]`);\n    }\n    return moduleElement;\n}\n\n/**\n * Get data info from the data-i element attribute.\n * @param element The html element.\n * @returns {ElementDataInfo} data info from the data-i element attribute.\n */\nexport function getElementDataInfo(element: HTMLElement | null): ElementDataInfo {\n    if (element) {\n        const dataAttribute = element.getAttribute(DATA_ATTRIBUTE);\n        if (dataAttribute) {\n            const json = dataAttribute.replace(/([^:,{}]+):([^:,{}]+)/g, '\"$1\":\"$2\"');\n            const obj = JSON.parse(json);\n            return {\n                dataInfo: {\n                    id: obj?.id,\n                    parentId: obj?.p,\n                    slotId: obj?.s,\n                    typeName: obj?.t,\n                    friendlyName: obj?.fn,\n                    moduleType: obj?.mt,\n                    isFragment: isElementFragment(element),\n                    isFragmentModule: isElementFragmentModule(element)\n                },\n                element: element\n            };\n        }\n    }\n    return {\n        dataInfo: {\n            id: '',\n            parentId: '',\n            slotId: '',\n            typeName: '',\n            friendlyName: '',\n            moduleType: '',\n            isFragment: false,\n            isFragmentModule: false\n        },\n        element: element\n    };\n}\n\n/**\n * Get the element data info by target.\n * @param target The target html element.\n * @returns {ElementDataInfo} data info from the data-i element attribute.\n */\nexport function getElementDataInfoByTarget(target: HTMLElement): ElementDataInfo {\n    return getElementDataInfo(getModuleByTarget(target));\n}\n\n/**\n * Get the element data info by module Id.\n * @param moduleId The module Id.\n * @returns {ElementDataInfo} data info from the data-i element attribute.\n */\nexport function getElementDataInfoById(moduleId: string): ElementDataInfo {\n    return getElementDataInfo(getModuleById(moduleId));\n}\n\n/**\n * clear the element data info object.\n */\nexport function cleanDataInfo(): ElementDataInfo {\n    return {\n        dataInfo: {\n            id: '',\n            parentId: '',\n            slotId: '',\n            typeName: '',\n            friendlyName: '',\n            moduleType: '',\n            isFragment: false,\n            isFragmentModule: false\n        },\n        element: null\n    };\n}\n\n/**\n * Get rendering helper.\n */\nexport function getRenderingHelper(): IRenderingHelper | undefined {\n    if (\n        // @ts-ignore\n        window._msdyn365.authoringHelper &&\n        // @ts-ignore\n        window._msdyn365.authoringHelper.renderingHelper\n    ) {\n        // @ts-ignore\n        return window._msdyn365.authoringHelper.renderingHelper;\n    }\n}\n\n/**\n * Update the add module inner container class\n * @param addInnerContainer The add module inner container element.\n * @param state The state to where the element classes should be updated to.\n */\nexport function updateAddModuleInnerContainerClass(addInnerContainer: Element, state: AddModuleBoxState = 'Initial'): void {\n    let className = ADD_CONTAINER_CLASS_NAME;\n    switch (state) {\n        case 'InsertModule':\n            className += ` ${ADD_CONTAINER_CLASS_NAME_ON_DRAG_OVER} ${ADD_CONTAINER_CLASS_NAME_ON_DRAGGING_MODULE}`;\n            appendNoPointerEventsToChildren(addInnerContainer);\n            break;\n        case 'InsertFragment':\n            className += ` ${ADD_CONTAINER_CLASS_NAME_ON_DRAG_OVER} ${ADD_CONTAINER_CLASS_NAME_ON_DRAGGING_FRAGMENT}`;\n            appendNoPointerEventsToChildren(addInnerContainer);\n            break;\n        case 'MoveNotAllowed':\n            className += ` ${ADD_CONTAINER_CLASS_NAME_ON_DRAG_OVER} ${ADD_CONTAINER_CLASS_NAME_ON_DRAGGING_NOT_ALLOWED}`;\n            appendNoPointerEventsToChildren(addInnerContainer);\n            break;\n        default:\n            removeNoPointerEventsFromChildren(addInnerContainer);\n    }\n    addInnerContainer.className = className;\n}\n\n/**\n * Set children to have no pointer events.\n * This prevents drag enter event from being triggered for each children in the add module slot\n * @param element the element which children classes should be updated.\n */\nfunction appendNoPointerEventsToChildren(element: Element): void {\n    const elementChildren = Array.from(element.children);\n    elementChildren.map(c => {\n        if (c.className) {\n            if (!c.className.includes(NO_POINTER_EVENTS_CLASS_NAME)) {\n                c.className += ` ${NO_POINTER_EVENTS_CLASS_NAME}`;\n            }\n        } else {\n            c.className = `${NO_POINTER_EVENTS_CLASS_NAME}`;\n        }\n    });\n}\n/**\n * Remove no pointer events class.\n * This will set the children back to their original classes.\n * @param element the element which children classes should be updated.\n */\nfunction removeNoPointerEventsFromChildren(element: Element): void {\n    const elementChildren = Array.from(element.children);\n    elementChildren.map(c => {\n        if (c.className && c.className.includes(NO_POINTER_EVENTS_CLASS_NAME)) {\n            c.className = c.className.replace(NO_POINTER_EVENTS_CLASS_NAME, '').trim();\n        }\n    });\n}\n/**\n * Returns whether or not the element is a fragment container.\n * @param element The html element.\n * @returns {boolean} Whether or not the element is a fragment container.\n */\nfunction isElementFragment(element: HTMLElement): boolean {\n    return !!element.getAttribute(FRAGMENT_ATTRIBUTE);\n}\n\n/**\n * Returns whether or not the element is a fragment module.\n * @param element The html element.\n * @returns {boolean} Whether or not the element is a fragment module.\n */\nfunction isElementFragmentModule(element: HTMLElement): boolean {\n    return !!element.getAttribute(FRAGMENT_MODULE_ATTRIBUTE);\n}\n"]}