{"version":3,"file":"currency-formatter.js","sourceRoot":"","sources":["../../../src/utilities/currency-formatter.ts"],"names":[],"mappings":"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AG,EAAE,KAAK,CAAC;QAC1C,cAAc,EAAE,CAAC,EAAE,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,IAAI,CAAC;QACzC,cAAc,EAAE,CAAC,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,EAAE,CAAC;QACxC,cAAc,EAAE,CAAC,EAAE,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,IAAI,CAAC;QACzC,cAAc,EAAE,CAAC,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,EAAE,CAAC;QACxC,cAAc,EAAE,CAAC,EAAE,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,IAAI,CAAC;QACzC,cAAc,EAAE,CAAC,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,EAAE,CAAC;QACxC,cAAc,EAAE,CAAC,EAAE,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,IAAI,CAAC;QACzC,cAAc,EAAE,CAAC,EAAE,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,IAAI,CAAC;QACzC,cAAc,EAAE,CAAC,IAAI,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,EAAE,CAAC;QACzC,cAAc,EAAE,CAAC,EAAE,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,KAAK,CAAC;QAC1C,cAAc,EAAE,CAAC,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,EAAE,CAAC;QACxC,cAAc,EAAE,CAAC,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,EAAE,CAAC;QACxC,cAAc,EAAE,CAAC,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,EAAE,CAAC;QACxC,cAAc,EAAE,CAAC,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,EAAE,CAAC;QACxC,cAAc,EAAE,CAAC,EAAE,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,IAAI,CAAC;QACzC,cAAc,EAAE,CAAC,EAAE,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,IAAI,CAAC;QACzC,cAAc,EAAE,CAAC,IAAI,EAAE,GAAG,EAAE,EAAE,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","sourcesContent":["/*!\n * Copyright (c) Microsoft Corporation.\n * All rights reserved. See LICENSE in the project root for license information.\n */\n\nimport {\n    EXCEPTION_CURRENCY_FORMATTER,\n    LogLevel,\n    NAME_CURRENCY_FORMATTER_EXCEPTION,\n    StaticTelemetry\n} from '@msdyn365-commerce/telemetry-internal';\n\n// If there's not a match with specific currency~culture~market,\n// then fall back to formats based only on currency.\nconst currencyFallbackFormats: { [key: string]: string[] } = {\n    usd: ['$', ',', '.', '2', ''],\n    chf: ['CHF ', \"'\", '.', '2', ''],\n    nzd: ['$', ',', '.', '2', ''],\n    sar: ['‪ر.س.‏‎', ',', '.', '2', '‬'],\n    egp: ['‪ج.م.‏‎', ',', '.', '3', '‬'],\n    thb: ['฿', ',', '.', '2', ''],\n    sgd: ['SG$', ',', '.', '2', ''],\n    hkd: ['HK$', ',', '.', '2', ''],\n    inr: ['₹ ', ',', '.', '2', '']\n};\n\n// Used to change currency code to some other characters.\n// For example, instead of displaying AUD$ we want to display AU$.\nconst currencyCodeMap: { [key: string]: string } = {\n    aud: 'AU',\n    nzd: 'NZ',\n    twd: 'TW'\n};\n\n// all keys lowercase.\n// the top 218 currency~culture~market combos ordered by popularity\n// array values are: beforePrice, thousandSeparator, separator, precision, afterPrice\n// warning: some string values include hidden characters necessary for right-to-left text\n// note: in the list below, there are 50 thousandSeparators that are non-breaking spaces\n//       which is not a normal space. Be careful if hand-editing.\n// A server-side tool for creating these formats is available in the WebBlends solution.\n// tslint:disable:max-func-body-length\n// tslint:disable:no-irregular-whitespace\nconst getFormats = (): { [key: string]: string[] } => {\n    return {\n        'usd~en-us~us': ['$', ',', '.', '2', ''],\n        'eur~de-de~de': ['', '.', ',', '2', ' €'],\n        'gbp~en-gb~gb': ['£', ',', '.', '2', ''],\n        'brl~pt-br~br': ['R$', '.', ',', '2', ''],\n        'eur~fr-fr~fr': ['', ' ', ',', '2', ' €'],\n        'eur~it-it~it': ['', '.', ',', '2', ' €'],\n        'mxn~es-mx~mx': ['MXN$', ',', '.', '2', ''],\n        'jpy~ja~jp': ['¥', ',', '', '0', ''],\n        'rub~ru~ru': ['', ' ', ',', '2', ' ₽'],\n        'aud~en-au~au': ['$', ',', '.', '2', ''],\n        'cad~en-ca~ca': ['$', ',', '.', '2', ''],\n        'eur~es-es~es': ['', '.', ',', '2', ' €'],\n        'cny~zh-hans-cn~cn': ['¥', ',', '.', '2', ''],\n        'eur~nl-nl~nl': ['€ ', '.', ',', '2', ''],\n        'pln~pl~pl': ['', ' ', ',', '2', ' zł'],\n        'chf~de-ch~ch': ['CHF ', \"'\", '.', '2', ''],\n        'try~tr~tr': ['', '.', ',', '2', ' ₺'],\n        'ars~es-ar~ar': ['$ ', '.', ',', '2', ''],\n        'cad~en-us~ca': ['$', ',', '.', '2', ''],\n        'cny~zh-cn~cn': ['¥', ',', '.', '2', ''],\n        'vnd~vi~vn': ['', '.', ',', '2', ' ₫'],\n        'czk~cs~cz': ['', ' ', ',', '2', ' Kč'],\n        'inr~en-in~in': ['₹ ', ',', '.', '2', ''],\n        'cad~fr-ca~ca': ['', ' ', ',', '2', ' $'],\n        'sek~sv-se~se': ['', '.', ',', '2', ' kr'],\n        'dkk~da~dk': ['', '.', ',', '2', ' kr.'],\n        'eur~pt-pt~pt': ['', ' ', ',', '2', ' €'],\n        'gbp~en-us~gb': ['£', ',', '.', '2', ''],\n        'eur~de-at~at': ['€ ', '.', ',', '2', ''],\n        'krw~ko~kr': ['₩', ',', '', '0', ''],\n        'eur~nl-be~be': ['', '.', ',', '2', ' €'],\n        'nok~nb~no': ['kr ', ' ', ',', '2', ''],\n        'mxn~es-es~mx': ['MXN$', ',', '.', '2', ''],\n        'huf~hu~hu': ['', ' ', ',', '2', ' HUF'],\n        'aud~en-us~au': ['$', ',', '.', '2', ''],\n        'eur~fr-be~be': ['', '.', ',', '2', ' €'],\n        'eur~fi~fi': ['', ' ', ',', '2', ' €'],\n        'cop~es-co~co': ['$', '.', '', '0', ''],\n        'clp~es-cl~cl': ['$', '.', '', '0', ''],\n        'nzd~en-nz~nz': ['$', ',', '.', '2', ''],\n        'chf~fr-ch~ch': ['CHF ', ' ', '.', '2', ''],\n        'twd~zh-hant-tw~tw': ['NT$', ',', '.', '2', ''],\n        'ars~es-es~ar': ['$ ', '.', ',', '2', ''],\n        'usd~en-gb~us': ['$', ',', '.', '2', ''],\n        'pen~es-pe~pe': ['S/.', ',', '.', '2', ''],\n        'idr~id~id': ['Rp', '.', '', '0', ''],\n        'eur~en-ie~ie': ['€', ',', '.', '2', ''],\n        'eur~el~gr': ['', '.', ',', '2', ' €'],\n        'eur~de-de~at': ['€ ', '.', ',', '2', ''],\n        'inr~en-us~in': ['₹ ', ',', '.', '2', ''],\n        'idr~en-us~id': ['Rp', '.', '', '0', ''],\n        'eur~sk~sk': ['', ' ', ',', '2', ' €'],\n        'zar~en-za~za': ['R', ' ', ',', '2', ''],\n        'vnd~en-us~vn': ['₫', ',', '.', '2', ''],\n        'php~en-ph~ph': ['₱', ',', '.', '2', ''],\n        'ils~he~il': ['‪₪‎', ',', '.', '2', '‬'],\n        'sar~ar-sa~sa': ['‪ر.س.‏‎', ',', '.', '2', '‬'],\n        'ron~ro-ro~ro': ['', '.', ',', '2', ' RON'],\n        'usd~en-ca~us': ['$', ',', '.', '2', ''],\n        'uah~ru~ua': ['', ' ', ',', '2', ' ₴'],\n        'hkd~zh-hant-hk~hk': ['HK$', ',', '.', '2', ''],\n        'usd~es-ec~ec': ['$', '.', ',', '2', ''],\n        'thb~th~th': ['฿', ',', '.', '2', ''],\n        'sgd~en-sg~sg': ['SG$', ',', '.', '2', ''],\n        'mxn~en-us~mx': ['MXN$', ',', '.', '2', ''],\n        'uah~es-es~ua': ['', ' ', ',', '2', ' ₴'],\n        'rub~en-us~ru': ['', ' ', ',', '2', ' ₽'],\n        'usd~pt-br~us': ['', '.', ',', '2', ' $'],\n        'chf~de-de~ch': ['CHF ', \"'\", '.', '2', ''],\n        'usd~en-in~us': ['$', ',', '.', '2', ''],\n        'crc~es-cr~cr': ['₡', '.', '', '0', ''],\n        'eur~es-mx~es': ['', '.', ',', '2', ' €'],\n        'cny~en-us~cn': ['¥', ',', '.', '2', ''],\n        'hrk~hr-hr~hr': ['', '.', ',', '2', ' kn'],\n        'usd~ru~us': ['', '.', ',', '2', ' $'],\n        'cad~fr-fr~ca': ['', ' ', ',', '2', ' $'],\n        'brl~en-us~br': ['R$', '.', ',', '2', ''],\n        'egp~ar-eg~eg': ['‪ج.م.‏‎', ',', '.', '3', '‬'],\n        'eur~en-us~nl': ['€ ', '.', ',', '2', ''],\n        'eur~en-us~de': ['', '.', ',', '2', ' €'],\n        'eur~sl~si': ['', '.', ',', '2', ' €'],\n        'eur~de-at~de': ['', '.', ',', '2', ' €'],\n        'nzd~en-us~nz': ['$', ',', '.', '2', ''],\n        'twd~zh-tw~tw': ['NT$', ',', '.', '2', ''],\n        'usd~zh-cn~us': ['', '.', ',', '2', ' $'],\n        'aud~en-gb~au': ['$', ',', '.', '2', ''],\n        'usd~es-us~us': ['$', ',', '.', '2', ''],\n        'cop~es-es~co': ['$', '.', '', '0', ''],\n        'myr~en-my~my': ['RM', ',', '.', '2', ''],\n        'eur~fr-fr~be': ['', '.', ',', '2', ' €'],\n        'uah~en-us~ua': ['', ' ', ',', '2', ' ₴'],\n        'eur~nl-nl~be': ['', '.', ',', '2', ' €'],\n        'idr~en-id~id': ['Rp', '.', '', '0', ''],\n        'gbp~pl~gb': ['£', ',', '.', '2', ''],\n        'usd~en-us~ae': ['$', ',', '.', '2', ''],\n        'usd~es-mx~us': ['', '.', ',', '2', ' $'],\n        'eur~en-us~gr': ['', '.', ',', '2', ' €'],\n        'uah~ko~ua': ['', ' ', ',', '2', ' ₴'],\n        'uah~uk~ua': ['', ' ', ',', '2', ' ₴'],\n        'usd~ko~us': ['', '.', ',', '2', ' $'],\n        'bgn~bg~bg': ['', ' ', ',', '2', ' лв.'],\n        'zar~en-us~za': ['R', ' ', ',', '2', ''],\n        'inr~en-gb~in': ['₹ ', ',', '.', '2', ''],\n        'usd~es-ve~ve': ['$', ',', '.', '2', ''],\n        'ils~en-us~il': ['₪', ',', '.', '2', ''],\n        'clp~es-es~cl': ['$', '.', '', '0', ''],\n        'eur~en-my~de': ['', '.', ',', '2', ' €'],\n        'nok~nb-no~no': ['kr ', ' ', ',', '2', ''],\n        'ron~en-us~ro': ['', '.', ',', '2', ' RON'],\n        'usd~vi~us': ['', '.', ',', '2', ' $'],\n        'usd~de-de~us': ['', '.', ',', '2', ' $'],\n        'php~en-us~ph': ['₱', ',', '.', '2', ''],\n        'rsd~sr-latn-rs~rs': ['', '.', '', '0', ' RSD'],\n        'eur~fi-fi~fi': ['', ' ', ',', '2', ' €'],\n        'usd~en-au~us': ['$', ',', '.', '2', ''],\n        'usd~es-es~ve': ['$', ',', '.', '2', ''],\n        'eur~en-gb~de': ['', '.', ',', '2', ' €'],\n        'eur~en-us~fr': ['', ' ', ',', '2', ' €'],\n        'usd~es-es~us': ['', '.', ',', '2', ' $'],\n        'eur~et~ee': ['', ' ', ',', '2', ' €'],\n        'jpy~en-us~jp': ['¥', ',', '', '0', ''],\n        'eur~lt~lt': ['', ' ', ',', '2', ' €'],\n        'pen~es-es~pe': ['S/.', ',', '.', '2', ''],\n        'pkr~en-us~pk': ['Rs', ',', '', '0', ''],\n        'usd~ar-sa~us': ['', '.', ',', '2', ' $'],\n        'usd~es-gt~gt': ['$', ',', '.', '2', ''],\n        'jpy~ja-jp~jp': ['¥', ',', '', '0', ''],\n        'sek~en-us~se': ['', ' ', ',', '2', ' kr'],\n        'eur~en-us~it': ['', '.', ',', '2', ' €'],\n        'eur~en-us~ie': ['€', ',', '.', '2', ''],\n        'usd~ru~by': ['$', ',', '.', '2', ''],\n        'usd~es-uy~uy': ['$', ',', '.', '2', ''],\n        'usd~es-es~ec': ['$', '.', ',', '2', ''],\n        'eur~de-ch~de': ['', '.', ',', '2', ' €'],\n        'vnd~pt-br~vn': ['₫', ',', '.', '2', ''],\n        'chf~en-us~ch': ['CHF ', '.', ',', '2', ''],\n        'usd~fa~us': ['', '.', ',', '2', ' $'],\n        'chf~it-ch~ch': ['CHF ', \"'\", '.', '2', ''],\n        'jod~ar-jo~jo': ['‪د.ا.‏‎', ',', '.', '3', '‬'],\n        'usd~es-do~do': ['$', ',', '.', '2', ''],\n        'uah~ru-ua~ua': ['', ' ', ',', '2', ' ₴'],\n        'usd~ar-kw~us': ['', '.', ',', '2', ' $'],\n        'eur~en-us~be': ['', '.', ',', '2', ' €'],\n        'jpy~zh-hans-cn~jp': ['¥', ',', '', '0', ''],\n        'myr~en-us~my': ['RM', ',', '.', '2', ''],\n        'dkk~da-dk~dk': ['', '.', ',', '2', ' kr.'],\n        'iqd~ar-iq~iq': ['‪د.ع.‏‎', ',', '.', '2', '‬'],\n        'nok~en-us~no': ['kr ', ' ', ',', '2', ''],\n        'usd~ja~us': ['', '.', ',', '2', ' $'],\n        'eur~en-gb~ie': ['€', ',', '.', '2', ''],\n        'gbp~en-in~gb': ['£', ',', '.', '2', ''],\n        'eur~en-gb~nl': ['€ ', '.', ',', '2', ''],\n        'dkk~en-us~dk': ['', '.', ',', '2', ' kr.'],\n        'kwd~en-us~kw': ['‪د.ك.‏‎', ',', '.', '3', '‬'],\n        'rsd~en-us~rs': ['', '.', ',', '2', ' дин.'],\n        'usd~id~us': ['', '.', ',', '2', ' $'],\n        'dzd~fr-fr~dz': ['', ' ', ',', '2', ' DA'],\n        'eur~en-us~es': ['', '.', ',', '2', ' €'],\n        'kzt~ru~kz': ['', ' ', ',', '2', ' ₸'],\n        'bdt~en-us~bd': ['', ',', '.', '2', '৳'],\n        'chf~fr-fr~ch': ['CHF ', ' ', '.', '2', ''],\n        'iqd~en-us~iq': ['‪د.ع.‏‎', ',', '.', '2', '‬'],\n        'eur~en-gb~fr': ['', ' ', ',', '2', ' €'],\n        'bgn~en-us~bg': ['', ' ', ',', '2', ' лв.'],\n        'eur~es-co~es': ['', '.', ',', '2', ' €'],\n        'pln~en-us~pl': ['', ' ', ',', '2', ' zł'],\n        'usd~en-id~us': ['$', ',', '.', '2', ''],\n        'ars~es-419~ar': ['$ ', '.', ',', '2', ''],\n        'huf~it-it~hu': ['', ' ', ',', '2', ' HUF'],\n        'usd~es-sv~sv': ['$', ',', '.', '2', ''],\n        'mad~fr-fr~ma': ['', '.', ',', '2', ' DH'],\n        'rub~zh-cn~ru': ['', ' ', ',', '2', ' ₽'],\n        'ttd~en-tt~tt': ['$', ',', '.', '2', ''],\n        'eur~en-us~lt': ['', ' ', ',', '2', ' €'],\n        'usd~en-ph~us': ['$', ',', '.', '2', ''],\n        'usd~sv-se~us': ['', '.', ',', '2', ' $'],\n        'zar~en-gb~za': ['R', ' ', ',', '2', ''],\n        'eur~en-gb~es': ['', '.', ',', '2', ' €'],\n        'usd~nl-nl~us': ['', '.', ',', '2', ' $'],\n        'eur~nl-be~nl': ['€ ', '.', ',', '2', ''],\n        'hrk~en-us~hr': ['', '.', ',', '2', ' kn'],\n        'nzd~en-au~nz': ['$', ',', '.', '2', ''],\n        'usd~es-es~uy': ['$', ',', '.', '2', ''],\n        'usd~ru-by~by': ['$', ',', '.', '2', ''],\n        'usd~en-us~ke': ['$', ',', '.', '2', ''],\n        'usd~es-ec~us': ['', '.', ',', '2', ' $'],\n        'eur~en-gb~pt': ['', ' ', ',', '2', ' €'],\n        'pkr~en-gb~pk': ['Rs', ',', '', '0', ''],\n        'pkr~en-pk~pk': ['Rs', ',', '', '0', ''],\n        'rub~ru-ru~ru': ['', ' ', ',', '2', ' ₽'],\n        'twd~en-us~tw': ['NT$', ',', '.', '2', ''],\n        'usd~zh-hans-cn~us': ['', '.', ',', '2', ' $'],\n        'czk~en-us~cz': ['', ' ', ',', '2', ' Kč'],\n        'eur~en-gb~it': ['', '.', ',', '2', ' €'],\n        'eur~en-us~pt': ['', ' ', ',', '2', ' €'],\n        'sek~en-gb~se': ['', ' ', ',', '2', ' kr'],\n        'usd~en-gb~ae': ['$', ',', '.', '2', ''],\n        'usd~en-us~lk': ['$', ',', '.', '2', ''],\n        'usd~es-pa~pa': ['$', ',', '.', '2', ''],\n        'eur~fr-ch~fr': ['', ' ', ',', '2', ' €'],\n        'usd~en-gb~ng': ['$', ',', '.', '2', ''],\n        'eur~en-gb~be': ['', '.', ',', '2', ' €'],\n        'eur~en-us~fi': ['', ' ', ',', '2', ' €'],\n        'eur~ru~de': ['', '.', ',', '2', ' €'],\n        'jod~en-us~jo': ['‪د.ا.‏‎', ',', '.', '3', '‬'],\n        'pln~en-gb~pl': ['', ' ', ',', '2', ' zł'],\n        'pln~pl-pl~pl': ['', ' ', ',', '2', ' zł'],\n        'usd~fr-fr~re': ['$', ',', '.', '2', '']\n    };\n};\n\n/**\n * Interface used to break apart string array containing current formatting information\n * into an object\n */\ninterface ICurrencyFormatDetails {\n    beforePrice: string;\n    thousandSeparator: string;\n    separator: string;\n    precision: string;\n    afterPrice: string;\n}\n\n/**\n * Returns the currency formatting details for a given currency code, language and market\n */\nconst getFormat = (currencyCode: string, language: string, market: string): ICurrencyFormatDetails | undefined => {\n    currencyCode = currencyCode.toLowerCase();\n    language = language.toLowerCase();\n    market = market.toLowerCase();\n    const key = `${currencyCode}~${language}~${market}`;\n\n    let formatArray = null;\n\n    const formats: { [key: string]: string[] } = getFormats();\n\n    if (formats.hasOwnProperty(key)) {\n        formatArray = formats[key];\n    }\n\n    if (formatArray === null && currencyFallbackFormats.hasOwnProperty(currencyCode)) {\n        formatArray = currencyFallbackFormats[currencyCode];\n    }\n\n    if (formatArray === null) {\n        return undefined;\n    }\n\n    if (market !== 'us' && market !== 'cl') {\n        if (currencyCodeMap.hasOwnProperty(currencyCode)) {\n            currencyCode = currencyCodeMap[currencyCode];\n        }\n        if (currencyCode === 'usd' && formatArray[0] === '$') {\n            // non US market using USD. Prefix with USD.\n            formatArray[0] = 'USD$';\n        } else if (currencyCode === 'usd' && formatArray[4] === ' $') {\n            // non US market using USD. Suffix with USD.\n            formatArray[4] = ' $USD';\n        } else if (formatArray[0].startsWith('$')) {\n            // non USD currency outside US using $ symbol. Prefix with currency code.\n            const includeSpace = currencyCode === 'cad';\n            formatArray[0] = currencyCode.toUpperCase() + (includeSpace ? ' ' : '') + formatArray[0];\n        } else if (formatArray[4] === ' $') {\n            // non USD currency outside US using $ symbol. Suffix with currency code.\n            formatArray[4] = ` $${currencyCode.toUpperCase()}`;\n        }\n    }\n\n    return {\n        beforePrice: formatArray[0],\n        thousandSeparator: formatArray[1],\n        separator: formatArray[2],\n        precision: formatArray[3],\n        afterPrice: formatArray[4]\n    };\n};\n\n/**\n * Returns the locale formatted version of some currency ammount\n *\n * @param price The price\n * @param currencyCode The 3 letter currency code\n * @param language the BCP-47 language tag\n * @param market The ALPHA-2 code representing the country/region this price will be served in.\n */\nexport default function formatCurrency(price: string | number, currencyCode: string, language: string, market: string): string | undefined {\n    let result: string;\n    try {\n        const numberPrice = Number(price);\n        if (isNaN(numberPrice)) {\n            throw new Error(`Invalid price passed to format currency: ${price}`);\n        }\n\n        const formatObject = getFormat(currencyCode, language, market);\n\n        if (formatObject) {\n            price = numberPrice.toFixed(Number(formatObject.precision));\n            price = price.replace('.', formatObject.separator);\n            price = price.replace(/\\B(?=(\\d{3})+(?!\\d))/g, formatObject.thousandSeparator);\n            result = formatObject.beforePrice + price + formatObject.afterPrice;\n        } else {\n            // If unable to determine the propery currency format return undefined\n            return undefined;\n        }\n    } catch (ex) {\n        // TODO: can we use currency code, language, market here?\n        StaticTelemetry.log(LogLevel.Error, NAME_CURRENCY_FORMATTER_EXCEPTION, { exception: ex });\n        throw new Error(EXCEPTION_CURRENCY_FORMATTER);\n    }\n    return result;\n}\n"]}