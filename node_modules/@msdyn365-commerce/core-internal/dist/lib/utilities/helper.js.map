{"version":3,"file":"helper.js","sourceRoot":"","sources":["../../../src/utilities/helper.ts"],"names":[],"mappings":"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","sourcesContent":["/*!\n * Copyright (c) Microsoft Corporation.\n * All rights reserved. See LICENSE in the project root for license information.\n */\n\nimport { getCurrency } from 'locale-currency';\nimport { IRequestContext } from '../interfaces';\n\nexport interface IContentEditableInitEvent {\n    type: string;\n}\n\n// Helper function for parsing/normalizing json, exported\nexport const parsePayload = (content: string) => {\n    try {\n        return content.constructor === String ? JSON.parse(content) : content;\n    } catch (error) {\n        throw new Error(`JSON Parsing fails for content -- ${content}`);\n    }\n};\n\nexport const isEmptyOrNullObject = (obj: object | undefined | null): boolean => {\n    return !obj || Object.keys(obj).length <= 0;\n};\n\nexport const returnEmptyPromise = (): Promise<{}> => {\n    // tslint:disable:no-void-expression\n    return new Promise((resolve: (value?: {} | PromiseLike<{}> | undefined) => void) => resolve());\n};\n\nconst UNSAFE_CHARS_REGEXP = /[<>\\/\\u2028\\u2029]/g;\nconst ESCAPED_CHARS: { [unsafechar: string]: string } = {\n    '<': '\\\\u003C',\n    '>': '\\\\u003E',\n    '/': '\\\\u002F',\n    '\\u2028': '\\\\u2028',\n    '\\u2029': '\\\\u2029'\n};\nconst escapeUnsafeChars = (unsafeChar: string): string => {\n    return ESCAPED_CHARS[unsafeChar];\n};\n\nexport const sanitizeForXss = (str: string): string => {\n    return str.replace(UNSAFE_CHARS_REGEXP, escapeUnsafeChars);\n};\n\nexport const removeInstanceCache = (_key: string, value: { instance: string }): undefined | unknown => {\n    if (value && value.instance === 'instance') {\n        return undefined;\n    }\n    return value;\n};\n\nexport const isAuthoringEditEnabled = (context: IRequestContext | undefined): boolean => {\n    if (context) {\n        if (context.features && context.features.authoring_inline_edit && context.params && !!context.params.isEditor) {\n            return true;\n        }\n    }\n\n    return false;\n};\n\n/**\n * Tries to parse a string value into an number and reurns this value. If the string is undefined\n * or if the string does not represent a valid number, undefined is returned\n *\n * @param value The string representing the number to be parsed\n */\nexport const tryParseInt = (value: string | undefined): number | undefined => {\n    if (value) {\n        const parsedValue = parseInt(value, 10);\n        return isNaN(parsedValue) ? undefined : parsedValue;\n    }\n    return undefined;\n};\n\n/**\n * Name of internal component fragment, must be all lower case\n */\nexport const SDK_FRAGMENT_NAME = 'platform.saferendermodule';\n\n/**\n * Regex constant for capturing the internal fragment name with data-reactroot that is occasionally emitted\n */\nexport const SDK_FRAGMENT_NAME_REGEX = /<[/]?platform\\.saferendermodule( data-reactroot=[\"].*[\"])?>/gi;\n\n/**\n * Hepler function to build a URL to get the asset\n * @param assetPath the path to the asset\n */\nexport const getAsset = (assetPath: string, context: IRequestContext) => {\n    let assetUrl: string = '';\n    if (context.url.staticCdnUrl) {\n        assetUrl += context.url.staticCdnUrl;\n    }\n    if (assetPath.length > 0 && assetPath.charAt(0) === '/') {\n        assetPath = assetPath.substr(1);\n    }\n    if (!process.env.SUBMISSIONID || process.env.SUBMISSIONID === 'undefined') {\n        return `${assetUrl}${`${assetPath}`.replace(/\\/+/g, '/')}`;\n    } else {\n        return `${assetUrl}${`${process.env.SUBMISSIONID}/${assetPath}`.replace(/\\/+/g, '/')}`;\n    }\n};\n\nexport const CurrencyCodeIdentifier = 'cc';\nexport const getCurrencyCodeFromContext = (requestContext: IRequestContext) => {\n    return (\n        (requestContext && requestContext.query && requestContext.query[CurrencyCodeIdentifier]) ||\n        (requestContext.cookies && requestContext.cookies.get<string>(CurrencyCodeIdentifier).value) ||\n        (requestContext.channel && requestContext.channel.Currency) ||\n        getCurrency(requestContext.locale)\n    );\n};\n\nexport const isNonceEnabled = (requestCnotext: IRequestContext) => {\n    const contentSecurityPolicy = requestCnotext.app && requestCnotext.app.contentSecurityPolicy;\n    const nonceToken = contentSecurityPolicy && contentSecurityPolicy.nonceToken;\n    return contentSecurityPolicy && !contentSecurityPolicy.disableContentSecurityPolicy && contentSecurityPolicy.enableNonce && nonceToken;\n};\n"]}