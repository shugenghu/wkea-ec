{"version":3,"file":"msdyn365-commerce.js","sourceRoot":"","sources":["../../src/msdyn365-commerce.ts"],"names":[],"mappings":"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","sourcesContent":["/*!\n * Copyright (c) Microsoft Corporation.\n * All rights reserved. See LICENSE in the project root for license information.\n */\n\nimport { ICache } from '@msdyn365-commerce/retail-proxy';\nimport * as React from 'react';\nimport { ICommerceApiSettings, IExperimentationConnector, IGeoLocationConnector } from './contract';\nimport {\n    ComponentType,\n    IComponent,\n    IComponentProps,\n    IDictionary,\n    ILocalCredentials,\n    IMergedAppSettings,\n    IMSDyn365Window,\n    IPartnerImageSettings,\n    IPartnerThemeSettings,\n    IPlatformSettings,\n    IResourceManager,\n    ISecretManager,\n    IThemeModule,\n    IThemeRegistration\n} from './interfaces';\n\ndeclare var window: IMSDyn365Window;\n\n/**\n * App level const available to module/action developer\n */\nexport class MSDyn365Commerce {\n    private _cartCookie: string = '_msdyn365___cart_';\n    private _checkoutCartCookie: string = '_msdyn365___checkout_cart_';\n    private _checkoutCartKeyPrefix: string = 'checkout';\n    private _buildVersion: string = '00-0000';\n    private _env: string = 'development';\n    private _commerceApiSetting: ICommerceApiSettings = <ICommerceApiSettings>{};\n    private _themeRegistration: IThemeRegistration = { themes: {}, styles: {} };\n    private _resourceManager: IResourceManager | undefined;\n    private _imageSettings: IPartnerImageSettings = { imageSettings: {}, gridSettings: {} };\n    private _themeSettings: IDictionary<IPartnerThemeSettings> = {};\n    private _themeModules: IThemeModule[] = [];\n    private _connectorCache: ICache | undefined;\n    private _secretManager: ISecretManager | undefined;\n    private _experimentationConnector: IExperimentationConnector | undefined;\n    private _geoLookupConnector: IGeoLocationConnector | undefined;\n    private _platformSettings: IPlatformSettings | undefined;\n    private _initialLoadCompleted: boolean = false;\n    private _localCredentials: ILocalCredentials | undefined;\n    private _appSettings: IMergedAppSettings = {\n        app: { config: {}, routes: {} },\n        msdyn365: { config: {}, routes: {}, contentSecurityPolicy: {} }\n    };\n\n    public setInitialLoadCompleted = (initialLoadCompleted: boolean) => {\n        this._initialLoadCompleted = initialLoadCompleted;\n    };\n    public setThemeRegistration = (themeRegistration: IThemeRegistration) => {\n        this._themeRegistration = themeRegistration;\n    };\n\n    /**\n     * Sets list of theme module objects\n     */\n    public setThemeModules = (themeModules: IThemeModule[]) => {\n        this._themeModules = themeModules;\n    };\n\n    /**\n     * Sets list of theme module objects\n     */\n    public createComponent = <T extends IComponent<IComponentProps>>(name: ComponentType, componentObj: T): React.FC<IComponentProps> => (\n        props: IComponentProps\n    ) => {\n        if (!(componentObj && componentObj.component)) {\n            throw new Error(`Component ${name} missing`);\n        }\n\n        const Element = componentObj.component;\n        return React.createElement(Element, props);\n    };\n\n    /**\n     * Creates a component override\n     */\n    public createComponentOverride = <T extends IComponent<IComponentProps>>(\n        name: ComponentType,\n        componentObj: T\n    ): React.FC<IComponentProps> => (props: IComponentProps) => {\n        if (!(componentObj && componentObj.component)) {\n            throw new Error(`Component ${name} missing`);\n        }\n\n        const Element = componentObj.component;\n        return React.createElement(Element, props);\n    };\n\n    /**\n     * Check if its in postInitialLoading status\n     */\n\n    get initialLoadCompleted(): boolean {\n        return this._initialLoadCompleted;\n    }\n\n    // DO NOT DELETE - keeping this method for backwards\n    // compatibility reasons. After modules code tranisitions to using cartCookieName\n    // we will delete this getter\n    get CartCookie(): string {\n        return this._cartCookie;\n    }\n\n    get cartCookieName(): string {\n        return this._cartCookie;\n    }\n\n    /**\n     * Get checkout cart cookie\n     */\n    get checkoutCartCookie(): string {\n        return this._checkoutCartCookie;\n    }\n\n    /**\n     * Get checkout cart cookie\n     */\n    get checkoutCartKeyPrefix(): string {\n        return this._checkoutCartKeyPrefix;\n    }\n\n    get themes(): IThemeRegistration {\n        return this._themeRegistration;\n    }\n\n    /**\n     * Gets theme modules with full layouts and segment objects\n     */\n    get themeModules(): IThemeModule[] {\n        return this._themeModules;\n    }\n    /**\n     * Gets the current build version\n     */\n    get buildVersion(): string {\n        return this._buildVersion;\n    }\n\n    /**\n     * Gets the current runtime environment\n     */\n    get env(): string {\n        return this._env;\n    }\n\n    /**\n     * Gets the commerce related API settings\n     */\n    get apiSettings(): ICommerceApiSettings {\n        return this._commerceApiSetting;\n    }\n\n    /**\n     * Gets the commerce related image settings\n     */\n    get imageSettings(): IPartnerImageSettings {\n        return this._imageSettings;\n    }\n\n    /**\n     * Gets the commerce related theme settings\n     */\n    get themeSettings(): IDictionary<IPartnerThemeSettings> {\n        return this._themeSettings;\n    }\n\n    /**\n     * Gets the commerce related APP settings\n     */\n    get appSettings(): IMergedAppSettings {\n        return this._appSettings;\n    }\n\n    /**\n     * Gets the experimentation connector object that contains the registered provider, listener and connector name\n     * Returns undefined if an experimentation connector has not been registered\n     */\n    get experimentationConnector(): IExperimentationConnector | undefined {\n        return this._experimentationConnector;\n    }\n\n    /**\n     * Gets the geoLookup connector object that contains the registered provider and connector name\n     * Returns undefined if a geo lookup connector has not been registered\n     */\n    get geoLookupConnector(): IGeoLocationConnector | undefined {\n        return this._geoLookupConnector;\n    }\n\n    /**\n     * Gets the experimentation app cache\n     */\n    get connectorCache(): ICache | undefined {\n        return this._connectorCache;\n    }\n\n    /**\n     * Gets secret manager object\n     */\n    get secretManager(): ISecretManager | undefined {\n        return this._secretManager;\n    }\n\n    /**\n     * Gets local credential details\n     */\n    get localCredentials(): ILocalCredentials | undefined {\n        return this._localCredentials;\n    }\n\n    /**\n     * Gets the platformSettings\n     */\n\n    get platformSettings(): IPlatformSettings | undefined {\n        return this._platformSettings;\n    }\n\n    /**\n     * Returns a boolean value indicating whether or not the current operating environment is browser or server\n     */\n    get isBrowser(): boolean {\n        // tslint:disable-next-line:no-typeof-undefined\n        return typeof window !== 'undefined';\n    }\n\n    /**\n     * Gets the resource manager instance\n     */\n    get resourceManager(): IResourceManager | undefined {\n        if (!this.isBrowser) {\n            return this._resourceManager;\n        }\n\n        return undefined;\n    }\n}\n\nconst msdyn365Commerce = new MSDyn365Commerce();\nexport default msdyn365Commerce;\n"]}