/*!
 * Copyright (c) Microsoft Corporation.
 * All rights reserved. See LICENSE in the project root for license information.
 */
import { ITelemetry } from '@msdyn365-commerce/telemetry-internal';
import * as React from 'react';
import { IBase } from '.';
import { IAny, ICoreContext, IDictionary, IGeneric } from '../interfaces';
export interface IModuleContract<TDataModel = {}, TBase = unknown> extends IBase<TBase> {
    modules?: IDictionary<IModuleContract[]>;
    data: TDataModel;
    dataActions: IGeneric<IAny>;
}
export interface IAddModuleSlot {
    slotId: string;
    slotName?: string;
    index?: number[];
}
export interface IModule<TDataModel = {}, TAppModel = IGeneric<IAny>> extends IModuleContract<TDataModel> {
    app: TAppModel;
    context: ICoreContext<TAppModel>;
    component?: IGeneric<IAny>;
    telemetry: ITelemetry;
    slots?: IDictionary<React.ReactNode[]>;
    slotsForAddModule?: IAddModuleSlot[];
    slotId?: string;
    parentId?: string;
    renderModuleAttributes(props: unknown): IDictionary<string>;
    renderView<T extends IModule>(props: T): React.ReactElement | null;
    renderModule?<T>(moduleInfo: {
        name: string;
        props: T;
        view?: string;
    }): React.ReactElement | null;
}
