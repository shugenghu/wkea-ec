/*!
 * Copyright (c) Microsoft Corporation.
 * All rights reserved. See LICENSE in the project root for license information.
 */
import React from 'react';
import { ContentEditableEvent } from 'react-contenteditable';
import { IDictionary, IRequestContext } from '../../interfaces';
export interface IText {
    tag?: string;
    text: string;
    required?: boolean;
    className?: string;
    additionalProperties?: IDictionary<string>;
}
export interface ILink {
    title: string;
    text: string;
    key: string;
    openInNewTab: boolean;
    className?: string;
    innerClassName?: string;
    href?: string;
    role?: string;
    ariaLabel: string;
    additionalProperties?: IDictionary<string>;
    linkTag?: string;
    onClick?(ev: React.SyntheticEvent): void;
}
export interface ITextEditProps {
    requestContext: IRequestContext;
    placeholderText?: string;
    onEdit(event: ContentEditableEvent): void;
}
export interface IEditProps {
    key: object;
    requestContext: IRequestContext;
}
export interface IEditableFieldProps<T> {
    editPropKey?: object;
    requestContext?: IRequestContext;
    placeholderText?: string;
    disabled?: boolean;
    fieldProps: T;
    type?: FieldType;
    children?: JSX.Element;
    onChange?(event: React.SyntheticEvent): void;
    onMouseOver?(event: React.SyntheticEvent): void;
    onMouseOut?(event: React.SyntheticEvent): void;
    onFocus?(event: React.SyntheticEvent): void;
    onBlur?(event: React.SyntheticEvent): void;
}
interface IEditableFieldState {
    isDisabled: boolean;
}
export declare enum FieldType {
    Text = 0,
    RichText = 1,
    Image = 2,
    Video = 3,
    Link = 4
}
/**
 * Editable field component, containing all the logic for inline editable properties in editorial preview
 * Current support: text, image
 */
export declare class EditableField extends React.Component<IEditableFieldProps<any>, IEditableFieldState> {
    private _isRequired;
    constructor(props: IEditableFieldProps<any>);
    componentDidMount(): void;
    componentWillReceiveProps(nextProps: IEditableFieldProps<any>): void;
    render(): JSX.Element | null;
    private _onChangeHandler;
    private _checkDisabledStatus;
    private _updateStatus;
}
export {};
