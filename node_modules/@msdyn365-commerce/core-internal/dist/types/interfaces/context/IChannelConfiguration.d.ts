/*!
 * Copyright (c) Microsoft Corporation.
 * All rights reserved. See LICENSE in the project root for license information.
 */
/**
 * ChannelConfiguration entity interface. Copied from retail-proxy to avoid dependency on retail-proxy
 */
export interface IChannelConfiguration {
    RecordId: number;
    ChannelNaturalId?: string;
    MinimumDepositPercentage: number;
    QuoteExpirationDays: number;
    PickupDeliveryModeCode?: string;
    CarryoutDeliveryModeCode?: string;
    CancellationChargePercentage: number;
    InventLocation?: string;
    InventLocationDataAreaId?: string;
    BingMapsApiKey?: string;
    BingMapsEnabled: boolean;
    Currency?: string;
    CatalogDefaultImageTemplate?: string;
    CompanyCurrency?: string;
    PriceIncludesSalesTax: boolean;
    CountryRegionId?: string;
    ChannelCountryRegionISOCode?: string;
    DefaultLanguageId?: string;
    TimeZoneInfoId?: string;
    EmailDeliveryModeCode?: string;
    GiftCardItemId?: string;
    EnableProductRecommendations: boolean;
    RefundableShippingAmountWithoutApproval: number;
    RefundShippingCharges: boolean;
    ReceiptSettingsValue: number;
    CustomerAttributeGroupId: number;
    ClientBookAttributeGroupId: number;
    NotificationRefreshInterval: number;
    AllowExchangeOnReturnOrders?: boolean;
    FiscalRegistrationProcessId?: string;
    ProfileProperties?: IChannelProfileProperty[];
    Properties?: IChannelProperty[];
    Languages?: IChannelLanguage[];
    UseAdvancedAutoCharges?: boolean;
    UseRTSForOnlineOrderCreation?: boolean;
    EnableProductRatingsForRetailStores?: boolean;
    EnableReturnsForMultipleOrderInvoices?: boolean;
    VoidSuspendedTransactionsOnCloseShift?: number;
    EnableOmniChannelPayments?: boolean;
    UseAdvancedCashManagement?: boolean;
    EnableFiscalRegistrationStorageBackup?: boolean;
    UseSalesReceiptAsDefaultReceiptTypeInJournal?: boolean;
    SalesOrderHeaderAttributeGroups?: number[];
    SalesOrderLinesAttributeGroups?: number[];
    EnableReturnPolicies?: boolean;
    ExtensionProperties?: ICommerceProperty[];
    EnableFetchingPickingListsForPickingAndReceiving?: boolean;
    IsInventoryAutomaticValidationEnabled?: boolean;
    IsPriceInclusiveTaxExemptCalculationEnabled?: boolean;
    IsWarrantyAutoPromptEnabled?: boolean;
    InventAvailabilityCalculationMode?: string;
}
/**
 * ChannelProperty entity interface.
 */
export interface IChannelProperty {
    Name?: string;
    Value?: string;
    Channel?: number;
    ExtensionProperties?: ICommerceProperty[];
}
/**
 * ChannelLanguage entity interface.
 */
export interface IChannelLanguage {
    LanguageId?: string;
    IsDefault: boolean;
    ExtensionProperties?: ICommerceProperty[];
}
/**
 * ChannelProfileProperty entity interface.
 */
export interface IChannelProfileProperty {
    Key: number;
    Value?: string;
    ExtensionProperties?: ICommerceProperty[];
}
/**
 * CommerceProperty entity interface.
 */
export interface ICommerceProperty {
    Key?: string;
    Value?: ICommercePropertyValue;
}
/**
 * CommercePropertyValue entity interface.
 */
export interface ICommercePropertyValue {
    BooleanValue?: boolean;
    ByteValue?: number;
    DateTimeOffsetValue?: Date;
    DecimalValue?: number;
    IntegerValue?: number;
    LongValue?: number;
    StringValue?: string;
}
