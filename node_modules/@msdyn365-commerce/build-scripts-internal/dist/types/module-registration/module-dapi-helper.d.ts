/*!
 * Copyright (c) Microsoft Corporation.
 * All rights reserved. See LICENSE in the project root for license information.
 */
import { IThemeModule } from '@msdyn365-commerce/core-internal';
import { IDictionary, IModuleRegistration } from './module-registration-model';
import { IModuleDefinition } from './utils/models';
export declare const getModulesDAPIHelperSingleton: () => ModulesDAPIHelper;
/**
 * Modules DAPI Helper class
 */
declare class ModulesDAPIHelper {
    private _registeredModules;
    private _dapiModulesList;
    private _themesDapiList;
    private _dapiModulesPreviewData;
    private _dapiThemePreviewData;
    prepareModuleDefinitionsForDAPI: (modules: IDictionary<IModuleRegistration>) => Promise<void>;
    generateThemesDAPI: () => Promise<void>;
    generateModuleDefinitionDAPI: () => Promise<void>;
    /**
     * Extracts the name of the module from the path to its definition file
     * @param definitionPath path to the definition file
     */
    getModuleName(definitionPath: string): string;
    /**
     * Returns the binder object for the given module
     * @param typeName name of the module
     */
    getModuleBinder(typeName: string): IModuleRegistration;
    /**
     * Returns name of the parent module for given module name
     * @param moduleName name of the module
     */
    getParentModuleName(moduleName: string): string;
    /**
     * Gets module definition for given module name
     * @param moduleRegistration object
     */
    getModuleDefinition(moduleName: string): IModuleDefinition;
    getModuleRegistrations: () => IModuleRegistration[];
    getThemes: () => IThemeModule[];
    private _addModules;
    private _getModuleDefinition;
    private _getModulePreviewData;
    private _getDataJsonPath;
    private _parseModuleDefinition;
    private _getDataJsonAndParse;
    private _renameKeyInObject;
}
export {};
