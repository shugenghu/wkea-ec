/*!
 * Copyright (c) Microsoft Corporation.
 * All rights reserved. See LICENSE in the project root for license information.
 */
/**
 * NOTE: PLEASE MAKE SURE TO UPDATE __mocks__/module-registration-model.ts ACCORDINGLY, AS IT MOCKS THE PATHS FOR THE TESTS
 */
import { IDataActionOptions } from '@msdyn365-commerce/core-internal';
export interface IDefinitionRegistration {
    definitionObj: IModuleDefinition;
    definitionPath: string;
}
export interface IDictionary<T> {
    [index: string]: T;
    [index: number]: T;
}
export interface IDataAction {
    id?: string;
    moduleName?: string;
    isNodeDataAction: boolean;
    name: string;
    path: string;
    runOn: ActionRuntime;
    options?: IDataActionOptions;
}
export declare enum ActionRuntime {
    server = 0,
    client = 1,
    serverOnly = 2
}
export interface IIModule {
    dataActions: IDictionary<IDataAction>;
    view: string;
}
export interface IModuleDefinition {
    $ref: string;
    $type: string;
    module: IIModule;
    dataActions: IDictionary<IDataAction>;
    name: string;
}
export interface IDataDefinition {
    moduleName: string;
    properties: IDictionary<IDataDefinitionProperty>;
}
export interface IConnectorDefiition {
    $type: string;
    name: string;
    configSchema: any;
}
export interface IConnectorInfo {
    name: string;
    aliasedPaths: IDictionary<string>;
    type: string;
}
export interface IDataDefinitionProperty {
    $ref: string;
    dataAction: string;
    runAt: ActionRuntime;
    type: string;
}
export interface IModuleRegistration {
    $type: string;
    dataActions: IDataAction[];
    definitionPath: string;
    definitionExtensions?: string[];
    isNodeModule: boolean;
    moduleNamespace: string;
    name: string;
    packageName: string;
    pages?: IDictionary<string[]>;
    parentDefinitionPath: string;
    path: string;
    segments?: string[];
    moduleDirectory?: string;
    themeSettings?: string;
}
export declare const THEME_MODULE_TYPE = "themeModule";
export declare const resolvedHoistedPath: string;
export declare const MODULE: {
    registrationFileName: string;
    namespace: string[];
};
export declare const nodeModulePath: string;
export declare const getRegistrationOutputPath: (fileName: string) => string;
export declare const VIEW: {
    fromInstalledModule: string[];
    fromHoistedModule: string[];
    fromLocalModule: string;
};
export declare const ACTION: {
    fromInstalledModule: string[];
    fromHoistedModule: string[];
    fromLocalModule: string;
};
export declare const DEFINITION: {
    fromInstalledModule: string[];
    fromHoistedModule: string[];
    fromLocalModule: string;
};
export declare const DATADEFINITION: {
    fromInstalledModule: string[];
    fromHoistedModule: string[];
    fromLocalModule: string;
};
export declare const COMPONENT: {
    fromInstalledModule: string[];
    fromHoistedModule: string[];
    fromLocalModule: string;
};
export declare const CONNECTOR: {
    fromInstalledModule: string[];
    fromHoistedModule: string[];
    fromLocalModule: string;
};
export declare const localModuleDefaultDataPathPattern: string;
export declare const localModuleResourcesPathPattern: string;
export declare const themeModuleDefinitionExtensionsPathPattern: string;
export declare const themeModuleLayoutsPathPattern: string;
export declare const themeModuleStylesPathPattern: string;
export declare const themeModuleSettingsPathPattern: string;
export declare const THEME_MODULE_FILE_TYPE: {
    DEFINITION_EXTENSIONS: string;
    LAYOUTS: string;
    STYLES: string;
    SETTINGS: string;
};
