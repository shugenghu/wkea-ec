"use strict";
/*!
 * Copyright (c) Microsoft Corporation.
 * All rights reserved. See LICENSE in the project root for license information.
 */
Object.defineProperty(exports, "__esModule", { value: true });
var tslib_1 = require("tslib");
// tslint:disable:no-any no-unnecessary-bind
var utilities_internal_1 = require("@msdyn365-commerce/utilities-internal");
var path = tslib_1.__importStar(require("path"));
var module_dapi_helper_1 = require("./module-registration/module-dapi-helper");
var module_registration_1 = require("./module-registration/module-registration");
var resources_dapi_helper_1 = require("./module-registration/resources-dapi-helper");
var task_runner_1 = tslib_1.__importDefault(require("./task-runner"));
/**
 * Build Script Webpack plugin
 */
var MSDyn365BuildScriptPlugin = /** @class */ (function () {
    function MSDyn365BuildScriptPlugin() {
        this.startTime = Date.now();
        this.prevTimestamps = new Map();
        this.firstRun = true;
    }
    MSDyn365BuildScriptPlugin.prototype.apply = function (compiler) {
        var _this = this;
        // web always runs first
        if (compiler.options.target === 'node') {
            utilities_internal_1.trace.debug("Skipping MSDyn365 webpack plugin with target = " + compiler.options.target);
            return;
        }
        utilities_internal_1.trace.info("Setting up msdyn365 plugin hooks");
        var isDebug = process.env.NODE_ENV === 'development';
        // in dev mode when we run the watcher, we hook our plugin into the `watchRun` lifecycle hook
        // and if doing a production build we hook into the `beforeCompile` step
        var lifecycleHook = isDebug ? 'watchRun' : 'beforeCompile';
        compiler.hooks[lifecycleHook].tapPromise('MSDyn365BuildScriptAsyncPlugin', function (compilation) { return tslib_1.__awaiter(_this, void 0, void 0, function () {
            var changedFiles, anyScssFilesChanged, registerThemesOptions, connectorSettings, taskPromises, _a, _b, _c, dapiHelper, resourcesHelper, _d, _e, _f, err_1;
            var _this = this;
            return tslib_1.__generator(this, function (_g) {
                switch (_g.label) {
                    case 0:
                        // Do something async...
                        utilities_internal_1.trace.info("Starting buildModuleRegistration in MSDyn365BuildScriptPlugin");
                        changedFiles = !isDebug
                            ? []
                            : Array.from(compilation.fileTimestamps.keys()).filter(function (watchedFileKey) {
                                return ((_this.prevTimestamps.get(watchedFileKey) || _this.startTime) <
                                    (compilation.fileTimestamps.get(watchedFileKey) || Infinity));
                            });
                        anyScssFilesChanged = changedFiles.filter(function (fileName) { return fileName.toLowerCase().endsWith('.scss'); }).length > 0;
                        registerThemesOptions = {
                            buildLocalThemes: this.firstRun || anyScssFilesChanged,
                            buildNodeThemes: this.firstRun
                        };
                        this.prevTimestamps = compilation.fileTimestamps;
                        connectorSettings = utilities_internal_1.safeReadJsonSync(path.resolve(process.cwd(), 'src', 'settings', 'connector.settings.json'));
                        // module registration should only occur on first run
                        _a = this.firstRun;
                        if (!_a) 
                        // module registration should only occur on first run
                        return [3 /*break*/, 2];
                        return [4 /*yield*/, module_registration_1.buildModuleRegistration(false)];
                    case 1:
                        _a = (_g.sent());
                        _g.label = 2;
                    case 2:
                        _b = [
                            _a
                        ];
                        // register parter/local modules
                        _c = this.firstRun;
                        if (!_c) 
                        // register parter/local modules
                        return [3 /*break*/, 4];
                        return [4 /*yield*/, module_registration_1.buildModuleRegistration(true)];
                    case 3:
                        _c = (_g.sent());
                        _g.label = 4;
                    case 4:
                        taskPromises = _b.concat([
                            _c,
                            this.firstRun && module_registration_1.generateViewRegistration(),
                            this.firstRun && module_registration_1.generateComponentRegistration(),
                            this.firstRun && module_registration_1.generateConnectorRegistration(connectorSettings),
                            task_runner_1.default({
                                buildSiteCss: {
                                    shouldExecute: this.firstRun || anyScssFilesChanged
                                },
                                registerThemes: {
                                    shouldExecute: true,
                                    options: registerThemesOptions
                                }
                            })
                        ]).filter(Boolean);
                        dapiHelper = module_dapi_helper_1.getModulesDAPIHelperSingleton();
                        resourcesHelper = new resources_dapi_helper_1.ResourceManagerDAPIHelper();
                        _g.label = 5;
                    case 5:
                        _g.trys.push([5, 13, , 14]);
                        return [4 /*yield*/, Promise.all(taskPromises)];
                    case 6:
                        _g.sent();
                        _d = this.firstRun;
                        if (!_d) return [3 /*break*/, 8];
                        return [4 /*yield*/, dapiHelper.generateModuleDefinitionDAPI()];
                    case 7:
                        _d = (_g.sent());
                        _g.label = 8;
                    case 8:
                        _d;
                        _e = this.firstRun;
                        if (!_e) return [3 /*break*/, 10];
                        return [4 /*yield*/, dapiHelper.generateThemesDAPI()];
                    case 9:
                        _e = (_g.sent());
                        _g.label = 10;
                    case 10:
                        _e;
                        _f = this.firstRun;
                        if (!_f) return [3 /*break*/, 12];
                        return [4 /*yield*/, resourcesHelper.generateResourcesDAPI()];
                    case 11:
                        _f = (_g.sent());
                        _g.label = 12;
                    case 12:
                        _f;
                        this.firstRun = false;
                        utilities_internal_1.trace.info("Completed buildModuleRegistration in MSDyn365BuildScriptPlugin");
                        return [3 /*break*/, 14];
                    case 13:
                        err_1 = _g.sent();
                        utilities_internal_1.trace.error("Failed to compile in buildModuleRegistration in MSDyn365BuildScriptPlugin");
                        utilities_internal_1.trace.error(err_1);
                        throw err_1;
                    case 14: return [2 /*return*/];
                }
            });
        }); });
    };
    return MSDyn365BuildScriptPlugin;
}());
exports.MSDyn365BuildScriptPlugin = MSDyn365BuildScriptPlugin;
exports.default = MSDyn365BuildScriptPlugin;
//# sourceMappingURL=msdyn365-plugin.js.map