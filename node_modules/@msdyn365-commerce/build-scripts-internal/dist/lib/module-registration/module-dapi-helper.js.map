{"version":3,"file":"module-dapi-helper.js","sourceRoot":"","sources":["../../../src/module-registration/module-dapi-helper.ts"],"names":[],"mappings":"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","sourcesContent":["/*!\n * Copyright (c) Microsoft Corporation.\n * All rights reserved. See LICENSE in the project root for license information.\n */\n\nimport { IThemeModule } from '@msdyn365-commerce/core-internal';\nimport {\n    isEmptyOrNullObject,\n    isObject,\n    resolveRef,\n    safeFileExists,\n    safeReadJson,\n    safeWriteJson\n} from '@msdyn365-commerce/utilities-internal';\nimport path from 'path';\nimport { IDictionary, IModuleRegistration } from './module-registration-model';\nimport { getThemesDAPIList, getThemeSettings } from './themes-dapi-helper';\nimport { IModuleDefinition, keystonePaths, THEME_MODULE } from './utils/models';\n\nlet modulesDAPIHelper: ModulesDAPIHelper | null = null;\n\nexport const getModulesDAPIHelperSingleton = () => {\n    if (!modulesDAPIHelper) {\n        modulesDAPIHelper = new ModulesDAPIHelper();\n    }\n\n    return modulesDAPIHelper;\n};\n\n/**\n * Modules DAPI Helper class\n */\nclass ModulesDAPIHelper {\n    private _registeredModules: IDictionary<IModuleRegistration> = {};\n    private _dapiModulesList: IDictionary<IModuleDefinition> = {};\n    private _themesDapiList: IThemeModule[] = [];\n\n    public prepareModuleDefinitionsForDAPI = async (modules: IDictionary<IModuleRegistration>) => {\n        this._addModules(modules);\n        await Promise.all(\n            (Object.keys(modules) || []).map(async (moduleType: string) => {\n                const moduleRegObj = modules[moduleType];\n                // tslint:disable-next-line:no-any\n                const definition: any = await this._getModuleDefinition(moduleRegObj);\n                const dataJson = await this._getDataJsonAndParse(moduleRegObj);\n                !isEmptyOrNullObject(dataJson) && (definition[`data`] = dataJson);\n                this._dapiModulesList[moduleRegObj.name] = definition;\n            })\n        );\n    };\n\n    public generateThemesDAPI = async () => {\n        this._themesDapiList = await getThemesDAPIList(this._registeredModules, this._dapiModulesList);\n        await safeWriteJson(keystonePaths.KEYSTONE_APP_THEMES_DAPI_FILEPATH, this._themesDapiList);\n        const themeSettings = await getThemeSettings(this._registeredModules);\n        await safeWriteJson(keystonePaths.KEYSTONE_APP_SETTINGS_DAPI_FILEPATH, themeSettings);\n    };\n\n    public generateModuleDefinitionDAPI = async () => {\n        await safeWriteJson(keystonePaths.KEYSTONE_APP_DAPI_FILEPATH, this._dapiModulesList);\n    };\n\n    /**\n     * Extracts the name of the module from the path to its definition file\n     * @param definitionPath path to the definition file\n     */\n    public getModuleName(definitionPath: string): string {\n        if (!definitionPath || definitionPath === '') {\n            return '';\n        }\n\n        return path.basename(definitionPath, THEME_MODULE.DEFINITION_FILE);\n    }\n\n    /**\n     * Returns the binder object for the given module\n     * @param typeName name of the module\n     */\n    public getModuleBinder(typeName: string): IModuleRegistration {\n        return this._registeredModules[typeName];\n    }\n\n    /**\n     * Returns name of the parent module for given module name\n     * @param moduleName name of the module\n     */\n    public getParentModuleName(moduleName: string): string {\n        const moduleBinder = this.getModuleBinder(moduleName);\n\n        if (!moduleBinder) {\n            return '';\n        }\n\n        return this.getModuleName(moduleBinder.parentDefinitionPath);\n    }\n\n    /**\n     * Gets module definition for given module name\n     * @param moduleRegistration object\n     */\n    public getModuleDefinition(moduleName: string): IModuleDefinition {\n        return this._dapiModulesList[moduleName] || {};\n    }\n\n    public getModuleRegistrations = (): IModuleRegistration[] => {\n        const modules: IModuleRegistration[] = [];\n        Object.keys(this._registeredModules || {}).forEach(key => {\n            modules.push(this._registeredModules[key]);\n        });\n\n        return modules;\n    };\n\n    public getThemes = (): IThemeModule[] => {\n        return this._themesDapiList;\n    };\n\n    private _addModules(registrationEntries: IDictionary<IModuleRegistration>): void {\n        this._dapiModulesList = this._dapiModulesList || {};\n\n        Object.keys(registrationEntries || {}).forEach(entry => {\n            this._registeredModules[entry] = registrationEntries[entry];\n        });\n    }\n\n    private _getModuleDefinition = async (moduleBinder: IModuleRegistration) => {\n        const definitionFile = await safeReadJson<IModuleDefinition>(moduleBinder.definitionPath, {\n            error: (input: Error) => {\n                console.log(`Couldn't read definition file [${moduleBinder.definitionPath}]`, { exception: input });\n            }\n        });\n        if (!definitionFile || isEmptyOrNullObject(definitionFile)) {\n            return {\n                error: `problem found with definition file [${moduleBinder.definitionPath}] for module [${moduleBinder.name}]`\n            };\n        }\n\n        return this._parseModuleDefinition(definitionFile, moduleBinder.definitionPath);\n    };\n\n    private _getDataJsonPath = (definitionPath: string, isNodeModule: boolean): string => {\n        const filePath = (isNodeModule ? definitionPath : definitionPath.replace('src/modules', 'build/definitions')).replace(\n            '.definition.json',\n            '.data.json'\n        );\n        return path.resolve(filePath);\n    };\n\n    private _parseModuleDefinition = async (defN: IModuleDefinition, definitionPath: string): Promise<IModuleDefinition> => {\n        const definitionWithResolvedRef = await resolveRef(defN, definitionPath);\n        definitionWithResolvedRef[`module`] && delete definitionWithResolvedRef[`module`];\n        this._renameKeyInObject(definitionWithResolvedRef, '$type', 'type', 0);\n        return definitionWithResolvedRef;\n    };\n\n    private _getDataJsonAndParse = async (moduleBinder: IModuleRegistration) => {\n        let dataJsonPathFromDefinitionPath = this._getDataJsonPath(moduleBinder.definitionPath, moduleBinder.isNodeModule);\n        let dataJsonFileExists = await safeFileExists(dataJsonPathFromDefinitionPath);\n\n        // Look for parent data definition file - in case of $ref module\n        if (!dataJsonFileExists && moduleBinder.parentDefinitionPath) {\n            dataJsonPathFromDefinitionPath = this._getDataJsonPath(moduleBinder.parentDefinitionPath, moduleBinder.isNodeModule);\n            dataJsonFileExists = await safeFileExists(dataJsonPathFromDefinitionPath);\n        }\n\n        if (!dataJsonFileExists) {\n            return {};\n        }\n\n        const dataJsonFile = await safeReadJson<{ properties: IDictionary<IDictionary<string>> }>(dataJsonPathFromDefinitionPath, {\n            error: (input: Error) => {\n                console.log(`Couldn't read data json file [${dataJsonPathFromDefinitionPath}]`, { exception: input });\n            }\n        });\n\n        const dataJson = dataJsonFile && dataJsonFile[`properties`];\n        if (!dataJson) {\n            return {};\n        }\n\n        Object.keys(dataJson).forEach(eachDataTypePropertyKey => {\n            const eachDataTypeProperty = dataJson[eachDataTypePropertyKey];\n\n            if (eachDataTypeProperty.filterFromDAPI) {\n                delete dataJson[eachDataTypePropertyKey];\n            }\n        });\n\n        this._renameKeyInObject(dataJson, '$ref', 'type', 3);\n        return dataJson;\n    };\n\n    // tslint:disable-next-line:no-any\n    private _renameKeyInObject = (value: any, oldkey: string, newkey: string, depth?: number) => {\n        if (isObject(value) && isEmptyOrNullObject(value)) {\n            return value;\n        }\n\n        if (oldkey !== newkey && value.hasOwnProperty(oldkey)) {\n            Object.defineProperty(value, newkey, Object.getOwnPropertyDescriptor(value, oldkey) || '');\n            delete value[oldkey];\n        }\n\n        // if depth === undefined, then rename till all depth\n        if (depth !== undefined && depth === 0) {\n            return;\n        }\n\n        Object.keys(value).forEach((key: string) => {\n            const childObject = value[key];\n            if (isObject(childObject)) {\n                this._renameKeyInObject(childObject, oldkey, newkey, depth && depth - 1);\n            }\n        });\n    };\n}\n"]}