{"version":3,"file":"models.js","sourceRoot":"","sources":["../../../../src/module-registration/utils/models.ts"],"names":[],"mappings":";AAAA;;;GAGG;;;AAGH,6CAAyB;AACzB,iDAA6B;AAE7B,IAAM,YAAY,GAAG,EAAE,CAAC,YAAY,CAAC,OAAO,CAAC,GAAG,EAAE,CAAC,CAAC;AAuDvC,QAAA,aAAa,GAAG;IACzB,mBAAmB,EAAE,IAAI,CAAC,OAAO,CAAC,YAAY,EAAE,KAAK,EAAE,QAAQ,CAAC;IAChE,gCAAgC,EAAE,IAAI,CAAC,OAAO,CAAC,YAAY,EAAE,KAAK,EAAE,4BAA4B,CAAC;IACjG,0BAA0B,EAAE,IAAI,CAAC,OAAO,CAAC,YAAY,EAAE,KAAK,EAAE,6BAA6B,CAAC;IAC5F,iCAAiC,EAAE,IAAI,CAAC,OAAO,CAAC,YAAY,EAAE,KAAK,EAAE,6BAA6B,CAAC;IACnG,oCAAoC,EAAE,IAAI,CAAC,OAAO,CAAC,YAAY,EAAE,KAAK,EAAE,gCAAgC,CAAC;IACzG,mCAAmC,EAAE,IAAI,CAAC,OAAO,CAAC,YAAY,EAAE,KAAK,EAAE,yBAAyB,CAAC;IACjG,yBAAyB,EAAE,IAAI,CAAC,OAAO,CAAC,YAAY,EAAE,OAAO,EAAE,UAAU,CAAC;CAC7E,CAAC;AAEF;;;GAGG;AACU,QAAA,aAAa,GAAG,UAAC,cAAsB;IAChD,IAAI,CAAC,cAAc,IAAI,cAAc,KAAK,EAAE,EAAE;QAC1C,OAAO,EAAE,CAAC;KACb;IAED,OAAO,IAAI,CAAC,QAAQ,CAAC,cAAc,2CAA+B,CAAC;AACvE,CAAC,CAAC;AAEF,IAAM,gBAAgB,GAAG,OAAO,CAAC,GAAG,EAAE,CAAC;AACvC,IAAM,+BAA+B,GAAG,4BAA4B,CAAC;AACrE,IAAM,mBAAmB,GAAG,IAAI,CAAC,OAAO,CAAC,gBAAgB,EAAE,OAAO,CAAC,CAAC,OAAO,CAAC,MAAM,EAAE,GAAG,CAAC,CAAC;AAE5E,QAAA,oCAAoC,GAAM,gBAAgB,sBAAiB,+BAA+B,4CAAyC,CAAC;AACpJ,QAAA,sCAAsC,GAAM,gBAAgB,sBAAiB,+BAA+B,8CAA2C,CAAC;AACxJ,QAAA,kCAAkC,GAAM,mBAAmB,sBAAiB,+BAA+B,4CAAyC,CAAC;AACrJ,QAAA,oCAAoC,GAAM,mBAAmB,sBAAiB,+BAA+B,8CAA2C,CAAC;AAEzJ,QAAA,gCAAgC,GAAM,gBAAgB,kCAA+B,CAAC;AACtF,QAAA,kCAAkC,GAAM,gBAAgB,oCAAiC,CAAC","sourcesContent":["/*!\n * Copyright (c) Microsoft Corporation.\n * All rights reserved. See LICENSE in the project root for license information.\n */\n\nimport { IDictionary } from '@msdyn365-commerce/core-internal';\nimport * as fs from 'fs';\nimport * as path from 'path';\n\nconst appDirectory = fs.realpathSync(process.cwd());\n\ninterface IModuleProperty {\n    friendlyName: string;\n    description: string;\n    type: string;\n}\n\nexport interface IModuleDefinition {\n    $type: string;\n    type: string;\n    name: string;\n    friendlyName: string;\n    description: string;\n    config: IDictionary<IModuleProperty>;\n    slots: IDictionary<IModuleProperty>;\n    resources: IDictionary<IModuleProperty>;\n    dependencies: IDictionary<IDictionary<IDictionary<string>>>;\n    data: IDictionary<IDictionary<string>>;\n}\n\nexport interface IThemeDefinition {\n    name: string;\n    description: string;\n    friendlyName: string;\n    type: string;\n    definitionExtensions?: IDictionary<IModuleDefinition>;\n    styles: IDictionary<object>;\n    definitionPath: string;\n    isNodeModule: boolean;\n    pages?: IDictionary<IDictionary<object>>;\n    parentDefinitionPath: string;\n    path: string;\n    segments: IDictionary<object>;\n    moduleDirectory: string;\n    themeSettings: string;\n}\n\nexport const enum THEME_MODULE {\n    TYPE = 'themeModule',\n    PAGES = 'pages',\n    LAYOUTS = 'layouts',\n    SEGMENTS = 'segments',\n    STYLES = 'styles',\n    STYLE_PRESET_DEFINITION_FILE = '.definition.scss.json',\n    STYLE_PRESET_INSTANCE_FILE = '.scss.json',\n    DEF_EXTENSIONS = 'definition-extensions',\n    VIEWS = 'views',\n    DEF_EXT_FILE = '.definition.ext.json',\n    SETTINGS_FILE = '.theme.settings.json',\n    PAGE_FILE = '.page.json',\n    SEGMENT_FILE = '.segment.json',\n    DEFINITION_FILE = '.definition.json'\n}\n\nexport const keystonePaths = {\n    KEYSTONE_THEMES_DIR: path.resolve(appDirectory, 'src', 'themes'),\n    KEYSTONE_APP_DEFINITION_FILEPATH: path.resolve(appDirectory, 'lib', 'module-definition-api.json'),\n    KEYSTONE_APP_DAPI_FILEPATH: path.resolve(appDirectory, 'lib', 'module-definition-dapi.json'),\n    KEYSTONE_APP_THEMES_DAPI_FILEPATH: path.resolve(appDirectory, 'lib', 'themes-definition-dapi.json'),\n    KEYSTONE_APP_RESOURCES_DAPI_FILEPATH: path.resolve(appDirectory, 'lib', 'resources-definition-dapi.json'),\n    KEYSTONE_APP_SETTINGS_DAPI_FILEPATH: path.resolve(appDirectory, 'lib', 'themesettings-dapi.json'),\n    KEYSTONE_APP_SETTINGS_DIR: path.resolve(appDirectory, 'build', 'settings')\n};\n\n/**\n * Extracts the name of the module from the path to its definition file\n * @param definitionPath path to the definition file\n */\nexport const getModuleName = (definitionPath: string) => {\n    if (!definitionPath || definitionPath === '') {\n        return '';\n    }\n\n    return path.basename(definitionPath, THEME_MODULE.DEFINITION_FILE);\n};\n\nconst currentDirectory = process.cwd();\nconst msdyn365CommerceModuleNamespace = '@msdyn365-commerce-modules';\nconst resolvedHoistedPath = path.resolve(currentDirectory, '../..').replace(/\\\\/gi, '/');\n\nexport const installedModulesResourcesPathPattern = `${currentDirectory}/node_modules/${msdyn365CommerceModuleNamespace}/*/dist/lib/**/resources/modules/*.json`;\nexport const installedAuthoringResourcesPathPattern = `${currentDirectory}/node_modules/${msdyn365CommerceModuleNamespace}/*/dist/lib/**/resources/authoring/*.json`;\nexport const hoistedModulesResourcesPathPattern = `${resolvedHoistedPath}/node_modules/${msdyn365CommerceModuleNamespace}/*/dist/lib/**/resources/modules/*.json`;\nexport const hoistedAuthoringResourcesPathPattern = `${resolvedHoistedPath}/node_modules/${msdyn365CommerceModuleNamespace}/*/dist/lib/**/resources/authoring/*.json`;\n\nexport const localModulesResourcesPathPattern = `${currentDirectory}/src/resources/modules/*.json`;\nexport const localAuthoringResourcesPathPattern = `${currentDirectory}/src/resources/authoring/*.json`;\n"]}