"use strict";
/*!
 * Copyright (c) Microsoft Corporation.
 * All rights reserved. See LICENSE in the project root for license information.
 */
Object.defineProperty(exports, "__esModule", { value: true });
var tslib_1 = require("tslib");
require("jest");
var path = tslib_1.__importStar(require("path"));
var resolvedHoistedPath = path.resolve(process.cwd(), '../..').replace(/\\/gi, '/');
/* @ts-ignore */
var model = jest.genMockFromModule('../module-registration-model');
// @ts-ignore
model.resolvedHoistedPath = resolvedHoistedPath;
// @ts-ignore
model.nodeModulePath = path.join(process.cwd(), 'node_modules');
// @ts-ignore
model.getRegistrationOutputPath = function (fileName) { return path.resolve(path.join(process.cwd(), 'lib', fileName)); };
exports.MODULE = {
    registrationFileName: 'module-registration',
    namespace: ['@msdyn365-commerce-modules', '@msdyn365-commerce-partners']
};
// @ts-ignore
model.ACTION = {
    fromInstalledModule: exports.MODULE.namespace.map(function (namespace) { return process.cwd() + "/node_modules/" + namespace + "/*/dist/lib/**/*.action.js"; }),
    fromHoistedModule: exports.MODULE.namespace.map(function (namespace) { return resolvedHoistedPath + "/node_modules/" + namespace + "/*/dist/lib/**/*.action.js"; }),
    fromLocalModule: process.cwd() + "/src/**/*.action.ts"
};
// @ts-ignore
model.VIEW = {
    fromInstalledModule: exports.MODULE.namespace.map(function (namespace) { return process.cwd() + "/node_modules/" + namespace + "/*/dist/lib/**/*.view.js"; }),
    fromHoistedModule: exports.MODULE.namespace.map(function (namespace) { return resolvedHoistedPath + "/node_modules/" + namespace + "/*/dist/lib/**/*.view.js"; }),
    fromLocalModule: process.cwd() + "/src/**/*.view.tsx"
};
// @ts-ignore
model.DEFINITION = {
    fromInstalledModule: process.cwd() + "/src/__mocks__/installed/*/*.definition.json",
    fromHoistedModule: process.cwd() + "/src/__mocks__/hoisted/*/*.definition.json",
    fromLocalModule: process.cwd() + "/src/__mocks__/local/*/*.definition.json"
};
// @ts-ignore
model.DATADEFINITION = {
    fromInstalledModule: process.cwd() + "/src/__mocks__/installed/*/*.data.json",
    fromHoistedModule: process.cwd() + "/src/__mocks__/hoisted/*/*.data.json",
    fromLocalModule: process.cwd() + "/src/__mocks__/local/*/*.data.json"
};
// @ts-ignore
module.exports = model;
//# sourceMappingURL=module-registration-model.js.map