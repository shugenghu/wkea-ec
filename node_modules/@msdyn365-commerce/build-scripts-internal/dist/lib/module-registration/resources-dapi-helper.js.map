{"version":3,"file":"resources-dapi-helper.js","sourceRoot":"","sources":["../../../src/module-registration/resources-dapi-helper.ts"],"names":[],"mappings":"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","sourcesContent":["/*!\n * Copyright (c) Microsoft Corporation.\n * All rights reserved. See LICENSE in the project root for license information.\n */\n\nimport {\n    IAuthoringResourceDefinition,\n    IDictionary,\n    IModuleAuthoringResourceDefinition,\n    IResourceProperty\n} from '@msdyn365-commerce/core-internal';\nimport { safeGetAllFilesPath, safeReadJson, safeWriteJson } from '@msdyn365-commerce/utilities-internal';\nimport { merge as _merge } from 'lodash';\nimport path from 'path';\nimport { getModulesDAPIHelperSingleton } from './module-dapi-helper';\nimport { IModuleRegistration } from './module-registration-model';\nimport {\n    hoistedAuthoringResourcesPathPattern,\n    hoistedModulesResourcesPathPattern,\n    installedAuthoringResourcesPathPattern,\n    installedModulesResourcesPathPattern,\n    keystonePaths,\n    localAuthoringResourcesPathPattern,\n    localModulesResourcesPathPattern\n} from './utils/models';\n\nconst RESOURCE_DETAILS_REGEX = /\\/node_modules\\/(?<namespace>.*)\\/(?<packageName>.*)\\/dist\\/lib\\/.*/;\n\n/**\n * Resource manager implementation\n */\nexport class ResourceManagerDAPIHelper {\n    private authoringResourcesMap: IDictionary<IAuthoringResourceDefinition>;\n\n    private moduleResourcesMap: IDictionary<IDictionary<string>>;\n\n    private moduleResourceKeys: IDictionary<IDictionary<string>>;\n\n    private moduleNamespaceMap: IDictionary<string>;\n\n    public constructor() {\n        this.authoringResourcesMap = {};\n        this.moduleResourcesMap = {};\n        this.moduleResourceKeys = {};\n        this.moduleNamespaceMap = {};\n    }\n\n    /**\n     * @function        {init}          - Method to initialize and load all the resource strings\n     */\n    public async generateResourcesDAPI(): Promise<boolean> {\n        await this._readAuthoringResourceFiles();\n\n        const localAuthoringResourceFiles = await safeGetAllFilesPath(localAuthoringResourcesPathPattern);\n\n        if (localAuthoringResourceFiles.length > 0) {\n            await Promise.all(\n                localAuthoringResourceFiles.map(async (resourceFile: string) => {\n                    const locale = path.basename(resourceFile, '.json').toLocaleLowerCase();\n                    const content: IAuthoringResourceDefinition = <IAuthoringResourceDefinition>await safeReadJson(resourceFile);\n\n                    if (!content || !content.modules) {\n                        return;\n                    }\n\n                    this.authoringResourcesMap[locale] = this.authoringResourcesMap[locale] || {\n                        settings: {},\n                        modules: {},\n                        themes: {}\n                    };\n\n                    content.modules &&\n                        Object.keys(content.modules).forEach(moduleName => {\n                            this.authoringResourcesMap[locale].modules[moduleName] = this._getMergedAuthoringResources(\n                                this.authoringResourcesMap[locale].modules[moduleName],\n                                content.modules[moduleName]\n                            );\n\n                            if (content.settings) {\n                                this.authoringResourcesMap[locale].settings = content.settings;\n                            }\n                            this.authoringResourcesMap[locale].themes = {};\n                        });\n\n                    if (content.themes) {\n                        Object.keys(content.themes).forEach(themeName => {\n                            this.authoringResourcesMap[locale].themes[themeName] = _merge(\n                                this.authoringResourcesMap[locale].themes[themeName],\n                                content.themes[themeName]\n                            );\n                        });\n                    }\n                })\n            );\n        }\n\n        await this._readModuleResourceFiles();\n\n        const localModulesResourceFiles = await safeGetAllFilesPath(localModulesResourcesPathPattern);\n\n        if (localModulesResourceFiles.length > 0) {\n            await Promise.all(\n                localModulesResourceFiles.map(async (resourceFile: string) => {\n                    const locale = path.basename(resourceFile, '.json').toLocaleLowerCase();\n                    const content: IDictionary<IResourceProperty> = <IDictionary<IResourceProperty>>await safeReadJson(resourceFile);\n\n                    if (!content) {\n                        return;\n                    }\n\n                    this.moduleResourcesMap[locale] = this.moduleResourcesMap[locale] || {};\n                    const resourceKeys = Object.keys(content);\n                    resourceKeys.forEach(resourceKey => {\n                        if (content[resourceKey].value) {\n                            this.moduleResourcesMap[locale][resourceKey] = content[resourceKey].value;\n                        }\n                    });\n                })\n            );\n        }\n\n        await this._getAllModuleDefinitions();\n\n        return safeWriteJson(keystonePaths.KEYSTONE_APP_RESOURCES_DAPI_FILEPATH, {\n            authoringResourcesMap: this.authoringResourcesMap,\n            moduleResourcesMap: this.moduleResourcesMap,\n            moduleResourceKeys: this.moduleResourceKeys,\n            moduleNamespaceMap: this.moduleNamespaceMap\n        });\n    }\n\n    private async _readAuthoringResourceFiles(): Promise<void> {\n        let installedAuthoringResourceFiles = await safeGetAllFilesPath(installedAuthoringResourcesPathPattern);\n        installedAuthoringResourceFiles = installedAuthoringResourceFiles.concat(\n            await safeGetAllFilesPath(hoistedAuthoringResourcesPathPattern)\n        );\n\n        await Promise.all(\n            installedAuthoringResourceFiles.map(async (resourceFile: string) => {\n                const locale = path.basename(resourceFile, '.json').toLocaleLowerCase();\n                const content = await safeReadJson<IAuthoringResourceDefinition>(resourceFile);\n                if (content) {\n                    this.authoringResourcesMap[locale] = content;\n                }\n            })\n        );\n    }\n\n    private async _readModuleResourceFiles(): Promise<void> {\n        let installedModulesResourceFiles = await safeGetAllFilesPath(installedModulesResourcesPathPattern);\n        installedModulesResourceFiles = installedModulesResourceFiles.concat(await safeGetAllFilesPath(hoistedModulesResourcesPathPattern));\n\n        await Promise.all(\n            installedModulesResourceFiles.map(async (resourceFile: string) => {\n                const matchResult = resourceFile.match(RESOURCE_DETAILS_REGEX);\n                let moduleNamespace = '__installed__';\n                if (matchResult !== null && matchResult.groups && matchResult.groups.namespace) {\n                    moduleNamespace = matchResult.groups.namespace;\n                }\n\n                const locale = path.basename(resourceFile, '.json').toLocaleLowerCase();\n                const content: IDictionary<IResourceProperty> = <IDictionary<IResourceProperty>>await safeReadJson(resourceFile);\n\n                if (!content) {\n                    return;\n                }\n\n                this.moduleResourcesMap[locale] = this.moduleResourcesMap[locale] || {};\n                Object.keys(content).forEach(resourceKey => {\n                    if (content[resourceKey].value) {\n                        this.moduleResourcesMap[locale][`${moduleNamespace}.${resourceKey}`] = content[resourceKey].value;\n                    }\n                });\n            })\n        );\n    }\n\n    private async _getAllModuleDefinitions(): Promise<object[]> {\n        const helper = getModulesDAPIHelperSingleton();\n        const modules = helper.getModuleRegistrations();\n        const themeModules = helper.getThemes();\n        const defExtResources: IDictionary<IDictionary<string>> = {};\n\n        // Get resources object from definition extensions of theme modules\n        if (themeModules && Array.isArray(themeModules)) {\n            (themeModules || []).map(themeModule => {\n                Object.keys(themeModule.definitionExtensions || []).map(moduleName => {\n                    if (defExtResources[moduleName]) {\n                        defExtResources[moduleName] = {\n                            ...defExtResources[moduleName],\n                            ...(themeModule.definitionExtensions[moduleName].resources || {})\n                        };\n                    } else {\n                        defExtResources[moduleName] = themeModule.definitionExtensions[moduleName].resources || {};\n                    }\n                });\n            });\n        }\n\n        return Promise.all(\n            modules.map(async (moduleBinder: IModuleRegistration) => {\n                const definition = getModulesDAPIHelperSingleton().getModuleDefinition(moduleBinder.name);\n                this.moduleNamespaceMap[moduleBinder.name] = moduleBinder.moduleNamespace;\n                let moduleResources = definition.resources || {};\n\n                // Merge definition extension resources\n                if (defExtResources[moduleBinder.name]) {\n                    // @ts-ignore\n                    moduleResources = {\n                        ...moduleResources,\n                        ...defExtResources[moduleBinder.name]\n                    };\n                }\n\n                const resourcesObject: IDictionary<string> = {};\n                Object.keys(moduleResources).map(key => {\n                    // @ts-ignore\n                    resourcesObject[key] = moduleResources[key].value;\n                });\n\n                this.moduleResourceKeys[definition.name] = resourcesObject;\n\n                return definition;\n            })\n        );\n    }\n\n    private _getMergedAuthoringResources(\n        moduleAuthoringResources: IModuleAuthoringResourceDefinition,\n        overrideModuleAuthoringResources: IModuleAuthoringResourceDefinition\n    ): IModuleAuthoringResourceDefinition {\n        moduleAuthoringResources = moduleAuthoringResources || {};\n        overrideModuleAuthoringResources = overrideModuleAuthoringResources || {};\n\n        const mergedModuleAuthoringResources = {\n            ...moduleAuthoringResources,\n            ...overrideModuleAuthoringResources\n        };\n\n        // Do explicit merge of each properties as '...' does not do recursive merge\n\n        const moduleAuthoringResourceProperties = Object.keys(moduleAuthoringResources);\n        if (moduleAuthoringResourceProperties) {\n            moduleAuthoringResourceProperties.forEach(property => {\n                // @ts-ignore\n                if (overrideModuleAuthoringResources[property]) {\n                    // @ts-ignore\n                    mergedModuleAuthoringResources[property] = {\n                        // @ts-ignore\n                        ...moduleAuthoringResources[property],\n                        // @ts-ignore\n                        ...(overrideModuleAuthoringResources[property] || {})\n                    };\n                }\n            });\n        }\n\n        return mergedModuleAuthoringResources;\n    }\n}\n"]}