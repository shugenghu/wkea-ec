{"version":3,"file":"module-registration-helper.js","sourceRoot":"","sources":["../../../src/module-registration/module-registration-helper.ts"],"names":[],"mappings":"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","sourcesContent":["/*!\n * Copyright (c) Microsoft Corporation.\n * All rights reserved. See LICENSE in the project root for license information.\n */\n\nimport * as path from 'path';\nimport { IConnectorSettings } from '../msdyn365-plugin';\nimport { IConnectorInfo, IDataAction, IDictionary, IModuleRegistration } from './module-registration-model';\n\n/**\n * merge two path arrays, elements in array B will replace elements in array A if the file names are same\n *\n * @param pathArrayA An array of file paths\n * @param pathArrayB An array of file paths\n */\nexport const pathArrayMergeWithBaseName = (pathArrayA: string[], pathArrayB: string[]): string[] => {\n    return pathArrayA.filter(pathA => !pathArrayB.find(pathB => path.basename(pathA) === path.basename(pathB))).concat(pathArrayB);\n};\n\n/**\n * Normalizes slashes to `/` to make them uniform\n *\n * @param pathToFile A path string\n * @param replaceWith The slash to normalize the path with\n * @internal\n */\nexport const fixPath = (pathToFile: string, replaceWith: '/' | '\\\\' | '|' = '/') => pathToFile && pathToFile.replace(/\\/|\\\\/g, replaceWith);\n\n/**\n * Verifies whether the object array has elements.\n * @param array\n * @return {boolean} True if the object has elements, false otherwise.\n */\n// tslint:disable-next-line:no-any\nconst hasElements = (array?: any[]): boolean => {\n    return !!array && array.length > 0;\n};\n\ninterface IDataActionPreRegistration {\n    path: string;\n    aliasedPath: string;\n}\n\n/**\n * sorts the connectors array so that entries in registration file are written in sorted order\n */\nexport const sortConnectors = (connectors: { name: string; aliasedPaths: IDictionary<string> }[]) => {\n    return (connectors || []).sort((a, b) => {\n        if (!a || !b) {\n            return 0;\n        }\n\n        if (a.name < b.name) {\n            return -1;\n        }\n\n        if (a.name > b.name) {\n            return 1;\n        }\n\n        return 0;\n    });\n};\n\n/**\n * sorts the data actions array so that entries in registration file are written in sorted order\n */\nconst sortDataActions = (dataActions: IDataActionPreRegistration[] | IDataAction[]) => {\n    return (dataActions || []).sort((a: IDataActionPreRegistration | IDataAction, b: IDataActionPreRegistration | IDataAction) => {\n        if (!a || !b) {\n            return 0;\n        }\n\n        if (a.path < b.path) {\n            return -1;\n        }\n\n        if (a.path > b.path) {\n            return 1;\n        }\n\n        return 0;\n    });\n};\n\n/**\n * Prepares a registration key for the given file path\n * @param filePath path to the file that needs to be registered in the module registration object\n * @return {string} Returns the key generated by replacing the file extensions and slashes\n */\nexport const getRegistrationKey = (filePath: string, ext: string): string => {\n    return filePath ? path.basename(filePath, ext).replace(/[\\\\/\\.]/g, '-') : '';\n};\n\n/**\n * Method to add the module-registration.js file header that initializes bindings object\n * and adds handleError and isNotRegistered utility methods\n * @param modulesRegistration array of module registration objects\n */\nexport const addRegistrationFunctionHeader = (modulesRegistration: string[]) => {\n    const header = `\n/**\n * Copyright (c) 2018 Microsoft Corporation\n * Modules Registration\n * THIS FILE IS AUTO-GENERATED - MANUAL MODIFICATIONS WILL BE LOST\n */\n\nconst universal = require('react-universal-component').default;\n\n/**\n * Register all available modules\n */\nexport const registerAllModules = (requiredModules) => {\n    let binding = { modules: {}, dataActions: {} };\n    const { log, error }  = console;\n    const detailedWebpackError = (msg, errorObject) => { error(msg); error(errorObject); process.env.NODE_ENV !== 'development' && error('Run in dev mode to see full list of errors'); process.exit(50); }\n    const handleError = (modPath, errObject) => {\n        detailedWebpackError('Error with path: ' + modPath, errObject);\n    }\n    if (requiredModules) {\n        requiredModules = requiredModules.map((module) => module.toLowerCase());\n    }\n    const isNotRegistered = (moduleName) => {\n        return !requiredModules || requiredModules.length <= 0 || requiredModules.findIndex((module) => module === moduleName) !== -1;\n    };\n\n    ${process.env.NODE_ENV !== 'development' ? 'try {' : ''}\n`;\n    modulesRegistration.push(header);\n};\n\n// tslint:disable-next-line: max-func-body-length\nexport const addRegistrationFunctionBody = (\n    keys: string[],\n    registrationJson: IDictionary<IModuleRegistration>,\n    modulesRegistration: string[],\n    actionRegistrations: { path: string; aliasedPath: string }[]\n) => {\n    const prepareDataActionPreRegistration = (action: IDataActionPreRegistration) => {\n        const actionPath = fixPath(action.path);\n        const aliasedPath = fixPath(action.aliasedPath);\n        let loadActionScript = `\n            const actionPath = '${actionPath}';\n            binding.dataActions[actionPath] = require('${aliasedPath}');\n            if (binding.dataActions[actionPath] &&\n                binding.dataActions[actionPath].default &&\n                binding.dataActions[actionPath].default.prototype &&\n                binding.dataActions[actionPath].default.prototype.id) {\n                binding.dataActions[binding.dataActions[actionPath].default.prototype.id] = binding.dataActions[actionPath];\n            }\n        `;\n        if (process.env.NODE_ENV === 'development') {\n            loadActionScript = `\n            try {\n${loadActionScript}\n            } catch(e) {\n                binding.dataActions[actionPath] = undefined;\n                handleError(actionPath, e);\n            }\n           `;\n        }\n        return `\n        {\n            ${loadActionScript}\n        }`;\n    };\n\n    const prepareModuleRegistrationOutput = (key: string, isNodeModule: boolean) => {\n        const isHoisted = registrationJson[key].definitionPath.startsWith('../../node_modules/@msdyn365-commerce-modules');\n        const alias = !isNodeModule\n            ? 'partner/'\n            : isHoisted\n            ? `hoisted/${registrationJson[key].moduleNamespace}/`\n            : `${registrationJson[key].moduleNamespace}/`;\n        const dataActions = registrationJson[key].dataActions\n            .sort((a, b) => {\n                if (a.name < b.name) {\n                    return -1;\n                } else if (a.name > b.name) {\n                    return 1;\n                } else {\n                    return a.path < b.path ? -1 : 1;\n                }\n            })\n            .map((dataAction: IDataAction) => {\n                const dataActionPath = fixPath(dataAction.path);\n                return `{name:'${dataAction.name}', ${dataAction.id ? `id: '${dataAction.id}',` : ''} path:'${dataActionPath}', ${\n                    registrationJson[key].$type === 'themeModule' ? `moduleName: '${dataAction.moduleName}',` : ''\n                }runOn: ${dataAction.runOn}${dataAction.options ? `,options: ${JSON.stringify(dataAction.options)}` : ''}}`;\n            })\n            .join();\n\n        const chunkNames = `${alias}${fixPath(registrationJson[key].path)}`.replace(/[\\\\/]/g, '-');\n\n        const component = registrationJson[key].path\n            ? `component: universal(\n            () =>\n                import(/* webpackInclude: /\\.(t|j)sx?$/ */ ${process.env.NODE_ENV === 'development' ? '\\n/* webpackMode: \"eager\" */' : ''}\n                /* webpackExclude: /\\.data\\.|\\.autogenerated\\.|\\.test\\.|\\.field\\.|\\.data-model\\./ */\n                '${alias}${fixPath(registrationJson[key].path)}'),\n            {\n                chunkName: () => '${chunkNames}',\n                ignoreBabelRename: true\n            }\n        ),`\n            : '';\n\n        const pages =\n            registrationJson[key].pages && Object.keys(registrationJson[key].pages || {}).length\n                ? `pages: {${Object.keys(registrationJson[key].pages || {})\n                      .map(\n                          (layoutType: string) =>\n                              `'${layoutType}': [${registrationJson[key]\n                                  .pages![layoutType].map(layout => `'${getRegistrationKey(layout, '.page.json')}'`)\n                                  .join()}]`\n                      )\n                      .join()}},`\n                : '';\n\n        const segments = hasElements(registrationJson[key].segments)\n            ? `segments: [${registrationJson[key].segments!.map(segment => `'${getRegistrationKey(segment, '.segment.json')}'`).join()}],`\n            : '';\n\n        const definitionExtensions = hasElements(registrationJson[key].definitionExtensions)\n            ? `definitionExtensions: [${registrationJson[key]\n                  .definitionExtensions!.map(defExt => `'${getRegistrationKey(defExt, '.definition.ext.json')}'`)\n                  .join()}],`\n            : '';\n\n        const settings = registrationJson[key].themeSettings ? `themeSettings: '${registrationJson[key].themeSettings}',` : '';\n        const moduleDirectory = registrationJson[key].moduleDirectory ? `moduleDirectory: '${registrationJson[key].moduleDirectory}'` : '';\n\n        return `\n    isNotRegistered('${key}') && (binding.modules['${key}'] = {\n        ${component}\n        $type: '${registrationJson[key].$type}',\n        dataActions: [${dataActions}],\n        ${definitionExtensions}\n        definitionPath: '${registrationJson[key].definitionPath}',\n        isNodeModule: ${registrationJson[key].isNodeModule},\n        moduleNamespace: '${registrationJson[key].moduleNamespace}',\n        name: '${registrationJson[key].name}',\n        packageName: '${registrationJson[key].packageName}',\n        ${pages}\n        parentDefinitionPath: '${registrationJson[key].parentDefinitionPath}',\n        ${segments}\n        ${settings}\n        ${moduleDirectory}\n    });\n            `;\n    };\n\n    keys.sort().forEach((key: string) =>\n        modulesRegistration.push(prepareModuleRegistrationOutput(key, registrationJson[key].isNodeModule))\n    );\n\n    const prepareDataActionRegistrationOutput = (dataAction: IDataAction, key: string, isNodeDataAction: boolean) => {\n        if (dataAction.id) {\n            return '';\n        }\n        const isAlreadyAliased = dataAction.path.startsWith('hoisted');\n        const alias = !isNodeDataAction && !isAlreadyAliased ? 'partner/' : '';\n        if (process.env.NODE_ENV === 'development') {\n            return `\n    try {\n        if (isNotRegistered('${key}')) {\n            const sanitizedActionPath = '${fixPath(dataAction.path)}';\n            let dataAction = require('${alias}${fixPath(dataAction.path)}');\n            if (!dataAction.default) {\n                throw new Error('Data action path does not have a default export');\n            }\n            if (!(dataAction.default.prototype.id && binding.dataActions[dataAction.default.prototype.id]) || !binding.dataActions[sanitizedActionPath]) {\n                binding.dataActions[sanitizedActionPath] = dataAction;\n            }\n        }\n    } catch(e) {\n        binding.dataActions['${fixPath(dataAction.path)}'] = undefined;\n        handleError('${fixPath(dataAction.path)}', e);\n    }\n    `;\n        } else {\n            return `\n        if (isNotRegistered('${key}')) {\n            const sanitizedActionPath = '${fixPath(dataAction.path)}';\n            binding.dataActions[sanitizedActionPath] = require('${alias}${fixPath(dataAction.path)}');\n            if (!binding.dataActions[sanitizedActionPath].default) {\n                throw new Error('Data action path ' + sanitizedActionPath + ' does not have a default export');\n            }\n            binding.dataActions[sanitizedActionPath].default.prototype.RegistrationId = sanitizedActionPath;\n            if (binding.dataActions[sanitizedActionPath].default.prototype.id) {\n                binding.dataActions[binding.dataActions[sanitizedActionPath].default.prototype.id] = sanitizedActionPath;\n            }\n        }\n            `;\n        }\n    };\n\n    const sortedActionRegistartions = <IDataActionPreRegistration[]>sortDataActions(actionRegistrations || []);\n    sortedActionRegistartions.forEach((action: IDataActionPreRegistration) => {\n        modulesRegistration.push(prepareDataActionPreRegistration(action));\n    });\n\n    keys.forEach((key: string) => {\n        if (registrationJson[key].dataActions && registrationJson[key].dataActions.length > 0) {\n            const nodeDataActions = (registrationJson[key].dataActions || []).filter(dataAction => dataAction.isNodeDataAction);\n            (<IDataAction[]>sortDataActions(nodeDataActions)).forEach(dataAction => {\n                modulesRegistration.push(prepareDataActionRegistrationOutput(dataAction, key, dataAction.isNodeDataAction));\n            });\n\n            const partnerDataActions = (registrationJson[key].dataActions || []).filter(dataAction => !dataAction.isNodeDataAction);\n            (<IDataAction[]>sortDataActions(partnerDataActions)).forEach(dataAction => {\n                modulesRegistration.push(prepareDataActionRegistrationOutput(dataAction, key, dataAction.isNodeDataAction));\n            });\n        }\n    });\n};\n\nexport const addRegistrationFunctionFooter = (modulesRegistration: string[]) => {\n    const returnStatement = `\n    ${\n        process.env.NODE_ENV !== 'development'\n            ? `\n    } catch (e) {\n        handleError('-', e);\n    }\n    `\n            : ''\n    }\n    return binding;\n};`;\n\n    modulesRegistration.push(returnStatement);\n};\n\nconst getLoadConnectorScriptByType = (name: string, connectorType: string, paths: IDictionary<string>): string => {\n    switch (connectorType) {\n        case 'experimentationConnector':\n            const providerPath = fixPath(paths.provider);\n            const listenerPath = fixPath(paths.listener);\n            return `\n        let connectorProviderImpl = require('${providerPath}');\n        let connectorListenerImpl = require('${listenerPath}');\n        if (!connectorProviderImpl.default) {\n            throw new Error('Exp Connector provider ${name} does not have a default export. Check the provider file of the connector for a default export.');\n        }\n        if (!connectorListenerImpl.default) {\n            throw new Error('Exp Connector listener ${name} does not have a default export. Check the listener file of the connector for a default export.');\n        }\n        connectorDictionary[connectorName] = {provider: connectorProviderImpl.default, listener: connectorListenerImpl.default};`;\n        default:\n            return '';\n    }\n};\n\n/**\n * Prepares the registraion JS code for a single connector\n * Additionally creates the logic necessary for validating the connector follows any required implementation\n */\nexport const prepareConnectorRegistration = (connector: IConnectorInfo): string => {\n    const connectorName = connector.name;\n\n    // Generate the script to load the connector\n    let loadConnectorScript = getLoadConnectorScriptByType(connector.name, connector.type, connector.aliasedPaths);\n    if (process.env.NODE_ENV === 'development') {\n        loadConnectorScript = `\n        try {\n${loadConnectorScript}\n        } catch(e) {\n            connectorDictionary[connectorName] = undefined;\n            handleError(connectorName, e);\n        }\n       `;\n    }\n    return `\n    {\n        const connectorName = '${connectorName}';\n        ${loadConnectorScript}\n    }`;\n};\n\nexport const generateConnectorValidateMethods = async (\n    connectors: IConnectorInfo[],\n    connectorsConfig: IConnectorSettings | undefined\n): Promise<string> => {\n    return connectors\n        .map((connector: IConnectorInfo) => {\n            switch (connector.type) {\n                case 'experimentationConnector': {\n                    if (connectorsConfig && connectorsConfig.experimentation && connectorsConfig.experimentation.name === connector.name) {\n                        return `\n    verifyExperimentationReigstration('${connector.name}');`;\n                    }\n                    break;\n                }\n                default: {\n                    throw new Error(`Unsupported type connector encountered. Connector ${connector.name} with type ${connector.type}`);\n                }\n            }\n        })\n        .join('\\n');\n};\n\nexport const DUPLICATE_MODULE_REGISTRAION_ERROR = (moduleName: string): string => {\n    return `Duplicate module encountered. Module with name ${moduleName} already exists`;\n};\n"]}