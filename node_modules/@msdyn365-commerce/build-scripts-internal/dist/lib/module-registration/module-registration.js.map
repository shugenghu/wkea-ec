{"version":3,"file":"module-registration.js","sourceRoot":"","sources":["../../../src/module-registration/module-registration.ts"],"names":[],"mappings":"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","sourcesContent":["/*!\n * Copyright (c) Microsoft Corporation.\n * All rights reserved. See LICENSE in the project root for license information.\n */\n\nimport {\n    asyncForEach,\n    isPartnerApp,\n    resolveParentDefinitionPath,\n    resolveRef,\n    safeGetAllFilesPath,\n    safeReadJson,\n    safeWriteJS,\n    trace\n} from '@msdyn365-commerce/utilities-internal';\nimport { validate } from 'jsonschema';\nimport * as path from 'path';\nimport { IConnectorSettings } from '../msdyn365-plugin';\nimport { getModulesDAPIHelperSingleton } from './module-dapi-helper';\nimport {\n    addRegistrationFunctionBody,\n    addRegistrationFunctionFooter,\n    addRegistrationFunctionHeader,\n    DUPLICATE_MODULE_REGISTRAION_ERROR,\n    fixPath,\n    generateConnectorValidateMethods,\n    getRegistrationKey,\n    pathArrayMergeWithBaseName,\n    prepareConnectorRegistration,\n    sortConnectors\n} from './module-registration-helper';\nimport {\n    ACTION,\n    ActionRuntime,\n    COMPONENT,\n    CONNECTOR,\n    DATADEFINITION,\n    DEFINITION,\n    getRegistrationOutputPath,\n    IConnectorDefiition,\n    IConnectorInfo,\n    IDataAction,\n    IDataDefinition,\n    IDataDefinitionProperty,\n    IDefinitionRegistration,\n    IDictionary,\n    IModuleDefinition,\n    IModuleRegistration,\n    MODULE,\n    nodeModulePath,\n    resolvedHoistedPath,\n    THEME_MODULE_TYPE,\n    VIEW\n} from './module-registration-model';\nimport {\n    getModuleFileRelativePath,\n    hoistedPath,\n    MODULE_DETAILS_REGEX,\n    msdyn365ActionDefinitionGlobPattern,\n    msdyn365ModuleDataDefinitionGlobPattern,\n    msdyn365ModuleDefinitionGlobPattern,\n    resolvePathFromDefinition\n} from './registration-utils';\nimport { THEME_MODULE } from './utils/models';\n\nconst localNamespace = '__local__';\n\n// Keeps track of which modules have already been registered to prevent duplicates\nconst registeredModules: IDictionary<boolean> = {};\n\n/**\n * Gets data actions for an individual module\n * @param moduleNamespace module definition json object\n * @param dataActions dictionary of data actions\n * @param definitionPath path to theme definition file\n * @param parentDefinitionPath path to parent definition file\n */\nconst getThemeDataActions = async (\n    moduleNamespace: string,\n    dataActions: IDictionary<IDictionary<IDataAction>>,\n    definitionPath: string,\n    parentDefinitionPath: string | null,\n    themeDirectory: string\n): Promise<IDataAction[]> => {\n    const relativeGlobPattern = '**/*.definition.ext.json';\n    const themeName = getModuleName(definitionPath);\n    const localThemeModuleDefinitionExtensionsPathPattern = path.join(process.cwd(), 'src', '**', themeName, '**', '*.definition.ext.json');\n    const ThemeDefinitionsPath = await safeGetAllFilesPath(`${themeDirectory}/${relativeGlobPattern}`);\n    const localThemeDefinitionPath = await safeGetAllFilesPath(localThemeModuleDefinitionExtensionsPathPattern);\n    // merge definition.ext.json files from both node_module theme and local theme, local definition extension will override the same definition from node_module\n    const definitionsPaths = pathArrayMergeWithBaseName(ThemeDefinitionsPath, localThemeDefinitionPath);\n    const themeDefinitionExtension = await getAllDataActionsFromExtentionFiles(definitionsPaths);\n    const themeDataActions: IDataAction[] = [];\n\n    //  get the data actions for each module definition extension file of current theme\n    await asyncForEach(Object.keys(themeDefinitionExtension), async (moduleName: string) => {\n        const definitionExtension = themeDefinitionExtension[moduleName];\n        const extendedModuleDataActions = await getModuleDataActions(\n            moduleNamespace,\n            definitionExtension.definitionObj,\n            dataActions,\n            definitionExtension.definitionPath,\n            parentDefinitionPath,\n            moduleName\n        );\n        themeDataActions.push(...extendedModuleDataActions);\n    });\n    return Promise.resolve(themeDataActions);\n};\n\n/**\n * Gets data actions for an individual module\n * @param definition module definition json object\n * @param dataActions dictionary of data actions\n * @param definitionPath path to definition file\n * @param parentDefinitionPath path to parent definition file\n */\nconst getModuleDataActions = async (\n    moduleNamespace: string,\n    definition: IModuleDefinition,\n    dataActions: IDictionary<IDictionary<IDataAction>>,\n    definitionPath: string,\n    parentDefinitionPath: string | null,\n    moduleName?: string\n): Promise<IDataAction[]> => {\n    if (definition.dataActions && definition.module && definition.module.dataActions) {\n        throw new Error(\n            `Both parent and child modules should have dataActions as root level property. parentModule: ${parentDefinitionPath} childModule: ${definitionPath}`\n        );\n    }\n\n    const definitionDataActions = definition.dataActions || (definition.module && definition.module.dataActions);\n    if (!dataActions[definition.name] && !definitionDataActions) {\n        return Promise.resolve([]);\n    }\n\n    if (definition.module && definition.module.dataActions) {\n        // @deprecated\n        trace.warn(\n            `module.dataActions property in ${definition.name} is deprecated. \"dataActions\" should be defined as a root level property of module definition`\n        );\n    }\n\n    let isLegacy = false;\n    if (definitionDataActions) {\n        isLegacy = true;\n    }\n\n    const moduleDataActions: IDataAction[] = [];\n    await asyncForEach(\n        Object.keys(isLegacy ? definitionDataActions : dataActions[definition.name] || {}),\n        async (dataActionKey: string) => {\n            const dataAction: IDataAction = isLegacy ? definitionDataActions[dataActionKey] : dataActions[definition.name][dataActionKey];\n\n            if (dataAction.id) {\n                moduleDataActions.push({\n                    moduleName: moduleName,\n                    id: dataAction.id,\n                    name: dataActionKey,\n                    // @ts-ignore: To cast the types properly\n                    runOn: ActionRuntime[dataAction.runOn] || ActionRuntime.server,\n                    // add data action property if it exists in definition\n                    ...(dataAction.options && { options: dataAction.options })\n                });\n                return;\n            }\n\n            const dataActionAbsolutePath = (\n                (await resolvePathFromDefinition(parentDefinitionPath, dataAction.path, path.dirname(definitionPath))) || ''\n            ).replace(/[\\\\/]/g, '/');\n\n            const isHoisted = (dataActionAbsolutePath || '').indexOf(hoistedPath) === 0;\n            if (dataActionAbsolutePath) {\n                const isNodeDataAction = dataActionAbsolutePath.indexOf('node_modules') > -1;\n                const hoistedRelativePath = path.relative(\n                    path.resolve(process.cwd(), hoistedPath, moduleNamespace),\n                    dataActionAbsolutePath\n                );\n                let fullyResolvedPath = isHoisted\n                    ? `hoisted/${moduleNamespace}/${hoistedRelativePath}`\n                    : isNodeDataAction\n                    ? path.relative(path.join(nodeModulePath), dataActionAbsolutePath)\n                    : path.relative(path.join(process.cwd(), 'src'), dataActionAbsolutePath);\n                fullyResolvedPath = fullyResolvedPath.replace(/\\\\/g, '/');\n                moduleDataActions.push({\n                    moduleName: moduleName,\n                    name: dataActionKey,\n                    isNodeDataAction: isNodeDataAction,\n                    path: fullyResolvedPath,\n                    // @ts-ignore: To cast the types properly\n                    runOn: ActionRuntime[dataAction.runOn] || ActionRuntime.server,\n                    ...(dataAction.options && { options: dataAction.options })\n                });\n            } else {\n                trace.error(`Invalid dataAction [${dataAction.path}] at ${path.dirname(definitionPath)}`);\n                process.exit(1);\n            }\n        }\n    );\n\n    return Promise.resolve(moduleDataActions);\n};\n\n/**\n * validates the runAt attribute in data definition file\n * @param dataDefinitionProperty json object of data definition\n */\nconst validateRunAtAttribute = (dataDefinitionProperty: IDataDefinitionProperty) => {\n    if (!dataDefinitionProperty) {\n        return false;\n    }\n\n    if (dataDefinitionProperty.runAt) {\n        return (\n            dataDefinitionProperty.runAt &&\n            (dataDefinitionProperty.runAt.toString() === 'server' || dataDefinitionProperty.runAt.toString() === 'client')\n        );\n    }\n\n    return true;\n};\n\n/**\n * Utility method to extract module name from module definition path\n * @param moduleDefinitionPath path to module definition\n */\nconst getModuleName = (pathToDefinition: string) => {\n    return pathToDefinition ? path.basename(pathToDefinition, '.definition.json') : '';\n};\n\n/**\n * Checks if the given module definition is of type theme module\n * @param moduleDefinition module definition object\n */\nconst isThemeModule = (moduleDefinition: IModuleDefinition) => {\n    return moduleDefinition.$type === THEME_MODULE_TYPE;\n};\n\n/**\n * Checks if given module definition object has required properties\n * @param definition module definition object\n * @param definitionPath path to module definition\n */\nconst isValidDefinition = (definition: IModuleDefinition, definitionPath: string): boolean => {\n    if (!definition) {\n        trace.error(`Invalid module definition`);\n        return false;\n    }\n\n    if (!definition.name) {\n        trace.error(`Missing name properties in definition file:  [${definitionPath}]`);\n        return false;\n    }\n\n    if (isThemeModule(definition)) {\n        return true;\n    }\n\n    return true;\n};\n\n/**\n * Resolves the paths to various theme module artifacts like pages, segments, definition extensions, etc\n * @param themeDirectory path to the theme module directory\n * @param relativeGlobPattern glob pattern for the corresponding artifact\n */\nconst resolveThemeModuleArtifacts = async (themeDirectory: string, relativeGlobPattern: string) => {\n    const definitions = await safeGetAllFilesPath(`${themeDirectory}/${relativeGlobPattern}`);\n    return definitions.map(definitionPath => fixPath(path.relative(themeDirectory, definitionPath)));\n};\n\n/**\n * Gets dictionary of all data actions by reading the definition extension files\n * @param dataDefinitionPaths list of paths to data definition files\n */\nconst getAllDataActionsFromExtentionFiles = async (moduleDefinitionExtensions: string[]): Promise<IDictionary<IDefinitionRegistration>> => {\n    const moduleDefinition: IDictionary<IDefinitionRegistration> = {};\n    try {\n        await Promise.all(\n            moduleDefinitionExtensions.map(async (moduleDefinitionFilePath: string) => {\n                trace.info(`processing file: [${moduleDefinitionFilePath}]`);\n                const moduleName = path.basename(moduleDefinitionFilePath).split('.')[0];\n                const extendedModuleDefinition = await safeReadJson<IModuleDefinition>(moduleDefinitionFilePath, trace);\n                if (extendedModuleDefinition) {\n                    moduleDefinition[moduleName] = {\n                        definitionObj: extendedModuleDefinition,\n                        definitionPath: moduleDefinitionFilePath\n                    };\n                }\n            })\n        );\n    } catch (e) {\n        trace.error(`Could not prepare list of data actions from data definition files`);\n        trace.error(e);\n        process.exit(1);\n    }\n\n    return Promise.resolve(moduleDefinition);\n};\n\n/**\n * Gets dictionary of all data actions by reading the data definition files of all modules\n * @param dataDefinitionPaths list of paths to data definition files\n */\nconst getAllDataActions = async (dataDefinitionPaths: string[]): Promise<IDictionary<IDictionary<IDataAction>>> => {\n    const dataActions: IDictionary<IDictionary<IDataAction>> = {};\n    try {\n        await Promise.all(\n            dataDefinitionPaths.map(async (dataDefinitionFilePath: string) => {\n                trace.info(`processing file: [${dataDefinitionFilePath}]`);\n\n                const dataDefinition = await safeReadJson<IDataDefinition>(dataDefinitionFilePath, trace);\n\n                const moduleDataActions: IDictionary<IDataAction> = {};\n                if (dataDefinition && dataDefinition.properties) {\n                    Object.keys(dataDefinition.properties).map(propertyKey => {\n                        const dataDefinitionProperty = dataDefinition.properties[propertyKey];\n                        if (dataDefinitionProperty && typeof dataDefinitionProperty.dataAction === 'string') {\n                            if (validateRunAtAttribute(dataDefinitionProperty)) {\n                                moduleDataActions[`${propertyKey}`] = {\n                                    path: dataDefinitionProperty.dataAction.replace(/['\"]/gi, ''),\n                                    name: propertyKey,\n                                    isNodeDataAction: false,\n                                    runOn: dataDefinitionProperty.runAt\n                                };\n                            } else {\n                                trace.error(\n                                    `Invalid data action runtime @runAt: [${dataDefinitionProperty.runAt}] at ${dataDefinitionFilePath}`\n                                );\n                                process.exit(1);\n                            }\n                        }\n                    });\n\n                    if (moduleDataActions) {\n                        dataActions[`${dataDefinition.moduleName}`] = moduleDataActions;\n                    }\n                }\n            })\n        );\n    } catch (e) {\n        trace.error(`Could not prepare list of data actions from data definition files`);\n        trace.error(e);\n        process.exit(1);\n    }\n\n    return Promise.resolve(dataActions);\n};\n\n/**\n * Maps definition to registration object\n * @param definition  definition json object\n * @param definitionPath  path to definition file\n * @param parentDefinitionPath  path to parent definition file\n * @param dataActions  dictionary of data actions indexed against module name\n */\nconst mapModuleRegistrationFromDefinition = async (\n    packageName: string,\n    moduleNamespace: string,\n    definition: IModuleDefinition,\n    definitionPath: string,\n    parentDefinitionPath: string,\n    dataActions: IDictionary<IDictionary<IDataAction>>\n): Promise<IModuleRegistration | null> => {\n    if (!isValidDefinition(definition, definitionPath)) {\n        return null;\n    }\n\n    let forceRelativePathResolution = false;\n    let moduleViewRelativePath = definition.module ? definition.module.view : null;\n    if (!moduleViewRelativePath) {\n        const parentModuleName = parentDefinitionPath ? getModuleName(parentDefinitionPath) : null;\n        // Resolve parentview first (for $ref scenario) and fallback to current module in case of independent module\n        moduleViewRelativePath = parentModuleName || definition.name;\n        forceRelativePathResolution = true;\n    }\n\n    const moduleViewAbsolutePath = await resolvePathFromDefinition(\n        parentDefinitionPath,\n        moduleViewRelativePath,\n        path.dirname(definitionPath),\n        forceRelativePathResolution\n    );\n\n    if (!moduleViewAbsolutePath) {\n        trace.error(`Couldn't find view file for module ${definition.name}`);\n        return null;\n    }\n\n    const componentRelativePathResult = getModuleFileRelativePath({ moduleFileAbsolutePath: moduleViewAbsolutePath, moduleNamespace });\n    const themeModule = isThemeModule(definition);\n    const moduleDirectory = fixPath(path.relative(process.cwd(), path.dirname(definitionPath)));\n    const settings = themeModule ? await resolveThemeModuleArtifacts(moduleDirectory, '/*.settings.json') : null;\n    const pageLayouts = themeModule ? await resolveThemeModuleArtifacts(moduleDirectory, '**/*.page.json') : [];\n    const pages: IDictionary<string[]> = {};\n    const dataActionsFromFile = themeModule\n        ? await getThemeDataActions(moduleNamespace, dataActions, definitionPath, parentDefinitionPath, moduleDirectory)\n        : await getModuleDataActions(moduleNamespace, definition, dataActions, definitionPath, parentDefinitionPath);\n\n    pageLayouts.map(pageLayout => {\n        const layoutType =\n            path\n                .dirname(pageLayout)\n                .split('/')\n                .pop() || '';\n        pages[layoutType] = pages[layoutType] || [];\n        pages[layoutType].push(getRegistrationKey(pageLayout, THEME_MODULE.PAGE_FILE));\n    });\n\n    const definitionExtensions = themeModule\n        ? ((await resolveThemeModuleArtifacts(moduleDirectory, '**/*.definition.ext.json')) || []).map(ext =>\n              getRegistrationKey(ext, THEME_MODULE.DEF_EXT_FILE)\n          )\n        : [];\n\n    const segments = themeModule\n        ? ((await resolveThemeModuleArtifacts(moduleDirectory, '**/*.segment.json')) || []).map(ext =>\n              getRegistrationKey(ext, THEME_MODULE.SEGMENT_FILE)\n          )\n        : [];\n\n    return {\n        $type: definition.$type,\n        moduleNamespace,\n        packageName,\n        name: definition.name.toLowerCase(),\n        definitionPath: fixPath(path.relative(process.cwd(), definitionPath)),\n        parentDefinitionPath: parentDefinitionPath ? fixPath(path.relative(process.cwd(), parentDefinitionPath)) : '',\n        isNodeModule: componentRelativePathResult.isNodeModule,\n        path: componentRelativePathResult.fileRelativePath,\n        dataActions: dataActionsFromFile,\n        moduleDirectory,\n        definitionExtensions,\n        pages,\n        segments,\n        themeSettings: settings ? settings[0] : ''\n    };\n};\n\n/**\n * Method to check duplicate registrations\n * @param moduleRegistrations module registration map\n */\nexport const checkDuplicateRegistrations = (moduleRegistrations: IDictionary<IModuleRegistration>) => {\n    const registrationJson: IDictionary<IModuleRegistration> = {};\n    Object.keys(moduleRegistrations).forEach((key: string) => {\n        const existingRegistration = registrationJson[key];\n        if (!existingRegistration || (existingRegistration.isNodeModule && trace.info(`WARNING - Overwrite external module [${key}]`))) {\n            registrationJson[key] = moduleRegistrations[key];\n        } else {\n            trace.error(`module is already registered -> [${key}]`);\n        }\n    });\n\n    return registrationJson;\n};\n\n/**\n * Writes registration json files for both local/installed modules\n * @param moduleRegistrations dictionary of module registration objects\n * @param generateLocalModuleRegistration boolean to indicate if the registration is local or installed\n */\nconst writeRegistrationJson = async (\n    moduleRegistrations: IDictionary<IModuleRegistration>,\n    generateLocalModuleRegistration: boolean,\n    actionRegistrations: { path: string; aliasedPath: string }[]\n): Promise<boolean> => {\n    let registrationJson: IDictionary<IModuleRegistration> = {};\n    try {\n        registrationJson = checkDuplicateRegistrations(moduleRegistrations);\n        trace.debug(registrationJson);\n\n        const modulesRegistration: string[] = [];\n        const keys = Object.keys(registrationJson);\n\n        addRegistrationFunctionHeader(modulesRegistration);\n        addRegistrationFunctionBody(keys, registrationJson, modulesRegistration, actionRegistrations);\n        addRegistrationFunctionFooter(modulesRegistration);\n\n        await getModulesDAPIHelperSingleton().prepareModuleDefinitionsForDAPI(registrationJson);\n\n        return safeWriteJS(\n            `${getRegistrationOutputPath(MODULE.registrationFileName)}${generateLocalModuleRegistration ? '.local.js' : '.js'}`,\n            modulesRegistration\n        );\n    } catch (error) {\n        trace.error(error);\n    }\n\n    return Promise.resolve(false);\n};\n\n/**\n * Creates the resolved path used by webpack to import the file\n * @param dataActionAbsolutePath Absolute path to .action file\n */\nconst prepareActionDefinitionPath = (dataActionAbsolutePath: string) => {\n    const isHoisted = (dataActionAbsolutePath || '').indexOf(hoistedPath) === 0;\n    const isNodeDataAction = dataActionAbsolutePath.indexOf('node_modules') > -1;\n    const hoistedRelativePath = path.relative(path.resolve(process.cwd(), hoistedPath), dataActionAbsolutePath);\n    const fullyResolvedPath = (isHoisted\n        ? `hoisted/${hoistedRelativePath}`\n        : isNodeDataAction\n        ? path.relative(path.join(nodeModulePath), dataActionAbsolutePath)\n        : path.relative(path.join(process.cwd(), 'src'), dataActionAbsolutePath)\n    )\n        .split('.')\n        .slice(0, -1)\n        .join('.');\n    const aliasedPath = path.join(!isNodeDataAction && !isHoisted ? 'partner' : '', fullyResolvedPath);\n    return { path: fullyResolvedPath, aliasedPath };\n};\n\nconst validateSelectedConnectors = (connectorDefinition: IConnectorDefiition, connectorSettings: IConnectorSettings) => {\n    if (connectorSettings.experimentation?.config && connectorDefinition.name === connectorSettings.experimentation?.name) {\n        if (connectorDefinition.configSchema && Object.keys(connectorDefinition.configSchema).length !== 0) {\n            const validateResult = validate(connectorSettings.experimentation.config, connectorDefinition.configSchema);\n\n            if (validateResult.errors.length > 0) {\n                trace.error(\n                    `Config provided for ${connectorDefinition.name} in connector settings does not validate with connector schema. Terminating build.`\n                );\n                trace.error(`Error: ${validateResult.errors}`);\n                process.exit(1);\n            }\n        } else {\n            trace.warn(`Empty or no config schema provided for ${connectorDefinition.name}. Skipping JSON schema validation`);\n        }\n    }\n};\n\n/**\n * Resolves the path to the connector implementation based of the location of the connector definition file\n */\nconst prepareConnectorDefinitionPath = async (\n    connectorDefinitionAbsolutePath: string,\n    connectorSettings: IConnectorSettings | undefined\n): Promise<IConnectorInfo> => {\n    const connectorDefinition = await safeReadJson<IConnectorDefiition>(connectorDefinitionAbsolutePath);\n    if (!connectorDefinition) {\n        throw new Error(`Connector definition at ${connectorDefinitionAbsolutePath} is missing name`);\n    }\n    // If name matches selected connector in connector settings validate its config against connector config schema\n    if (connectorSettings && connectorSettings.experimentation) {\n        validateSelectedConnectors(connectorDefinition, connectorSettings);\n    }\n    const isHoisted = (connectorDefinitionAbsolutePath || '').indexOf(hoistedPath) === 0;\n    const isNodeDataAction = connectorDefinitionAbsolutePath.indexOf('node_modules') > -1;\n    const hoistedRelativePath = path.relative(path.resolve(process.cwd(), hoistedPath), connectorDefinitionAbsolutePath);\n    const fullyResolvedPath = (isHoisted\n        ? `hoisted/${hoistedRelativePath}`\n        : isNodeDataAction\n        ? path.relative(path.join(nodeModulePath), connectorDefinitionAbsolutePath)\n        : path.relative(path.join(process.cwd(), 'src'), connectorDefinitionAbsolutePath)\n    ).replace('.connector.json', '');\n    // If the connector type is experimentation it must provide a .provider file\n    if (connectorDefinition.$type === 'experimentationConnector') {\n        const aliasedPath = path.join(!isNodeDataAction && !isHoisted ? 'partner' : '', `${fullyResolvedPath}`);\n        return {\n            name: connectorDefinition.name,\n            aliasedPaths: { provider: `${aliasedPath}.provider`, listener: `${aliasedPath}.listener` },\n            type: connectorDefinition.$type\n        };\n    } else {\n        throw new Error(`Unsupported connector type: ${connectorDefinition.$type} for connector ${connectorDefinition.name}`);\n    }\n};\n\n/**\n * Gets module details (packageName and module name space)\n * Local modules are defaulted to __local__ packagename and namespace\n * @param filePath path to the file\n */\nconst getModuleDetails = (filePath: string) => {\n    let moduleNamespace = localNamespace;\n    let packageName = localNamespace;\n    let isHoisted = false;\n\n    for (let i = 0; i < MODULE_DETAILS_REGEX.length; ++i) {\n        const matchResult = filePath.match(MODULE_DETAILS_REGEX[i]);\n        if (matchResult !== null && matchResult.groups && matchResult.groups.namespace && matchResult.groups.packageName) {\n            moduleNamespace = matchResult.groups.namespace;\n            packageName = matchResult.groups.packageName;\n            isHoisted = (filePath || '').indexOf(hoistedPath) === 0;\n\n            return {\n                moduleNamespace,\n                packageName,\n                isHoisted\n            };\n        }\n    }\n\n    return {\n        moduleNamespace,\n        packageName,\n        isHoisted\n    };\n};\n\n/**\n * Checks for duplicate module and warn if finds a duplicate module\n * @param definitionName name of the module definition\n * @param definitionFilePath path to the definition file path\n * @param isLocalModule indicates if local module\n */\nconst validateAndWarnIfDuplicateModule = (definitionName: string, definitionFilePath: string, isLocalModule: boolean) => {\n    if (isPartnerApp()) {\n        if (registeredModules[definitionName]) {\n            trace.warn(`Encountered duplicate module ${definitionName}. At ${definitionFilePath}`);\n            trace.warn(\n                `${isLocalModule ? 'Local' : 'Installed'} module ${definitionName} clashes with ${\n                    registeredModules[definitionName] ? 'local' : 'installed'\n                } module ${definitionName}`\n            );\n            trace.warn(DUPLICATE_MODULE_REGISTRAION_ERROR(definitionName));\n        } else {\n            registeredModules[definitionName] = isLocalModule;\n        }\n    }\n};\n\n/**\n * sorts the module registration object\n * @param moduleregistrations map of module registrations\n */\nconst sortRegistrationObject = (moduleregistrations: IDictionary<IModuleRegistration>) => {\n    const sortedRegistrationObject: IDictionary<IModuleRegistration> = {};\n    Object.keys(moduleregistrations)\n        .sort()\n        .forEach((moduleName: string) => {\n            sortedRegistrationObject[moduleName] = moduleregistrations[moduleName];\n        });\n\n    return sortedRegistrationObject;\n};\n\n/* generate view registration from allview.tsx in @msdyn365-commerce-module packages\n * @param isLocal indicates if the registration is for local or installed modules\n */\nexport const generateViewRegistration = async () => {\n    /* View will be read in following hierarchy\n        -------No context---------\n        1) __local__/views/product-tile.view.tsx\n        2) __local__/views/theme1/product-tile.view.ts\n        3) __local__/modules/product-tile/product-tile.view.ts\n        4) @msdyn-365-commerce-modules/theme1/views/product-tile.view.ts\n        5) @msdyn-365-commerce-modules/product-tile/modules/product-tile/product-tile.view.ts\n\n        ------ With context------------------\n        1) __local__/views/product-collection/product-tile.view.ts\n        2) __local__/views/theme1/product-collection/product-tile.view.ts\n        3) @msdyn-365-commerce-modules/theme1/views/product-collection/product-tile.view.ts\n        4) @msdyn-365-commerce-modules/product-collection/views/product-tile.view.ts\n    */\n    const viewPromises = [\n        safeGetAllFilesPath(VIEW.fromLocalModule),\n        safeGetAllFilesPath(VIEW.fromInstalledModule),\n        safeGetAllFilesPath(VIEW.fromHoistedModule, { follow: false })\n    ].filter(Boolean);\n\n    const viewFilePaths = await Promise.all(viewPromises).then(result =>\n        result[0]\n            .concat(result[1])\n            .concat(result[2])\n            .filter(Boolean)\n    );\n    if (viewFilePaths.length === 0) {\n        trace.info('No view found');\n        return;\n    }\n\n    const jsToWrite = [\n        `/**\n* Copyright (c) 2018 Microsoft Corporation\n* Modules Registration\n* THIS FILE IS AUTO-GENERATED - MANUAL MODIFICATIONS WILL BE LOST\n*/\n\nconst universal = require('react-universal-component').default;\n\nexport const viewDictionary = {};\n`\n    ];\n\n    for (let i = 0; i < viewFilePaths.length; i++) {\n        const viewFilePath = viewFilePaths[i];\n        const { moduleNamespace, packageName, isHoisted } = getModuleDetails(viewFilePath);\n        const viewPathForKey = path.join(path.dirname(viewFilePath), path.basename(viewFilePath, `.view${path.extname(viewFilePath)}`));\n        const viewRegistrationKey =\n            moduleNamespace === localNamespace\n                ? `${localNamespace}|${localNamespace}|${fixPath(path.relative(path.join(process.cwd(), 'src'), viewPathForKey), '|')}`\n                : `${moduleNamespace}|${packageName}|${fixPath(\n                      path.relative(\n                          path.join(\n                              isHoisted ? resolvedHoistedPath : process.cwd(),\n                              'node_modules',\n                              moduleNamespace,\n                              packageName,\n                              'dist',\n                              'lib'\n                          ),\n                          viewPathForKey\n                      ),\n                      '|'\n                  )}`;\n\n        const alias = moduleNamespace === localNamespace ? 'partner/' : `${isHoisted ? 'hoisted/' : ''}`;\n\n        const componentRelativePath = fixPath(\n            moduleNamespace === localNamespace\n                ? path.relative(path.join(process.cwd(), 'src'), viewFilePath)\n                : path.relative(path.join(isHoisted ? resolvedHoistedPath : process.cwd(), 'node_modules'), viewFilePath)\n        );\n\n        const chunkNames = `${alias}${componentRelativePath}`.replace(/[\\\\/]/g, '-');\n\n        const component = `viewDictionary['${viewRegistrationKey}'] = {\ncomponent: universal(\n   () => import(/* webpackInclude: /\\.(t|j)sx?$/ */ ${process.env.NODE_ENV === 'development' ? '\\n/* webpackMode: \"eager\" */' : ''}\n         /* webpackExclude: /\\.data\\.|\\.autogenerated\\.|\\.test\\.|\\.field\\.|\\.data-model\\./ */\n         '${alias}${componentRelativePath}'),\n         {\n            chunkName: () => '${chunkNames}',\n            ignoreBabelRename: true\n         }\n    )};`;\n\n        jsToWrite.push(component);\n    }\n\n    await safeWriteJS(`${getRegistrationOutputPath('view-registration')}.js`, jsToWrite);\n};\n\n/**\n * generate connector registration\n */\n// tslint:disable-next-line:max-func-body-length\nexport const generateConnectorRegistration = async (connectorsConfig: IConnectorSettings | undefined) => {\n    const promises = [\n        safeGetAllFilesPath(CONNECTOR.fromLocalModule),\n        safeGetAllFilesPath(CONNECTOR.fromInstalledModule),\n        safeGetAllFilesPath(CONNECTOR.fromHoistedModule, { follow: false })\n    ].filter(Boolean);\n\n    const connectorFilePaths = await Promise.all(promises).then(result =>\n        result[0]\n            .concat(result[1])\n            .concat(result[2])\n            .filter(Boolean)\n    );\n    if (connectorFilePaths.length === 0) {\n        trace.info('No connectors found');\n    }\n\n    if (!connectorsConfig) {\n        trace.info('Connector settings file missing');\n    }\n\n    const jsToWrite = [\n        `/**\n* Copyright (c) 2018 Microsoft Corporation\n* Modules Registration\n* THIS FILE IS AUTO-GENERATED - MANUAL MODIFICATIONS WILL BE LOST\n*/\nconst { log, error }  = console;\nconst detailedWebpackError = (msg, errorObject) => { error(msg); error(errorObject); process.env.NODE_ENV !== 'development' && error('Run in dev mode to see full list of errors'); process.exit(50); }\nconst handleError = (modPath, errObject) => {\n    detailedWebpackError('Error with path: ' + modPath, errObject);\n}\n\nconst handleMissingImplementationDetails = (functionName, connectorName, connectorType) => {\n    error('----ERROR: CONNECTOR MISSING IMPLEMENTATION DETAILS-----');\n    error('Missing function ' + functionName + ' from ' + connectorType + ' implementation for experimentation connector ' + connectorName);\n    throw new Error('Connector missing implementation details');\n}\n\nconst verifyExperimentationReigstration = (connectorName) => {\n    const connectorImpl = connectorDictionary[connectorName].provider;\n    const connectorListenerImpl = connectorDictionary[connectorName].listener;\n    try {\n        if (!connectorImpl.__proto__.initialize) {\n            handleMissingImplementationDetails('initialize', connectorName, 'provider');\n        }\n        if (!connectorImpl.__proto__.getConfigForClientSideInit) {\n            handleMissingImplementationDetails('getConfigForClientSideInit', connectorName, 'provider');\n        }\n        if (!connectorImpl.__proto__.initializeClientSide) {\n            handleMissingImplementationDetails('initializeClientSide', connectorName, 'provider');\n        }\n        if (!connectorImpl.__proto__.getExperiments) {\n            handleMissingImplementationDetails('getExperiments', connectorName, 'provider');\n        }\n        if (!connectorImpl.__proto__.getVariantsForUser) {\n            handleMissingImplementationDetails('getVariantsForUser', connectorName, 'provider');\n        }\n        if (!connectorImpl.__proto__.activateExperiment) {\n            handleMissingImplementationDetails('activateExperiment', connectorName, 'provider');\n        }\n        if (!connectorListenerImpl.__proto__.initializeClientSide) {\n            handleMissingImplementationDetails('initializeClientSide', connectorName, 'listener');\n        }\n        if (!connectorListenerImpl.__proto__.logEvent) {\n            handleMissingImplementationDetails('logEvent', connectorName, 'listener');\n        }\n    } catch (e) {\n        // Connector has not implemented all the required methods, setting registration as undefined\n        connectorDictionary[connectorName] = undefined;\n        throw e;\n    }\n}\n\nexport const connectorDictionary = {};\n`\n    ];\n    const connectors = [];\n    for (let i = 0; i < connectorFilePaths.length; i++) {\n        const connectorFilePath = connectorFilePaths[i];\n        const connectorRegistrationDetails = await prepareConnectorDefinitionPath(connectorFilePath, connectorsConfig);\n        connectors.push(connectorRegistrationDetails);\n    }\n    sortConnectors(connectors);\n\n    jsToWrite.push(\n        ...connectors.map(connector => {\n            return prepareConnectorRegistration(connector);\n        })\n    );\n\n    const connectorValidateCode = await generateConnectorValidateMethods(connectors, connectorsConfig);\n    jsToWrite.push(\n        `\nexport const validateConnectorRegistration = () => {\n    ${connectorValidateCode}\n};`\n    );\n\n    await safeWriteJS(`${getRegistrationOutputPath('connector-registration')}.js`, jsToWrite);\n};\n\n/* generate view registration from allview.tsx in @msdyn365-commerce-module packages\n * @param isLocal indicates if the registration is for local or installed modules\n */\nexport const generateComponentRegistration = async () => {\n    /* component will be read in following hierarchy\n        1) __local__/views/Components/PriceComponent\n        2) __local__/views/BuyBox/Components/PriceComponent\n        3) __local__/views/theme1/Components/PriceComponent\n        4) __local__/views/theme1/BuyBox/Components/PriceComponent\n        4) @msdyn-365-commerce-modules/theme1/views/Components/PriceComponent\n        5) @msdyn-365-commerce-modules/theme1/views/BuyBox/Components/PriceComponent\n        6) @msdyn-365-commerce-modules/BuyBox/views/BuyBox/Components/PriceComponent\n    */\n    const promises = [\n        safeGetAllFilesPath(COMPONENT.fromLocalModule),\n        safeGetAllFilesPath(COMPONENT.fromInstalledModule),\n        safeGetAllFilesPath(COMPONENT.fromHoistedModule, { follow: false })\n    ].filter(Boolean);\n\n    const componentFilePaths = await Promise.all(promises).then(result =>\n        result[0]\n            .concat(result[1])\n            .concat(result[2])\n            .concat(result[3])\n            .concat(result[4])\n            .filter(Boolean)\n    );\n    if (componentFilePaths.length === 0) {\n        trace.info('No view found');\n        return;\n    }\n\n    const jsToWrite = [\n        `/**\n* Copyright (c) 2018 Microsoft Corporation\n* Modules Registration\n* THIS FILE IS AUTO-GENERATED - MANUAL MODIFICATIONS WILL BE LOST\n*/\n\nconst universal = require('react-universal-component').default;\nexport const componentDictionary = {};\n`\n    ];\n\n    for (let i = 0; i < componentFilePaths.length; i++) {\n        const componentFilePath = componentFilePaths[i];\n        const { moduleNamespace, packageName, isHoisted } = getModuleDetails(componentFilePath);\n        const componentPathForKey = path.join(\n            path.dirname(componentFilePath),\n            path.basename(path.basename(componentFilePath, '.component.js'), '.component.tsx')\n        );\n        const componentRegistrationKey =\n            moduleNamespace === localNamespace\n                ? `${localNamespace}|${localNamespace}|${fixPath(path.relative(path.join(process.cwd(), 'src'), componentPathForKey), '|')}`\n                : `${moduleNamespace}|${packageName}|${fixPath(\n                      path.relative(\n                          path.join(\n                              isHoisted ? resolvedHoistedPath : process.cwd(),\n                              'node_modules',\n                              moduleNamespace,\n                              packageName,\n                              'dist',\n                              'lib'\n                          ),\n                          componentPathForKey\n                      ),\n                      '|'\n                  )}`;\n\n        const alias = moduleNamespace === localNamespace ? 'partner/' : `${isHoisted ? 'hoisted/' : ''}`;\n\n        const componentRelativePath = fixPath(\n            moduleNamespace === localNamespace\n                ? path.relative(path.join(process.cwd(), 'src'), componentFilePath)\n                : path.relative(path.join(isHoisted ? resolvedHoistedPath : process.cwd(), 'node_modules'), componentFilePath)\n        );\n\n        const chunkNames = `${alias}${componentRelativePath}`.replace(/[\\\\/]/g, '-');\n        const component = `componentDictionary['${componentRegistrationKey}'] = {\ncomponent: universal(\n   () => import(/* webpackInclude: /\\.(t|j)sx?$/ */ ${process.env.NODE_ENV === 'development' ? '\\n/* webpackMode: \"eager\" */' : ''}\n         /* webpackExclude: /\\.data\\.|\\.autogenerated\\.|\\.test\\.|\\.field\\.|\\.data-model\\./ */\n         '${alias}${componentRelativePath}'),\n         {\n            chunkName: () => '${chunkNames}',\n            ignoreBabelRename: true\n         }\n    )};`;\n\n        jsToWrite.push(component);\n    }\n\n    await safeWriteJS(`${getRegistrationOutputPath('component-registration')}.js`, jsToWrite);\n};\n/**\n * generate module registration from all module definition in @msdyn365-commerce-module packages\n * @param isLocal indicates if the registration is for local or installed modules\n */\n// tslint:disable-next-line:max-func-body-length\nexport const generateModuleRegistration = async (isLocal: boolean) => {\n    let promises = <Promise<string[]>[]>(\n        [\n            safeGetAllFilesPath(msdyn365ModuleDefinitionGlobPattern(isLocal)),\n            !isLocal && safeGetAllFilesPath(DEFINITION.fromHoistedModule, { follow: false })\n        ].filter(Boolean)\n    );\n    const definitionFilePaths = await Promise.all(promises).then(result => result[0].concat(result[1]).filter(Boolean));\n    if (definitionFilePaths.length === 0) {\n        trace.info(`No module found at '${msdyn365ModuleDefinitionGlobPattern}'`);\n    }\n    promises = <Promise<string[]>[]>[\n        safeGetAllFilesPath(msdyn365ModuleDataDefinitionGlobPattern(isLocal)),\n        !isLocal && safeGetAllFilesPath(DATADEFINITION.fromHoistedModule, { follow: false })\n    ];\n    const dataDefinitionPaths = await Promise.all(promises).then(result => result[0].concat(result[1]).filter(Boolean));\n    if (dataDefinitionPaths.length === 0) {\n        trace.info(`No data definition files found at ${msdyn365ModuleDataDefinitionGlobPattern}`);\n    }\n\n    promises = <Promise<string[]>[]>[\n        safeGetAllFilesPath(msdyn365ActionDefinitionGlobPattern(isLocal)),\n        !isLocal && safeGetAllFilesPath(ACTION.fromHoistedModule, { follow: false })\n    ];\n    const actionDefinitionPaths = await Promise.all(promises).then(result =>\n        result[0]\n            .concat(result[1])\n            .filter(Boolean)\n            .map(prepareActionDefinitionPath)\n    );\n\n    const dataActions: IDictionary<IDictionary<IDataAction>> = await getAllDataActions(dataDefinitionPaths);\n\n    try {\n        const moduleRegistrations: IDictionary<IModuleRegistration> = {};\n        await Promise.all(\n            definitionFilePaths.map(async (definitionFilePath: string) => {\n                trace.info(`processing def file: [${definitionFilePath}]`);\n\n                const definition = await safeReadJson<IModuleDefinition>(definitionFilePath, trace);\n                const { moduleNamespace, packageName } = getModuleDetails(definitionFilePath);\n\n                try {\n                    if (definition) {\n                        const referencedOutput = await resolveRef(definition, definitionFilePath, trace);\n                        let parentDefinitionPath = null;\n\n                        // Resolve view from parent definition if there is no view override in current definition file\n                        if (definition.$ref) {\n                            parentDefinitionPath = definition.$ref;\n                            // resolve parent definition path with respect to current module definition or node_modules\n                            parentDefinitionPath = resolveParentDefinitionPath(parentDefinitionPath, path.dirname(definitionFilePath));\n                        }\n\n                        const moduleDefinition = <IModuleDefinition>referencedOutput;\n                        if (moduleDefinition && moduleDefinition.name) {\n                            moduleDefinition.name = moduleDefinition.name.toLowerCase();\n                            switch (moduleDefinition.$type) {\n                                case 'definitionExtension':\n                                    // skip registration of definition overrides\n                                    break;\n                                default:\n                                    validateAndWarnIfDuplicateModule(definition.name, definitionFilePath, isLocal);\n                                    const moduleRegObj = await mapModuleRegistrationFromDefinition(\n                                        packageName,\n                                        moduleNamespace,\n                                        moduleDefinition,\n                                        definitionFilePath,\n                                        parentDefinitionPath || '',\n                                        dataActions\n                                    );\n\n                                    if (moduleRegObj) {\n                                        moduleRegistrations[moduleDefinition.name] = moduleRegObj;\n                                    }\n                            }\n                        }\n                    }\n                } catch (e) {\n                    trace.error(e);\n                    trace.error(`error in processing file [${definitionFilePath}]`);\n                    return Promise.resolve();\n                }\n            })\n        );\n\n        return Promise.all([await writeRegistrationJson(sortRegistrationObject(moduleRegistrations), isLocal, actionDefinitionPaths)]);\n    } catch (e) {\n        trace.error(e);\n        process.exit(1);\n    }\n\n    return Promise.resolve();\n};\n\n// tslint:disable-next-line:no-any\nexport const buildModuleRegistration = (isLocal: boolean): Promise<any> => {\n    const timerName = `generateModuleRegistration${isLocal ? '-local' : ''}`;\n    trace.startTimer(timerName);\n    return generateModuleRegistration(isLocal)\n        .catch((err: Error) => {\n            trace.error(err);\n        })\n        .then(() => trace.stopTimer(timerName, 'Module registration generation completed'));\n};\n"]}