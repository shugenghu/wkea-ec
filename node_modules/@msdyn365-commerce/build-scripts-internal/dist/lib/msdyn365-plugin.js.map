{"version":3,"file":"msdyn365-plugin.js","sourceRoot":"","sources":["../../src/msdyn365-plugin.ts"],"names":[],"mappings":"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","sourcesContent":["/*!\n * Copyright (c) Microsoft Corporation.\n * All rights reserved. See LICENSE in the project root for license information.\n */\n\n// tslint:disable:no-any no-unnecessary-bind\nimport { safeReadJsonSync, trace } from '@msdyn365-commerce/utilities-internal';\nimport * as path from 'path';\nimport { IRegisterThemesOptions } from './models';\nimport { getModulesDAPIHelperSingleton } from './module-registration/module-dapi-helper';\nimport {\n    buildModuleRegistration,\n    generateComponentRegistration,\n    generateConnectorRegistration,\n    generateViewRegistration\n} from './module-registration/module-registration';\nimport { ResourceManagerDAPIHelper } from './module-registration/resources-dapi-helper';\nimport taskRunner from './task-runner';\n\nexport interface IConnectorSettings {\n    experimentation?: IConnector;\n}\n\nexport interface IConnector {\n    name: string;\n    config: any;\n}\n\n/**\n * Build Script Webpack plugin\n */\nclass MSDyn365BuildScriptPlugin {\n    private startTime: number;\n    private prevTimestamps: Map<string, number>;\n    private firstRun: boolean;\n\n    constructor() {\n        this.startTime = Date.now();\n        this.prevTimestamps = new Map();\n        this.firstRun = true;\n    }\n    public apply(compiler: any): void {\n        // web always runs first\n        if (compiler.options.target === 'node') {\n            trace.debug(`Skipping MSDyn365 webpack plugin with target = ${compiler.options.target}`);\n            return;\n        }\n        trace.info(`Setting up msdyn365 plugin hooks`);\n        const isDebug = process.env.NODE_ENV === 'development';\n\n        // in dev mode when we run the watcher, we hook our plugin into the `watchRun` lifecycle hook\n        // and if doing a production build we hook into the `beforeCompile` step\n        const lifecycleHook = isDebug ? 'watchRun' : 'beforeCompile';\n        compiler.hooks[lifecycleHook].tapPromise('MSDyn365BuildScriptAsyncPlugin', async (compilation: any) => {\n            // Do something async...\n            trace.info(`Starting buildModuleRegistration in MSDyn365BuildScriptPlugin`);\n\n            const changedFiles = !isDebug\n                ? []\n                : Array.from<string>(compilation.fileTimestamps.keys()).filter(\n                      (watchedFileKey: string): Boolean => {\n                          return (\n                              (this.prevTimestamps.get(watchedFileKey) || this.startTime) <\n                              (compilation.fileTimestamps.get(watchedFileKey) || Infinity)\n                          );\n                      }\n                  );\n            const anyScssFilesChanged = changedFiles.filter(fileName => fileName.toLowerCase().endsWith('.scss')).length > 0;\n            const registerThemesOptions: IRegisterThemesOptions = {\n                buildLocalThemes: this.firstRun || anyScssFilesChanged,\n                buildNodeThemes: this.firstRun\n            };\n\n            this.prevTimestamps = compilation.fileTimestamps;\n            // tasks to actually run\n\n            const connectorSettings = safeReadJsonSync(path.resolve(process.cwd(), 'src', 'settings', 'connector.settings.json'));\n            const taskPromises = [\n                // module registration should only occur on first run\n                this.firstRun && (await buildModuleRegistration(false)),\n                // register parter/local modules\n                this.firstRun && (await buildModuleRegistration(true)),\n                this.firstRun && generateViewRegistration(),\n                this.firstRun && generateComponentRegistration(),\n                this.firstRun && generateConnectorRegistration(connectorSettings),\n                taskRunner({\n                    buildSiteCss: {\n                        shouldExecute: this.firstRun || anyScssFilesChanged\n                    },\n                    registerThemes: {\n                        shouldExecute: true,\n                        options: registerThemesOptions\n                    }\n                })\n            ].filter(Boolean);\n\n            const dapiHelper = getModulesDAPIHelperSingleton();\n            const resourcesHelper = new ResourceManagerDAPIHelper();\n\n            try {\n                await Promise.all(taskPromises);\n                this.firstRun && (await dapiHelper.generateModuleDefinitionDAPI());\n                this.firstRun && (await dapiHelper.generateThemesDAPI());\n                this.firstRun && (await resourcesHelper.generateResourcesDAPI());\n                this.firstRun = false;\n\n                trace.info(`Completed buildModuleRegistration in MSDyn365BuildScriptPlugin`);\n            } catch (err) {\n                trace.error(`Failed to compile in buildModuleRegistration in MSDyn365BuildScriptPlugin`);\n                trace.error(err);\n                throw err;\n            }\n        });\n    }\n}\nexport { MSDyn365BuildScriptPlugin };\nexport default MSDyn365BuildScriptPlugin;\n"]}