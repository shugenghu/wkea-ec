{"version":3,"file":"lint-package.js","sourceRoot":"","sources":["../../src/lint-package.ts"],"names":[],"mappings":";;;;AAEA;;;GAGG;AACH,+CAAyC;AACzC,mDAA+B;AAC/B,iDAA6B;AAE7B,IAAM,oBAAoB,GAAG,OAAO,CAAC,GAAG,EAAE,CAAC;AAC3C,IAAM,YAAY,GAAG,IAAI,CAAC,OAAO,CAAC,SAAS,EAAE,aAAa,EAAE,6BAA6B,CAAC,CAAC;AAC3F,IAAM,cAAc,GAAG,IAAI,CAAC,OAAO,CAAC,SAAS,EAAE,aAAa,EAAE,2BAA2B,CAAC,CAAC;AAC3F,IAAM,UAAU,GAAG,IAAI,CAAC,OAAO,CAAC,oBAAoB,EAAE,gCAAgC,CAAC,CAAC;AAExF,SAAS,WAAW;IAChB,EAAE,CAAC,YAAY,CAAC,YAAY,EAAE,IAAI,CAAC,OAAO,CAAC,oBAAoB,EAAE,eAAe,CAAC,CAAC,CAAC;IACnF,IAAI;QACA,IAAI,OAAO,CAAC,IAAI,CAAC,CAAC,CAAC,KAAK,OAAO,EAAE;YAC7B,wBAAQ,CACJ,QAAM,oBAAoB,iBAAY,UAAU,qDAAgD,cAAc,4BAAyB,EACvI,EAAE,KAAK,EAAE,SAAS,EAAE,CACvB,CAAC;SACL;aAAM;YACH,wBAAQ,CAAC,QAAM,oBAAoB,iBAAY,UAAU,qDAAgD,cAAgB,EAAE;gBACvH,KAAK,EAAE,SAAS;aACnB,CAAC,CAAC;SACN;KACJ;IAAC,OAAO,GAAG,EAAE;QACV,oHAAoH;KACvH;YAAS;QACN,EAAE,CAAC,UAAU,CAAC,IAAI,CAAC,OAAO,CAAC,oBAAoB,EAAE,eAAe,CAAC,CAAC,CAAC;KACtE;AACL,CAAC;AAED,WAAW,EAAE,CAAC","sourcesContent":["#! /usr/bin/env node\n\n/*!\n * Copyright (c) Microsoft Corporation.\n * All rights reserved. See LICENSE in the project root for license information.\n */\nimport { execSync } from 'child_process';\nimport * as fs from 'fs-extra';\nimport * as path from 'path';\n\nconst packageRootDirectory = process.cwd();\nconst tsConfigPath = path.resolve(__dirname, '../tsconfig', 'build-package-tsconfig.json');\nconst tsLintFilePath = path.resolve(__dirname, '../tsconfig', 'build-package-tslint.json');\nconst tsLintPath = path.resolve(packageRootDirectory, 'node_modules/tslint/bin/tslint');\n\nfunction lintPackage(): void {\n    fs.copyFileSync(tsConfigPath, path.resolve(packageRootDirectory, 'tsconfig.json'));\n    try {\n        if (process.argv[3] === '--fix') {\n            execSync(\n                `cd ${packageRootDirectory} && node ${tsLintPath} src/**/*.{ts,tsx} -p tsconfig.json --config ${tsLintFilePath} --fix --format stylish`,\n                { stdio: 'inherit' }\n            );\n        } else {\n            execSync(`cd ${packageRootDirectory} && node ${tsLintPath} src/**/*.{ts,tsx} -p tsconfig.json --config ${tsLintFilePath}`, {\n                stdio: 'inherit'\n            });\n        }\n    } catch (err) {\n        // Since the tslint errors are captured and printed to stdout, no need to capture the stack trace for simple linting\n    } finally {\n        fs.removeSync(path.resolve(packageRootDirectory, 'tsconfig.json'));\n    }\n}\n\nlintPackage();\n"]}