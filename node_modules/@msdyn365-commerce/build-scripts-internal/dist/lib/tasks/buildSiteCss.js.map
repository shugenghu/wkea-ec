{"version":3,"file":"buildSiteCss.js","sourceRoot":"","sources":["../../../src/tasks/buildSiteCss.ts"],"names":[],"mappings":"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","sourcesContent":["/*!\n * Copyright (c) Microsoft Corporation.\n * All rights reserved. See LICENSE in the project root for license information.\n */\n\nimport { render } from '@msdyn365-commerce/theming-internal';\nimport { safeGetAllFilesPath, safeWriteFile, trace } from '@msdyn365-commerce/utilities-internal';\nimport { flattenDeep } from 'lodash';\nimport { Result } from 'node-sass';\nimport * as path from 'path';\nimport { GreatSuccess, IResult, NoSuccess } from '../models/IResult';\n/**\n * Current directory\n * @internal\n */\nexport const currentDir = path.resolve('.');\n\nexport const siteStyleEntryFolder = path.join(currentDir, 'src', 'styles');\n\nexport const pageStyleEntries = path.join(siteStyleEntryFolder, '*.style.scss');\n\nexport const outFolder = path.join(currentDir, 'build', 'public', 'static', 'css');\n\nexport const createSassResult = async (pathToEntryPoint: string, isDebug: boolean) => {\n    const outFile = path.join(\n        outFolder,\n        `${path.basename(path.basename(pathToEntryPoint, '.scss'), '.style')}${isDebug ? '' : '.min'}.css`\n    );\n    return {\n        outFile,\n        result: await render({\n            file: pathToEntryPoint,\n            includePaths: [path.dirname(pathToEntryPoint)],\n            sourceComments: isDebug,\n            sourceMap: !isDebug,\n            sourceMapContents: true,\n            outputStyle: isDebug ? 'expanded' : 'compressed',\n            outFile,\n            // embed sourcemaps\n            sourceMapEmbed: !isDebug\n        })\n    };\n};\n\n/**\n * Creates two build targets - one for .min.css (dev) and one for .css (debug)\n * @param pathToEntryPoint entry point for a file\n */\nexport const buildSassResults = async (pathToEntryPoint: string) => {\n    const entryPointName = path.basename(pathToEntryPoint);\n    trace.info(`[${entryPointName}] Compiling targets for entry point.`);\n    return Promise.all([true, false].map((isDebug: boolean) => createSassResult(pathToEntryPoint, isDebug)));\n};\n\n/**\n * Writes the result to a file and sourcemap if it exists\n * @param sassResult the output form node-sas\n */\nexport const writeSassResultToFile = async (sassResult: { outFile: string; result: Result }) => {\n    const entryPointName = path.basename(sassResult.outFile, '.style.scss');\n    trace.info(`[${entryPointName}] Attempting to write file.`);\n    return (\n        Promise.all(\n            [\n                safeWriteFile(sassResult.outFile, sassResult.result.css),\n                sassResult.result.map && safeWriteFile(`${sassResult.outFile}.map`, sassResult.result.map)\n            ].filter(Boolean)\n        )\n            .then(() => {\n                trace.info(`[${entryPointName}] File written successfully.`);\n                return GreatSuccess;\n            })\n            // tslint:disable-next-line:no-any\n            .catch((err: any) => {\n                trace.error(`[${entryPointName}] Error writing ${sassResult.outFile}`);\n                trace.error(err);\n                return NoSuccess;\n            })\n    );\n};\n\n/**\n * This task build all site level css\n * /styles\n *      /{name1}.style.scss     <------------ {name1} is an entry point for site with name {name1}\n *      /{name2}.style.scss     <------------ {name2} is an entry point for site with name {name2}\n */\nexport default async () => {\n    try {\n        // get entry points for generated styles\n        const entryPoints = await safeGetAllFilesPath(pageStyleEntries);\n\n        // build each entry point\n        return flattenDeep<IResult>(\n            await Promise.all(\n                entryPoints.map(async (pathToEntryPoint: string) => {\n                    const sassResults = await buildSassResults(pathToEntryPoint);\n                    return Promise.all(sassResults.map(writeSassResultToFile));\n                })\n            )\n        ).reduce(\n            (previousValue: IResult, currentValue: IResult) => {\n                return { success: previousValue.success && currentValue.success };\n            },\n            { success: true }\n        );\n    } catch (e) {\n        trace.error(`Error in buildSiteCss task`);\n        trace.error(e);\n        return NoSuccess;\n    }\n};\n"]}