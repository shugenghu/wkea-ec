#! /usr/bin/env node
"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
var tslib_1 = require("tslib");
/*!
 * Copyright (c) Microsoft Corporation.
 * All rights reserved. See LICENSE in the project root for license information.
 */
var child_process_1 = require("child_process");
var fs = tslib_1.__importStar(require("fs-extra"));
var path = tslib_1.__importStar(require("path"));
var packageRootDirectory = process.cwd();
var tsConfigPath = path.resolve(__dirname, '../tsconfig', 'build-package-tsconfig.json');
var tsLintFilePath = path.resolve(__dirname, '../tsconfig', 'build-package-tslint.json');
var tsLintPath = path.resolve(packageRootDirectory, 'node_modules/tslint/bin/tslint');
function lintPackage() {
    fs.copyFileSync(tsConfigPath, path.resolve(packageRootDirectory, 'tsconfig.json'));
    try {
        if (process.argv[3] === '--fix') {
            child_process_1.execSync("cd " + packageRootDirectory + " && node " + tsLintPath + " src/**/*.{ts,tsx} -p tsconfig.json --config " + tsLintFilePath + " --fix --format stylish", { stdio: 'inherit' });
        }
        else {
            child_process_1.execSync("cd " + packageRootDirectory + " && node " + tsLintPath + " src/**/*.{ts,tsx} -p tsconfig.json --config " + tsLintFilePath, {
                stdio: 'inherit'
            });
        }
    }
    catch (err) {
        // Since the tslint errors are captured and printed to stdout, no need to capture the stack trace for simple linting
    }
    finally {
        fs.removeSync(path.resolve(packageRootDirectory, 'tsconfig.json'));
    }
}
lintPackage();
//# sourceMappingURL=lint-package.js.map