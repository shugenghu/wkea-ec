{"version":3,"file":"connector-registration.test.js","sourceRoot":"","sources":["../../../src/__tests__/connector-registration.test.ts"],"names":[],"mappings":";AAAA;;;GAGG;;;AAEH,4EAAuE;AACvE,mDAA+B;AAC/B,gBAAc;AACd,sDAAwB;AAExB,IAAI,CAAC,IAAI,CAAC,kDAAkD,CAAC,CAAC;AAC9D,IAAI,CAAC,MAAM,CAAC,4CAA4C,CAAC,CAAC;AAE1D,QAAQ,CAAC,kDAAkD,EAAE;IACzD,SAAS,CAAC;;;;;oBACA,KAAK,GAAG,OAAO,CAAC,WAAW,CAAC,kDAAkD,CAAC,CAAC;oBAChF,MAAM,GAAG,OAAO,CAAC,aAAa,CAAC,4CAA4C,CAAC,CAAC;oBACnF,MAAM,CAAC,yBAAyB,GAAG,IAAI,CAAC,EAAE,CAAC,cAAM,OAAA,KAAK,CAAC,oCAAoC,EAA1C,CAA0C,CAAC,CAAC;oBAC7F,qBAAM,MAAM,CAAC,6BAA6B,EAAE,EAAA;;oBAA5C,SAA4C,CAAC;;;;SAChD,CAAC,CAAC;IAEH,kCAAkC;IAClC,EAAE,CAAC,2CAA2C,EAAE,UAAO,IAAS;;;;;oBACtD,yBAAyB,GAAG,cAAI,CAAC,OAAO,CAAC,OAAO,CAAC,GAAG,EAAE,EAAE,+BAA+B,CAAC,CAAC;oBAC/F,KAAA,MAAM,CAAA;oBAAC,qBAAM,mCAAc,CAAC,yBAAyB,CAAC,EAAA;;oBAAtD,kBAAO,SAA+C,EAAC,CAAC,GAAG,CAAC,aAAa,EAAE,CAAC;oBACtE,kBAAkB,GAAG,EAAE,CAAC,YAAY,CAAC,cAAI,CAAC,OAAO,CAAC,yBAAyB,CAAC,CAAC,CAAC;oBACpF,MAAM,CAAC,kBAAkB,IAAI,kBAAkB,CAAC,QAAQ,EAAE,CAAC,CAAC,eAAe,EAAE,CAAC;oBAC9E,IAAI,EAAE,CAAC;;;;SACV,CAAC,CAAC;AACP,CAAC,CAAC,CAAC","sourcesContent":["/*!\n * Copyright (c) Microsoft Corporation.\n * All rights reserved. See LICENSE in the project root for license information.\n */\n\nimport { safeFileExists } from '@msdyn365-commerce/utilities-internal';\nimport * as fs from 'fs-extra';\nimport 'jest';\nimport path from 'path';\n\njest.mock('../module-registration/module-registration-model');\njest.unmock('../module-registration/module-registration');\n\ndescribe('Connector registration tests (Installed modules)', () => {\n    beforeAll(async () => {\n        const model = require.requireMock('../module-registration/module-registration-model');\n        const helper = require.requireActual('../module-registration/module-registration');\n        helper.msdyn365ModuleGlobPattern = jest.fn(() => model.installedModuleDefinitionPathPattern);\n        await helper.generateConnectorRegistration();\n    });\n\n    // tslint:disable-next-line:no-any\n    it('validate installed connector registration', async (done: any) => {\n        const connectorRegistrationFile = path.resolve(process.cwd(), 'lib/connector-registration.js');\n        expect(await safeFileExists(connectorRegistrationFile)).not.toBeUndefined();\n        const registrationOutput = fs.readFileSync(path.resolve(connectorRegistrationFile));\n        expect(registrationOutput && registrationOutput.toString()).toMatchSnapshot();\n        done();\n    });\n});\n"]}