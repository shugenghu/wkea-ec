"use strict";
/*!
 * Copyright (c) Microsoft Corporation.
 * All rights reserved. See LICENSE in the project root for license information.
 */
Object.defineProperty(exports, "__esModule", { value: true });
var tslib_1 = require("tslib");
var utilities_internal_1 = require("@msdyn365-commerce/utilities-internal");
var fs = tslib_1.__importStar(require("fs-extra"));
require("jest");
var path_1 = tslib_1.__importDefault(require("path"));
var helpers_1 = require("../helpers");
jest.mock('../module-registration/module-registration-model');
jest.unmock('../module-registration/module-registration');
describe('Module registration tests (Installed modules)', function () {
    /**
     * THIS TEST CASE MUST NOT BE IGNORED/SKIPPED UNDER ANY CIRCUMSTANCES
     *
     * Valdiates installed modules to be included in build registration output. Test compares the build registration
     * output against a snapshot file in __mocks__/snapshot/module-registration.js. In case if you need to change
     * build-registration code, please update snapshot as well, Under no circumstances this test case can be ignored.
     */
    beforeAll(function () { return tslib_1.__awaiter(void 0, void 0, void 0, function () {
        var model, helper;
        return tslib_1.__generator(this, function (_a) {
            switch (_a.label) {
                case 0:
                    model = require.requireMock('../module-registration/module-registration-model');
                    helper = require.requireActual('../module-registration/module-registration');
                    helper.msdyn365ModuleGlobPattern = jest.fn(function () { return model.installedModuleDefinitionPathPattern; });
                    return [4 /*yield*/, helper.generateModuleRegistration()];
                case 1:
                    _a.sent();
                    return [2 /*return*/];
            }
        });
    }); });
    // tslint:disable-next-line:no-any
    it('validate installed modules registration', function (done) { return tslib_1.__awaiter(void 0, void 0, void 0, function () {
        var nodeModulesRegistrationFile, _a, registrationOutput;
        return tslib_1.__generator(this, function (_b) {
            switch (_b.label) {
                case 0:
                    nodeModulesRegistrationFile = path_1.default.resolve(process.cwd(), 'lib/module-registration.js');
                    _a = expect;
                    return [4 /*yield*/, utilities_internal_1.safeFileExists(nodeModulesRegistrationFile)];
                case 1:
                    _a.apply(void 0, [_b.sent()]).not.toBeUndefined();
                    registrationOutput = fs.readFileSync(path_1.default.resolve(nodeModulesRegistrationFile));
                    expect(registrationOutput && registrationOutput.toString()).toMatchSnapshot();
                    done();
                    return [2 /*return*/];
            }
        });
    }); });
});
describe('Build package tests (Installed modules)', function () {
    // tslint:disable-next-line:no-any
    it('validate node_modules registration', function (done) { return tslib_1.__awaiter(void 0, void 0, void 0, function () {
        var destinationPath, _a, _b, _c;
        return tslib_1.__generator(this, function (_d) {
            switch (_d.label) {
                case 0:
                    destinationPath = path_1.default.join(process.cwd(), 'dist', 'lib', 'modules');
                    return [4 /*yield*/, helpers_1.copyDefinitionFilesIntoDist([
                            {
                                fromPath: process.cwd() + "/src/__mocks__/local/*/*.definition.json",
                                toPath: destinationPath
                            }
                        ])];
                case 1:
                    _d.sent();
                    _a = expect;
                    return [4 /*yield*/, utilities_internal_1.safeFileExists(path_1.default.join(destinationPath, 'banner', 'banner.definition.json'))];
                case 2:
                    _a.apply(void 0, [_d.sent()]).not.toBeUndefined();
                    _b = expect;
                    return [4 /*yield*/, utilities_internal_1.safeFileExists(path_1.default.join(destinationPath, 'partner-hero', 'partner-hero.definition.json'))];
                case 3:
                    _b.apply(void 0, [_d.sent()]).not.toBeUndefined();
                    _c = expect;
                    return [4 /*yield*/, utilities_internal_1.safeFileExists(path_1.default.join(destinationPath, 'partner-hero', 'hero.definition.json'))];
                case 4:
                    _c.apply(void 0, [_d.sent()]).not.toBeUndefined();
                    done();
                    return [2 /*return*/];
            }
        });
    }); });
});
//# sourceMappingURL=module-registration.test.js.map