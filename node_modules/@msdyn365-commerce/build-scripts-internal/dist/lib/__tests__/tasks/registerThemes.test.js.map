{"version":3,"file":"registerThemes.test.js","sourceRoot":"","sources":["../../../../src/__tests__/tasks/registerThemes.test.ts"],"names":[],"mappings":"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","sourcesContent":["/*!\n * Copyright (c) Microsoft Corporation.\n * All rights reserved. See LICENSE in the project root for license information.\n */\n\nimport 'jest';\njest.mock('@msdyn365-commerce/utilities-internal', () => ({\n    safeFileExists: jest.fn(),\n    trace: require.requireActual('@msdyn365-commerce/utilities-internal').trace,\n    getSupportedNamespaces: require.requireActual('@msdyn365-commerce/utilities-internal').getSupportedNamespaces\n}));\n\nimport { IParsedTheme } from '@msdyn365-commerce/theming-internal';\nimport { safeFileExists } from '@msdyn365-commerce/utilities-internal';\nimport { builtThemeOutFolder, getThemeMetadata, makeDirRelative } from '../../tasks/registerThemes';\n\n/**\n * Normalizes paths cross platform & strips out path from root\n * @param str input path\n */\nconst normalizePath = (str: string) => str.substr(builtThemeOutFolder.length).replace(/\\\\/g, '/');\n\nconst fixPaths = (parsedTheme: IParsedTheme): IParsedTheme => {\n    return {\n        ...parsedTheme,\n        devPath: normalizePath(parsedTheme.devPath),\n        productionPath: normalizePath(parsedTheme.productionPath),\n        outFolder: normalizePath(parsedTheme.outFolder)\n    };\n};\n\ndescribe('theme registration', () => {\n    afterAll(() => jest.restoreAllMocks());\n    it('can make dir relative', async () => {\n        expect(makeDirRelative(__dirname, `${__dirname}/theme/theme1.css`)).toMatchSnapshot();\n    });\n    describe(`determineThemeType`, () => {\n        describe(`isStandard: false`, () => {\n            beforeAll(() => {\n                // @ts-ignore\n                safeFileExists.mockReturnValue(`path/to/entry-file.scss`);\n            });\n            it(`handle no themes`, async (done: Function) => {\n                // arrange\n                const input: string[] = [];\n                // act\n                const result = await getThemeMetadata(input).then((results: IParsedTheme[]) => results.map(fixPaths));\n                // assert\n                expect(result).toMatchSnapshot();\n                done();\n            });\n            it(`handles multiple themes`, async (done: Function) => {\n                // arrange\n                const input: string[] = ['theme1'];\n\n                // act\n                const result = await getThemeMetadata(input).then((results: IParsedTheme[]) => results.map(fixPaths));\n                // assert\n                expect(result).toMatchSnapshot();\n                done();\n            });\n        });\n        describe(`isStandard: true`, () => {\n            beforeAll(() => {\n                // @ts-ignore\n                safeFileExists.mockReturnValue(false);\n            });\n            it(`handle no themes`, async (done: Function) => {\n                // arrange\n                const input: string[] = [];\n                // act\n                const result = await getThemeMetadata(input).then((results: IParsedTheme[]) => results.map(fixPaths));\n                // assert\n                expect(result).toMatchSnapshot();\n                done();\n            });\n            it(`handles multiple themes`, async (done: Function) => {\n                // arrange\n                const input: string[] = ['theme1', 'theme2'];\n\n                // act\n                const result = await getThemeMetadata(input).then((results: IParsedTheme[]) => results.map(fixPaths));\n                // assert\n                expect(result).toMatchSnapshot();\n                done();\n            });\n        });\n    });\n});\n"]}