"use strict";
/*!
 * Copyright (c) Microsoft Corporation.
 * All rights reserved. See LICENSE in the project root for license information.
 */
Object.defineProperty(exports, "__esModule", { value: true });
const utilities_internal_1 = require("@msdyn365-commerce/utilities-internal");
const path = require("path");
const utils_1 = require("../utils");
const validation_helpers_1 = require("../validation-helpers");
/*
 * Ensures the existence of a default export
 * in the entrypoint file of a module.
 *
 *  @param options A module registration object that contains the name and path of the module
 */
// tslint:disable-next-line:no-any
module.exports = (options) => {
    const modulePath = options.path;
    const moduleName = options.name;
    const status = validation_helpers_1.generateStatusJson();
    const exportString = 'export default';
    const entryPointFile = path.join(modulePath, `${moduleName}.tsx`);
    if (!validation_helpers_1.checkFileExists(entryPointFile, 'Could not find entrypoint file: ')) {
        return validation_helpers_1.markFailure(status);
    }
    const entryPointFileContents = utils_1.readFile(entryPointFile);
    // If unable to read the file, readFile returns undefined. Indicate failure and mark failure
    if (entryPointFileContents === undefined) {
        utilities_internal_1.trace.error(`Unexpected error occured trying to read file at: ${entryPointFile}`);
        return validation_helpers_1.markFailure(status);
    }
    // Read the file line by line to ensure that export default is on a line of its own
    let hasDefaultExport = false;
    const entryPointFileContentsParts = entryPointFileContents.split('\n');
    for (const line of entryPointFileContentsParts) {
        if (line.trim().startsWith(exportString)) {
            hasDefaultExport = true;
        }
    }
    if (hasDefaultExport) {
        return status;
    }
    else {
        utilities_internal_1.trace.error(`This file is missing a default export: ${entryPointFile}`);
        return validation_helpers_1.markFailure(status);
    }
};
