{"ast":null,"code":"import\"core-js/modules/es.number.to-fixed.js\";import\"core-js/modules/es.promise.js\";import\"core-js/modules/es.regexp.to-string.js\";import\"core-js/modules/es.string.replace.js\";import\"core-js/modules/web.dom-collections.iterator.js\";import{getFallbackImageUrl}from'@msdyn365-commerce-modules/retail-actions';import{Button}from'@msdyn365-commerce-modules/utilities';import{Image}from'@msdyn365-commerce/core';import classnames from'classnames';import React,{useState}from'react';export const ProductList=props=>{const{products,context:{actionContext:{requestContext:{apiSettings}},request:{gridSettings},cultureFormatter:{formatCurrency,currencyCode}},clickHandler,highlightSearchTerm,resources:{searchResultsCountVerbage,searchResultsCountSubject,selectProductButtonText},imageSettings}=props;const resultCount=searchResultsCountVerbage.replace('{count}',products.length.toString()).replace('{subject}',\"\".concat(searchResultsCountSubject).concat(products.length>1?'s':''));return/*#__PURE__*/React.createElement(React.Fragment,null,/*#__PURE__*/React.createElement(\"p\",{className:'msc-add-line-to-template__search-result-count'},resultCount),/*#__PURE__*/React.createElement(\"div\",{className:'msc-add-line-to-template__product-list-container'},products.map((product,index)=>{const{Price,ItemId,Name,PrimaryImageUrl,RecordId}=product;const price=formatCurrency(Price.toFixed(2),currencyCode);const fallBackImg=getFallbackImageUrl(ItemId,apiSettings)||'';return/*#__PURE__*/React.createElement(\"div\",{key:\"product-\".concat(index),className:'msc-add-line-to-template__product'},/*#__PURE__*/React.createElement(Image,{src:PrimaryImageUrl||'',fallBackSrc:fallBackImg,className:'thumbnail',gridSettings:gridSettings,imageSettings:imageSettings,loadFailureBehavior:'empty'}),/*#__PURE__*/React.createElement(\"div\",{className:'msc-add-line-to-template__product__attributes'},/*#__PURE__*/React.createElement(\"div\",{className:'msc-add-line-to-template__product__id'},RecordId),highlightSearchTerm(Name||'')),/*#__PURE__*/React.createElement(\"div\",{className:'msc-add-line-to-template__product-price-container'},/*#__PURE__*/React.createElement(\"span\",null,price),/*#__PURE__*/React.createElement(ProductSelectButton,{product:product,buttonText:selectProductButtonText,clickHandler:clickHandler})));})));};export const ProductSelectButton=props=>{const[isBusy,setBusy]=useState(false);const{product,buttonText,clickHandler}=props;const getClickHandler=()=>async()=>{setBusy(!isBusy);await clickHandler(product);setBusy(!isBusy);};return/*#__PURE__*/React.createElement(Button,{className:classnames('msc-add-line-to-template__product__select-button',{'is-busy':isBusy}),\"aria-label\":buttonText,onClick:getClickHandler()},buttonText);};","map":{"version":3,"sources":["modules/order-template/components/add-line/product-list.tsx"],"names":[],"mappings":"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","sourcesContent":["import { getFallbackImageUrl } from '@msdyn365-commerce-modules/retail-actions';\nimport { Button } from '@msdyn365-commerce-modules/utilities';\nimport { IImageSettings, Image } from '@msdyn365-commerce/core';\nimport { ProductSearchResult } from '@msdyn365-commerce/retail-proxy';\nimport classnames from 'classnames';\nimport React, { useState } from 'react';\nimport { IAddLineToTemplateProps } from '.';\n\nexport interface IProductListProps extends IAddLineToTemplateProps {\n    products: ProductSearchResult[];\n    imageSettings: IImageSettings;\n    clickHandler(product: ProductSearchResult): Promise<void>;\n    highlightSearchTerm(name: string): React.ReactNode;\n}\n\nexport const ProductList = (props: IProductListProps) => {\n    const {\n        products,\n        context: {\n            actionContext: {\n                requestContext: { apiSettings }\n            },\n            request: {\n                gridSettings\n            },\n            cultureFormatter: {\n                formatCurrency,\n                // @ts-ignore\n                currencyCode\n            }\n        },\n        clickHandler,\n        highlightSearchTerm,\n        resources: { searchResultsCountVerbage, searchResultsCountSubject, selectProductButtonText },\n        imageSettings\n    } = props;\n    const resultCount = searchResultsCountVerbage\n        .replace('{count}', products.length.toString())\n        .replace('{subject}', `${searchResultsCountSubject}${(products.length > 1 ? 's' : '')}`);\n\n    return (\n        <>\n            <p className='msc-add-line-to-template__search-result-count'>{resultCount}</p>\n            <div className='msc-add-line-to-template__product-list-container'>\n                {products.map((product: ProductSearchResult, index: number) => {\n                    const { Price, ItemId, Name, PrimaryImageUrl, RecordId } = product;\n                    const price = formatCurrency(Price.toFixed(2), currencyCode);\n                    const fallBackImg = getFallbackImageUrl(ItemId, apiSettings) || '';\n\n                    return (\n                        <div key={`product-${index}`} className='msc-add-line-to-template__product'>\n                            <Image\n                                src={PrimaryImageUrl || ''}\n                                fallBackSrc={fallBackImg}\n                                className={'thumbnail'}\n                                gridSettings={gridSettings!}\n                                imageSettings={imageSettings}\n                                loadFailureBehavior='empty'\n                            />\n                            <div className='msc-add-line-to-template__product__attributes'>\n                                <div className='msc-add-line-to-template__product__id'>{RecordId}</div>\n                                {highlightSearchTerm(Name || '')}\n                            </div>\n                            <div className='msc-add-line-to-template__product-price-container'>\n                                <span>{price}</span>\n                                <ProductSelectButton product={product} buttonText={selectProductButtonText} clickHandler={clickHandler}/>\n                            </div>\n                        </div>\n                    );\n                })}\n            </div>\n        </>\n    );\n};\n\ninterface IProductSelectButton {\n    product: ProductSearchResult;\n    buttonText: string;\n    clickHandler(product: ProductSearchResult): Promise<void>;\n}\n\nexport const ProductSelectButton = (props: IProductSelectButton) => {\n    const [isBusy, setBusy] = useState(false);\n    const { product, buttonText, clickHandler } = props;\n    const getClickHandler = () => async () => {\n        setBusy(!isBusy);\n        await clickHandler(product);\n        setBusy(!isBusy);\n    };\n\n    return (\n        <Button\n            className={classnames('msc-add-line-to-template__product__select-button', { 'is-busy': isBusy })}\n            aria-label={buttonText}\n            onClick={getClickHandler()}\n        >\n            {buttonText}\n        </Button>\n    );\n};"],"sourceRoot":"./src/"},"metadata":{},"sourceType":"module"}