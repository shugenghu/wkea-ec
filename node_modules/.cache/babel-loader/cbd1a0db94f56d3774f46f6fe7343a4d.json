{"ast":null,"code":"import{DataServiceQuery}from'../DataServiceQuery';import{EmployeeClass,EmployeeActivityClass,OrgUnitClass,ClientBookCustomerClass,ClientBookRefinerClass}from'../Entities/CommerceModels.g';import{executeAction}from'../retail-action';function employeesQuery(staffId){var key=staffId?{StaffId:staffId}:null;return new DataServiceQuery(\"Employees\",\"Employee\",EmployeeClass,key);}export function createCreateInput(entity){return employeesQuery().create(entity);}export function createEmployeeAsync(context,entity){var request=createCreateInput(entity);return executeAction(request,context);}export function createUpdateInput(entity){return employeesQuery(entity.StaffId).update(entity);}export function updateAsync(context,entity){var request=createUpdateInput(entity);return executeAction(request,context);}export function createDeleteAsync(entity){return employeesQuery(entity.StaffId)[\"delete\"]();}export function deleteAsync(context,entity){var request=createDeleteAsync(entity);return executeAction(request,context);}export function createReadAsync(staffId){return employeesQuery(staffId).read();}export function readAsync(context,staffId){var request=createReadAsync(staffId);return executeAction(request,context);}export function createReadAllAsync(queryResultSettings){return employeesQuery().resultSettings(queryResultSettings).read();}export function readAllAsync(context){var request=createReadAllAsync(context.queryResultSettings);return executeAction(request,context);}export function createGetActivitiesInput(queryResultSettings,employeeActivitySearchCriteria){var query=employeesQuery().resultSettings(queryResultSettings);return query.createDataServiceRequestForOperation('GetActivities',true,EmployeeActivityClass,'true',{bypassCache:'none',returnEntity:'EmployeeActivity'},{employeeActivitySearchCriteria:employeeActivitySearchCriteria});}export function getActivitiesAsync(context,employeeActivitySearchCriteria){var request=createGetActivitiesInput(context.queryResultSettings,employeeActivitySearchCriteria);return executeAction(request,context);}export function createGetManagerActivityViewInput(queryResultSettings,employeeActivitySearchCriteria){var query=employeesQuery().resultSettings(queryResultSettings);return query.createDataServiceRequestForOperation('GetManagerActivityView',true,EmployeeActivityClass,'true',{bypassCache:'none',returnEntity:'EmployeeActivity'},{employeeActivitySearchCriteria:employeeActivitySearchCriteria});}export function getManagerActivityViewAsync(context,employeeActivitySearchCriteria){var request=createGetManagerActivityViewInput(context.queryResultSettings,employeeActivitySearchCriteria);return executeAction(request,context);}export function createRegisterActivityInput(staffId,employeeActivityType){var query=employeesQuery(staffId);return query.createDataServiceRequestForOperation('RegisterActivity',true,'','false',{bypassCache:'get',returnEntity:''},{employeeActivityType:employeeActivityType});}export function registerActivityAsync(context,staffId,employeeActivityType){var request=createRegisterActivityInput(staffId,employeeActivityType);return executeAction(request,context);}export function createGetAccessibleOrgUnitsInput(queryResultSettings){var query=employeesQuery().resultSettings(queryResultSettings);return query.createDataServiceRequestForOperation('GetAccessibleOrgUnits',true,OrgUnitClass,'true',{bypassCache:'none',returnEntity:'OrgUnit'},{});}export function getAccessibleOrgUnitsAsync(context){var request=createGetAccessibleOrgUnitsInput(context.queryResultSettings);return executeAction(request,context);}export function createGetLatestActivityInput(){var query=employeesQuery();return query.createDataServiceRequestForOperation('GetLatestActivity',true,EmployeeActivityClass,'false',{bypassCache:'none',returnEntity:'EmployeeActivity'},{});}export function getLatestActivityAsync(context){var request=createGetLatestActivityInput();return executeAction(request,context);}export function createSearchClientBookCustomersInput(queryResultSettings,clientBookCustomerSearchCriteria){var query=employeesQuery().resultSettings(queryResultSettings);return query.createDataServiceRequestForOperation('SearchClientBookCustomers',true,ClientBookCustomerClass,'true',{bypassCache:'none',returnEntity:'ClientBookCustomer'},{clientBookCustomerSearchCriteria:clientBookCustomerSearchCriteria});}export function searchClientBookCustomersAsync(context,clientBookCustomerSearchCriteria){var request=createSearchClientBookCustomersInput(context.queryResultSettings,clientBookCustomerSearchCriteria);return executeAction(request,context);}export function createGetClientBookSearchRefinersInput(queryResultSettings,refinerSourceTypes,searchCriteria){var query=employeesQuery().resultSettings(queryResultSettings);return query.createDataServiceRequestForOperation('GetClientBookSearchRefiners',true,ClientBookRefinerClass,'true',{bypassCache:'none',returnEntity:'ClientBookRefiner'},{refinerSourceTypes:refinerSourceTypes,searchCriteria:searchCriteria});}export function getClientBookSearchRefinersAsync(context,refinerSourceTypes,searchCriteria){var request=createGetClientBookSearchRefinersInput(context.queryResultSettings,refinerSourceTypes,searchCriteria);return executeAction(request,context);}export function createUpdateClientBookInput(clientBookChanges){var query=employeesQuery();return query.createDataServiceRequestForOperation('UpdateClientBook',true,'','',{bypassCache:'get',returnEntity:''},{clientBookChanges:clientBookChanges});}export function updateClientBookAsync(context,clientBookChanges){var request=createUpdateClientBookInput(clientBookChanges);return executeAction(request,context);}export function createGetCurrentEmployeeInput(){var query=employeesQuery();return query.createDataServiceRequestForOperation('GetCurrentEmployee',false,EmployeeClass,'false',{bypassCache:'none',returnEntity:'Employee'},{});}export function getCurrentEmployeeAsync(context){var request=createGetCurrentEmployeeInput();return executeAction(request,context);}","map":{"version":3,"sources":["../../src/DataActions/EmployeesDataActions.g.ts"],"names":[],"mappings":"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","sourcesContent":["    // <auto-generated />\n    import { AsyncResult } from '../async-result';\n    import { DataServiceQuery } from '../DataServiceQuery';\n    import { Employee, EmployeeActivitySearchCriteria, EmployeeActivity, OrgUnit, ClientBookCustomerSearchCriteria, ClientBookCustomer, ClientBookRefiner, ClientBookChanges } from '../Entities/CommerceTypes.g';\n    import { EmployeeClass, EmployeeActivityClass, OrgUnitClass, ClientBookCustomerClass, ClientBookRefinerClass } from '../Entities/CommerceModels.g';\n    import { IContext, IDataServiceRequest, IQueryResultSettings, NullResult } from '../Interfaces';\n    import { executeAction } from '../retail-action';\n    \n    \n    function employeesQuery(staffId?: string): DataServiceQuery {\n      var key = (staffId) ? { StaffId: staffId } : null;\n      return new DataServiceQuery(\"Employees\", \"Employee\", EmployeeClass, key);\n    }\n    \n    export function createCreateInput(entity: Employee): IDataServiceRequest {\n        return employeesQuery().create(entity);\n    }\n    export function createEmployeeAsync(context: IContext, entity: Employee): AsyncResult<Employee> {\n        const request = createCreateInput(entity, );\n        return executeAction<Employee>(request, context);\n    }\n    export function createUpdateInput(entity: Employee): IDataServiceRequest {\n        return employeesQuery(entity.StaffId).update(entity);\n    }\n    export function updateAsync(context: IContext, entity: Employee): AsyncResult<Employee> {\n        const request = createUpdateInput(entity, );\n        return executeAction<Employee>(request, context);\n    }\n    export function createDeleteAsync(entity: Employee): IDataServiceRequest {\n        return employeesQuery(entity.StaffId).delete();\n    }\n    export function deleteAsync(context: IContext, entity: Employee): AsyncResult<NullResult> {\n        const request = createDeleteAsync(entity, );\n        return executeAction<NullResult>(request, context);\n    }\n    export function createReadAsync(staffId: string): IDataServiceRequest {\n        return employeesQuery(staffId).read();\n    }\n    export function readAsync(context: IContext, staffId: string): AsyncResult<Employee> {\n        const request = createReadAsync(staffId, );\n        return executeAction<Employee>(request, context);\n    }\n    export function createReadAllAsync(queryResultSettings: IQueryResultSettings): IDataServiceRequest {\n        return employeesQuery().resultSettings(queryResultSettings).read();\n    }\n    export function readAllAsync(context: IContext): AsyncResult<Employee[]> {\n        const request = createReadAllAsync(context.queryResultSettings, );\n        return executeAction<Employee[]>(request, context);\n    }\n    \n    export function createGetActivitiesInput(queryResultSettings: IQueryResultSettings, employeeActivitySearchCriteria: EmployeeActivitySearchCriteria | null): IDataServiceRequest {      \n        const query = employeesQuery().resultSettings(queryResultSettings);\n        return query.createDataServiceRequestForOperation('GetActivities', true, EmployeeActivityClass, 'true', { bypassCache: 'none', returnEntity: 'EmployeeActivity'}, {employeeActivitySearchCriteria: employeeActivitySearchCriteria });\n    }    \n    \n    export function getActivitiesAsync(context: IContext, employeeActivitySearchCriteria: EmployeeActivitySearchCriteria | null):AsyncResult<EmployeeActivity[]> {\n        const request = createGetActivitiesInput(context.queryResultSettings, employeeActivitySearchCriteria, );\n        return executeAction<EmployeeActivity[]>(request, context);\n    }          \n          \n    export function createGetManagerActivityViewInput(queryResultSettings: IQueryResultSettings, employeeActivitySearchCriteria: EmployeeActivitySearchCriteria | null): IDataServiceRequest {      \n        const query = employeesQuery().resultSettings(queryResultSettings);\n        return query.createDataServiceRequestForOperation('GetManagerActivityView', true, EmployeeActivityClass, 'true', { bypassCache: 'none', returnEntity: 'EmployeeActivity'}, {employeeActivitySearchCriteria: employeeActivitySearchCriteria });\n    }    \n    \n    export function getManagerActivityViewAsync(context: IContext, employeeActivitySearchCriteria: EmployeeActivitySearchCriteria | null):AsyncResult<EmployeeActivity[]> {\n        const request = createGetManagerActivityViewInput(context.queryResultSettings, employeeActivitySearchCriteria, );\n        return executeAction<EmployeeActivity[]>(request, context);\n    }          \n          \n    export function createRegisterActivityInput(staffId: string, employeeActivityType: number): IDataServiceRequest {      \n        const query = employeesQuery(staffId);\n        return query.createDataServiceRequestForOperation('RegisterActivity', true, '', 'false', { bypassCache: 'get', returnEntity: ''}, {employeeActivityType: employeeActivityType });\n    }    \n    \n    export function registerActivityAsync(context: IContext, staffId: string, employeeActivityType: number):AsyncResult<Date> {\n        const request = createRegisterActivityInput(staffId, employeeActivityType, );\n        return executeAction<Date>(request, context);\n    }          \n          \n    export function createGetAccessibleOrgUnitsInput(queryResultSettings: IQueryResultSettings): IDataServiceRequest {      \n        const query = employeesQuery().resultSettings(queryResultSettings);\n        return query.createDataServiceRequestForOperation('GetAccessibleOrgUnits', true, OrgUnitClass, 'true', { bypassCache: 'none', returnEntity: 'OrgUnit'}, { });\n    }    \n    \n    export function getAccessibleOrgUnitsAsync(context: IContext):AsyncResult<OrgUnit[]> {\n        const request = createGetAccessibleOrgUnitsInput(context.queryResultSettings, );\n        return executeAction<OrgUnit[]>(request, context);\n    }          \n          \n    export function createGetLatestActivityInput(): IDataServiceRequest {      \n        const query = employeesQuery();\n        return query.createDataServiceRequestForOperation('GetLatestActivity', true, EmployeeActivityClass, 'false', { bypassCache: 'none', returnEntity: 'EmployeeActivity'}, { });\n    }    \n    \n    export function getLatestActivityAsync(context: IContext):AsyncResult<EmployeeActivity> {\n        const request = createGetLatestActivityInput();\n        return executeAction<EmployeeActivity>(request, context);\n    }          \n          \n    export function createSearchClientBookCustomersInput(queryResultSettings: IQueryResultSettings, clientBookCustomerSearchCriteria: ClientBookCustomerSearchCriteria | null): IDataServiceRequest {      \n        const query = employeesQuery().resultSettings(queryResultSettings);\n        return query.createDataServiceRequestForOperation('SearchClientBookCustomers', true, ClientBookCustomerClass, 'true', { bypassCache: 'none', returnEntity: 'ClientBookCustomer'}, {clientBookCustomerSearchCriteria: clientBookCustomerSearchCriteria });\n    }    \n    \n    export function searchClientBookCustomersAsync(context: IContext, clientBookCustomerSearchCriteria: ClientBookCustomerSearchCriteria | null):AsyncResult<ClientBookCustomer[]> {\n        const request = createSearchClientBookCustomersInput(context.queryResultSettings, clientBookCustomerSearchCriteria, );\n        return executeAction<ClientBookCustomer[]>(request, context);\n    }          \n          \n    export function createGetClientBookSearchRefinersInput(queryResultSettings: IQueryResultSettings, refinerSourceTypes: number[], searchCriteria: ClientBookCustomerSearchCriteria | null): IDataServiceRequest {      \n        const query = employeesQuery().resultSettings(queryResultSettings);\n        return query.createDataServiceRequestForOperation('GetClientBookSearchRefiners', true, ClientBookRefinerClass, 'true', { bypassCache: 'none', returnEntity: 'ClientBookRefiner'}, {refinerSourceTypes: refinerSourceTypes, searchCriteria: searchCriteria });\n    }    \n    \n    export function getClientBookSearchRefinersAsync(context: IContext, refinerSourceTypes: number[], searchCriteria: ClientBookCustomerSearchCriteria | null):AsyncResult<ClientBookRefiner[]> {\n        const request = createGetClientBookSearchRefinersInput(context.queryResultSettings, refinerSourceTypes, searchCriteria, );\n        return executeAction<ClientBookRefiner[]>(request, context);\n    }          \n          \n    export function createUpdateClientBookInput(clientBookChanges: ClientBookChanges | null): IDataServiceRequest {      \n        const query = employeesQuery();\n        return query.createDataServiceRequestForOperation('UpdateClientBook', true, '', '', { bypassCache: 'get', returnEntity: ''}, {clientBookChanges: clientBookChanges });\n    }    \n    \n    export function updateClientBookAsync(context: IContext, clientBookChanges: ClientBookChanges | null):AsyncResult<NullResult> {\n        const request = createUpdateClientBookInput(clientBookChanges, );\n        return executeAction<NullResult>(request, context);\n    }          \n          \n    export function createGetCurrentEmployeeInput(): IDataServiceRequest {      \n        const query = employeesQuery();\n        return query.createDataServiceRequestForOperation('GetCurrentEmployee', false, EmployeeClass, 'false', { bypassCache: 'none', returnEntity: 'Employee'}, { });\n    }    \n    \n    export function getCurrentEmployeeAsync(context: IContext):AsyncResult<Employee> {\n        const request = createGetCurrentEmployeeInput();\n        return executeAction<Employee>(request, context);\n    }          \n          \n    "],"sourceRoot":""},"metadata":{},"sourceType":"module"}