{"ast":null,"code":"import _classCallCheck from\"@babel/runtime/helpers/esm/classCallCheck\";import _regeneratorRuntime from\"@babel/runtime/regenerator\";import _asyncToGenerator from\"@babel/runtime/helpers/esm/asyncToGenerator\";import{buildCacheKey,getSimpleProducts,ProductInput}from'@msdyn365-commerce-modules/retail-actions';import{createObservableDataAction}from'@msdyn365-commerce/core';import{getSalesOrderDetailsBySalesIdAsync,getSalesOrderDetailsByTransactionIdAsync}from'@msdyn365-commerce/retail-proxy/dist/DataActions/SalesOrdersDataActions.g';var getSalesOrder=function getSalesOrder(){var orderType=arguments.length>0&&arguments[0]!==undefined?arguments[0]:'';var orderId=arguments.length>1&&arguments[1]!==undefined?arguments[1]:'';return/*#__PURE__*/function(){var _ref=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee(ctx){return _regeneratorRuntime.wrap(function _callee$(_context){while(1){switch(_context.prev=_context.next){case 0:return _context.abrupt(\"return\",orderType===\"salesOrder\"?getSalesOrderDetailsBySalesIdAsync({callerContext:ctx},orderId):getSalesOrderDetailsByTransactionIdAsync({callerContext:ctx},orderId,3));case 1:case\"end\":return _context.stop();}}},_callee);}));return function(_x){return _ref.apply(this,arguments);};}();};var getProducts=function getProducts(){var productIds=arguments.length>0&&arguments[0]!==undefined?arguments[0]:[];var channelId=arguments.length>1?arguments[1]:undefined;return/*#__PURE__*/function(){var _ref2=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee2(ctx){var productInputs;return _regeneratorRuntime.wrap(function _callee2$(_context2){while(1){switch(_context2.prev=_context2.next){case 0:productInputs=productIds.map(function(productId){return new ProductInput(productId,ctx.requestContext.apiSettings,channelId);});return _context2.abrupt(\"return\",getSimpleProducts(productInputs,ctx));case 2:case\"end\":return _context2.stop();}}},_callee2);}));return function(_x2){return _ref2.apply(this,arguments);};}();};export var GetSalesOrderWithHydrationsInput=function GetSalesOrderWithHydrationsInput(orderType,orderId,apiSettings){var _this=this;_classCallCheck(this,GetSalesOrderWithHydrationsInput);this.getCacheKey=function(){return buildCacheKey(\"SalesOrderWithHydrations\",_this.apiSettings);};this.getCacheObjectType=function(){return\"SalesOrderWithHydrations-\".concat(_this.orderType,\"-\").concat(_this.orderId);};this.dataCacheType=function(){return'request';};this.orderType=orderType;this.orderId=orderId;this.apiSettings=apiSettings;};var createSalesOrderWithHydrationsInput=function createSalesOrderWithHydrationsInput(inputData){var _ref3=inputData.requestContext.query&&inputData.requestContext.query||{},_ref3$salesId=_ref3.salesId,salesId=_ref3$salesId===void 0?'':_ref3$salesId,_ref3$transactionId=_ref3.transactionId,transactionId=_ref3$transactionId===void 0?'':_ref3$transactionId;if(salesId){return new GetSalesOrderWithHydrationsInput(\"salesOrder\",salesId,inputData.requestContext.apiSettings);}else if(transactionId){return new GetSalesOrderWithHydrationsInput(\"transaction\",transactionId,inputData.requestContext.apiSettings);}throw new Error(\"createSalesOrderWithHydrationsInput - No salesId or transactionId provided.\");};export function getSalesOrderWithHydrationsAction(_x3,_x4){return _getSalesOrderWithHydrationsAction.apply(this,arguments);}function _getSalesOrderWithHydrationsAction(){_getSalesOrderWithHydrationsAction=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee3(input,ctx){var orderType,orderId,salesOrder,productIds,products;return _regeneratorRuntime.wrap(function _callee3$(_context3){while(1){switch(_context3.prev=_context3.next){case 0:if(ctx){_context3.next=2;break;}throw new Error(\"getSalesOrderWithHydrationsAction - Action context cannot be null/undefined\");case 2:orderType=input.orderType,orderId=input.orderId;if(!(!orderType||!orderId)){_context3.next=6;break;}ctx.trace(\"[getSalesOrderWithHydrationsAction] No orderType or orderId provided.\");return _context3.abrupt(\"return\",{});case 6:_context3.next=8;return getSalesOrder(orderType,orderId)(ctx);case 8:salesOrder=_context3.sent;if(!(!salesOrder||!salesOrder.SalesLines||!salesOrder.SalesLines.length)){_context3.next=12;break;}ctx.trace(\"[getSalesOrderWithHydrationsAction] No salesLine found.\");return _context3.abrupt(\"return\",{});case 12:productIds=salesOrder.SalesLines.map(function(salesLine){return salesLine.ProductId||0;}).filter(function(productId){return productId;});if(!(!productIds||!productIds.length)){_context3.next=16;break;}ctx.trace(\"[getSalesOrderWithHydrationsAction] No productId in saleLines found.\");return _context3.abrupt(\"return\",{});case 16:_context3.next=18;return getProducts(productIds,salesOrder.ChannelId)(ctx);case 18:products=_context3.sent;if(!(!products||!products.length)){_context3.next=22;break;}ctx.trace(\"[getSalesOrderWithHydrationsAction] No product found.\");return _context3.abrupt(\"return\",{});case 22:return _context3.abrupt(\"return\",{salesOrder:salesOrder,products:products});case 23:case\"end\":return _context3.stop();}}},_callee3);}));return _getSalesOrderWithHydrationsAction.apply(this,arguments);}export default createObservableDataAction({id:'@msdyn365-commerce-modules/order-management/get-sales-order-with-hydrations',action:getSalesOrderWithHydrationsAction,input:createSalesOrderWithHydrationsInput});","map":{"version":3,"sources":["actions/get-sales-order-with-hydrations.ts"],"names":[],"mappings":"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","sourcesContent":["import { buildCacheKey, getSimpleProducts, ProductInput } from '@msdyn365-commerce-modules/retail-actions';\nimport { CacheType, createObservableDataAction, IAction, IActionContext, IActionInput, ICommerceApiSettings, ICreateActionContext } from '@msdyn365-commerce/core';\nimport { SalesOrder, SimpleProduct } from '@msdyn365-commerce/retail-proxy';\nimport { getSalesOrderDetailsBySalesIdAsync, getSalesOrderDetailsByTransactionIdAsync } from '@msdyn365-commerce/retail-proxy/dist/DataActions/SalesOrdersDataActions.g';\n\ninterface ISalesOrderWithHydrations {\n    salesOrder: SalesOrder;\n    products: SimpleProduct[];\n}\n\n/**\n *  orderTypes Types of orders\n */\nexport const enum orderTypes {\n    salesOrder = 'salesOrder',\n    transaction = 'transaction'\n}\n\n/**\n * Calls the Retail API and returns the sales order\n */\nconst getSalesOrder = (orderType: string = '', orderId: string = '') => async (ctx: IActionContext): Promise<SalesOrder> => {\n    return orderType === orderTypes.salesOrder\n        ? getSalesOrderDetailsBySalesIdAsync({ callerContext: ctx }, orderId)\n        : //  Local (1) searches the retail server database, and remote (2) searches\n          // on the headquarters side. All (3) and none (0) are not supported.\n          getSalesOrderDetailsByTransactionIdAsync({ callerContext: ctx }, orderId, 3);\n};\n\n/**\n * Calls the Retail API and returns the products\n */\nconst getProducts = (productIds: number[] = [], channelId?: number) => async (ctx: IActionContext): Promise<SimpleProduct[]> => {\n    const productInputs = productIds.map(productId => new ProductInput(productId, ctx.requestContext.apiSettings, channelId));\n    return getSimpleProducts(productInputs, ctx);\n};\n\n/**\n *  Action input\n */\nexport class GetSalesOrderWithHydrationsInput implements IActionInput {\n    public orderType: string;\n    public orderId: string;\n    private apiSettings: ICommerceApiSettings;\n\n    constructor(orderType: string , orderId: string, apiSettings: ICommerceApiSettings) {\n        this.orderType = orderType;\n        this.orderId = orderId;\n        this.apiSettings = apiSettings;\n    }\n\n    public getCacheKey = () => buildCacheKey(`SalesOrderWithHydrations`, this.apiSettings);\n    public getCacheObjectType = () => `SalesOrderWithHydrations-${this.orderType}-${this.orderId}`;\n    public dataCacheType = (): CacheType => 'request';\n}\n\n/**\n * Creates the input required to make the retail api call\n */\nconst createSalesOrderWithHydrationsInput = (inputData: ICreateActionContext) => {\n    const { salesId = '', transactionId = '' } = (inputData.requestContext.query && inputData.requestContext.query) || {};\n    if (salesId) {\n        return new GetSalesOrderWithHydrationsInput(orderTypes.salesOrder, salesId, inputData.requestContext.apiSettings);\n    } else if (transactionId) {\n        return new GetSalesOrderWithHydrationsInput(orderTypes.transaction, transactionId, inputData.requestContext.apiSettings);\n    }\n    throw new Error(`createSalesOrderWithHydrationsInput - No salesId or transactionId provided.`);\n};\n\n/**\n * Get sales order with hydrations action\n */\nexport async function getSalesOrderWithHydrationsAction(\n    input: GetSalesOrderWithHydrationsInput,\n    ctx: IActionContext\n): Promise<ISalesOrderWithHydrations> {\n    if (!ctx) {\n        throw new Error(`getSalesOrderWithHydrationsAction - Action context cannot be null/undefined`);\n    }\n\n    const { orderType, orderId } = input;\n\n    if (!orderType || !orderId) {\n        ctx.trace(`[getSalesOrderWithHydrationsAction] No orderType or orderId provided.`);\n        return <ISalesOrderWithHydrations>{};\n    }\n\n    const salesOrder = await getSalesOrder(orderType, orderId)(ctx);\n\n    if (!salesOrder || !salesOrder.SalesLines || !salesOrder.SalesLines.length) {\n        ctx.trace(`[getSalesOrderWithHydrationsAction] No salesLine found.`);\n        return <ISalesOrderWithHydrations>{};\n    }\n\n    const productIds: number[] = salesOrder.SalesLines.map(salesLine => salesLine.ProductId || 0).filter(productId => productId);\n\n    if (!productIds || !productIds.length) {\n        ctx.trace(`[getSalesOrderWithHydrationsAction] No productId in saleLines found.`);\n        return <ISalesOrderWithHydrations>{};\n    }\n\n    const products = await getProducts(productIds, salesOrder.ChannelId)(ctx);\n\n    if (!products || !products.length) {\n        ctx.trace(`[getSalesOrderWithHydrationsAction] No product found.`);\n        return <ISalesOrderWithHydrations>{};\n    }\n\n    return <ISalesOrderWithHydrations>{\n        salesOrder,\n        products\n    };\n}\n\nexport default createObservableDataAction({\n    id: '@msdyn365-commerce-modules/order-management/get-sales-order-with-hydrations',\n    action: <IAction<ISalesOrderWithHydrations>>getSalesOrderWithHydrationsAction,\n    input: createSalesOrderWithHydrationsInput\n});"],"sourceRoot":"./src/"},"metadata":{},"sourceType":"module"}