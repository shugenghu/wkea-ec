{"ast":null,"code":"import\"core-js/modules/es.object.assign.js\";import*as React from'react';import{Module,Node}from'@msdyn365-commerce-modules/utilities';const PasswordResetVerificationItem=(_ref)=>{let{wrapper,label,errorMessage,input}=_ref;return/*#__PURE__*/React.createElement(Node,Object.assign({},wrapper),label,errorMessage,input);};const LocalAccount=(_ref2)=>{let{localAccount,items,successMessage,errorMessage,verificationButtonsWrapper,verificationButtons,buttonsWrapper,buttons,verificationSuccessModal,verificationSuccessModalMessage}=_ref2;return/*#__PURE__*/React.createElement(Node,Object.assign({},localAccount),items&&items.map(item=>{return/*#__PURE__*/React.createElement(PasswordResetVerificationItem,Object.assign({key:item.key},item));}),successMessage&&successMessage.map((message,index)=>{return/*#__PURE__*/React.createElement(React.Fragment,{key:index},message);}),errorMessage&&errorMessage.map((error,index)=>{return/*#__PURE__*/React.createElement(React.Fragment,{key:index},error);}),/*#__PURE__*/React.createElement(Node,Object.assign({},verificationButtonsWrapper),verificationButtons&&verificationButtons.map((button,index)=>{return/*#__PURE__*/React.createElement(React.Fragment,{key:index},button);})),/*#__PURE__*/React.createElement(Node,Object.assign({},buttonsWrapper),buttons&&buttons.map((button,index)=>{return/*#__PURE__*/React.createElement(React.Fragment,{key:index},button);})),/*#__PURE__*/React.createElement(Node,Object.assign({},verificationSuccessModal),/*#__PURE__*/React.createElement(Node,Object.assign({},verificationSuccessModalMessage))));};const PasswordResetVerificationLoading=(_ref3)=>{let{modal,modalBody,icon,message}=_ref3;return/*#__PURE__*/React.createElement(Node,Object.assign({},modal),/*#__PURE__*/React.createElement(Node,Object.assign({},modalBody),icon,message));};const PasswordResetVerificationView=props=>{const{passwordResetVerification,viewState,loading,defaultAADConainer,aadConainer,heading,passwordResetVerificationLocalAccount}=props;return/*#__PURE__*/React.createElement(Module,Object.assign({},passwordResetVerification),viewState.isShowLoading&&/*#__PURE__*/React.createElement(Node,Object.assign({},defaultAADConainer)),viewState.isShowLoading&&/*#__PURE__*/React.createElement(PasswordResetVerificationLoading,Object.assign({},loading)),/*#__PURE__*/React.createElement(Node,Object.assign({},aadConainer),heading,LocalAccount(passwordResetVerificationLocalAccount)));};export default PasswordResetVerificationView;","map":{"version":3,"sources":["modules/password-reset-verification/password-reset-verification.view.tsx"],"names":[],"mappings":"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","sourcesContent":["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nimport * as React from 'react';\n\nimport { Module, Node } from '@msdyn365-commerce-modules/utilities';\n\nimport {\n    IPasswordResetVerificationItem, IPasswordResetVerificationLoading,\n    IPasswordResetVerificationLocalAccount, IPasswordResetVerificationViewProps\n} from './password-reset-verification';\n\nconst PasswordResetVerificationItem: React.FC<IPasswordResetVerificationItem> = ({\n    wrapper,\n    label,\n    errorMessage,\n    input\n}) => {\n\n    return (\n        <Node {...wrapper}>\n            {label}\n            {errorMessage}\n            {input}\n        </Node>\n    );\n};\n\nconst LocalAccount: React.FC<IPasswordResetVerificationLocalAccount> = ({\n    localAccount,\n    items,\n    successMessage,\n    errorMessage,\n    verificationButtonsWrapper,\n    verificationButtons,\n    buttonsWrapper,\n    buttons,\n    verificationSuccessModal,\n    verificationSuccessModalMessage\n}) => {\n\n    return (\n        <Node {...localAccount}>\n            {items && items.map((item: IPasswordResetVerificationItem) => {\n                return (\n                    <PasswordResetVerificationItem key={item.key} {...item} />\n                );\n            })}\n            {successMessage && successMessage.map((message: React.ReactNode, index: number) => {\n                return (\n                    <React.Fragment key={index}>\n                        {message}\n                    </React.Fragment>\n                );\n            })}\n            {errorMessage && errorMessage.map((error: React.ReactNode, index: number) => {\n                return (\n                    <React.Fragment key={index}>\n                        {error}\n                    </React.Fragment>\n                );\n            })}\n            <Node {...verificationButtonsWrapper}>\n                {verificationButtons && verificationButtons.map((button: React.ReactNode, index: number) => {\n                    return (\n                        <React.Fragment key={index}>\n                            {button}\n                        </React.Fragment>\n                    );\n                })}\n            </Node>\n\n            <Node {...buttonsWrapper}>\n                {buttons && buttons.map((button: React.ReactNode, index: number) => {\n                    return (\n                        <React.Fragment key={index}>\n                            {button}\n                        </React.Fragment>\n                    );\n                })}\n            </Node>\n\n            <Node {...verificationSuccessModal}>\n                <Node {...verificationSuccessModalMessage} />\n            </Node>\n        </Node>\n    );\n};\n\nconst PasswordResetVerificationLoading: React.FC<IPasswordResetVerificationLoading> = ({\n    modal,\n    modalBody,\n    icon,\n    message,\n}) => {\n    return (\n        <Node {...modal}>\n            <Node {...modalBody}>\n                {icon}\n                {message}\n            </Node>\n        </Node>\n    );\n};\n\nconst PasswordResetVerificationView: React.FC<IPasswordResetVerificationViewProps> = props => {\n\n    const {\n        passwordResetVerification,\n        viewState,\n        loading,\n        defaultAADConainer,\n        aadConainer,\n        heading,\n        passwordResetVerificationLocalAccount\n    } = props;\n\n    return (\n        <Module {...passwordResetVerification}>\n            {viewState.isShowLoading && <Node {...defaultAADConainer} />}\n            {viewState.isShowLoading && <PasswordResetVerificationLoading {...loading} />}\n            <Node {...aadConainer}>\n                {heading}\n                {LocalAccount(passwordResetVerificationLocalAccount)}\n            </Node>\n        </Module>\n    );\n};\n\nexport default PasswordResetVerificationView;\n"],"sourceRoot":"./src/"},"metadata":{},"sourceType":"module"}