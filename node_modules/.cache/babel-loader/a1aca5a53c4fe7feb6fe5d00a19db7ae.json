{"ast":null,"code":"import _regeneratorRuntime from\"@babel/runtime/regenerator\";import _asyncToGenerator from\"@babel/runtime/helpers/esm/asyncToGenerator\";/*!\r\n * Copyright (c) Microsoft Corporation.\r\n * All rights reserved. See LICENSE in the project root for license information.\r\n */import{msdyn365Commerce,RefreshType}from'@msdyn365-commerce/core-internal';export var DEFAULT_EXPERIMENT_TTL=1800;export var DEFAULT_EXPERIMENT_TTR=60;export var DEFAULT_EXPERIMENT_DATAFILE_TTL=1800;export var DEFAULT_EXPERIMENT_DATAFILE_TTR=60;export var readCachedExperimentsEntries=/*#__PURE__*/function(){var _ref=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee(cacheKey,experimentRefreshOptions,expProvider,expConnectorName,retailServerBaseURL){var experimentationAppCache,experimentEntry,experimentItem,refresh;return _regeneratorRuntime.wrap(function _callee$(_context){while(1){switch(_context.prev=_context.next){case 0:experimentationAppCache=msdyn365Commerce.experimentationCache;if(experimentationAppCache){experimentItem=experimentationAppCache.get(cacheKey);if(experimentItem&&experimentItem.shouldRefresh){// doing background refresh here.\n// tslint:disable-next-line:no-any\nrefresh=new Promise(function(res,rej){var newExperimentsResult;switch(experimentRefreshOptions.refreshType){case RefreshType.DataFile:newExperimentsResult=expProvider.getConfigForClientSideInit();break;case RefreshType.Experiments:newExperimentsResult=expProvider.getExperiments(retailServerBaseURL,expConnectorName);break;default:}res(newExperimentsResult);});refresh.then(function(experimentsRefreshRaw){var experimentsRefresh;switch(experimentRefreshOptions.refreshType){case RefreshType.DataFile:experimentsRefresh=JSON.stringify(experimentsRefreshRaw);break;case RefreshType.Experiments:experimentsRefresh=experimentsRefreshRaw.experiments;break;default:experimentsRefresh=experimentsRefreshRaw;}if(experimentsRefresh){experimentationAppCache.put(cacheKey,{item:experimentsRefresh});}})[\"catch\"]();}experimentEntry=experimentItem?experimentItem.item:undefined;}return _context.abrupt(\"return\",experimentEntry);case 3:case\"end\":return _context.stop();}}},_callee);}));return function readCachedExperimentsEntries(_x,_x2,_x3,_x4,_x5){return _ref.apply(this,arguments);};}();export var saveCachedExperimentsEntries=/*#__PURE__*/function(){var _ref2=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee2(cacheKey,experimentationsItem){return _regeneratorRuntime.wrap(function _callee2$(_context2){while(1){switch(_context2.prev=_context2.next){case 0:return _context2.abrupt(\"return\",msdyn365Commerce.experimentationCache&&msdyn365Commerce.experimentationCache.put(cacheKey,{item:experimentationsItem})||false);case 1:case\"end\":return _context2.stop();}}},_callee2);}));return function saveCachedExperimentsEntries(_x6,_x7){return _ref2.apply(this,arguments);};}();","map":{"version":3,"sources":["../../src/experimentation-cache-utils.ts"],"names":[],"mappings":"uIAAA;;;AAGG,GAEH,OAA8D,gBAA9D,CAAgF,WAAhF,KAAmG,kCAAnG,CAGA,MAAO,IAAM,CAAA,sBAAsB,CAAG,IAA/B,CACP,MAAO,IAAM,CAAA,sBAAsB,CAAG,EAA/B,CACP,MAAO,IAAM,CAAA,+BAA+B,CAAG,IAAxC,CACP,MAAO,IAAM,CAAA,+BAA+B,CAAG,EAAxC,CAEP,MAAO,IAAM,CAAA,4BAA4B,0FAAG,iBACxC,QADwC,CAExC,wBAFwC,CAGxC,WAHwC,CAIxC,gBAJwC,CAKxC,mBALwC,qLAOlC,uBAPkC,CAOR,gBAAgB,CAAC,oBAPT,CASxC,GAAI,uBAAJ,CAA6B,CACnB,cADmB,CACF,uBAAuB,CAAC,GAAxB,CAA+B,QAA/B,CADE,CAEzB,GAAI,cAAc,EAAI,cAAc,CAAC,aAArC,CAAoD,CAChD;AACA;AACM,OAH0C,CAGhC,GAAI,CAAA,OAAJ,CAAiB,SAAC,GAAD,CAAM,GAAN,CAAa,CAC1C,GAAI,CAAA,oBAAJ,CACA,OAAQ,wBAAwB,CAAC,WAAjC,EACI,IAAK,CAAA,WAAW,CAAC,QAAjB,CACI,oBAAoB,CAAG,WAAW,CAAC,0BAAZ,EAAvB,CACA,MACJ,IAAK,CAAA,WAAW,CAAC,WAAjB,CACI,oBAAoB,CAAG,WAAW,CAAC,cAAZ,CAA2B,mBAA3B,CAAgD,gBAAhD,CAAvB,CACA,MACJ,QAPJ,CASA,GAAG,CAAC,oBAAD,CAAH,CACH,CAZe,CAHgC,CAgBhD,OAAO,CACF,IADL,CACU,SAAA,qBAAqB,CAAG,CAC1B,GAAI,CAAA,kBAAJ,CACA,OAAQ,wBAAwB,CAAC,WAAjC,EACI,IAAK,CAAA,WAAW,CAAC,QAAjB,CACI,kBAAkB,CAAG,IAAI,CAAC,SAAL,CAAe,qBAAf,CAArB,CACA,MACJ,IAAK,CAAA,WAAW,CAAC,WAAjB,CACI,kBAAkB,CAAG,qBAAqB,CAAC,WAA3C,CACA,MACJ,QACI,kBAAkB,CAAG,qBAArB,CARR,CAUA,GAAI,kBAAJ,CAAwB,CACpB,uBAAuB,CAAC,GAAxB,CAA4B,QAA5B,CAAsC,CAAE,IAAI,CAAE,kBAAR,CAAtC,EACH,CACJ,CAhBL,aAkBH,CACD,eAAe,CAAG,cAAc,CAAG,cAAc,CAAC,IAAlB,CAAyB,SAAzD,CACH,CA/CuC,gCAgDjC,eAhDiC,wDAAH,kBAA5B,CAAA,4BAA4B,4DAAlC,CAmDP,MAAO,IAAM,CAAA,4BAA4B,2FAAG,kBAAU,QAAV,CAA+B,oBAA/B,uJAEnC,gBAAgB,CAAC,oBAAjB,EAAyC,gBAAgB,CAAC,oBAAjB,CAAsC,GAAtC,CAA6C,QAA7C,CAAuD,CAAE,IAAI,CAAE,oBAAR,CAAvD,CAA1C,EACA,KAHoC,0DAAH,kBAA5B,CAAA,4BAA4B,kDAAlC","sourcesContent":["/*!\n * Copyright (c) Microsoft Corporation.\n * All rights reserved. See LICENSE in the project root for license information.\n */\n\nimport { IExperimentationProvider, IExperimentRefreshOptions, msdyn365Commerce, RefreshType } from '@msdyn365-commerce/core-internal';\nimport { ICacheKey } from './ICache';\n\nexport const DEFAULT_EXPERIMENT_TTL = 1800;\nexport const DEFAULT_EXPERIMENT_TTR = 60;\nexport const DEFAULT_EXPERIMENT_DATAFILE_TTL = 1800;\nexport const DEFAULT_EXPERIMENT_DATAFILE_TTR = 60;\n\nexport const readCachedExperimentsEntries = async <T>(\n    cacheKey: ICacheKey,\n    experimentRefreshOptions: IExperimentRefreshOptions,\n    expProvider: IExperimentationProvider,\n    expConnectorName: string,\n    retailServerBaseURL: string\n): Promise<T | undefined> => {\n    const experimentationAppCache = msdyn365Commerce.experimentationCache;\n    let experimentEntry: T | undefined;\n    if (experimentationAppCache) {\n        const experimentItem = experimentationAppCache.get<T>(cacheKey);\n        if (experimentItem && experimentItem.shouldRefresh) {\n            // doing background refresh here.\n            // tslint:disable-next-line:no-any\n            const refresh = new Promise<any>((res, rej) => {\n                let newExperimentsResult;\n                switch (experimentRefreshOptions.refreshType) {\n                    case RefreshType.DataFile:\n                        newExperimentsResult = expProvider.getConfigForClientSideInit();\n                        break;\n                    case RefreshType.Experiments:\n                        newExperimentsResult = expProvider.getExperiments(retailServerBaseURL, expConnectorName);\n                        break;\n                    default:\n                }\n                res(newExperimentsResult);\n            });\n            refresh\n                .then(experimentsRefreshRaw => {\n                    let experimentsRefresh;\n                    switch (experimentRefreshOptions.refreshType) {\n                        case RefreshType.DataFile:\n                            experimentsRefresh = JSON.stringify(experimentsRefreshRaw);\n                            break;\n                        case RefreshType.Experiments:\n                            experimentsRefresh = experimentsRefreshRaw.experiments;\n                            break;\n                        default:\n                            experimentsRefresh = experimentsRefreshRaw;\n                    }\n                    if (experimentsRefresh) {\n                        experimentationAppCache.put(cacheKey, { item: experimentsRefresh });\n                    }\n                })\n                .catch();\n        }\n        experimentEntry = experimentItem ? experimentItem.item : undefined;\n    }\n    return experimentEntry;\n};\n\nexport const saveCachedExperimentsEntries = async <T>(cacheKey: ICacheKey, experimentationsItem: T): Promise<boolean> => {\n    return (\n        (msdyn365Commerce.experimentationCache && msdyn365Commerce.experimentationCache.put<T>(cacheKey, { item: experimentationsItem })) ||\n        false\n    );\n};\n"],"sourceRoot":""},"metadata":{},"sourceType":"module"}