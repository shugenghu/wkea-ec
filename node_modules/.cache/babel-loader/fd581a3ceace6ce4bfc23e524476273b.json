{"ast":null,"code":"import\"core-js/modules/es.number.to-fixed.js\";import*as React from'react';import{PlayerConstants,VideoPlayerNames}from'../data/player-constants';export default class AgeGate extends React.PureComponent{constructor(props){super(props);this.ageGateDiv=/*#__PURE__*/React.createRef();this.getCalculatedAge=()=>{const day=Number(this.state.dayValue);const month=Number(this.state.monthValue);const year=Number(this.state.yearValue);const today=new Date();let age=today.getFullYear()-year;const birthdayMonthHasNotHappenedYet=today.getMonth()+1<month;const birthdayDayHasNotHappenedYet=today.getMonth()+1===month&&today.getDate()<day;if(birthdayMonthHasNotHappenedYet||birthdayDayHasNotHappenedYet){age--;}const minimmumage=Number(this.props.minmumAge);if(age>=minimmumage){return true;}else{return false;}};this.renderSelectMonth=()=>{const maxOffset=12;const allMonth=[];for(let month=1;month<=maxOffset;month++){allMonth.push(month);}const monthList=allMonth.map(month=>{return/*#__PURE__*/React.createElement(\"option\",{role:'menuitem',key:month,value:month},month.toFixed());});return/*#__PURE__*/React.createElement(\"select\",{\"aria-expanded\":'false',className:\"\".concat(VideoPlayerNames.videoplayerContainer,\"__agegate__select\"),role:'menu',onChange:this._filterDateMonthYear,value:this.state.monthValue,\"aria-label\":'Enter your month of birth',name:'selectMonth',id:'selectMonth'},/*#__PURE__*/React.createElement(\"option\",{role:'menuitem'},\"Month\"),monthList);};this.renderSelectDay=()=>{const maxOffset=31;const allDay=[];for(let day=1;day<=maxOffset;day++){allDay.push(day);}const dayList=allDay.map(day=>{return/*#__PURE__*/React.createElement(\"option\",{role:'menuitem',key:day},day.toFixed());});return/*#__PURE__*/React.createElement(\"select\",{\"aria-expanded\":'false',className:\"\".concat(VideoPlayerNames.videoplayerContainer,\"__agegate__select\"),role:'menu',onChange:this._filterDateMonthYear,value:this.state.dayValue,\"aria-label\":'Enter your day of birth',name:'selectDay',id:'selectDay'},/*#__PURE__*/React.createElement(\"option\",{role:'menuitem'},\"Day\"),dayList);};this.renderSelectYear=()=>{const maxOffset=100;const thisYear=new Date().getFullYear();const allYear=[];for(let year=1;year<=maxOffset;year++){allYear.push(thisYear-year);}const yearList=allYear.map(year=>{return/*#__PURE__*/React.createElement(\"option\",{role:'menuitem',key:year},year.toFixed());});return/*#__PURE__*/React.createElement(\"select\",{\"aria-expanded\":'false',className:\"\".concat(VideoPlayerNames.videoplayerContainer,\"__agegate__select\"),role:'menu',onChange:this._filterDateMonthYear,value:this.state.yearValue,\"aria-label\":'Enter your year of birth',name:'selectYear',id:'selectYear'},/*#__PURE__*/React.createElement(\"option\",{role:'menuitem'},\"Year\"),yearList);};this._filterDateMonthYear=this._filterDateMonthYear.bind(this);this.state={monthValue:'Month',dayValue:'Day',yearValue:'Year'};}render(){const enabled=PlayerConstants.regxForAgeGateInputValidation.test(this.state.dayValue)&&PlayerConstants.regxForAgeGateInputValidation.test(this.state.monthValue)&&PlayerConstants.regxForAgeGateInputValidation.test(this.state.yearValue);return/*#__PURE__*/React.createElement(\"div\",{className:\"\".concat(VideoPlayerNames.videoplayerContainer,\"__agegate__container\"),ref:this.ageGateDiv,\"aria-hidden\":this.props['aria-hidden']},/*#__PURE__*/React.createElement(\"div\",null,/*#__PURE__*/React.createElement(\"div\",null,/*#__PURE__*/React.createElement(\"h3\",null,\"Enter your date of birth\"),/*#__PURE__*/React.createElement(\"fieldset\",null,/*#__PURE__*/React.createElement(\"div\",null,this.renderSelectMonth()),/*#__PURE__*/React.createElement(\"div\",null,this.renderSelectDay()),/*#__PURE__*/React.createElement(\"div\",null,this.renderSelectYear()),/*#__PURE__*/React.createElement(\"button\",{disabled:!enabled,onClick:this.props.onSubmitClick},\"Submit\")))));}_filterDateMonthYear(e){if(e.target.id==='selectDay'){return this.setState({dayValue:e.target.value});}else if(e.target.id==='selectMonth'){return this.setState({monthValue:e.target.value});}else if(e.target.id==='selectYear'){return this.setState({yearValue:e.target.value});}}}AgeGate.defaultProps={minmumAge:18};","map":{"version":3,"sources":["videoplayer/components/age-gate/AgeGate.tsx"],"names":[],"mappings":"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","sourcesContent":["import * as React from 'react';\nimport { PlayerConstants, VideoPlayerNames } from '../data/player-constants';\nimport {IAgeGateProps} from './AgeGate.props';\n\n/**\n *\n * AgeGate React component for video player\n *\n */\nexport interface IDropdownState {\n    monthValue: string;\n    dayValue: string;\n    yearValue: string;\n}\n// tslint:disable-next-line:completed-docs\nexport default class AgeGate extends React.PureComponent<IAgeGateProps, IDropdownState> {\n    public static defaultProps: Partial<IAgeGateProps> = {\n        minmumAge: 18\n    };\n\n    private ageGateDiv: React.RefObject<HTMLDivElement> = React.createRef<HTMLDivElement>();\n\n    constructor(props: IAgeGateProps) {\n        super(props);\n        this._filterDateMonthYear = this._filterDateMonthYear.bind(this);\n        this.state = {\n            monthValue: 'Month',\n            dayValue: 'Day',\n            yearValue: 'Year'\n        };\n    }\n\n    public render():JSX.Element {\n        const enabled = PlayerConstants.regxForAgeGateInputValidation.test(this.state.dayValue) &&\n        PlayerConstants.regxForAgeGateInputValidation.test(this.state.monthValue) &&\n        PlayerConstants.regxForAgeGateInputValidation.test(this.state.yearValue);\n        return(\n            <div className={`${VideoPlayerNames.videoplayerContainer}__agegate__container`} ref={this.ageGateDiv} aria-hidden={this.props['aria-hidden']}>\n                <div>\n                    <div>\n                        <h3>Enter your date of birth</h3>\n                        <fieldset>\n                            <div>\n                                {this.renderSelectMonth()}\n                            </div>\n                            <div>\n                                {this.renderSelectDay()}\n                            </div>\n                            <div>\n                                {this.renderSelectYear()}\n                            </div>\n                            <button disabled={!enabled} onClick={this.props.onSubmitClick}>Submit</button>\n                        </fieldset>\n                    </div>\n                </div>\n            </div>\n        );\n    }\n\n    public getCalculatedAge = () => {\n        const day: number = Number(this.state.dayValue);\n        const month: number = Number(this.state.monthValue);\n        const year: number = Number(this.state.yearValue);\n        const today: Date = new Date();\n        let age = today.getFullYear() - year;\n        const birthdayMonthHasNotHappenedYet: boolean = today.getMonth() + 1 < month;\n        const birthdayDayHasNotHappenedYet: boolean = (today.getMonth() + 1 === month && today.getDate() < day);\n        if (birthdayMonthHasNotHappenedYet || birthdayDayHasNotHappenedYet) {\n            // user has not reached their birth month and/or birth day-of-month in the current year\n            age--;\n        }\n        const minimmumage = Number(this.props.minmumAge);\n        if(age >= minimmumage) {\n           return true;\n        } else {\n            return false;\n        }\n    };\n    // tslint:disable-next-line:no-any\n    private _filterDateMonthYear(e: any): void {\n        if(e.target.id === 'selectDay') {\n            return this.setState({dayValue: e.target.value});\n        } else if (e.target.id === 'selectMonth') {\n            return this.setState({monthValue: e.target.value});\n        } else if(e.target.id === 'selectYear') {\n            return this.setState({yearValue: e.target.value});\n        }\n    }\n\n    private renderSelectMonth = (): JSX.Element => {\n        const  maxOffset = 12;\n        const allMonth = [];\n        for(let month = 1; month <= maxOffset; month++) {\n            allMonth.push(month);\n        }\n        const monthList = allMonth.map((month) => { return(<option role={'menuitem'} key={month} value={month}>{month.toFixed()}</option>);});\n        return(\n            <select aria-expanded='false' className={`${VideoPlayerNames.videoplayerContainer}__agegate__select`} role={'menu'} onChange={this._filterDateMonthYear} value={this.state.monthValue} aria-label={'Enter your month of birth'} name='selectMonth' id='selectMonth'>\n                <option role={'menuitem'}>Month</option>\n                {monthList}\n            </select>\n        );\n    }\n    private renderSelectDay = (): JSX.Element => {\n        const  maxOffset = 31;\n        const allDay = [];\n        for(let day = 1; day <= maxOffset; day++) {\n            allDay.push(day);\n        }\n        const dayList = allDay.map((day) => {return(<option role={'menuitem'} key={day}>{day.toFixed()}</option>);});\n        return(\n            <select\n                    aria-expanded='false'\n                    className={`${VideoPlayerNames.videoplayerContainer}__agegate__select`}\n                    role={'menu'}\n                    onChange={this._filterDateMonthYear}\n                    value={this.state.dayValue}\n                    aria-label={'Enter your day of birth'}\n                    name='selectDay'\n                    id='selectDay'\n            >\n                <option role={'menuitem'}>Day</option>\n                {dayList}\n            </select>\n        );\n    }\n    private renderSelectYear = (): JSX.Element => {\n        const  maxOffset = 100;\n        const thisYear = (new Date()).getFullYear();\n        const allYear = [];\n        for(let year = 1; year <= maxOffset; year++) {\n            allYear.push(thisYear - year);\n        }\n        const yearList = allYear.map((year) => {return(<option role={'menuitem'} key={year}>{year.toFixed()}</option>);});\n        return(\n            <select aria-expanded='false' className={`${VideoPlayerNames.videoplayerContainer}__agegate__select`} role={'menu'} onChange={this._filterDateMonthYear} value={this.state.yearValue} aria-label={'Enter your year of birth'} name='selectYear' id='selectYear'>\n                <option role={'menuitem'}>Year</option>\n                {yearList}\n            </select>\n        );\n    }\n}"],"sourceRoot":"./src/"},"metadata":{},"sourceType":"module"}