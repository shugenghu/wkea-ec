{"ast":null,"code":"import\"core-js/modules/es.array.reduce.js\";import _defineProperty from\"@babel/runtime/helpers/esm/defineProperty\";function ownKeys(object,enumerableOnly){var keys=Object.keys(object);if(Object.getOwnPropertySymbols){var symbols=Object.getOwnPropertySymbols(object);if(enumerableOnly)symbols=symbols.filter(function(sym){return Object.getOwnPropertyDescriptor(object,sym).enumerable;});keys.push.apply(keys,symbols);}return keys;}function _objectSpread(target){for(var i=1;i<arguments.length;i++){var source=arguments[i]!=null?arguments[i]:{};if(i%2){ownKeys(Object(source),true).forEach(function(key){_defineProperty(target,key,source[key]);});}else if(Object.getOwnPropertyDescriptors){Object.defineProperties(target,Object.getOwnPropertyDescriptors(source));}else{ownKeys(Object(source)).forEach(function(key){Object.defineProperty(target,key,Object.getOwnPropertyDescriptor(source,key));});}}return target;}/*---------------------------------------------------------------------------------------------\r\n *  Copyright (c) Microsoft Corporation. All rights reserved.\r\n *  Licensed under the MIT License. See License.txt in the project root for license information.\r\n *--------------------------------------------------------------------------------------------*/import{PriceComponent}from'@msdyn365-commerce/components';import*as React from'react';const OrderSummaryLine=(_ref)=>{let{price,label,context,id,typeName,toBeCalculatedText,freeText,cssLabel}=_ref;return/*#__PURE__*/React.createElement(\"p\",{className:\"msc-order-summary__line-\".concat(cssLabel)},/*#__PURE__*/React.createElement(\"span\",{className:'msc-order-summary__label'},label),price||price===0?/*#__PURE__*/React.createElement(PriceComponent,{data:{price:{CustomerContextualPrice:price}},freePriceText:freeText,context:context,id:id,typeName:typeName,className:'msc-order-summary__value'}):/*#__PURE__*/React.createElement(\"span\",{className:'msc-order-summary__value'},toBeCalculatedText));};const _buildOrderSummarySection=(props,price,label,cssLabel)=>{return/*#__PURE__*/React.createElement(OrderSummaryLine,{price:price,label:label,context:props.context,id:props.id,typeName:props.typeName,toBeCalculatedText:props.toBeCalculatedText,freeText:props.freeText,telemetry:props.telemetry,cssLabel:cssLabel});};const _computedLoyaltyAmount=checkoutState=>{return checkoutState&&checkoutState.loyaltyAmount||0;};const _computeGiftCardAmount=(checkoutState,cart)=>{const giftCardCounter=(count,giftCard)=>{return count+(giftCard.Balance||0);};const giftCardTotalValue=(checkoutState.giftCardExtends||[]).reduce(giftCardCounter,0);const amount=(cart.TotalAmount||0)-_computedLoyaltyAmount(checkoutState);return Math.min(giftCardTotalValue,amount);};const getDeliveryConfiguration=(cart,channelConfiguration)=>{const pickupDeliveryModeCode=channelConfiguration&&channelConfiguration.PickupDeliveryModeCode;const cartLines=cart.CartLines||[];const deliveryModes=cartLines.map(cartLine=>cartLine.DeliveryMode);const freightFee=cart.ShippingChargeAmount;const canShip=deliveryModes.some(deliveryMode=>deliveryMode!==''&&deliveryMode===pickupDeliveryModeCode?false:true);const hasDeliveryMethod=deliveryModes.some(deliveryMode=>!!deliveryMode);const hasShippingMethod=deliveryModes.some(deliveryMode=>!!deliveryMode&&deliveryMode!==pickupDeliveryModeCode);return{canShip,hasDeliveryMethod,hasShippingMethod,freightFee};};export const OrderSummary=props=>{const{NetPrice,TaxAmount,DiscountAmountWithoutTax=0,TotalAmount,OtherChargeAmount}=props.cart;const{canShip,hasDeliveryMethod,hasShippingMethod,freightFee}=getDeliveryConfiguration(props.cart,props.channelConfiguration);const reactNodes={subtotal:_buildOrderSummarySection(props,NetPrice,props.subTotalLabel,'net-price'),tax:_buildOrderSummarySection(props,hasDeliveryMethod?TaxAmount:undefined,props.taxLabel,'tax-amount'),orderTotal:_buildOrderSummarySection(props,TotalAmount,props.orderTotalLabel,'total'),otherCharge:OtherChargeAmount&&_buildOrderSummarySection(props,OtherChargeAmount,props.otherChargeLabel,'other-charges')||undefined};if(canShip){reactNodes.shipping=_buildOrderSummarySection(props,hasShippingMethod?freightFee:undefined,props.shippingLabel,'shipping');}if(props.checkoutState){const giftCardAmount=_computeGiftCardAmount(props.checkoutState,props.cart);const loyaltyAmount=_computedLoyaltyAmount(props.checkoutState);const totalAmountAfterGiftCard=(TotalAmount||0)-giftCardAmount-loyaltyAmount;if(loyaltyAmount>0){reactNodes.loyalty=_buildOrderSummarySection(props,-loyaltyAmount,props.loyaltyLabel||'Loyalty amount','loyalty');}if(giftCardAmount>0){reactNodes.giftCard=_buildOrderSummarySection(props,-giftCardAmount,props.giftcardLabel||'Gift card amount','gift-card');}reactNodes.orderTotal=_buildOrderSummarySection(_objectSpread(_objectSpread({},props),{},{freeText:undefined}),totalAmountAfterGiftCard,props.orderTotalLabel,'total');}if(DiscountAmountWithoutTax>0){reactNodes.totalDiscounts=_buildOrderSummarySection(props,-DiscountAmountWithoutTax,props.totalDiscountsLabel,'total-discounts');}return reactNodes;};","map":{"version":3,"sources":["order-summary-lineitem.tsx"],"names":[],"mappings":"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","sourcesContent":["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { PriceComponent } from '@msdyn365-commerce/components';\nimport { ICoreContext, ITelemetry } from '@msdyn365-commerce/core';\nimport { ICheckoutState, IGiftCardExtend } from '@msdyn365-commerce/global-state';\nimport { Cart, ChannelConfiguration } from '@msdyn365-commerce/retail-proxy';\nimport * as React from 'react';\n\nexport interface IOrderSummaryProps {\n    subTotalLabel: string;\n    shippingLabel: string;\n    otherChargeLabel: string;\n    taxLabel: string;\n    orderTotalLabel: string;\n    loyaltyLabel?:string;\n    giftcardLabel?:string;\n    totalDiscountsLabel: string;\n    context: ICoreContext;\n    telemetry: ITelemetry;\n    cart: Cart;\n    channelConfiguration: ChannelConfiguration;\n    id: string;\n    typeName: string;\n    freeText?:string;\n    toBeCalculatedText?: string;\n    checkoutState?: ICheckoutState;\n}\n\nexport interface IOrderSummaryLines {\n    subtotal: React.ReactNode;\n    shipping?: React.ReactNode;\n    otherCharge?: React.ReactNode;\n    tax: React.ReactNode;\n    orderTotal: React.ReactNode;\n    totalDiscounts?: React.ReactNode;\n    giftCard?:React.ReactNode;\n    loyalty?: React.ReactNode;\n}\n\ninterface IOrderSummaryLineProps {\n    label: string;\n    context: ICoreContext;\n    telemetry: ITelemetry;\n    price?: number;\n    freeText?:string;\n    toBeCalculatedText?: string;\n    id: string;\n    typeName: string;\n    cssLabel: string;\n}\n\ninterface IShippingOrderLine {\n    cart: Cart;\n    channelConfiguration: ChannelConfiguration;\n    canShip?: boolean;\n    hasDeliveryMethod?: boolean;\n    hasShippingMethod?: boolean;\n    freightFee?: number;\n}\n\nconst OrderSummaryLine: React.FC<IOrderSummaryLineProps> = ({\n    price,\n    label,\n    context,\n    id,\n    typeName,\n    toBeCalculatedText,\n    freeText,\n    cssLabel\n}) => {\n    return(\n        <p className={`msc-order-summary__line-${cssLabel}`}>\n            <span className='msc-order-summary__label'>{label}</span>\n            {price || price === 0 ? (\n                <PriceComponent\n                    data={{\n                        price: {CustomerContextualPrice: price}\n                    }}\n                    freePriceText={freeText}\n                    context={context}\n                    id={id}\n                    typeName={typeName}\n                    className={'msc-order-summary__value'}\n                />\n            ) : (\n                <span className='msc-order-summary__value'>{toBeCalculatedText}</span>\n            )}\n        </p>\n    );\n};\n\nconst _buildOrderSummarySection = (\n    props: IOrderSummaryProps,\n    price: number | undefined,\n    label: string,\n    cssLabel: string\n    ):React.ReactNode => {\n    return (\n        <OrderSummaryLine\n            price = { price }\n            label = { label }\n            context = { props.context }\n            id = { props.id }\n            typeName = { props.typeName }\n            toBeCalculatedText = { props.toBeCalculatedText }\n            freeText = { props.freeText }\n            telemetry = {props.telemetry}\n            cssLabel = {cssLabel}\n        />\n    );\n};\n\nconst _computedLoyaltyAmount = (checkoutState: ICheckoutState): number => {\n    return (checkoutState && checkoutState.loyaltyAmount) || 0;\n};\n\nconst _computeGiftCardAmount = (checkoutState: ICheckoutState, cart: Cart): number => {\n\n    const giftCardCounter = (count: number, giftCard: IGiftCardExtend) => {\n        return count + (giftCard.Balance || 0);\n    };\n    const giftCardTotalValue = (checkoutState.giftCardExtends || []).reduce(giftCardCounter, 0);\n    const amount = (cart.TotalAmount || 0) - _computedLoyaltyAmount(checkoutState);\n    return Math.min(giftCardTotalValue, amount);\n};\n\nconst getDeliveryConfiguration = (cart: Cart, channelConfiguration: ChannelConfiguration):IShippingOrderLine =>  {\n\n    const pickupDeliveryModeCode = channelConfiguration && channelConfiguration.PickupDeliveryModeCode;\n    const cartLines = cart.CartLines || [];\n    const deliveryModes = cartLines.map(cartLine => cartLine.DeliveryMode);\n\n    const freightFee = cart.ShippingChargeAmount;\n    const canShip = deliveryModes.some(deliveryMode => (deliveryMode !== '' && (deliveryMode === pickupDeliveryModeCode)) ? false : true);\n    const hasDeliveryMethod = deliveryModes.some(deliveryMode => !!deliveryMode);\n    const hasShippingMethod = deliveryModes.some(deliveryMode => !!deliveryMode && deliveryMode !== pickupDeliveryModeCode);\n    return {\n        canShip,\n        hasDeliveryMethod,\n        hasShippingMethod,\n        freightFee\n    } as IShippingOrderLine;\n};\n\nexport const OrderSummary = (props: IOrderSummaryProps) => {\n    const { NetPrice, TaxAmount, DiscountAmountWithoutTax = 0, TotalAmount, OtherChargeAmount } = props.cart;\n    const { canShip, hasDeliveryMethod, hasShippingMethod, freightFee } = getDeliveryConfiguration(props.cart, props.channelConfiguration);\n    const reactNodes:IOrderSummaryLines = {\n        subtotal: _buildOrderSummarySection(props, NetPrice, props.subTotalLabel, 'net-price'),\n        tax: _buildOrderSummarySection(props, hasDeliveryMethod ? TaxAmount: undefined, props.taxLabel, 'tax-amount'),\n        orderTotal: _buildOrderSummarySection(props, TotalAmount, props.orderTotalLabel, 'total'),\n        otherCharge: OtherChargeAmount && _buildOrderSummarySection(props, OtherChargeAmount, props.otherChargeLabel, 'other-charges') || undefined,\n    };\n\n    if(canShip) {\n        reactNodes.shipping =_buildOrderSummarySection(props, hasShippingMethod ? freightFee : undefined, props.shippingLabel, 'shipping');\n    }\n    if(props.checkoutState) {\n        const giftCardAmount = _computeGiftCardAmount(props.checkoutState, props.cart);\n        const loyaltyAmount = _computedLoyaltyAmount(props.checkoutState);\n        const totalAmountAfterGiftCard = (TotalAmount || 0) - giftCardAmount - loyaltyAmount;\n\n        if(loyaltyAmount > 0) {\n            reactNodes.loyalty = _buildOrderSummarySection(props, -loyaltyAmount, props.loyaltyLabel || 'Loyalty amount', 'loyalty');\n        }\n\n        if(giftCardAmount > 0) {\n            reactNodes.giftCard = _buildOrderSummarySection(props, -giftCardAmount, props.giftcardLabel || 'Gift card amount', 'gift-card');\n        }\n\n        reactNodes.orderTotal = _buildOrderSummarySection({...props, freeText: undefined }, totalAmountAfterGiftCard, props.orderTotalLabel, 'total');\n    }\n\n    if(DiscountAmountWithoutTax > 0) {\n        reactNodes.totalDiscounts = _buildOrderSummarySection(props, -DiscountAmountWithoutTax, props.totalDiscountsLabel, 'total-discounts');\n    }\n\n    return reactNodes;\n};"],"sourceRoot":"./src/"},"metadata":{},"sourceType":"module"}