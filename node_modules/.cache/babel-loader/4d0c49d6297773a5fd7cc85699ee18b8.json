{"ast":null,"code":"import*as React from'react';var getDropdownItem=function getDropdownItem(key,value,selectedValue){var isSelected;if(typeof key==='number'){isSelected=key===selectedValue;}else{isSelected=typeof selectedValue==='string'&&(key||'').toLowerCase()===(selectedValue||'').toLowerCase();}return/*#__PURE__*/React.createElement(\"option\",{key:key,value:key,\"aria-selected\":isSelected},value);};var AdressDropdown=function AdressDropdown(_ref){var id=_ref.id,name=_ref.name,className=_ref.className,value=_ref.value,additionalAddributes=_ref.additionalAddributes,displayData=_ref.displayData,onChange=_ref.onChange;return/*#__PURE__*/React.createElement(\"select\",Object.assign({id:id,className:\"\".concat(className,\"__dropdown\"),name:name,value:value,onChange:onChange},additionalAddributes||{}),displayData&&displayData.map(function(item){return getDropdownItem(item.key,item.value,value);}));};export default AdressDropdown;","map":{"version":3,"sources":["common/components/address-dropdown.tsx"],"names":[],"mappings":"AAIA,MAAO,GAAK,CAAA,KAAZ,KAAuB,OAAvB,CAYA,GAAM,CAAA,eAAe,CAAG,QAAlB,CAAA,eAAkB,CAAC,GAAD,CAAwB,KAAxB,CAAyC,aAAzC,CAA6F,CACjH,GAAI,CAAA,UAAJ,CACA,GAAI,MAAQ,CAAA,GAAR,GAAiB,QAArB,CAAgC,CAC5B,UAAU,CAAI,GAAG,GAAK,aAAtB,CACH,CAFD,IAEO,CACH,UAAU,CAAG,MAAO,CAAA,aAAP,GAAwB,QAAxB,EAAoC,CAAC,GAAG,EAAI,EAAR,EAAY,WAAZ,KAA8B,CAAC,aAAa,EAAI,EAAlB,EAAsB,WAAtB,EAA/E,CACH,CAED,mBACI,KAAA,CAAA,aAAA,CAAA,QAAA,CAAA,CAAQ,GAAG,CAAE,GAAb,CAAkB,KAAK,CAAE,GAAzB,CAA4B,gBAAiB,UAA7C,CAAA,CACK,KADL,CADJ,CAKH,CAbD,CAeA,GAAM,CAAA,cAAc,CAA8B,QAA5C,CAAA,cAA4C,UAC9C,CAAA,EAD8C,MAC9C,EAD8C,CAE9C,IAF8C,MAE9C,IAF8C,CAG9C,SAH8C,MAG9C,SAH8C,CAI9C,KAJ8C,MAI9C,KAJ8C,CAK9C,oBAL8C,MAK9C,oBAL8C,CAM9C,WAN8C,MAM9C,WAN8C,CAO9C,QAP8C,MAO9C,QAP8C,oBAS1C,KAAA,CAAA,aAAA,CAAA,QAAA,CAAA,MAAA,CAAA,MAAA,CAAA,CACI,EAAE,CAAE,EADR,CAEI,SAAS,WAAK,SAAL,cAFb,CAGI,IAAI,CAAE,IAHV,CAII,KAAK,CAAE,KAJX,CAKI,QAAQ,CAAE,QALd,CAAA,CAMS,oBAAoB,EAAI,EANjC,CAAA,CAQK,WAAW,EAAI,WAAW,CAAC,GAAZ,CAAgB,SAAA,IAAI,QAE5B,CAAA,eAAe,CAAC,IAAI,CAAC,GAAN,CAAW,IAAI,CAAC,KAAhB,CAAuB,KAAvB,CAFa,EAApB,CARpB,CAT0C,EAAlD,CAyBA,cAAe,CAAA,cAAf","sourcesContent":["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nimport * as React from 'react';\n\nexport interface IAdressDropdown {\n    id: string;\n    name: string;\n    className: string;\n    value: string | number;\n    additionalAddributes?: object;\n    displayData: { key?: string | number; value?: string }[];\n    onChange(event: React.ChangeEvent<HTMLSelectElement>): void;\n}\n\nconst getDropdownItem = (key?: string | number, value?: string , selectedValue?: string | number): React.ReactNode => {\n    let isSelected: boolean;\n    if (typeof (key) === 'number')  {\n        isSelected =  key === selectedValue;\n    } else {\n        isSelected = typeof(selectedValue)==='string' && (key || '').toLowerCase() === (selectedValue || '').toLowerCase();\n    }\n\n    return (\n        <option key={key} value={key} aria-selected={isSelected}>\n            {value}\n        </option>\n    );\n};\n\nconst AdressDropdown: React.FC<IAdressDropdown> = ({\n    id,\n    name,\n    className,\n    value,\n    additionalAddributes,\n    displayData,\n    onChange\n}) => (\n        <select\n            id={id}\n            className={`${className}__dropdown`}\n            name={name}\n            value={value}\n            onChange={onChange}\n            {...(additionalAddributes || {})}\n        >\n            {displayData && displayData.map(item =>\n                (\n                    getDropdownItem(item.key, item.value, value)\n                ))\n            }\n        </select>\n    );\n\nexport default AdressDropdown;\n"],"sourceRoot":"./src/"},"metadata":{},"sourceType":"module"}