{"ast":null,"code":"import _regeneratorRuntime from\"@babel/runtime/regenerator\";import _defineProperty from\"@babel/runtime/helpers/esm/defineProperty\";import _asyncToGenerator from\"@babel/runtime/helpers/esm/asyncToGenerator\";import _classCallCheck from\"@babel/runtime/helpers/esm/classCallCheck\";function ownKeys(object,enumerableOnly){var keys=Object.keys(object);if(Object.getOwnPropertySymbols){var symbols=Object.getOwnPropertySymbols(object);if(enumerableOnly)symbols=symbols.filter(function(sym){return Object.getOwnPropertyDescriptor(object,sym).enumerable;});keys.push.apply(keys,symbols);}return keys;}function _objectSpread(target){for(var i=1;i<arguments.length;i++){var source=arguments[i]!=null?arguments[i]:{};if(i%2){ownKeys(Object(source),true).forEach(function(key){_defineProperty(target,key,source[key]);});}else if(Object.getOwnPropertyDescriptors){Object.defineProperties(target,Object.getOwnPropertyDescriptors(source));}else{ownKeys(Object(source)).forEach(function(key){Object.defineProperty(target,key,Object.getOwnPropertyDescriptor(source,key));});}}return target;}import{createObservableDataAction,sendCommerceRequest}from'@msdyn365-commerce/core';/**\r\n * Check Out action Input\r\n */export var CheckOutInput=function CheckOutInput(cartId,cartVersion,receiptEmail,cartTenderLines,billingAddress){var _this=this;_classCallCheck(this,CheckOutInput);this.getCacheKey=function(){return\"\".concat(_this.cartId,\"-\").concat(_this.cartVersion);};this.getCacheObjectType=function(){return'CheckOut';};this.dataCacheType=function(){return'none';};this.cartId=cartId;this.cartVersion=cartVersion;this.receiptEmail=receiptEmail;this.cartTenderLines=cartTenderLines;this.billingAddress=billingAddress;};/**\r\n * Calls the Retail API to check out and returns sales order\r\n */export function checkOutAction(_x,_x2){return _checkOutAction.apply(this,arguments);}function _checkOutAction(){_checkOutAction=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee(input,ctx){var apiSettings,requestUrl,requestOptions,requestBody;return _regeneratorRuntime.wrap(function _callee$(_context){while(1){switch(_context.prev=_context.next){case 0:apiSettings=ctx.requestContext.apiSettings;requestUrl=\"\".concat(apiSettings.baseUrl,\"Commerce/Carts('\").concat(input.cartId,\"')/Checkout?api-version=7.3\");requestOptions={headers:{oun:apiSettings.oun,'Content-Type':'application/json'}};if(requestOptions.headers&&ctx.requestContext.user.token){requestOptions.headers.Authorization=\"id_token \".concat(ctx.requestContext.user.token);}if(input.cartTenderLines&&input.cartTenderLines.length){input.cartTenderLines=input.cartTenderLines.map(function(cartTenderLineItem){// @ts-ignore\n// tslint:disable-next-line:prefer-type-cast\ncartTenderLineItem['@odata.type']='#Microsoft.Dynamics.Commerce.Runtime.DataModel.CartTenderLine';// @ts-ignore\n// tslint:disable-next-line:prefer-type-cast\ncartTenderLineItem['Amount@odata.type']='#Decimal';if(cartTenderLineItem.TokenizedPaymentCard){// @ts-ignore\n// tslint:disable-next-line:prefer-type-cast\ncartTenderLineItem.TokenizedPaymentCard['@odata.type']='#Microsoft.Dynamics.Commerce.Runtime.DataModel.TokenizedPaymentCard';// Force the House prop to be set, so that call succeeds\n// @ts-ignore: House prop not yet typed\nif(!cartTenderLineItem.TokenizedPaymentCard.House){// @ts-ignore: House prop not yet typed\ncartTenderLineItem.TokenizedPaymentCard.House='N/A';}if(cartTenderLineItem.TokenizedPaymentCard.CardTokenInfo){// @ts-ignore\n// tslint:disable-next-line:prefer-type-cast\ncartTenderLineItem.TokenizedPaymentCard.CardTokenInfo['@odata.type']='#Microsoft.Dynamics.Commerce.Runtime.DataModel.CardTokenInfo';}if(input.billingAddress){var _input$billingAddress=input.billingAddress,Phone=_input$billingAddress.Phone,_input$billingAddress2=_input$billingAddress.ThreeLetterISORegionName,ThreeLetterISORegionName=_input$billingAddress2===void 0?'':_input$billingAddress2,Street=_input$billingAddress.Street,City=_input$billingAddress.City,State=_input$billingAddress.State,ZipCode=_input$billingAddress.ZipCode;cartTenderLineItem.TokenizedPaymentCard=_objectSpread(_objectSpread({},cartTenderLineItem.TokenizedPaymentCard),{},{Phone:Phone,Country:ThreeLetterISORegionName.toUpperCase(),Address1:Street,City:City,State:State,Zip:ZipCode});}}return cartTenderLineItem;});}requestBody=_objectSpread({receiptEmail:input.receiptEmail,cartVersion:input.cartVersion||null},input.cartTenderLines&&{cartTenderLines:input.cartTenderLines});// Perform check-out operation\nreturn _context.abrupt(\"return\",sendCommerceRequest(requestUrl,'post',requestBody,requestOptions).then(function(response){if(response.status>=200&&response.status<300&&response.data){return response.data;}else if(response.data){throw response.data;}throw new Error('[checkOutAction] Invalid response recieved from RetailServer');}));case 7:case\"end\":return _context.stop();}}},_callee);}));return _checkOutAction.apply(this,arguments);}export default createObservableDataAction({id:'@msdyn365-commerce-modules/retail-actions/checkout',action:checkOutAction});","map":{"version":3,"sources":["../../src/checkout.ts"],"names":[],"mappings":"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","sourcesContent":["import {\n    CacheType,\n    createObservableDataAction,\n    IAction,\n    IActionContext,\n    IActionInput,\n    IHTTPRequestOptions,\n    IHTTPResponse,\n    sendCommerceRequest\n} from '@msdyn365-commerce/core';\nimport { Address, CartTenderLine, SalesOrder } from '@msdyn365-commerce/retail-proxy';\n\n/**\n * Check Out action Input\n */\nexport class CheckOutInput implements IActionInput {\n    public cartId: string;\n    public cartVersion: number;\n    public receiptEmail?: string;\n    public cartTenderLines?: CartTenderLine[];\n    public billingAddress?: Address;\n\n    constructor(cartId: string, cartVersion: number, receiptEmail?: string, cartTenderLines?: CartTenderLine[], billingAddress?: Address) {\n        this.cartId = cartId;\n        this.cartVersion = cartVersion;\n        this.receiptEmail = receiptEmail;\n        this.cartTenderLines = cartTenderLines;\n        this.billingAddress = billingAddress;\n    }\n\n    public getCacheKey = () => `${this.cartId}-${this.cartVersion}`;\n    public getCacheObjectType = () => 'CheckOut';\n    public dataCacheType = (): CacheType => 'none';\n}\n\n/**\n * Calls the Retail API to check out and returns sales order\n */\nexport async function checkOutAction(input: CheckOutInput, ctx: IActionContext): Promise<SalesOrder> {\n    const { apiSettings } = ctx.requestContext;\n    const requestUrl = `${apiSettings.baseUrl}Commerce/Carts('${input.cartId}')/Checkout?api-version=7.3`;\n    const requestOptions: IHTTPRequestOptions = {\n        headers: {\n            oun: apiSettings.oun,\n            'Content-Type': 'application/json'\n        }\n    };\n\n    if (requestOptions.headers && ctx.requestContext.user.token) {\n        requestOptions.headers.Authorization = `id_token ${ctx.requestContext.user.token}`;\n    }\n\n    if (input.cartTenderLines && input.cartTenderLines.length) {\n        input.cartTenderLines = input.cartTenderLines.map((cartTenderLineItem: CartTenderLine) => {\n            // @ts-ignore\n            // tslint:disable-next-line:prefer-type-cast\n            cartTenderLineItem['@odata.type'] = '#Microsoft.Dynamics.Commerce.Runtime.DataModel.CartTenderLine';\n            // @ts-ignore\n            // tslint:disable-next-line:prefer-type-cast\n            cartTenderLineItem['Amount@odata.type'] = '#Decimal';\n\n            if (cartTenderLineItem.TokenizedPaymentCard) {\n                // @ts-ignore\n                // tslint:disable-next-line:prefer-type-cast\n                cartTenderLineItem.TokenizedPaymentCard['@odata.type'] =\n                    '#Microsoft.Dynamics.Commerce.Runtime.DataModel.TokenizedPaymentCard';\n\n                // Force the House prop to be set, so that call succeeds\n                // @ts-ignore: House prop not yet typed\n                if (!cartTenderLineItem.TokenizedPaymentCard.House) {\n                    // @ts-ignore: House prop not yet typed\n                    cartTenderLineItem.TokenizedPaymentCard.House = 'N/A';\n                }\n\n                if (cartTenderLineItem.TokenizedPaymentCard.CardTokenInfo) {\n                    // @ts-ignore\n                    // tslint:disable-next-line:prefer-type-cast\n                    cartTenderLineItem.TokenizedPaymentCard.CardTokenInfo['@odata.type'] =\n                        '#Microsoft.Dynamics.Commerce.Runtime.DataModel.CardTokenInfo';\n                }\n\n                if (input.billingAddress) {\n                    const { Phone, ThreeLetterISORegionName = '', Street, City, State, ZipCode } = input.billingAddress;\n                    cartTenderLineItem.TokenizedPaymentCard = {\n                        ...cartTenderLineItem.TokenizedPaymentCard,\n                        Phone,\n                        Country: ThreeLetterISORegionName.toUpperCase(),\n                        Address1: Street,\n                        City,\n                        State,\n                        Zip: ZipCode\n                    };\n                }\n            }\n\n            return cartTenderLineItem;\n        });\n    }\n\n    const requestBody = {\n        receiptEmail: input.receiptEmail,\n        cartVersion: input.cartVersion || null,\n        ...(input.cartTenderLines && { cartTenderLines: input.cartTenderLines })\n    };\n\n    // Perform check-out operation\n    return sendCommerceRequest<SalesOrder>(requestUrl, 'post', requestBody, requestOptions).then((response: IHTTPResponse<SalesOrder>) => {\n        if (response.status >= 200 && response.status < 300 && response.data) {\n            return response.data;\n        } else if (response.data) {\n            throw response.data;\n        }\n        throw new Error('[checkOutAction] Invalid response recieved from RetailServer');\n    });\n}\n\nexport default createObservableDataAction({\n    id: '@msdyn365-commerce-modules/retail-actions/checkout',\n    action: <IAction<SalesOrder>>checkOutAction\n});\n"],"sourceRoot":""},"metadata":{},"sourceType":"module"}