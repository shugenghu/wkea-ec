{"ast":null,"code":"import \"core-js/modules/es.object.assign.js\";\nimport _defineProperty from \"@babel/runtime/helpers/esm/defineProperty\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport { __decorate } from \"tslib\";\n/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { Button, getPayloadObject, getTelemetryAttributes, getTelemetryObject, KeyCodes, Modal, ModalBody, ModalHeader, onTelemetryClick, Popover, TelemetryConstant } from '@msdyn365-commerce-modules/utilities';\nimport { CartIconComponent, WishListIconComponent } from '@msdyn365-commerce/components';\nimport * as MsDyn365 from '@msdyn365-commerce/core';\nimport classnames from 'classnames';\nimport { computed } from 'mobx';\nimport * as React from 'react';\nimport { Logo, NavIcon } from './components';\n/**\n *\n * Header component\n * @extends {React.PureComponent<IHeaderProps<IHeaderData>>}\n */\n\nclass Header extends React.PureComponent {\n  constructor(props) {\n    super(props);\n    /* Handle link text change*/\n\n    this.handleLinkTextChange = linkIndex => event => {\n      if (this.props.config.myAccountLinks && this.props.config.myAccountLinks[linkIndex]) {\n        this.props.config.myAccountLinks[linkIndex].linkText = event.target.value;\n      }\n    };\n\n    this.popOverRef = /*#__PURE__*/React.createRef();\n    this._toggleNavbar = this._toggleNavbar.bind(this);\n    this._togglePopover = this._togglePopover.bind(this);\n    this._keydown = this._keydown.bind(this);\n    this.state = {\n      mobileMenuCollapsed: true,\n      signinPopoverOpen: false\n    };\n    this.telemetryContent = getTelemetryObject(this.props.context.request.telemetryPageName, this.props.friendlyName, this.props.telemetry);\n  }\n\n  get displayName() {\n    var _this$props$data$acco;\n\n    const customer = (_this$props$data$acco = this.props.data.accountInformation) === null || _this$props$data$acco === void 0 ? void 0 : _this$props$data$acco.result;\n    return customer ? customer.FirstName || customer.Name : undefined;\n  }\n\n  componentDidMount() {\n    if (MsDyn365.msdyn365Commerce.isBrowser) {\n      window.addEventListener('keydown', this._keydown);\n    }\n  }\n\n  componentWillUnmount() {\n    if (MsDyn365.msdyn365Commerce.isBrowser) {\n      window.removeEventListener('keydown', this._keydown, false);\n    }\n  } // tslint:disable-next-line: max-func-body-length\n\n\n  render() {\n    const {\n      id,\n      typeName,\n      data: {\n        accountInformation,\n        cart: {\n          result: cart\n        }\n      },\n      context: {\n        request: {\n          user\n        }\n      },\n      context,\n      resources: {\n        cartLabel\n      }\n    } = this.props;\n    const {\n      logoLink,\n      logoImage\n    } = this.props.config;\n    const headerClassName = classnames('ms-header', this.props.config.className);\n    const navbarKey = 'header-nav-mobile';\n    const customer = accountInformation && accountInformation.result;\n\n    const cartIconSlot = this._getSlot('cartIcon');\n\n    const menuBarSlot = this._getSlot('menuBar');\n\n    const searchSlot = this._getSlot('search');\n\n    const siteOptionsSlot = this._getSlot('siteOptions');\n\n    const viewProps = _objectSpread(_objectSpread(_objectSpread({}, this.props), this.state), {}, {\n      logo: /*#__PURE__*/React.createElement(Logo, Object.assign({}, {\n        link: logoLink,\n        image: logoImage,\n        className: 'ms-header__logo',\n        gridSettings: this.props.context.request.gridSettings,\n        requestContext: this.props.context.request,\n        telemetryContent: this.telemetryContent\n      })),\n      wishListIconDesktop: /*#__PURE__*/React.createElement(WishListIconComponent, {\n        className: 'ms-header__wishlist-desktop',\n        showButtonTooltip: true,\n        wishlistTooltipText: this.props.resources.wishlistTooltipText,\n        context: context,\n        id: id,\n        typeName: typeName,\n        telemetryContent: this.telemetryContent,\n        data: {}\n      }),\n      wishListIconMobile: /*#__PURE__*/React.createElement(WishListIconComponent, {\n        className: 'ms-header__wishlist-mobile',\n        showButtonTooltip: true,\n        wishlistTooltipText: this.props.resources.wishlistTooltipText,\n        context: context,\n        id: id,\n        typeName: typeName,\n        telemetryContent: this.telemetryContent,\n        data: {}\n      }),\n      cartIcon: cartIconSlot && cartIconSlot.length > 0 ? cartIconSlot[0] : cart && /*#__PURE__*/React.createElement(CartIconComponent, {\n        cartLabel: cartLabel,\n        context: context,\n        id: id,\n        typeName: typeName,\n        telemetryContent: this.telemetryContent,\n        data: {\n          cart: cart\n        }\n      }),\n      navIcon: /*#__PURE__*/React.createElement(NavIcon, Object.assign({}, {\n        resources: this.props.resources,\n        isExpanded: !this.state.mobileMenuCollapsed,\n        targetId: navbarKey,\n        toggleNavBar: this._toggleNavbar,\n        telemetryContent: this.telemetryContent\n      })),\n      menuBar: menuBarSlot && menuBarSlot.length && menuBarSlot || [],\n      search: searchSlot && searchSlot.length && searchSlot || [],\n      siteOptions: siteOptionsSlot && siteOptionsSlot.length && siteOptionsSlot || [],\n      className: headerClassName,\n      HeaderTag: {\n        moduleProps: this.props,\n        className: classnames(headerClassName),\n        tag: 'header'\n      },\n      HeaderContainer: {\n        className: classnames('ms-header__container')\n      },\n      HeaderTopBarContainer: {\n        className: classnames('ms-header__topbar')\n      },\n      Divider: {\n        className: classnames('ms-header__divider')\n      },\n      MobileMenuContainer: {\n        tag: Modal,\n        id: navbarKey,\n        className: 'ms-header__mobile-hamburger',\n        isOpen: !this.state.mobileMenuCollapsed,\n        wrapClassName: 'ms-header__modal'\n      },\n      MobileMenuHeader: /*#__PURE__*/React.createElement(ModalHeader, {\n        className: 'ms-header__mobile-hamburger-menu-header',\n        toggle: this._toggleNavbar\n      }),\n      MobileMenuBodyContainer: {\n        tag: ModalBody,\n        className: 'ms-header__mobile-hamburger-menu-body'\n      },\n      MobileMenuLinksContainer: {\n        className: 'ms-header__mobile-hamburger-menu-links'\n      },\n      AccountInfoDropdownParentContainer: {\n        className: 'ms-header__account-info'\n      },\n      AccountInfoDropdownPopoverConentContainer: customer && this.displayName && {\n        tag: Popover,\n        id: 'myprofilePopover',\n        className: 'ms-header__account-info-content',\n        placement: 'bottom',\n        isOpen: this.state.signinPopoverOpen,\n        target: this.popOverRef,\n        toggle: this._togglePopover\n      } || undefined,\n      signInLink: this._getSigninButton(customer, user, this.props.resources),\n      signOutLink: this._getSignOutButton(customer, user, this.props.resources),\n      accountInfoDropdownButton: this._getAccountInfoDropdownButton(customer),\n      accountLinks: this._getAccountLinks(customer)\n    });\n\n    return this.props.renderView(viewProps);\n  }\n\n  _getSlot(slotName) {\n    const {\n      slots\n    } = this.props;\n    return slots && slots[slotName] && slots[slotName].length && slots[slotName] || null;\n  }\n\n  _getSigninButton(customer, user, resources) {\n    const payLoad = getPayloadObject('click', this.telemetryContent, TelemetryConstant.SignIn);\n    const attributes = getTelemetryAttributes(this.telemetryContent, payLoad);\n    return !customer && /*#__PURE__*/React.createElement(Button, Object.assign({\n      className: 'ms-header__signin-button',\n      title: resources.signInLinkText,\n      href: user && user.signInUrl,\n      \"aria-label\": resources.signInLinkAriaText,\n      onClick: onTelemetryClick(this.telemetryContent, payLoad, 'Sign in')\n    }, attributes), /*#__PURE__*/React.createElement(\"span\", {\n      className: 'ms-header__signin-button-text',\n      \"aria-hidden\": true\n    }, resources.signInLinkText));\n  }\n\n  _getSignOutButton(customer, user, resources) {\n    const payLoad = getPayloadObject('click', this.telemetryContent, TelemetryConstant.SignOut);\n    const attributes = getTelemetryAttributes(this.telemetryContent, payLoad);\n    return customer && this.displayName && /*#__PURE__*/React.createElement(Button, Object.assign({\n      className: 'ms-header__signout-button',\n      title: resources.signOutLinkText,\n      href: user && user.signOutUrl || '',\n      \"aria-label\": resources.signOutLinkAriaText,\n      onClick: onTelemetryClick(this.telemetryContent, payLoad, 'Sign out')\n    }, attributes), /*#__PURE__*/React.createElement(\"span\", {\n      className: 'ms-header__signout-button-text',\n      \"aria-hidden\": true\n    }, resources.signOutLinkText));\n  }\n\n  _getAccountInfoDropdownButton(customer) {\n    const payLoad = getPayloadObject('click', this.telemetryContent, TelemetryConstant.MyProfile);\n    const attributes = getTelemetryAttributes(this.telemetryContent, payLoad);\n    return customer && this.displayName && /*#__PURE__*/React.createElement(Button, Object.assign({\n      innerRef: this.popOverRef,\n      className: 'ms-header__profile-button',\n      \"aria-describedby\": 'myprofilePopover',\n      onClick: this._togglePopover,\n      color: 'link',\n      \"aria-expanded\": this.state.signinPopoverOpen\n    }, attributes), /*#__PURE__*/React.createElement(\"span\", {\n      className: 'ms-profile-button-text'\n    }, this.displayName));\n  }\n\n  _getAccountLinks(customer) {\n    const {\n      myAccountLinks\n    } = this.props.config;\n    const payLoad = getPayloadObject('click', this.telemetryContent, '');\n\n    if (!customer || !this.displayName || !myAccountLinks || !myAccountLinks.length) {\n      return undefined;\n    }\n\n    return myAccountLinks.map((cta, index) => {\n      payLoad.contentAction.etext = cta.linkText;\n      const attributes = getTelemetryAttributes(this.telemetryContent, payLoad);\n      const editableLink = {\n        ariaLabel: cta.ariaLabel,\n        className: 'ms-signin-info__account-link-button',\n        linkText: cta.linkText,\n        linkUrl: cta.linkUrl.destinationUrl,\n        openInNewTab: cta.openInNewTab,\n        role: 'button',\n        additionalProperties: attributes\n      };\n      return /*#__PURE__*/React.createElement(MsDyn365.Link, {\n        key: index,\n        link: editableLink,\n        editProps: {\n          onTextChange: this.handleLinkTextChange(index),\n          requestContext: this.props.context.request\n        }\n      });\n    });\n  }\n\n  _toggleNavbar() {\n    this.setState({\n      mobileMenuCollapsed: !this.state.mobileMenuCollapsed\n    });\n  }\n\n  _togglePopover() {\n    this.setState({\n      signinPopoverOpen: !this.state.signinPopoverOpen\n    });\n  }\n\n  _keydown(e) {\n    if (e.keyCode === KeyCodes.Escape) {\n      this.setState({\n        mobileMenuCollapsed: true\n      });\n    }\n  }\n\n}\n\n__decorate([computed], Header.prototype, \"displayName\", null);\n\nexport default Header;","map":{"version":3,"sources":["/Users/User/Documents/wkea-ec/Msdyn365.Commerce.Online/node_modules/source-map-loader/index.js!/Users/User/Documents/wkea-ec/Msdyn365.Commerce.Online/src/modules/header/header.tsx"],"names":[],"mappings":"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","sourcesContent":["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nimport {\n    Button, getPayloadObject, getTelemetryAttributes, getTelemetryObject, IModuleProps, INodeProps, ITelemetryContent, KeyCodes, Modal,\n    ModalBody, ModalHeader, onTelemetryClick, Popover, TelemetryConstant\n} from '@msdyn365-commerce-modules/utilities';\nimport { CartIconComponent, WishListIconComponent } from '@msdyn365-commerce/components';\nimport * as MsDyn365 from '@msdyn365-commerce/core';\nimport { Customer } from '@msdyn365-commerce/retail-proxy';\nimport classnames from 'classnames';\nimport { computed } from 'mobx';\nimport * as React from 'react';\nimport { Logo, NavIcon } from './components';\nimport { IHeaderData } from './header.data';\nimport { IHeaderProps, IHeaderResources, IMyAccountLinksData } from './header.props.autogenerated';\n\nexport interface IHeaderState {\n    mobileMenuCollapsed: boolean;\n    signinPopoverOpen: boolean;\n}\n\nexport interface IHeaderViewProps extends IHeaderProps<IHeaderData>, IHeaderState {\n    logo: React.ReactNode;\n    wishListIconDesktop: React.ReactNode;\n    wishListIconMobile: React.ReactNode;\n    cartIcon: React.ReactNode;\n    navIcon: React.ReactNode;\n    className: string;\n    menuBar: React.ReactNode[];\n    search: React.ReactNode[];\n    siteOptions: React.ReactNode[];\n    HeaderTag: IModuleProps;\n    HeaderContainer: INodeProps;\n    MobileMenuContainer: INodeProps;\n    MobileMenuHeader: React.ReactNode;\n    MobileMenuBodyContainer: INodeProps;\n    MobileMenuLinksContainer: INodeProps;\n    HeaderTopBarContainer: INodeProps;\n    Divider: INodeProps;\n\n    AccountInfoDropdownParentContainer?: INodeProps;\n    AccountInfoDropdownPopoverConentContainer?: INodeProps;\n    accountInfoDropdownButton?: React.ReactNode;\n\n    signOutLink?: React.ReactNode;\n    signInLink?: React.ReactNode;\n    accountLinks?: React.ReactNode[];\n}\n\n/**\n *\n * Header component\n * @extends {React.PureComponent<IHeaderProps<IHeaderData>>}\n */\nclass Header extends React.PureComponent<IHeaderProps<IHeaderData>, IHeaderState> {\n    private popOverRef: React.RefObject<HTMLButtonElement>;\n    private telemetryContent: ITelemetryContent;\n    @computed public get displayName(): Readonly<string | undefined> {\n        const customer = this.props.data.accountInformation?.result;\n        return customer ? customer.FirstName || customer.Name : undefined;\n    }\n\n    constructor(props: IHeaderProps<IHeaderData>) {\n        super(props);\n        this.popOverRef = React.createRef();\n        this._toggleNavbar = this._toggleNavbar.bind(this);\n        this._togglePopover = this._togglePopover.bind(this);\n        this._keydown = this._keydown.bind(this);\n        this.state = {\n            mobileMenuCollapsed: true,\n            signinPopoverOpen: false\n        };\n        this.telemetryContent = getTelemetryObject(this.props.context.request.telemetryPageName!, this.props.friendlyName, this.props.telemetry);\n    }\n\n    public componentDidMount(): void {\n        if (MsDyn365.msdyn365Commerce.isBrowser) {\n            window.addEventListener('keydown', this._keydown);\n        }\n    }\n\n    public componentWillUnmount(): void {\n        if (MsDyn365.msdyn365Commerce.isBrowser) {\n            window.removeEventListener('keydown', this._keydown, false);\n        }\n    }\n\n    // tslint:disable-next-line: max-func-body-length\n    public render(): JSX.Element | null {\n        const {\n            id,\n            typeName,\n            data: { accountInformation,\n                cart: { result: cart }\n            },\n            context: {\n                request: {\n                    user\n                }\n            },\n            context,\n            resources: {\n                cartLabel\n            }\n        } = this.props;\n        const { logoLink, logoImage } = this.props.config;\n        const headerClassName = classnames('ms-header', this.props.config.className);\n        const navbarKey = 'header-nav-mobile';\n        const customer = accountInformation && accountInformation.result;\n        const cartIconSlot = this._getSlot('cartIcon');\n        const menuBarSlot = this._getSlot('menuBar');\n        const searchSlot = this._getSlot('search');\n        const siteOptionsSlot = this._getSlot('siteOptions');\n        const viewProps: IHeaderViewProps = {\n            ...(this.props as IHeaderProps<IHeaderData>),\n            ...(this.state),\n            logo: <Logo {...{ link: logoLink, image: logoImage, className: 'ms-header__logo', gridSettings: this.props.context.request.gridSettings, requestContext: this.props.context.request, telemetryContent: this.telemetryContent }} />,\n            wishListIconDesktop: (\n                <WishListIconComponent\n                    className='ms-header__wishlist-desktop'\n                    showButtonTooltip={true}\n                    wishlistTooltipText={this.props.resources.wishlistTooltipText}\n                    context={context}\n                    id={id}\n                    typeName={typeName}\n                    telemetryContent={this.telemetryContent}\n                    data={{}}\n                />\n            ),\n            wishListIconMobile: (\n                <WishListIconComponent\n                    className='ms-header__wishlist-mobile'\n                    showButtonTooltip={true}\n                    wishlistTooltipText={this.props.resources.wishlistTooltipText}\n                    context={context}\n                    id={id}\n                    typeName={typeName}\n                    telemetryContent={this.telemetryContent}\n                    data={{}}\n                />\n            ),\n            cartIcon: (cartIconSlot && cartIconSlot.length > 0)\n                ? cartIconSlot[0]\n                : cart && <CartIconComponent cartLabel={cartLabel} context={context} id={id} typeName={typeName} telemetryContent={this.telemetryContent} data={{ cart: cart }} />,\n            navIcon: <NavIcon {...{ resources: this.props.resources, isExpanded: !this.state.mobileMenuCollapsed, targetId: navbarKey, toggleNavBar: this._toggleNavbar, telemetryContent: this.telemetryContent }} />,\n            menuBar: menuBarSlot && menuBarSlot.length && menuBarSlot || [],\n            search: searchSlot && searchSlot.length && searchSlot || [],\n            siteOptions: siteOptionsSlot && siteOptionsSlot.length && siteOptionsSlot || [],\n            className: headerClassName,\n            HeaderTag: {\n                moduleProps: this.props,\n                className: classnames(headerClassName),\n                tag: 'header'\n            },\n            HeaderContainer: {\n                className: classnames('ms-header__container')\n            },\n            HeaderTopBarContainer: {\n                className: classnames('ms-header__topbar')\n            },\n            Divider: {\n                className: classnames('ms-header__divider')\n            },\n            MobileMenuContainer: {\n                tag: Modal,\n                id: navbarKey,\n                className: 'ms-header__mobile-hamburger',\n                isOpen: !this.state.mobileMenuCollapsed,\n                wrapClassName: 'ms-header__modal'\n            },\n            MobileMenuHeader: (\n                <ModalHeader\n                    className='ms-header__mobile-hamburger-menu-header'\n                    toggle={this._toggleNavbar}\n                />\n            ),\n            MobileMenuBodyContainer: {\n                tag: ModalBody,\n                className: 'ms-header__mobile-hamburger-menu-body',\n            },\n            MobileMenuLinksContainer: {\n                className: 'ms-header__mobile-hamburger-menu-links',\n            },\n            AccountInfoDropdownParentContainer: {\n                className: 'ms-header__account-info'\n            },\n            AccountInfoDropdownPopoverConentContainer: customer && this.displayName && {\n                tag: Popover,\n                id: 'myprofilePopover',\n                className: 'ms-header__account-info-content',\n                placement: 'bottom',\n                isOpen: this.state.signinPopoverOpen,\n                target: this.popOverRef,\n                toggle: this._togglePopover,\n            } || undefined,\n            signInLink: this._getSigninButton(customer, user, this.props.resources),\n            signOutLink: this._getSignOutButton(customer, user, this.props.resources),\n            accountInfoDropdownButton: this._getAccountInfoDropdownButton(customer),\n            accountLinks: this._getAccountLinks(customer)\n        };\n\n        return this.props.renderView(viewProps) as React.ReactElement;\n    }\n\n    /* Handle link text change*/\n    public handleLinkTextChange = (linkIndex: number) => (event: MsDyn365.ContentEditableEvent) => {\n        if (this.props.config.myAccountLinks && this.props.config.myAccountLinks[linkIndex]) {\n            this.props.config.myAccountLinks[linkIndex].linkText = event.target.value;\n        }\n    }\n\n    private _getSlot(slotName: string): React.ReactNode[] | null {\n        const { slots } = this.props;\n        return (slots && slots[slotName] && slots[slotName].length && slots[slotName]) || null;\n    }\n\n    private _getSigninButton(customer: Customer | undefined, user: MsDyn365.IRequestContextUser | undefined, resources: IHeaderResources): React.ReactNode | undefined {\n        const payLoad = getPayloadObject('click', this.telemetryContent, TelemetryConstant.SignIn);\n        const attributes = getTelemetryAttributes(this.telemetryContent, payLoad);\n        return !customer && (\n            <Button\n                className='ms-header__signin-button'\n                title={resources.signInLinkText}\n                href={user && user.signInUrl}\n                aria-label={resources.signInLinkAriaText}\n                onClick={onTelemetryClick(this.telemetryContent, payLoad, 'Sign in')}\n                {...attributes}\n            >\n                <span className='ms-header__signin-button-text' aria-hidden={true}>{resources.signInLinkText}</span>\n            </Button>\n        );\n    }\n\n    private _getSignOutButton(customer: Customer | undefined, user: MsDyn365.IRequestContextUser | undefined, resources: IHeaderResources): React.ReactNode | undefined {\n        const payLoad = getPayloadObject('click', this.telemetryContent, TelemetryConstant.SignOut);\n        const attributes = getTelemetryAttributes(this.telemetryContent, payLoad);\n        return customer && this.displayName && (\n            <Button\n                className={'ms-header__signout-button'}\n                title={resources.signOutLinkText}\n                href={user && user.signOutUrl || ''}\n                aria-label={resources.signOutLinkAriaText}\n                onClick={onTelemetryClick(this.telemetryContent, payLoad, 'Sign out')}\n                {...attributes}\n            >\n                <span className='ms-header__signout-button-text' aria-hidden={true}>{resources.signOutLinkText}</span>\n            </Button>\n        );\n    }\n\n    private _getAccountInfoDropdownButton(customer: Customer | undefined): React.ReactNode | undefined {\n        const payLoad = getPayloadObject('click', this.telemetryContent, TelemetryConstant.MyProfile);\n        const attributes = getTelemetryAttributes(this.telemetryContent, payLoad);\n        return customer && this.displayName && (\n            <Button\n                innerRef={this.popOverRef}\n                className={'ms-header__profile-button'}\n                aria-describedby='myprofilePopover'\n                onClick={this._togglePopover}\n                color='link'\n                aria-expanded={this.state.signinPopoverOpen}\n                {...attributes}\n            >\n                <span className='ms-profile-button-text'>{this.displayName}</span>\n            </Button>\n        );\n    }\n\n    private _getAccountLinks(customer: Customer | undefined): React.ReactNode[] | undefined {\n        const { myAccountLinks } = this.props.config;\n        const payLoad = getPayloadObject('click', this.telemetryContent, '');\n        if(!customer || ! this.displayName || !myAccountLinks || !myAccountLinks.length) {\n            return undefined;\n        }\n        return myAccountLinks.map((cta: IMyAccountLinksData, index: number) => {\n            payLoad.contentAction.etext = cta.linkText;\n            const attributes = getTelemetryAttributes(this.telemetryContent, payLoad);\n            const editableLink: MsDyn365.ILinksData = {\n                ariaLabel: cta.ariaLabel,\n                className: 'ms-signin-info__account-link-button',\n                linkText: cta.linkText,\n                linkUrl: cta.linkUrl.destinationUrl,\n                openInNewTab: cta.openInNewTab,\n                role: 'button',\n                additionalProperties: attributes\n            };\n\n            return (\n                <MsDyn365.Link\n                    key={index}\n                    link={editableLink}\n                    editProps={{ onTextChange: this.handleLinkTextChange(index), requestContext: this.props.context.request }}\n                />\n            );\n        });\n    }\n\n    private _toggleNavbar(): void {\n        this.setState({\n            mobileMenuCollapsed: !this.state.mobileMenuCollapsed\n        });\n    }\n\n    private _togglePopover(): void {\n        this.setState({\n            signinPopoverOpen: !this.state.signinPopoverOpen\n        });\n    }\n\n    private _keydown(e: KeyboardEvent): void {\n        if (e.keyCode === KeyCodes.Escape) {\n            this.setState({ mobileMenuCollapsed: true });\n        }\n    }\n}\n\nexport default Header;"],"sourceRoot":""},"metadata":{},"sourceType":"module"}