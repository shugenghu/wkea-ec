{"ast":null,"code":"import _classCallCheck from\"@babel/runtime/helpers/esm/classCallCheck\";import _createClass from\"@babel/runtime/helpers/esm/createClass\";import _assertThisInitialized from\"@babel/runtime/helpers/esm/assertThisInitialized\";import _inherits from\"@babel/runtime/helpers/esm/inherits\";import _possibleConstructorReturn from\"@babel/runtime/helpers/esm/possibleConstructorReturn\";import _getPrototypeOf from\"@babel/runtime/helpers/esm/getPrototypeOf\";function _createSuper(Derived){var hasNativeReflectConstruct=_isNativeReflectConstruct();return function _createSuperInternal(){var Super=_getPrototypeOf(Derived),result;if(hasNativeReflectConstruct){var NewTarget=_getPrototypeOf(this).constructor;result=Reflect.construct(Super,arguments,NewTarget);}else{result=Super.apply(this,arguments);}return _possibleConstructorReturn(this,result);};}function _isNativeReflectConstruct(){if(typeof Reflect===\"undefined\"||!Reflect.construct)return false;if(Reflect.construct.sham)return false;if(typeof Proxy===\"function\")return true;try{Date.prototype.toString.call(Reflect.construct(Date,[],function(){}));return true;}catch(e){return false;}}import{Button,getPayloadObject,getTelemetryAttributes,TelemetryConstant}from'@msdyn365-commerce-modules/utilities';import classname from'classnames';import*as React from'react';import ReactDOM from'react-dom';var CheckoutGuidedCard=/*#__PURE__*/function(_React$PureComponent){_inherits(CheckoutGuidedCard,_React$PureComponent);var _super=_createSuper(CheckoutGuidedCard);function CheckoutGuidedCard(props){var _this;_classCallCheck(this,CheckoutGuidedCard);_this=_super.call(this,props);_this.editButtonRef=/*#__PURE__*/React.createRef();_this.formCardRef=/*#__PURE__*/React.createRef();_this.renderFooder=function(){var _this$props=_this.props,isVisted=_this$props.isVisted,isReady=_this$props.isReady,isSubmitting=_this$props.isSubmitting,isCancelAllowed=_this$props.isCancelAllowed,hasControlGroup=_this$props.hasControlGroup,onCancel=_this$props.onCancel,onSubmit=_this$props.onSubmit,resource=_this$props.resource;var saveBtnLabel=resource.saveBtnLabel,cancelBtnLabel=resource.cancelBtnLabel,saveAndContinueBtnLabel=resource.saveAndContinueBtnLabel;var canSubmit=!isReady&&onSubmit;var canCancel=!isReady&&isVisted&&isCancelAllowed&&onCancel;if(!hasControlGroup||!canSubmit&&!canCancel){return null;}_this.payLoad.contentAction.etext=isVisted?TelemetryConstant.Save:TelemetryConstant.SaveContinue;var saveBtnAttributes=getTelemetryAttributes(_this.props.telemetryContent,_this.payLoad);_this.payLoad.contentAction.etext=TelemetryConstant.Cancel;var cancelBtnAttributes=getTelemetryAttributes(_this.props.telemetryContent,_this.payLoad);return/*#__PURE__*/React.createElement(\"div\",{className:'ms-checkout__guided-card-footer'},canSubmit&&/*#__PURE__*/React.createElement(Button,Object.assign({className:classname('ms-checkout__guided-card-btn-save',{'is-submitting':isSubmitting}),title:isVisted?saveBtnLabel:saveAndContinueBtnLabel,color:'primary',disabled:isSubmitting,onClick:onSubmit},saveBtnAttributes),isVisted&&isCancelAllowed?saveBtnLabel:saveAndContinueBtnLabel),canCancel&&/*#__PURE__*/React.createElement(Button,Object.assign({className:'ms-checkout__guided-card-btn-cancel',title:cancelBtnLabel,color:'secondary',onClick:onCancel},cancelBtnAttributes),cancelBtnLabel));};_this.focusOnFirstFocusableElement=function(){var node=ReactDOM.findDOMNode(_assertThisInitialized(_this));var focussableElements=\"\\n             a:not([disabled]),\\n             button:not([disabled]),\\n             input[type=submit]:not([disabled]),\\n             input[type=checkbox]:not([disabled]),\\n             input[type=text]:not([disabled]),\\n             input[type=radio]:not([disabled]),\\n             input[type=password]:not([disabled]),\\n             select:not([disabled]),\\n             textarea:not([disabled]),\\n             [tabindex]:not([disabled]):not([tabindex=\\\"-1\\\"])\\n         \";var child=node&&node.querySelector&&node.querySelector(focussableElements);child&&child.focus&&child.focus();};_this.focusOnEditButton=function(){var editButton=_this.editButtonRef&&_this.editButtonRef.current&&_this.editButtonRef.current.focus&&_this.editButtonRef.current;editButton&&editButton.focus();};_this.scrollToTitle=function(){var formCard=_this.props.isMobile&&_this.formCardRef&&_this.formCardRef.current&&_this.formCardRef.current;formCard&&formCard.scrollIntoView();};_this.getTitle=function(){var _this$props2=_this.props,step=_this$props2.step,title=_this$props2.title;var _ref=title||{},_ref$headingTag=_ref.headingTag,Tag=_ref$headingTag===void 0?'h2':_ref$headingTag,_ref$text=_ref.text,text=_ref$text===void 0?'':_ref$text;return/*#__PURE__*/React.createElement(Tag,{className:'ms-checkout__guided-card-title'},/*#__PURE__*/React.createElement(\"span\",{className:'ms-checkout__guided-card-title-step'},step+1,\". \"),text&&/*#__PURE__*/React.createElement(\"span\",{className:'ms-checkout__guided-card-title-text'},text));};_this.payLoad=getPayloadObject('click',props.telemetryContent,'');return _this;}_createClass(CheckoutGuidedCard,[{key:\"componentDidUpdate\",value:function componentDidUpdate(prevProps){var _this$props3=this.props,isActive=_this$props3.isActive,isReady=_this$props3.isReady,onNext=_this$props3.onNext,isVisted=_this$props3.isVisted,onEdit=_this$props3.onEdit;if(isActive&&isReady){onNext();}var prevCanEdit=prevProps.isReady&&prevProps.isVisted&&!!prevProps.onEdit;var canEdit=isReady&&isVisted&&!!onEdit;if(!prevCanEdit&&canEdit){this.focusOnEditButton();this.scrollToTitle();}if(prevProps.isReady&&!isReady){this.focusOnFirstFocusableElement();}}},{key:\"render\",value:function render(){var _this$props4=this.props,title=_this$props4.title,disabled=_this$props4.disabled,isExpanded=_this$props4.isExpanded,isActive=_this$props4.isActive,isVisted=_this$props4.isVisted,children=_this$props4.children,isReady=_this$props4.isReady,isPending=_this$props4.isPending,isUpdating=_this$props4.isUpdating,hasInitialized=_this$props4.hasInitialized,hasControlGroup=_this$props4.hasControlGroup,onEdit=_this$props4.onEdit,resource=_this$props4.resource;var changeBtnLabel=resource.changeBtnLabel;this.payLoad.contentAction.etext=TelemetryConstant.CheckoutChange;var changeBtnAttributes=getTelemetryAttributes(this.props.telemetryContent,this.payLoad);var canEdit=hasControlGroup&&isReady&&isVisted&&onEdit;return/*#__PURE__*/React.createElement(\"div\",{className:classname('ms-checkout__guided-card',{active:isActive,expanded:isExpanded,closed:!isExpanded,visted:isVisted,hidden:disabled,initialized:hasInitialized,disabled:disabled,ready:isReady,pending:isPending,updating:isUpdating}),ref:this.formCardRef},/*#__PURE__*/React.createElement(\"div\",{className:'ms-checkout__guided-card-header'},this.getTitle(),canEdit&&/*#__PURE__*/React.createElement(Button,Object.assign({innerRef:this.editButtonRef,className:'ms-checkout__guided-card-btn-edit',title:changeBtnLabel,color:'link',onClick:onEdit,\"aria-label\":title&&title.text?\"\".concat(changeBtnLabel,\" \").concat(title.text):''},changeBtnAttributes),changeBtnLabel)),/*#__PURE__*/React.createElement(\"div\",{className:classname('ms-checkout__guided-card-body',{hidden:!isExpanded})},/*#__PURE__*/React.createElement(\"div\",{className:'ms-checkout__guided-card-content'},children),this.renderFooder()));}}]);return CheckoutGuidedCard;}(React.PureComponent);export default CheckoutGuidedCard;","map":{"version":3,"sources":["modules/checkout/components/guided-card.tsx"],"names":[],"mappings":"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","sourcesContent":["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/ //\nimport { Heading as HeadingType } from '@msdyn365-commerce-modules/data-types';\nimport { Button, getPayloadObject, getTelemetryAttributes, IPayLoad, ITelemetryContent, TelemetryConstant } from '@msdyn365-commerce-modules/utilities';\nimport classname from 'classnames';\nimport * as React from 'react';\nimport ReactDOM from 'react-dom';\n\nexport interface ICheckoutGuidedCardProps {\n    step: number;\n    title?: HeadingType;\n    disabled?: boolean; // module is not available\n    isActive?: boolean; // step === currentStep\n    isVisted?: boolean; // step < currentStep\n    isExpanded?: boolean;\n    isReady?: boolean;\n    isPending?: boolean;\n    isUpdating?: boolean;\n    isSubmitting?: boolean;\n    isCancelAllowed?: boolean;\n    isMobile?: boolean;\n    hasInitialized?: boolean;\n    hasControlGroup?: boolean;\n    children: React.ReactNode;\n    resource: {\n        checkoutStepTitleFormat: string;\n        saveBtnLabel: string;\n        changeBtnLabel: string;\n        cancelBtnLabel: string;\n        saveAndContinueBtnLabel: string;\n    };\n    telemetryContent?: ITelemetryContent;\n    onEdit?(): void;\n    onCancel?(): void;\n    onSubmit?(): void;\n    onNext(): void;\n}\n\n/**\n *\n * CheckoutGuidedCard component\n * @extends {React.Component<ICheckoutGuidedCardProps>}\n */\nclass CheckoutGuidedCard extends React.PureComponent<ICheckoutGuidedCardProps> {\n    private editButtonRef: React.RefObject<HTMLButtonElement> = React.createRef();\n    private formCardRef: React.RefObject<HTMLDivElement> = React.createRef();\n    private payLoad: IPayLoad;\n\n    constructor(props: ICheckoutGuidedCardProps) {\n        super(props);\n        this.payLoad = getPayloadObject('click', props.telemetryContent!, '');\n    }\n\n    public componentDidUpdate(prevProps: ICheckoutGuidedCardProps): void {\n        /**\n         * Move to next step when current step is ready\n         */\n        const { isActive, isReady, onNext, isVisted, onEdit } = this.props;\n\n        // Move to next step after completing the current step\n        if (isActive && isReady) {\n            onNext();\n        }\n\n        // Set the focus to Edit button once edit button appear\n        // (It happens when current step switch to isReady status)\n        const prevCanEdit = prevProps.isReady && prevProps.isVisted && !!prevProps.onEdit;\n        const canEdit = isReady && isVisted && !!onEdit;\n        if (!prevCanEdit && canEdit) {\n            this.focusOnEditButton();\n            this.scrollToTitle();\n        }\n\n        // Set the focus to the first focusable element\n        // (It happens when current step switch to isUpdating status)\n        if (prevProps.isReady && !isReady) {\n            this.focusOnFirstFocusableElement();\n        }\n    }\n\n    public render(): JSX.Element | null {\n        const {\n            title,\n            disabled,\n            isExpanded,\n            isActive,\n            isVisted,\n            children,\n            isReady,\n            isPending,\n            isUpdating,\n            hasInitialized,\n            hasControlGroup,\n            onEdit,\n            resource\n        } = this.props;\n        const { changeBtnLabel } = resource;\n\n        this.payLoad.contentAction.etext = TelemetryConstant.CheckoutChange;\n        const changeBtnAttributes = getTelemetryAttributes(this.props.telemetryContent!, this.payLoad);\n        const canEdit = hasControlGroup && isReady && isVisted && onEdit;\n\n        return (\n            <div\n                className={classname('ms-checkout__guided-card', {\n                    active: isActive,\n                    expanded: isExpanded,\n                    closed: !isExpanded,\n                    visted: isVisted,\n                    hidden: disabled,\n                    initialized: hasInitialized,\n                    disabled: disabled,\n                    ready: isReady,\n                    pending: isPending,\n                    updating: isUpdating\n                })}\n                ref={this.formCardRef}\n            >\n                <div className='ms-checkout__guided-card-header'>\n                    {this.getTitle()}\n\n                    {canEdit && (\n                        <Button\n                            innerRef={this.editButtonRef}\n                            className='ms-checkout__guided-card-btn-edit'\n                            title={changeBtnLabel}\n                            color='link'\n                            onClick={onEdit}\n                            aria-label={title && title.text ? `${changeBtnLabel} ${title.text}` : ''}\n                            {...changeBtnAttributes}\n                        >\n                            {changeBtnLabel}\n                        </Button>\n                    )}\n                </div>\n\n                <div\n                    className={classname('ms-checkout__guided-card-body', {\n                        hidden: !isExpanded\n                    })}\n                >\n                    <div className='ms-checkout__guided-card-content'>{children}</div>\n\n                    {this.renderFooder()}\n                </div>\n            </div>\n        );\n    }\n\n    private renderFooder = (): JSX.Element | null => {\n        const { isVisted, isReady, isSubmitting, isCancelAllowed, hasControlGroup, onCancel, onSubmit, resource } = this.props;\n        const { saveBtnLabel, cancelBtnLabel, saveAndContinueBtnLabel } = resource;\n\n        const canSubmit = !isReady && onSubmit;\n        const canCancel = !isReady && isVisted && isCancelAllowed && onCancel;\n\n        if (!hasControlGroup || (!canSubmit && !canCancel)) {\n            return null;\n        }\n\n        this.payLoad.contentAction.etext = isVisted ? TelemetryConstant.Save : TelemetryConstant.SaveContinue;\n        const saveBtnAttributes = getTelemetryAttributes(this.props.telemetryContent!, this.payLoad);\n        this.payLoad.contentAction.etext = TelemetryConstant.Cancel;\n        const cancelBtnAttributes = getTelemetryAttributes(this.props.telemetryContent!, this.payLoad);\n\n        return (\n            <div className='ms-checkout__guided-card-footer'>\n                {canSubmit && (\n                    <Button\n                        className={classname('ms-checkout__guided-card-btn-save', { 'is-submitting': isSubmitting })}\n                        title={isVisted ? saveBtnLabel : saveAndContinueBtnLabel}\n                        color='primary'\n                        disabled={isSubmitting}\n                        onClick={onSubmit}\n                        {...saveBtnAttributes}\n                    >\n                        {isVisted && isCancelAllowed ? saveBtnLabel : saveAndContinueBtnLabel}\n                    </Button>\n                )}\n                {canCancel && (\n                    <Button\n                        className='ms-checkout__guided-card-btn-cancel'\n                        title={cancelBtnLabel}\n                        color='secondary'\n                        onClick={onCancel}\n                        {...cancelBtnAttributes}\n                    >\n                        {cancelBtnLabel}\n                    </Button>\n                )}\n            </div>\n        );\n    };\n\n    private focusOnFirstFocusableElement = (): void => {\n        const node = ReactDOM.findDOMNode(this) as HTMLElement;\n        const focussableElements = `\n             a:not([disabled]),\n             button:not([disabled]),\n             input[type=submit]:not([disabled]),\n             input[type=checkbox]:not([disabled]),\n             input[type=text]:not([disabled]),\n             input[type=radio]:not([disabled]),\n             input[type=password]:not([disabled]),\n             select:not([disabled]),\n             textarea:not([disabled]),\n             [tabindex]:not([disabled]):not([tabindex=\"-1\"])\n         `;\n\n        const child = node && node.querySelector && (node.querySelector(focussableElements) as HTMLElement);\n        child && child.focus && child.focus();\n    };\n\n    private focusOnEditButton = (): void => {\n        // Focus on edit button\n        const editButton =\n            this.editButtonRef &&\n            this.editButtonRef.current &&\n            this.editButtonRef.current.focus &&\n            (this.editButtonRef.current as HTMLElement);\n        editButton && editButton.focus();\n    };\n\n    private scrollToTitle = (): void => {\n        // scroll window to the title of the step that was just completed only in mobile viewport\n        const formCard = this.props.isMobile && this.formCardRef && this.formCardRef.current && (this.formCardRef.current as HTMLElement);\n        formCard && formCard.scrollIntoView();\n    };\n\n    private getTitle = (): JSX.Element => {\n        const { step, title } = this.props;\n        const { headingTag: Tag = 'h2', text = '' } = title || {};\n        return (\n            <Tag className='ms-checkout__guided-card-title'>\n                <span className='ms-checkout__guided-card-title-step'>{step + 1}. </span>\n                {text && <span className='ms-checkout__guided-card-title-text'>{text}</span>}\n            </Tag>\n        );\n    };\n}\n\nexport default CheckoutGuidedCard;\n"],"sourceRoot":"./src/"},"metadata":{},"sourceType":"module"}