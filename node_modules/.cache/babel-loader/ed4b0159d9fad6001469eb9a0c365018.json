{"ast":null,"code":"import _regeneratorRuntime from\"@babel/runtime/regenerator\";import _defineProperty from\"@babel/runtime/helpers/esm/defineProperty\";import _asyncToGenerator from\"@babel/runtime/helpers/esm/asyncToGenerator\";function ownKeys(object,enumerableOnly){var keys=Object.keys(object);if(Object.getOwnPropertySymbols){var symbols=Object.getOwnPropertySymbols(object);if(enumerableOnly)symbols=symbols.filter(function(sym){return Object.getOwnPropertyDescriptor(object,sym).enumerable;});keys.push.apply(keys,symbols);}return keys;}function _objectSpread(target){for(var i=1;i<arguments.length;i++){var source=arguments[i]!=null?arguments[i]:{};if(i%2){ownKeys(Object(source),true).forEach(function(key){_defineProperty(target,key,source[key]);});}else if(Object.getOwnPropertyDescriptors){Object.defineProperties(target,Object.getOwnPropertyDescriptors(source));}else{ownKeys(Object(source)).forEach(function(key){Object.defineProperty(target,key,Object.getOwnPropertyDescriptor(source,key));});}}return target;}/*!\r\n * Copyright (c) Microsoft Corporation.\r\n * All rights reserved. See LICENSE in the project root for license information.\r\n */import{createObservableDataAction}from'@msdyn365-commerce/action-internal';import{getFriendlyName,getParameterizeFeatureFlagsWithRequestContext,parameterize}from'@msdyn365-commerce/core-internal';import{getCategoriesAsync}from'@msdyn365-commerce/retail-proxy/dist/DataActions/CategoriesDataActions.g';import{getByIdAsync}from'@msdyn365-commerce/retail-proxy/dist/DataActions/ProductsDataActions.g';import{ProductLinkInput}from'../hydrator-action-inputs';/**\r\n * Computes a root category's SLUG\r\n *\r\n * @param rootCategory The category for which you want to determine the slug\r\n * @param ctx Action context\r\n */export var getCategorySlug=function getCategorySlug(rootCategory,categories,parameterizeFeatureFlags){var slug=parameterize(rootCategory.Name,undefined,parameterizeFeatureFlags,rootCategory.NeutralizedName);var currentCategory=rootCategory;var _loop=function _loop(){var parentId=currentCategory.ParentCategory;var parentCategory=categories.find(function(category){if(category.RecordId){return category.RecordId===parentId;}return false;});if(!parentCategory){return\"break\";}slug=\"\".concat(parameterize(parentCategory.Name,undefined,parameterizeFeatureFlags,parentCategory.NeutralizedName),\"/\").concat(slug);currentCategory=parentCategory;};while(currentCategory.ParentCategory){var _ret=_loop();if(_ret===\"break\")break;}return slug.length>0?\"/\".concat(slug):'';};/**\r\n * Returns an object containing information used to by the URL builder to build\r\n * the formatted product or category URL\r\n * =\r\n * @param input Action input\r\n * @param context Action context\r\n */var getPageTypeContextById=/*#__PURE__*/function(){var _ref=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee(input,context){var pageTypeContext,product;return _regeneratorRuntime.wrap(function _callee$(_context){while(1){switch(_context.prev=_context.next){case 0:// If product ID exits get the product details for that product\npageTypeContext={};if(!(input instanceof ProductLinkInput&&input.productId)){_context.next=15;break;}_context.prev=2;_context.next=5;return getByIdAsync({callerContext:context},input.productId,input.channelId);case 5:product=_context.sent;if(product&&product.Name){_context.next=8;break;}throw new Error(\"Unable to retrieve product details for product id: \".concat(input.productId));case 8:pageTypeContext.product={Name:product.Name||'',RecordId:product.RecordId};_context.next=15;break;case 11:_context.prev=11;_context.t0=_context[\"catch\"](2);context.telemetry.error(_context.t0);throw new Error(\"Unable run getById action. Error: \".concat(_context.t0));case 15:return _context.abrupt(\"return\",getCategoriesAsync({callerContext:context},input.channelId).then(function(categories){// Find the category by id from the list of returned categories\nvar rootCategory=categories.find(function(category){if(category.RecordId){return category.RecordId===input.categoryId;}return false;});if(!rootCategory){throw new Error(\"Unable to retrieve category details for category id: \".concat(input.categoryId));}var localName=getFriendlyName(context.requestContext.locale,rootCategory.NameTranslations);var rootCategoryWithNeutralizedName=_objectSpread({},rootCategory);rootCategoryWithNeutralizedName.NeutralizedName=rootCategory.Name;rootCategoryWithNeutralizedName.Name=localName||rootCategoryWithNeutralizedName.NeutralizedName;// Compute the found category's slug\nvar parameterizeFeatureFlags=getParameterizeFeatureFlagsWithRequestContext(context.requestContext);var slug=getCategorySlug(rootCategoryWithNeutralizedName,categories,parameterizeFeatureFlags);pageTypeContext.category={Slug:slug,RecordId:rootCategoryWithNeutralizedName.RecordId};return Promise.resolve(pageTypeContext);})[\"catch\"](function(err){// In the event of an error return just the category id\ncontext.telemetry.error(err);throw new Error(\"Unable to run getCategories action. Error: \".concat(err));}));case 16:case\"end\":return _context.stop();}}},_callee,null,[[2,11]]);}));return function getPageTypeContextById(_x,_x2){return _ref.apply(this,arguments);};}();export var getPageTypeContextByIdAction=createObservableDataAction({action:getPageTypeContextById});","map":{"version":3,"sources":["../../../../src/hydrators/link-actions/page-type-context-by-id.ts"],"names":[],"mappings":"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","sourcesContent":["/*!\n * Copyright (c) Microsoft Corporation.\n * All rights reserved. See LICENSE in the project root for license information.\n */\n\nimport { createObservableDataAction } from '@msdyn365-commerce/action-internal';\nimport {\n    getFriendlyName,\n    getParameterizeFeatureFlagsWithRequestContext,\n    IAction,\n    IActionContext,\n    IParameterizeFeatureFlags,\n    parameterize\n} from '@msdyn365-commerce/core-internal';\nimport { getCategoriesAsync } from '@msdyn365-commerce/retail-proxy/dist/DataActions/CategoriesDataActions.g';\nimport { getByIdAsync } from '@msdyn365-commerce/retail-proxy/dist/DataActions/ProductsDataActions.g';\nimport { Category, SimpleProduct } from '@msdyn365-commerce/retail-proxy/dist/Entities/CommerceTypes.g';\nimport { CategoryLinkInput, IPageTypeContext, ProductLinkInput } from '../hydrator-action-inputs';\n\ntype CategoryWithNeutralizedName = Category & { NeutralizedName?: string };\n/**\n * Computes a root category's SLUG\n *\n * @param rootCategory The category for which you want to determine the slug\n * @param ctx Action context\n */\nexport const getCategorySlug = (\n    rootCategory: CategoryWithNeutralizedName,\n    categories: CategoryWithNeutralizedName[],\n    parameterizeFeatureFlags?: IParameterizeFeatureFlags\n): string => {\n    let slug: string = parameterize(rootCategory.Name, undefined, parameterizeFeatureFlags, rootCategory.NeutralizedName);\n    let currentCategory: Category = rootCategory;\n    while (currentCategory.ParentCategory) {\n        const parentId = currentCategory.ParentCategory;\n        const parentCategory: CategoryWithNeutralizedName | undefined = categories.find((category: Category) => {\n            if (category.RecordId) {\n                return category.RecordId === parentId;\n            }\n            return false;\n        });\n        if (!parentCategory) {\n            break;\n        }\n        slug = `${parameterize(parentCategory.Name, undefined, parameterizeFeatureFlags, parentCategory.NeutralizedName)}/${slug}`;\n        currentCategory = parentCategory;\n    }\n    return slug.length > 0 ? `/${slug}` : '';\n};\n\n/**\n * Returns an object containing information used to by the URL builder to build\n * the formatted product or category URL\n * =\n * @param input Action input\n * @param context Action context\n */\nconst getPageTypeContextById = async (input: ProductLinkInput | CategoryLinkInput, context: IActionContext): Promise<IPageTypeContext> => {\n    // If product ID exits get the product details for that product\n    const pageTypeContext: IPageTypeContext = {};\n    if (input instanceof ProductLinkInput && input.productId) {\n        try {\n            const product: SimpleProduct = await getByIdAsync({ callerContext: context }, input.productId, input.channelId);\n            if (!(product && product.Name)) {\n                throw new Error(`Unable to retrieve product details for product id: ${input.productId}`);\n            }\n            pageTypeContext.product = { Name: product.Name || '', RecordId: product.RecordId };\n        } catch (err) {\n            context.telemetry.error(err);\n            throw new Error(`Unable run getById action. Error: ${err}`);\n        }\n    }\n\n    // Get the category details for the passed category id\n    return getCategoriesAsync({ callerContext: context }, input.channelId)\n        .then((categories: Category[]) => {\n            // Find the category by id from the list of returned categories\n            const rootCategory: Category | undefined = categories.find((category: Category) => {\n                if (category.RecordId) {\n                    return category.RecordId === input.categoryId;\n                }\n                return false;\n            });\n            if (!rootCategory) {\n                throw new Error(`Unable to retrieve category details for category id: ${input.categoryId}`);\n            }\n            const localName = getFriendlyName(context.requestContext.locale, rootCategory.NameTranslations);\n            const rootCategoryWithNeutralizedName = <CategoryWithNeutralizedName>{ ...rootCategory };\n            rootCategoryWithNeutralizedName.NeutralizedName = rootCategory.Name;\n            rootCategoryWithNeutralizedName.Name = localName || rootCategoryWithNeutralizedName.NeutralizedName;\n            // Compute the found category's slug\n            const parameterizeFeatureFlags: IParameterizeFeatureFlags = getParameterizeFeatureFlagsWithRequestContext(\n                context.requestContext\n            );\n            const slug = getCategorySlug(rootCategoryWithNeutralizedName, categories, parameterizeFeatureFlags);\n            pageTypeContext.category = { Slug: slug, RecordId: rootCategoryWithNeutralizedName.RecordId };\n            return Promise.resolve(pageTypeContext);\n        })\n        .catch(err => {\n            // In the event of an error return just the category id\n            context.telemetry.error(err);\n            throw new Error(`Unable to run getCategories action. Error: ${err}`);\n        });\n};\n\nexport const getPageTypeContextByIdAction = createObservableDataAction({\n    action: <IAction<IPageTypeContext>>getPageTypeContextById\n});\n"],"sourceRoot":""},"metadata":{},"sourceType":"module"}