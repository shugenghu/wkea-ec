{"ast":null,"code":"import\"core-js/modules/es.regexp.to-string.js\";import _debounce from\"lodash/debounce\";import{__decorate}from\"tslib\";import{reaction}from'mobx';import{observer}from'mobx-react';import*as React from'react';let OrderTemplateQuantity=class OrderTemplateQuantity extends React.PureComponent{constructor(props){super(props);this.inputRef=/*#__PURE__*/React.createRef();this._validateMin=()=>{const minValue=this.props.min===undefined?1:this.props.min;if(isNaN(this.state.currentInput)||this.state.currentInput<minValue){this.props.onChange&&this.props.onChange(minValue);}else{this.props.onChange&&this.props.onChange(this.state.currentInput);}};this.state={currentInput:props.currentCount||1};this._handleChange=this._handleChange.bind(this);reaction(()=>this.props.currentCount,()=>{this.setState({currentInput:this.props.currentCount||1});});}render(){const glyphMinusClassName=\"\".concat(this.props.decrementGlyphClass,\" quantity__controls-glyph\");const glyphPlusClassName=\"\".concat(this.props.incrementGlyphClass,\" quantity__controls-glyph\");const disabled=this.props.currentCount===this.props.min;const incDisabled=this.props.currentCount===this.props.max;const currentValue=this.state.currentInput;let extraClass='';if(disabled){extraClass='disabled';}else if(this.props.disabled){extraClass='transition';}const getChangeHandler=amount=>()=>this._onIncrementalChange(amount);return/*#__PURE__*/React.createElement(\"div\",{className:'quantity'},/*#__PURE__*/React.createElement(\"button\",{disabled:this.props.disabled||disabled,title:disabled?'':this.props.decrementButtonAriaLabel,className:\"decrement quantity__controls \".concat(extraClass),onClick:getChangeHandler(-1),\"aria-hidden\":true,\"aria-label\":\"\".concat(this.props.decrementButtonAriaLabel),tabIndex:-1,color:'secondary'},/*#__PURE__*/React.createElement(\"span\",{className:glyphMinusClassName})),/*#__PURE__*/React.createElement(\"input\",{type:'number',className:'quantity-input',pattern:'[0-9]*',value:currentValue,onChange:this._handleChange,onBlur:this._validateMin,\"aria-live\":'polite',\"aria-label\":\"\".concat(this.props.inputQuantityAriaLabel),role:'spinbutton',\"aria-valuemin\":1,\"aria-valuemax\":this.props.max,\"aria-valuenow\":currentValue,ref:this.inputRef,disabled:this.props.disabled}),/*#__PURE__*/React.createElement(\"button\",{disabled:this.props.disabled||incDisabled,title:incDisabled?'':this.props.incrementButtonAriaLabel,className:\"increment quantity__controls \".concat(incDisabled?'disabled':''),onClick:getChangeHandler(1),\"aria-hidden\":true,\"aria-label\":\"\".concat(this.props.incrementButtonAriaLabel),tabIndex:-1,color:'secondary'},/*#__PURE__*/React.createElement(\"span\",{className:glyphPlusClassName})));}_onIncrementalChange(amount){const updatedQuantity=this.state.currentInput+amount;if(updatedQuantity>=1&&updatedQuantity<=this.props.max){this.props.onChange&&this.props.onChange(updatedQuantity);}}_handleChange(e){const currentValue=parseInt(e.target.value,10);const minValue=this.props.min===undefined?1:this.props.min;const inputElement=this.inputRef&&this.inputRef.current&&this.inputRef.current instanceof HTMLInputElement&&this.inputRef.current;if(currentValue>this.props.max){this.setState({currentInput:this.props.max},()=>{_debounce(()=>{this.props.onChange&&this.props.onChange(this.state.currentInput);},200)();});}else{this.setState({currentInput:currentValue},()=>{_debounce(()=>{if(!isNaN(this.state.currentInput)&&!(this.state.currentInput<minValue)){this.props.onChange&&this.props.onChange(this.state.currentInput);if(inputElement){inputElement.setAttribute('aria-valuenow',currentValue.toString());inputElement.setAttribute('value',currentValue.toString());}}},200)();});}}};OrderTemplateQuantity.defaultProps={min:1,decrementGlyphClass:'fas fa-minus',incrementGlyphClass:'fas fa-plus'};OrderTemplateQuantity=__decorate([observer],OrderTemplateQuantity);export default OrderTemplateQuantity;","map":{"version":3,"sources":["modules/order-template/components/common/order-template-quantity.tsx"],"names":[],"mappings":"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","sourcesContent":["import { debounce } from 'lodash';\nimport { reaction } from 'mobx';\nimport { observer } from 'mobx-react';\nimport * as React from 'react';\n\ninterface IQuantityProps {\n    min?: number;\n    max: number;\n    currentCount?: number;\n    disabled?: boolean;\n    incrementGlyphClass?:string;\n    decrementGlyphClass?:string;\n    decrementButtonAriaLabel?: string;\n    incrementButtonAriaLabel?: string;\n    inputQuantityAriaLabel?: string;\n    id?: string;\n    onChange?(newValue: number):void;\n}\n\ninterface IQuantityState {\n    currentInput: number;\n}\n/**\n * Quantity Component - This component is used to add or remove quantity\n */\n@observer\nexport default class OrderTemplateQuantity extends React.PureComponent<IQuantityProps, IQuantityState> {\n    public static defaultProps: Partial<IQuantityProps> = {\n        min: 1,\n        decrementGlyphClass: 'fas fa-minus',\n        incrementGlyphClass: 'fas fa-plus'\n    };\n\n    private inputRef: React.RefObject<HTMLInputElement> = React.createRef<HTMLInputElement>();\n\n    constructor(props: IQuantityProps) {\n        super(props);\n        this.state = { currentInput: props.currentCount || 1 };\n        this._handleChange = this._handleChange.bind(this);\n\n        reaction(\n            () => this.props.currentCount,\n            () => {\n                this.setState({ currentInput: this.props.currentCount || 1 });\n            }\n        );\n    }\n\n    public render(): JSX.Element {\n        const glyphMinusClassName: string = `${this.props.decrementGlyphClass!} quantity__controls-glyph`;\n        const glyphPlusClassName: string = `${this.props.incrementGlyphClass!} quantity__controls-glyph`;\n        const disabled = this.props.currentCount === this.props.min;\n        const incDisabled = this.props.currentCount === this.props.max;\n        const currentValue = this.state.currentInput;\n        let extraClass = '';\n        if(disabled) {\n            // The quantity has reached its boundaries (max or min)\n            extraClass ='disabled';\n\n        } else if(this.props.disabled) {\n            // this.props.disabled shows if the state is not succeded yet\n            extraClass = 'transition';\n        }\n        const getChangeHandler = (amount: number) => () => this._onIncrementalChange(amount);\n\n        return (\n            <div className='quantity'/* id={this.props.id}*/>\n                <button\n                    disabled={this.props.disabled || disabled}\n                    title= {disabled ? '' : this.props.decrementButtonAriaLabel}\n                    className={`decrement quantity__controls ${extraClass}`}\n                    onClick={getChangeHandler(-1)}\n                    aria-hidden={true}\n                    aria-label={`${this.props.decrementButtonAriaLabel}`}\n                    tabIndex={-1}\n                    color={'secondary'}\n                >\n                    <span className={glyphMinusClassName} />\n                </button>\n                <input\n                    type='number'\n                    className='quantity-input'\n                    pattern='[0-9]*'\n                    value={currentValue}\n                    onChange={this._handleChange}\n                    onBlur={this._validateMin}\n                    aria-live='polite'\n                    aria-label={`${this.props.inputQuantityAriaLabel}`}\n                    role='spinbutton'\n                    aria-valuemin={1}\n                    aria-valuemax={this.props.max}\n                    aria-valuenow={currentValue}\n                    ref={this.inputRef}\n                    disabled={this.props.disabled}\n                />\n                <button\n                    disabled={this.props.disabled || incDisabled}\n                    title={incDisabled ? '' : this.props.incrementButtonAriaLabel}\n                    className={`increment quantity__controls ${incDisabled ? 'disabled' : ''}`}\n                    onClick={getChangeHandler(1)}\n                    aria-hidden={true}\n                    aria-label={`${this.props.incrementButtonAriaLabel}`}\n                    tabIndex={-1}\n                    color={'secondary'}\n                >\n                    <span className={glyphPlusClassName} />\n                </button>\n            </div>\n        );\n    }\n\n    private _onIncrementalChange(amount: number): void {\n        const updatedQuantity = this.state.currentInput + amount;\n\n        if (updatedQuantity >= 1 && updatedQuantity <= this.props.max) {\n            this.props.onChange && this.props.onChange(updatedQuantity);\n        }\n    }\n\n    private _handleChange(e: React.ChangeEvent<HTMLInputElement>): void {\n        const currentValue = parseInt((e.target.value), 10);\n        const minValue = this.props.min === undefined ? 1 : this.props.min;\n        const inputElement = this.inputRef && this.inputRef.current && this.inputRef.current instanceof HTMLInputElement && this.inputRef.current;\n\n        if (currentValue > this.props.max) {\n            this.setState(\n                { currentInput: this.props.max },\n                () => {\n                    debounce(\n                        () => {\n                            this.props.onChange && this.props.onChange(this.state.currentInput);\n                        },\n                        200)();\n                }\n            );\n        } else {\n            this.setState(\n                { currentInput: currentValue },\n                () => {\n                    debounce(\n                        () => {\n                            if(!isNaN(this.state.currentInput) && !(this.state.currentInput < minValue)) {\n                                this.props.onChange && this.props.onChange(this.state.currentInput);\n\n                                if (inputElement) {\n                                    inputElement.setAttribute('aria-valuenow', currentValue.toString());\n                                    inputElement.setAttribute('value', currentValue.toString());\n                                }\n                            }\n                        },\n                        200)();\n                }\n            );\n        }\n    }\n\n    private _validateMin = (): void => {\n        const minValue = this.props.min === undefined ? 1 : this.props.min;\n\n        if (isNaN(this.state.currentInput) || (this.state.currentInput < minValue)) {\n            this.props.onChange && this.props.onChange(minValue);\n        } else {\n            this.props.onChange && this.props.onChange(this.state.currentInput);\n        }\n    }\n}"],"sourceRoot":"./src/"},"metadata":{},"sourceType":"module"}