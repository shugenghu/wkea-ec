{"ast":null,"code":"import{DataServiceQuery}from'../DataServiceQuery';import{ShiftClass,SuspendedCartClass,ReceiptClass,ShiftTenderLineClass}from'../Entities/CommerceModels.g';import{executeAction}from'../retail-action';function shiftsQuery(shiftId,terminalId){var key=shiftId&&terminalId?{ShiftId:shiftId,TerminalId:terminalId}:null;return new DataServiceQuery(\"Shifts\",\"Shift\",ShiftClass,key);}export function createCreateInput(entity){return shiftsQuery().create(entity);}export function createShiftAsync(context,entity){const request=createCreateInput(entity);return executeAction(request,context);}export function createUpdateInput(entity){return shiftsQuery(entity.ShiftId,entity.TerminalId).update(entity);}export function updateAsync(context,entity){const request=createUpdateInput(entity);return executeAction(request,context);}export function createDeleteAsync(entity){return shiftsQuery(entity.ShiftId,entity.TerminalId).delete();}export function deleteAsync(context,entity){const request=createDeleteAsync(entity);return executeAction(request,context);}export function createReadAsync(shiftId,terminalId){return shiftsQuery(shiftId,terminalId).read();}export function readAsync(context,shiftId,terminalId){const request=createReadAsync(shiftId,terminalId);return executeAction(request,context);}export function createReadAllAsync(queryResultSettings){return shiftsQuery().resultSettings(queryResultSettings).read();}export function readAllAsync(context){const request=createReadAllAsync(context.queryResultSettings);return executeAction(request,context);}export function createUpsertShiftsInput(shifts){const query=shiftsQuery();return query.createDataServiceRequestForOperation('UpsertShifts',true,'','false',{bypassCache:'get',returnEntity:''},{shifts:shifts});}export function upsertShiftsAsync(context,shifts){const request=createUpsertShiftsInput(shifts);return executeAction(request,context);}export function createUpsertAndValidateShiftsInput(shiftId,terminalId,shifts){const query=shiftsQuery();return query.createDataServiceRequestForOperation('UpsertAndValidateShifts',true,'','false',{bypassCache:'get',returnEntity:''},{shiftId:shiftId,terminalId:terminalId,shifts:shifts});}export function upsertAndValidateShiftsAsync(context,shiftId,terminalId,shifts){const request=createUpsertAndValidateShiftsInput(shiftId,terminalId,shifts);return executeAction(request,context);}export function createDeleteShiftsInput(){const query=shiftsQuery();return query.createDataServiceRequestForOperation('DeleteShifts',true,'','false',{bypassCache:'get',returnEntity:''},{});}export function deleteShiftsAsync(context){const request=createDeleteShiftsInput();return executeAction(request,context);}export function createOpenInput(shiftId,cashDrawer,isShared){const query=shiftsQuery();return query.createDataServiceRequestForOperation('Open',true,ShiftClass,'false',{bypassCache:'get',returnEntity:'Shift'},{shiftId:shiftId,cashDrawer:cashDrawer,isShared:isShared});}export function openAsync(context,shiftId,cashDrawer,isShared){const request=createOpenInput(shiftId,cashDrawer,isShared);return executeAction(request,context);}export function createCloseInput(shiftId,terminalId,transactionId,forceClose,hasOfflinePendingTransactions){const query=shiftsQuery(shiftId,terminalId);return query.createDataServiceRequestForOperation('Close',true,ShiftClass,'false',{bypassCache:'get',returnEntity:'Shift'},{transactionId:transactionId,forceClose:forceClose,hasOfflinePendingTransactions:hasOfflinePendingTransactions});}export function closeAsync(context,shiftId,terminalId,transactionId,forceClose,hasOfflinePendingTransactions){const request=createCloseInput(shiftId,terminalId,transactionId,forceClose,hasOfflinePendingTransactions);return executeAction(request,context);}export function createGetSuspendedCartsByShiftInput(queryResultSettings,shiftTerminalId,shiftId){const query=shiftsQuery().resultSettings(queryResultSettings);return query.createDataServiceRequestForOperation('GetSuspendedCartsByShift',true,SuspendedCartClass,'true',{bypassCache:'none',returnEntity:'SuspendedCart'},{shiftTerminalId:shiftTerminalId,shiftId:shiftId});}export function getSuspendedCartsByShiftAsync(context,shiftTerminalId,shiftId){const request=createGetSuspendedCartsByShiftInput(context.queryResultSettings,shiftTerminalId,shiftId);return executeAction(request,context);}export function createVoidSuspendedCartsInput(shiftId,terminalId){const query=shiftsQuery(shiftId,terminalId);return query.createDataServiceRequestForOperation('VoidSuspendedCarts',true,'','',{bypassCache:'get',returnEntity:''},{});}export function voidSuspendedCartsAsync(context,shiftId,terminalId){const request=createVoidSuspendedCartsInput(shiftId,terminalId);return executeAction(request,context);}export function createSaveTenderLinesInput(shiftId,terminalId,tenderLines){const query=shiftsQuery(shiftId,terminalId);return query.createDataServiceRequestForOperation('SaveTenderLines',true,'','',{bypassCache:'get',returnEntity:''},{tenderLines:tenderLines});}export function saveTenderLinesAsync(context,shiftId,terminalId,tenderLines){const request=createSaveTenderLinesInput(shiftId,terminalId,tenderLines);return executeAction(request,context);}export function createBlindCloseInput(shiftId,terminalId,transactionId,forceClose){const query=shiftsQuery(shiftId,terminalId);return query.createDataServiceRequestForOperation('BlindClose',true,ShiftClass,'false',{bypassCache:'get',returnEntity:'Shift'},{transactionId:transactionId,forceClose:forceClose});}export function blindCloseAsync(context,shiftId,terminalId,transactionId,forceClose){const request=createBlindCloseInput(shiftId,terminalId,transactionId,forceClose);return executeAction(request,context);}export function createForceDeleteInput(shiftId,terminalId,transactionId){const query=shiftsQuery(shiftId,terminalId);return query.createDataServiceRequestForOperation('ForceDelete',true,'','',{bypassCache:'get',returnEntity:''},{transactionId:transactionId});}export function forceDeleteAsync(context,shiftId,terminalId,transactionId){const request=createForceDeleteInput(shiftId,terminalId,transactionId);return executeAction(request,context);}export function createResumeInput(shiftId,terminalId,cashDrawer){const query=shiftsQuery(shiftId,terminalId);return query.createDataServiceRequestForOperation('Resume',true,ShiftClass,'false',{bypassCache:'get',returnEntity:'Shift'},{cashDrawer:cashDrawer});}export function resumeAsync(context,shiftId,terminalId,cashDrawer){const request=createResumeInput(shiftId,terminalId,cashDrawer);return executeAction(request,context);}export function createUseInput(shiftId,terminalId){const query=shiftsQuery(shiftId,terminalId);return query.createDataServiceRequestForOperation('Use',true,ShiftClass,'false',{bypassCache:'get',returnEntity:'Shift'},{});}export function useAsync(context,shiftId,terminalId){const request=createUseInput(shiftId,terminalId);return executeAction(request,context);}export function createSuspendInput(shiftId,terminalId,transactionId){const query=shiftsQuery(shiftId,terminalId);return query.createDataServiceRequestForOperation('Suspend',true,ShiftClass,'false',{bypassCache:'get',returnEntity:'Shift'},{transactionId:transactionId});}export function suspendAsync(context,shiftId,terminalId,transactionId){const request=createSuspendInput(shiftId,terminalId,transactionId);return executeAction(request,context);}export function createGetByStatusInput(queryResultSettings,statusValue){const query=shiftsQuery().resultSettings(queryResultSettings);return query.createDataServiceRequestForOperation('GetByStatus',false,ShiftClass,'true',{bypassCache:'none',returnEntity:'Shift'},{statusValue:statusValue});}export function getByStatusAsync(context,statusValue){const request=createGetByStatusInput(context.queryResultSettings,statusValue);return executeAction(request,context);}export function createGetByStatusFilterByUserRoleInput(queryResultSettings,statusValue,filterByUserRole){const query=shiftsQuery().resultSettings(queryResultSettings);return query.createDataServiceRequestForOperation('GetByStatusFilterByUserRole',false,ShiftClass,'true',{bypassCache:'none',returnEntity:'Shift'},{statusValue:statusValue,filterByUserRole:filterByUserRole});}export function getByStatusFilterByUserRoleAsync(context,statusValue,filterByUserRole){const request=createGetByStatusFilterByUserRoleInput(context.queryResultSettings,statusValue,filterByUserRole);return executeAction(request,context);}export function createGetByRetrievalCriteriaInput(queryResultSettings,shiftRetrievalCriteria){const query=shiftsQuery().resultSettings(queryResultSettings);return query.createDataServiceRequestForOperation('GetByRetrievalCriteria',true,ShiftClass,'true',{bypassCache:'none',returnEntity:'Shift'},{shiftRetrievalCriteria:shiftRetrievalCriteria});}export function getByRetrievalCriteriaAsync(context,shiftRetrievalCriteria){const request=createGetByRetrievalCriteriaInput(context.queryResultSettings,shiftRetrievalCriteria);return executeAction(request,context);}export function createGetXReportInput(shiftId,terminalId,transactionId,hardwareProfileId){const query=shiftsQuery(shiftId,terminalId);return query.createDataServiceRequestForOperation('GetXReport',false,ReceiptClass,'false',{bypassCache:'none',returnEntity:'Receipt'},{transactionId:transactionId,hardwareProfileId:hardwareProfileId});}export function getXReportAsync(context,shiftId,terminalId,transactionId,hardwareProfileId){const request=createGetXReportInput(shiftId,terminalId,transactionId,hardwareProfileId);return executeAction(request,context);}export function createGetZReportInput(transactionId,hardwareProfileId){const query=shiftsQuery();return query.createDataServiceRequestForOperation('GetZReport',false,ReceiptClass,'false',{bypassCache:'none',returnEntity:'Receipt'},{transactionId:transactionId,hardwareProfileId:hardwareProfileId});}export function getZReportAsync(context,transactionId,hardwareProfileId){const request=createGetZReportInput(transactionId,hardwareProfileId);return executeAction(request,context);}export function createGetOpenTenderLinesInput(queryResultSettings,shiftId,terminalId){const query=shiftsQuery(shiftId,terminalId).resultSettings(queryResultSettings);return query.createDataServiceRequestForOperation('GetOpenTenderLines',false,ShiftTenderLineClass,'true',{bypassCache:'none',returnEntity:'ShiftTenderLine'},{});}export function getOpenTenderLinesAsync(context,shiftId,terminalId){const request=createGetOpenTenderLinesInput(context.queryResultSettings,shiftId,terminalId);return executeAction(request,context);}export function createValidateCashDrawerLimitInput(shiftTerminalId,shiftId){const query=shiftsQuery();return query.createDataServiceRequestForOperation('ValidateCashDrawerLimit',true,'','',{bypassCache:'get',returnEntity:''},{shiftTerminalId:shiftTerminalId,shiftId:shiftId});}export function validateCashDrawerLimitAsync(context,shiftTerminalId,shiftId){const request=createValidateCashDrawerLimitInput(shiftTerminalId,shiftId);return executeAction(request,context);}","map":{"version":3,"sources":["../../src/DataActions/ShiftsDataActions.g.ts"],"names":[],"mappings":"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","sourcesContent":["    // <auto-generated />\n    import { AsyncResult } from '../async-result';\n    import { DataServiceQuery } from '../DataServiceQuery';\n    import { Shift, SuspendedCart, ShiftTenderLine, ShiftRetrievalCriteria, Receipt } from '../Entities/CommerceTypes.g';\n    import { ShiftClass, SuspendedCartClass, ReceiptClass, ShiftTenderLineClass } from '../Entities/CommerceModels.g';\n    import { IContext, IDataServiceRequest, IQueryResultSettings, NullResult } from '../Interfaces';\n    import { executeAction } from '../retail-action';\n    \n    \n    function shiftsQuery(shiftId?: number, terminalId?: string): DataServiceQuery {\n      var key = (shiftId && terminalId) ? { ShiftId: shiftId, TerminalId: terminalId } : null;\n      return new DataServiceQuery(\"Shifts\", \"Shift\", ShiftClass, key);\n    }\n    \n    export function createCreateInput(entity: Shift): IDataServiceRequest {\n        return shiftsQuery().create(entity);\n    }\n    export function createShiftAsync(context: IContext, entity: Shift): AsyncResult<Shift> {\n        const request = createCreateInput(entity, );\n        return executeAction<Shift>(request, context);\n    }\n    export function createUpdateInput(entity: Shift): IDataServiceRequest {\n        return shiftsQuery(entity.ShiftId, entity.TerminalId).update(entity);\n    }\n    export function updateAsync(context: IContext, entity: Shift): AsyncResult<Shift> {\n        const request = createUpdateInput(entity, );\n        return executeAction<Shift>(request, context);\n    }\n    export function createDeleteAsync(entity: Shift): IDataServiceRequest {\n        return shiftsQuery(entity.ShiftId, entity.TerminalId).delete();\n    }\n    export function deleteAsync(context: IContext, entity: Shift): AsyncResult<NullResult> {\n        const request = createDeleteAsync(entity, );\n        return executeAction<NullResult>(request, context);\n    }\n    export function createReadAsync(shiftId: number, terminalId: string): IDataServiceRequest {\n        return shiftsQuery(shiftId, terminalId).read();\n    }\n    export function readAsync(context: IContext, shiftId: number, terminalId: string): AsyncResult<Shift> {\n        const request = createReadAsync(shiftId, terminalId, );\n        return executeAction<Shift>(request, context);\n    }\n    export function createReadAllAsync(queryResultSettings: IQueryResultSettings): IDataServiceRequest {\n        return shiftsQuery().resultSettings(queryResultSettings).read();\n    }\n    export function readAllAsync(context: IContext): AsyncResult<Shift[]> {\n        const request = createReadAllAsync(context.queryResultSettings, );\n        return executeAction<Shift[]>(request, context);\n    }\n    \n    export function createUpsertShiftsInput(shifts: Shift[] | null): IDataServiceRequest {      \n        const query = shiftsQuery();\n        return query.createDataServiceRequestForOperation('UpsertShifts', true, '', 'false', { bypassCache: 'get', returnEntity: ''}, {shifts: shifts });\n    }    \n    \n    export function upsertShiftsAsync(context: IContext, shifts: Shift[] | null):AsyncResult<boolean> {\n        const request = createUpsertShiftsInput(shifts, );\n        return executeAction<boolean>(request, context);\n    }          \n          \n    export function createUpsertAndValidateShiftsInput(shiftId: number | null, terminalId: string | null, shifts: Shift[] | null): IDataServiceRequest {      \n        const query = shiftsQuery();\n        return query.createDataServiceRequestForOperation('UpsertAndValidateShifts', true, '', 'false', { bypassCache: 'get', returnEntity: ''}, {shiftId: shiftId, terminalId: terminalId, shifts: shifts });\n    }    \n    \n    export function upsertAndValidateShiftsAsync(context: IContext, shiftId: number | null, terminalId: string | null, shifts: Shift[] | null):AsyncResult<boolean> {\n        const request = createUpsertAndValidateShiftsInput(shiftId, terminalId, shifts, );\n        return executeAction<boolean>(request, context);\n    }          \n          \n    export function createDeleteShiftsInput(): IDataServiceRequest {      \n        const query = shiftsQuery();\n        return query.createDataServiceRequestForOperation('DeleteShifts', true, '', 'false', { bypassCache: 'get', returnEntity: ''}, { });\n    }    \n    \n    export function deleteShiftsAsync(context: IContext):AsyncResult<boolean> {\n        const request = createDeleteShiftsInput();\n        return executeAction<boolean>(request, context);\n    }          \n          \n    export function createOpenInput(shiftId: number | null, cashDrawer: string | null, isShared: boolean): IDataServiceRequest {      \n        const query = shiftsQuery();\n        return query.createDataServiceRequestForOperation('Open', true, ShiftClass, 'false', { bypassCache: 'get', returnEntity: 'Shift'}, {shiftId: shiftId, cashDrawer: cashDrawer, isShared: isShared });\n    }    \n    \n    export function openAsync(context: IContext, shiftId: number | null, cashDrawer: string | null, isShared: boolean):AsyncResult<Shift> {\n        const request = createOpenInput(shiftId, cashDrawer, isShared, );\n        return executeAction<Shift>(request, context);\n    }          \n          \n    export function createCloseInput(shiftId: number, terminalId: string, transactionId: string | null, forceClose: boolean, hasOfflinePendingTransactions: boolean | null): IDataServiceRequest {      \n        const query = shiftsQuery(shiftId, terminalId);\n        return query.createDataServiceRequestForOperation('Close', true, ShiftClass, 'false', { bypassCache: 'get', returnEntity: 'Shift'}, {transactionId: transactionId, forceClose: forceClose, hasOfflinePendingTransactions: hasOfflinePendingTransactions });\n    }    \n    \n    export function closeAsync(context: IContext, shiftId: number, terminalId: string, transactionId: string | null, forceClose: boolean, hasOfflinePendingTransactions: boolean | null):AsyncResult<Shift> {\n        const request = createCloseInput(shiftId, terminalId, transactionId, forceClose, hasOfflinePendingTransactions, );\n        return executeAction<Shift>(request, context);\n    }          \n          \n    export function createGetSuspendedCartsByShiftInput(queryResultSettings: IQueryResultSettings, shiftTerminalId: string | null, shiftId: number): IDataServiceRequest {      \n        const query = shiftsQuery().resultSettings(queryResultSettings);\n        return query.createDataServiceRequestForOperation('GetSuspendedCartsByShift', true, SuspendedCartClass, 'true', { bypassCache: 'none', returnEntity: 'SuspendedCart'}, {shiftTerminalId: shiftTerminalId, shiftId: shiftId });\n    }    \n    \n    export function getSuspendedCartsByShiftAsync(context: IContext, shiftTerminalId: string | null, shiftId: number):AsyncResult<SuspendedCart[]> {\n        const request = createGetSuspendedCartsByShiftInput(context.queryResultSettings, shiftTerminalId, shiftId, );\n        return executeAction<SuspendedCart[]>(request, context);\n    }          \n          \n    export function createVoidSuspendedCartsInput(shiftId: number, terminalId: string): IDataServiceRequest {      \n        const query = shiftsQuery(shiftId, terminalId);\n        return query.createDataServiceRequestForOperation('VoidSuspendedCarts', true, '', '', { bypassCache: 'get', returnEntity: ''}, { });\n    }    \n    \n    export function voidSuspendedCartsAsync(context: IContext, shiftId: number, terminalId: string):AsyncResult<NullResult> {\n        const request = createVoidSuspendedCartsInput(shiftId, terminalId, );\n        return executeAction<NullResult>(request, context);\n    }          \n          \n    export function createSaveTenderLinesInput(shiftId: number, terminalId: string, tenderLines: ShiftTenderLine[] | null): IDataServiceRequest {      \n        const query = shiftsQuery(shiftId, terminalId);\n        return query.createDataServiceRequestForOperation('SaveTenderLines', true, '', '', { bypassCache: 'get', returnEntity: ''}, {tenderLines: tenderLines });\n    }    \n    \n    export function saveTenderLinesAsync(context: IContext, shiftId: number, terminalId: string, tenderLines: ShiftTenderLine[] | null):AsyncResult<NullResult> {\n        const request = createSaveTenderLinesInput(shiftId, terminalId, tenderLines, );\n        return executeAction<NullResult>(request, context);\n    }          \n          \n    export function createBlindCloseInput(shiftId: number, terminalId: string, transactionId: string | null, forceClose: boolean): IDataServiceRequest {      \n        const query = shiftsQuery(shiftId, terminalId);\n        return query.createDataServiceRequestForOperation('BlindClose', true, ShiftClass, 'false', { bypassCache: 'get', returnEntity: 'Shift'}, {transactionId: transactionId, forceClose: forceClose });\n    }    \n    \n    export function blindCloseAsync(context: IContext, shiftId: number, terminalId: string, transactionId: string | null, forceClose: boolean):AsyncResult<Shift> {\n        const request = createBlindCloseInput(shiftId, terminalId, transactionId, forceClose, );\n        return executeAction<Shift>(request, context);\n    }          \n          \n    export function createForceDeleteInput(shiftId: number, terminalId: string, transactionId: string | null): IDataServiceRequest {      \n        const query = shiftsQuery(shiftId, terminalId);\n        return query.createDataServiceRequestForOperation('ForceDelete', true, '', '', { bypassCache: 'get', returnEntity: ''}, {transactionId: transactionId });\n    }    \n    \n    export function forceDeleteAsync(context: IContext, shiftId: number, terminalId: string, transactionId: string | null):AsyncResult<NullResult> {\n        const request = createForceDeleteInput(shiftId, terminalId, transactionId, );\n        return executeAction<NullResult>(request, context);\n    }          \n          \n    export function createResumeInput(shiftId: number, terminalId: string, cashDrawer: string | null): IDataServiceRequest {      \n        const query = shiftsQuery(shiftId, terminalId);\n        return query.createDataServiceRequestForOperation('Resume', true, ShiftClass, 'false', { bypassCache: 'get', returnEntity: 'Shift'}, {cashDrawer: cashDrawer });\n    }    \n    \n    export function resumeAsync(context: IContext, shiftId: number, terminalId: string, cashDrawer: string | null):AsyncResult<Shift> {\n        const request = createResumeInput(shiftId, terminalId, cashDrawer, );\n        return executeAction<Shift>(request, context);\n    }          \n          \n    export function createUseInput(shiftId: number, terminalId: string): IDataServiceRequest {      \n        const query = shiftsQuery(shiftId, terminalId);\n        return query.createDataServiceRequestForOperation('Use', true, ShiftClass, 'false', { bypassCache: 'get', returnEntity: 'Shift'}, { });\n    }    \n    \n    export function useAsync(context: IContext, shiftId: number, terminalId: string):AsyncResult<Shift> {\n        const request = createUseInput(shiftId, terminalId, );\n        return executeAction<Shift>(request, context);\n    }          \n          \n    export function createSuspendInput(shiftId: number, terminalId: string, transactionId: string | null): IDataServiceRequest {      \n        const query = shiftsQuery(shiftId, terminalId);\n        return query.createDataServiceRequestForOperation('Suspend', true, ShiftClass, 'false', { bypassCache: 'get', returnEntity: 'Shift'}, {transactionId: transactionId });\n    }    \n    \n    export function suspendAsync(context: IContext, shiftId: number, terminalId: string, transactionId: string | null):AsyncResult<Shift> {\n        const request = createSuspendInput(shiftId, terminalId, transactionId, );\n        return executeAction<Shift>(request, context);\n    }          \n          \n    export function createGetByStatusInput(queryResultSettings: IQueryResultSettings, statusValue: number): IDataServiceRequest {      \n        const query = shiftsQuery().resultSettings(queryResultSettings);\n        return query.createDataServiceRequestForOperation('GetByStatus', false, ShiftClass, 'true', { bypassCache: 'none', returnEntity: 'Shift'}, {statusValue: statusValue });\n    }    \n    \n    export function getByStatusAsync(context: IContext, statusValue: number):AsyncResult<Shift[]> {\n        const request = createGetByStatusInput(context.queryResultSettings, statusValue, );\n        return executeAction<Shift[]>(request, context);\n    }          \n          \n    export function createGetByStatusFilterByUserRoleInput(queryResultSettings: IQueryResultSettings, statusValue: number, filterByUserRole: boolean): IDataServiceRequest {      \n        const query = shiftsQuery().resultSettings(queryResultSettings);\n        return query.createDataServiceRequestForOperation('GetByStatusFilterByUserRole', false, ShiftClass, 'true', { bypassCache: 'none', returnEntity: 'Shift'}, {statusValue: statusValue, filterByUserRole: filterByUserRole });\n    }    \n    \n    export function getByStatusFilterByUserRoleAsync(context: IContext, statusValue: number, filterByUserRole: boolean):AsyncResult<Shift[]> {\n        const request = createGetByStatusFilterByUserRoleInput(context.queryResultSettings, statusValue, filterByUserRole, );\n        return executeAction<Shift[]>(request, context);\n    }          \n          \n    export function createGetByRetrievalCriteriaInput(queryResultSettings: IQueryResultSettings, shiftRetrievalCriteria: ShiftRetrievalCriteria | null): IDataServiceRequest {      \n        const query = shiftsQuery().resultSettings(queryResultSettings);\n        return query.createDataServiceRequestForOperation('GetByRetrievalCriteria', true, ShiftClass, 'true', { bypassCache: 'none', returnEntity: 'Shift'}, {shiftRetrievalCriteria: shiftRetrievalCriteria });\n    }    \n    \n    export function getByRetrievalCriteriaAsync(context: IContext, shiftRetrievalCriteria: ShiftRetrievalCriteria | null):AsyncResult<Shift[]> {\n        const request = createGetByRetrievalCriteriaInput(context.queryResultSettings, shiftRetrievalCriteria, );\n        return executeAction<Shift[]>(request, context);\n    }          \n          \n    export function createGetXReportInput(shiftId: number, terminalId: string, transactionId: string | null, hardwareProfileId: string | null): IDataServiceRequest {      \n        const query = shiftsQuery(shiftId, terminalId);\n        return query.createDataServiceRequestForOperation('GetXReport', false, ReceiptClass, 'false', { bypassCache: 'none', returnEntity: 'Receipt'}, {transactionId: transactionId, hardwareProfileId: hardwareProfileId });\n    }    \n    \n    export function getXReportAsync(context: IContext, shiftId: number, terminalId: string, transactionId: string | null, hardwareProfileId: string | null):AsyncResult<Receipt> {\n        const request = createGetXReportInput(shiftId, terminalId, transactionId, hardwareProfileId, );\n        return executeAction<Receipt>(request, context);\n    }          \n          \n    export function createGetZReportInput(transactionId: string | null, hardwareProfileId: string | null): IDataServiceRequest {      \n        const query = shiftsQuery();\n        return query.createDataServiceRequestForOperation('GetZReport', false, ReceiptClass, 'false', { bypassCache: 'none', returnEntity: 'Receipt'}, {transactionId: transactionId, hardwareProfileId: hardwareProfileId });\n    }    \n    \n    export function getZReportAsync(context: IContext, transactionId: string | null, hardwareProfileId: string | null):AsyncResult<Receipt> {\n        const request = createGetZReportInput(transactionId, hardwareProfileId, );\n        return executeAction<Receipt>(request, context);\n    }          \n          \n    export function createGetOpenTenderLinesInput(queryResultSettings: IQueryResultSettings, shiftId: number, terminalId: string): IDataServiceRequest {      \n        const query = shiftsQuery(shiftId, terminalId).resultSettings(queryResultSettings);\n        return query.createDataServiceRequestForOperation('GetOpenTenderLines', false, ShiftTenderLineClass, 'true', { bypassCache: 'none', returnEntity: 'ShiftTenderLine'}, { });\n    }    \n    \n    export function getOpenTenderLinesAsync(context: IContext, shiftId: number, terminalId: string):AsyncResult<ShiftTenderLine[]> {\n        const request = createGetOpenTenderLinesInput(context.queryResultSettings, shiftId, terminalId, );\n        return executeAction<ShiftTenderLine[]>(request, context);\n    }          \n          \n    export function createValidateCashDrawerLimitInput(shiftTerminalId: string | null, shiftId: number): IDataServiceRequest {      \n        const query = shiftsQuery();\n        return query.createDataServiceRequestForOperation('ValidateCashDrawerLimit', true, '', '', { bypassCache: 'get', returnEntity: ''}, {shiftTerminalId: shiftTerminalId, shiftId: shiftId });\n    }    \n    \n    export function validateCashDrawerLimitAsync(context: IContext, shiftTerminalId: string | null, shiftId: number):AsyncResult<NullResult> {\n        const request = createValidateCashDrawerLimitInput(shiftTerminalId, shiftId, );\n        return executeAction<NullResult>(request, context);\n    }          \n          \n    "],"sourceRoot":""},"metadata":{},"sourceType":"module"}