{"ast":null,"code":"import{DataServiceQuery}from'../DataServiceQuery';import{PurchaseOrderClass}from'../Entities/CommerceModels.g';import{executeAction}from'../retail-action';function purchaseOrdersQuery(orderId){var key=orderId?{OrderId:orderId}:null;return new DataServiceQuery(\"PurchaseOrders\",\"PurchaseOrder\",PurchaseOrderClass,key);}export function createCreateInput(entity){return purchaseOrdersQuery().create(entity);}export function createPurchaseOrderAsync(context,entity){var request=createCreateInput(entity);return executeAction(request,context);}export function createUpdateInput(entity){return purchaseOrdersQuery(entity.OrderId).update(entity);}export function updateAsync(context,entity){var request=createUpdateInput(entity);return executeAction(request,context);}export function createDeleteAsync(entity){return purchaseOrdersQuery(entity.OrderId)[\"delete\"]();}export function deleteAsync(context,entity){var request=createDeleteAsync(entity);return executeAction(request,context);}export function createReadAsync(orderId){return purchaseOrdersQuery(orderId).read();}export function readAsync(context,orderId){var request=createReadAsync(orderId);return executeAction(request,context);}export function createReadAllAsync(queryResultSettings){return purchaseOrdersQuery().resultSettings(queryResultSettings).read();}export function readAllAsync(context){var request=createReadAllAsync(context.queryResultSettings);return executeAction(request,context);}export function createCommitInput(orderId){var query=purchaseOrdersQuery(orderId);return query.createDataServiceRequestForOperation('Commit',true,'','',{bypassCache:'get',returnEntity:''},{});}export function commitAsync(context,orderId){var request=createCommitInput(orderId);return executeAction(request,context);}","map":{"version":3,"sources":["../../src/DataActions/PurchaseOrdersDataActions.g.ts"],"names":[],"mappings":"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","sourcesContent":["    // <auto-generated />\n    import { AsyncResult } from '../async-result';\n    import { DataServiceQuery } from '../DataServiceQuery';\n    import { PurchaseOrder } from '../Entities/CommerceTypes.g';\n    import { PurchaseOrderClass } from '../Entities/CommerceModels.g';\n    import { IContext, IDataServiceRequest, IQueryResultSettings, NullResult } from '../Interfaces';\n    import { executeAction } from '../retail-action';\n    \n    \n    function purchaseOrdersQuery(orderId?: string): DataServiceQuery {\n      var key = (orderId) ? { OrderId: orderId } : null;\n      return new DataServiceQuery(\"PurchaseOrders\", \"PurchaseOrder\", PurchaseOrderClass, key);\n    }\n    \n    export function createCreateInput(entity: PurchaseOrder): IDataServiceRequest {\n        return purchaseOrdersQuery().create(entity);\n    }\n    export function createPurchaseOrderAsync(context: IContext, entity: PurchaseOrder): AsyncResult<PurchaseOrder> {\n        const request = createCreateInput(entity, );\n        return executeAction<PurchaseOrder>(request, context);\n    }\n    export function createUpdateInput(entity: PurchaseOrder): IDataServiceRequest {\n        return purchaseOrdersQuery(entity.OrderId).update(entity);\n    }\n    export function updateAsync(context: IContext, entity: PurchaseOrder): AsyncResult<PurchaseOrder> {\n        const request = createUpdateInput(entity, );\n        return executeAction<PurchaseOrder>(request, context);\n    }\n    export function createDeleteAsync(entity: PurchaseOrder): IDataServiceRequest {\n        return purchaseOrdersQuery(entity.OrderId).delete();\n    }\n    export function deleteAsync(context: IContext, entity: PurchaseOrder): AsyncResult<NullResult> {\n        const request = createDeleteAsync(entity, );\n        return executeAction<NullResult>(request, context);\n    }\n    export function createReadAsync(orderId: string): IDataServiceRequest {\n        return purchaseOrdersQuery(orderId).read();\n    }\n    export function readAsync(context: IContext, orderId: string): AsyncResult<PurchaseOrder> {\n        const request = createReadAsync(orderId, );\n        return executeAction<PurchaseOrder>(request, context);\n    }\n    export function createReadAllAsync(queryResultSettings: IQueryResultSettings): IDataServiceRequest {\n        return purchaseOrdersQuery().resultSettings(queryResultSettings).read();\n    }\n    export function readAllAsync(context: IContext): AsyncResult<PurchaseOrder[]> {\n        const request = createReadAllAsync(context.queryResultSettings, );\n        return executeAction<PurchaseOrder[]>(request, context);\n    }\n    \n    export function createCommitInput(orderId: string): IDataServiceRequest {      \n        const query = purchaseOrdersQuery(orderId);\n        return query.createDataServiceRequestForOperation('Commit', true, '', '', { bypassCache: 'get', returnEntity: ''}, { });\n    }    \n    \n    export function commitAsync(context: IContext, orderId: string):AsyncResult<NullResult> {\n        const request = createCommitInput(orderId, );\n        return executeAction<NullResult>(request, context);\n    }          \n          \n    "],"sourceRoot":""},"metadata":{},"sourceType":"module"}