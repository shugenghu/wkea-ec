{"ast":null,"code":"import\"core-js/modules/es.promise.js\";import\"core-js/modules/web.dom-collections.iterator.js\";import{createObservableDataAction}from'@msdyn365-commerce/core';import{getEstimatedAvailabilityAsync}from'@msdyn365-commerce/retail-proxy/dist/DataActions/ProductsDataActions.g';import{getSelectedProductIdFromActionInput,getSelectedVariant,SelectedVariantInput}from'./index';import{mapProductInventoryInformation}from'./utilities/product-inventory-utils';/**\r\n * Input class for the getProductAvailabilitiesForSelectedVariant Data Action\r\n */export class ProductAvailabilitiesForSelectedVariantInput{constructor(productId,channelId){this.getCacheKey=()=>\"ProductAvailabilitiesForSelectedVariant\";this.getCacheObjectType=()=>'ProductAvailabilities';this.dataCacheType=()=>'none';this.productId=typeof productId==='string'?+productId:productId;this.channelId=channelId;}}/**\r\n * createInput method for the getProductAvailabilitiesForSelectedVariant data action.\r\n * @param inputData The input data passed to the createInput method\r\n */export const createProductAvailabilitiesForSelectedVariantInput=inputData=>{const productId=getSelectedProductIdFromActionInput(inputData);if(productId){return new ProductAvailabilitiesForSelectedVariantInput(+productId,+inputData.requestContext.apiSettings.channelId);}else{throw new Error('Unable to create ProductAvailabilitiesForSelectedVariantInput, no productId found on module config or query');}};/**\r\n * The action method for the getProductAvailabilitiesForSelectedVariant data action\r\n */export async function getProductAvailabilitiesForSelectedVariantAction(input,ctx){const selectedVariantInput=new SelectedVariantInput(input.productId,input.channelId);return getSelectedVariant(selectedVariantInput,ctx).then(productResult=>{if(productResult){return getEstimatedAvailabilityAsync({callerContext:ctx},{ProductIds:[productResult.RecordId],DefaultWarehouseOnly:true}).then(response=>{if(response&&response.ProductWarehouseInventoryAvailabilities&&response.ProductWarehouseInventoryAvailabilities.length){return mapProductInventoryInformation(ctx,response.ProductWarehouseInventoryAvailabilities);}return undefined;});}return undefined;}).catch(error=>{ctx.trace(error.message);ctx.telemetry.exception(error);ctx.telemetry.debug(\"[getPriceForSelectedVariantAction]Error executing action\");throw new Error('[getPriceForSelectedVariantAction]Error executing action');});}/**\r\n * The function that maps a ProductWareHouse object into a ProductAvailabilityQuantity\r\n */export function mergeProductWarehouseToProductAvailabities(productsWarehouseInventory){let productAvailable=[];if(productsWarehouseInventory&&productsWarehouseInventory.length>0){for(const product of productsWarehouseInventory){if(product.TotalAvailable!==undefined&&product.ProductId!==undefined){productAvailable.push({ProductId:product.ProductId,AvailableQuantity:product.TotalAvailable});}}}return productAvailable;}/**\r\n * The complete getProductAvailabilitiesForSelectedVariant data action\r\n * Get the currently selected variant via the getSelectedVariant data action, and\r\n * then gets the availabilities for the variant via the getProductAvailabilities RetailServer API\r\n */export default createObservableDataAction({id:'@msdyn365-commerce-modules/retail-actions/get-product-availabilities-for-selected-variant',action:getProductAvailabilitiesForSelectedVariantAction,input:createProductAvailabilitiesForSelectedVariantInput});","map":{"version":3,"sources":["../../src/get-product-availabilities-for-selected-variant.ts"],"names":[],"mappings":"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","sourcesContent":["import { CacheType, createObservableDataAction, IAction, IActionContext, IActionInput, IAny, ICreateActionContext, IGeneric } from '@msdyn365-commerce/core';\nimport { ProductWarehouseInventoryAvailability } from '@msdyn365-commerce/retail-proxy';\nimport { getEstimatedAvailabilityAsync } from '@msdyn365-commerce/retail-proxy/dist/DataActions/ProductsDataActions.g';\nimport { ProductAvailableQuantity } from '@msdyn365-commerce/retail-proxy/dist/Entities/CommerceTypes.g';\nimport { getSelectedProductIdFromActionInput, getSelectedVariant, IProductInventoryInformation, SelectedVariantInput } from './index';\nimport { mapProductInventoryInformation } from './utilities/product-inventory-utils';\n\n/**\n * Input class for the getProductAvailabilitiesForSelectedVariant Data Action\n */\nexport class ProductAvailabilitiesForSelectedVariantInput implements IActionInput {\n    public productId: number;\n    public channelId: number;\n\n    constructor(productId: number | string, channelId: number) {\n        this.productId = typeof productId === 'string' ? +productId : productId;\n        this.channelId = channelId;\n    }\n\n    public getCacheKey = () => `ProductAvailabilitiesForSelectedVariant`;\n    public getCacheObjectType = () => 'ProductAvailabilities';\n    public dataCacheType = (): CacheType => 'none';\n}\n\n/**\n * createInput method for the getProductAvailabilitiesForSelectedVariant data action.\n * @param inputData The input data passed to the createInput method\n */\nexport const createProductAvailabilitiesForSelectedVariantInput = (\n    inputData: ICreateActionContext<IGeneric<IAny>>\n): ProductAvailabilitiesForSelectedVariantInput => {\n    const productId = getSelectedProductIdFromActionInput(inputData);\n\n    if (productId) {\n        return new ProductAvailabilitiesForSelectedVariantInput(+productId, +inputData.requestContext.apiSettings.channelId);\n    } else {\n        throw new Error('Unable to create ProductAvailabilitiesForSelectedVariantInput, no productId found on module config or query');\n    }\n};\n\n/**\n * The action method for the getProductAvailabilitiesForSelectedVariant data action\n */\nexport async function getProductAvailabilitiesForSelectedVariantAction(\n    input: ProductAvailabilitiesForSelectedVariantInput,\n    ctx: IActionContext\n): Promise<IProductInventoryInformation[] | undefined> {\n    const selectedVariantInput = new SelectedVariantInput(input.productId, input.channelId);\n    return getSelectedVariant(selectedVariantInput, ctx)\n        .then(productResult => {\n            if (productResult) {\n                return getEstimatedAvailabilityAsync({ callerContext: ctx }, { ProductIds: [productResult.RecordId], DefaultWarehouseOnly: true}).then(response => {\n                    if(response && response.ProductWarehouseInventoryAvailabilities && response.ProductWarehouseInventoryAvailabilities.length) {\n                        return mapProductInventoryInformation(ctx, response.ProductWarehouseInventoryAvailabilities)\n                    }\n                    return undefined;\n                });\n            }\n\n            return undefined;\n        })\n        .catch((error: Error) => {\n            ctx.trace(error.message);\n            ctx.telemetry.exception(error);\n            ctx.telemetry.debug(`[getPriceForSelectedVariantAction]Error executing action`);\n            throw new Error('[getPriceForSelectedVariantAction]Error executing action');\n        });\n}\n\n/**\n * The function that maps a ProductWareHouse object into a ProductAvailabilityQuantity\n */\nexport function mergeProductWarehouseToProductAvailabities(productsWarehouseInventory: ProductWarehouseInventoryAvailability[]): ProductAvailableQuantity[] {\n    let productAvailable: ProductAvailableQuantity[] = [];\n    if(productsWarehouseInventory && productsWarehouseInventory.length > 0) {\n        for(const product of productsWarehouseInventory) {\n            if(product.TotalAvailable !== undefined && product.ProductId !== undefined) {\n                productAvailable.push({ProductId: product.ProductId, AvailableQuantity: product.TotalAvailable});\n            }\n        }\n    }\n    return productAvailable;\n}\n\n\n/**\n * The complete getProductAvailabilitiesForSelectedVariant data action\n * Get the currently selected variant via the getSelectedVariant data action, and\n * then gets the availabilities for the variant via the getProductAvailabilities RetailServer API\n */\nexport default createObservableDataAction({\n    id: '@msdyn365-commerce-modules/retail-actions/get-product-availabilities-for-selected-variant',\n    action: <IAction<IProductInventoryInformation[] | null>>getProductAvailabilitiesForSelectedVariantAction,\n    input: createProductAvailabilitiesForSelectedVariantInput\n});\n"],"sourceRoot":""},"metadata":{},"sourceType":"module"}