{"ast":null,"code":"import{DataServiceQuery}from'../DataServiceQuery';import{ProductListClass,ProductListLineClass}from'../Entities/CommerceModels.g';import{executeAction}from'../retail-action';function productListsQuery(id){var key=id?{Id:id}:null;return new DataServiceQuery(\"ProductLists\",\"ProductList\",ProductListClass,key);}export function createCreateInput(entity){return productListsQuery().create(entity);}export function createProductListAsync(context,entity){var request=createCreateInput(entity);return executeAction(request,context);}export function createUpdateInput(entity){return productListsQuery(entity.Id).update(entity);}export function updateAsync(context,entity){var request=createUpdateInput(entity);return executeAction(request,context);}export function createDeleteAsync(entity){return productListsQuery(entity.Id)[\"delete\"]();}export function deleteAsync(context,entity){var request=createDeleteAsync(entity);return executeAction(request,context);}export function createReadAsync(id){return productListsQuery(id).read();}export function readAsync(context,id){var request=createReadAsync(id);return executeAction(request,context);}export function createReadAllAsync(queryResultSettings){return productListsQuery().resultSettings(queryResultSettings).read();}export function readAllAsync(context){var request=createReadAllAsync(context.queryResultSettings);return executeAction(request,context);}export function createSearchInput(queryResultSettings,searchCriteria){var query=productListsQuery().resultSettings(queryResultSettings);return query.createDataServiceRequestForOperation('Search',true,ProductListClass,'true',{bypassCache:'none',returnEntity:'ProductList'},{searchCriteria:searchCriteria});}export function searchAsync(context,searchCriteria){var request=createSearchInput(context.queryResultSettings,searchCriteria);return executeAction(request,context);}export function createGetProductListLinesInput(queryResultSettings,id,searchText){var query=productListsQuery(id).resultSettings(queryResultSettings);return query.createDataServiceRequestForOperation('GetProductListLines',true,ProductListLineClass,'true',{bypassCache:'none',returnEntity:'ProductListLine'},{searchText:searchText});}export function getProductListLinesAsync(context,id,searchText){var request=createGetProductListLinesInput(context.queryResultSettings,id,searchText);return executeAction(request,context);}export function createAddProductListLinesInput(queryResultSettings,id,productListLines){var query=productListsQuery(id).resultSettings(queryResultSettings);return query.createDataServiceRequestForOperation('AddProductListLines',true,ProductListLineClass,'true',{bypassCache:'get',returnEntity:'ProductListLine'},{productListLines:productListLines});}export function addProductListLinesAsync(context,id,productListLines){var request=createAddProductListLinesInput(context.queryResultSettings,id,productListLines);return executeAction(request,context);}export function createUpdateProductListLinesInput(queryResultSettings,id,productListLines){var query=productListsQuery(id).resultSettings(queryResultSettings);return query.createDataServiceRequestForOperation('UpdateProductListLines',true,ProductListLineClass,'true',{bypassCache:'get',returnEntity:'ProductListLine'},{productListLines:productListLines});}export function updateProductListLinesAsync(context,id,productListLines){var request=createUpdateProductListLinesInput(context.queryResultSettings,id,productListLines);return executeAction(request,context);}export function createRemoveProductListLinesInput(id,productListLines){var query=productListsQuery(id);return query.createDataServiceRequestForOperation('RemoveProductListLines',true,'','',{bypassCache:'get',returnEntity:''},{productListLines:productListLines});}export function removeProductListLinesAsync(context,id,productListLines){var request=createRemoveProductListLinesInput(id,productListLines);return executeAction(request,context);}export function createCopyCartToProductListInput(id,cartId,isRewrite,isQuantityAggregate){var query=productListsQuery(id);return query.createDataServiceRequestForOperation('CopyCartToProductList',true,ProductListClass,'false',{bypassCache:'get',returnEntity:'ProductList'},{cartId:cartId,isRewrite:isRewrite,isQuantityAggregate:isQuantityAggregate});}export function copyCartToProductListAsync(context,id,cartId,isRewrite,isQuantityAggregate){var request=createCopyCartToProductListInput(id,cartId,isRewrite,isQuantityAggregate);return executeAction(request,context);}","map":{"version":3,"sources":["../../src/DataActions/ProductListsDataActions.g.ts"],"names":[],"mappings":"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","sourcesContent":["    // <auto-generated />\n    import { AsyncResult } from '../async-result';\n    import { DataServiceQuery } from '../DataServiceQuery';\n    import { ProductList, ProductListSearchCriteria, ProductListLine } from '../Entities/CommerceTypes.g';\n    import { ProductListClass, ProductListLineClass } from '../Entities/CommerceModels.g';\n    import { IContext, IDataServiceRequest, IQueryResultSettings, NullResult } from '../Interfaces';\n    import { executeAction } from '../retail-action';\n    \n    \n    function productListsQuery(id?: string): DataServiceQuery {\n      var key = (id) ? { Id: id } : null;\n      return new DataServiceQuery(\"ProductLists\", \"ProductList\", ProductListClass, key);\n    }\n    \n    export function createCreateInput(entity: ProductList): IDataServiceRequest {\n        return productListsQuery().create(entity);\n    }\n    export function createProductListAsync(context: IContext, entity: ProductList): AsyncResult<ProductList> {\n        const request = createCreateInput(entity, );\n        return executeAction<ProductList>(request, context);\n    }\n    export function createUpdateInput(entity: ProductList): IDataServiceRequest {\n        return productListsQuery(entity.Id).update(entity);\n    }\n    export function updateAsync(context: IContext, entity: ProductList): AsyncResult<ProductList> {\n        const request = createUpdateInput(entity, );\n        return executeAction<ProductList>(request, context);\n    }\n    export function createDeleteAsync(entity: ProductList): IDataServiceRequest {\n        return productListsQuery(entity.Id).delete();\n    }\n    export function deleteAsync(context: IContext, entity: ProductList): AsyncResult<NullResult> {\n        const request = createDeleteAsync(entity, );\n        return executeAction<NullResult>(request, context);\n    }\n    export function createReadAsync(id: string): IDataServiceRequest {\n        return productListsQuery(id).read();\n    }\n    export function readAsync(context: IContext, id: string): AsyncResult<ProductList> {\n        const request = createReadAsync(id, );\n        return executeAction<ProductList>(request, context);\n    }\n    export function createReadAllAsync(queryResultSettings: IQueryResultSettings): IDataServiceRequest {\n        return productListsQuery().resultSettings(queryResultSettings).read();\n    }\n    export function readAllAsync(context: IContext): AsyncResult<ProductList[]> {\n        const request = createReadAllAsync(context.queryResultSettings, );\n        return executeAction<ProductList[]>(request, context);\n    }\n    \n    export function createSearchInput(queryResultSettings: IQueryResultSettings, searchCriteria: ProductListSearchCriteria | null): IDataServiceRequest {      \n        const query = productListsQuery().resultSettings(queryResultSettings);\n        return query.createDataServiceRequestForOperation('Search', true, ProductListClass, 'true', { bypassCache: 'none', returnEntity: 'ProductList'}, {searchCriteria: searchCriteria });\n    }    \n    \n    export function searchAsync(context: IContext, searchCriteria: ProductListSearchCriteria | null):AsyncResult<ProductList[]> {\n        const request = createSearchInput(context.queryResultSettings, searchCriteria, );\n        return executeAction<ProductList[]>(request, context);\n    }          \n          \n    export function createGetProductListLinesInput(queryResultSettings: IQueryResultSettings, id: string, searchText: string | null): IDataServiceRequest {      \n        const query = productListsQuery(id).resultSettings(queryResultSettings);\n        return query.createDataServiceRequestForOperation('GetProductListLines', true, ProductListLineClass, 'true', { bypassCache: 'none', returnEntity: 'ProductListLine'}, {searchText: searchText });\n    }    \n    \n    export function getProductListLinesAsync(context: IContext, id: string, searchText: string | null):AsyncResult<ProductListLine[]> {\n        const request = createGetProductListLinesInput(context.queryResultSettings, id, searchText, );\n        return executeAction<ProductListLine[]>(request, context);\n    }          \n          \n    export function createAddProductListLinesInput(queryResultSettings: IQueryResultSettings, id: string, productListLines: ProductListLine[] | null): IDataServiceRequest {      \n        const query = productListsQuery(id).resultSettings(queryResultSettings);\n        return query.createDataServiceRequestForOperation('AddProductListLines', true, ProductListLineClass, 'true', { bypassCache: 'get', returnEntity: 'ProductListLine'}, {productListLines: productListLines });\n    }    \n    \n    export function addProductListLinesAsync(context: IContext, id: string, productListLines: ProductListLine[] | null):AsyncResult<ProductListLine[]> {\n        const request = createAddProductListLinesInput(context.queryResultSettings, id, productListLines, );\n        return executeAction<ProductListLine[]>(request, context);\n    }          \n          \n    export function createUpdateProductListLinesInput(queryResultSettings: IQueryResultSettings, id: string, productListLines: ProductListLine[] | null): IDataServiceRequest {      \n        const query = productListsQuery(id).resultSettings(queryResultSettings);\n        return query.createDataServiceRequestForOperation('UpdateProductListLines', true, ProductListLineClass, 'true', { bypassCache: 'get', returnEntity: 'ProductListLine'}, {productListLines: productListLines });\n    }    \n    \n    export function updateProductListLinesAsync(context: IContext, id: string, productListLines: ProductListLine[] | null):AsyncResult<ProductListLine[]> {\n        const request = createUpdateProductListLinesInput(context.queryResultSettings, id, productListLines, );\n        return executeAction<ProductListLine[]>(request, context);\n    }          \n          \n    export function createRemoveProductListLinesInput(id: string, productListLines: ProductListLine[] | null): IDataServiceRequest {      \n        const query = productListsQuery(id);\n        return query.createDataServiceRequestForOperation('RemoveProductListLines', true, '', '', { bypassCache: 'get', returnEntity: ''}, {productListLines: productListLines });\n    }    \n    \n    export function removeProductListLinesAsync(context: IContext, id: string, productListLines: ProductListLine[] | null):AsyncResult<NullResult> {\n        const request = createRemoveProductListLinesInput(id, productListLines, );\n        return executeAction<NullResult>(request, context);\n    }          \n          \n    export function createCopyCartToProductListInput(id: string, cartId: string | null, isRewrite: boolean | null, isQuantityAggregate: boolean | null): IDataServiceRequest {      \n        const query = productListsQuery(id);\n        return query.createDataServiceRequestForOperation('CopyCartToProductList', true, ProductListClass, 'false', { bypassCache: 'get', returnEntity: 'ProductList'}, {cartId: cartId, isRewrite: isRewrite, isQuantityAggregate: isQuantityAggregate });\n    }    \n    \n    export function copyCartToProductListAsync(context: IContext, id: string, cartId: string | null, isRewrite: boolean | null, isQuantityAggregate: boolean | null):AsyncResult<ProductList> {\n        const request = createCopyCartToProductListInput(id, cartId, isRewrite, isQuantityAggregate, );\n        return executeAction<ProductList>(request, context);\n    }          \n          \n    "],"sourceRoot":""},"metadata":{},"sourceType":"module"}