{"ast":null,"code":"import _defineProperty from\"@babel/runtime/helpers/esm/defineProperty\";function ownKeys(object,enumerableOnly){var keys=Object.keys(object);if(Object.getOwnPropertySymbols){var symbols=Object.getOwnPropertySymbols(object);if(enumerableOnly)symbols=symbols.filter(function(sym){return Object.getOwnPropertyDescriptor(object,sym).enumerable;});keys.push.apply(keys,symbols);}return keys;}function _objectSpread(target){for(var i=1;i<arguments.length;i++){var source=arguments[i]!=null?arguments[i]:{};if(i%2){ownKeys(Object(source),true).forEach(function(key){_defineProperty(target,key,source[key]);});}else if(Object.getOwnPropertyDescriptors){Object.defineProperties(target,Object.getOwnPropertyDescriptors(source));}else{ownKeys(Object(source)).forEach(function(key){Object.defineProperty(target,key,Object.getOwnPropertyDescriptor(source,key));});}}return target;}import{Button,getPayloadObject,getTelemetryAttributes,TelemetryConstant}from'@msdyn365-commerce-modules/utilities';import{getUrlSync}from'@msdyn365-commerce/core';import*as React from'react';import{getGroups}from'../../../common/get-groups';import{getOrderInfomationInput,getOrderInformation}from'../../../common/get-order-information';import{getSalesLines,getSalesLinesInput}from'../../../common/get-sales-lines';export var getSalesOrder=function getSalesOrder(input){var id=input.id,typeName=input.typeName,context=input.context,telemetry=input.telemetry,products=input.products,salesOrder=input.salesOrder,showChannelInfo=input.showChannelInfo,channelIdentities=input.channelIdentities,orgUnitLocations=input.orgUnitLocations,telemetryContent=input.telemetryContent,_input$resources=input.resources,freePriceText=_input$resources.freePriceText,detailsAriaLabel=_input$resources.detailsAriaLabel,detailsLabel=_input$resources.detailsLabel,orderItemLabel=_input$resources.orderItemLabel,orderItemsLabel=_input$resources.orderItemsLabel,actionContext=input.context.actionContext;var moduleName='ms-order-history';var priceContext={id:id,typeName:typeName,context:context,telemetry:telemetry,freePriceText:freePriceText};var _getorderDetailsPageUrl=function _getorderDetailsPageUrl(){var url=getUrlSync('orderDetails',actionContext)||'';var separator=url.includes('?')?'&':'?';if(salesOrder.SalesId){return\"\".concat(url).concat(separator,\"salesId=\").concat(salesOrder.SalesId);}else{return\"\".concat(url).concat(separator,\"transactionId=\").concat(salesOrder.TransactionId);}};var salesOrderProps={className:'ms-order-history__sales-order',key:salesOrder.SalesId||salesOrder.TransactionId};var orderInfomationInput=getOrderInfomationInput(input,moduleName,salesOrder,priceContext,channelIdentities,orgUnitLocations,showChannelInfo);var orderInfomation=getOrderInformation(orderInfomationInput);var salesLinesInput=products&&getSalesLinesInput(input,moduleName,salesOrder,products,priceContext);var salesLines=salesLinesInput&&getSalesLines(_objectSpread(_objectSpread({},salesLinesInput),{},{imageOnly:true}));var payLoad=getPayloadObject('click',telemetryContent,TelemetryConstant.OrderDetails);var orderDetailsAttributes=getTelemetryAttributes(telemetryContent,payLoad);var groups=salesLines&&getGroups({moduleName:moduleName,salesLines:salesLines,resources:{orderItemLabel:orderItemLabel,orderItemsLabel:orderItemsLabel}});var orderDetailsLink=/*#__PURE__*/React.createElement(Button,Object.assign({href:_getorderDetailsPageUrl(),\"aria-label\":salesOrder.ChannelReferenceId&&detailsAriaLabel?detailsAriaLabel.replace('{orderId}',salesOrder.ChannelReferenceId):'',className:'ms-order-history__btn-order-details'},orderDetailsAttributes),detailsLabel);return{salesOrderProps:salesOrderProps,orderInfomation:orderInfomation,groups:groups,orderDetailsLink:orderDetailsLink};};","map":{"version":3,"sources":["modules/order-history/components/get-sales-order.tsx"],"names":[],"mappings":"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","sourcesContent":["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nimport { Button, getPayloadObject, getTelemetryAttributes, INodeProps, ITelemetryContent, TelemetryConstant } from '@msdyn365-commerce-modules/utilities';\nimport { getUrlSync } from '@msdyn365-commerce/core';\nimport { ChannelIdentity, OrderShipments, OrgUnitLocation, SimpleProduct } from '@msdyn365-commerce/retail-proxy';\nimport * as React from 'react';\nimport { getGroups, IGroups } from '../../../common/get-groups';\nimport { getOrderInfomationInput, getOrderInformation, IOrderInformation } from '../../../common/get-order-information';\nimport { getSalesLines, getSalesLinesInput } from '../../../common/get-sales-lines';\nimport { IOrderHistoryData } from '../order-history.data';\nimport { IOrderHistoryProps } from '../order-history.props.autogenerated';\n\nexport interface ISalesOrderProps extends IOrderHistoryProps<IOrderHistoryData> {\n    salesOrder: OrderShipments;\n    products: SimpleProduct[];\n    channelIdentities?: ChannelIdentity[];\n    orgUnitLocations?: OrgUnitLocation[];\n    showChannelInfo?: boolean;\n    telemetryContent?: ITelemetryContent;\n}\n\nexport interface ISalesOrder {\n    salesOrderProps: INodeProps;\n    orderInfomation: IOrderInformation;\n    groups?: IGroups;\n    orderDetailsLink: React.ReactNode;\n}\n\nexport const getSalesOrder = (input: ISalesOrderProps): ISalesOrder => {\n    const {\n        id,\n        typeName,\n        context,\n        telemetry,\n        products,\n        salesOrder,\n        showChannelInfo,\n        channelIdentities,\n        orgUnitLocations,\n        telemetryContent,\n        resources: { freePriceText, detailsAriaLabel, detailsLabel, orderItemLabel, orderItemsLabel },\n        context: { actionContext }\n    } = input;\n\n    const moduleName = 'ms-order-history';\n\n    const priceContext = {\n        id,\n        typeName,\n        context,\n        telemetry,\n        freePriceText\n    };\n\n    const _getorderDetailsPageUrl = (): string => {\n        const url = getUrlSync('orderDetails', actionContext) || '';\n        const separator = url.includes('?') ? '&' : '?';\n        if (salesOrder.SalesId) {\n            // Redirect with sales order sales id\n            return `${url}${separator}salesId=${salesOrder.SalesId}`;\n        } else {\n            // Redirect with sales order transaction id\n            return `${url}${separator}transactionId=${salesOrder.TransactionId}`;\n        }\n    };\n\n    const salesOrderProps = { className: 'ms-order-history__sales-order', key: salesOrder.SalesId || salesOrder.TransactionId };\n\n    const orderInfomationInput = getOrderInfomationInput(input, moduleName, salesOrder, priceContext, channelIdentities, orgUnitLocations, showChannelInfo);\n    const orderInfomation = getOrderInformation(orderInfomationInput);\n\n    const salesLinesInput = products && getSalesLinesInput(input, moduleName, salesOrder, products, priceContext);\n    const salesLines = salesLinesInput && getSalesLines({ ...salesLinesInput, imageOnly: true });\n    const payLoad = getPayloadObject('click', telemetryContent!, TelemetryConstant.OrderDetails);\n    const orderDetailsAttributes = getTelemetryAttributes(telemetryContent!, payLoad);\n\n    const groups =\n        salesLines &&\n        getGroups({\n            moduleName,\n            salesLines,\n            resources: { orderItemLabel, orderItemsLabel }\n        });\n\n    const orderDetailsLink = (\n        <Button\n            href={_getorderDetailsPageUrl()}\n            aria-label={\n                salesOrder.ChannelReferenceId && detailsAriaLabel\n                    ? detailsAriaLabel.replace('{orderId}', salesOrder.ChannelReferenceId)\n                    : ''\n            }\n            className='ms-order-history__btn-order-details'\n            {...orderDetailsAttributes}\n        >\n            {detailsLabel}\n        </Button>\n    );\n\n    return {\n        salesOrderProps,\n        orderInfomation,\n        groups,\n        orderDetailsLink\n    };\n};\n"],"sourceRoot":"./src/"},"metadata":{},"sourceType":"module"}