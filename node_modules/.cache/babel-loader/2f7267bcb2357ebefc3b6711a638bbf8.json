{"ast":null,"code":"import*as React from'react';import AddressButtonComponent from'./address-button';import AddressInputComponent from'./address-input';import{AddressShow}from'./address-show';var getInput=function getInput(index,address,props){var addresses=props.addresses,onAddressOptionChange=props.onAddressOptionChange,selectedAddress=props.selectedAddress;var ichecked=address.RecordId===selectedAddress.RecordId;var additionalAttributes={checked:ichecked,'aria-checked':ichecked,'aria-setsize':addresses.length,'aria-posinset':index+1};return/*#__PURE__*/React.createElement(AddressInputComponent,Object.assign({},{className:'msc-address-select',name:'selectAddressOptions',type:'radio',value:(address.RecordId||'').toString(),onChange:onAddressOptionChange,additionalAddributes:additionalAttributes,telemetryContent:props.telemetryContent}));};var getAddressSelectItems=function getAddressSelectItems(props){var addresses=props.addresses,addressFormat=props.addressFormat,addressPurposes=props.addressPurposes;return addresses.map(function(address,index){return{key:address.RecordId||0,SelectItem:{className:'msc-address-select__item'},input:getInput(index,address,props),showItems:AddressShow({addressFormat:addressFormat.getAddressFormat(address.ThreeLetterISORegionName||''),address:address,addressPurposes:addressPurposes})};});};export var AddressSelect=function AddressSelect(props){var resources=props.resources,onCancel=props.onCancel,onSave=props.onSave,onAddAddress=props.onAddAddress,hasExternalSubmitGroup=props.hasExternalSubmitGroup;return{SelectAddress:{className:'msc-address-select'},addButton:/*#__PURE__*/React.createElement(AddressButtonComponent,Object.assign({},{className:'msc-address-select__button-add',text:resources.addressAddButtonText,ariaLabel:resources.addressAddButtonAriaLabel,onClick:onAddAddress,telemetryContent:props.telemetryContent})),isShowSaveButton:!hasExternalSubmitGroup,saveButton:/*#__PURE__*/React.createElement(AddressButtonComponent,Object.assign({},{className:'msc-address-select__button-save',text:resources.addressSaveButtonText,ariaLabel:resources.addressSaveButtonAriaLabel,onClick:onSave,telemetryContent:props.telemetryContent})),isShowCancelButton:!hasExternalSubmitGroup,cancelButton:/*#__PURE__*/React.createElement(AddressButtonComponent,Object.assign({},{className:'msc-address-select__button-cancel',text:resources.addressCancelButtonText,ariaLabel:resources.addressCancelButtonAriaLabel,onClick:onCancel,telemetryContent:props.telemetryContent})),items:getAddressSelectItems(props)};};","map":{"version":3,"sources":["common/components/address-select.tsx"],"names":[],"mappings":"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","sourcesContent":["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nimport * as React from 'react';\n\nimport { INodeProps, ITelemetryContent } from '@msdyn365-commerce-modules/utilities';\nimport { Address, AddressPurpose } from '@msdyn365-commerce/retail-proxy/dist/Entities/CommerceTypes.g';\n\nimport { AddressFormat } from '../../common/address-format';\nimport { IAddressResource } from '../../common/address-module.data';\nimport AddressButtonComponent from './address-button';\nimport AddressInputComponent from './address-input';\nimport { AddressShow, IAddressShowProps } from './address-show';\n\nexport interface IAddressSelectInputProps {\n    hasExternalSubmitGroup?: boolean;\n    addressFormat: AddressFormat;\n    addresses: Address[];\n    addressPurposes: AddressPurpose[];\n    resources: IAddressResource;\n    selectedAddress: Address;\n    telemetryContent?: ITelemetryContent;\n    onAddressOptionChange(event: React.ChangeEvent<HTMLInputElement>): void;\n    onAddAddress(): void;\n    onSave(): void;\n    onCancel(): void;\n}\n\nexport interface IAddressSelectItem {\n    key: number;\n    SelectItem: INodeProps;\n    input: React.ReactNode;\n    showItems: IAddressShowProps;\n}\n\nexport interface IAddressSelectProps {\n    SelectAddress: INodeProps;\n    addButton: React.ReactNode;\n    items: IAddressSelectItem[];\n    isShowSaveButton: boolean;\n    saveButton: React.ReactNode;\n    isShowCancelButton: boolean;\n    cancelButton: React.ReactNode;\n}\n\nconst getInput = (index: number, address: Address, props: IAddressSelectInputProps): React.ReactNode => {\n    const { addresses, onAddressOptionChange, selectedAddress } = props;\n\n    const ichecked = address.RecordId === selectedAddress.RecordId;\n    const additionalAttributes = {\n        checked: ichecked,\n        'aria-checked': ichecked,\n        'aria-setsize': addresses.length,\n        'aria-posinset': index + 1\n    };\n\n    return (\n        <AddressInputComponent\n            {\n            ...{\n                className: 'msc-address-select',\n                name: 'selectAddressOptions',\n                type: 'radio',\n                value: (address.RecordId || '').toString(),\n                onChange: onAddressOptionChange,\n                additionalAddributes: additionalAttributes,\n                telemetryContent: props.telemetryContent\n            }\n            }\n        />\n    );\n};\n\nconst getAddressSelectItems = (props: IAddressSelectInputProps): IAddressSelectItem[] => {\n    const { addresses, addressFormat, addressPurposes } = props;\n\n    return addresses.map((address, index) => {\n        return {\n            key: address.RecordId || 0,\n            SelectItem: { className: 'msc-address-select__item' },\n            input: getInput(index, address, props),\n            showItems: AddressShow({ addressFormat: addressFormat.getAddressFormat(address.ThreeLetterISORegionName || ''), address: address, addressPurposes: addressPurposes})\n        };\n    });\n};\n\nexport const AddressSelect = (props: IAddressSelectInputProps): IAddressSelectProps => {\n    const { resources, onCancel, onSave, onAddAddress, hasExternalSubmitGroup } = props;\n\n    return {\n        SelectAddress: { className: 'msc-address-select' },\n        addButton: (\n            <AddressButtonComponent\n                {\n                ...{\n                    className: 'msc-address-select__button-add',\n                    text: resources.addressAddButtonText,\n                    ariaLabel: resources.addressAddButtonAriaLabel,\n                    onClick: onAddAddress,\n                    telemetryContent: props.telemetryContent\n                }\n                }\n            />\n        ),\n        isShowSaveButton: !hasExternalSubmitGroup,\n        saveButton: (\n            <AddressButtonComponent\n                {\n                ...{\n                    className: 'msc-address-select__button-save',\n                    text: resources.addressSaveButtonText,\n                    ariaLabel: resources.addressSaveButtonAriaLabel,\n                    onClick: onSave,\n                    telemetryContent: props.telemetryContent\n                }\n                }\n            />\n        ),\n        isShowCancelButton: !hasExternalSubmitGroup,\n        cancelButton: (\n            <AddressButtonComponent\n                {\n                ...{\n                    className: 'msc-address-select__button-cancel',\n                    text: resources.addressCancelButtonText,\n                    ariaLabel: resources.addressCancelButtonAriaLabel,\n                    onClick: onCancel,\n                    telemetryContent: props.telemetryContent\n                }\n                }\n            />\n        ),\n        items: getAddressSelectItems(props)\n    };\n};"],"sourceRoot":"./src/"},"metadata":{},"sourceType":"module"}