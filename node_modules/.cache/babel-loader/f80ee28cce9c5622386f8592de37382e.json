{"ast":null,"code":"import _classCallCheck from\"@babel/runtime/helpers/esm/classCallCheck\";import _createClass from\"@babel/runtime/helpers/esm/createClass\";import _isEqual2 from\"lodash/isEqual\";import{getAllAddModuleBoxes,getElementDataInfo,getElementDataInfoById,getModuleById,getModulesByParentIdAndSlotId,updateAddModuleInnerContainerClass}from'./drag-and-drop-utils';var PLACEHOLDER_TOP_CLASS_NAME='ms-drag-placeholder-top';var PLACEHOLDER_BOTTOM_CLASS_NAME='ms-drag-placeholder-bottom';/**\r\n * Provides the drag and drop events implementation\r\n */export var DragAndDropPlaceholder=/*#__PURE__*/function(){function DragAndDropPlaceholder(){var _this=this;_classCallCheck(this,DragAndDropPlaceholder);/**\r\n         * Return the placeholder information.\r\n         */this.getPlaceholder=function(){return _this.placement;};/**\r\n         * Clear placeholder.\r\n         */this.clear=function(){_this._removePlaceholderFromElement();_this._setAllAddModuleBoxesToInitialState();_this.placement=null;_this.moduleElement=null;_this.addModuleBoxes=null;};/**\r\n         * Clear placeholder on site builder and SDK.\r\n         */this.clearAll=function(){var _this$renderingHelper;_this.clear();(_this$renderingHelper=_this.renderingHelper)===null||_this$renderingHelper===void 0?void 0:_this$renderingHelper.removePlaceholder();};/**\r\n         * Set rendering helper to be used when calling site builder APIs.\r\n         * @param renderingHelper The rendring helper interface.\r\n         */this.setRenderingHelper=function(renderingHelper){_this.renderingHelper=renderingHelper;};/**\r\n         * Move placeholder to a specific position inside a specific container.\r\n         * @param parentId The module id where the module/container should to be dropped\r\n         * @param index The index position for the module drop.\r\n         * @param slotId The slot id where the module/container should to be dropped.\r\n         * @param moduleId The module id of the element being dropped.\r\n         */this.movePlaceholder=function(parentId,index,slotId,moduleId){if(!parentId||!slotId||index<0){return;}var parentModule=getModuleById(parentId);if(parentModule){// get all modules inside the container.\nvar modules=getModulesByParentIdAndSlotId(parentId,slotId);_this._setAllAddModuleBoxesToInitialState();if(modules.length===0){_this._removePlaceholderFromElement();_this._setAddModuleBoxToInsertState(parentId,slotId,moduleId?getElementDataInfoById(moduleId).dataInfo.isFragment:false);}else{if(index>=0&&index<modules.length){// if position index is within the range of possible indexes, insert place holder in the position of the current module.\nvar currentModule=modules[index];_this._movePlaceholder(currentModule);}else{// if position is not in the range of available indexes, append placeholder to last module.\nvar _currentModule=modules[modules.length-1];_this._movePlaceholder(_currentModule,true);}}}};/**\r\n         * Set placeholder on position.\r\n         * @param dragModule The draggable module attributes and html element.\r\n         * @param dropModule The droppable module attributes and html element.\r\n         * @param y The position of the mouse cursor on the y-axis.\r\n         */this.setPlaceHolderOnPosition=function(dragModule,dropModule,y){var placeholderInfo=_this._getPlaceholderPlacementInfo(dragModule,dropModule,y);if(placeholderInfo){if(dropModule.element&&_this._hasPlaceholderPositionChanged(placeholderInfo)){var _this$renderingHelper2;// If placeholder should be displayed in a new location, update placeholder on canvas and site builder.\n_this._movePlaceholder(dropModule.element,placeholderInfo.placeBottom);(_this$renderingHelper2=_this.renderingHelper)===null||_this$renderingHelper2===void 0?void 0:_this$renderingHelper2.onDrag(dropModule.dataInfo.parentId,placeholderInfo.relativeIndex,dropModule.dataInfo.slotId);}}else if(_this._hasPlaceholderPositionChanged(placeholderInfo)){// If placeholder should be removed and has not been yet, clear placeholder from canvas and site builder.\n_this.clearAll();}_this.placement=placeholderInfo;};/**\r\n         * Get a specific add module box html element.\r\n         * @param parentId The parent data Id.\r\n         * @param slotId The slot data Id.\r\n         * @returns {HTMLElement | null} Returns the html module element if module exists. Otherwise, return null.\r\n         */this._getAddModuleBox=function(parentId,slotId){if(!_this.addModuleBoxes){_this.addModuleBoxes=getAllAddModuleBoxes();}var foundBox=_this.addModuleBoxes.find(function(a){return a.dataInfo.id===parentId&&a.dataInfo.slotId===slotId;});return foundBox?foundBox.element:null;};/**\r\n         * Update the targeted add module box to insert state.\r\n         * @param parentId The parent data Id.\r\n         * @param slotId The slot data Id.\r\n         * @param isFragment True, if the module to be added is a fragment. Otherwise, false.\r\n         */this._setAddModuleBoxToInsertState=function(parentId,slotId,isFragment){var addModuleBoxElement=_this._getAddModuleBox(parentId,slotId);if(addModuleBoxElement&&addModuleBoxElement.firstElementChild){updateAddModuleInnerContainerClass(addModuleBoxElement.firstElementChild,isFragment?'InsertFragment':'InsertModule');}};/**\r\n         * Update all add module boxes to its initial state.\r\n         */this._setAllAddModuleBoxesToInitialState=function(){if(!_this.addModuleBoxes){_this.addModuleBoxes=getAllAddModuleBoxes();}_this.addModuleBoxes.map(function(m){var _m$element;if((_m$element=m.element)!==null&&_m$element!==void 0&&_m$element.firstElementChild){updateAddModuleInnerContainerClass(m.element.firstElementChild);}});};/**\r\n         * Returns whether or not the placeholder position has changed.\r\n         */this._hasPlaceholderPositionChanged=function(placement){return!_isEqual2(_this.placement,placement);};/**\r\n         * Add placeholder to the top or to the bottom of a module.\r\n         * @param moduleElement The module element.\r\n         * @param placeBottom If the placeholder should be placed at the bottom of the module.\r\n         */this._movePlaceholder=function(moduleElement){var placeBottom=arguments.length>1&&arguments[1]!==undefined?arguments[1]:false;_this._removePlaceholderFromElement();if(placeBottom){moduleElement.className+=\" \".concat(PLACEHOLDER_BOTTOM_CLASS_NAME);}else{moduleElement.className+=\" \".concat(PLACEHOLDER_TOP_CLASS_NAME);}_this.moduleElement=moduleElement;};/**\r\n         * Remove placeholder.\r\n         */this._removePlaceholderFromElement=function(){if(_this.moduleElement&&_this.moduleElement.className){if(_this.moduleElement.className.includes(PLACEHOLDER_BOTTOM_CLASS_NAME)){_this.moduleElement.className=_this.moduleElement.className.replace(PLACEHOLDER_BOTTOM_CLASS_NAME,'').trim();}else if(_this.moduleElement.className.includes(PLACEHOLDER_TOP_CLASS_NAME)){_this.moduleElement.className=_this.moduleElement.className.replace(PLACEHOLDER_TOP_CLASS_NAME,'').trim();}}_this.moduleElement=null;};this.placement=null;this.moduleElement=null;this.addModuleBoxes=null;}/**\r\n     * Get the information for the placeholder placement on modules.\r\n     * @param dragModule The draggable module attributes and html element.\r\n     * @param dropModule The droppable module attributes and html element.\r\n     * @param y The position of the mouse cursor on the y-axis.\r\n     */_createClass(DragAndDropPlaceholder,[{key:\"_getPlaceholderPlacementInfo\",value:function _getPlaceholderPlacementInfo(dragModule,dropModule,y){// Get all modules inside the container.\nvar modules=getModulesByParentIdAndSlotId(dropModule.dataInfo.parentId,dropModule.dataInfo.slotId);if(modules.length===0){return null;}var dragModuleIndex=modules.findIndex(function(m){return getElementDataInfo(m).dataInfo.id===dragModule.dataInfo.id;});var dropModuleIndex=modules.findIndex(function(m){return getElementDataInfo(m).dataInfo.id===dropModule.dataInfo.id;});var dropModuleRelativeIndex=dropModuleIndex;// if drop module is not found or if it is the drag module, ignore it.\nif(dropModuleIndex<0||dropModuleIndex===dragModuleIndex){return null;}// If the dragged module is in the current container and comes before the droppend module, update the drop index to ignore the drag module position.\nif(dragModuleIndex>=0&&dragModuleIndex<dropModuleIndex){dropModuleIndex-=1;}var placeBottom=false;if(dropModule.element){var box=dropModule.element.getBoundingClientRect();var distanceToBottom=box.bottom-y;var distanceToTop=y-box.top;if(distanceToBottom<distanceToTop){dropModuleIndex+=1;dropModuleRelativeIndex+=1;placeBottom=true;}}return{moduleId:dragModule.dataInfo.id,parentId:dropModule.dataInfo.parentId,slotId:dropModule.dataInfo.slotId,index:dropModuleIndex,relativeIndex:dropModuleRelativeIndex,placeBottom:placeBottom};}}]);return DragAndDropPlaceholder;}();var dragAndDropPlaceholder=new DragAndDropPlaceholder();export default dragAndDropPlaceholder;","map":{"version":3,"sources":["../../../../src/utilities/drag-and-drop/drag-and-drop-placehoder.ts"],"names":[],"mappings":"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","sourcesContent":["/*!\n * Copyright (c) Microsoft Corporation.\n * All rights reserved. See LICENSE in the project root for license information.\n */\nimport { isEqual as _isEqual } from 'lodash';\nimport { IRenderingHelper } from '../../interfaces/IRenderingHelper';\nimport {\n    ElementDataInfo,\n    getAllAddModuleBoxes,\n    getElementDataInfo,\n    getElementDataInfoById,\n    getModuleById,\n    getModulesByParentIdAndSlotId,\n    updateAddModuleInnerContainerClass\n} from './drag-and-drop-utils';\nconst PLACEHOLDER_TOP_CLASS_NAME = 'ms-drag-placeholder-top';\nconst PLACEHOLDER_BOTTOM_CLASS_NAME = 'ms-drag-placeholder-bottom';\n\nexport type PlaceHolderPlacement = {\n    moduleId: string;\n    parentId: string;\n    slotId: string;\n    index: number;\n    relativeIndex: number;\n    placeBottom: boolean;\n};\n\n/**\n * Provides the drag and drop events implementation\n */\nexport class DragAndDropPlaceholder {\n    private placement: PlaceHolderPlacement | null;\n    private moduleElement: HTMLElement | null;\n    private addModuleBoxes: ElementDataInfo[] | null;\n    private renderingHelper: IRenderingHelper | undefined;\n\n    constructor() {\n        this.placement = null;\n        this.moduleElement = null;\n        this.addModuleBoxes = null;\n    }\n\n    /**\n     * Return the placeholder information.\n     */\n    public getPlaceholder = (): PlaceHolderPlacement | null => {\n        return this.placement;\n    };\n\n    /**\n     * Clear placeholder.\n     */\n    public clear = (): void => {\n        this._removePlaceholderFromElement();\n        this._setAllAddModuleBoxesToInitialState();\n        this.placement = null;\n        this.moduleElement = null;\n        this.addModuleBoxes = null;\n    };\n\n    /**\n     * Clear placeholder on site builder and SDK.\n     */\n    public clearAll = (): void => {\n        this.clear();\n        this.renderingHelper?.removePlaceholder();\n    };\n\n    /**\n     * Set rendering helper to be used when calling site builder APIs.\n     * @param renderingHelper The rendring helper interface.\n     */\n    public setRenderingHelper = (renderingHelper: IRenderingHelper): void => {\n        this.renderingHelper = renderingHelper;\n    };\n\n    /**\n     * Move placeholder to a specific position inside a specific container.\n     * @param parentId The module id where the module/container should to be dropped\n     * @param index The index position for the module drop.\n     * @param slotId The slot id where the module/container should to be dropped.\n     * @param moduleId The module id of the element being dropped.\n     */\n    public movePlaceholder = (parentId: string, index: number, slotId: string, moduleId?: string): void => {\n        if (!parentId || !slotId || index < 0) {\n            return;\n        }\n\n        const parentModule = getModuleById(parentId);\n        if (parentModule) {\n            // get all modules inside the container.\n            const modules = getModulesByParentIdAndSlotId(parentId, slotId);\n            this._setAllAddModuleBoxesToInitialState();\n            if (modules.length === 0) {\n                this._removePlaceholderFromElement();\n                this._setAddModuleBoxToInsertState(\n                    parentId,\n                    slotId,\n                    moduleId ? getElementDataInfoById(moduleId).dataInfo.isFragment : false\n                );\n            } else {\n                if (index >= 0 && index < modules.length) {\n                    // if position index is within the range of possible indexes, insert place holder in the position of the current module.\n                    const currentModule = modules[index];\n                    this._movePlaceholder(<HTMLElement>currentModule);\n                } else {\n                    // if position is not in the range of available indexes, append placeholder to last module.\n                    const currentModule = modules[modules.length - 1];\n                    this._movePlaceholder(<HTMLElement>currentModule, true);\n                }\n            }\n        }\n    };\n\n    /**\n     * Set placeholder on position.\n     * @param dragModule The draggable module attributes and html element.\n     * @param dropModule The droppable module attributes and html element.\n     * @param y The position of the mouse cursor on the y-axis.\n     */\n    public setPlaceHolderOnPosition = (dragModule: ElementDataInfo, dropModule: ElementDataInfo, y: number): void => {\n        const placeholderInfo = this._getPlaceholderPlacementInfo(dragModule, dropModule, y);\n        if (placeholderInfo) {\n            if (dropModule.element && this._hasPlaceholderPositionChanged(placeholderInfo)) {\n                // If placeholder should be displayed in a new location, update placeholder on canvas and site builder.\n                this._movePlaceholder(dropModule.element, placeholderInfo.placeBottom);\n                this.renderingHelper?.onDrag(dropModule.dataInfo.parentId, placeholderInfo.relativeIndex, dropModule.dataInfo.slotId);\n            }\n        } else if (this._hasPlaceholderPositionChanged(placeholderInfo)) {\n            // If placeholder should be removed and has not been yet, clear placeholder from canvas and site builder.\n            this.clearAll();\n        }\n\n        this.placement = placeholderInfo;\n    };\n\n    /**\n     * Get a specific add module box html element.\n     * @param parentId The parent data Id.\n     * @param slotId The slot data Id.\n     * @returns {HTMLElement | null} Returns the html module element if module exists. Otherwise, return null.\n     */\n    private _getAddModuleBox = (parentId: string, slotId: string): HTMLElement | null => {\n        if (!this.addModuleBoxes) {\n            this.addModuleBoxes = getAllAddModuleBoxes();\n        }\n        const foundBox = this.addModuleBoxes.find(a => a.dataInfo.id === parentId && a.dataInfo.slotId === slotId);\n        return foundBox ? foundBox.element : null;\n    };\n\n    /**\n     * Update the targeted add module box to insert state.\n     * @param parentId The parent data Id.\n     * @param slotId The slot data Id.\n     * @param isFragment True, if the module to be added is a fragment. Otherwise, false.\n     */\n    private _setAddModuleBoxToInsertState = (parentId: string, slotId: string, isFragment: boolean): void => {\n        const addModuleBoxElement = this._getAddModuleBox(parentId, slotId);\n        if (addModuleBoxElement && addModuleBoxElement.firstElementChild) {\n            updateAddModuleInnerContainerClass(\n                <HTMLElement>addModuleBoxElement.firstElementChild,\n                isFragment ? 'InsertFragment' : 'InsertModule'\n            );\n        }\n    };\n\n    /**\n     * Update all add module boxes to its initial state.\n     */\n    private _setAllAddModuleBoxesToInitialState = (): void => {\n        if (!this.addModuleBoxes) {\n            this.addModuleBoxes = getAllAddModuleBoxes();\n        }\n        this.addModuleBoxes.map(m => {\n            if (m.element?.firstElementChild) {\n                updateAddModuleInnerContainerClass(m.element.firstElementChild);\n            }\n        });\n    };\n\n    /**\n     * Returns whether or not the placeholder position has changed.\n     */\n    private _hasPlaceholderPositionChanged = (placement: PlaceHolderPlacement | null): boolean => {\n        return !_isEqual(this.placement, placement);\n    };\n\n    /**\n     * Get the information for the placeholder placement on modules.\n     * @param dragModule The draggable module attributes and html element.\n     * @param dropModule The droppable module attributes and html element.\n     * @param y The position of the mouse cursor on the y-axis.\n     */\n    private _getPlaceholderPlacementInfo(dragModule: ElementDataInfo, dropModule: ElementDataInfo, y: number): PlaceHolderPlacement | null {\n        // Get all modules inside the container.\n        const modules = getModulesByParentIdAndSlotId(dropModule.dataInfo.parentId, dropModule.dataInfo.slotId);\n\n        if (modules.length === 0) {\n            return null;\n        }\n\n        const dragModuleIndex = modules.findIndex(m => getElementDataInfo(<HTMLElement>m).dataInfo.id === dragModule.dataInfo.id);\n        let dropModuleIndex = modules.findIndex(m => getElementDataInfo(<HTMLElement>m).dataInfo.id === dropModule.dataInfo.id);\n        let dropModuleRelativeIndex = dropModuleIndex;\n\n        // if drop module is not found or if it is the drag module, ignore it.\n        if (dropModuleIndex < 0 || dropModuleIndex === dragModuleIndex) {\n            return null;\n        }\n\n        // If the dragged module is in the current container and comes before the droppend module, update the drop index to ignore the drag module position.\n        if (dragModuleIndex >= 0 && dragModuleIndex < dropModuleIndex) {\n            dropModuleIndex -= 1;\n        }\n\n        let placeBottom = false;\n\n        if (dropModule.element) {\n            const box = dropModule.element.getBoundingClientRect();\n\n            const distanceToBottom = box.bottom - y;\n            const distanceToTop = y - box.top;\n            if (distanceToBottom < distanceToTop) {\n                dropModuleIndex += 1;\n                dropModuleRelativeIndex += 1;\n                placeBottom = true;\n            }\n        }\n\n        return {\n            moduleId: dragModule.dataInfo.id,\n            parentId: dropModule.dataInfo.parentId,\n            slotId: dropModule.dataInfo.slotId,\n            index: dropModuleIndex,\n            relativeIndex: dropModuleRelativeIndex,\n            placeBottom\n        };\n    }\n\n    /**\n     * Add placeholder to the top or to the bottom of a module.\n     * @param moduleElement The module element.\n     * @param placeBottom If the placeholder should be placed at the bottom of the module.\n     */\n    private _movePlaceholder = (moduleElement: HTMLElement, placeBottom: boolean = false): void => {\n        this._removePlaceholderFromElement();\n        if (placeBottom) {\n            moduleElement.className += ` ${PLACEHOLDER_BOTTOM_CLASS_NAME}`;\n        } else {\n            moduleElement.className += ` ${PLACEHOLDER_TOP_CLASS_NAME}`;\n        }\n\n        this.moduleElement = moduleElement;\n    };\n\n    /**\n     * Remove placeholder.\n     */\n    private _removePlaceholderFromElement = (): void => {\n        if (this.moduleElement && this.moduleElement.className) {\n            if (this.moduleElement.className.includes(PLACEHOLDER_BOTTOM_CLASS_NAME)) {\n                this.moduleElement.className = this.moduleElement.className.replace(PLACEHOLDER_BOTTOM_CLASS_NAME, '').trim();\n            } else if (this.moduleElement.className.includes(PLACEHOLDER_TOP_CLASS_NAME)) {\n                this.moduleElement.className = this.moduleElement.className.replace(PLACEHOLDER_TOP_CLASS_NAME, '').trim();\n            }\n        }\n        this.moduleElement = null;\n    };\n}\nconst dragAndDropPlaceholder = new DragAndDropPlaceholder();\nexport default dragAndDropPlaceholder;\n"],"sourceRoot":""},"metadata":{},"sourceType":"module"}