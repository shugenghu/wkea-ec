{"ast":null,"code":"import _regeneratorRuntime from\"@babel/runtime/regenerator\";import _defineProperty from\"@babel/runtime/helpers/esm/defineProperty\";import _asyncToGenerator from\"@babel/runtime/helpers/esm/asyncToGenerator\";import _classCallCheck from\"@babel/runtime/helpers/esm/classCallCheck\";function ownKeys(object,enumerableOnly){var keys=Object.keys(object);if(Object.getOwnPropertySymbols){var symbols=Object.getOwnPropertySymbols(object);if(enumerableOnly)symbols=symbols.filter(function(sym){return Object.getOwnPropertyDescriptor(object,sym).enumerable;});keys.push.apply(keys,symbols);}return keys;}function _objectSpread(target){for(var i=1;i<arguments.length;i++){var source=arguments[i]!=null?arguments[i]:{};if(i%2){ownKeys(Object(source),true).forEach(function(key){_defineProperty(target,key,source[key]);});}else if(Object.getOwnPropertyDescriptors){Object.defineProperties(target,Object.getOwnPropertyDescriptors(source));}else{ownKeys(Object(source)).forEach(function(key){Object.defineProperty(target,key,Object.getOwnPropertyDescriptor(source,key));});}}return target;}import{createObservableDataAction}from'@msdyn365-commerce/core';import{readAsync,updateAsync}from'@msdyn365-commerce/retail-proxy/dist/DataActions/CustomersDataActions.g';import{GetCustomerInput}from'./get-customer';import{buildCacheKey}from'./index';/**\r\n *  Input class for the updateCustomerAttributes\r\n */export var updateCustomerAttributesInput=function updateCustomerAttributesInput(userAccountNumber,customerAttributes,apiSettings,phone,vatNumber){var _this=this;_classCallCheck(this,updateCustomerAttributesInput);this.getCacheKey=function(){return buildCacheKey(\"\".concat(_this.userAccountNumber),_this.apiSettings);};this.getCacheObjectType=function(){return'Customer';};this.dataCacheType=function(){return'none';};this.userAccountNumber=userAccountNumber;this.apiSettings=apiSettings;this.customerAttributes=customerAttributes;this.phone=phone;this.vatNumber=vatNumber;};/**\r\n * The action method for the updateCustomerAttributes data action\r\n * @param input The action input\r\n * @param ctx The action context\r\n */export function updateCustomerAttributesAction(_x,_x2){return _updateCustomerAttributesAction.apply(this,arguments);}/**\r\n * The updateCustomerAttributes data action\r\n * Returns the updated customer\r\n */function _updateCustomerAttributesAction(){_updateCustomerAttributesAction=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee(input,ctx){var customerAttributes,phone,vatNumber,userAccountNumber,customer,newCustomer,updatedCustomer;return _regeneratorRuntime.wrap(function _callee$(_context){while(1){switch(_context.prev=_context.next){case 0:customerAttributes=input.customerAttributes,phone=input.phone,vatNumber=input.vatNumber,userAccountNumber=input.userAccountNumber;_context.next=3;return readAsync({callerContext:ctx},userAccountNumber);case 3:customer=_context.sent;if(customer){_context.next=7;break;}ctx.telemetry.debug('[update-customer-attributes] Unable to find customer');throw new Error('Unable to find customer');case 7:newCustomer=_objectSpread({},customer);newCustomer.Phone=phone;newCustomer.VatNumber=vatNumber;newCustomer.Attributes=customerAttributes;_context.next=13;return updateAsync({callerContext:ctx},newCustomer);case 13:updatedCustomer=_context.sent;if(updatedCustomer){_context.next=17;break;}ctx.telemetry.debug('[update-customer-attributes] Unable to update customer attributes');throw new Error('Unable to update customer attributes');case 17:ctx.update(new GetCustomerInput(ctx.requestContext.apiSettings),updatedCustomer);return _context.abrupt(\"return\",updatedCustomer);case 19:case\"end\":return _context.stop();}}},_callee);}));return _updateCustomerAttributesAction.apply(this,arguments);}export default createObservableDataAction({id:'@msdyn365-commerce-modules/retail-actions/update-customer-attributes',action:updateCustomerAttributesAction});","map":{"version":3,"sources":["../../src/update-customer-attributes.ts"],"names":[],"mappings":"ijCAAA,OACe,0BADf,KAGO,yBAHP,CAKA,OACI,SADJ,CACe,WADf,KAEO,yEAFP,CAIA,OAAS,gBAAT,KAAiC,gBAAjC,CACA,OAAS,aAAT,KAA8B,SAA9B,CAUA;;AAEG,GACH,UAAa,CAAA,6BAAb,CAOI,uCAAY,iBAAZ,CAAuC,kBAAvC,CAAgF,WAAhF,CAAmH,KAAnH,CAAmI,SAAnI,CAAqJ,oEAQ9I,KAAA,WAAA,CAAc,iBAAc,CAAA,aAAa,WAAI,KAAI,CAAC,iBAAT,EAA8B,KAAI,CAAC,WAAnC,CAA3B,EAAd,CACA,KAAA,kBAAA,CAAqB,iBAAM,UAAN,EAArB,CACA,KAAA,aAAA,CAAgB,iBAAiB,MAAjB,EAAhB,CATH,KAAK,iBAAL,CAAyB,iBAAzB,CACA,KAAK,WAAL,CAAmB,WAAnB,CACA,KAAK,kBAAL,CAA0B,kBAA1B,CACA,KAAK,KAAL,CAAa,KAAb,CACA,KAAK,SAAL,CAAiB,SAAjB,CACH,CAbL,CAoBA;;;;AAIG,GACH,eAAsB,CAAA,8BAAtB,uEA2BA;;;AAGG,G,mIA9BI,iBAA8C,KAA9C,CAAqF,GAArF,gNACK,kBADL,CACiE,KADjE,CACK,kBADL,CACyB,KADzB,CACiE,KADjE,CACyB,KADzB,CACgC,SADhC,CACiE,KADjE,CACgC,SADhC,CAC2C,iBAD3C,CACiE,KADjE,CAC2C,iBAD3C,uBAGoB,CAAA,SAAS,CAAC,CAAE,aAAa,CAAE,GAAjB,CAAD,CAAyB,iBAAzB,CAH7B,QAGG,QAHH,kBAKE,QALF,yBAMC,GAAG,CAAC,SAAJ,CAAc,KAAd,CAAoB,sDAApB,EAND,KAOO,IAAI,CAAA,KAAJ,CAAU,yBAAV,CAPP,QAUG,WAVH,kBAUsB,QAVtB,EAWH,WAAW,CAAC,KAAZ,CAAoB,KAApB,CACA,WAAW,CAAC,SAAZ,CAAwB,SAAxB,CACA,WAAW,CAAC,UAAZ,CAAyB,kBAAzB,CAbG,uBAe2B,CAAA,WAAW,CAAC,CAAE,aAAa,CAAE,GAAjB,CAAD,CAAyB,WAAzB,CAftC,SAeG,eAfH,kBAiBE,eAjBF,0BAkBC,GAAG,CAAC,SAAJ,CAAc,KAAd,CAAoB,mEAApB,EAlBD,KAmBO,IAAI,CAAA,KAAJ,CAAU,sCAAV,CAnBP,SAsBH,GAAG,CAAC,MAAJ,CAAW,GAAI,CAAA,gBAAJ,CAAqB,GAAG,CAAC,cAAJ,CAAmB,WAAxC,CAAX,CAAiE,eAAjE,EAtBG,gCAwBI,eAxBJ,yD,iEA+BP,cAAe,CAAA,0BAA0B,CAAW,CAChD,EAAE,CAAE,sEAD4C,CAEhD,MAAM,CAAqB,8BAFqB,CAAX,CAAzC","sourcesContent":["import {\n    CacheType, createObservableDataAction, IAction, IActionContext, IActionInput,\n    ICommerceApiSettings\n} from '@msdyn365-commerce/core';\nimport { Customer, CustomerAttribute } from '@msdyn365-commerce/retail-proxy';\nimport {\n    readAsync, updateAsync\n} from '@msdyn365-commerce/retail-proxy/dist/DataActions/CustomersDataActions.g';\n\nimport { GetCustomerInput } from './get-customer';\nimport { buildCacheKey } from './index';\n\nexport interface IUpdateCustomerAttributesInput extends IActionInput {\n    phone?: string,\n    vatNumber?: string;\n    customerAttributes: CustomerAttribute[];\n    userAccountNumber: string;\n    apiSettings: ICommerceApiSettings;\n}\n\n/**\n *  Input class for the updateCustomerAttributes\n */\nexport class updateCustomerAttributesInput implements IUpdateCustomerAttributesInput {\n    public userAccountNumber: string;\n    public customerAttributes: CustomerAttribute[];\n    public apiSettings: ICommerceApiSettings;\n    public phone?: string;\n    public vatNumber?: string;\n\n    constructor(userAccountNumber: string, customerAttributes: CustomerAttribute[], apiSettings: ICommerceApiSettings, phone?: string, vatNumber?: string) {\n        this.userAccountNumber = userAccountNumber;\n        this.apiSettings = apiSettings;\n        this.customerAttributes = customerAttributes;\n        this.phone = phone;\n        this.vatNumber = vatNumber;\n    }\n\n    public getCacheKey = (): string => buildCacheKey(`${this.userAccountNumber}`, this.apiSettings);\n    public getCacheObjectType = () => 'Customer';\n    public dataCacheType = (): CacheType => 'none';\n}\n\n/**\n * The action method for the updateCustomerAttributes data action\n * @param input The action input\n * @param ctx The action context\n */\nexport async function updateCustomerAttributesAction(input: IUpdateCustomerAttributesInput, ctx: IActionContext): Promise<Customer> {\n    const { customerAttributes, phone, vatNumber, userAccountNumber } = input;\n\n    const customer = await readAsync({ callerContext: ctx }, userAccountNumber);\n\n    if (!customer) {\n        ctx.telemetry.debug('[update-customer-attributes] Unable to find customer');\n        throw new Error('Unable to find customer');\n    }\n\n    const newCustomer = { ...customer };\n    newCustomer.Phone = phone;\n    newCustomer.VatNumber = vatNumber;\n    newCustomer.Attributes = customerAttributes;\n\n    const updatedCustomer = await updateAsync({ callerContext: ctx }, newCustomer);\n\n    if (!updatedCustomer) {\n        ctx.telemetry.debug('[update-customer-attributes] Unable to update customer attributes');\n        throw new Error('Unable to update customer attributes');\n    }\n\n    ctx.update(new GetCustomerInput(ctx.requestContext.apiSettings), updatedCustomer);\n\n    return updatedCustomer;\n}\n\n/**\n * The updateCustomerAttributes data action\n * Returns the updated customer\n */\nexport default createObservableDataAction<Customer>({\n    id: '@msdyn365-commerce-modules/retail-actions/update-customer-attributes',\n    action: <IAction<Customer>>updateCustomerAttributesAction\n});"],"sourceRoot":""},"metadata":{},"sourceType":"module"}