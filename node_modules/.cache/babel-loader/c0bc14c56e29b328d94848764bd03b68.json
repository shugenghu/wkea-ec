{"ast":null,"code":"import\"core-js/modules/es.number.to-fixed.js\";import\"core-js/modules/es.string.includes.js\";import _defineProperty from\"@babel/runtime/helpers/esm/defineProperty\";import _get from\"lodash/get\";function ownKeys(object,enumerableOnly){var keys=Object.keys(object);if(Object.getOwnPropertySymbols){var symbols=Object.getOwnPropertySymbols(object);if(enumerableOnly)symbols=symbols.filter(function(sym){return Object.getOwnPropertyDescriptor(object,sym).enumerable;});keys.push.apply(keys,symbols);}return keys;}function _objectSpread(target){for(var i=1;i<arguments.length;i++){var source=arguments[i]!=null?arguments[i]:{};if(i%2){ownKeys(Object(source),true).forEach(function(key){_defineProperty(target,key,source[key]);});}else if(Object.getOwnPropertyDescriptors){Object.defineProperties(target,Object.getOwnPropertyDescriptors(source));}else{ownKeys(Object(source)).forEach(function(key){Object.defineProperty(target,key,Object.getOwnPropertyDescriptor(source,key));});}}return target;}import{getTelemetryObject,Heading}from'@msdyn365-commerce-modules/utilities';import*as Msdyn365 from'@msdyn365-commerce/core';import*as React from'react';import{AccountLabels,AccountValues,BackButton,CreditSummaryLabels,CreditSummaryValues}from'./components';class AccountCustomerBalance extends React.PureComponent{constructor(props){super(props);this.telemetryContent=getTelemetryObject(this.props.context.request.telemetryPageName,this.props.friendlyName,this.props.telemetry);}render(){const customer=_get(this.props,'data.customerInformation.result');const account=_get(this.props,'data.balance.result');if([customer,account].includes(undefined)){this.props.context.telemetry.error('Customer data is unavailable, module will not render');return null;}const{config,resources,context}=this.props;const{heading}=config;const{creditSummarySectionHeading,accountSectionHeading,backToShoppingText,customerSincePrefix,availableCreditLabel,balanceOwedLabel,creditExcessLabel}=resources;const accountNumber=customer.AccountNumber;const createdOn=this._formatJoinDate(new Date(customer.CreatedDateTime));const name=\"\".concat(customer.FirstName,\" \").concat(customer.LastName);const excess=account.Balance-account.CreditLimit;const creditExcess=excess>0?this._formatCurrency(excess):null;const availableCredit=this._formatCurrency(account.CreditLimit-account.Balance);const balanceOwed=this._formatCurrency(account.Balance);const backLink=Msdyn365.getUrlSync('home',context.actionContext)||'';const viewProps=_objectSpread(_objectSpread({},this.props),{},{heading:/*#__PURE__*/React.createElement(Heading,{text:heading.text,tag:heading.tag}),accountSectionHeading:/*#__PURE__*/React.createElement(Heading,{tag:\"h3\",text:accountSectionHeading,className:'ms-account-customer-balance__account-heading'}),accountLabels:/*#__PURE__*/React.createElement(AccountLabels,{name:name,accountNumber:accountNumber,createdOn:createdOn,customerSincePrefix:customerSincePrefix}),accountValues:/*#__PURE__*/React.createElement(AccountValues,{availableCredit:availableCredit,availableCreditLabel:availableCreditLabel}),creditSummarySectionHeading:/*#__PURE__*/React.createElement(Heading,{tag:\"h3\",text:creditSummarySectionHeading,className:'ms-account-customer-balance__credit-summary-heading'}),creditSummaryLabels:/*#__PURE__*/React.createElement(CreditSummaryLabels,{availableCredit:availableCreditLabel,balanceOwed:balanceOwedLabel,creditExcess:creditExcess&&creditExcessLabel}),creditSummaryValues:/*#__PURE__*/React.createElement(CreditSummaryValues,{availableCredit:availableCredit,balanceOwed:balanceOwed,creditExcess:creditExcess}),homeButton:/*#__PURE__*/React.createElement(BackButton,{label:backToShoppingText,link:backLink,telemetryContent:this.telemetryContent})});return this.props.renderView(viewProps);}_formatCurrency(currency){const currencyCode=_get(this.props,'context.request.channel.Currency');const formatCurrency=_get(this.props,'context.cultureFormatter.formatCurrency');return\"\".concat(formatCurrency(currency.toFixed(2),currencyCode));}_formatJoinDate(date){const i14nDate=new Intl.DateTimeFormat(this.props.context.actionContext.requestContext.locale,{month:'long',day:'numeric',year:'numeric'});return i14nDate.format(date);}}export default AccountCustomerBalance;","map":{"version":3,"sources":["modules/account-customer-balance/account-customer-balance.tsx"],"names":[],"mappings":"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","sourcesContent":["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nimport { getTelemetryObject, Heading, ITelemetryContent } from '@msdyn365-commerce-modules/utilities';\nimport * as Msdyn365 from '@msdyn365-commerce/core';\nimport { get } from 'lodash';\nimport * as React from 'react';\nimport { IAccountCustomerBalanceData } from './account-customer-balance.data';\nimport { HeadingTag, IAccountCustomerBalanceProps } from './account-customer-balance.props.autogenerated';\nimport { AccountLabels, AccountValues, BackButton, CreditSummaryLabels, CreditSummaryValues } from './components';\n\nexport interface IAccountCustomerBalanceViewProps extends IAccountCustomerBalanceProps<IAccountCustomerBalanceData> {\n    heading: string;\n    homeButton: React.ReactNode;\n    accountSectionHeading: React.ReactNode;\n    accountLabels: React.ReactNode;\n    accountValues: React.ReactNode;\n    creditSummarySectionHeading: React.ReactNode;\n    creditSummaryLabels: React.ReactNode;\n    creditSummaryValues: React.ReactNode;\n}\n\n/**\n *\n * AccountCustomerBalance component\n * @extends {React.PureComponent<IAccountCustomerBalanceProps<IAccountCustomerBalanceData>>}\n */\nclass AccountCustomerBalance extends React.PureComponent<IAccountCustomerBalanceProps<IAccountCustomerBalanceData>> {\n    private telemetryContent?: ITelemetryContent;\n\n    constructor(props: IAccountCustomerBalanceProps<IAccountCustomerBalanceData>) {\n        super(props);\n        this.telemetryContent = getTelemetryObject(this.props.context.request.telemetryPageName!, this.props.friendlyName, this.props.telemetry);\n    }\n\n    public render(): JSX.Element | null {\n        const customer = get(this.props, 'data.customerInformation.result');\n        const account = get(this.props, 'data.balance.result');\n        if ([customer, account].includes(undefined)) {\n            this.props.context.telemetry.error('Customer data is unavailable, module will not render');\n            return null;\n        }\n\n        const { config, resources, context } = this.props;\n        const { heading } = config;\n        const {\n            creditSummarySectionHeading,\n            accountSectionHeading,\n            backToShoppingText,\n            customerSincePrefix,\n            availableCreditLabel,\n            balanceOwedLabel,\n            creditExcessLabel\n        } = resources;\n\n        const accountNumber = customer.AccountNumber;\n        const createdOn = this._formatJoinDate(new Date(customer.CreatedDateTime));\n        const name = `${customer.FirstName} ${customer.LastName}`;\n        const excess = account.Balance - account.CreditLimit;\n        const creditExcess = excess > 0 ? this._formatCurrency(excess) : null;\n        const availableCredit = this._formatCurrency(account.CreditLimit - account.Balance);\n        const balanceOwed = this._formatCurrency(account.Balance);\n        const backLink = Msdyn365.getUrlSync('home', context.actionContext) || '';\n\n        const viewProps = {\n            ...this.props,\n            heading: <Heading text={heading.text} tag={heading.tag} />,\n            accountSectionHeading: <Heading tag={HeadingTag.h3} text={accountSectionHeading} className='ms-account-customer-balance__account-heading'/>,\n            accountLabels: (\n                <AccountLabels name={name} accountNumber={accountNumber} createdOn={createdOn} customerSincePrefix={customerSincePrefix}/>\n            ),\n            accountValues: <AccountValues availableCredit={availableCredit} availableCreditLabel={availableCreditLabel}/>,\n            creditSummarySectionHeading: <Heading tag={HeadingTag.h3} text={creditSummarySectionHeading} className='ms-account-customer-balance__credit-summary-heading'/>,\n            creditSummaryLabels: (\n                <CreditSummaryLabels\n                    availableCredit={availableCreditLabel}\n                    balanceOwed={balanceOwedLabel}\n                    creditExcess={creditExcess && creditExcessLabel}\n                />\n            ),\n            creditSummaryValues: (\n                <CreditSummaryValues availableCredit={availableCredit} balanceOwed={balanceOwed} creditExcess={creditExcess}/>\n            ),\n            homeButton: <BackButton label={backToShoppingText} link={backLink} telemetryContent={this.telemetryContent}/>\n        };\n\n        return this.props.renderView(viewProps);\n    }\n\n    private _formatCurrency(currency: number): string {\n        const currencyCode = get(this.props, 'context.request.channel.Currency');\n        const formatCurrency = get(this.props, 'context.cultureFormatter.formatCurrency');\n\n        return `${formatCurrency(currency.toFixed(2), currencyCode)}`;\n    }\n    private _formatJoinDate(date: Date): string {\n        const i14nDate = new Intl.DateTimeFormat(this.props.context.actionContext.requestContext.locale, {\n            month: 'long',\n            day: 'numeric',\n            year: 'numeric'\n        });\n\n        return i14nDate.format(date);\n    }\n}\n\nexport default AccountCustomerBalance;\n"],"sourceRoot":"./src/"},"metadata":{},"sourceType":"module"}