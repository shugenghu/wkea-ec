{"ast":null,"code":"import _classCallCheck from\"@babel/runtime/helpers/esm/classCallCheck\";import _createClass from\"@babel/runtime/helpers/esm/createClass\";import _assertThisInitialized from\"@babel/runtime/helpers/esm/assertThisInitialized\";import _inherits from\"@babel/runtime/helpers/esm/inherits\";import _possibleConstructorReturn from\"@babel/runtime/helpers/esm/possibleConstructorReturn\";import _getPrototypeOf from\"@babel/runtime/helpers/esm/getPrototypeOf\";import _wrapNativeSuper from\"@babel/runtime/helpers/esm/wrapNativeSuper\";function _createSuper(Derived){var hasNativeReflectConstruct=_isNativeReflectConstruct();return function _createSuperInternal(){var Super=_getPrototypeOf(Derived),result;if(hasNativeReflectConstruct){var NewTarget=_getPrototypeOf(this).constructor;result=Reflect.construct(Super,arguments,NewTarget);}else{result=Super.apply(this,arguments);}return _possibleConstructorReturn(this,result);};}function _isNativeReflectConstruct(){if(typeof Reflect===\"undefined\"||!Reflect.construct)return false;if(Reflect.construct.sham)return false;if(typeof Proxy===\"function\")return true;try{Date.prototype.toString.call(Reflect.construct(Date,[],function(){}));return true;}catch(e){return false;}}/*!\r\n * Copyright (c) Microsoft Corporation.\r\n * All rights reserved. See LICENSE in the project root for license information.\r\n */ /**\r\n * Action Error Wrapper\r\n */export var ActionError=/*#__PURE__*/function(_Error){_inherits(ActionError,_Error);var _super=_createSuper(ActionError);function ActionError(error){var _this;_classCallCheck(this,ActionError);_this=_super.call(this);_this.name=ActionError.Name;if(error instanceof Error){_this.message=error.message;_this.error=error;}else{if(error===\"Timeout\"/* Timeout */){_this.status=error;_this.message='Action Timeout';}else if(error===\"Hook Timeout\"/* HookTimeout */){_this.status=error;_this.message='Action hook Timeout';}else if(error===\"Service Unavailable\"/* ServiceUnavailable */){_this.status=error;_this.message='Action failed due to service unavailable';}else if(typeof error==='string'){_this.message=error;}else{_this.error=error;}}// As of Typescript 2.1 if we extend the Error object the prototype must be set explicitly\n// See: https://github.com/Microsoft/TypeScript-wiki/blob/master/Breaking-Changes.md#extending-built-ins-like-error-array-and-map-may-no-longer-work\nObject.setPrototypeOf(_assertThisInitialized(_this),ActionError.prototype);return _this;}/**\r\n     * Checks if an object is an action error\r\n     */_createClass(ActionError,null,[{key:\"isActionError\",value:function isActionError(error){return error instanceof Error&&error.name===ActionError.Name;}},{key:\"isTimeoutError\",value:function isTimeoutError(error){return error&&error.status===\"Timeout\"/* Timeout */;}},{key:\"isServiceUnavailable\",value:function isServiceUnavailable(error){return error&&error.status===\"Service Unavailable\"/* ServiceUnavailable */;}}]);return ActionError;}(/*#__PURE__*/_wrapNativeSuper(Error));ActionError.Name='ActionError';","map":{"version":3,"sources":["../../src/action-error.ts"],"names":[],"mappings":"krCAAA;;;AAGG,G,CAWH;;AAEG,GACH,UAAa,CAAA,WAAb,kGA0BI,qBAAY,KAAZ,CAAwB,6CACpB,wBACA,MAAK,IAAL,CAAY,WAAW,CAAC,IAAxB,CACA,GAAI,KAAK,WAAY,CAAA,KAArB,CAA4B,CACxB,MAAK,OAAL,CAAe,KAAK,CAAC,OAArB,CACA,MAAK,KAAL,CAAa,KAAb,CACH,CAHD,IAGO,CACH,GAAI,KAAK,GAAA,SAAA,aAAT,CAAyC,CACrC,MAAK,MAAL,CAAiC,KAAjC,CACA,MAAK,OAAL,CAAe,gBAAf,CACH,CAHD,IAGO,IAAI,KAAK,GAAA,cAAA,iBAAT,CAA6C,CAChD,MAAK,MAAL,CAAiC,KAAjC,CACA,MAAK,OAAL,CAAe,qBAAf,CACH,CAHM,IAGA,IAAI,KAAK,GAAA,qBAAA,wBAAT,CAAoD,CACvD,MAAK,MAAL,CAAiC,KAAjC,CACA,MAAK,OAAL,CAAe,0CAAf,CACH,CAHM,IAGA,IAAI,MAAO,CAAA,KAAP,GAAiB,QAArB,CAA+B,CAClC,MAAK,OAAL,CAAe,KAAf,CACH,CAFM,IAEA,CACH,MAAK,KAAL,CAAa,KAAb,CACH,CACJ,CAED;AACA;AACA,MAAM,CAAC,cAAP,+BAA4B,WAAW,CAAC,SAAxC,EAzBoB,aA0BvB,CA9CD;;AAEG,OARP,iFASgC,KAThC,CAS8C,CACtC,MAAO,CAAA,KAAK,WAAY,CAAA,KAAjB,EAAwC,KAAM,CAAC,IAAP,GAAgB,WAAW,CAAC,IAA3E,CACH,CAXL,sDAaiC,KAbjC,CAa+C,CACvC,MAAO,CAAA,KAAK,EAAkB,KAAM,CAAC,MAAP,GAAa,SAAA,aAA3C,CACH,CAfL,kEAiBuC,KAjBvC,CAiBqD,CAC7C,MAAO,CAAA,KAAK,EAAkB,KAAM,CAAC,MAAP,GAAa,qBAAA,wBAA3C,CACH,CAnBL,uDAAiC,KAAjC,GAC2B,WAAA,CAAA,IAAA,CAAe,aAAf","sourcesContent":["/*!\n * Copyright (c) Microsoft Corporation.\n * All rights reserved. See LICENSE in the project root for license information.\n */\n\n/**\n * Known action error failure states\n */\nexport const enum ActionErrorStatus {\n    Timeout = 'Timeout',\n    HookTimeout = 'Hook Timeout',\n    ServiceUnavailable = 'Service Unavailable'\n}\n\n/**\n * Action Error Wrapper\n */\nexport class ActionError extends Error {\n    public static readonly Name: string = 'ActionError';\n\n    public error?: unknown;\n    public status?: ActionErrorStatus;\n\n    /**\n     * Checks if an object is an action error\n     */\n    public static isActionError(error: unknown): boolean {\n        return error instanceof Error && (<ActionError>error).name === ActionError.Name;\n    }\n\n    public static isTimeoutError(error: unknown): boolean {\n        return error && (<ActionError>error).status === ActionErrorStatus.Timeout;\n    }\n\n    public static isServiceUnavailable(error: unknown): boolean {\n        return error && (<ActionError>error).status === ActionErrorStatus.ServiceUnavailable;\n    }\n\n    /**\n     * Action Errors\n     * @param error Original Error\n     */\n    constructor(error: ActionErrorStatus | Error);\n    constructor(error: Error) {\n        super();\n        this.name = ActionError.Name;\n        if (error instanceof Error) {\n            this.message = error.message;\n            this.error = error;\n        } else {\n            if (error === ActionErrorStatus.Timeout) {\n                this.status = <ActionErrorStatus>error;\n                this.message = 'Action Timeout';\n            } else if (error === ActionErrorStatus.HookTimeout) {\n                this.status = <ActionErrorStatus>error;\n                this.message = 'Action hook Timeout';\n            } else if (error === ActionErrorStatus.ServiceUnavailable) {\n                this.status = <ActionErrorStatus>error;\n                this.message = 'Action failed due to service unavailable';\n            } else if (typeof error === 'string') {\n                this.message = error;\n            } else {\n                this.error = error;\n            }\n        }\n\n        // As of Typescript 2.1 if we extend the Error object the prototype must be set explicitly\n        // See: https://github.com/Microsoft/TypeScript-wiki/blob/master/Breaking-Changes.md#extending-built-ins-like-error-array-and-map-may-no-longer-work\n        Object.setPrototypeOf(this, ActionError.prototype);\n    }\n}\n"],"sourceRoot":""},"metadata":{},"sourceType":"module"}