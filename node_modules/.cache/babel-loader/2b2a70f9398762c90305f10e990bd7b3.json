{"ast":null,"code":"import _defineProperty from\"@babel/runtime/helpers/esm/defineProperty\";import _typeof from\"@babel/runtime/helpers/esm/typeof\";import _regeneratorRuntime from\"@babel/runtime/regenerator\";import _asyncToGenerator from\"@babel/runtime/helpers/esm/asyncToGenerator\";import _classCallCheck from\"@babel/runtime/helpers/esm/classCallCheck\";import _createClass from\"@babel/runtime/helpers/esm/createClass\";function _createForOfIteratorHelper(o,allowArrayLike){var it;if(typeof Symbol===\"undefined\"||o[Symbol.iterator]==null){if(Array.isArray(o)||(it=_unsupportedIterableToArray(o))||allowArrayLike&&o&&typeof o.length===\"number\"){if(it)o=it;var i=0;var F=function F(){};return{s:F,n:function n(){if(i>=o.length)return{done:true};return{done:false,value:o[i++]};},e:function e(_e){throw _e;},f:F};}throw new TypeError(\"Invalid attempt to iterate non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");}var normalCompletion=true,didErr=false,err;return{s:function s(){it=o[Symbol.iterator]();},n:function n(){var step=it.next();normalCompletion=step.done;return step;},e:function e(_e2){didErr=true;err=_e2;},f:function f(){try{if(!normalCompletion&&it[\"return\"]!=null)it[\"return\"]();}finally{if(didErr)throw err;}}};}function _unsupportedIterableToArray(o,minLen){if(!o)return;if(typeof o===\"string\")return _arrayLikeToArray(o,minLen);var n=Object.prototype.toString.call(o).slice(8,-1);if(n===\"Object\"&&o.constructor)n=o.constructor.name;if(n===\"Map\"||n===\"Set\")return Array.from(o);if(n===\"Arguments\"||/^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n))return _arrayLikeToArray(o,minLen);}function _arrayLikeToArray(arr,len){if(len==null||len>arr.length)len=arr.length;for(var i=0,arr2=new Array(len);i<len;i++){arr2[i]=arr[i];}return arr2;}function ownKeys(object,enumerableOnly){var keys=Object.keys(object);if(Object.getOwnPropertySymbols){var symbols=Object.getOwnPropertySymbols(object);if(enumerableOnly)symbols=symbols.filter(function(sym){return Object.getOwnPropertyDescriptor(object,sym).enumerable;});keys.push.apply(keys,symbols);}return keys;}function _objectSpread(target){for(var i=1;i<arguments.length;i++){var source=arguments[i]!=null?arguments[i]:{};if(i%2){ownKeys(Object(source),true).forEach(function(key){_defineProperty(target,key,source[key]);});}else if(Object.getOwnPropertyDescriptors){Object.defineProperties(target,Object.getOwnPropertyDescriptors(source));}else{ownKeys(Object(source)).forEach(function(key){Object.defineProperty(target,key,Object.getOwnPropertyDescriptor(source,key));});}}return target;}/*!\r\n * Copyright (c) Microsoft Corporation.\r\n * All rights reserved. See LICENSE in the project root for license information.\r\n */import msdyn365Commerce,{isAuthoringEditEnabled,isEmptyOrNullObject}from'@msdyn365-commerce/core-internal';import{AsyncResult,isAsyncResult}from'@msdyn365-commerce/retail-proxy';import{EXCEPTION_BADPAGECONTEXT,EXCEPTION_INITIALDATAFAIL}from'@msdyn365-commerce/telemetry-internal';import{isObservableArray,toJS,transaction}from'mobx';import{CACHE_SETTING,MODULE_ACTION_KEY,MODULE_CACHE_KEY,MODULE_CONFIG_ERRORS_KEY,MODULE_CONFIG_KEY,MODULE_DATA_KEY,MODULE_DEFERRED_KEY,MODULE_RESOURCES_KEY,MSDYN365_WYSIWYG_CANADDMODULE,MSDYN365_WYSIWYG_DISABLED_PROPS}from'../consts';import{getParentModuleName}from'../utils/helpers';import{getWrappedProxyObject}from'./authoring-edit-helper';/**\r\n * Class to hold the page view model, areas and regions\r\n */export var PageContext=/*#__PURE__*/function(){// tslint:disable-next-line:no-any\nfunction PageContext(pageData,requestContext,requestCache,resourceManager){_classCallCheck(this,PageContext);this._moduleList=[];this._themeModulesList=[];if(isEmptyOrNullObject(pageData)){throw new Error(EXCEPTION_BADPAGECONTEXT);}this.requestContext=requestContext;this.requestCache=requestCache;this.pageRoot=pageData.pageRoot;// tslint:disable-next-line:no-typeof-undefined\nif(typeof window==='undefined'){this._putRequestedModulesInCacheOnServer(pageData,resourceManager);}this._initThemeModulesList();}/**\r\n     * Returns callback function that returns module rendering metadata for a given module\r\n     */_createClass(PageContext,[{key:\"setAppCacheEntries\",value:function setAppCacheEntries(appCacheEntries){this.requestCache.put({typeName:CACHE_SETTING,key:'APP_CACHE_ENTRIES'},{item:appCacheEntries});}/**\r\n     * Checkis if the given module is deferred module\r\n     * @param name name of the module\r\n     */},{key:\"deferred\",value:function deferred(name){return!!this.requestCache.getValue({typeName:MODULE_DEFERRED_KEY,key:name});}},{key:\"getResourceTextForPlaceholderPreview\",value:function getResourceTextForPlaceholderPreview(){// tslint:disable-next-line:no-any\nvar resourceItem=this.requestCache.get({typeName:MODULE_RESOURCES_KEY,key:'PLACE-HOLDER-FOR-CONTAINER-PREVIEW'});if(resourceItem&&resourceItem.item&&resourceItem.item.clickToConfigure){return resourceItem.item.clickToConfigure;}else{return'Click here to configure';}}/**\r\n     * Marks module as deferred\r\n     * @param name name of the module\r\n     */},{key:\"markModuleAsDeferred\",value:function markModuleAsDeferred(name){this.requestCache.put({typeName:MODULE_DEFERRED_KEY,key:name},{item:true});}/**\r\n     * Inserts requested modules into cache on client side\r\n     * @param pageData page data object\r\n     * @param telemetry telemetry object\r\n     */ // tslint:disable-next-line:no-any\n},{key:\"putRequestedModulesInCacheOnClient\",value:function(){var _putRequestedModulesInCacheOnClient=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee(pageData,telemetry){var _i,_Object$keys,cacheType,cacheBasedOnType,_i2,_Object$keys2,cachekey,cacheItem,metadata,moduleItem;return _regeneratorRuntime.wrap(function _callee$(_context){while(1){switch(_context.prev=_context.next){case 0:if(!(isEmptyOrNullObject(pageData.requestCache)||isEmptyOrNullObject(pageData.requestCache.internalCache))){_context.next=2;break;}throw new Error(EXCEPTION_INITIALDATAFAIL);case 2:_i=0,_Object$keys=Object.keys(pageData.requestCache.internalCache);case 3:if(!(_i<_Object$keys.length)){_context.next=28;break;}cacheType=_Object$keys[_i];cacheBasedOnType=pageData.requestCache.internalCache[cacheType];if(isEmptyOrNullObject(cacheBasedOnType)){_context.next=25;break;}_i2=0,_Object$keys2=Object.keys(cacheBasedOnType);case 8:if(!(_i2<_Object$keys2.length)){_context.next=25;break;}cachekey=_Object$keys2[_i2];cacheItem=cacheBasedOnType[cachekey];// AsyncResults sent from server to client get serialized into basic JS objects,\n// They need to be \"rehydrated\" into actual AsyncResults to enable full functionality\nif(cacheItem.item&&cacheItem.item._type&&cacheItem.item._type==='AsyncResult'){metadata=cacheItem.item.metadata||{};if(cacheItem.item.status&&cacheItem.item.status==='SUCCESS'){cacheItem.item=AsyncResult.resolve(cacheItem.item.result);}else{cacheItem.item=AsyncResult.reject(cacheItem.item.error||'Unable to parse data action');}cacheItem.item.metadata=metadata;}this.requestCache.put({typeName:cacheType,key:cachekey},{item:cacheItem.item});// Awaiting a rejected promise will throw, so we need to catch those errors.\n_context.prev=13;_context.next=16;return cacheItem.item;case 16:_context.next=21;break;case 18:_context.prev=18;_context.t0=_context[\"catch\"](13);telemetry.debug(\"Error while hyrdating cache item, Type: \".concat(cacheBasedOnType,\", Key: \").concat(cachekey));case 21:if(cacheType===MODULE_CACHE_KEY){moduleItem=cacheItem.item;this._moduleList.push({id:moduleItem.id,typeName:moduleItem.typeName,dataActions:moduleItem.dataActions||[]});}case 22:_i2++;_context.next=8;break;case 25:_i++;_context.next=3;break;case 28:case\"end\":return _context.stop();}}},_callee,this,[[13,18]]);}));function putRequestedModulesInCacheOnClient(_x,_x2){return _putRequestedModulesInCacheOnClient.apply(this,arguments);}return putRequestedModulesInCacheOnClient;}()/**\r\n     * Populates data actions results from cache\r\n     * @param cacheObjectType entity type\r\n     * @param cacheKey cache key\r\n     */ // tslint:disable-next-line:no-any\n},{key:\"_populateDataActionResultFromCache\",value:function _populateDataActionResultFromCache(cacheObjectType,cacheKey){var _this=this;var cachedValueBasedOnInput=this.requestCache.getValue({typeName:cacheObjectType,key:cacheKey});if(!cachedValueBasedOnInput){return;}// Ref resolution for promises needs to be delayed until the value is available\nif(isAsyncResult(cachedValueBasedOnInput)){return transaction(function(){cachedValueBasedOnInput.then(function(promiseResult){// Directly set the result because we want a synchronous change\ncachedValueBasedOnInput.result=_this._resolveCacheRef(cacheObjectType,promiseResult);});return cachedValueBasedOnInput;});}return this._resolveCacheRef(cacheObjectType,cachedValueBasedOnInput);}/**\r\n     * Resolves cache reference for the given entity type\r\n     * @param cacheObjectType entity type that is cached\r\n     * @param cacheRefInfo cache ref key\r\n     */ // tslint:disable-next-line:no-any\n},{key:\"_resolveCacheRef\",value:function _resolveCacheRef(cacheObjectType,cacheRefInfo){var _this2=this;// tslint:disable:no-string-literal\nif(_typeof(cacheRefInfo)!=='object'||cacheRefInfo['$ref']!==true){return cacheRefInfo;}var result=cacheRefInfo['key'].map(function(key){var value=_this2.requestCache.getValue({typeName:cacheObjectType,key:key});if(value){return value;}}).filter(Boolean);return result&&result.length>0?cacheRefInfo['isCollection']?result:result[0]:null;}/**\r\n     * Inserts requested modules in cache to prepare the initialData that will be sent to client\r\n     * @param pageData pageData object with list of modules\r\n     * @param resourceManager resourceManager that contains the localized strings\r\n     */},{key:\"_putRequestedModulesInCacheOnServer\",value:function _putRequestedModulesInCacheOnServer(pageData,resourceManager){var _this3=this;var isEditor=this.requestContext.params&&this.requestContext.params.isEditor||false;for(var i=0;i<pageData.slots.length;++i){var moduleInstance=pageData.slots[i];var moduleId=moduleInstance.id;this._moduleList.push({id:moduleInstance.id,typeName:moduleInstance.typeName,dataActions:moduleInstance.dataActions});this.requestCache.put({typeName:MODULE_CACHE_KEY,key:moduleId},{item:{id:moduleInstance.id,typeName:moduleInstance.typeName}});this.requestCache.put({typeName:MODULE_CONFIG_KEY,key:moduleId},{item:moduleInstance.config});this.requestCache.put({typeName:MODULE_CONFIG_ERRORS_KEY,key:moduleId},{item:moduleInstance.configErrors});this.requestCache.put({typeName:MODULE_DATA_KEY,key:moduleId},{item:moduleInstance.data});this.requestCache.put({typeName:MODULE_ACTION_KEY,key:moduleId},{item:moduleInstance.dataActions});this.requestCache.put({typeName:MSDYN365_WYSIWYG_DISABLED_PROPS,key:moduleId},{item:[]});this.requestCache.put({typeName:MSDYN365_WYSIWYG_CANADDMODULE,key:moduleId},{item:[]});if(resourceManager&&!isEditor){this.requestCache.put({typeName:MODULE_RESOURCES_KEY,key:moduleInstance.typeName},{item:resourceManager.getModuleResources(moduleInstance.typeName,this.requestContext.locale)});}}// In editor mode, put the resources for all modules for the current locale into the cache\nif(isEditor&&resourceManager&&this.requestContext.features.enableAuthoringRemoveAndAddModule){// tslint:disable-next-line: no-any\nvar bindings=msdyn365Commerce.getAllModuleBinder();bindings.forEach(function(moduleBinder){_this3.requestCache.put({typeName:MODULE_RESOURCES_KEY,key:moduleBinder.name},{item:resourceManager.getModuleResources(moduleBinder.name,_this3.requestContext.locale)});});}}/**\r\n     * Initializes theme modules list that need to be loaded on the client\r\n     */},{key:\"_initThemeModulesList\",value:function _initThemeModulesList(){this._themeModulesList=[];if(this.requestContext.params.theme){this._themeModulesList.push(this.requestContext.params.theme);this._themeModulesList.push(getParentModuleName(this.requestContext.params.theme));}}},{key:\"modules\",get:function get(){var _this4=this;return function(name){var cacheItem=_this4.requestCache.getValue({typeName:MODULE_CACHE_KEY,key:name});if(!cacheItem){throw new Error(\"requested module id [\".concat(name,\"] is not found in module dictionary of pageconfig\"));}var data=_objectSpread({},_this4.requestCache.getValue({typeName:MODULE_DATA_KEY,key:name})||{});var actions=_this4.requestCache.getValue({typeName:MODULE_ACTION_KEY,key:name});var resources=_this4.requestCache.getValue({typeName:MODULE_RESOURCES_KEY,key:cacheItem.typeName});// toJS method\nif(actions&&toJS(actions)){var _iterator=_createForOfIteratorHelper(toJS(actions)),_step;try{var _loop=function _loop(){var action=_step.value;if(action.entity&&action.inputs){data[action.name]=Array.isArray(action.inputs)||isObservableArray(action.inputs)?action.inputs.map(function(cacheKey){return _this4._populateDataActionResultFromCache(action.entity,cacheKey);}):_this4._populateDataActionResultFromCache(action.entity,action.inputs);}else{data[action.name]=AsyncResult.reject('Action Input Creation Failure');}};for(_iterator.s();!(_step=_iterator.n()).done;){_loop();}}catch(err){_iterator.e(err);}finally{_iterator.f();}}var config=_this4.requestCache.getValue({typeName:MODULE_CONFIG_KEY,key:name})||{};return _objectSpread(_objectSpread({},cacheItem),{},{data:data,config:// tslint:disable-next-line:no-typeof-undefined\n!(typeof window==='undefined')&&isAuthoringEditEnabled(_this4.requestContext)?getWrappedProxyObject(config,name,cacheItem.typeName):config,configErrors:_this4.requestCache.getValue({typeName:MODULE_CONFIG_ERRORS_KEY,key:name}),resources:resources||{},disabledProperties:_this4.requestCache.getValue({typeName:MSDYN365_WYSIWYG_DISABLED_PROPS,key:name})||[],slotsForAddModule:_this4.requestCache.getValue({typeName:MSDYN365_WYSIWYG_CANADDMODULE,key:name})||[]});};}/**\r\n     * Get all the modules listed in the PageContext from the cache\r\n     */},{key:\"allModules\",get:function get(){var _this5=this;return this._moduleList.map(function(moduleMetaData){return _this5.modules(moduleMetaData.id);});}}]);return PageContext;}();","map":{"version":3,"sources":["../../../src/store/page-context.ts"],"names":[],"mappings":"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","sourcesContent":["/*!\n * Copyright (c) Microsoft Corporation.\n * All rights reserved. See LICENSE in the project root for license information.\n */\n\nimport { ICache, ICacheSettings } from '@msdyn365-commerce/cache-internal';\nimport msdyn365Commerce, {\n    IDictionary,\n    IModule,\n    IModuleContract,\n    IPageResponse,\n    IRequestContext,\n    IResourceManager,\n    isAuthoringEditEnabled,\n    isEmptyOrNullObject\n} from '@msdyn365-commerce/core-internal';\nimport { AsyncResult, isAsyncResult } from '@msdyn365-commerce/retail-proxy';\nimport { EXCEPTION_BADPAGECONTEXT, EXCEPTION_INITIALDATAFAIL, ITelemetry } from '@msdyn365-commerce/telemetry-internal';\nimport { isObservableArray, toJS, transaction } from 'mobx';\nimport { IModuleBinder } from '../app-initialization/models';\nimport {\n    CACHE_SETTING,\n    MODULE_ACTION_KEY,\n    MODULE_CACHE_KEY,\n    MODULE_CONFIG_ERRORS_KEY,\n    MODULE_CONFIG_KEY,\n    MODULE_DATA_KEY,\n    MODULE_DEFERRED_KEY,\n    MODULE_RESOURCES_KEY,\n    MSDYN365_WYSIWYG_CANADDMODULE,\n    MSDYN365_WYSIWYG_DISABLED_PROPS\n} from '../consts';\nimport { getParentModuleName } from '../utils/helpers';\nimport { getWrappedProxyObject } from './authoring-edit-helper';\n\n/**\n * Interface containing module metadata that pageContext holds\n *\n * Any change to this interface should result an accompanying change to the moduleList\n * Fast JSON stringify constructor in base-page-utils.ts\n */\ninterface IModuleMetaData {\n    id: string;\n    typeName: string;\n    dataActions: unknown;\n}\n\ninterface IActionMetaData {\n    name: string;\n    entity: string;\n    inputs: string[];\n}\n\n/**\n * Class to hold the page view model, areas and regions\n */\nexport class PageContext {\n    public requestContext: IRequestContext;\n    public pageRoot: IModuleContract & { theme: string };\n    public requestCache: ICache;\n    private _moduleList: IModuleMetaData[] = [];\n    private _themeModulesList: string[] = [];\n\n    // tslint:disable-next-line:no-any\n    constructor(pageData: IPageResponse | any, requestContext: IRequestContext, requestCache: ICache, resourceManager?: IResourceManager) {\n        if (isEmptyOrNullObject(pageData)) {\n            throw new Error(EXCEPTION_BADPAGECONTEXT);\n        }\n        this.requestContext = requestContext;\n        this.requestCache = requestCache;\n        this.pageRoot = pageData.pageRoot;\n\n        // tslint:disable-next-line:no-typeof-undefined\n        if (typeof window === 'undefined') {\n            this._putRequestedModulesInCacheOnServer(pageData, resourceManager);\n        }\n\n        this._initThemeModulesList();\n    }\n\n    /**\n     * Returns callback function that returns module rendering metadata for a given module\n     */\n    get modules(): (name: string) => IModule {\n        return (name: string) => {\n            const cacheItem = this.requestCache.getValue<IModule>({ typeName: MODULE_CACHE_KEY, key: name });\n            if (!cacheItem) {\n                throw new Error(`requested module id [${name}] is not found in module dictionary of pageconfig`);\n            }\n\n            const data = { ...(this.requestCache.getValue<IModule>({ typeName: MODULE_DATA_KEY, key: name }) || {}) };\n            const actions = this.requestCache.getValue<IActionMetaData[]>({ typeName: MODULE_ACTION_KEY, key: name });\n            const resources = this.requestCache.getValue<IDictionary<string>>({ typeName: MODULE_RESOURCES_KEY, key: cacheItem.typeName });\n\n            // toJS method\n            if (actions && toJS(actions)) {\n                for (const action of toJS(actions)) {\n                    if (action.entity && action.inputs) {\n                        data[action.name] =\n                            Array.isArray(action.inputs) || isObservableArray(action.inputs)\n                                ? action.inputs.map((cacheKey: string) => this._populateDataActionResultFromCache(action.entity, cacheKey))\n                                : this._populateDataActionResultFromCache(action.entity, action.inputs);\n                    } else {\n                        data[action.name] = AsyncResult.reject('Action Input Creation Failure');\n                    }\n                }\n            }\n\n            const config = this.requestCache.getValue<IDictionary<{}>>({ typeName: MODULE_CONFIG_KEY, key: name }) || {};\n            return {\n                ...cacheItem,\n                data: data,\n                config:\n                    // tslint:disable-next-line:no-typeof-undefined\n                    !(typeof window === 'undefined') && isAuthoringEditEnabled(this.requestContext)\n                        ? getWrappedProxyObject(config, name, cacheItem.typeName)\n                        : config,\n                configErrors: this.requestCache.getValue({ typeName: MODULE_CONFIG_ERRORS_KEY, key: name }),\n                resources: resources || {},\n                disabledProperties: this.requestCache.getValue({ typeName: MSDYN365_WYSIWYG_DISABLED_PROPS, key: name }) || [],\n                slotsForAddModule: this.requestCache.getValue({ typeName: MSDYN365_WYSIWYG_CANADDMODULE, key: name }) || []\n            };\n        };\n    }\n\n    /**\n     * Get all the modules listed in the PageContext from the cache\n     */\n    get allModules(): IModule[] {\n        return this._moduleList.map(moduleMetaData => {\n            return this.modules(moduleMetaData.id);\n        });\n    }\n\n    public setAppCacheEntries(appCacheEntries: string[]): void {\n        this.requestCache.put({ typeName: CACHE_SETTING, key: 'APP_CACHE_ENTRIES' }, { item: appCacheEntries });\n    }\n\n    /**\n     * Checkis if the given module is deferred module\n     * @param name name of the module\n     */\n    public deferred(name: string): Boolean {\n        return !!this.requestCache.getValue({ typeName: MODULE_DEFERRED_KEY, key: name });\n    }\n\n    public getResourceTextForPlaceholderPreview(): string {\n        // tslint:disable-next-line:no-any\n        const resourceItem = this.requestCache.get<any>({ typeName: MODULE_RESOURCES_KEY, key: 'PLACE-HOLDER-FOR-CONTAINER-PREVIEW' });\n        if (resourceItem && resourceItem.item && resourceItem.item.clickToConfigure) {\n            return resourceItem.item.clickToConfigure;\n        } else {\n            return 'Click here to configure';\n        }\n    }\n\n    /**\n     * Marks module as deferred\n     * @param name name of the module\n     */\n    public markModuleAsDeferred(name: string): void {\n        this.requestCache.put(\n            { typeName: MODULE_DEFERRED_KEY, key: name },\n            {\n                item: true\n            }\n        );\n    }\n\n    /**\n     * Inserts requested modules into cache on client side\n     * @param pageData page data object\n     * @param telemetry telemetry object\n     */\n    // tslint:disable-next-line:no-any\n    public async putRequestedModulesInCacheOnClient(pageData: any, telemetry: ITelemetry): Promise<void> {\n        if (isEmptyOrNullObject(pageData.requestCache) || isEmptyOrNullObject(pageData.requestCache.internalCache)) {\n            throw new Error(EXCEPTION_INITIALDATAFAIL);\n        }\n\n        for (const cacheType of Object.keys(pageData.requestCache.internalCache)) {\n            const cacheBasedOnType = pageData.requestCache.internalCache[cacheType];\n            if (!isEmptyOrNullObject(cacheBasedOnType)) {\n                for (const cachekey of Object.keys(cacheBasedOnType)) {\n                    const cacheItem = cacheBasedOnType[cachekey];\n\n                    // AsyncResults sent from server to client get serialized into basic JS objects,\n                    // They need to be \"rehydrated\" into actual AsyncResults to enable full functionality\n                    if (cacheItem.item && cacheItem.item._type && cacheItem.item._type === 'AsyncResult') {\n                        const metadata = cacheItem.item.metadata || {};\n                        if (cacheItem.item.status && cacheItem.item.status === 'SUCCESS') {\n                            cacheItem.item = AsyncResult.resolve(cacheItem.item.result);\n                        } else {\n                            cacheItem.item = AsyncResult.reject(cacheItem.item.error || 'Unable to parse data action');\n                        }\n                        cacheItem.item.metadata = metadata;\n                    }\n\n                    this.requestCache.put({ typeName: cacheType, key: cachekey }, { item: cacheItem.item });\n\n                    // Awaiting a rejected promise will throw, so we need to catch those errors.\n                    try {\n                        await cacheItem.item;\n                    } catch (e) {\n                        telemetry.debug(`Error while hyrdating cache item, Type: ${cacheBasedOnType}, Key: ${cachekey}`);\n                    }\n\n                    if (cacheType === MODULE_CACHE_KEY) {\n                        const moduleItem = <IModuleContract>cacheItem.item;\n                        this._moduleList.push({\n                            id: moduleItem.id,\n                            typeName: moduleItem.typeName,\n                            dataActions: moduleItem.dataActions || []\n                        });\n                    }\n                }\n            }\n        }\n    }\n\n    /**\n     * Populates data actions results from cache\n     * @param cacheObjectType entity type\n     * @param cacheKey cache key\n     */\n    // tslint:disable-next-line:no-any\n    private _populateDataActionResultFromCache(cacheObjectType: string, cacheKey: string): any {\n        const cachedValueBasedOnInput = this.requestCache.getValue<object>({ typeName: cacheObjectType, key: cacheKey });\n        if (!cachedValueBasedOnInput) {\n            return;\n        }\n\n        // Ref resolution for promises needs to be delayed until the value is available\n        if (isAsyncResult(cachedValueBasedOnInput)) {\n            return transaction(() => {\n                cachedValueBasedOnInput.then(promiseResult => {\n                    // Directly set the result because we want a synchronous change\n                    cachedValueBasedOnInput.result = this._resolveCacheRef(cacheObjectType, <object>promiseResult);\n                });\n                return cachedValueBasedOnInput;\n            });\n        }\n\n        return this._resolveCacheRef(cacheObjectType, cachedValueBasedOnInput);\n    }\n\n    /**\n     * Resolves cache reference for the given entity type\n     * @param cacheObjectType entity type that is cached\n     * @param cacheRefInfo cache ref key\n     */\n    // tslint:disable-next-line:no-any\n    private _resolveCacheRef(cacheObjectType: string, cacheRefInfo: object): any {\n        // tslint:disable:no-string-literal\n        if (typeof cacheRefInfo !== 'object' || cacheRefInfo['$ref'] !== true) {\n            return cacheRefInfo;\n        }\n        const result = cacheRefInfo['key']\n            .map(key => {\n                const value = this.requestCache.getValue({ typeName: cacheObjectType, key });\n                if (value) {\n                    return value;\n                }\n            })\n            .filter(Boolean);\n        return result && result.length > 0 ? (cacheRefInfo['isCollection'] ? result : result[0]) : null;\n    }\n\n    /**\n     * Inserts requested modules in cache to prepare the initialData that will be sent to client\n     * @param pageData pageData object with list of modules\n     * @param resourceManager resourceManager that contains the localized strings\n     */\n    private _putRequestedModulesInCacheOnServer(pageData: IPageResponse, resourceManager?: IResourceManager): void {\n        const isEditor = (this.requestContext.params && this.requestContext.params.isEditor) || false;\n        for (let i = 0; i < pageData.slots.length; ++i) {\n            const moduleInstance = pageData.slots[i];\n            const moduleId = moduleInstance.id;\n            this._moduleList.push({\n                id: moduleInstance.id,\n                typeName: moduleInstance.typeName,\n                dataActions: moduleInstance.dataActions\n            });\n\n            this.requestCache.put(\n                { typeName: MODULE_CACHE_KEY, key: moduleId },\n                {\n                    item: { id: moduleInstance.id, typeName: moduleInstance.typeName }\n                }\n            );\n            this.requestCache.put({ typeName: MODULE_CONFIG_KEY, key: moduleId }, { item: moduleInstance.config });\n            this.requestCache.put({ typeName: MODULE_CONFIG_ERRORS_KEY, key: moduleId }, { item: moduleInstance.configErrors });\n            this.requestCache.put({ typeName: MODULE_DATA_KEY, key: moduleId }, { item: moduleInstance.data });\n            this.requestCache.put({ typeName: MODULE_ACTION_KEY, key: moduleId }, { item: moduleInstance.dataActions });\n            this.requestCache.put({ typeName: MSDYN365_WYSIWYG_DISABLED_PROPS, key: moduleId }, { item: [] });\n            this.requestCache.put({ typeName: MSDYN365_WYSIWYG_CANADDMODULE, key: moduleId }, { item: [] });\n\n            if (resourceManager && !isEditor) {\n                this.requestCache.put(\n                    { typeName: MODULE_RESOURCES_KEY, key: moduleInstance.typeName },\n                    { item: resourceManager.getModuleResources(moduleInstance.typeName, this.requestContext.locale) }\n                );\n            }\n        }\n        // In editor mode, put the resources for all modules for the current locale into the cache\n        if (isEditor && resourceManager && this.requestContext.features.enableAuthoringRemoveAndAddModule) {\n            // tslint:disable-next-line: no-any\n            const bindings = (<any>msdyn365Commerce).getAllModuleBinder();\n            bindings.forEach((moduleBinder: IModuleBinder) => {\n                this.requestCache.put(\n                    { typeName: MODULE_RESOURCES_KEY, key: moduleBinder.name },\n                    { item: resourceManager.getModuleResources(moduleBinder.name, this.requestContext.locale) }\n                );\n            });\n        }\n    }\n\n    /**\n     * Initializes theme modules list that need to be loaded on the client\n     */\n    private _initThemeModulesList(): void {\n        this._themeModulesList = [];\n\n        if (this.requestContext.params.theme) {\n            this._themeModulesList.push(this.requestContext.params.theme);\n            this._themeModulesList.push(getParentModuleName(this.requestContext.params.theme));\n        }\n    }\n}\n"],"sourceRoot":""},"metadata":{},"sourceType":"module"}