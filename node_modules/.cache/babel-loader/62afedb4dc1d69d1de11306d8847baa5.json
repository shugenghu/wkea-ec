{"ast":null,"code":"import _defineProperty from\"@babel/runtime/helpers/esm/defineProperty\";function ownKeys(object,enumerableOnly){var keys=Object.keys(object);if(Object.getOwnPropertySymbols){var symbols=Object.getOwnPropertySymbols(object);if(enumerableOnly)symbols=symbols.filter(function(sym){return Object.getOwnPropertyDescriptor(object,sym).enumerable;});keys.push.apply(keys,symbols);}return keys;}function _objectSpread(target){for(var i=1;i<arguments.length;i++){var source=arguments[i]!=null?arguments[i]:{};if(i%2){ownKeys(Object(source),true).forEach(function(key){_defineProperty(target,key,source[key]);});}else if(Object.getOwnPropertyDescriptors){Object.defineProperties(target,Object.getOwnPropertyDescriptors(source));}else{ownKeys(Object(source)).forEach(function(key){Object.defineProperty(target,key,Object.getOwnPropertyDescriptor(source,key));});}}return target;}import{getUrlSync}from'@msdyn365-commerce/core';/**\r\n * Syncronously creates a product url\r\n * @param product Simple product to get url from\r\n * @param category Category to add to product url\r\n */export function getProductUrlSync(product,ctx,category){const selectedProduct=_objectSpread(_objectSpread({},product),{},{RecordId:product.MasterProductId||product.RecordId});return getProductPageUrlSync(selectedProduct.Name||'',selectedProduct.RecordId,ctx,category);}/**\r\n * Syncronously creates a product detail page url\r\n * @param name Simple product name\r\n * @param recordId Record id of product\r\n */export function getProductPageUrlSync(name,recordId,ctx,category){return getUrlSync('product',ctx,{product:{Name:name||'',RecordId:recordId},category});}","map":{"version":3,"sources":["../../../../src/utilities/Url-builder/product-url-builder.ts"],"names":[],"mappings":"m2BACA,OAAS,UAAT,KAA2C,yBAA3C,CAGA;;;;AAIG,GACH,MAAM,SAAU,CAAA,iBAAV,CAA4B,OAA5B,CAAoD,GAApD,CAAyE,QAAzE,CAAqG,CACvG,KAAM,CAAA,eAAe,gCAAQ,OAAR,MAAiB,QAAQ,CAAE,OAAO,CAAC,eAAR,EAA2B,OAAO,CAAC,QAA9D,EAArB,CAEA,MAAO,CAAA,qBAAqB,CAAC,eAAe,CAAC,IAAhB,EAAwB,EAAzB,CAA6B,eAAe,CAAC,QAA7C,CAAuD,GAAvD,CAA4D,QAA5D,CAA5B,CACH,CAED;;;;AAIG,GACH,MAAM,SAAU,CAAA,qBAAV,CAAgC,IAAhC,CAA8C,QAA9C,CAAgE,GAAhE,CAAqF,QAArF,CAAiH,CACnH,MAAO,CAAA,UAAU,CAAC,SAAD,CAAY,GAAZ,CAAiB,CAC9B,OAAO,CAAE,CAAC,IAAI,CAAE,IAAI,EAAI,EAAf,CAAmB,QAAQ,CAAE,QAA7B,CADqB,CAE9B,QAF8B,CAAjB,CAAjB,CAIH","sourcesContent":["import { CategoryHierarchy } from '@msdyn365-commerce/commerce-entities';\nimport { getUrlSync, IActionContext } from '@msdyn365-commerce/core';\nimport { SimpleProduct } from '@msdyn365-commerce/retail-proxy';\n\n/**\n * Syncronously creates a product url\n * @param product Simple product to get url from\n * @param category Category to add to product url\n */\nexport function getProductUrlSync(product: SimpleProduct, ctx: IActionContext, category?: CategoryHierarchy): string {\n    const selectedProduct = { ...product, RecordId: product.MasterProductId || product.RecordId };\n\n    return getProductPageUrlSync(selectedProduct.Name || '', selectedProduct.RecordId, ctx, category)!;\n}\n\n/**\n * Syncronously creates a product detail page url\n * @param name Simple product name\n * @param recordId Record id of product\n */\nexport function getProductPageUrlSync(name: string, recordId: number, ctx: IActionContext, category?: CategoryHierarchy): string {\n    return getUrlSync('product', ctx, {\n        product: {Name: name || '', RecordId: recordId},\n        category\n    })!;\n}"],"sourceRoot":""},"metadata":{},"sourceType":"module"}