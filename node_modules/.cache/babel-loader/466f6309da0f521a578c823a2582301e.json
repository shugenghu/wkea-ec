{"ast":null,"code":"import\"core-js/modules/es.promise.js\";import{removeDiscountCodesAsync}from'@msdyn365-commerce/retail-proxy/dist/DataActions/CartsDataActions.g';export default async function removeAllPromoCodes(cart,actionContext){if(!cart){return{cart:undefined,status:'FAILED'};}if(cart.Coupons&&cart.Coupons.length>0){const promoCodes=cart.Coupons.map(coupon=>{return coupon.Code||'';});return removeDiscountCodesAsync({callerContext:actionContext},cart.Id,promoCodes).then(newCart=>{return{cart:newCart,status:'SUCCESS'};}).catch(error=>{actionContext.telemetry.warning(error);return{cart:undefined,status:'FAILED'};});}return{cart:cart,status:'SUCCESS'};}","map":{"version":3,"sources":["cart-state/remove-all-promo-codes.ts"],"names":[],"mappings":"sCACA,OAAS,wBAAT,KAAyC,qEAAzC,CAIA,cAAe,eAAe,CAAA,mBAAf,CAAmC,IAAnC,CAAqE,aAArE,CAAkG,CAC7G,GAAI,CAAC,IAAL,CAAW,CACP,MAAO,CAAE,IAAI,CAAE,SAAR,CAAmB,MAAM,CAAE,QAA3B,CAAP,CACH,CAED,GAAI,IAAI,CAAC,OAAL,EAAgB,IAAI,CAAC,OAAL,CAAa,MAAb,CAAsB,CAA1C,CAA6C,CACzC,KAAM,CAAA,UAAU,CAAG,IAAI,CAAC,OAAL,CAAa,GAAb,CAAiB,MAAM,EAAG,CAAG,MAAO,CAAA,MAAM,CAAC,IAAP,EAAe,EAAtB,CAA2B,CAAxD,CAAnB,CAEA,MAAO,CAAA,wBAAwB,CAAC,CAAE,aAAa,CAAE,aAAjB,CAAD,CAAmC,IAAI,CAAC,EAAxC,CAA4C,UAA5C,CAAxB,CACF,IADE,CACG,OAAO,EAAG,CACZ,MAAmC,CAAE,IAAI,CAAE,OAAR,CAAiB,MAAM,CAAE,SAAzB,CAAnC,CACH,CAHE,EAGA,KAHA,CAGM,KAAK,EAAG,CACb,aAAa,CAAC,SAAd,CAAwB,OAAxB,CAAgC,KAAhC,EAEA,MAAmC,CAAE,IAAI,CAAE,SAAR,CAAmB,MAAM,CAAE,QAA3B,CAAnC,CACH,CAPE,CAAP,CAQH,CAED,MAAmC,CAAE,IAAI,CAAE,IAAR,CAAc,MAAM,CAAE,SAAtB,CAAnC,CACH","sourcesContent":["import { IActionContext } from '@msdyn365-commerce/core';\nimport { removeDiscountCodesAsync } from '@msdyn365-commerce/retail-proxy/dist/DataActions/CartsDataActions.g';\nimport { Cart } from '@msdyn365-commerce/retail-proxy/dist/Entities/CommerceTypes.g';\nimport { ICartActionResultWithCart } from './cart-action-result';\n\nexport default async function removeAllPromoCodes(cart: Readonly<Cart | undefined>, actionContext: IActionContext): Promise<ICartActionResultWithCart> {\n    if (!cart) {\n        return { cart: undefined, status: 'FAILED'};\n    }\n\n    if (cart.Coupons && cart.Coupons.length > 0) {\n        const promoCodes = cart.Coupons.map(coupon => { return coupon.Code || ''; });\n\n        return removeDiscountCodesAsync({ callerContext: actionContext }, cart.Id, promoCodes)\n            .then(newCart => {\n                return <ICartActionResultWithCart> { cart: newCart, status: 'SUCCESS' };\n            }).catch(error => {\n                actionContext.telemetry.warning(error);\n\n                return <ICartActionResultWithCart> { cart: undefined, status: 'FAILED' };\n            });\n    }\n\n    return <ICartActionResultWithCart> { cart: cart, status: 'SUCCESS' };\n}"],"sourceRoot":"./src/"},"metadata":{},"sourceType":"module"}