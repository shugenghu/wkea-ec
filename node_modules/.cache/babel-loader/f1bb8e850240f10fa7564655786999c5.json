{"ast":null,"code":"import\"core-js/modules/es.promise.js\";import _defineProperty from\"@babel/runtime/helpers/esm/defineProperty\";function ownKeys(object,enumerableOnly){var keys=Object.keys(object);if(Object.getOwnPropertySymbols){var symbols=Object.getOwnPropertySymbols(object);if(enumerableOnly)symbols=symbols.filter(function(sym){return Object.getOwnPropertyDescriptor(object,sym).enumerable;});keys.push.apply(keys,symbols);}return keys;}function _objectSpread(target){for(var i=1;i<arguments.length;i++){var source=arguments[i]!=null?arguments[i]:{};if(i%2){ownKeys(Object(source),true).forEach(function(key){_defineProperty(target,key,source[key]);});}else if(Object.getOwnPropertyDescriptors){Object.defineProperties(target,Object.getOwnPropertyDescriptors(source));}else{ownKeys(Object(source)).forEach(function(key){Object.defineProperty(target,key,Object.getOwnPropertyDescriptor(source,key));});}}return target;}import{__decorate}from\"tslib\";import{Alert,Heading}from'@msdyn365-commerce-modules/utilities';import{deleteAsync}from'@msdyn365-commerce/retail-proxy/dist/DataActions/ProductListsDataActions.g';import classnames from'classnames';import{observer}from'mobx-react';import*as React from'react';import{OrderTemplateListStatusMessage,OrderTemplateRender}from'./components/';import CreateNewTemplateButtonComponent from'./components/create-order-template';let OrderTemplateList=class OrderTemplateList extends React.Component{constructor(props){super(props);this._onDismiss=()=>{this.setState({isOpen:false});};this._reloadPage=async()=>{window.location.reload();};this._onRemoveFromOrderTemplateList=productListId=>{const{context,data,telemetry,resources}=this.props;const{orderTemplates}=data;if(context&&context.actionContext){const userToken=context.request.user.isAuthenticated&&context.request.user.token;if(userToken&&orderTemplates.result&&orderTemplates.result[0]&&productListId){const orderTemplate=orderTemplates.result.find(p=>p.productList.Id===productListId);if(orderTemplate){deleteAsync({callerContext:context.actionContext},orderTemplate.productList).then().catch(error=>{telemetry.warning('[order-template-list] Unable to delete order template.');telemetry.error(error);this.setState({itemKey:productListId,headerStatusMessage:resources.deleteOrderTemplateFailedText,statusCssString:'danger',messageGlyph:'fas fa-exclamation-triangle',isOpen:true});}).then(this._reloadPage);}else{telemetry.warning('[order-template-list] Failed to delete order template. Order template was not found');}}else{telemetry.warning('[order-template-list] Failed to delete order template.');}}};this.state={itemKey:'',userMessage:'',headerStatusMessage:'',statusCssString:'success',messageGlyph:'fas fa-check',isOpen:false};}async componentDidMount(){this.setState({});}render(){const{className}=this.props.config;const{emptyOrderTemplateText,createNewTemplateButtonText}=this.props.resources;const{orderTemplates}=this.props.data;const orderTemplatesData=orderTemplates&&orderTemplates.result;if(orderTemplates.status==='LOADING'){const errorProps=_objectSpread(_objectSpread({},this.props),{},{OrderTemplateList:{moduleProps:this.props,className:classnames('ms-order-template',className)},status:'LOADING',statusMessage:/*#__PURE__*/React.createElement(OrderTemplateListStatusMessage,{errorType:'LOADING',text:'Loading...'}),heading:/*#__PURE__*/React.createElement(Heading,{className:'ms-order-template__heading',text:this.props.resources.orderTemplateListTitle})});return this.props.renderView(errorProps);}if(!!orderTemplatesData&&orderTemplatesData.length===0){const emptyViewProps=_objectSpread(_objectSpread({},this.props),{},{OrderTemplateList:{moduleProps:this.props,className:classnames('ms-order-template',className)},status:'EMPTY',statusMessage:/*#__PURE__*/React.createElement(OrderTemplateListStatusMessage,{errorType:'EMPTY',text:emptyOrderTemplateText}),heading:/*#__PURE__*/React.createElement(Heading,{className:'ms-order-template__heading',text:this.props.resources.orderTemplateListTitle})});return this.props.renderView(emptyViewProps);}const viewProps=_objectSpread(_objectSpread({},this.props),{},{OrderTemplateList:{moduleProps:this.props,className:classnames('ms-order-template',className)},status:'SUCCESS',heading:/*#__PURE__*/React.createElement(Heading,{className:'ms-order-template__heading',text:this.props.resources.orderTemplateListTitle}),createOrderTemplateButton:/*#__PURE__*/React.createElement(CreateNewTemplateButtonComponent,{context:this.props.context,id:this.props.id,typeName:this.props.typeName,data:{},createOrderTemplateText:createNewTemplateButtonText,onOrderTemplateCreated:this._reloadPage,createOrderTemplateDialogResources:this._generateOrderTemplateNameDialogResources(this.props.resources)}),templateHeaderStatusMessage:this.state.isOpen&&this.state.headerStatusMessage&&/*#__PURE__*/React.createElement(\"div\",{className:'ms-order-template__products-status'},/*#__PURE__*/React.createElement(Alert,{color:this.state.statusCssString,isOpen:this.state.isOpen,toggle:this._onDismiss},/*#__PURE__*/React.createElement(\"span\",null,this.state.headerStatusMessage))),OrderTemplates:{className:'ms-order-template__list-item',tag:'ul'},OrderTemplate:{className:'ms-order-template__tile',tag:'li'},orderTemplates:orderTemplatesData&&this._renderOrderTemplateList(orderTemplatesData)});return this.props.renderView(viewProps);}_generateOrderTemplateNameDialogResources(resources){return{orderTemplateHeaderLabel:resources.createOrderTemplateHeader,orderTemplateTitleLabel:resources.orderTemplateTitle,orderTemplateNameAriaLabel:resources.orderTemplateNameAriaLabel,orderTemplateDescription:resources.createOrderTemplateDescription,defaultOrderTemplateName:resources.defaultOrderTemplateName,orderTemplateButtonLabel:resources.createOrderTemplateButtonText,orderTemplateCancelButtonLabel:resources.cancelNewOrderTemplateCreationButtonText};}_renderOrderTemplateList(orderTemplates){const{context,telemetry}=this.props;const{imageSettings}=this.props.config;return orderTemplates.map((orderTemplate,index)=>{const currentTemplateProps={orderTemplateState:this.state,Id:orderTemplate.productList.Id,name:orderTemplate.productList.Name,orderTemplate:orderTemplate,context:context,imageSettings:imageSettings,removeFromOrderTemplateListText:'remove',addToBagText:this.props.resources.addToBagButtonText,index:index,itemKey:orderTemplate.productList.Id,telemetry:telemetry,moduleId:this.props.id,moduleTypeName:this.props.typeName,handlers:{onRemoveOrderTemplate:this._onRemoveFromOrderTemplateList,onDismiss:this._onDismiss},resources:{closeWindowButtonText:this.props.resources.closeWindowButtonText,addToCartFailureMessage:this.props.resources.addToCartFailureMessage,addToCartSuccessMessage:this.props.resources.addToCartSuccessMessage,addToCartProcessMessage:this.props.resources.addToCartProcessMessage,linesAddedToCartDialogResources:{viewCartButtonText:this.props.resources.viewCartButtonText,orderTemplateCloseButtonText:this.props.resources.orderTemplateCloseButtonText,linesAddedToCartHeaderItemsOneText:this.props.resources.linesAddedToCartHeaderItemsOneText,linesAddedToCartHeaderLinesOneText:this.props.resources.linesAddedToCartHeaderLinesOneText,linesAddedToCartHeaderLinesFormatText:this.props.resources.linesAddedToCartHeaderLinesFormatText,linesAddedToCartHeaderMessageText:this.props.resources.linesAddedToCartHeaderMessageText}}};return OrderTemplateRender(currentTemplateProps);});}};OrderTemplateList=__decorate([observer],OrderTemplateList);export default OrderTemplateList;","map":{"version":3,"sources":["modules/order-template-list/order-template-list.tsx"],"names":[],"mappings":"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","sourcesContent":["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nimport { OrderTemplate } from '@msdyn365-commerce-modules/retail-actions';\nimport { Alert, Heading, IModuleProps, INodeProps } from '@msdyn365-commerce-modules/utilities';\nimport { IOrderTemplateNameDialogResources } from '@msdyn365-commerce/components';\nimport { deleteAsync } from '@msdyn365-commerce/retail-proxy/dist/DataActions/ProductListsDataActions.g';\nimport classnames from 'classnames';\nimport { observer } from 'mobx-react';\nimport * as React from 'react';\nimport { ISingleOrderTemplateProps, ISingleOrderTemplateViewProps, OrderTemplateListStatusMessage, OrderTemplateRender } from './components/';\nimport CreateNewTemplateButtonComponent from './components/create-order-template';\nimport { IOrderTemplateListData } from './order-template-list.data';\nimport { IOrderTemplateListProps, IOrderTemplateListResources } from './order-template-list.props.autogenerated';\n\nexport interface IOrderTemplateActionMessageState {\n    itemKey: string;\n    userMessage: string;\n    statusCssString: string;\n    messageGlyph: string;\n    isOpen: boolean;\n    headerStatusMessage: string;\n}\n\nexport type orderTemplateListStatus = 'LOADING' | 'SUCCESS' | 'FAILED' | 'EMPTY';\n\nexport interface IOrderTemplateListViewProps extends IOrderTemplateListProps<IOrderTemplateListData> {\n    OrderTemplateList: IModuleProps;\n    status?: orderTemplateListStatus;\n    statusMessage?: React.ReactNode;\n    heading?: React.ReactNode;\n    OrderTemplates?: INodeProps;\n    OrderTemplate?: INodeProps;\n    orderTemplates?: ISingleOrderTemplateViewProps[];\n    createOrderTemplateButton?: React.ReactNode;\n    templateHeaderStatusMessage?: React.ReactNode;\n}\n\n/**\n *\n * OrderTemplateList component\n * @extends {React.PureComponent<IOrderTemplateListProps<IOrderTemplateListData>, IOrderTemplateListActionMessageState>}\n */\n@observer\nclass OrderTemplateList extends React.Component<IOrderTemplateListProps<IOrderTemplateListData>, IOrderTemplateActionMessageState> {\n\n    constructor(props: IOrderTemplateListProps<IOrderTemplateListData>) {\n        super(props);\n        this.state = {\n            itemKey: '',\n            userMessage: '',\n            headerStatusMessage: '',\n            statusCssString: 'success',\n            messageGlyph: 'fas fa-check',\n            isOpen: false,\n        };\n    }\n\n    public async componentDidMount(): Promise<void> {\n        this.setState({});\n    }\n\n    public render(): JSX.Element | null {\n        const { className } = this.props.config;\n        const { emptyOrderTemplateText, createNewTemplateButtonText } = this.props.resources;\n        const { orderTemplates } = this.props.data;\n        const orderTemplatesData = orderTemplates && (orderTemplates).result;\n\n        if (orderTemplates.status === 'LOADING') {\n            const errorProps: IOrderTemplateListViewProps = {\n                ...(this.props as IOrderTemplateListProps<IOrderTemplateListData>),\n                OrderTemplateList: {\n                    moduleProps: this.props,\n                    className: classnames('ms-order-template', className),\n                },\n                status: 'LOADING',\n                statusMessage: <OrderTemplateListStatusMessage errorType='LOADING' text='Loading...'/>,\n                heading: (\n                    <Heading\n                        className='ms-order-template__heading'\n                        text={this.props.resources.orderTemplateListTitle}\n                    />\n                ),\n            };\n            return this.props.renderView(errorProps);\n        }\n\n        if (!!orderTemplatesData && orderTemplatesData.length === 0) {\n            // when no order templates are found for customer\n            const emptyViewProps: IOrderTemplateListViewProps = {\n                ...(this.props as IOrderTemplateListProps<IOrderTemplateListData>),\n                OrderTemplateList: {\n                    moduleProps: this.props,\n                    className: classnames('ms-order-template', className),\n                },\n                status: 'EMPTY',\n                statusMessage: <OrderTemplateListStatusMessage errorType='EMPTY' text={ emptyOrderTemplateText }/>,\n                heading: (\n                    <Heading\n                        className='ms-order-template__heading'\n                        text={this.props.resources.orderTemplateListTitle}\n                    />\n                ),\n            };\n\n            return this.props.renderView(emptyViewProps);\n        }\n\n        const viewProps: IOrderTemplateListViewProps = {\n            ...(this.props as IOrderTemplateListProps<IOrderTemplateListData>),\n            OrderTemplateList: {\n                moduleProps: this.props,\n                className: classnames('ms-order-template', className),\n            },\n            status: 'SUCCESS',\n            heading: (\n                <Heading\n                    className='ms-order-template__heading'\n                    text={this.props.resources.orderTemplateListTitle}\n                />\n            ),\n            createOrderTemplateButton: (\n                <CreateNewTemplateButtonComponent\n                    context={this.props.context}\n                    id={this.props.id}\n                    typeName={this.props.typeName}\n                    data={{}}\n                    createOrderTemplateText={createNewTemplateButtonText}\n                    onOrderTemplateCreated={this._reloadPage}\n                    createOrderTemplateDialogResources={this._generateOrderTemplateNameDialogResources(this.props.resources)}\n                />\n            ),\n            templateHeaderStatusMessage: this.state.isOpen && this.state.headerStatusMessage && (\n                <div className='ms-order-template__products-status'>\n                    <Alert color={this.state.statusCssString} isOpen={this.state.isOpen} toggle={this._onDismiss}>\n                        <span>{this.state.headerStatusMessage}</span>\n                    </Alert>\n                </div>\n            ),\n            OrderTemplates: {\n                className: 'ms-order-template__list-item',\n                tag: 'ul',\n            },\n            OrderTemplate: {\n                className: 'ms-order-template__tile',\n                tag: 'li',\n            },\n            orderTemplates: orderTemplatesData && this._renderOrderTemplateList(orderTemplatesData)\n        };\n\n        return this.props.renderView(viewProps) as React.ReactElement;\n    }\n\n    private _generateOrderTemplateNameDialogResources(resources: IOrderTemplateListResources): IOrderTemplateNameDialogResources {\n        return {\n            orderTemplateHeaderLabel: resources.createOrderTemplateHeader,\n            orderTemplateTitleLabel: resources.orderTemplateTitle,\n            orderTemplateNameAriaLabel: resources.orderTemplateNameAriaLabel,\n            orderTemplateDescription: resources.createOrderTemplateDescription,\n\n            defaultOrderTemplateName: resources.defaultOrderTemplateName,\n\n            orderTemplateButtonLabel: resources.createOrderTemplateButtonText,\n            orderTemplateCancelButtonLabel: resources.cancelNewOrderTemplateCreationButtonText\n        };\n    }\n\n    private _renderOrderTemplateList(orderTemplates: OrderTemplate[]): ISingleOrderTemplateViewProps[] {\n        const { context, telemetry } = this.props;\n        const { imageSettings } = this.props.config;\n        return orderTemplates.map((orderTemplate: OrderTemplate, index) => {\n            const currentTemplateProps: ISingleOrderTemplateProps = {\n                orderTemplateState: this.state,\n                Id: orderTemplate.productList.Id,\n                name: orderTemplate.productList.Name,\n                orderTemplate: orderTemplate,\n                context: context,\n                imageSettings: imageSettings,\n                removeFromOrderTemplateListText: 'remove',\n                addToBagText: this.props.resources.addToBagButtonText,\n                index: index,\n                itemKey: orderTemplate.productList.Id,\n                telemetry: telemetry,\n                moduleId: this.props.id,\n                moduleTypeName:  this.props.typeName,\n                handlers: {\n                    onRemoveOrderTemplate: this._onRemoveFromOrderTemplateList,\n                    onDismiss: this._onDismiss,\n                },\n                resources: {\n                    closeWindowButtonText: this.props.resources.closeWindowButtonText,\n                    addToCartFailureMessage: this.props.resources.addToCartFailureMessage,\n                    addToCartSuccessMessage: this.props.resources.addToCartSuccessMessage,\n                    addToCartProcessMessage: this.props.resources.addToCartProcessMessage,\n                    linesAddedToCartDialogResources: {\n                        viewCartButtonText: this.props.resources.viewCartButtonText,\n                        orderTemplateCloseButtonText: this.props.resources.orderTemplateCloseButtonText,\n                        linesAddedToCartHeaderItemsOneText: this.props.resources.linesAddedToCartHeaderItemsOneText,\n                        linesAddedToCartHeaderLinesOneText: this.props.resources.linesAddedToCartHeaderLinesOneText,\n                        linesAddedToCartHeaderLinesFormatText: this.props.resources.linesAddedToCartHeaderLinesFormatText,\n                        linesAddedToCartHeaderMessageText: this.props.resources.linesAddedToCartHeaderMessageText\n                    }\n                }\n            };\n\n            return (\n                OrderTemplateRender(currentTemplateProps)!\n            );\n        });\n    }\n\n    private _onDismiss = () => {\n        this.setState({\n            isOpen: false\n        });\n    }\n\n    private _reloadPage = async () => {\n        window.location.reload();\n    }\n\n    private _onRemoveFromOrderTemplateList = (productListId: string): void | undefined => {\n        const { context, data, telemetry, resources } = this.props;\n        const { orderTemplates } = data;\n\n        if (context && context.actionContext) {\n            const userToken = context.request.user.isAuthenticated && context.request.user.token;\n            if (userToken && orderTemplates.result && orderTemplates.result[0] && productListId) {\n                const orderTemplate = orderTemplates.result.find(p => p.productList.Id === productListId);\n                if (orderTemplate) {\n                    deleteAsync({ callerContext: context.actionContext }, orderTemplate.productList)\n                    .then()\n                    .catch((error: string) => {\n                            telemetry.warning('[order-template-list] Unable to delete order template.');\n                            telemetry.error(error);\n                            this.setState({\n                                itemKey: productListId,\n                                headerStatusMessage: resources.deleteOrderTemplateFailedText,\n                                statusCssString: 'danger',\n                                messageGlyph: 'fas fa-exclamation-triangle',\n                                isOpen: true\n                            });\n                    }).then(this._reloadPage);\n                } else {\n                telemetry.warning('[order-template-list] Failed to delete order template. Order template was not found');\n                }\n            } else {\n                    telemetry.warning('[order-template-list] Failed to delete order template.');\n            }\n        }\n    }\n\n}\n\nexport default OrderTemplateList;\n"],"sourceRoot":"./src/"},"metadata":{},"sourceType":"module"}