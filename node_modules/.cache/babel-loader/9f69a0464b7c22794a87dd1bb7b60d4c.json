{"ast":null,"code":"import\"core-js/modules/es.promise.js\";import{__decorate}from\"tslib\";import{action,computed,observable}from'mobx';/**\r\n * Abstract instance of IStoreSelectorStateManager with base implementation\r\n * of everything except the geoLocate function\r\n */export class BaseStoreSelectorStateManager{constructor(){this.listMapViewState={displayList:true,displayMap:false};}get isDialogOpen(){return this._context!==undefined;}get context(){return this._context;}async toggleListMapViewState(){this.listMapViewState={displayList:!this.listMapViewState.displayList,displayMap:!this.listMapViewState.displayMap};}async setOrgUnitStoreInformation(input){this._context=input;}async setSelectedStoreLocationId(storeId){this.selectedStoreLocationId=storeId;}async setPreferredStoreLocationId(storeId){this.preferredStoreLocationId=storeId;}async openDialog(input){if(this._context){throw new Error('Dialog is already opened');}this._context=input;}async closeDialog(){this._context=undefined;}}__decorate([computed],BaseStoreSelectorStateManager.prototype,\"isDialogOpen\",null);__decorate([observable],BaseStoreSelectorStateManager.prototype,\"isMapApiLoaded\",void 0);__decorate([observable],BaseStoreSelectorStateManager.prototype,\"selectedStoreLocationId\",void 0);__decorate([observable],BaseStoreSelectorStateManager.prototype,\"preferredStoreLocationId\",void 0);__decorate([observable],BaseStoreSelectorStateManager.prototype,\"listMapViewState\",void 0);__decorate([observable],BaseStoreSelectorStateManager.prototype,\"_context\",void 0);__decorate([computed],BaseStoreSelectorStateManager.prototype,\"context\",null);__decorate([action],BaseStoreSelectorStateManager.prototype,\"toggleListMapViewState\",null);__decorate([action],BaseStoreSelectorStateManager.prototype,\"setOrgUnitStoreInformation\",null);__decorate([action],BaseStoreSelectorStateManager.prototype,\"setSelectedStoreLocationId\",null);__decorate([action],BaseStoreSelectorStateManager.prototype,\"setPreferredStoreLocationId\",null);__decorate([action],BaseStoreSelectorStateManager.prototype,\"openDialog\",null);__decorate([action],BaseStoreSelectorStateManager.prototype,\"closeDialog\",null);","map":{"version":3,"sources":["store-selector-state-manager/base-store-selector-state-manager.ts"],"names":[],"mappings":"oEAAA,OAAS,MAAT,CAAiB,QAAjB,CAA2B,UAA3B,KAA6C,MAA7C,CAKA;;;AAGG,GACH,MAAM,MAAgB,CAAA,6BAA6B,CAAnD,WAAA,EAAA,CAQuB,KAAA,gBAAA,CAAsC,CAAE,WAAW,CAAE,IAAf,CAAqB,UAAU,CAAE,KAAjC,CAAtC,CA+CtB,CAtDa,GAAW,CAAA,YAAX,EAAuB,CAC7B,MAAO,MAAK,QAAL,GAAkB,SAAzB,CACH,CAQS,GAAW,CAAA,OAAX,EAAkB,CACxB,MAAO,MAAK,QAAZ,CACH,CAOM,KAAM,CAAA,sBAAN,EAA4B,CAC/B,KAAK,gBAAL,CAAwB,CACpB,WAAW,CAAE,CAAC,KAAK,gBAAL,CAAsB,WADhB,CAEpB,UAAU,CAAE,CAAC,KAAK,gBAAL,CAAsB,UAFf,CAAxB,CAIH,CAGM,KAAM,CAAA,0BAAN,CAAiC,KAAjC,CAAmE,CACtE,KAAK,QAAL,CAAgB,KAAhB,CACH,CAGM,KAAM,CAAA,0BAAN,CAAiC,OAAjC,CAA4D,CAC/D,KAAK,uBAAL,CAA+B,OAA/B,CACH,CAGM,KAAM,CAAA,2BAAN,CAAkC,OAAlC,CAA6D,CAChE,KAAK,wBAAL,CAAgC,OAAhC,CACH,CAGM,KAAM,CAAA,UAAN,CAAiB,KAAjB,CAAmD,CACtD,GAAI,KAAK,QAAT,CAAmB,CACf,KAAM,IAAI,CAAA,KAAJ,CAAU,0BAAV,CAAN,CACH,CAED,KAAK,QAAL,CAAgB,KAAhB,CACH,CAGM,KAAM,CAAA,WAAN,EAAiB,CACpB,KAAK,QAAL,CAAgB,SAAhB,CACH,CAtD8C,CACrC,UAAA,CAAA,CAAT,QAAS,CAAA,C,uCAAA,C,cAAA,CAET,IAFS,CAAA,CAIE,UAAA,CAAA,CAAX,UAAW,CAAA,C,uCAAA,C,gBAAA,C,IAAgC,EAAhC,CAAA,CACA,UAAA,CAAA,CAAX,UAAW,CAAA,C,uCAAA,C,yBAAA,C,IAAwC,EAAxC,CAAA,CACA,UAAA,CAAA,CAAX,UAAW,CAAA,C,uCAAA,C,0BAAA,C,IAAyC,EAAzC,CAAA,CACA,UAAA,CAAA,CAAX,UAAW,CAAA,C,uCAAA,C,kBAAA,C,IAAsF,EAAtF,CAAA,CACA,UAAA,CAAA,CAAX,UAAW,CAAA,C,uCAAA,C,UAAA,C,IAAiD,EAAjD,CAAA,CAEF,UAAA,CAAA,CAAT,QAAS,CAAA,C,uCAAA,C,SAAA,CAET,IAFS,CAAA,CASV,UAAA,CAAA,CADC,MACD,CAAA,C,uCAAA,C,wBAAA,CAKC,IALD,CAAA,CAQA,UAAA,CAAA,CADC,MACD,CAAA,C,uCAAA,C,4BAAA,CAEC,IAFD,CAAA,CAKA,UAAA,CAAA,CADC,MACD,CAAA,C,uCAAA,C,4BAAA,CAEC,IAFD,CAAA,CAKA,UAAA,CAAA,CADC,MACD,CAAA,C,uCAAA,C,6BAAA,CAEC,IAFD,CAAA,CAKA,UAAA,CAAA,CADC,MACD,CAAA,C,uCAAA,C,YAAA,CAMC,IAND,CAAA,CASA,UAAA,CAAA,CADC,MACD,CAAA,C,uCAAA,C,aAAA,CAEC,IAFD,CAAA","sourcesContent":["import { action, computed, observable } from 'mobx';\n\nimport { IActionContext } from '@msdyn365-commerce/core';\nimport { IListMapViewState, ILoadMapApiInput, IStoreSelectionStateContext, IStoreSelectorLocation, IStoreSelectorStateManager } from './i-store-selection-state-manager';\n\n/**\n * Abstract instance of IStoreSelectorStateManager with base implementation\n * of everything except the geoLocate function\n */\nexport abstract class BaseStoreSelectorStateManager implements IStoreSelectorStateManager {\n    @computed public get isDialogOpen(): Readonly<boolean> {\n        return this._context !== undefined;\n    }\n\n    @observable public isMapApiLoaded?: boolean;\n    @observable public selectedStoreLocationId?: string;\n    @observable public preferredStoreLocationId?: string;\n    @observable public listMapViewState: IListMapViewState = { displayList: true, displayMap: false };\n    @observable protected _context?: IStoreSelectionStateContext;\n\n    @computed public get context(): Readonly<IStoreSelectionStateContext | undefined> {\n        return this._context;\n    }\n\n    public abstract geoLocate(searchTerm: string, actionContext: IActionContext): Promise<IStoreSelectorLocation | undefined>;\n\n    public abstract loadMapApi(input: ILoadMapApiInput): Promise<void>;\n\n    @action\n    public async toggleListMapViewState(): Promise<void> {\n        this.listMapViewState = {\n            displayList: !this.listMapViewState.displayList,\n            displayMap: !this.listMapViewState.displayMap\n        };\n    }\n\n    @action\n    public async setOrgUnitStoreInformation(input: IStoreSelectionStateContext): Promise<void> {\n        this._context = input;\n    }\n\n    @action\n    public async setSelectedStoreLocationId(storeId: string | undefined): Promise<void> {\n        this.selectedStoreLocationId = storeId;\n    }\n\n    @action\n    public async setPreferredStoreLocationId(storeId: string | undefined): Promise<void> {\n        this.preferredStoreLocationId = storeId;\n    }\n\n    @action\n    public async openDialog(input: IStoreSelectionStateContext): Promise<void> {\n        if (this._context) {\n            throw new Error('Dialog is already opened');\n        }\n\n        this._context = input;\n    }\n\n    @action\n    public async closeDialog(): Promise<void> {\n        this._context = undefined;\n    }\n}"],"sourceRoot":"./src/"},"metadata":{},"sourceType":"module"}