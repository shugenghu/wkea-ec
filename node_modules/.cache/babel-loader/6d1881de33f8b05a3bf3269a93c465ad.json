{"ast":null,"code":"/*!\r\n * Copyright (c) Microsoft Corporation.\r\n * All rights reserved. See LICENSE in the project root for license information.\r\n */import*as React from'react';export var CoreContext=/*#__PURE__*/React.createContext({actionContext:{},request:{},telemetry:{},// @ts-ignore\ninternalTelemetry:{},cultureFormatter:{},app:{}});","map":{"version":3,"sources":["../../../src/models/core-context.ts"],"names":[],"mappings":"AAAA;;;AAGG,GAGH,MAAO,GAAK,CAAA,KAAZ,KAAuB,OAAvB,CAGA,MAAO,IAAM,CAAA,WAAW,cAAG,KAAK,CAAC,aAAN,CAAkC,CACzD,aAAa,CAAkB,EAD0B,CAEzD,OAAO,CAAmB,EAF+B,CAGzD,SAAS,CAAc,EAHkC,CAIzD;AACA,iBAAiB,CAAsB,EALkB,CAMzD,gBAAgB,CAAyB,EANgB,CAOzD,GAAG,CAAE,EAPoD,CAAlC,CAApB","sourcesContent":["/*!\n * Copyright (c) Microsoft Corporation.\n * All rights reserved. See LICENSE in the project root for license information.\n */\n\nimport { IInternalTelemetry, ITelemetry } from '@msdyn365-commerce/telemetry-internal';\nimport * as React from 'react';\nimport { IActionContext, ICoreContext, ICultureInfoFormatter, IRequestContext } from '../interfaces';\n\nexport const CoreContext = React.createContext<ICoreContext>({\n    actionContext: <IActionContext>{},\n    request: <IRequestContext>{},\n    telemetry: <ITelemetry>{},\n    // @ts-ignore\n    internalTelemetry: <IInternalTelemetry>{},\n    cultureFormatter: <ICultureInfoFormatter>{},\n    app: {}\n});\n"],"sourceRoot":""},"metadata":{},"sourceType":"module"}