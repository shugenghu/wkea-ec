{"ast":null,"code":"import{DataServiceQuery}from'../DataServiceQuery';import{SalesOrderClass,ReceiptClass,FulfillmentLineClass,SalesInvoiceClass,OrderInvoiceClass,SalesLineClass,PickingListClass,PackingSlipDataClass}from'../Entities/CommerceModels.g';import{executeAction}from'../retail-action';function salesOrdersQuery(id){var key=id?{Id:id}:null;return new DataServiceQuery(\"SalesOrders\",\"SalesOrder\",SalesOrderClass,key);}export function createCreateInput(entity){return salesOrdersQuery().create(entity);}export function createSalesOrderAsync(context,entity){var request=createCreateInput(entity);return executeAction(request,context);}export function createUpdateInput(entity){return salesOrdersQuery(entity.Id).update(entity);}export function updateAsync(context,entity){var request=createUpdateInput(entity);return executeAction(request,context);}export function createDeleteAsync(entity){return salesOrdersQuery(entity.Id)[\"delete\"]();}export function deleteAsync(context,entity){var request=createDeleteAsync(entity);return executeAction(request,context);}export function createReadAsync(id){return salesOrdersQuery(id).read();}export function readAsync(context,id){var request=createReadAsync(id);return executeAction(request,context);}export function createReadAllAsync(queryResultSettings){return salesOrdersQuery().resultSettings(queryResultSettings).read();}export function readAllAsync(context){var request=createReadAllAsync(context.queryResultSettings);return executeAction(request,context);}export function createSearchSalesTransactionsByReceiptIdInput(queryResultSettings,receiptId){var query=salesOrdersQuery().resultSettings(queryResultSettings);return query.createDataServiceRequestForOperation('SearchSalesTransactionsByReceiptId',true,SalesOrderClass,'true',{bypassCache:'none',returnEntity:'SalesOrder'},{receiptId:receiptId});}export function searchSalesTransactionsByReceiptIdAsync(context,receiptId){var request=createSearchSalesTransactionsByReceiptIdInput(context.queryResultSettings,receiptId);return executeAction(request,context);}export function createSearchInput(queryResultSettings,salesOrderSearchCriteria){var query=salesOrdersQuery().resultSettings(queryResultSettings);return query.createDataServiceRequestForOperation('Search',true,SalesOrderClass,'true',{bypassCache:'none',returnEntity:'SalesOrder'},{salesOrderSearchCriteria:salesOrderSearchCriteria});}export function searchAsync(context,salesOrderSearchCriteria){var request=createSearchInput(context.queryResultSettings,salesOrderSearchCriteria);return executeAction(request,context);}export function createSearchOrdersInput(queryResultSettings,orderSearchCriteria){var query=salesOrdersQuery().resultSettings(queryResultSettings);return query.createDataServiceRequestForOperation('SearchOrders',true,SalesOrderClass,'true',{bypassCache:'none',returnEntity:'SalesOrder'},{orderSearchCriteria:orderSearchCriteria});}export function searchOrdersAsync(context,orderSearchCriteria){var request=createSearchOrdersInput(context.queryResultSettings,orderSearchCriteria);return executeAction(request,context);}export function createGetReceiptsInput(queryResultSettings,id,receiptRetrievalCriteria){var query=salesOrdersQuery(id).resultSettings(queryResultSettings);return query.createDataServiceRequestForOperation('GetReceipts',true,ReceiptClass,'true',{bypassCache:'none',returnEntity:'Receipt'},{receiptRetrievalCriteria:receiptRetrievalCriteria});}export function getReceiptsAsync(context,id,receiptRetrievalCriteria){var request=createGetReceiptsInput(context.queryResultSettings,id,receiptRetrievalCriteria);return executeAction(request,context);}export function createSendReceiptInput(searchCriteria,recipientAddresses){var query=salesOrdersQuery();return query.createDataServiceRequestForOperation('SendReceipt',true,'','',{bypassCache:'get',returnEntity:''},{searchCriteria:searchCriteria,recipientAddresses:recipientAddresses});}export function sendReceiptAsync(context,searchCriteria,recipientAddresses){var request=createSendReceiptInput(searchCriteria,recipientAddresses);return executeAction(request,context);}export function createGetGiftReceiptsInput(queryResultSettings,id,salesLineNumbers,receiptRetrievalCriteria){var query=salesOrdersQuery(id).resultSettings(queryResultSettings);return query.createDataServiceRequestForOperation('GetGiftReceipts',true,ReceiptClass,'true',{bypassCache:'none',returnEntity:'Receipt'},{SalesLineNumbers:salesLineNumbers,receiptRetrievalCriteria:receiptRetrievalCriteria});}export function getGiftReceiptsAsync(context,id,salesLineNumbers,receiptRetrievalCriteria){var request=createGetGiftReceiptsInput(context.queryResultSettings,id,salesLineNumbers,receiptRetrievalCriteria);return executeAction(request,context);}export function createGetByReceiptIdInput(queryResultSettings,receiptId,orderStoreNumber,orderTerminalId){var query=salesOrdersQuery().resultSettings(queryResultSettings);return query.createDataServiceRequestForOperation('GetByReceiptId',true,SalesOrderClass,'true',{bypassCache:'none',returnEntity:'SalesOrder'},{receiptId:receiptId,orderStoreNumber:orderStoreNumber,orderTerminalId:orderTerminalId});}export function getByReceiptIdAsync(context,receiptId,orderStoreNumber,orderTerminalId){var request=createGetByReceiptIdInput(context.queryResultSettings,receiptId,orderStoreNumber,orderTerminalId);return executeAction(request,context);}export function createGetSalesOrderDetailsByTransactionIdInput(transactionId,searchLocationValue){var query=salesOrdersQuery();return query.createDataServiceRequestForOperation('GetSalesOrderDetailsByTransactionId',false,SalesOrderClass,'false',{bypassCache:'none',returnEntity:'SalesOrder'},{transactionId:transactionId,searchLocationValue:searchLocationValue});}export function getSalesOrderDetailsByTransactionIdAsync(context,transactionId,searchLocationValue){var request=createGetSalesOrderDetailsByTransactionIdInput(transactionId,searchLocationValue);return executeAction(request,context);}export function createGetSalesOrderDetailsBySalesIdInput(salesId){var query=salesOrdersQuery();return query.createDataServiceRequestForOperation('GetSalesOrderDetailsBySalesId',false,SalesOrderClass,'false',{bypassCache:'none',returnEntity:'SalesOrder'},{salesId:salesId});}export function getSalesOrderDetailsBySalesIdAsync(context,salesId){var request=createGetSalesOrderDetailsBySalesIdInput(salesId);return executeAction(request,context);}export function createGetSalesOrderDetailsByQuotationIdInput(quotationId){var query=salesOrdersQuery();return query.createDataServiceRequestForOperation('GetSalesOrderDetailsByQuotationId',false,SalesOrderClass,'false',{bypassCache:'none',returnEntity:'SalesOrder'},{quotationId:quotationId});}export function getSalesOrderDetailsByQuotationIdAsync(context,quotationId){var request=createGetSalesOrderDetailsByQuotationIdInput(quotationId);return executeAction(request,context);}export function createShipFulfillmentLinesInput(shipFulfillmentLines){var query=salesOrdersQuery();return query.createDataServiceRequestForOperation('ShipFulfillmentLines',true,'','',{bypassCache:'get',returnEntity:''},{ShipFulfillmentLines:shipFulfillmentLines});}export function shipFulfillmentLinesAsync(context,shipFulfillmentLines){var request=createShipFulfillmentLinesInput(shipFulfillmentLines);return executeAction(request,context);}export function createAcceptFulfillmentLinesInput(fulfillmentLineParameter){var query=salesOrdersQuery();return query.createDataServiceRequestForOperation('AcceptFulfillmentLines',true,'','',{bypassCache:'get',returnEntity:''},{FulfillmentLineParameter:fulfillmentLineParameter});}export function acceptFulfillmentLinesAsync(context,fulfillmentLineParameter){var request=createAcceptFulfillmentLinesInput(fulfillmentLineParameter);return executeAction(request,context);}export function createPickFulfillmentLinesInput(fulfillmentLineParameter){var query=salesOrdersQuery();return query.createDataServiceRequestForOperation('PickFulfillmentLines',true,'','',{bypassCache:'get',returnEntity:''},{FulfillmentLineParameter:fulfillmentLineParameter});}export function pickFulfillmentLinesAsync(context,fulfillmentLineParameter){var request=createPickFulfillmentLinesInput(fulfillmentLineParameter);return executeAction(request,context);}export function createPackFulfillmentLinesInput(fulfillmentLineParameter){var query=salesOrdersQuery();return query.createDataServiceRequestForOperation('PackFulfillmentLines',true,'','',{bypassCache:'get',returnEntity:''},{FulfillmentLineParameter:fulfillmentLineParameter});}export function packFulfillmentLinesAsync(context,fulfillmentLineParameter){var request=createPackFulfillmentLinesInput(fulfillmentLineParameter);return executeAction(request,context);}export function createMarkFulfillmentLinesAsPackedInput(fulfillmentLineParameter){var query=salesOrdersQuery();return query.createDataServiceRequestForOperation('MarkFulfillmentLinesAsPacked',true,'','false',{bypassCache:'get',returnEntity:''},{FulfillmentLineParameter:fulfillmentLineParameter});}export function markFulfillmentLinesAsPackedAsync(context,fulfillmentLineParameter){var request=createMarkFulfillmentLinesAsPackedInput(fulfillmentLineParameter);return executeAction(request,context);}export function createMarkAsPickedInput(fulfillmentLineParameter){var query=salesOrdersQuery();return query.createDataServiceRequestForOperation('MarkAsPicked',true,'','',{bypassCache:'get',returnEntity:''},{FulfillmentLineParameter:fulfillmentLineParameter});}export function markAsPickedAsync(context,fulfillmentLineParameter){var request=createMarkAsPickedInput(fulfillmentLineParameter);return executeAction(request,context);}export function createGetFulfillmentPickingListsInput(queryResultSettings,pickingListFulfillmentLine,hardwareProfileId){var query=salesOrdersQuery().resultSettings(queryResultSettings);return query.createDataServiceRequestForOperation('GetFulfillmentPickingLists',true,ReceiptClass,'true',{bypassCache:'none',returnEntity:'Receipt'},{pickingListFulfillmentLine:pickingListFulfillmentLine,hardwareProfileId:hardwareProfileId});}export function getFulfillmentPickingListsAsync(context,pickingListFulfillmentLine,hardwareProfileId){var request=createGetFulfillmentPickingListsInput(context.queryResultSettings,pickingListFulfillmentLine,hardwareProfileId);return executeAction(request,context);}export function createGetFulfillmentLinesInput(queryResultSettings,fulfillmentLineSearchCriteria){var query=salesOrdersQuery().resultSettings(queryResultSettings);return query.createDataServiceRequestForOperation('GetFulfillmentLines',true,FulfillmentLineClass,'true',{bypassCache:'none',returnEntity:'FulfillmentLine'},{fulfillmentLineSearchCriteria:fulfillmentLineSearchCriteria});}export function getFulfillmentLinesAsync(context,fulfillmentLineSearchCriteria){var request=createGetFulfillmentLinesInput(context.queryResultSettings,fulfillmentLineSearchCriteria);return executeAction(request,context);}export function createGetFulfillmentPackingSlipsInput(queryResultSettings,packFulfillmentLines,hardwareProfileId){var query=salesOrdersQuery().resultSettings(queryResultSettings);return query.createDataServiceRequestForOperation('GetFulfillmentPackingSlips',true,ReceiptClass,'true',{bypassCache:'none',returnEntity:'Receipt'},{packFulfillmentLines:packFulfillmentLines,hardwareProfileId:hardwareProfileId});}export function getFulfillmentPackingSlipsAsync(context,packFulfillmentLines,hardwareProfileId){var request=createGetFulfillmentPackingSlipsInput(context.queryResultSettings,packFulfillmentLines,hardwareProfileId);return executeAction(request,context);}export function createGetFulfillmentPackingSlipsByIdInput(queryResultSettings,salesId,packingSlipId,hardwareProfileId){var query=salesOrdersQuery().resultSettings(queryResultSettings);return query.createDataServiceRequestForOperation('GetFulfillmentPackingSlipsById',true,ReceiptClass,'true',{bypassCache:'none',returnEntity:'Receipt'},{salesId:salesId,PackingSlipId:packingSlipId,hardwareProfileId:hardwareProfileId});}export function getFulfillmentPackingSlipsByIdAsync(context,salesId,packingSlipId,hardwareProfileId){var request=createGetFulfillmentPackingSlipsByIdInput(context.queryResultSettings,salesId,packingSlipId,hardwareProfileId);return executeAction(request,context);}export function createRejectFulfillmentLinesInput(rejectFulfillmentLines){var query=salesOrdersQuery();return query.createDataServiceRequestForOperation('RejectFulfillmentLines',true,'','',{bypassCache:'get',returnEntity:''},{RejectFulfillmentLines:rejectFulfillmentLines});}export function rejectFulfillmentLinesAsync(context,rejectFulfillmentLines){var request=createRejectFulfillmentLinesInput(rejectFulfillmentLines);return executeAction(request,context);}export function createGetInvoicesBySalesIdInput(queryResultSettings,salesId){var query=salesOrdersQuery().resultSettings(queryResultSettings);return query.createDataServiceRequestForOperation('GetInvoicesBySalesId',true,SalesInvoiceClass,'true',{bypassCache:'none',returnEntity:'SalesInvoice'},{salesId:salesId});}export function getInvoicesBySalesIdAsync(context,salesId){var request=createGetInvoicesBySalesIdInput(context.queryResultSettings,salesId);return executeAction(request,context);}export function createGetOrderInvoicesInput(queryResultSettings,customerId){var query=salesOrdersQuery().resultSettings(queryResultSettings);return query.createDataServiceRequestForOperation('GetOrderInvoices',true,OrderInvoiceClass,'true',{bypassCache:'none',returnEntity:'OrderInvoice'},{customerId:customerId});}export function getOrderInvoicesAsync(context,customerId){var request=createGetOrderInvoicesInput(context.queryResultSettings,customerId);return executeAction(request,context);}export function createGetInvoicesInput(queryResultSettings,invoiceSearchCriteria){var query=salesOrdersQuery().resultSettings(queryResultSettings);return query.createDataServiceRequestForOperation('GetInvoices',true,OrderInvoiceClass,'true',{bypassCache:'none',returnEntity:'OrderInvoice'},{invoiceSearchCriteria:invoiceSearchCriteria});}export function getInvoicesAsync(context,invoiceSearchCriteria){var request=createGetInvoicesInput(context.queryResultSettings,invoiceSearchCriteria);return executeAction(request,context);}export function createGetInvoicedSalesLinesBySalesIdsInput(queryResultSettings,salesIds){var query=salesOrdersQuery().resultSettings(queryResultSettings);return query.createDataServiceRequestForOperation('GetInvoicedSalesLinesBySalesIds',true,SalesLineClass,'true',{bypassCache:'none',returnEntity:'SalesLine'},{salesIds:salesIds});}export function getInvoicedSalesLinesBySalesIdsAsync(context,salesIds){var request=createGetInvoicedSalesLinesBySalesIdsInput(context.queryResultSettings,salesIds);return executeAction(request,context);}export function createCreatePickingListInput(salesId){var query=salesOrdersQuery();return query.createDataServiceRequestForOperation('CreatePickingList',true,'','',{bypassCache:'get',returnEntity:''},{salesId:salesId});}export function createPickingListAsync(context,salesId){var request=createCreatePickingListInput(salesId);return executeAction(request,context);}export function createCreatePickingListForItemsInput(salesId,pickAndPackSalesLineParameters){var query=salesOrdersQuery();return query.createDataServiceRequestForOperation('CreatePickingListForItems',true,'','false',{bypassCache:'get',returnEntity:''},{salesId:salesId,pickAndPackSalesLineParameters:pickAndPackSalesLineParameters});}export function createPickingListForItemsAsync(context,salesId,pickAndPackSalesLineParameters){var request=createCreatePickingListForItemsInput(salesId,pickAndPackSalesLineParameters);return executeAction(request,context);}export function createGetPickingListsInput(queryResultSettings,id){var query=salesOrdersQuery(id).resultSettings(queryResultSettings);return query.createDataServiceRequestForOperation('GetPickingLists',false,PickingListClass,'true',{bypassCache:'none',returnEntity:'PickingList'},{});}export function getPickingListsAsync(context,id){var request=createGetPickingListsInput(context.queryResultSettings,id);return executeAction(request,context);}export function createCreatePackingSlipInput(salesId){var query=salesOrdersQuery();return query.createDataServiceRequestForOperation('CreatePackingSlip',true,'','',{bypassCache:'get',returnEntity:''},{salesId:salesId});}export function createPackingSlipAsync(context,salesId){var request=createCreatePackingSlipInput(salesId);return executeAction(request,context);}export function createGetPackingSlipsDataInput(queryResultSettings,salesId){var query=salesOrdersQuery().resultSettings(queryResultSettings);return query.createDataServiceRequestForOperation('GetPackingSlipsData',false,PackingSlipDataClass,'true',{bypassCache:'none',returnEntity:'PackingSlipData'},{salesId:salesId});}export function getPackingSlipsDataAsync(context,salesId){var request=createGetPackingSlipsDataInput(context.queryResultSettings,salesId);return executeAction(request,context);}","map":{"version":3,"sources":["../../src/DataActions/SalesOrdersDataActions.g.ts"],"names":[],"mappings":"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","sourcesContent":["    // <auto-generated />\n    import { AsyncResult } from '../async-result';\n    import { DataServiceQuery } from '../DataServiceQuery';\n    import { SalesOrder, SalesOrderSearchCriteria, OrderSearchCriteria, ReceiptRetrievalCriteria, Receipt, SearchReceiptCriteria, ElectronicAddress, ShipFulfillmentLine, FulfillmentLineParameter, FulfillmentLineSearchCriteria, FulfillmentLine, RejectFulfillmentLine, SalesInvoice, OrderInvoice, InvoiceSearchCriteria, SalesLine, PickAndPackSalesLineParameter, PickingList, PackingSlipData } from '../Entities/CommerceTypes.g';\n    import { SalesOrderClass, ReceiptClass, FulfillmentLineClass, SalesInvoiceClass, OrderInvoiceClass, SalesLineClass, PickingListClass, PackingSlipDataClass } from '../Entities/CommerceModels.g';\n    import { IContext, IDataServiceRequest, IQueryResultSettings, NullResult } from '../Interfaces';\n    import { executeAction } from '../retail-action';\n    \n    \n    function salesOrdersQuery(id?: string): DataServiceQuery {\n      var key = (id) ? { Id: id } : null;\n      return new DataServiceQuery(\"SalesOrders\", \"SalesOrder\", SalesOrderClass, key);\n    }\n    \n    export function createCreateInput(entity: SalesOrder): IDataServiceRequest {\n        return salesOrdersQuery().create(entity);\n    }\n    export function createSalesOrderAsync(context: IContext, entity: SalesOrder): AsyncResult<SalesOrder> {\n        const request = createCreateInput(entity, );\n        return executeAction<SalesOrder>(request, context);\n    }\n    export function createUpdateInput(entity: SalesOrder): IDataServiceRequest {\n        return salesOrdersQuery(entity.Id).update(entity);\n    }\n    export function updateAsync(context: IContext, entity: SalesOrder): AsyncResult<SalesOrder> {\n        const request = createUpdateInput(entity, );\n        return executeAction<SalesOrder>(request, context);\n    }\n    export function createDeleteAsync(entity: SalesOrder): IDataServiceRequest {\n        return salesOrdersQuery(entity.Id).delete();\n    }\n    export function deleteAsync(context: IContext, entity: SalesOrder): AsyncResult<NullResult> {\n        const request = createDeleteAsync(entity, );\n        return executeAction<NullResult>(request, context);\n    }\n    export function createReadAsync(id: string): IDataServiceRequest {\n        return salesOrdersQuery(id).read();\n    }\n    export function readAsync(context: IContext, id: string): AsyncResult<SalesOrder> {\n        const request = createReadAsync(id, );\n        return executeAction<SalesOrder>(request, context);\n    }\n    export function createReadAllAsync(queryResultSettings: IQueryResultSettings): IDataServiceRequest {\n        return salesOrdersQuery().resultSettings(queryResultSettings).read();\n    }\n    export function readAllAsync(context: IContext): AsyncResult<SalesOrder[]> {\n        const request = createReadAllAsync(context.queryResultSettings, );\n        return executeAction<SalesOrder[]>(request, context);\n    }\n    \n    export function createSearchSalesTransactionsByReceiptIdInput(queryResultSettings: IQueryResultSettings, receiptId: string | null): IDataServiceRequest {      \n        const query = salesOrdersQuery().resultSettings(queryResultSettings);\n        return query.createDataServiceRequestForOperation('SearchSalesTransactionsByReceiptId', true, SalesOrderClass, 'true', { bypassCache: 'none', returnEntity: 'SalesOrder'}, {receiptId: receiptId });\n    }    \n    \n    export function searchSalesTransactionsByReceiptIdAsync(context: IContext, receiptId: string | null):AsyncResult<SalesOrder[]> {\n        const request = createSearchSalesTransactionsByReceiptIdInput(context.queryResultSettings, receiptId, );\n        return executeAction<SalesOrder[]>(request, context);\n    }          \n          \n    export function createSearchInput(queryResultSettings: IQueryResultSettings, salesOrderSearchCriteria: SalesOrderSearchCriteria | null): IDataServiceRequest {      \n        const query = salesOrdersQuery().resultSettings(queryResultSettings);\n        return query.createDataServiceRequestForOperation('Search', true, SalesOrderClass, 'true', { bypassCache: 'none', returnEntity: 'SalesOrder'}, {salesOrderSearchCriteria: salesOrderSearchCriteria });\n    }    \n    \n    export function searchAsync(context: IContext, salesOrderSearchCriteria: SalesOrderSearchCriteria | null):AsyncResult<SalesOrder[]> {\n        const request = createSearchInput(context.queryResultSettings, salesOrderSearchCriteria, );\n        return executeAction<SalesOrder[]>(request, context);\n    }          \n          \n    export function createSearchOrdersInput(queryResultSettings: IQueryResultSettings, orderSearchCriteria: OrderSearchCriteria | null): IDataServiceRequest {      \n        const query = salesOrdersQuery().resultSettings(queryResultSettings);\n        return query.createDataServiceRequestForOperation('SearchOrders', true, SalesOrderClass, 'true', { bypassCache: 'none', returnEntity: 'SalesOrder'}, {orderSearchCriteria: orderSearchCriteria });\n    }    \n    \n    export function searchOrdersAsync(context: IContext, orderSearchCriteria: OrderSearchCriteria | null):AsyncResult<SalesOrder[]> {\n        const request = createSearchOrdersInput(context.queryResultSettings, orderSearchCriteria, );\n        return executeAction<SalesOrder[]>(request, context);\n    }          \n          \n    export function createGetReceiptsInput(queryResultSettings: IQueryResultSettings, id: string, receiptRetrievalCriteria: ReceiptRetrievalCriteria | null): IDataServiceRequest {      \n        const query = salesOrdersQuery(id).resultSettings(queryResultSettings);\n        return query.createDataServiceRequestForOperation('GetReceipts', true, ReceiptClass, 'true', { bypassCache: 'none', returnEntity: 'Receipt'}, {receiptRetrievalCriteria: receiptRetrievalCriteria });\n    }    \n    \n    export function getReceiptsAsync(context: IContext, id: string, receiptRetrievalCriteria: ReceiptRetrievalCriteria | null):AsyncResult<Receipt[]> {\n        const request = createGetReceiptsInput(context.queryResultSettings, id, receiptRetrievalCriteria, );\n        return executeAction<Receipt[]>(request, context);\n    }          \n          \n    export function createSendReceiptInput(searchCriteria: SearchReceiptCriteria | null, recipientAddresses: ElectronicAddress[] | null): IDataServiceRequest {      \n        const query = salesOrdersQuery();\n        return query.createDataServiceRequestForOperation('SendReceipt', true, '', '', { bypassCache: 'get', returnEntity: ''}, {searchCriteria: searchCriteria, recipientAddresses: recipientAddresses });\n    }    \n    \n    export function sendReceiptAsync(context: IContext, searchCriteria: SearchReceiptCriteria | null, recipientAddresses: ElectronicAddress[] | null):AsyncResult<NullResult> {\n        const request = createSendReceiptInput(searchCriteria, recipientAddresses, );\n        return executeAction<NullResult>(request, context);\n    }          \n          \n    export function createGetGiftReceiptsInput(queryResultSettings: IQueryResultSettings, id: string, salesLineNumbers: number[], receiptRetrievalCriteria: ReceiptRetrievalCriteria | null): IDataServiceRequest {      \n        const query = salesOrdersQuery(id).resultSettings(queryResultSettings);\n        return query.createDataServiceRequestForOperation('GetGiftReceipts', true, ReceiptClass, 'true', { bypassCache: 'none', returnEntity: 'Receipt'}, {SalesLineNumbers: salesLineNumbers, receiptRetrievalCriteria: receiptRetrievalCriteria });\n    }    \n    \n    export function getGiftReceiptsAsync(context: IContext, id: string, salesLineNumbers: number[], receiptRetrievalCriteria: ReceiptRetrievalCriteria | null):AsyncResult<Receipt[]> {\n        const request = createGetGiftReceiptsInput(context.queryResultSettings, id, salesLineNumbers, receiptRetrievalCriteria, );\n        return executeAction<Receipt[]>(request, context);\n    }          \n          \n    export function createGetByReceiptIdInput(queryResultSettings: IQueryResultSettings, receiptId: string | null, orderStoreNumber: string | null, orderTerminalId: string | null): IDataServiceRequest {      \n        const query = salesOrdersQuery().resultSettings(queryResultSettings);\n        return query.createDataServiceRequestForOperation('GetByReceiptId', true, SalesOrderClass, 'true', { bypassCache: 'none', returnEntity: 'SalesOrder'}, {receiptId: receiptId, orderStoreNumber: orderStoreNumber, orderTerminalId: orderTerminalId });\n    }    \n    \n    export function getByReceiptIdAsync(context: IContext, receiptId: string | null, orderStoreNumber: string | null, orderTerminalId: string | null):AsyncResult<SalesOrder[]> {\n        const request = createGetByReceiptIdInput(context.queryResultSettings, receiptId, orderStoreNumber, orderTerminalId, );\n        return executeAction<SalesOrder[]>(request, context);\n    }          \n          \n    export function createGetSalesOrderDetailsByTransactionIdInput(transactionId: string | null, searchLocationValue: number): IDataServiceRequest {      \n        const query = salesOrdersQuery();\n        return query.createDataServiceRequestForOperation('GetSalesOrderDetailsByTransactionId', false, SalesOrderClass, 'false', { bypassCache: 'none', returnEntity: 'SalesOrder'}, {transactionId: transactionId, searchLocationValue: searchLocationValue });\n    }    \n    \n    export function getSalesOrderDetailsByTransactionIdAsync(context: IContext, transactionId: string | null, searchLocationValue: number):AsyncResult<SalesOrder> {\n        const request = createGetSalesOrderDetailsByTransactionIdInput(transactionId, searchLocationValue, );\n        return executeAction<SalesOrder>(request, context);\n    }          \n          \n    export function createGetSalesOrderDetailsBySalesIdInput(salesId: string | null): IDataServiceRequest {      \n        const query = salesOrdersQuery();\n        return query.createDataServiceRequestForOperation('GetSalesOrderDetailsBySalesId', false, SalesOrderClass, 'false', { bypassCache: 'none', returnEntity: 'SalesOrder'}, {salesId: salesId });\n    }    \n    \n    export function getSalesOrderDetailsBySalesIdAsync(context: IContext, salesId: string | null):AsyncResult<SalesOrder> {\n        const request = createGetSalesOrderDetailsBySalesIdInput(salesId, );\n        return executeAction<SalesOrder>(request, context);\n    }          \n          \n    export function createGetSalesOrderDetailsByQuotationIdInput(quotationId: string | null): IDataServiceRequest {      \n        const query = salesOrdersQuery();\n        return query.createDataServiceRequestForOperation('GetSalesOrderDetailsByQuotationId', false, SalesOrderClass, 'false', { bypassCache: 'none', returnEntity: 'SalesOrder'}, {quotationId: quotationId });\n    }    \n    \n    export function getSalesOrderDetailsByQuotationIdAsync(context: IContext, quotationId: string | null):AsyncResult<SalesOrder> {\n        const request = createGetSalesOrderDetailsByQuotationIdInput(quotationId, );\n        return executeAction<SalesOrder>(request, context);\n    }          \n          \n    export function createShipFulfillmentLinesInput(shipFulfillmentLines: ShipFulfillmentLine[] | null): IDataServiceRequest {      \n        const query = salesOrdersQuery();\n        return query.createDataServiceRequestForOperation('ShipFulfillmentLines', true, '', '', { bypassCache: 'get', returnEntity: ''}, {ShipFulfillmentLines: shipFulfillmentLines });\n    }    \n    \n    export function shipFulfillmentLinesAsync(context: IContext, shipFulfillmentLines: ShipFulfillmentLine[] | null):AsyncResult<NullResult> {\n        const request = createShipFulfillmentLinesInput(shipFulfillmentLines, );\n        return executeAction<NullResult>(request, context);\n    }          \n          \n    export function createAcceptFulfillmentLinesInput(fulfillmentLineParameter: FulfillmentLineParameter[] | null): IDataServiceRequest {      \n        const query = salesOrdersQuery();\n        return query.createDataServiceRequestForOperation('AcceptFulfillmentLines', true, '', '', { bypassCache: 'get', returnEntity: ''}, {FulfillmentLineParameter: fulfillmentLineParameter });\n    }    \n    \n    export function acceptFulfillmentLinesAsync(context: IContext, fulfillmentLineParameter: FulfillmentLineParameter[] | null):AsyncResult<NullResult> {\n        const request = createAcceptFulfillmentLinesInput(fulfillmentLineParameter, );\n        return executeAction<NullResult>(request, context);\n    }          \n          \n    export function createPickFulfillmentLinesInput(fulfillmentLineParameter: FulfillmentLineParameter[] | null): IDataServiceRequest {      \n        const query = salesOrdersQuery();\n        return query.createDataServiceRequestForOperation('PickFulfillmentLines', true, '', '', { bypassCache: 'get', returnEntity: ''}, {FulfillmentLineParameter: fulfillmentLineParameter });\n    }    \n    \n    export function pickFulfillmentLinesAsync(context: IContext, fulfillmentLineParameter: FulfillmentLineParameter[] | null):AsyncResult<NullResult> {\n        const request = createPickFulfillmentLinesInput(fulfillmentLineParameter, );\n        return executeAction<NullResult>(request, context);\n    }          \n          \n    export function createPackFulfillmentLinesInput(fulfillmentLineParameter: FulfillmentLineParameter[] | null): IDataServiceRequest {      \n        const query = salesOrdersQuery();\n        return query.createDataServiceRequestForOperation('PackFulfillmentLines', true, '', '', { bypassCache: 'get', returnEntity: ''}, {FulfillmentLineParameter: fulfillmentLineParameter });\n    }    \n    \n    export function packFulfillmentLinesAsync(context: IContext, fulfillmentLineParameter: FulfillmentLineParameter[] | null):AsyncResult<NullResult> {\n        const request = createPackFulfillmentLinesInput(fulfillmentLineParameter, );\n        return executeAction<NullResult>(request, context);\n    }          \n          \n    export function createMarkFulfillmentLinesAsPackedInput(fulfillmentLineParameter: FulfillmentLineParameter[] | null): IDataServiceRequest {      \n        const query = salesOrdersQuery();\n        return query.createDataServiceRequestForOperation('MarkFulfillmentLinesAsPacked', true, '', 'false', { bypassCache: 'get', returnEntity: ''}, {FulfillmentLineParameter: fulfillmentLineParameter });\n    }    \n    \n    export function markFulfillmentLinesAsPackedAsync(context: IContext, fulfillmentLineParameter: FulfillmentLineParameter[] | null):AsyncResult<string> {\n        const request = createMarkFulfillmentLinesAsPackedInput(fulfillmentLineParameter, );\n        return executeAction<string>(request, context);\n    }          \n          \n    export function createMarkAsPickedInput(fulfillmentLineParameter: FulfillmentLineParameter[] | null): IDataServiceRequest {      \n        const query = salesOrdersQuery();\n        return query.createDataServiceRequestForOperation('MarkAsPicked', true, '', '', { bypassCache: 'get', returnEntity: ''}, {FulfillmentLineParameter: fulfillmentLineParameter });\n    }    \n    \n    export function markAsPickedAsync(context: IContext, fulfillmentLineParameter: FulfillmentLineParameter[] | null):AsyncResult<NullResult> {\n        const request = createMarkAsPickedInput(fulfillmentLineParameter, );\n        return executeAction<NullResult>(request, context);\n    }          \n          \n    export function createGetFulfillmentPickingListsInput(queryResultSettings: IQueryResultSettings, pickingListFulfillmentLine: FulfillmentLineParameter[] | null, hardwareProfileId: string | null): IDataServiceRequest {      \n        const query = salesOrdersQuery().resultSettings(queryResultSettings);\n        return query.createDataServiceRequestForOperation('GetFulfillmentPickingLists', true, ReceiptClass, 'true', { bypassCache: 'none', returnEntity: 'Receipt'}, {pickingListFulfillmentLine: pickingListFulfillmentLine, hardwareProfileId: hardwareProfileId });\n    }    \n    \n    export function getFulfillmentPickingListsAsync(context: IContext, pickingListFulfillmentLine: FulfillmentLineParameter[] | null, hardwareProfileId: string | null):AsyncResult<Receipt[]> {\n        const request = createGetFulfillmentPickingListsInput(context.queryResultSettings, pickingListFulfillmentLine, hardwareProfileId, );\n        return executeAction<Receipt[]>(request, context);\n    }          \n          \n    export function createGetFulfillmentLinesInput(queryResultSettings: IQueryResultSettings, fulfillmentLineSearchCriteria: FulfillmentLineSearchCriteria | null): IDataServiceRequest {      \n        const query = salesOrdersQuery().resultSettings(queryResultSettings);\n        return query.createDataServiceRequestForOperation('GetFulfillmentLines', true, FulfillmentLineClass, 'true', { bypassCache: 'none', returnEntity: 'FulfillmentLine'}, {fulfillmentLineSearchCriteria: fulfillmentLineSearchCriteria });\n    }    \n    \n    export function getFulfillmentLinesAsync(context: IContext, fulfillmentLineSearchCriteria: FulfillmentLineSearchCriteria | null):AsyncResult<FulfillmentLine[]> {\n        const request = createGetFulfillmentLinesInput(context.queryResultSettings, fulfillmentLineSearchCriteria, );\n        return executeAction<FulfillmentLine[]>(request, context);\n    }          \n          \n    export function createGetFulfillmentPackingSlipsInput(queryResultSettings: IQueryResultSettings, packFulfillmentLines: FulfillmentLineParameter[] | null, hardwareProfileId: string | null): IDataServiceRequest {      \n        const query = salesOrdersQuery().resultSettings(queryResultSettings);\n        return query.createDataServiceRequestForOperation('GetFulfillmentPackingSlips', true, ReceiptClass, 'true', { bypassCache: 'none', returnEntity: 'Receipt'}, {packFulfillmentLines: packFulfillmentLines, hardwareProfileId: hardwareProfileId });\n    }    \n    \n    export function getFulfillmentPackingSlipsAsync(context: IContext, packFulfillmentLines: FulfillmentLineParameter[] | null, hardwareProfileId: string | null):AsyncResult<Receipt[]> {\n        const request = createGetFulfillmentPackingSlipsInput(context.queryResultSettings, packFulfillmentLines, hardwareProfileId, );\n        return executeAction<Receipt[]>(request, context);\n    }          \n          \n    export function createGetFulfillmentPackingSlipsByIdInput(queryResultSettings: IQueryResultSettings, salesId: string | null, packingSlipId: string | null, hardwareProfileId: string | null): IDataServiceRequest {      \n        const query = salesOrdersQuery().resultSettings(queryResultSettings);\n        return query.createDataServiceRequestForOperation('GetFulfillmentPackingSlipsById', true, ReceiptClass, 'true', { bypassCache: 'none', returnEntity: 'Receipt'}, {salesId: salesId, PackingSlipId: packingSlipId, hardwareProfileId: hardwareProfileId });\n    }    \n    \n    export function getFulfillmentPackingSlipsByIdAsync(context: IContext, salesId: string | null, packingSlipId: string | null, hardwareProfileId: string | null):AsyncResult<Receipt[]> {\n        const request = createGetFulfillmentPackingSlipsByIdInput(context.queryResultSettings, salesId, packingSlipId, hardwareProfileId, );\n        return executeAction<Receipt[]>(request, context);\n    }          \n          \n    export function createRejectFulfillmentLinesInput(rejectFulfillmentLines: RejectFulfillmentLine[] | null): IDataServiceRequest {      \n        const query = salesOrdersQuery();\n        return query.createDataServiceRequestForOperation('RejectFulfillmentLines', true, '', '', { bypassCache: 'get', returnEntity: ''}, {RejectFulfillmentLines: rejectFulfillmentLines });\n    }    \n    \n    export function rejectFulfillmentLinesAsync(context: IContext, rejectFulfillmentLines: RejectFulfillmentLine[] | null):AsyncResult<NullResult> {\n        const request = createRejectFulfillmentLinesInput(rejectFulfillmentLines, );\n        return executeAction<NullResult>(request, context);\n    }          \n          \n    export function createGetInvoicesBySalesIdInput(queryResultSettings: IQueryResultSettings, salesId: string | null): IDataServiceRequest {      \n        const query = salesOrdersQuery().resultSettings(queryResultSettings);\n        return query.createDataServiceRequestForOperation('GetInvoicesBySalesId', true, SalesInvoiceClass, 'true', { bypassCache: 'none', returnEntity: 'SalesInvoice'}, {salesId: salesId });\n    }    \n    \n    export function getInvoicesBySalesIdAsync(context: IContext, salesId: string | null):AsyncResult<SalesInvoice[]> {\n        const request = createGetInvoicesBySalesIdInput(context.queryResultSettings, salesId, );\n        return executeAction<SalesInvoice[]>(request, context);\n    }          \n          \n    export function createGetOrderInvoicesInput(queryResultSettings: IQueryResultSettings, customerId: string | null): IDataServiceRequest {      \n        const query = salesOrdersQuery().resultSettings(queryResultSettings);\n        return query.createDataServiceRequestForOperation('GetOrderInvoices', true, OrderInvoiceClass, 'true', { bypassCache: 'none', returnEntity: 'OrderInvoice'}, {customerId: customerId });\n    }    \n    \n    export function getOrderInvoicesAsync(context: IContext, customerId: string | null):AsyncResult<OrderInvoice[]> {\n        const request = createGetOrderInvoicesInput(context.queryResultSettings, customerId, );\n        return executeAction<OrderInvoice[]>(request, context);\n    }          \n          \n    export function createGetInvoicesInput(queryResultSettings: IQueryResultSettings, invoiceSearchCriteria: InvoiceSearchCriteria | null): IDataServiceRequest {      \n        const query = salesOrdersQuery().resultSettings(queryResultSettings);\n        return query.createDataServiceRequestForOperation('GetInvoices', true, OrderInvoiceClass, 'true', { bypassCache: 'none', returnEntity: 'OrderInvoice'}, {invoiceSearchCriteria: invoiceSearchCriteria });\n    }    \n    \n    export function getInvoicesAsync(context: IContext, invoiceSearchCriteria: InvoiceSearchCriteria | null):AsyncResult<OrderInvoice[]> {\n        const request = createGetInvoicesInput(context.queryResultSettings, invoiceSearchCriteria, );\n        return executeAction<OrderInvoice[]>(request, context);\n    }          \n          \n    export function createGetInvoicedSalesLinesBySalesIdsInput(queryResultSettings: IQueryResultSettings, salesIds: string[] | null): IDataServiceRequest {      \n        const query = salesOrdersQuery().resultSettings(queryResultSettings);\n        return query.createDataServiceRequestForOperation('GetInvoicedSalesLinesBySalesIds', true, SalesLineClass, 'true', { bypassCache: 'none', returnEntity: 'SalesLine'}, {salesIds: salesIds });\n    }    \n    \n    export function getInvoicedSalesLinesBySalesIdsAsync(context: IContext, salesIds: string[] | null):AsyncResult<SalesLine[]> {\n        const request = createGetInvoicedSalesLinesBySalesIdsInput(context.queryResultSettings, salesIds, );\n        return executeAction<SalesLine[]>(request, context);\n    }          \n          \n    export function createCreatePickingListInput(salesId: string | null): IDataServiceRequest {      \n        const query = salesOrdersQuery();\n        return query.createDataServiceRequestForOperation('CreatePickingList', true, '', '', { bypassCache: 'get', returnEntity: ''}, {salesId: salesId });\n    }    \n    \n    export function createPickingListAsync(context: IContext, salesId: string | null):AsyncResult<NullResult> {\n        const request = createCreatePickingListInput(salesId, );\n        return executeAction<NullResult>(request, context);\n    }          \n          \n    export function createCreatePickingListForItemsInput(salesId: string | null, pickAndPackSalesLineParameters: PickAndPackSalesLineParameter[] | null): IDataServiceRequest {      \n        const query = salesOrdersQuery();\n        return query.createDataServiceRequestForOperation('CreatePickingListForItems', true, '', 'false', { bypassCache: 'get', returnEntity: ''}, {salesId: salesId, pickAndPackSalesLineParameters: pickAndPackSalesLineParameters });\n    }    \n    \n    export function createPickingListForItemsAsync(context: IContext, salesId: string | null, pickAndPackSalesLineParameters: PickAndPackSalesLineParameter[] | null):AsyncResult<string> {\n        const request = createCreatePickingListForItemsInput(salesId, pickAndPackSalesLineParameters, );\n        return executeAction<string>(request, context);\n    }          \n          \n    export function createGetPickingListsInput(queryResultSettings: IQueryResultSettings, id: string): IDataServiceRequest {      \n        const query = salesOrdersQuery(id).resultSettings(queryResultSettings);\n        return query.createDataServiceRequestForOperation('GetPickingLists', false, PickingListClass, 'true', { bypassCache: 'none', returnEntity: 'PickingList'}, { });\n    }    \n    \n    export function getPickingListsAsync(context: IContext, id: string):AsyncResult<PickingList[]> {\n        const request = createGetPickingListsInput(context.queryResultSettings, id, );\n        return executeAction<PickingList[]>(request, context);\n    }          \n          \n    export function createCreatePackingSlipInput(salesId: string | null): IDataServiceRequest {      \n        const query = salesOrdersQuery();\n        return query.createDataServiceRequestForOperation('CreatePackingSlip', true, '', '', { bypassCache: 'get', returnEntity: ''}, {salesId: salesId });\n    }    \n    \n    export function createPackingSlipAsync(context: IContext, salesId: string | null):AsyncResult<NullResult> {\n        const request = createCreatePackingSlipInput(salesId, );\n        return executeAction<NullResult>(request, context);\n    }          \n          \n    export function createGetPackingSlipsDataInput(queryResultSettings: IQueryResultSettings, salesId: string | null): IDataServiceRequest {      \n        const query = salesOrdersQuery().resultSettings(queryResultSettings);\n        return query.createDataServiceRequestForOperation('GetPackingSlipsData', false, PackingSlipDataClass, 'true', { bypassCache: 'none', returnEntity: 'PackingSlipData'}, {salesId: salesId });\n    }    \n    \n    export function getPackingSlipsDataAsync(context: IContext, salesId: string | null):AsyncResult<PackingSlipData[]> {\n        const request = createGetPackingSlipsDataInput(context.queryResultSettings, salesId, );\n        return executeAction<PackingSlipData[]>(request, context);\n    }          \n          \n    "],"sourceRoot":""},"metadata":{},"sourceType":"module"}