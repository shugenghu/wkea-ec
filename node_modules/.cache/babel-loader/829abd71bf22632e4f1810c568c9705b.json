{"ast":null,"code":"/*!\r\n * Copyright (c) Microsoft Corporation.\r\n * All rights reserved. See LICENSE in the project root for license information.\r\n */var sizePattern=/col(_(\\d|auto){1,2}){2,}/;var translatePrefix=function translatePrefix(prefix){switch(prefix&&prefix.toLowerCase()){case'large':return'lg';case'medium':return'md';case'small':return'sm';case'xsmall':default:return'';}};export var getColumnSizes=function getColumnSizes(config,size){if(!sizePattern.exec(config)){return false;}var cols=config.split('_').slice(1);var translatedSize=translatePrefix(size);var sizePrefix=translatedSize&&\"-\".concat(translatedSize)||'';return cols.map(function(colWidth){return\"col\".concat(sizePrefix,\"-\").concat(colWidth);});};export var showErrors=function showErrors(context){var _ref=context&&context.request&&context.request.params||{},isDebug=_ref.isDebug,isEditor=_ref.isEditor;return!!isDebug||!!isEditor;};export var getColClassArray=function getColClassArray(options){return[options.xsmall&&getColumnSizes(options.xsmall),options.small&&getColumnSizes(options.small,'small'),options.medium&&getColumnSizes(options.medium,'medium'),options.large&&getColumnSizes(options.large,'large')].filter(Boolean);};export var colWidths=new Map([['one','col-md-1'],['two','col-md-2'],['three','col-md-3'],['four','col-md-4'],['six','col-md-6'],['twelve','col-md-12']]);","map":{"version":3,"sources":["utils/classnames.ts"],"names":[],"mappings":"AAAA;;;AAGG,GAMH,GAAM,CAAA,WAAW,CAAG,0BAApB,CAcA,GAAM,CAAA,eAAe,CAAG,QAAlB,CAAA,eAAkB,CAAC,MAAD,CAAgE,CACpF,OAAQ,MAAM,EAAI,MAAM,CAAC,WAAP,EAAlB,EACI,IAAK,OAAL,CACI,MAAO,IAAP,CACJ,IAAK,QAAL,CACI,MAAO,IAAP,CACJ,IAAK,OAAL,CACI,MAAO,IAAP,CACJ,IAAK,QAAL,CACA,QACI,MAAO,EAAP,CATR,CAWH,CAZD,CAqBA,MAAO,IAAM,CAAA,cAAc,CAAG,QAAjB,CAAA,cAAiB,CAAC,MAAD,CAAiB,IAAjB,CAAuF,CACjH,GAAI,CAAC,WAAW,CAAC,IAAZ,CAAiB,MAAjB,CAAL,CAA+B,CAC3B,MAAO,MAAP,CACH,CACD,GAAM,CAAA,IAAI,CAAG,MAAM,CAAC,KAAP,CAAa,GAAb,EAAkB,KAAlB,CAAwB,CAAxB,CAAb,CACA,GAAM,CAAA,cAAc,CAAG,eAAe,CAAC,IAAD,CAAtC,CACA,GAAM,CAAA,UAAU,CAAI,cAAc,aAAQ,cAAR,CAAf,EAA4C,EAA/D,CACA,MAAO,CAAA,IAAI,CAAC,GAAL,CAAS,SAAC,QAAD,qBAA4B,UAA5B,aAA0C,QAA1C,GAAT,CAAP,CACH,CARM,CAUP,MAAO,IAAM,CAAA,UAAU,CAAG,QAAb,CAAA,UAAa,CAAC,OAAD,CAAoC,UACR,OAAO,EAAI,OAAO,CAAC,OAAnB,EAA8B,OAAO,CAAC,OAAR,CAAgB,MAA/C,EAA0D,EADjD,CAClD,OADkD,MAClD,OADkD,CACzC,QADyC,MACzC,QADyC,CAE1D,MAAO,CAAC,CAAC,OAAF,EAAa,CAAC,CAAC,QAAtB,CACH,CAHM,CAQP,MAAO,IAAM,CAAA,gBAAgB,CAAG,QAAnB,CAAA,gBAAmB,CAAC,OAAD,QAExB,CACI,OAAO,CAAC,MAAR,EAAkB,cAAc,CAAC,OAAO,CAAC,MAAT,CADpC,CAEI,OAAO,CAAC,KAAR,EAAiB,cAAc,CAAC,OAAO,CAAC,KAAT,CAAgB,OAAhB,CAFnC,CAGI,OAAO,CAAC,MAAR,EAAkB,cAAc,CAAC,OAAO,CAAC,MAAT,CAAiB,QAAjB,CAHpC,CAII,OAAO,CAAC,KAAR,EAAiB,cAAc,CAAC,OAAO,CAAC,KAAT,CAAgB,OAAhB,CAJnC,EAKE,MALF,CAKS,OALT,CAFwB,EAAzB,CAUP,MAAO,IAAM,CAAA,SAAS,CAAG,GAAI,CAAA,GAAJ,CAAwB,CAC7C,CAAC,KAAD,CAAQ,UAAR,CAD6C,CAE7C,CAAC,KAAD,CAAQ,UAAR,CAF6C,CAG7C,CAAC,OAAD,CAAU,UAAV,CAH6C,CAI7C,CAAC,MAAD,CAAS,UAAT,CAJ6C,CAK7C,CAAC,KAAD,CAAQ,UAAR,CAL6C,CAM7C,CAAC,QAAD,CAAW,WAAX,CAN6C,CAAxB,CAAlB","sourcesContent":["/*!\n * Copyright (c) Microsoft Corporation.\n * All rights reserved. See LICENSE in the project root for license information.\n */\n\nimport { ICoreContext } from '@msdyn365-commerce/core';\nimport * as twoSlots from '../modules/default-container-2-slots/default-container-2-slots.props.autogenerated';\nimport * as threeSlots from '../modules/default-container-3-slots/default-container-3-slots.props.autogenerated';\n\nconst sizePattern = /col(_(\\d|auto){1,2}){2,}/;\n\nexport interface IShowErrorOptions {\n    isDebug?: boolean;\n    isEditor?: boolean;\n}\n\nexport interface IViewPortOptions {\n    xsmall?: threeSlots.xsmall | twoSlots.xsmall;\n    small?: threeSlots.small | twoSlots.small;\n    medium?: threeSlots.medium | twoSlots.medium;\n    large?: threeSlots.large | twoSlots.large;\n}\n\nconst translatePrefix = (prefix: `large` | `medium` | `small` | `xsmall` | undefined) => {\n    switch (prefix && prefix.toLowerCase()) {\n        case 'large':\n            return 'lg';\n        case 'medium':\n            return 'md';\n        case 'small':\n            return 'sm';\n        case 'xsmall':\n        default:\n            return '';\n    }\n};\n\n/**\n * converts config option and size to bootstrap col class name\n * If size is auto or config option is invalid col-auto will be returned\n * If size is xsmall or size is invalid col-{config} will be returned\n * @param config configuration option e.g. col_12_12\n * @param size bootstrap gridsize\n */\nexport const getColumnSizes = (config: string, size?: `large` | `medium` | `small` | `xsmall`): string[] | boolean => {\n    if (!sizePattern.exec(config)) {\n        return false;\n    }\n    const cols = config.split('_').slice(1);\n    const translatedSize = translatePrefix(size);\n    const sizePrefix = (translatedSize && `-${translatedSize}`) || '';\n    return cols.map((colWidth: string) => `col${sizePrefix}-${colWidth}`);\n};\n\nexport const showErrors = (context?: ICoreContext): Boolean => {\n    const { isDebug, isEditor }: IShowErrorOptions = (context && context.request && context.request.params) || {};\n    return !!isDebug || !!isEditor;\n};\n\n/**\n * Converts viewport configuration into a two dimensional array of class names\n */\nexport const getColClassArray = (options: IViewPortOptions): string[][] =>\n    <string[][]>(\n        [\n            options.xsmall && getColumnSizes(options.xsmall),\n            options.small && getColumnSizes(options.small, 'small'),\n            options.medium && getColumnSizes(options.medium, 'medium'),\n            options.large && getColumnSizes(options.large, 'large')\n        ].filter(Boolean)\n    );\n\nexport const colWidths = new Map<string, string>([\n    ['one', 'col-md-1'],\n    ['two', 'col-md-2'],\n    ['three', 'col-md-3'],\n    ['four', 'col-md-4'],\n    ['six', 'col-md-6'],\n    ['twelve', 'col-md-12']\n]);\n"],"sourceRoot":"./src/"},"metadata":{},"sourceType":"module"}