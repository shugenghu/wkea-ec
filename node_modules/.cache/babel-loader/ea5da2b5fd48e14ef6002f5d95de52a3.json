{"ast":null,"code":"import _defineProperty from\"@babel/runtime/helpers/esm/defineProperty\";import _regeneratorRuntime from\"@babel/runtime/regenerator\";import _asyncToGenerator from\"@babel/runtime/helpers/esm/asyncToGenerator\";function _createForOfIteratorHelper(o,allowArrayLike){var it;if(typeof Symbol===\"undefined\"||o[Symbol.iterator]==null){if(Array.isArray(o)||(it=_unsupportedIterableToArray(o))||allowArrayLike&&o&&typeof o.length===\"number\"){if(it)o=it;var i=0;var F=function F(){};return{s:F,n:function n(){if(i>=o.length)return{done:true};return{done:false,value:o[i++]};},e:function e(_e){throw _e;},f:F};}throw new TypeError(\"Invalid attempt to iterate non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");}var normalCompletion=true,didErr=false,err;return{s:function s(){it=o[Symbol.iterator]();},n:function n(){var step=it.next();normalCompletion=step.done;return step;},e:function e(_e2){didErr=true;err=_e2;},f:function f(){try{if(!normalCompletion&&it[\"return\"]!=null)it[\"return\"]();}finally{if(didErr)throw err;}}};}function _unsupportedIterableToArray(o,minLen){if(!o)return;if(typeof o===\"string\")return _arrayLikeToArray(o,minLen);var n=Object.prototype.toString.call(o).slice(8,-1);if(n===\"Object\"&&o.constructor)n=o.constructor.name;if(n===\"Map\"||n===\"Set\")return Array.from(o);if(n===\"Arguments\"||/^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n))return _arrayLikeToArray(o,minLen);}function _arrayLikeToArray(arr,len){if(len==null||len>arr.length)len=arr.length;for(var i=0,arr2=new Array(len);i<len;i++){arr2[i]=arr[i];}return arr2;}function ownKeys(object,enumerableOnly){var keys=Object.keys(object);if(Object.getOwnPropertySymbols){var symbols=Object.getOwnPropertySymbols(object);if(enumerableOnly)symbols=symbols.filter(function(sym){return Object.getOwnPropertyDescriptor(object,sym).enumerable;});keys.push.apply(keys,symbols);}return keys;}function _objectSpread(target){for(var i=1;i<arguments.length;i++){var source=arguments[i]!=null?arguments[i]:{};if(i%2){ownKeys(Object(source),true).forEach(function(key){_defineProperty(target,key,source[key]);});}else if(Object.getOwnPropertyDescriptors){Object.defineProperties(target,Object.getOwnPropertyDescriptors(source));}else{ownKeys(Object(source)).forEach(function(key){Object.defineProperty(target,key,Object.getOwnPropertyDescriptor(source,key));});}}return target;}/*!\r\n * Copyright (c) Microsoft Corporation.\r\n * All rights reserved. See LICENSE in the project root for license information.\r\n */ // tslint:disable-next-line:match-default-export-name 'axios' doesn't match 'Axios'\nimport msdyn365Commerce from'@msdyn365-commerce/core-internal';import{asSystemMetadata,EXCEPTION_NO1RFRESPONSE,LogLevel,MESSAGE_GETTING_PAGE_RESPONSE,MESSAGE_NO_SERVER_ENDPOINT_SET,MESSAGE_SERVER_ENDPOINT}from'@msdyn365-commerce/telemetry-internal';import{safeReadJson}from'@msdyn365-commerce/utilities-internal';import axios from'axios';import jwt_decode from'jwt-decode';import path from'path';import Url from'url';import{getMockModule}from'../mock/mock-helper';import keystonePaths from'../paths';import{getFlattenedListOfModules}from'../utils/get-modules-flat-list';import{getUserInformationROPC}from'../utils/ropc-auth-utils';import{getThemeModules}from'./Definition/moduleDefinition';import{HttpException,HttpRedirectException}from'./error';/**\r\n * PageContract API\r\n *\r\n */export var PageContractApiService;(function(PageContractApiService){var AUTHORIZATION_PATH='/ForceAzureADSignIn';/**\r\n     * Throws an HTTPRedirectException to prompt the user to log in\r\n     * @param requestContext Current request context\r\n     * @param platformUrl Platform url as string\r\n     */var getAuthorization=/*#__PURE__*/function(){var _ref=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee(requestContext,platformUrl){var authUrl;return _regeneratorRuntime.wrap(function _callee$(_context){while(1){switch(_context.prev=_context.next){case 0:authUrl=new URL(platformUrl);authUrl.pathname=AUTHORIZATION_PATH;authUrl.searchParams.append('ru',Url.format(requestContext.url.requestUrl));throw new HttpRedirectException(Url.format(authUrl));case 4:case\"end\":return _context.stop();}}},_callee);}));return function getAuthorization(_x,_x2){return _ref.apply(this,arguments);};}();/**\r\n     * Populates page module section\r\n     * @param page\r\n     */PageContractApiService._inlineMockModules=/*#__PURE__*/function(){var _ref2=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee2(page){var newPageResponse,slots,index,_iterator,_step,m,mockName,existing,mock;return _regeneratorRuntime.wrap(function _callee2$(_context2){while(1){switch(_context2.prev=_context2.next){case 0:// make sure we null out the modules so legacy workflow does not kick in\nnewPageResponse=_objectSpread(_objectSpread({},page),{modules:null});slots=getFlattenedListOfModules(newPageResponse);index=0;_iterator=_createForOfIteratorHelper(slots);_context2.prev=4;_iterator.s();case 6:if((_step=_iterator.n()).done){_context2.next=22;break;}m=_step.value;// @ts-ignore - mockId is not a first-class property\nmockName=m.mockId||m.typeName;// @ts-ignore - array access is prohibited\nexisting=page.modules&&page.modules[m.id];if(!existing){_context2.next=14;break;}Object.assign(slots[index],existing);_context2.next=19;break;case 14:if(!mockName){_context2.next=19;break;}_context2.next=17;return getMockModule(m.typeName,mockName);case 17:mock=_context2.sent;if(mock){Object.assign(m,_objectSpread(_objectSpread({},mock),m));}case 19:index++;case 20:_context2.next=6;break;case 22:_context2.next=27;break;case 24:_context2.prev=24;_context2.t0=_context2[\"catch\"](4);_iterator.e(_context2.t0);case 27:_context2.prev=27;_iterator.f();return _context2.finish(27);case 30:newPageResponse.slots=slots;return _context2.abrupt(\"return\",newPageResponse);case 32:case\"end\":return _context2.stop();}}},_callee2,null,[[4,24,27,30]]);}));return function(_x3){return _ref2.apply(this,arguments);};}();/**\r\n     * Retireves page response data from mock JSON files\r\n     */PageContractApiService.getMockPayload=/*#__PURE__*/function(){var _ref3=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee3(mockName){var mockFilePath,page;return _regeneratorRuntime.wrap(function _callee3$(_context3){while(1){switch(_context3.prev=_context3.next){case 0:mockFilePath=path.resolve(keystonePaths.KEYSTONE_PAGE_MOCKS_DIR,\"\".concat(mockName,\".json\"));_context3.next=3;return safeReadJson(mockFilePath);case 3:page=_context3.sent;if(page){_context3.next=6;break;}throw new HttpException(404,\"Mock page: \".concat(mockName,\" is either invalid json or not found\"));case 6:return _context3.abrupt(\"return\",PageContractApiService._inlineMockModules(page));case 7:case\"end\":return _context3.stop();}}},_callee3);}));return function(_x4){return _ref3.apply(this,arguments);};}();/**\r\n     * Retrieves page response data from theme layout\r\n     */PageContractApiService.getThemeLayout=/*#__PURE__*/function(){var _ref4=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee4(themeName,pageType,layout,telemetry){var themeModules,theme;return _regeneratorRuntime.wrap(function _callee4$(_context4){while(1){switch(_context4.prev=_context4.next){case 0:_context4.next=2;return getThemeModules(null,telemetry);case 2:themeModules=_context4.sent;theme=(themeModules||[]).filter(function(themeModule){return themeModule.name===themeName;})[0];if(theme){_context4.next=6;break;}throw new HttpException(404,\"Theme: \".concat(themeName,\" is either invalid json or not found\"));case 6:if(theme.pages[pageType]){_context4.next=8;break;}throw new HttpException(404,\"Page: \".concat(pageType,\" is either invalid json or not found for theme \").concat(themeName));case 8:if(theme.pages[pageType][layout]){_context4.next=10;break;}throw new HttpException(404,\"Layout: \".concat(layout,\" is either invalid json or not found for theme \").concat(themeName));case 10:return _context4.abrupt(\"return\",theme.pages[pageType][layout]);case 11:case\"end\":return _context4.stop();}}},_callee4);}));return function(_x5,_x6,_x7,_x8){return _ref4.apply(this,arguments);};}();/**\r\n     * Retrieves theme segment\r\n     */PageContractApiService.getThemeSegment=/*#__PURE__*/function(){var _ref5=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee5(themeName,segmentName,telemetry){var themeModules,theme;return _regeneratorRuntime.wrap(function _callee5$(_context5){while(1){switch(_context5.prev=_context5.next){case 0:_context5.next=2;return getThemeModules(null,telemetry);case 2:themeModules=_context5.sent;theme=(themeModules||[]).filter(function(themeModule){return themeModule.name===themeName;})[0];if(theme){_context5.next=6;break;}throw new HttpException(404,\"Theme: \".concat(themeName,\" is either invalid json or not found\"));case 6:if(theme.segments[segmentName]){_context5.next=8;break;}throw new HttpException(404,\"Segment: \".concat(segmentName,\" is either invalid json or not found for theme \").concat(themeName));case 8:return _context5.abrupt(\"return\",theme.segments[segmentName]);case 9:case\"end\":return _context5.stop();}}},_callee5);}));return function(_x9,_x10,_x11){return _ref5.apply(this,arguments);};}();/**\r\n     * Call server to retrieve page response\r\n     */PageContractApiService.getServerPageResponse=/*#__PURE__*/function(){var _ref6=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee6(url,telemetry,requestContext,idToken,userAgent){var mockUser,retry,platformUrl,platformReqConfig,_args6=arguments;return _regeneratorRuntime.wrap(function _callee6$(_context6){while(1){switch(_context6.prev=_context6.next){case 0:mockUser=_args6.length>5&&_args6[5]!==undefined?_args6[5]:false;retry=_args6.length>6&&_args6[6]!==undefined?_args6[6]:true;platformUrl=new URL(url);platformReqConfig={};if(!process.env.HEADER_REQ){_context6.next=9;break;}platformReqConfig.method='post';platformReqConfig.headers={'Content-Type':'application/json',nodeServiceProxy:true,'accept-language':'en-US,en'};_context6.next=16;break;case 9:if(idToken){_context6.next=12;break;}_context6.next=12;return getAuthorization(requestContext,url);case 12:platformUrl.searchParams.append('item','nodeserviceproxy:true');platformReqConfig.method='get';platformReqConfig.maxRedirects=0;platformReqConfig.headers={Authorization:\"Bearer \".concat(idToken),'accept-language':'en-US,en'};case 16:if(userAgent){platformReqConfig.headers['User-Agent']=userAgent;}// If mock user has been set, set X-Disable-C2ForceAuth to bypass forced C2 Auth\nif(mockUser){platformReqConfig.headers['X-Disable-C2ForceAuth']=true;}return _context6.abrupt(\"return\",axios(Url.format(platformUrl),platformReqConfig).then(function(response){return response.data;})[\"catch\"](function(error){if(error.response&&error.response.status===302){return getAuthorization(requestContext,url);}if(retry&&error.response&&error.response.status===403){return PageContractApiService.getServerPageResponse(url,telemetry,requestContext,'',userAgent,mockUser,false);}telemetry.log(LogLevel.Error,EXCEPTION_NO1RFRESPONSE,{exception:error});if(error.response&&error.response.status){throw new HttpException(error.response.status,EXCEPTION_NO1RFRESPONSE);}else{throw new Error(EXCEPTION_NO1RFRESPONSE);}}));case 19:case\"end\":return _context6.stop();}}},_callee6);}));return function(_x12,_x13,_x14,_x15,_x16){return _ref6.apply(this,arguments);};}();PageContractApiService.parsePayload=function(content){var pageResponse=typeof content==='string'?JSON.parse(content):content;pageResponse.slots=getFlattenedListOfModules(pageResponse);return pageResponse;};/**\r\n     * Sets the pageResponse object by either using mock if mock query param is supplied\r\n     * or by requesting the page response object from OneRF\r\n     *\r\n     * @param req Request\r\n     * @param res Response\r\n     * @param serverHost OneRF server host\r\n     */PageContractApiService.handleGetPageResponse=/*#__PURE__*/function(){var _ref7=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee7(req,res,serverHost){var userToken,modifiedSignInUrl,modifiedSignOutUrl,idToken,userAgent,serverUrl,content,_msdyn365Commerce$loc;return _regeneratorRuntime.wrap(function _callee7$(_context7){while(1){switch(_context7.prev=_context7.next){case 0:if(!(process.env.NODE_ENV==='development'&&msdyn365Commerce.localCredentials)){_context7.next=6;break;}_context7.next=3;return getMockUserToken(msdyn365Commerce.localCredentials,req.query);case 3:userToken=_context7.sent;modifiedSignInUrl=Url.format({protocol:'https',hostname:'localhost',port:process.env.PORT,pathname:req.path,query:_objectSpread(_objectSpread({},req.query),{mockUser:'true'})});modifiedSignOutUrl=Url.format({protocol:'https',hostname:'localhost',port:process.env.PORT,pathname:req.path,query:_objectSpread(_objectSpread({},req.query),{mockUser:'false'})});case 6:// @ts-ignore\nidToken=req.session&&req.session.id_token;userAgent=req.header('User-Agent');serverUrl={serverHost:serverHost,pathname:req.path,query:req.query};_context7.next=11;return PageContractApiService.getPageResponse(res.locals.telemetry,res.locals.requestContext,idToken,userAgent,serverUrl,userToken!==undefined);case 11:content=_context7.sent;if(process.env.NODE_ENV==='development'){// If no page response was set as result of non-C2 signed in user, send message back indicating mockUser query param should be used\n// @ts-ignore - statusCode is not a typed property but is part of the returned pageResponse from OneRF\nif(!content.pageRoot&&(content===null||content===void 0?void 0:content.statusCode)===302){res.status(200).send(\"Unable to retrieve server page resonse for path \".concat(req.path,\" because it requires a signed in user to access. Use 'mockUser' query param to mock a signed in C2 user.\"));}// If a user token has been generated through credentials.json and ROPC, inject it\nif(content.renderingContext&&userToken){injectUserToken(content.renderingContext,userToken,(_msdyn365Commerce$loc=msdyn365Commerce.localCredentials)===null||_msdyn365Commerce$loc===void 0?void 0:_msdyn365Commerce$loc.customerAccountNumber);}// Modify the sign in and sign out url if local sign in is enabled to make use of the mockUser query param\nif(msdyn365Commerce.localCredentials&&content.renderingContext.userContext){content.renderingContext.userContext.signInUrl=modifiedSignInUrl;content.renderingContext.userContext.signOutUrl=modifiedSignOutUrl;}}res.locals.pageResponse=content;case 14:case\"end\":return _context7.stop();}}},_callee7);}));return function(_x17,_x18,_x19){return _ref7.apply(this,arguments);};}();/**\r\n     * Controls the mock user token that is added to the rendering context to enable signed in behavior during local development\r\n     * Uses ROPC auth flow to get an access token to impersonate signed in status. Retruns the user impersonation access token\r\n     *\r\n     * @param credentials Credentials config object containing config information required to make the ROPC request\r\n     * @param query query param object\r\n     */var getMockUserToken=/*#__PURE__*/function(){var _ref8=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee8(credentials,query){return _regeneratorRuntime.wrap(function _callee8$(_context8){while(1){switch(_context8.prev=_context8.next){case 0:if(!(query!==null&&query!==void 0&&query.mockUser)){_context8.next=7;break;}if(!(query.mockUser==='false')){_context8.next=4;break;}delete credentials.accessToken;return _context8.abrupt(\"return\");case 4:_context8.next=6;return getUserInformationROPC(credentials,query.mockUser);case 6:return _context8.abrupt(\"return\",credentials.accessToken);case 7:if(!(credentials.expiryDate&&credentials.currentUser)){_context8.next=12;break;}if(!(Math.floor(Date.now()/1000)>=credentials.expiryDate)){_context8.next=11;break;}_context8.next=11;return getUserInformationROPC(credentials,credentials.currentUser);case 11:return _context8.abrupt(\"return\",credentials.accessToken);case 12:case\"end\":return _context8.stop();}}},_callee8);}));return function getMockUserToken(_x20,_x21){return _ref8.apply(this,arguments);};}();// Injects the user token into rendering context user information if available\nvar injectUserToken=function injectUserToken(renderingContext,token,customerAccountNumber){var decodedToken=jwt_decode(token);renderingContext.userContext=_objectSpread(_objectSpread({},renderingContext.userContext),{token:token,isAuthenticated:true,emailAddress:decodedToken.emails[0]||'',firstName:decodedToken.given_name||'',lastName:decodedToken.family_name||'',name:\"\".concat(decodedToken.given_name,\" \").concat(decodedToken.family_name),signinName:\"\".concat(decodedToken.given_name,\" \").concat(decodedToken.family_name),customerAccountNumber:customerAccountNumber||''});};/**\r\n     * Retrieves a page response from server or Mock data\r\n     */PageContractApiService.getPageResponse=/*#__PURE__*/function(){var _ref9=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee9(telemetry,requestContext,idToken,userAgent,serverUrlConfigs,mockUser){var serverUrl,serverPageUrl,resp;return _regeneratorRuntime.wrap(function _callee9$(_context9){while(1){switch(_context9.prev=_context9.next){case 0:if(!(requestContext&&requestContext.query&&requestContext.query.mock)){_context9.next=2;break;}return _context9.abrupt(\"return\",PageContractApiService.getMockPayload(requestContext.query.mock));case 2:if(!serverUrlConfigs.serverHost){telemetry.log(LogLevel.Error,MESSAGE_NO_SERVER_ENDPOINT_SET);}serverUrl=Url.format({protocol:'https',hostname:serverUrlConfigs.serverHost});serverPageUrl=Url.format({protocol:'https',hostname:serverUrlConfigs.serverHost,pathname:serverUrlConfigs.pathname,query:serverUrlConfigs.query});telemetry.log(LogLevel.Debug,MESSAGE_SERVER_ENDPOINT,{values:[asSystemMetadata(serverUrl)]});telemetry.log(LogLevel.Debug,MESSAGE_GETTING_PAGE_RESPONSE,{values:[asSystemMetadata(serverPageUrl)]});_context9.next=9;return PageContractApiService.getServerPageResponse(serverPageUrl,telemetry,requestContext,idToken,userAgent,mockUser);case 9:resp=_context9.sent;return _context9.abrupt(\"return\",PageContractApiService.parsePayload(resp));case 11:case\"end\":return _context9.stop();}}},_callee9);}));return function(_x22,_x23,_x24,_x25,_x26,_x27){return _ref9.apply(this,arguments);};}();})(PageContractApiService||(PageContractApiService={}));export default PageContractApiService;","map":{"version":3,"sources":["../../../src/_server/temp-page-contract-api-service.ts"],"names":[],"mappings":"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","sourcesContent":["/*!\n * Copyright (c) Microsoft Corporation.\n * All rights reserved. See LICENSE in the project root for license information.\n */\n\n// tslint:disable-next-line:match-default-export-name 'axios' doesn't match 'Axios'\nimport msdyn365Commerce, {\n    IDictionary,\n    ILocalCredentials,\n    IPageResponse,\n    IRenderingContext,\n    IRequestContext,\n    IThemeModule\n} from '@msdyn365-commerce/core-internal';\nimport {\n    asSystemMetadata,\n    EXCEPTION_NO1RFRESPONSE,\n    IInternalTelemetry,\n    InternalTelemetry,\n    LogLevel,\n    MESSAGE_GETTING_PAGE_RESPONSE,\n    MESSAGE_NO_SERVER_ENDPOINT_SET,\n    MESSAGE_SERVER_ENDPOINT\n} from '@msdyn365-commerce/telemetry-internal';\nimport { safeReadJson } from '@msdyn365-commerce/utilities-internal';\nimport axios, { AxiosError, AxiosRequestConfig } from 'axios';\nimport { Request, Response } from 'express';\nimport jwt_decode from 'jwt-decode';\nimport path from 'path';\nimport Url from 'url';\nimport { getMockModule } from '../mock/mock-helper';\nimport keystonePaths from '../paths';\nimport { getFlattenedListOfModules } from '../utils/get-modules-flat-list';\nimport { getUserInformationROPC } from '../utils/ropc-auth-utils';\nimport { getThemeModules } from './Definition/moduleDefinition';\nimport { HttpException, HttpRedirectException } from './error';\n\ninterface IJWTDecoded {\n    given_name: string;\n    family_name: string;\n    emails: string[];\n}\n\n/**\n * PageContract API\n *\n */\nexport namespace PageContractApiService {\n    const AUTHORIZATION_PATH = '/ForceAzureADSignIn';\n\n    /**\n     * Throws an HTTPRedirectException to prompt the user to log in\n     * @param requestContext Current request context\n     * @param platformUrl Platform url as string\n     */\n    const getAuthorization = async (requestContext: IRequestContext, platformUrl: string) => {\n        const authUrl = new URL(platformUrl);\n        authUrl.pathname = AUTHORIZATION_PATH;\n        authUrl.searchParams.append('ru', Url.format(requestContext.url.requestUrl));\n        throw new HttpRedirectException(Url.format(authUrl));\n    };\n\n    /**\n     * Populates page module section\n     * @param page\n     */\n    export const _inlineMockModules = async (page: IPageResponse): Promise<IPageResponse> => {\n        // make sure we null out the modules so legacy workflow does not kick in\n        const newPageResponse = { ...page, ...{ modules: null } };\n        const slots = getFlattenedListOfModules(newPageResponse);\n        let index: number = 0;\n        for (const m of slots) {\n            // @ts-ignore - mockId is not a first-class property\n            const mockName = m.mockId || m.typeName;\n            // @ts-ignore - array access is prohibited\n            const existing = page.modules && page.modules[m.id];\n            if (existing) {\n                Object.assign(slots[index], existing);\n            } else if (mockName) {\n                const mock = await getMockModule(m.typeName, mockName);\n                if (mock) {\n                    Object.assign(m, { ...mock, ...m });\n                }\n            }\n            index++;\n        }\n\n        newPageResponse.slots = slots;\n        return newPageResponse;\n    };\n\n    /**\n     * Retireves page response data from mock JSON files\n     */\n    export const getMockPayload = async (mockName: string) => {\n        const mockFilePath = path.resolve(keystonePaths.KEYSTONE_PAGE_MOCKS_DIR, `${mockName}.json`);\n        const page = <IPageResponse>await safeReadJson(mockFilePath);\n\n        if (!page) {\n            throw new HttpException(404, `Mock page: ${mockName} is either invalid json or not found`);\n        }\n\n        return _inlineMockModules(page);\n    };\n\n    /**\n     * Retrieves page response data from theme layout\n     */\n    export const getThemeLayout = async (themeName: string, pageType: string, layout: string, telemetry: IInternalTelemetry) => {\n        const themeModules = <IThemeModule[]>await getThemeModules(null, telemetry);\n        const theme = (themeModules || []).filter(themeModule => themeModule.name === themeName)[0];\n\n        if (!theme) {\n            throw new HttpException(404, `Theme: ${themeName} is either invalid json or not found`);\n        }\n\n        if (!theme.pages[pageType]) {\n            throw new HttpException(404, `Page: ${pageType} is either invalid json or not found for theme ${themeName}`);\n        }\n\n        if (!theme.pages[pageType][layout]) {\n            throw new HttpException(404, `Layout: ${layout} is either invalid json or not found for theme ${themeName}`);\n        }\n\n        return theme.pages[pageType][layout];\n    };\n\n    /**\n     * Retrieves theme segment\n     */\n    export const getThemeSegment = async (themeName: string, segmentName: string, telemetry: IInternalTelemetry) => {\n        const themeModules = <IThemeModule[]>await getThemeModules(null, telemetry);\n        const theme = (themeModules || []).filter(themeModule => themeModule.name === themeName)[0];\n\n        if (!theme) {\n            throw new HttpException(404, `Theme: ${themeName} is either invalid json or not found`);\n        }\n\n        if (!theme.segments[segmentName]) {\n            throw new HttpException(404, `Segment: ${segmentName} is either invalid json or not found for theme ${themeName}`);\n        }\n\n        return theme.segments[segmentName];\n    };\n\n    /**\n     * Call server to retrieve page response\n     */\n    export const getServerPageResponse = async (\n        url: string,\n        telemetry: IInternalTelemetry,\n        requestContext: IRequestContext,\n        idToken: string,\n        userAgent: string | undefined,\n        mockUser: boolean = false,\n        retry: boolean = true\n    ) => {\n        const platformUrl = new URL(url);\n        const platformReqConfig: Partial<AxiosRequestConfig> = {};\n        if (process.env.HEADER_REQ) {\n            platformReqConfig.method = 'post';\n            platformReqConfig.headers = {\n                'Content-Type': 'application/json',\n                nodeServiceProxy: true,\n                'accept-language': 'en-US,en'\n            };\n        } else {\n            if (!idToken) {\n                await getAuthorization(requestContext, url);\n            }\n            platformUrl.searchParams.append('item', 'nodeserviceproxy:true');\n            platformReqConfig.method = 'get';\n            platformReqConfig.maxRedirects = 0;\n            platformReqConfig.headers = {\n                Authorization: `Bearer ${idToken}`,\n                'accept-language': 'en-US,en'\n            };\n        }\n        if (userAgent) {\n            platformReqConfig.headers['User-Agent'] = userAgent;\n        }\n        // If mock user has been set, set X-Disable-C2ForceAuth to bypass forced C2 Auth\n        if (mockUser) {\n            platformReqConfig.headers['X-Disable-C2ForceAuth'] = true;\n        }\n        return axios(Url.format(platformUrl), platformReqConfig)\n            .then(response => {\n                return response.data;\n            })\n            .catch((error: AxiosError) => {\n                if (error.response && error.response.status === 302) {\n                    return getAuthorization(requestContext, url);\n                }\n                if (retry && error.response && error.response.status === 403) {\n                    return getServerPageResponse(url, telemetry, requestContext, '', userAgent, mockUser, false);\n                }\n                telemetry.log(LogLevel.Error, EXCEPTION_NO1RFRESPONSE, { exception: error });\n\n                if (error.response && error.response.status) {\n                    throw new HttpException(error.response.status, EXCEPTION_NO1RFRESPONSE);\n                } else {\n                    throw new Error(EXCEPTION_NO1RFRESPONSE);\n                }\n            });\n    };\n\n    export const parsePayload = (content: string | object) => {\n        const pageResponse = <IPageResponse>(typeof content === 'string' ? JSON.parse(content) : content);\n        pageResponse.slots = getFlattenedListOfModules(pageResponse);\n        return pageResponse;\n    };\n\n    /**\n     * Sets the pageResponse object by either using mock if mock query param is supplied\n     * or by requesting the page response object from OneRF\n     *\n     * @param req Request\n     * @param res Response\n     * @param serverHost OneRF server host\n     */\n    export const handleGetPageResponse = async (req: Request, res: Response, serverHost: string) => {\n        let userToken: string | undefined;\n        let modifiedSignInUrl: string | undefined;\n        let modifiedSignOutUrl: string | undefined;\n\n        // If in local dev mode and credentials are defined get user mock token and modify sign in and sign out url\n        // to user mockUser query param\n        if (process.env.NODE_ENV === 'development' && msdyn365Commerce.localCredentials) {\n            userToken = await getMockUserToken(msdyn365Commerce.localCredentials, req.query);\n            modifiedSignInUrl = Url.format({\n                protocol: 'https',\n                hostname: 'localhost',\n                port: process.env.PORT,\n                pathname: req.path,\n                query: { ...req.query, ...{ mockUser: 'true' } }\n            });\n            modifiedSignOutUrl = Url.format({\n                protocol: 'https',\n                hostname: 'localhost',\n                port: process.env.PORT,\n                pathname: req.path,\n                query: { ...req.query, ...{ mockUser: 'false' } }\n            });\n        }\n        // @ts-ignore\n        const idToken = req.session && req.session.id_token;\n        const userAgent = req.header('User-Agent');\n        const serverUrl = {\n            serverHost,\n            pathname: req.path,\n            query: req.query\n        };\n        const content = await getPageResponse(\n            res.locals.telemetry,\n            res.locals.requestContext,\n            idToken,\n            userAgent,\n            serverUrl,\n            userToken !== undefined\n        );\n\n        if (process.env.NODE_ENV === 'development') {\n            // If no page response was set as result of non-C2 signed in user, send message back indicating mockUser query param should be used\n            // @ts-ignore - statusCode is not a typed property but is part of the returned pageResponse from OneRF\n            if (!content.pageRoot && content?.statusCode === 302) {\n                res.status(200).send(\n                    `Unable to retrieve server page resonse for path ${req.path} because it requires a signed in user to access. Use 'mockUser' query param to mock a signed in C2 user.`\n                );\n            }\n\n            // If a user token has been generated through credentials.json and ROPC, inject it\n            if (content.renderingContext && userToken) {\n                injectUserToken(content.renderingContext, userToken, msdyn365Commerce.localCredentials?.customerAccountNumber);\n            }\n\n            // Modify the sign in and sign out url if local sign in is enabled to make use of the mockUser query param\n            if (msdyn365Commerce.localCredentials && content.renderingContext.userContext) {\n                content.renderingContext.userContext.signInUrl = modifiedSignInUrl;\n                content.renderingContext.userContext.signOutUrl = modifiedSignOutUrl;\n            }\n\n        }\n\n        res.locals.pageResponse = content;\n    };\n\n    /**\n     * Controls the mock user token that is added to the rendering context to enable signed in behavior during local development\n     * Uses ROPC auth flow to get an access token to impersonate signed in status. Retruns the user impersonation access token\n     *\n     * @param credentials Credentials config object containing config information required to make the ROPC request\n     * @param query query param object\n     */\n    const getMockUserToken = async (credentials: ILocalCredentials, query: IDictionary<string>): Promise<string | undefined> => {\n        // Flush token out if mockUser query param is set to false, otherwise use that to fetch the token for user\n        if (query?.mockUser) {\n            if (query.mockUser === 'false') {\n                delete credentials.accessToken;\n                return;\n            }\n            await getUserInformationROPC(credentials, query.mockUser);\n            return credentials.accessToken;\n        }\n        // If access token has already been fetched and set, use it for any following requests until it is flushed out\n        if (credentials.expiryDate && credentials.currentUser) {\n            // If the token has expired, fetch the token again for current user\n            if (Math.floor(Date.now() / 1000) >= credentials.expiryDate) {\n                await getUserInformationROPC(credentials, credentials.currentUser);\n            }\n            return credentials.accessToken;\n        }\n    };\n\n    // Injects the user token into rendering context user information if available\n    const injectUserToken = (\n        renderingContext: IRenderingContext,\n        token: string,\n        customerAccountNumber?: string\n    ) => {\n        const decodedToken: IJWTDecoded = jwt_decode(token);\n        renderingContext.userContext = {\n            ...renderingContext.userContext,\n            ...{\n                token: token,\n                isAuthenticated: true,\n                emailAddress: decodedToken.emails[0] || '',\n                firstName: decodedToken.given_name || '',\n                lastName: decodedToken.family_name || '',\n                name: `${decodedToken.given_name} ${decodedToken.family_name}`,\n                signinName: `${decodedToken.given_name} ${decodedToken.family_name}`,\n                customerAccountNumber: customerAccountNumber || ''\n            }\n        };\n    };\n\n    /**\n     * Retrieves a page response from server or Mock data\n     */\n    export const getPageResponse = async (\n        telemetry: InternalTelemetry,\n        requestContext: IRequestContext,\n        idToken: string,\n        userAgent: string | undefined,\n        serverUrlConfigs: { serverHost: string; pathname: string; query: string },\n        mockUser: boolean\n    ): Promise<IPageResponse> => {\n        if (requestContext && requestContext.query && requestContext.query.mock) {\n            return getMockPayload(requestContext.query.mock);\n        }\n\n        if (!serverUrlConfigs.serverHost) {\n            telemetry.log(LogLevel.Error, MESSAGE_NO_SERVER_ENDPOINT_SET);\n        }\n        const serverUrl = Url.format({ protocol: 'https', hostname: serverUrlConfigs.serverHost });\n        const serverPageUrl = Url.format({\n            protocol: 'https',\n            hostname: serverUrlConfigs.serverHost,\n            pathname: serverUrlConfigs.pathname,\n            query: serverUrlConfigs.query\n        });\n\n        telemetry.log(LogLevel.Debug, MESSAGE_SERVER_ENDPOINT, { values: [asSystemMetadata(serverUrl)] });\n        telemetry.log(LogLevel.Debug, MESSAGE_GETTING_PAGE_RESPONSE, { values: [asSystemMetadata(serverPageUrl)] });\n\n        const resp = await getServerPageResponse(serverPageUrl, telemetry, requestContext, idToken, userAgent, mockUser);\n\n        return parsePayload(resp);\n    };\n}\n\nexport default PageContractApiService;\n"],"sourceRoot":""},"metadata":{},"sourceType":"module"}