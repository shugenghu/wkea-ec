{"ast":null,"code":"import _classCallCheck from \"@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/esm/createClass\";\nimport _inherits from \"@babel/runtime/helpers/esm/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/esm/getPrototypeOf\";\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Date.prototype.toString.call(Reflect.construct(Date, [], function () {})); return true; } catch (e) { return false; } }\n\nimport { __decorate } from \"tslib\";\n/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { Button, getPayloadObject, getTelemetryAttributes, TelemetryConstant } from '@msdyn365-commerce-modules/utilities';\nimport { observer } from 'mobx-react';\nimport * as React from 'react';\n/**\n *\n * NavIcon component\n * @extends {React.PureComponent<INavIconProps>}\n */\n\nvar NavIcon = /*#__PURE__*/function (_React$Component) {\n  _inherits(NavIcon, _React$Component);\n\n  var _super = _createSuper(NavIcon);\n\n  function NavIcon(props) {\n    var _this;\n\n    _classCallCheck(this, NavIcon);\n\n    _this = _super.call(this, props);\n    var payLoad = getPayloadObject('click', props.telemetryContent, TelemetryConstant.NavIcon);\n    _this.attributes = getTelemetryAttributes(props.telemetryContent, payLoad);\n    return _this;\n  }\n\n  _createClass(NavIcon, [{\n    key: \"render\",\n    value: function render() {\n      return /*#__PURE__*/React.createElement(Button, Object.assign({\n        className: 'ms-header__nav-icon',\n        onClick: this.props.toggleNavBar,\n        title: this.props.resources.mobileHamburgerAriaLabel,\n        \"aria-label\": this.props.resources.mobileHamburgerAriaLabel,\n        \"aria-expanded\": this.props.isExpanded,\n        \"aria-controls\": this.props.targetId\n      }, this.attributes));\n    }\n  }]);\n\n  return NavIcon;\n}(React.Component);\n\nNavIcon = __decorate([observer], NavIcon);\nexport { NavIcon };","map":{"version":3,"sources":["/Users/User/Documents/wkea-ec/Msdyn365.Commerce.Online/node_modules/source-map-loader/index.js!/Users/User/Documents/wkea-ec/Msdyn365.Commerce.Online/src/modules/header/components/nav-icon.tsx"],"names":[],"mappings":";;;;;;;;;;;AAAA;;;AAGgG;;AAChG,SAAS,MAAT,EAAiB,gBAAjB,EAAmC,sBAAnC,EAA8E,iBAA9E,QAAuG,sCAAvG;AAEA,SAAS,QAAT,QAAyB,YAAzB;AACA,OAAO,KAAK,KAAZ,MAAuB,OAAvB;AAWA;;;;AAIG;;AAGH,IAAa,OAAb;AAAA;;AAAA;;AAII,mBAAY,KAAZ,EAAgC;AAAA;;AAAA;;AAC5B,8BAAM,KAAN;AACA,QAAM,OAAO,GAAG,gBAAgB,CAAC,OAAD,EAAU,KAAK,CAAC,gBAAhB,EAAmC,iBAAiB,CAAC,OAArD,CAAhC;AACA,UAAK,UAAL,GAAkB,sBAAsB,CAAC,KAAK,CAAC,gBAAP,EAA0B,OAA1B,CAAxC;AAH4B;AAI/B;;AARL;AAAA;AAAA,6BAUiB;AACT,0BACI,KAAA,CAAA,aAAA,CAAC,MAAD,EAAO,MAAA,CAAA,MAAA,CAAA;AACH,QAAA,SAAS,EAAC,qBADP;AAEH,QAAA,OAAO,EAAE,KAAK,KAAL,CAAW,YAFjB;AAGH,QAAA,KAAK,EAAE,KAAK,KAAL,CAAW,SAAX,CAAqB,wBAHzB;AAGiD,sBACxC,KAAK,KAAL,CAAW,SAAX,CAAqB,wBAJ9B;AAIsD,yBAC1C,KAAK,KAAL,CAAW,UALvB;AAKiC,yBACrB,KAAK,KAAL,CAAW;AANvB,OAAA,EAOC,KAAK,UAPN,CAAP,CADJ;AAWH;AAtBL;;AAAA;AAAA,EAA6B,KAAK,CAAC,SAAnC,CAAA;;AAAa,OAAO,GAAA,UAAA,CAAA,CADnB,QACmB,CAAA,EAAP,OAAO,CAAP;SAAA,O","sourcesContent":["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nimport { Button, getPayloadObject, getTelemetryAttributes, ITelemetryContent, TelemetryConstant } from '@msdyn365-commerce-modules/utilities';\nimport * as Msdyn365 from '@msdyn365-commerce/core';\nimport { observer } from 'mobx-react';\nimport * as React from 'react';\nimport { IHeaderResources } from '../header.props.autogenerated';\n\nexport interface INavIconProps {\n    resources: IHeaderResources;\n    isExpanded: boolean;\n    targetId: string;\n    telemetryContent?: ITelemetryContent;\n    toggleNavBar(): void;\n}\n\n/**\n *\n * NavIcon component\n * @extends {React.PureComponent<INavIconProps>}\n */\n\n@observer\nexport class NavIcon extends React.Component<INavIconProps> {\n\n    private attributes?: Msdyn365.IDictionary<string>;\n\n    constructor(props: INavIconProps) {\n        super(props);\n        const payLoad = getPayloadObject('click', props.telemetryContent!, TelemetryConstant.NavIcon);\n        this.attributes = getTelemetryAttributes(props.telemetryContent!, payLoad);\n    }\n\n    public render():JSX.Element {\n        return (\n            <Button\n                className='ms-header__nav-icon'\n                onClick={this.props.toggleNavBar}\n                title={this.props.resources.mobileHamburgerAriaLabel}\n                aria-label={this.props.resources.mobileHamburgerAriaLabel}\n                aria-expanded={this.props.isExpanded}\n                aria-controls={this.props.targetId}\n                {...this.attributes}\n            />\n        );\n    }\n}"],"sourceRoot":""},"metadata":{},"sourceType":"module"}