{"ast":null,"code":"import _defineProperty from\"@babel/runtime/helpers/esm/defineProperty\";import _classCallCheck from\"@babel/runtime/helpers/esm/classCallCheck\";import _createClass from\"@babel/runtime/helpers/esm/createClass\";import _inherits from\"@babel/runtime/helpers/esm/inherits\";import _possibleConstructorReturn from\"@babel/runtime/helpers/esm/possibleConstructorReturn\";import _getPrototypeOf from\"@babel/runtime/helpers/esm/getPrototypeOf\";function ownKeys(object,enumerableOnly){var keys=Object.keys(object);if(Object.getOwnPropertySymbols){var symbols=Object.getOwnPropertySymbols(object);if(enumerableOnly)symbols=symbols.filter(function(sym){return Object.getOwnPropertyDescriptor(object,sym).enumerable;});keys.push.apply(keys,symbols);}return keys;}function _objectSpread(target){for(var i=1;i<arguments.length;i++){var source=arguments[i]!=null?arguments[i]:{};if(i%2){ownKeys(Object(source),true).forEach(function(key){_defineProperty(target,key,source[key]);});}else if(Object.getOwnPropertyDescriptors){Object.defineProperties(target,Object.getOwnPropertyDescriptors(source));}else{ownKeys(Object(source)).forEach(function(key){Object.defineProperty(target,key,Object.getOwnPropertyDescriptor(source,key));});}}return target;}function _createSuper(Derived){var hasNativeReflectConstruct=_isNativeReflectConstruct();return function _createSuperInternal(){var Super=_getPrototypeOf(Derived),result;if(hasNativeReflectConstruct){var NewTarget=_getPrototypeOf(this).constructor;result=Reflect.construct(Super,arguments,NewTarget);}else{result=Super.apply(this,arguments);}return _possibleConstructorReturn(this,result);};}function _isNativeReflectConstruct(){if(typeof Reflect===\"undefined\"||!Reflect.construct)return false;if(Reflect.construct.sham)return false;if(typeof Proxy===\"function\")return true;try{Date.prototype.toString.call(Reflect.construct(Date,[],function(){}));return true;}catch(e){return false;}}import{__decorate}from\"tslib\";import classnames from'classnames';import{computed,observable,reaction,set}from'mobx';import{observer}from'mobx-react';import*as React from'react';import{withModuleState}from'@msdyn365-commerce-modules/checkout-utilities';import{getTelemetryObject}from'@msdyn365-commerce-modules/utilities';import{AddressCommon}from'../../common/address-common';import{AddressFormat}from'../../common/address-format';import{AddressItemType}from'../../common/address-format.data';import{AddressMetaData}from'../../common/address-meta-data';import{AddressOperation,AddressType}from'../../common/address-module.data';import{AddressAddUpdate}from'../../common/components/address-add';import AddressBillingCheckoxComponent from'../../common/components/address-billing-checkbox';import AddressBillingHeadingComponent from'../../common/components/address-billing-heading';import{AddressShow}from'../../common/components/address-show';var CheckoutBillingAddress=/*#__PURE__*/function(_React$Component){_inherits(CheckoutBillingAddress,_React$Component);var _super=_createSuper(CheckoutBillingAddress);function CheckoutBillingAddress(props){var _this;_classCallCheck(this,CheckoutBillingAddress);_this=_super.call(this,props);_this.countryRegionId='USA';_this.defaultAddressType=6;_this._renderAddOrUpdateAddress=function(){return AddressAddUpdate({resources:_this.resources,addressType:AddressType.Billing,addressFormat:_this.addressFormat.getAddressFormat(_this.addUpdateAddress.ThreeLetterISORegionName||_this.countryRegionId),defaultCountryRegionId:_this.countryRegionId,defaultAddressType:_this.defaultAddressType,selectedAddress:_this.addUpdateAddress,validationError:_this.validationError,addressActionResponse:_this.addressActionResponse,dropdownDisplayData:_this.addressFormat.getPrefilledAddressDropdownData(_this.resources.addressStateDefaultSelectionText,_this.stateProvinceInfo),telemetryContent:_this.telemetryContent,onInputChange:_this._onAddressAddUpdateInputChange,onDropdownChange:_this._onAddressAddUpdateDropdownChange,hasExternalSubmitGroup:_this.props.moduleState.hasExternalSubmitGroup,onSave:_this._onSubmitAddress,onCancel:_this._resetView});};_this._onCountryChange=function(countryRegionId){_this.countryRegionId=countryRegionId;set(_this.addUpdateAddress,_defineProperty({},'ThreeLetterISORegionName',countryRegionId));};_this._getAddressFormatExcludeList=function(){var config=_this.props.config;var addressFormatExcludeList=[];if(!config.showAddressType){addressFormatExcludeList.push(AddressItemType.AddressTypeValue);}addressFormatExcludeList.push(AddressItemType.IsPrimary);return addressFormatExcludeList;};_this.onAddressAddUpdate=function(name,value){set(_this.addUpdateAddress,_defineProperty({},name,value));_this.addressFormat.validateAddressFormat(_this.addUpdateAddress,_this.validationError,_this.countryRegionId,name);};_this._onAddressAddUpdateInputChange=function(event){var value=(event.target.value||'').replace(new RegExp('[<>]','gi'),'');_this.onAddressAddUpdate(event.target.name,value);};_this._onAddressAddUpdateDropdownChange=function(event){_this.onAddressAddUpdate(event.target.name,event.target.value);if(event.target.name===AddressItemType[AddressItemType.ThreeLetterISORegionName]){_this._onCountryChange(event.target.value);}};_this._getStateProvinces=function(){if(!_this.countryRegionId||!(_this.currentOperation===AddressOperation.Add||_this.currentOperation===AddressOperation.Update)){return;}_this.addressCommon.getStateProvinces(_this.countryRegionId).then(function(result){var stateInfo=result.some(function(state){return state.StateId===_this.addUpdateAddress.State;});if(!stateInfo){set(_this.addUpdateAddress,_defineProperty({},'State',''));}_this.stateProvinceInfo=result;});};_this._initModuleState=function(){_this.props.moduleState.init({status:_this.isBillingAddressRequried?'updating':'disabled',onEdit:_this.onEdit,onCancel:_this.onCancel,onSubmit:_this.onSubmit});var _ref=_this.props.data.checkout.result||{},billingAddress=_ref.billingAddress,isBillingAddressSameAsShippingAddress=_ref.isBillingAddressSameAsShippingAddress;if(_this.isBillingAddressRequried){if(billingAddress){_this.isBillingAddressSameAsShipping=isBillingAddressSameAsShippingAddress||false;_this._updateCurrentOperation(AddressOperation.Show,billingAddress);_this._updateModuleState();}else if(_this.isCartContainsItemsForShipping){_this.isBillingAddressSameAsShipping=true;_this._updateCurrentOperation(AddressOperation.Show,_this.shippingAddress);}else{_this.isBillingAddressSameAsShipping=false;_this._updateCurrentOperation(AddressOperation.Add);}}};_this._onBillingAddressSameAsShippingChange=function(event){_this.isBillingAddressSameAsShipping=event.currentTarget.checked;if(_this.isBillingAddressSameAsShipping&&_this.shippingAddress){_this._updateCurrentOperation(AddressOperation.Show,_this.shippingAddress);}else{_this._updateCurrentOperation(AddressOperation.Add,_this.billingAddress);}};_this._onSubmitAddress=function(){if(!_this.addressFormat.validateAddressFormat(_this.addUpdateAddress,_this.validationError,_this.countryRegionId)){_this.props.moduleState.setHasError(true);return;}_this._setBillingAddress(_this.addUpdateAddress);_this._updateCurrentOperation(AddressOperation.Show,_this.addUpdateAddress);_this._updateModuleState();};_this.onSubmit=function(){switch(_this.currentOperation){case AddressOperation.Add:case AddressOperation.Update:_this._onSubmitAddress();break;case AddressOperation.Show:if(_this.selectedAddress){_this._setBillingAddress(_this.selectedAddress);_this._updateCurrentOperation(AddressOperation.Show,_this.selectedAddress);_this._updateModuleState();}break;default:_this.props.telemetry.error('Invalid operation');}};_this.onCancel=function(){switch(_this.currentOperation){case AddressOperation.Add:case AddressOperation.Update:_this._resetView();break;case AddressOperation.Show:_this._resetView();break;default:_this.props.telemetry.error('Invalid operation');}};_this.onEdit=function(){if(_this.isBillingAddressSameAsShipping&&_this.shippingAddress&&_this.isCartContainsItemsForShipping){_this._updateCurrentOperation(AddressOperation.Show,_this.shippingAddress);}else{_this._updateCurrentOperation(AddressOperation.Add,_this.billingAddress);}_this.props.moduleState.onUpdating();};_this._setBillingAddress=function(address){if(_this.props.data.checkout.result){var newBillingAddress=_objectSpread({},address);if(address.ThreeLetterISORegionName&&!newBillingAddress.TwoLetterISORegionName){newBillingAddress.TwoLetterISORegionName=_this.addressFormat.getTwoLetterISORegionName(address.ThreeLetterISORegionName);}_this.props.data.checkout.result.updateBillingAddress({newBillingAddress:newBillingAddress,additionalProperties:{isBillingAddressSameAsShippingAddress:_this.isBillingAddressSameAsShipping}});}};_this._resetView=function(){_this._updateCurrentOperation(AddressOperation.Show,_this.billingAddress);_this._updateModuleState();};_this._updateCurrentOperation=function(operation,selectedAddress){_this.currentOperation=operation;_this.selectedAddress=selectedAddress;if(_this.currentOperation===AddressOperation.Add||_this.currentOperation===AddressOperation.Update){_this.addUpdateAddress=_objectSpread({},_this.selectedAddress)||{};set(_this.addUpdateAddress,_defineProperty({},'ThreeLetterISORegionName',_this.addUpdateAddress.ThreeLetterISORegionName||_this.countryRegionId));set(_this.addUpdateAddress,_defineProperty({},'AddressTypeValue',_this.addUpdateAddress.AddressTypeValue||_this.defaultAddressType));}};_this._updateModuleState=function(){if(_this.currentOperation===AddressOperation.Show){_this.props.moduleState.onReady();}else{_this.props.moduleState.onUpdating();}};var _this$props=_this.props,context=_this$props.context,data=_this$props.data,resources=_this$props.resources,telemetry=_this$props.telemetry;_this.addUpdateAddress={};_this.validationError={};_this.isBillingAddressSameAsShipping=false;_this.resources=resources;_this.currentOperation=AddressOperation.List;_this.addressPurposes=data.addressPurposes.result||[];_this.countryRegions=data.countryRegions.result||[];_this.stateProvinceInfo=data.countryStates.result||[];_this.addressCommon=new AddressCommon(context,resources,telemetry);_this.addressFormat=new AddressFormat(_this.countryRegions,new AddressMetaData(_objectSpread({},resources),_this._getAddressFormatExcludeList()),_this.addressPurposes);_this.telemetryContent=getTelemetryObject(_this.props.context.request.telemetryPageName,_this.props.friendlyName,_this.props.telemetry);return _this;}_createClass(CheckoutBillingAddress,[{key:\"componentDidMount\",value:function componentDidMount(){var _this2=this;this.props.data.checkout.then(function(){_this2._setDefaultCountryRegionId();_this2._initModuleState();});reaction(function(){return _this2.countryRegionId;},function(){return _this2._getStateProvinces();});reaction(function(){return _this2.currentOperation;},function(){_this2._getStateProvinces();});reaction(function(){return _this2.props.data.checkout.result&&_this2.props.data.checkout.result.shippingAddress;},function(shippingAddress){if(_this2.props.moduleState.isUpdating){if(shippingAddress&&_this2.isBillingAddressSameAsShipping){_this2.isBillingAddressSameAsShipping=true;_this2._updateCurrentOperation(AddressOperation.Show,shippingAddress);}else if(shippingAddress&&_this2.isBillingAddressSameAsShipping){_this2._updateCurrentOperation(AddressOperation.Show,shippingAddress);}}});reaction(function(){return _this2.isBillingAddressRequried;},function(isBillingAddressRequried){if(isBillingAddressRequried){if(_this2.props.moduleState.isDisabled){_this2.onEdit();}}else{var _this2$props$data$che;(_this2$props$data$che=_this2.props.data.checkout.result)===null||_this2$props$data$che===void 0?void 0:_this2$props$data$che.removeBillingAddress({});_this2.props.moduleState.onDisable();}});}},{key:\"render\",value:function render(){if(!this.isBillingAddressRequried){return null;}var resources=this.props.resources;var _this$props2=this.props,renderView=_this$props2.renderView,config=_this$props2.config;var viewProps=_objectSpread(_objectSpread({},this.props),{},{currentOperation:this.currentOperation,selectedAddress:this.selectedAddress,addUpdateAddress:this.addUpdateAddress,countryRegionId:this.countryRegionId,stateProvinceInfo:this.stateProvinceInfo,validationError:this.validationError,addressActionResponse:this.addressActionResponse,className:config.className,viewState:{isShowAddress:this.selectedAddress&&this.currentOperation===AddressOperation.Show,isShowAddOrUpdateAddress:this.currentOperation!==AddressOperation.Show,isShowSameAsShippingCheckbox:this.isCartContainsItemsForShipping&&this.props.moduleState.isUpdating},CheckoutBillingAddress:{moduleProps:this.props,className:classnames('ms-checkout-billing-address',config.className)},heading:/*#__PURE__*/React.createElement(AddressBillingHeadingComponent,Object.assign({},{text:resources.addressBillingAddressHeading})),sameAsShippingCheckbox:/*#__PURE__*/React.createElement(AddressBillingCheckoxComponent,Object.assign({},{isChecked:this.isBillingAddressSameAsShipping,type:'checkbox',value:'true',ariaLabel:resources.addressSameAsShippingAddressAriaLabel,text:resources.addressSameAsShippingAddressText,telemetryContent:this.telemetryContent,onChange:this._onBillingAddressSameAsShippingChange})),showAddress:this._renderShowAddress(),showAddOrUpdateAddress:this._renderAddOrUpdateAddress()});return renderView(viewProps);}},{key:\"_renderShowAddress\",value:function _renderShowAddress(){if(this.selectedAddress){return AddressShow({address:this.selectedAddress,addressFormat:this.addressFormat.getAddressFormat(this.selectedAddress.ThreeLetterISORegionName||''),addressPurposes:this.addressPurposes});}return null;}},{key:\"_setDefaultCountryRegionId\",value:function _setDefaultCountryRegionId(){var request=this.props.context.request;var market=request&&request.channel&&request.channel.ChannelCountryRegionISOCode;this.countryRegionId=this.addressCommon.getDefaultCountryRegionId(this.countryRegionId,this.countryRegions,market);}},{key:\"isCartContainsItemsForShipping\",get:function get(){var request=this.props.context.request;var pickupDeliveryModeCode=request&&request.channel&&request.channel.PickupDeliveryModeCode;return(this.props.data.checkout.result&&this.props.data.checkout.result.checkoutCart.cart.CartLines||[]).some(function(cartLine){return cartLine.DeliveryMode&&cartLine.DeliveryMode!==''?cartLine.DeliveryMode!==pickupDeliveryModeCode:cartLine;});}},{key:\"billingAddress\",get:function get(){return this.props.data.checkout.result&&this.props.data.checkout.result.billingAddress;}},{key:\"shippingAddress\",get:function get(){return this.props.data.checkout.result&&this.props.data.checkout.result.shippingAddress;}},{key:\"getLoyaltyAmount\",get:function get(){var checkoutState=this.props.data.checkout.result;return checkoutState&&checkoutState.loyaltyAmount?checkoutState.loyaltyAmount:0;}},{key:\"getGiftCardTotalAmount\",get:function get(){var checkoutState=this.props.data.checkout.result;if(!checkoutState||!checkoutState.giftCardExtends){return 0;}return checkoutState.giftCardExtends.reduce(function(count,giftCard){return count+(giftCard.Balance||0);},0);}},{key:\"shouldPaidByCard\",get:function get(){var _this$props3=this.props,checkout=_this$props3.data.checkout,config=_this$props3.config;if(!checkout.result){return false;}var checkoutResult=checkout.result;var cart=checkoutResult.checkoutCart.cart;if(!cart||!cart.CartLines||!cart.CartLines.length){return false;}var paymentTenderType=checkoutResult.paymentTenderType,tokenizedPaymentCard=checkoutResult.tokenizedPaymentCard;var isPaidByOtherPaymentSource=config.paymenTenderType!==paymentTenderType&&tokenizedPaymentCard;var amountDue=(cart.TotalAmount||0)-this.getGiftCardTotalAmount-this.getLoyaltyAmount;return amountDue>0&&!isPaidByOtherPaymentSource;}},{key:\"isBillingAddressRequried\",get:function get(){return this.shouldPaidByCard;}}]);return CheckoutBillingAddress;}(React.Component);__decorate([observable],CheckoutBillingAddress.prototype,\"currentOperation\",void 0);__decorate([observable],CheckoutBillingAddress.prototype,\"isBillingAddressSameAsShipping\",void 0);__decorate([observable],CheckoutBillingAddress.prototype,\"selectedAddress\",void 0);__decorate([observable],CheckoutBillingAddress.prototype,\"addUpdateAddress\",void 0);__decorate([observable],CheckoutBillingAddress.prototype,\"countryRegionId\",void 0);__decorate([observable],CheckoutBillingAddress.prototype,\"stateProvinceInfo\",void 0);__decorate([observable],CheckoutBillingAddress.prototype,\"validationError\",void 0);__decorate([observable],CheckoutBillingAddress.prototype,\"addressActionResponse\",void 0);__decorate([computed],CheckoutBillingAddress.prototype,\"isCartContainsItemsForShipping\",null);__decorate([computed],CheckoutBillingAddress.prototype,\"billingAddress\",null);__decorate([computed],CheckoutBillingAddress.prototype,\"shippingAddress\",null);__decorate([computed],CheckoutBillingAddress.prototype,\"getLoyaltyAmount\",null);__decorate([computed],CheckoutBillingAddress.prototype,\"getGiftCardTotalAmount\",null);__decorate([computed],CheckoutBillingAddress.prototype,\"shouldPaidByCard\",null);__decorate([computed],CheckoutBillingAddress.prototype,\"isBillingAddressRequried\",null);CheckoutBillingAddress=__decorate([withModuleState,observer],CheckoutBillingAddress);export default CheckoutBillingAddress;","map":{"version":3,"sources":["modules/checkout-billing-address/checkout-billing-address.tsx"],"names":[],"mappings":"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","sourcesContent":["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nimport classnames from 'classnames';\nimport { computed, observable, reaction, set } from 'mobx';\nimport { observer } from 'mobx-react';\nimport * as React from 'react';\n\nimport { IModuleStateProps, withModuleState } from '@msdyn365-commerce-modules/checkout-utilities';\nimport { getTelemetryObject, IModuleProps, ITelemetryContent } from '@msdyn365-commerce-modules/utilities';\nimport {\n    Address, AddressPurpose, CountryRegionInfo, StateProvinceInfo\n} from '@msdyn365-commerce/retail-proxy';\n\nimport { IGiftCardExtend } from '@msdyn365-commerce/global-state';\nimport { AddressCommon } from '../../common/address-common';\nimport { AddressFormat } from '../../common/address-format';\nimport { AddressItemType } from '../../common/address-format.data';\nimport { AddressMetaData } from '../../common/address-meta-data';\nimport {\n    AddressOperation, AddressType, IAddressResource, IAddressResponse\n} from '../../common/address-module.data';\nimport { AddressAddUpdate, IAddressAddUpdateProps } from '../../common/components/address-add';\nimport AddressBillingCheckoxComponent from '../../common/components/address-billing-checkbox';\nimport AddressBillingHeadingComponent from '../../common/components/address-billing-heading';\nimport { AddressShow, IAddressShowProps } from '../../common/components/address-show';\nimport { ICheckoutBillingAddressData } from './checkout-billing-address.data';\nimport { ICheckoutBillingAddressProps } from './checkout-billing-address.props.autogenerated';\n\nexport interface IProps extends ICheckoutBillingAddressProps<ICheckoutBillingAddressData>, IModuleStateProps { }\n\nexport interface ICheckoutBillingAddressViewState {\n    isShowAddress: boolean;\n    isShowAddOrUpdateAddress: boolean;\n    isShowSameAsShippingCheckbox: boolean;\n}\n\nexport interface ICheckoutBillingAddressViewProps extends IProps {\n    className: string;\n    currentOperation: AddressOperation;\n    selectedAddress?: Address;\n    addUpdateAddress: Address;\n    countryRegionId: string;\n    stateProvinceInfo?: StateProvinceInfo[];\n    validationError: object;\n    addressActionResponse?: IAddressResponse;\n    viewState: ICheckoutBillingAddressViewState;\n    CheckoutBillingAddress: IModuleProps;\n    sameAsShippingCheckbox: React.ReactNode;\n    heading: React.ReactNode;\n    showAddress: IAddressShowProps;\n    showAddOrUpdateAddress: IAddressAddUpdateProps;\n}\n\n/**\n *\n * CheckoutBillingAddress component\n * @extends {React.PureComponent<ICheckoutBillingAddressProps<ICheckoutBillingAddressData>>}\n */\n// @ts-ignore\n@withModuleState\n@observer\nclass CheckoutBillingAddress extends React.Component<IProps> {\n\n    @observable private currentOperation: AddressOperation;\n    @observable private isBillingAddressSameAsShipping: boolean;\n    @observable private selectedAddress?: Address;\n    @observable private addUpdateAddress: Address;\n    @observable private countryRegionId: string = 'USA';\n    @observable private stateProvinceInfo?: StateProvinceInfo[];\n    @observable private validationError: object;\n    @observable private addressActionResponse?: IAddressResponse;\n\n    private addressCommon: AddressCommon;\n    private addressFormat: AddressFormat;\n    private countryRegions: CountryRegionInfo[];\n    private addressPurposes: AddressPurpose[];\n    private resources: IAddressResource;\n    private defaultAddressType: number = 6; // Default to Home\n    // private addRenderRef: React.RefObject<AddressAdd>;\n    private telemetryContent?: ITelemetryContent;\n\n    constructor(props: IProps) {\n        super(props);\n        const { context, data, resources, telemetry } = this.props;\n\n        this.addUpdateAddress = {};\n        this.validationError = {};\n        this.isBillingAddressSameAsShipping = false;\n        this.resources = resources;\n        this.currentOperation = AddressOperation.List;\n        this.addressPurposes = data.addressPurposes.result || [];\n        this.countryRegions = data.countryRegions.result || [];\n        this.stateProvinceInfo = data.countryStates.result || [];\n        this.addressCommon = new AddressCommon(context, resources, telemetry);\n        this.addressFormat = new AddressFormat(this.countryRegions, new AddressMetaData({ ...resources }, this._getAddressFormatExcludeList()), this.addressPurposes);\n        this.telemetryContent = getTelemetryObject(this.props.context.request.telemetryPageName!, this.props.friendlyName, this.props.telemetry);\n        // this.addRenderRef = React.createRef();\n    }\n\n    public componentDidMount(): void {\n        this.props.data.checkout.then(() => {\n            this._setDefaultCountryRegionId();\n            this._initModuleState();\n        });\n\n        reaction(\n            () => this.countryRegionId,\n            () => this._getStateProvinces()\n        );\n\n        reaction(\n            () => this.currentOperation,\n            () => {\n                this._getStateProvinces();\n            }\n        );\n\n        reaction(\n            () => this.props.data.checkout.result && this.props.data.checkout.result.shippingAddress,\n            shippingAddress => {\n                if (this.props.moduleState.isUpdating) {\n                    if (shippingAddress && this.isBillingAddressSameAsShipping) {\n                        this.isBillingAddressSameAsShipping = true;\n                        this._updateCurrentOperation(AddressOperation.Show, shippingAddress);\n                    } else if (shippingAddress && this.isBillingAddressSameAsShipping) {\n                        this._updateCurrentOperation(AddressOperation.Show, shippingAddress);\n                    }\n                }\n            }\n        );\n\n        reaction(\n            () => this.isBillingAddressRequried,\n            isBillingAddressRequried => {\n                if (isBillingAddressRequried) {\n                    if (this.props.moduleState.isDisabled) {\n                        this.onEdit();\n                    }\n                } else {\n                    // tslint:disable-next-line:no-floating-promises\n                    this.props.data.checkout.result?.removeBillingAddress({});\n                    this.props.moduleState.onDisable();\n                }\n            }\n        );\n    }\n\n    public render(): JSX.Element | null {\n        if (!(this.isBillingAddressRequried)) {\n            return null;\n        }\n\n        const { resources } = this.props;\n\n        const { renderView, config } = this.props;\n\n        const viewProps = {\n            ...this.props,\n            currentOperation: this.currentOperation,\n            selectedAddress: this.selectedAddress,\n            addUpdateAddress: this.addUpdateAddress,\n            countryRegionId: this.countryRegionId,\n            stateProvinceInfo: this.stateProvinceInfo,\n            validationError: this.validationError,\n            addressActionResponse: this.addressActionResponse,\n            className: config.className,\n            viewState: {\n                isShowAddress: this.selectedAddress && this.currentOperation === AddressOperation.Show,\n                isShowAddOrUpdateAddress: this.currentOperation !== AddressOperation.Show,\n                isShowSameAsShippingCheckbox: this.isCartContainsItemsForShipping && this.props.moduleState.isUpdating\n            },\n            CheckoutBillingAddress: {\n                moduleProps: this.props,\n                className: classnames('ms-checkout-billing-address', config.className)\n            },\n            heading: <AddressBillingHeadingComponent {...{ text: resources.addressBillingAddressHeading }} />,\n            // tslint:disable-next-line: max-line-length\n            sameAsShippingCheckbox: (\n                <AddressBillingCheckoxComponent\n                    {\n                    ...{\n                        isChecked: this.isBillingAddressSameAsShipping,\n                        type: 'checkbox',\n                        value: 'true',\n                        ariaLabel: resources.addressSameAsShippingAddressAriaLabel,\n                        text: resources.addressSameAsShippingAddressText,\n                        telemetryContent: this.telemetryContent,\n                        onChange:\n                            this._onBillingAddressSameAsShippingChange\n                    }\n                    }\n                />\n            ),\n            showAddress: this._renderShowAddress(),\n            showAddOrUpdateAddress: this._renderAddOrUpdateAddress()\n        };\n\n        return renderView(viewProps) as React.ReactElement;\n    }\n\n    private _renderAddOrUpdateAddress = (): IAddressAddUpdateProps => {\n        return AddressAddUpdate(\n            {\n                resources: this.resources,\n                addressType: AddressType.Billing,\n                addressFormat: this.addressFormat.getAddressFormat((this.addUpdateAddress.ThreeLetterISORegionName) || this.countryRegionId),\n                defaultCountryRegionId: this.countryRegionId,\n                defaultAddressType: this.defaultAddressType,\n                selectedAddress: this.addUpdateAddress,\n                validationError: this.validationError,\n                addressActionResponse: this.addressActionResponse,\n                dropdownDisplayData: this.addressFormat.getPrefilledAddressDropdownData(this.resources.addressStateDefaultSelectionText, this.stateProvinceInfo),\n                telemetryContent: this.telemetryContent,\n                onInputChange: this._onAddressAddUpdateInputChange,\n                onDropdownChange: this._onAddressAddUpdateDropdownChange,\n                hasExternalSubmitGroup: this.props.moduleState.hasExternalSubmitGroup,\n                onSave: this._onSubmitAddress,\n                onCancel: this._resetView\n            }\n        );\n    }\n\n    private _renderShowAddress(): IAddressShowProps | null {\n        if (this.selectedAddress) {\n            return AddressShow({ address: this.selectedAddress, addressFormat: this.addressFormat.getAddressFormat(this.selectedAddress.ThreeLetterISORegionName || ''), addressPurposes: this.addressPurposes });\n        }\n\n        return null;\n    }\n\n    private _onCountryChange = (countryRegionId: string) => {\n        this.countryRegionId = countryRegionId;\n        set(this.addUpdateAddress, { ['ThreeLetterISORegionName']: countryRegionId });\n    }\n\n    private _getAddressFormatExcludeList = (): AddressItemType[] => {\n        const { config } = this.props;\n        const addressFormatExcludeList: AddressItemType[] = [];\n\n        if (!config.showAddressType) {\n            addressFormatExcludeList.push(AddressItemType.AddressTypeValue);\n        }\n\n        addressFormatExcludeList.push(AddressItemType.IsPrimary);\n\n        return addressFormatExcludeList;\n    }\n\n    private onAddressAddUpdate = (name: string, value: string) => {\n        set(this.addUpdateAddress, { [name]: value });\n        this.addressFormat.validateAddressFormat(this.addUpdateAddress, this.validationError, this.countryRegionId, name);\n    }\n\n    private _onAddressAddUpdateInputChange = (event: React.ChangeEvent<HTMLInputElement>): void => {\n        const value = (event.target.value || '').replace(new RegExp('[<>]', 'gi'), '');\n        this.onAddressAddUpdate(event.target.name, value);\n    }\n\n    private _onAddressAddUpdateDropdownChange = (event: React.ChangeEvent<HTMLSelectElement>): void => {\n        this.onAddressAddUpdate(event.target.name, event.target.value);\n\n        if (event.target.name === AddressItemType[AddressItemType.ThreeLetterISORegionName]) {\n            this._onCountryChange(event.target.value);\n        }\n    }\n\n    private _getStateProvinces = (): void => {\n        if (!this.countryRegionId || !(this.currentOperation === AddressOperation.Add || this.currentOperation === AddressOperation.Update)) {\n            return;\n        }\n\n        // tslint:disable-next-line:no-floating-promises\n        this.addressCommon.getStateProvinces(this.countryRegionId).then(\n            (result: StateProvinceInfo[]) => {\n                const stateInfo = result.some(state => state.StateId === this.addUpdateAddress.State);\n                // Reset state if selected state not found in the list.\n                if (!stateInfo) {\n                    set(this.addUpdateAddress, { ['State']: '' });\n                }\n                this.stateProvinceInfo = result;\n            });\n    }\n\n    private _initModuleState = (): void => {\n        this.props.moduleState.init({\n            status: this.isBillingAddressRequried ? 'updating' : 'disabled',\n            onEdit: this.onEdit,\n            onCancel: this.onCancel,\n            onSubmit: this.onSubmit\n        });\n\n        const { billingAddress, isBillingAddressSameAsShippingAddress } = this.props.data.checkout.result || {};\n\n        if (this.isBillingAddressRequried) {\n            if (billingAddress) {\n                this.isBillingAddressSameAsShipping = isBillingAddressSameAsShippingAddress || false;\n                this._updateCurrentOperation(AddressOperation.Show, billingAddress);\n                this._updateModuleState();\n            } else if (this.isCartContainsItemsForShipping) {\n                this.isBillingAddressSameAsShipping = true;\n                this._updateCurrentOperation(AddressOperation.Show, this.shippingAddress);\n            } else {\n                this.isBillingAddressSameAsShipping = false;\n                this._updateCurrentOperation(AddressOperation.Add);\n            }\n        }\n    }\n\n    private _setDefaultCountryRegionId(): void {\n        const { request } = this.props.context;\n        const market = request && request.channel && request.channel.ChannelCountryRegionISOCode;\n\n        this.countryRegionId = this.addressCommon.getDefaultCountryRegionId(this.countryRegionId, this.countryRegions, market);\n    }\n\n    private _onBillingAddressSameAsShippingChange = (event: React.ChangeEvent<HTMLInputElement>) => {\n        this.isBillingAddressSameAsShipping = event.currentTarget.checked;\n\n        if (this.isBillingAddressSameAsShipping && this.shippingAddress) {\n            this._updateCurrentOperation(AddressOperation.Show, this.shippingAddress);\n        } else {\n            this._updateCurrentOperation(AddressOperation.Add, this.billingAddress);\n        }\n    }\n\n    @computed get isCartContainsItemsForShipping(): boolean {\n        const { request } = this.props.context;\n\n        const pickupDeliveryModeCode = request && request.channel && request.channel.PickupDeliveryModeCode;\n\n        return ((this.props.data.checkout.result && this.props.data.checkout.result.checkoutCart.cart.CartLines) || []).some(\n            cartLine => (cartLine.DeliveryMode && cartLine.DeliveryMode !== '') ? cartLine.DeliveryMode !== pickupDeliveryModeCode : cartLine\n        );\n    }\n\n    @computed get billingAddress(): Address | undefined {\n        return this.props.data.checkout.result && this.props.data.checkout.result.billingAddress;\n    }\n\n    @computed get shippingAddress(): Address | undefined {\n        return this.props.data.checkout.result && this.props.data.checkout.result.shippingAddress;\n    }\n\n    @computed get getLoyaltyAmount(): number {\n        const checkoutState = this.props.data.checkout.result;\n        return checkoutState && checkoutState.loyaltyAmount ? checkoutState.loyaltyAmount : 0;\n    }\n\n    @computed get getGiftCardTotalAmount(): number {\n        const checkoutState = this.props.data.checkout.result;\n        if (!checkoutState || !checkoutState.giftCardExtends) {\n            return 0;\n        }\n        return checkoutState.giftCardExtends.reduce(\n            (count: number, giftCard: IGiftCardExtend) => {\n                return count + (giftCard.Balance || 0);\n            },\n            0);\n    }\n\n    @computed get shouldPaidByCard(): boolean {\n        const {\n            data: {\n                checkout\n            },\n            config\n        } = this.props;\n        if (!checkout.result) {\n            return false;\n        }\n\n        const checkoutResult = checkout.result;\n        const cart = checkoutResult.checkoutCart.cart;\n        if (!cart || !cart.CartLines || !cart.CartLines.length) {\n            return false;\n        }\n\n        const { paymentTenderType, tokenizedPaymentCard } = checkoutResult;\n        const isPaidByOtherPaymentSource = config.paymenTenderType !== paymentTenderType && tokenizedPaymentCard;\n\n        // Use payment card when it is not free or gift card balance + Loyalty amount can not cover the total amount\n        const amountDue = (cart.TotalAmount || 0) - this.getGiftCardTotalAmount - this.getLoyaltyAmount;\n\n        return amountDue > 0 && !isPaidByOtherPaymentSource;\n    }\n\n    @computed get isBillingAddressRequried(): boolean {\n        return this.shouldPaidByCard;\n    }\n\n    private _onSubmitAddress = (): void => {\n        if (!this.addressFormat.validateAddressFormat(this.addUpdateAddress, this.validationError, this.countryRegionId)) {\n            this.props.moduleState.setHasError(true);\n            return;\n        }\n\n        this._setBillingAddress(this.addUpdateAddress);\n        this._updateCurrentOperation(AddressOperation.Show, this.addUpdateAddress);\n        this._updateModuleState();\n    };\n\n    private onSubmit = (): void => {\n        switch (this.currentOperation) {\n            case AddressOperation.Add:\n            case AddressOperation.Update:\n                this._onSubmitAddress();\n                break;\n            case AddressOperation.Show:\n                if (this.selectedAddress) {\n                    this._setBillingAddress(this.selectedAddress);\n                    this._updateCurrentOperation(AddressOperation.Show, this.selectedAddress);\n                    this._updateModuleState();\n                }\n                break;\n            default:\n                this.props.telemetry.error('Invalid operation');\n        }\n    };\n\n    private onCancel = (): void => {\n        switch (this.currentOperation) {\n            case AddressOperation.Add:\n            case AddressOperation.Update:\n                this._resetView();\n                break;\n            case AddressOperation.Show:\n                // @ts-ignore: Compiler not reconizing property form extending class\n                this._resetView();\n                break;\n            default:\n                this.props.telemetry.error('Invalid operation');\n        }\n    };\n\n    private onEdit = (): void => {\n        if (this.isBillingAddressSameAsShipping && this.shippingAddress && this.isCartContainsItemsForShipping) {\n            this._updateCurrentOperation(AddressOperation.Show, this.shippingAddress);\n        } else {\n            this._updateCurrentOperation(AddressOperation.Add, this.billingAddress);\n        }\n        this.props.moduleState.onUpdating();\n    }\n\n    private _setBillingAddress = (address: Address): void => {\n        if (this.props.data.checkout.result) {\n            const newBillingAddress = { ...address };\n\n            if (address.ThreeLetterISORegionName && !newBillingAddress.TwoLetterISORegionName) {\n                newBillingAddress.TwoLetterISORegionName = this.addressFormat.getTwoLetterISORegionName(address.ThreeLetterISORegionName);\n            }\n\n            // tslint:disable-next-line:no-floating-promises\n            this.props.data.checkout.result.updateBillingAddress({ newBillingAddress, additionalProperties: { isBillingAddressSameAsShippingAddress: this.isBillingAddressSameAsShipping } });\n        }\n    }\n\n    private _resetView = () => {\n        this._updateCurrentOperation(AddressOperation.Show, this.billingAddress);\n        this._updateModuleState();\n    }\n\n    private _updateCurrentOperation = (operation: AddressOperation, selectedAddress?: Address) => {\n        this.currentOperation = operation;\n        this.selectedAddress = selectedAddress;\n\n        if (this.currentOperation === AddressOperation.Add || this.currentOperation === AddressOperation.Update) {\n            this.addUpdateAddress = { ...this.selectedAddress } || {};\n            set(this.addUpdateAddress, { ['ThreeLetterISORegionName']: this.addUpdateAddress.ThreeLetterISORegionName || this.countryRegionId });\n            set(this.addUpdateAddress, { ['AddressTypeValue']: this.addUpdateAddress.AddressTypeValue || this.defaultAddressType });\n        }\n    }\n\n    private _updateModuleState = () => {\n        if (this.currentOperation === AddressOperation.Show) {\n            this.props.moduleState.onReady();\n        } else {\n            this.props.moduleState.onUpdating();\n        }\n    }\n}\n\nexport default CheckoutBillingAddress;"],"sourceRoot":"./src/"},"metadata":{},"sourceType":"module"}