{"ast":null,"code":"import _defineProperty from\"@babel/runtime/helpers/esm/defineProperty\";function ownKeys(object,enumerableOnly){var keys=Object.keys(object);if(Object.getOwnPropertySymbols){var symbols=Object.getOwnPropertySymbols(object);if(enumerableOnly)symbols=symbols.filter(function(sym){return Object.getOwnPropertyDescriptor(object,sym).enumerable;});keys.push.apply(keys,symbols);}return keys;}function _objectSpread(target){for(var i=1;i<arguments.length;i++){var source=arguments[i]!=null?arguments[i]:{};if(i%2){ownKeys(Object(source),true).forEach(function(key){_defineProperty(target,key,source[key]);});}else if(Object.getOwnPropertyDescriptors){Object.defineProperties(target,Object.getOwnPropertyDescriptors(source));}else{ownKeys(Object(source)).forEach(function(key){Object.defineProperty(target,key,Object.getOwnPropertyDescriptor(source,key));});}}return target;}/*******************************************************************************\n* Copyright (c) Microsoft Corporation.\n* All rights reserved. See LICENSE in the project root for license information.\n*******************************************************************************/import'custom-event-polyfill';import*as app from'@msdyn365-commerce/runtime-internal/dist/lib/client';const{getUniqueRequestedAssets}=require('../common');// Fetches the registration object from a given file and dictionary name\n// If the module is not found or dictionary does not exist an empty object is returned\nconst fetchRegistrationObject=(registration,dictionaryName)=>{return registration?registration[dictionaryName]:{};};// Registers all the local and installed modules need to render the page client-side\nconst registerModules=(requestContext,requestedAssets)=>{let registeredModules={modules:{},dataActions:{}};let registeredPartnerModules={modules:{},dataActions:{}};let modulesRegistration;let partnerModuleRegistration;// installed modules registration\ntry{modulesRegistration=require('lib/module-registration');}catch(e){if(e.code==='MODULE_NOT_FOUND'){console.error(\"registration file not found.\",e);}else{throw e;}}// local modules registration\ntry{partnerModuleRegistration=require('lib/module-registration.local');}catch(e){if(e.code==='MODULE_NOT_FOUND'){process.env.NODE_ENV==='development'&&console.log(\"no local modules found.\",e);}}// If in an editor scenario and feature 'enableAuthoringRemoveAndAddModule' has been enabled,\n// register all modules so that editor canvas can add modules client side without page refresh\nif(requestContext&&requestContext.params&&requestContext.params.isEditor&&requestContext.features&&requestContext.features.enableAuthoringRemoveAndAddModule){registeredModules=modulesRegistration?modulesRegistration.registerAllModules():registeredModules;registeredPartnerModules=partnerModuleRegistration?partnerModuleRegistration.registerAllModules():registeredPartnerModules;}else{registeredModules=modulesRegistration?modulesRegistration.registerAllModules(requestedAssets&&requestedAssets.modules):registeredModules;registeredPartnerModules=partnerModuleRegistration?partnerModuleRegistration.registerAllModules(requestedAssets&&requestedAssets.modules):registeredPartnerModules;}return{modules:_objectSpread(_objectSpread({},registeredModules.modules),registeredPartnerModules.modules),dataActions:_objectSpread(_objectSpread({},registeredModules.dataActions),registeredPartnerModules.dataActions)};};const initializeConnectors=function initializeConnectors(){let connectorInformation=arguments.length>0&&arguments[0]!==undefined?arguments[0]:{};let connectorsRegistration=arguments.length>1?arguments[1]:undefined;let requestContext=arguments.length>2?arguments[2]:undefined;let experimentationConnector;if(connectorsRegistration&&connectorInformation){const expConnectorName=connectorInformation.expConnector;if(expConnectorName&&connectorsRegistration[expConnectorName]){// Grab the stored config from the window object\nconst config=window.___initialData___.experimentationConfig;// Grab the experimentation user ID\nconst expUserId=requestContext&&requestContext.experiments&&requestContext.experiments.userId;// Initialize the provider and listener for client\nconst experimentationProvider=connectorsRegistration[expConnectorName].provider;const experimentationListener=connectorsRegistration[expConnectorName].listener;if(!experimentationProvider||!experimentationListener){return{experimentation:undefined};}experimentationProvider.initializeClientSide(config);experimentationListener.initializeClientSide(config,expUserId);experimentationConnector={name:expConnectorName,provider:experimentationProvider,listener:experimentationListener};}}return{experimentation:experimentationConnector};};const initializeClient=()=>{const requestedAssets=window.___initialData___&&getUniqueRequestedAssets(window.___initialData___);let bindings={modules:{},dataActions:{}};const requestContext=window.___initialData___&&window.___initialData___.requestContext;bindings=registerModules(requestContext,requestedAssets);// view extensions registration\ntry{bindings.views=fetchRegistrationObject(require('lib/view-registration'),'viewDictionary');}catch(e){if(e.code==='MODULE_NOT_FOUND'){process.env.NODE_ENV==='development'&&console.log(\"view registration files not found.\");}}// component extensions registration\ntry{bindings.components=fetchRegistrationObject(require('lib/component-registration'),'componentDictionary');}catch(e){if(e.code==='MODULE_NOT_FOUND'){process.env.NODE_ENV==='development'&&console.log(\"component registration files not found.\");}}// connectors registration\ntry{bindings.connectors=fetchRegistrationObject(require('lib/connector-registration'),'connectorDictionary');}catch(e){if(e.code==='MODULE_NOT_FOUND'){process.env.NODE_ENV==='development'&&console.log(\"connector registration files not found.\");}}const connectorInformation=requestContext.connectors;const connectors=initializeConnectors(connectorInformation,bindings.connectors,requestContext);app.initializeClientApp(bindings,connectors);app.clientRender();};initializeClient();","map":{"version":3,"sources":["/Users/User/Documents/wkea-ec/Msdyn365.Commerce.Online/node_modules/@msdyn365-commerce/bootloader/entry/client.js"],"names":["app","getUniqueRequestedAssets","require","fetchRegistrationObject","registration","dictionaryName","registerModules","requestContext","requestedAssets","registeredModules","modules","dataActions","registeredPartnerModules","modulesRegistration","partnerModuleRegistration","e","code","console","error","process","env","NODE_ENV","log","params","isEditor","features","enableAuthoringRemoveAndAddModule","registerAllModules","initializeConnectors","connectorInformation","connectorsRegistration","experimentationConnector","expConnectorName","expConnector","config","window","___initialData___","experimentationConfig","expUserId","experiments","userId","experimentationProvider","provider","experimentationListener","listener","experimentation","undefined","initializeClientSide","name","initializeClient","bindings","views","components","connectors","initializeClientApp","clientRender"],"mappings":"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","sourcesContent":["/*******************************************************************************\n* Copyright (c) Microsoft Corporation.\n* All rights reserved. See LICENSE in the project root for license information.\n*******************************************************************************/\n\n\nimport 'custom-event-polyfill';\n\nimport * as app from '@msdyn365-commerce/runtime-internal/dist/lib/client';\nconst { getUniqueRequestedAssets } = require('../common');\n\n// Fetches the registration object from a given file and dictionary name\n// If the module is not found or dictionary does not exist an empty object is returned\nconst fetchRegistrationObject = (registration, dictionaryName) => {\n    return registration ? registration[dictionaryName] : {};\n};\n\n// Registers all the local and installed modules need to render the page client-side\nconst registerModules = (requestContext, requestedAssets) => {\n    let registeredModules = { modules: {}, dataActions: {} };\n    let registeredPartnerModules = { modules: {}, dataActions: {} };\n\n    let modulesRegistration;\n    let partnerModuleRegistration;\n\n    // installed modules registration\n    try {\n        modulesRegistration = require('lib/module-registration');\n    } catch (e) {\n        if (e.code === 'MODULE_NOT_FOUND') {\n            console.error(`registration file not found.`, e);\n        } else {\n            throw e;\n        }\n    }\n\n    // local modules registration\n    try {\n        partnerModuleRegistration = require('lib/module-registration.local');\n    } catch (e) {\n        if (e.code === 'MODULE_NOT_FOUND') {\n            process.env.NODE_ENV === 'development' && console.log(`no local modules found.`, e);\n        }\n    }\n\n    // If in an editor scenario and feature 'enableAuthoringRemoveAndAddModule' has been enabled,\n    // register all modules so that editor canvas can add modules client side without page refresh\n    if (\n        requestContext &&\n        requestContext.params &&\n        requestContext.params.isEditor &&\n        requestContext.features &&\n        requestContext.features.enableAuthoringRemoveAndAddModule\n    ) {\n        registeredModules = modulesRegistration ? modulesRegistration.registerAllModules() : registeredModules;\n        registeredPartnerModules = partnerModuleRegistration ? partnerModuleRegistration.registerAllModules() : registeredPartnerModules;\n    } else {\n        registeredModules = modulesRegistration\n            ? modulesRegistration.registerAllModules(requestedAssets && requestedAssets.modules)\n            : registeredModules;\n        registeredPartnerModules = partnerModuleRegistration\n            ? partnerModuleRegistration.registerAllModules(requestedAssets && requestedAssets.modules)\n            : registeredPartnerModules;\n    }\n\n    return {\n        modules: {\n            ...registeredModules.modules,\n            ...registeredPartnerModules.modules\n        },\n        dataActions: {\n            ...registeredModules.dataActions,\n            ...registeredPartnerModules.dataActions\n        }\n    };\n};\n\nconst initializeConnectors = (connectorInformation = {}, connectorsRegistration, requestContext) => {\n    let experimentationConnector;\n    if (connectorsRegistration && connectorInformation) {\n        const expConnectorName = connectorInformation.expConnector;\n        if (expConnectorName && connectorsRegistration[expConnectorName]) {\n            // Grab the stored config from the window object\n            const config = window.___initialData___.experimentationConfig;\n            // Grab the experimentation user ID\n            const expUserId = requestContext && requestContext.experiments && requestContext.experiments.userId;\n            // Initialize the provider and listener for client\n            const experimentationProvider = connectorsRegistration[expConnectorName].provider;\n            const experimentationListener = connectorsRegistration[expConnectorName].listener;\n\n            if (!experimentationProvider || !experimentationListener) {\n                return { experimentation: undefined };\n            }\n\n            experimentationProvider.initializeClientSide(config);\n            experimentationListener.initializeClientSide(config, expUserId);\n            experimentationConnector = { name: expConnectorName, provider: experimentationProvider, listener: experimentationListener };\n        }\n    }\n    return { experimentation: experimentationConnector };\n};\n\nconst initializeClient = () => {\n    const requestedAssets = window.___initialData___ && getUniqueRequestedAssets(window.___initialData___);\n    let bindings = { modules: {}, dataActions: {} };\n    const requestContext = window.___initialData___ && window.___initialData___.requestContext;\n\n    bindings = registerModules(requestContext, requestedAssets);\n\n    // view extensions registration\n    try {\n        bindings.views = fetchRegistrationObject(require('lib/view-registration'), 'viewDictionary');\n    } catch (e) {\n        if (e.code === 'MODULE_NOT_FOUND') {\n            process.env.NODE_ENV === 'development' && console.log(`view registration files not found.`);\n        }\n    }\n\n    // component extensions registration\n    try {\n        bindings.components = fetchRegistrationObject(require('lib/component-registration'), 'componentDictionary');\n    } catch (e) {\n        if (e.code === 'MODULE_NOT_FOUND') {\n            process.env.NODE_ENV === 'development' && console.log(`component registration files not found.`);\n        }\n    }\n\n    // connectors registration\n    try {\n        bindings.connectors = fetchRegistrationObject(require('lib/connector-registration'), 'connectorDictionary');\n    } catch (e) {\n        if (e.code === 'MODULE_NOT_FOUND') {\n            process.env.NODE_ENV === 'development' && console.log(`connector registration files not found.`);\n        }\n    }\n\n    const connectorInformation = requestContext.connectors;\n    const connectors = initializeConnectors(connectorInformation, bindings.connectors, requestContext);\n\n    app.initializeClientApp(bindings, connectors);\n    app.clientRender();\n};\n\ninitializeClient();\n"]},"metadata":{},"sourceType":"module"}