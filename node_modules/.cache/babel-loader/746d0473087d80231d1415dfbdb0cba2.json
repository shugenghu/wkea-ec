{"ast":null,"code":"import _regeneratorRuntime from\"@babel/runtime/regenerator\";import _asyncToGenerator from\"@babel/runtime/helpers/esm/asyncToGenerator\";import _classCallCheck from\"@babel/runtime/helpers/esm/classCallCheck\";import{createObservableDataAction}from'@msdyn365-commerce/core';import{convertToString}from'@msdyn365-commerce/retail-proxy';import{getProductListLinesAsync}from'@msdyn365-commerce/retail-proxy/dist/DataActions/ProductListsDataActions.g';import{FullProductInput,getFullProducts,getProductDetailsCriteriaFromActionInput,QueryResultSettingsProxy}from'..';import{OrderTemplateLine}from'../utilities/order-templates';/**\r\n *  Input class for the GetOrderTemplates data action\r\n */export var GetPaginatedOrderTemplateLinesInput=function GetPaginatedOrderTemplateLinesInput(orderTemplateId,queryResultSettings,searchText){var _this=this;_classCallCheck(this,GetPaginatedOrderTemplateLinesInput);this.getCacheKey=function(){return\"GetPaginatedOrderTemplateLines|\".concat(_this.orderTemplateId,\"|\").concat(convertToString(_this.queryResultSettings),\"|\").concat(_this.searchText);};this.getCacheObjectType=function(){return'GetPaginatedOrderTemplateLines';};this.dataCacheType=function(){return'none';};this.orderTemplateId=orderTemplateId;this.queryResultSettings=queryResultSettings;this.searchText=searchText||'';};/**\r\n * createInput method for the GetOrderTemplate method\r\n * @param inputData The input data passed to the createInput method.\r\n */export var createGetPaginatedOrderTemplateLinesInput=function createGetPaginatedOrderTemplateLinesInput(inputData,orderTemplateId,searchText){var queryResultSettings=QueryResultSettingsProxy.fromInputData(inputData).QueryResultSettings;queryResultSettings.count=true;return new GetPaginatedOrderTemplateLinesInput(orderTemplateId,queryResultSettings,searchText);};/**\r\n * The action method for the GetPaginatedOrderTemplateLines data action\r\n * @param input The action input\r\n * @param context The action context\r\n */export function getPaginatedOrderTemplateLinesAction(_x,_x2){return _getPaginatedOrderTemplateLinesAction.apply(this,arguments);}/**\r\n * The GetPaginatedOrderTemplateLines Data Action\r\n * Returns order templates\r\n */function _getPaginatedOrderTemplateLinesAction(){_getPaginatedOrderTemplateLinesAction=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee(input,context){var orderTemplateLinesState,promise,productListLines,productInputs,fullProductsInfo;return _regeneratorRuntime.wrap(function _callee$(_context){while(1){switch(_context.prev=_context.next){case 0:if(context.requestContext.user.isAuthenticated){_context.next=2;break;}throw new Error('Unable to get full order templates. User is not authenticated.');case 2:orderTemplateLinesState={lines:[],totalCount:0};promise=getProductListLinesAsync({callerContext:context,queryResultSettings:input.queryResultSettings},input.orderTemplateId,input.searchText);// tslint:disable-line:align\n_context.next=6;return promise;case 6:productListLines=_context.sent;productInputs=[];if(!(productListLines&&productListLines.length>0)){_context.next=19;break;}orderTemplateLinesState.totalCount=promise.metadata.count||orderTemplateLinesState.lines.length;productListLines.forEach(function(listLine){if(listLine.ProductId){orderTemplateLinesState.lines.push(new OrderTemplateLine(listLine));productInputs.push(new FullProductInput(listLine.ProductId,context.requestContext.apiSettings,getProductDetailsCriteriaFromActionInput(context)));}});if(!(productInputs.length>0)){_context.next=17;break;}_context.next=14;return getFullProducts(productInputs,context).then(function(products){if(products){return products;}else{return[];}})[\"catch\"](function(error){context.trace(error);context.telemetry.error(error.message);throw new Error('[getPaginatedOrderTemplateLinesAction]Unable to retrieve product info');});case 14:fullProductsInfo=_context.sent;orderTemplateLinesState.lines.forEach(function(line){var fullProduct=fullProductsInfo.find(function(product){return product.ProductDetails.RecordId===line.productListLine.ProductId;});if(!fullProduct){throw new Error('Unable to find product info for an order template line');}line.fullProduct=fullProduct;});return _context.abrupt(\"return\",orderTemplateLinesState);case 17:context.trace(orderTemplateLinesState.lines.length.toString());return _context.abrupt(\"return\",orderTemplateLinesState);case 19:return _context.abrupt(\"return\",orderTemplateLinesState);case 20:case\"end\":return _context.stop();}}},_callee);}));return _getPaginatedOrderTemplateLinesAction.apply(this,arguments);}export default createObservableDataAction({id:'@msdyn365-commerce-modules/retail-actions/order-templates/get-paginated-order-template-lines',action:getPaginatedOrderTemplateLinesAction,input:createGetPaginatedOrderTemplateLinesInput});","map":{"version":3,"sources":["../../../src/order-templates/get-paginated-order-template-lines.ts"],"names":[],"mappings":"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","sourcesContent":["import { FullProduct } from '@msdyn365-commerce/commerce-entities';\nimport { CacheType,\n    createObservableDataAction,\n    IAction,\n    IActionContext,\n    IActionInput,\n    ICreateActionContext } from '@msdyn365-commerce/core';\nimport { convertToString, IQueryResultSettings } from '@msdyn365-commerce/retail-proxy';\nimport { getProductListLinesAsync } from '@msdyn365-commerce/retail-proxy/dist/DataActions/ProductListsDataActions.g';\nimport { FullProductInput, getFullProducts, getProductDetailsCriteriaFromActionInput, QueryResultSettingsProxy } from '..';\nimport { IOrderTemplateLinesState, OrderTemplateLine } from '../utilities/order-templates';\n/**\n *  Input class for the GetOrderTemplates data action\n */\nexport class GetPaginatedOrderTemplateLinesInput implements IActionInput {\n    public orderTemplateId: string;\n    public queryResultSettings: IQueryResultSettings;\n    public searchText: string;\n\n    constructor(orderTemplateId: string, queryResultSettings: IQueryResultSettings, searchText?: string) {\n        this.orderTemplateId = orderTemplateId;\n        this.queryResultSettings = queryResultSettings;\n        this.searchText = searchText || '';\n    }\n\n    public getCacheKey = () => `GetPaginatedOrderTemplateLines|${this.orderTemplateId}|${convertToString(this.queryResultSettings)}|${this.searchText}`;\n    public getCacheObjectType = () => 'GetPaginatedOrderTemplateLines';\n    public dataCacheType = (): CacheType => 'none';\n}\n\n/**\n * createInput method for the GetOrderTemplate method\n * @param inputData The input data passed to the createInput method.\n */\nexport const createGetPaginatedOrderTemplateLinesInput = (\n    inputData: ICreateActionContext, orderTemplateId: string, searchText?: string): GetPaginatedOrderTemplateLinesInput => {\n\n    const queryResultSettings: IQueryResultSettings = QueryResultSettingsProxy.fromInputData(inputData).QueryResultSettings;\n    queryResultSettings.count = true;\n    return new GetPaginatedOrderTemplateLinesInput(orderTemplateId, queryResultSettings, searchText);\n};\n\n/**\n * The action method for the GetPaginatedOrderTemplateLines data action\n * @param input The action input\n * @param context The action context\n */\nexport async function getPaginatedOrderTemplateLinesAction(input: GetPaginatedOrderTemplateLinesInput, context: IActionContext): Promise<IOrderTemplateLinesState> {\n    if (!context.requestContext.user.isAuthenticated) {\n        throw new Error('Unable to get full order templates. User is not authenticated.');\n    }\n\n    const orderTemplateLinesState: IOrderTemplateLinesState = {\n        lines: [],\n        totalCount: 0\n    };\n    const promise = getProductListLinesAsync({\n        callerContext: context, queryResultSettings: input.queryResultSettings\n    }, input.orderTemplateId, input.searchText); // tslint:disable-line:align\n    const productListLines = await promise;\n    const productInputs: FullProductInput[] = [];\n    if (productListLines && productListLines.length > 0) {\n        orderTemplateLinesState.totalCount = promise.metadata.count || orderTemplateLinesState.lines.length;\n        productListLines.forEach((listLine) => {\n            if (listLine.ProductId) {\n                orderTemplateLinesState.lines.push(new OrderTemplateLine(listLine));\n                productInputs.push(new FullProductInput(listLine.ProductId, context.requestContext.apiSettings, getProductDetailsCriteriaFromActionInput(context)));\n            }\n        });\n        if (productInputs.length > 0) {\n            const fullProductsInfo = await getFullProducts(productInputs, context)\n                .then((products: FullProduct[]) => {\n                    if (products) {\n                        return products;\n                    } else {\n                        return <FullProduct[]>[];\n                    }\n                })\n                .catch(error => {\n                    context.trace(error);\n                    context.telemetry.error(error.message);\n                    throw new Error('[getPaginatedOrderTemplateLinesAction]Unable to retrieve product info');\n                });\n            orderTemplateLinesState.lines.forEach(line => {\n                const fullProduct = fullProductsInfo.find(product => product.ProductDetails.RecordId === line.productListLine.ProductId);\n                if (!fullProduct) {\n                    throw new Error('Unable to find product info for an order template line');\n                }\n                line.fullProduct = fullProduct;\n            });\n            return orderTemplateLinesState;\n        }\n        context.trace(orderTemplateLinesState.lines.length.toString());\n        return orderTemplateLinesState;\n    }\n    return orderTemplateLinesState;\n}\n\n/**\n * The GetPaginatedOrderTemplateLines Data Action\n * Returns order templates\n */\nexport default createObservableDataAction<IOrderTemplateLinesState>({\n    id: '@msdyn365-commerce-modules/retail-actions/order-templates/get-paginated-order-template-lines',\n    action: <IAction<IOrderTemplateLinesState>>getPaginatedOrderTemplateLinesAction,\n    input: createGetPaginatedOrderTemplateLinesInput\n});"],"sourceRoot":""},"metadata":{},"sourceType":"module"}