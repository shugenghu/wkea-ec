{"ast":null,"code":"import _slicedToArray from\"@babel/runtime/helpers/esm/slicedToArray\";import{Button}from'@msdyn365-commerce-modules/utilities';import{OrderTemplateNameDialog}from'@msdyn365-commerce/components';import React,{useState}from'react';var CreateOrderTemplateButton=function CreateOrderTemplateButton(props){var onCancel=function onCancel(){return;};var _useState=useState(false),_useState2=_slicedToArray(_useState,2),createOrderTemplateDialogOpen=_useState2[0],setOrderTemplateNameDialogOpen=_useState2[1];var onCreateButtonClick=function onCreateButtonClick(){setOrderTemplateNameDialogOpen(true);};return/*#__PURE__*/React.createElement(React.Fragment,null,/*#__PURE__*/React.createElement(Button,{className:'ms-order-template__add-template-button',color:'primary',onClick:onCreateButtonClick},props.createOrderTemplateText),/*#__PURE__*/React.createElement(OrderTemplateNameDialog,{className:'msc-order-template-name-dialog',modalOpen:createOrderTemplateDialogOpen,isUpdateDialog:false,setModalOpen:setOrderTemplateNameDialogOpen,context:props.context,id:props.id,data:{},typeName:props.typeName,dialogStrings:props.createOrderTemplateDialogResources,onCancel:onCancel,onSuccess:props.onOrderTemplateCreated}));};export default CreateOrderTemplateButton;","map":{"version":3,"sources":["modules/order-template-list/components/create-order-template.tsx"],"names":[],"mappings":"qEAIA,OAAS,MAAT,KAAuB,sCAAvB,CACA,OAA4C,uBAA5C,KAA2E,+BAA3E,CAEA,MAAO,CAAA,KAAP,EAAgB,QAAhB,KAAgC,OAAhC,CAQA,GAAM,CAAA,yBAAyB,CAA8C,QAAvE,CAAA,yBAAuE,CAAC,KAAD,CAAU,CACnF,GAAM,CAAA,QAAQ,CAAG,QAAX,CAAA,QAAW,EAAK,CAClB,OACH,CAFD,CADmF,cAIX,QAAQ,CAAC,KAAD,CAJG,wCAI5E,6BAJ4E,eAI7C,8BAJ6C,eAKnF,GAAM,CAAA,mBAAmB,CAAG,QAAtB,CAAA,mBAAsB,EAAK,CAC7B,8BAA8B,CAAC,IAAD,CAA9B,CACH,CAFD,CAIA,mBACI,KAAA,CAAA,aAAA,CAAA,KAAA,CAAA,QAAA,CAAA,IAAA,cACI,KAAA,CAAA,aAAA,CAAC,MAAD,CAAO,CACH,SAAS,CAAC,wCADP,CAEH,KAAK,CAAC,SAFH,CAGH,OAAO,CAAE,mBAHN,CAAP,CAKK,KAAK,CAAC,uBALX,CADJ,cAQI,KAAA,CAAA,aAAA,CAAC,uBAAD,CAAwB,CACpB,SAAS,CAAE,gCADS,CAEpB,SAAS,CAAE,6BAFS,CAGpB,cAAc,CAAE,KAHI,CAIpB,YAAY,CAAE,8BAJM,CAKpB,OAAO,CAAE,KAAK,CAAC,OALK,CAMpB,EAAE,CAAE,KAAK,CAAC,EANU,CAOpB,IAAI,CAAE,EAPc,CAQpB,QAAQ,CAAE,KAAK,CAAC,QARI,CASpB,aAAa,CAAE,KAAK,CAAC,kCATD,CAUpB,QAAQ,CAAE,QAVU,CAWpB,SAAS,CAAE,KAAK,CAAC,sBAXG,CAAxB,CARJ,CADJ,CAwBH,CAjCD,CAmCA,cAAe,CAAA,yBAAf","sourcesContent":["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nimport { Button } from '@msdyn365-commerce-modules/utilities';\nimport { IOrderTemplateNameDialogResources, OrderTemplateNameDialog } from '@msdyn365-commerce/components';\nimport { IComponentProps } from '@msdyn365-commerce/core';\nimport React, { useState } from 'react';\n\nexport interface ICreateOrderTemplateButtonProps extends IComponentProps {\n    createOrderTemplateText: string;\n    createOrderTemplateDialogResources: IOrderTemplateNameDialogResources;\n    onOrderTemplateCreated(): Promise<void>;\n}\n\nconst CreateOrderTemplateButton: React.FC<ICreateOrderTemplateButtonProps> = (props) => {\n    const onCancel = () => {\n        return;\n    };\n    const [createOrderTemplateDialogOpen, setOrderTemplateNameDialogOpen] = useState(false);\n    const onCreateButtonClick = () => {\n        setOrderTemplateNameDialogOpen(true);\n    };\n\n    return (\n        <>\n            <Button\n                className='ms-order-template__add-template-button'\n                color='primary'\n                onClick={onCreateButtonClick}\n            >\n                {props.createOrderTemplateText}\n            </Button>\n            <OrderTemplateNameDialog\n                className={'msc-order-template-name-dialog'}\n                modalOpen={createOrderTemplateDialogOpen}\n                isUpdateDialog={false}\n                setModalOpen={setOrderTemplateNameDialogOpen}\n                context={props.context}\n                id={props.id}\n                data={{}}\n                typeName={props.typeName}\n                dialogStrings={props.createOrderTemplateDialogResources}\n                onCancel={onCancel}\n                onSuccess={props.onOrderTemplateCreated}\n            />\n        </>\n    );\n};\n\nexport default CreateOrderTemplateButton;"],"sourceRoot":"./src/"},"metadata":{},"sourceType":"module"}