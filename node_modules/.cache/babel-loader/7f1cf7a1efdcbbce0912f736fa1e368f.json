{"ast":null,"code":"import\"core-js/modules/es.object.assign.js\";import\"core-js/modules/es.string.replace.js\";import{getProductUrlSync}from'@msdyn365-commerce-modules/retail-actions';import{Button,getPayloadObject,getTelemetryAttributes,TelemetryConstant}from'@msdyn365-commerce-modules/utilities';import{CartLineItemComponent}from'@msdyn365-commerce/components';import{Image}from'@msdyn365-commerce/core';import*as React from'react';import Address from'./address';import LabelComponent from'./label';import{defaultImageSettings,getSalesStatusCode}from'./utilities';export const getSalesLine=(_ref)=>{let{moduleName,moduleComponentProps:{id,typeName,context,telemetry,config:{imageSettings}},showCompleteAddress,product,shipment,salesLine,isCurrentChannel,imageOnly,resources:{productDimensionTypeSize:sizeString,productDimensionTypeColor:colorString,productDimensionTypeStyle:styleString,salesLineQuantityText:quantityDisplayString,configString,shipToLabel,storeLabel,phoneLabel,phoneAriaLabel,buyItAgainLabel,buyItAgainAriaLabel,orderStatusReadyForPickup,orderStatusProcessing,orderStatusShipped,orderStatusPickedUp,orderStatusCanceled,pickedUpSalesLines,deliveredSalesLines,carryOutSalesLines,trackingLabel,trackingAriaLabel,trackingComingSoonLabel,discountStringText},telemetryContent}=_ref;const salesStatusStringMap={canceled:orderStatusCanceled,readyForPickup:orderStatusReadyForPickup,pickedUp:orderStatusPickedUp,processing:orderStatusProcessing,shipped:orderStatusShipped,unknown:undefined};const deliveryTypeStringMap={pickUp:pickedUpSalesLines,ship:deliveredSalesLines,carryOut:carryOutSalesLines};const gridSettings=context.request.gridSettings;const pickupDeliveryModeCode=context.request.channel&&context.request.channel.PickupDeliveryModeCode;const productUrl=getProductUrlSync(product,context.actionContext,undefined);const deliveryType=!!pickupDeliveryModeCode&&pickupDeliveryModeCode!==''&&pickupDeliveryModeCode===salesLine.DeliveryMode?'pickUp':!!salesLine.DeliveryMode?'ship':'carryOut';const salesStatus=getSalesStatusCode(deliveryType,salesLine.SalesStatusValue);const salesStatusString=salesStatusStringMap[salesStatus];const salesStatusComp=salesStatusString&&/*#__PURE__*/React.createElement(LabelComponent,{className:\"\".concat(moduleName,\"__sales-status\"),label:salesStatusString});const deliveryTypeString=deliveryTypeStringMap[deliveryType];const deliveryTypeComp=deliveryTypeString&&/*#__PURE__*/React.createElement(LabelComponent,{className:\"\".concat(moduleName,\"__devliery-type\"),label:deliveryTypeString});const trackingInfo=isCurrentChannel&&deliveryType==='ship'&&/*#__PURE__*/React.createElement(\"span\",{className:\"\".concat(moduleName,\"__tracking-info\")},trackingLabel,shipment?/*#__PURE__*/React.createElement(\"a\",{className:\"\".concat(moduleName,\"__tracking-link\"),href:shipment.TrackingUrl,\"aria-label\":trackingAriaLabel},shipment.TrackingNumber):/*#__PURE__*/React.createElement(React.Fragment,null,trackingComingSoonLabel));const payLoad=getPayloadObject('click',telemetryContent,TelemetryConstant.BuyItAgain);const buyItAgainAttributes=getTelemetryAttributes(telemetryContent,payLoad);return{data:{salesLine,productUrl,deliveryType,salesStatus,product,shipment},salesLineProps:{className:\"\".concat(moduleName,\"__sales-line\")},salesLine:imageOnly?/*#__PURE__*/React.createElement(\"div\",{className:\"\".concat(moduleName,\"__sales-line-picture\")},/*#__PURE__*/React.createElement(Image,{className:\"\".concat(moduleName,\"__sales-line-image\"),altText:product.Name,src:product.PrimaryImageUrl||'',gridSettings:gridSettings,imageSettings:imageSettings||defaultImageSettings,loadFailureBehavior:'empty'})):/*#__PURE__*/React.createElement(CartLineItemComponent,{id:id,typeName:typeName,context:context,resources:{sizeString,colorString,styleString,quantityDisplayString,configString,discountStringText,inputQuantityAriaLabel:'',originalPriceText:'',currentPriceText:'',shippingChargesText:''},primaryImageUrl:product.PrimaryImageUrl,productUrl:productUrl,imageSettings:imageSettings||defaultImageSettings,gridSettings:gridSettings,isSalesLine:true,data:{cartLine:salesLine,product:product}}),address:salesLine.ShippingAddress&&/*#__PURE__*/React.createElement(Address,{moduleName:moduleName,address:salesLine.ShippingAddress,resource:{shipToLabel,storeLabel,phoneLabel,phoneAriaLabel},deliveryType:deliveryType,showCompleteAddress:showCompleteAddress}),deliveryType:deliveryTypeComp,salesStatus:salesStatusComp,trackingInfo,buyAgainButton:isCurrentChannel&&/*#__PURE__*/React.createElement(Button,Object.assign({href:productUrl,\"aria-label\":name&&buyItAgainAriaLabel?(buyItAgainAriaLabel||'').replace('{productName}',name):'',className:\"\".concat(moduleName,\"__sales-line-btn-buy-it-again\")},buyItAgainAttributes),buyItAgainLabel)};};","map":{"version":3,"sources":["common/get-sales-line.tsx"],"names":[],"mappings":"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","sourcesContent":["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nimport { getProductUrlSync } from '@msdyn365-commerce-modules/retail-actions';\nimport { Button, getPayloadObject, getTelemetryAttributes, INodeProps, ITelemetryContent, TelemetryConstant } from '@msdyn365-commerce-modules/utilities';\nimport { CartLineItemComponent } from '@msdyn365-commerce/components';\nimport { Image } from '@msdyn365-commerce/core';\nimport { SalesLine, Shipment, SimpleProduct } from '@msdyn365-commerce/retail-proxy';\nimport * as React from 'react';\nimport Address from './address';\nimport LabelComponent from './label';\nimport { defaultImageSettings, getSalesStatusCode, IDeliveryType, IModuleComponentProps, ISalesStatusCode } from './utilities';\n\nexport type ISalesStatusStringMap = {\n    [x in ISalesStatusCode]: string | undefined;\n};\n\nexport type IDeliveryTypeStringMap = {\n    [x in IDeliveryType]: string | undefined;\n};\n\nexport interface ISalesLineResources {\n    productDimensionTypeSize: string;\n    productDimensionTypeColor: string;\n    productDimensionTypeStyle: string;\n    salesLineQuantityText: string;\n    configString: string;\n    shipToLabel: string;\n    storeLabel: string;\n    phoneLabel: string;\n    phoneAriaLabel: string;\n    buyItAgainAriaLabel: string;\n    buyItAgainLabel: string;\n    orderStatusReadyForPickup: string;\n    orderStatusPickedUp: string;\n    orderStatusShipped: string;\n    orderStatusCanceled: string;\n    orderStatusProcessing: string;\n    pickedUpSalesLines: string;\n    deliveredSalesLines: string;\n    carryOutSalesLines: string;\n    trackingLabel: string;\n    trackingAriaLabel: string;\n    trackingComingSoonLabel: string;\n    discountStringText: string;\n}\n\nexport interface IGetSalesLineInput {\n    moduleName: string;\n    moduleComponentProps: IModuleComponentProps;\n    product: SimpleProduct;\n    shipment?: Shipment;\n    salesLine: SalesLine;\n    isCurrentChannel: boolean;\n    resources: ISalesLineResources;\n    imageOnly?: boolean;\n    showCompleteAddress?: boolean;\n    telemetryContent?: ITelemetryContent;\n}\n\nexport interface ISalesLine {\n    salesLineProps: INodeProps;\n    salesLine: React.ReactNode;\n    address?: React.ReactNode;\n    buyAgainButton?: React.ReactNode;\n    salesStatus: React.ReactNode;\n    deliveryType: React.ReactNode;\n    trackingInfo: React.ReactNode;\n\n    // row data\n    data: {\n        salesLine: SalesLine;\n        product: SimpleProduct;\n        shipment?: Shipment;\n        deliveryType: IDeliveryType;\n        productUrl: string;\n        salesStatus: ISalesStatusCode;\n    };\n}\n\n// tslint:disable-next-line:max-func-body-length\nexport const getSalesLine = ({\n    moduleName,\n    moduleComponentProps: {\n        id,\n        typeName,\n        context,\n        telemetry,\n        config: { imageSettings }\n    },\n    showCompleteAddress,\n    product,\n    shipment,\n    salesLine,\n    isCurrentChannel,\n    imageOnly,\n    resources: {\n        productDimensionTypeSize: sizeString,\n        productDimensionTypeColor: colorString,\n        productDimensionTypeStyle: styleString,\n        salesLineQuantityText: quantityDisplayString,\n        configString,\n        shipToLabel,\n        storeLabel,\n        phoneLabel,\n        phoneAriaLabel,\n        buyItAgainLabel,\n        buyItAgainAriaLabel,\n        orderStatusReadyForPickup,\n        orderStatusProcessing,\n        orderStatusShipped,\n        orderStatusPickedUp,\n        orderStatusCanceled,\n        pickedUpSalesLines,\n        deliveredSalesLines,\n        carryOutSalesLines,\n        trackingLabel,\n        trackingAriaLabel,\n        trackingComingSoonLabel,\n        discountStringText\n    },\n    telemetryContent\n}: IGetSalesLineInput): ISalesLine => {\n    const salesStatusStringMap: ISalesStatusStringMap = {\n        canceled: orderStatusCanceled,\n        readyForPickup: orderStatusReadyForPickup,\n        pickedUp: orderStatusPickedUp,\n        processing: orderStatusProcessing,\n        shipped: orderStatusShipped,\n        unknown: undefined\n    };\n\n    const deliveryTypeStringMap: IDeliveryTypeStringMap = {\n        pickUp: pickedUpSalesLines,\n        ship: deliveredSalesLines,\n        carryOut: carryOutSalesLines\n    };\n\n    const gridSettings = context.request.gridSettings;\n    const pickupDeliveryModeCode = context.request.channel && context.request.channel.PickupDeliveryModeCode;\n    const productUrl = getProductUrlSync(product, context.actionContext, undefined);\n    const deliveryType =\n        !!pickupDeliveryModeCode && pickupDeliveryModeCode !== '' && pickupDeliveryModeCode === salesLine.DeliveryMode\n            ? 'pickUp'\n            : !!salesLine.DeliveryMode\n            ? 'ship'\n            : 'carryOut';\n    const salesStatus = getSalesStatusCode(deliveryType, salesLine.SalesStatusValue);\n    const salesStatusString = salesStatusStringMap[salesStatus];\n    const salesStatusComp = salesStatusString && <LabelComponent className={`${moduleName}__sales-status`} label={salesStatusString} />;\n    const deliveryTypeString = deliveryTypeStringMap[deliveryType];\n    const deliveryTypeComp = deliveryTypeString && <LabelComponent className={`${moduleName}__devliery-type`} label={deliveryTypeString} />;\n    const trackingInfo = isCurrentChannel && deliveryType === 'ship' && (\n        <span className={`${moduleName}__tracking-info`}>\n            {trackingLabel}\n            {shipment ? (\n                <a className={`${moduleName}__tracking-link`} href={shipment.TrackingUrl} aria-label={trackingAriaLabel}>\n                    {shipment.TrackingNumber}\n                </a>\n            ) : (\n                <>{trackingComingSoonLabel}</>\n            )}\n        </span>\n    );\n    const payLoad = getPayloadObject('click', telemetryContent!, TelemetryConstant.BuyItAgain);\n    const buyItAgainAttributes = getTelemetryAttributes(telemetryContent!, payLoad);\n    return {\n        data: {\n            salesLine,\n            productUrl,\n            deliveryType,\n            salesStatus,\n            product,\n            shipment\n        },\n        salesLineProps: { className: `${moduleName}__sales-line` },\n        salesLine: imageOnly ? (\n            <div className={`${moduleName}__sales-line-picture`}>\n                <Image\n                    className={`${moduleName}__sales-line-image`}\n                    altText={product.Name}\n                    src={product.PrimaryImageUrl || ''}\n                    gridSettings={gridSettings!}\n                    imageSettings={imageSettings || defaultImageSettings}\n                    loadFailureBehavior='empty'\n                />\n            </div>\n        ) : (\n            <CartLineItemComponent\n                id={id}\n                typeName={typeName}\n                context={context}\n                resources={{\n                    sizeString,\n                    colorString,\n                    styleString,\n                    quantityDisplayString,\n                    configString,\n                    discountStringText,\n                    inputQuantityAriaLabel: '',\n                    originalPriceText:'',\n                    currentPriceText:'',\n                    shippingChargesText:''\n                }}\n                primaryImageUrl={product.PrimaryImageUrl}\n                productUrl={productUrl}\n                imageSettings={imageSettings || defaultImageSettings}\n                gridSettings={gridSettings!}\n                isSalesLine={true}\n                data={{cartLine: salesLine, product: product}}\n            />\n        ),\n        address: salesLine.ShippingAddress && (\n            <Address\n                moduleName={moduleName}\n                address={salesLine.ShippingAddress}\n                resource={{ shipToLabel, storeLabel, phoneLabel, phoneAriaLabel }}\n                deliveryType={deliveryType}\n                showCompleteAddress={showCompleteAddress}\n            />\n        ),\n        deliveryType: deliveryTypeComp,\n        salesStatus: salesStatusComp,\n        trackingInfo,\n        buyAgainButton: isCurrentChannel && (\n            <Button\n                href={productUrl}\n                aria-label={name && buyItAgainAriaLabel ? (buyItAgainAriaLabel || '').replace('{productName}', name) : ''}\n                className={`${moduleName}__sales-line-btn-buy-it-again`}\n                {...buyItAgainAttributes}\n            >\n                {buyItAgainLabel}\n            </Button>\n        )\n    };\n};\n"],"sourceRoot":"./src/"},"metadata":{},"sourceType":"module"}