{"ast":null,"code":"import _defineProperty from\"@babel/runtime/helpers/esm/defineProperty\";import _slicedToArray from\"@babel/runtime/helpers/esm/slicedToArray\";import _regeneratorRuntime from\"@babel/runtime/regenerator\";import _asyncToGenerator from\"@babel/runtime/helpers/esm/asyncToGenerator\";function ownKeys(object,enumerableOnly){var keys=Object.keys(object);if(Object.getOwnPropertySymbols){var symbols=Object.getOwnPropertySymbols(object);if(enumerableOnly)symbols=symbols.filter(function(sym){return Object.getOwnPropertyDescriptor(object,sym).enumerable;});keys.push.apply(keys,symbols);}return keys;}function _objectSpread(target){for(var i=1;i<arguments.length;i++){var source=arguments[i]!=null?arguments[i]:{};if(i%2){ownKeys(Object(source),true).forEach(function(key){_defineProperty(target,key,source[key]);});}else if(Object.getOwnPropertyDescriptors){Object.defineProperties(target,Object.getOwnPropertyDescriptors(source));}else{ownKeys(Object(source)).forEach(function(key){Object.defineProperty(target,key,Object.getOwnPropertyDescriptor(source,key));});}}return target;}import classnames from'classnames';import React,{useState}from'react';import{Button,getPayloadObject,getTelemetryAttributes,PopupProducts,TelemetryConstant}from'@msdyn365-commerce-modules/utilities';import{msdyn365Commerce}from'@msdyn365-commerce/core';import{addOrderTemplateToCartAction,AddOrderTemplateToCartInput}from'@msdyn365-commerce-modules/retail-actions';import{LinesAddedToCartDialog}from'../lines-added-to-cart-dialog/lines-added-to-cart-dialog.component';var onClick=/*#__PURE__*/function(){var _ref=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee(_event,props,setUploadStatus,openModal,setLinesAddedToCartDialogOpen,setAddedLinesCount){var context,addOrderTemplateToCartInput,addedCartLines;return _regeneratorRuntime.wrap(function _callee$(_context){while(1){switch(_context.prev=_context.next){case 0:openModal(true);setUploadStatus('LOADING');context=props.context;addOrderTemplateToCartInput=new AddOrderTemplateToCartInput(props.data.orderTemplate.productList.Id);_context.next=6;return addOrderTemplateToCartAction(addOrderTemplateToCartInput,context.actionContext);case 6:addedCartLines=_context.sent;setAddedLinesCount(addedCartLines.length);openModal(false);setTimeout(function(){setLinesAddedToCartDialogOpen(true);},500);case 10:case\"end\":return _context.stop();}}},_callee);}));return function onClick(_x,_x2,_x3,_x4,_x5,_x6){return _ref.apply(this,arguments);};}();var AddToCartComponentActions={onClick:onClick};var _getModalText=function _getModalText(status,props){var dialogStrings=props.dialogStrings;var addToCartFailureMessage=dialogStrings.addToCartFailureMessage,addToCartSuccessMessage=dialogStrings.addToCartSuccessMessage,addToCartProcessMessage=dialogStrings.addToCartProcessMessage;if(status==='LOADING'){return\"\".concat(addToCartProcessMessage,\"...\");}if(status==='SUCCESS'){return addToCartSuccessMessage;}if(status==='FAILED'){return addToCartFailureMessage;}return'';};var AddOrderTemplate=function AddOrderTemplate(props){var _useState=useState('WAITING'),_useState2=_slicedToArray(_useState,2),uploadStatus=_useState2[0],setUploadStatus=_useState2[1];var _useState3=useState(false),_useState4=_slicedToArray(_useState3,2),modalOpen=_useState4[0],setModalOpen=_useState4[1];var _useState5=useState(0),_useState6=_slicedToArray(_useState5,2),addedLinesCount=_useState6[0],setAddedLinesCount=_useState6[1];var _useState7=useState(false),_useState8=_slicedToArray(_useState7,2),linesAddedToCartDialogOpen=_useState8[0],setLinesAddedToCartDialogOpen=_useState8[1];var onClickHandler=/*#__PURE__*/function(){var _ref2=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee2(event){return _regeneratorRuntime.wrap(function _callee2$(_context2){while(1){switch(_context2.prev=_context2.next){case 0:_context2.next=2;return AddToCartComponentActions.onClick(event,props,setUploadStatus,setModalOpen,setLinesAddedToCartDialogOpen,setAddedLinesCount);case 2:case\"end\":return _context2.stop();}}},_callee2);}));return function onClickHandler(_x7){return _ref2.apply(this,arguments);};}();var closeLinesAddedToCartDialog=function closeLinesAddedToCartDialog(){setLinesAddedToCartDialogOpen(false);};var modalText=_getModalText(uploadStatus,props);var processStatusClass=uploadStatus.toLowerCase();var dialogStrings={closeWindowButtonText:props.dialogStrings.closeWindowButtonText};var payLoad=getPayloadObject('click',props.telemetryContent,TelemetryConstant.AddOrderTemplateToCart);var addOrderTemplateAttribute=getTelemetryAttributes(props.telemetryContent,payLoad);var popupProps={dialogStrings:dialogStrings,className:'msc-add-order-template-to-cart',processStatusClass:processStatusClass,text:modalText,modalOpen:modalOpen,setModalOpen:setModalOpen};var renderModalPopup=/*#__PURE__*/React.createElement(PopupProducts,Object.assign({},popupProps));var products=props.data.orderTemplate.orderTemplateLines.map(function(line){return line.fullProduct;}).filter(function(fullProduct){return fullProduct;});return/*#__PURE__*/React.createElement(React.Fragment,null,renderModalPopup,/*#__PURE__*/React.createElement(Button,Object.assign({className:classnames('msc-add-order-template-to-cart ',props.className),\"aria-label\":props.addToCartText,disabled:props.data.orderTemplate.totalLines===0,onClick:onClickHandler},addOrderTemplateAttribute),props.addToCartText),/*#__PURE__*/React.createElement(LinesAddedToCartDialog,{className:'msc-lines-added-to-cart-dialog',id:props.id,typeName:props.typeName,context:props.context,dialogStrings:props.dialogStrings.linesAddedToCartDialogResources,data:{linesCount:addedLinesCount,orderTemplate:props.data.orderTemplate.productList,products:products},modalOpen:linesAddedToCartDialogOpen,onClose:closeLinesAddedToCartDialog}));};export var AddOrderTemplateToCartComponent=msdyn365Commerce.createComponent('AddOrderTemplate',_objectSpread({component:AddOrderTemplate},AddToCartComponentActions));","map":{"version":3,"sources":["order-template/add-order-template-to-cart/add-order-template-to-cart.component.tsx"],"names":[],"mappings":"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","sourcesContent":["import classnames from 'classnames';\nimport React, { useState } from 'react';\n\nimport { Button, getPayloadObject, getTelemetryAttributes, IPopupProductsProps, ITelemetryContent, PopupProducts, TelemetryConstant } from '@msdyn365-commerce-modules/utilities';\nimport { IComponent, IComponentProps, msdyn365Commerce } from '@msdyn365-commerce/core';\n\nimport { addOrderTemplateToCartAction, AddOrderTemplateToCartInput } from '@msdyn365-commerce-modules/retail-actions';\nimport { OrderTemplate } from '@msdyn365-commerce-modules/retail-actions';\nimport { FullProduct } from '@msdyn365-commerce/commerce-entities';\nimport { ILinesAddedToCartDialogResources, LinesAddedToCartDialog } from '../lines-added-to-cart-dialog/lines-added-to-cart-dialog.component';\n\nexport interface IAddOrderTemplateToCartComponentData {\n    orderTemplate: OrderTemplate;\n}\n\nexport interface IAddOrderTemplateToCartComponentProps extends IComponentProps<IAddOrderTemplateToCartComponentData> {\n    className?: string;\n    addToCartText: string;\n    telemetryContent?: ITelemetryContent;\n    dialogStrings: {\n        closeWindowButtonText: string;\n        addToCartFailureMessage: string;\n        addToCartSuccessMessage: string;\n        addToCartProcessMessage: string;\n        linesAddedToCartDialogResources: ILinesAddedToCartDialogResources;\n    };\n}\n\nexport declare type IAddToCartActionFailureReason = 'EMPTYINPUT' | 'MISSINGDIMENSION' | 'OUTOFSTOCK' | 'CARTACTIONFAILED'; // rename to used method\n\nexport interface IAddOrderTemplateToCartComponent extends IComponent<IAddOrderTemplateToCartComponentProps> {\n    onClick(): (event: React.MouseEvent<HTMLElement>, props: IAddOrderTemplateToCartComponentProps) => void;\n}\n\nconst onClick = async (\n    _event: React.MouseEvent<HTMLElement>,\n    props: IAddOrderTemplateToCartComponentProps,\n    setUploadStatus: (uploadStatus: addOrderTemplateToCartStatus) => void,\n    openModal: (opened: boolean) => void,\n    setLinesAddedToCartDialogOpen: (opened: boolean) => void,\n    setAddedLinesCount: (value: number) => void): Promise<void> => {\n        openModal(true);\n        setUploadStatus('LOADING');\n\n        const { context } = props;\n        const addOrderTemplateToCartInput = new AddOrderTemplateToCartInput(props.data.orderTemplate.productList.Id);\n        const addedCartLines = await addOrderTemplateToCartAction(addOrderTemplateToCartInput, context.actionContext);\n        setAddedLinesCount(addedCartLines.length);\n        openModal(false);\n        setTimeout(() => {\n            setLinesAddedToCartDialogOpen(true);\n        }, 500); // tslint:disable-line:align\n};\n\nconst AddToCartComponentActions = {\n    onClick: onClick\n};\n\nexport type addOrderTemplateToCartStatus = 'LOADING' | 'SUCCESS' | 'FAILED' | 'WAITING';\n\nconst _getModalText = (status: addOrderTemplateToCartStatus, props: IAddOrderTemplateToCartComponentProps) => {\n    const { dialogStrings } = props;\n    const { addToCartFailureMessage, addToCartSuccessMessage, addToCartProcessMessage } = dialogStrings;\n\n    if (status === 'LOADING') {\n        return `${addToCartProcessMessage}...`;\n    }\n\n    if (status === 'SUCCESS') {\n        return addToCartSuccessMessage;\n    }\n\n    if (status === 'FAILED') {\n        return addToCartFailureMessage;\n    }\n\n    return '';\n};\n\nconst AddOrderTemplate: React.FC<IAddOrderTemplateToCartComponentProps> = (props: IAddOrderTemplateToCartComponentProps) => {\n    const [uploadStatus, setUploadStatus] = useState<addOrderTemplateToCartStatus>('WAITING');\n    const [modalOpen, setModalOpen] = useState(false);\n    const [addedLinesCount, setAddedLinesCount] = useState(0);\n    const [linesAddedToCartDialogOpen, setLinesAddedToCartDialogOpen] = useState(false);\n\n    const onClickHandler = async (event: React.MouseEvent<HTMLElement>) => {\n        await AddToCartComponentActions.onClick(event, props, setUploadStatus, setModalOpen, setLinesAddedToCartDialogOpen, setAddedLinesCount);\n    };\n    const closeLinesAddedToCartDialog = () => {\n        setLinesAddedToCartDialogOpen(false);\n    };\n\n    const modalText = _getModalText(uploadStatus, props);\n    const processStatusClass = uploadStatus.toLowerCase();\n    const dialogStrings = { closeWindowButtonText: props.dialogStrings.closeWindowButtonText };\n    const payLoad = getPayloadObject('click', props.telemetryContent!, TelemetryConstant.AddOrderTemplateToCart);\n    const addOrderTemplateAttribute = getTelemetryAttributes(props.telemetryContent!, payLoad);\n\n    const popupProps: IPopupProductsProps = {\n        dialogStrings: dialogStrings,\n        className: 'msc-add-order-template-to-cart',\n        processStatusClass: processStatusClass,\n        text: modalText,\n        modalOpen: modalOpen,\n        setModalOpen: setModalOpen\n    };\n\n    const renderModalPopup = <PopupProducts {...popupProps} />;\n\n    const products = props.data.orderTemplate.orderTemplateLines.map(line => line.fullProduct).filter(fullProduct => fullProduct) as FullProduct[];\n\n    return (\n        <>\n            {renderModalPopup}\n            <Button\n                className={classnames('msc-add-order-template-to-cart ', props.className)}\n                aria-label={props.addToCartText}\n                disabled={props.data.orderTemplate.totalLines === 0}\n                onClick={onClickHandler}\n                {...addOrderTemplateAttribute}\n            >\n                {props.addToCartText}\n            </Button>\n            {\n                <LinesAddedToCartDialog\n                    className={'msc-lines-added-to-cart-dialog'}\n                    id={props.id}\n                    typeName={props.typeName}\n                    context={props.context}\n                    dialogStrings={props.dialogStrings.linesAddedToCartDialogResources}\n                    data={{\n                        linesCount: addedLinesCount,\n                        orderTemplate: props.data.orderTemplate.productList,\n                        products: products\n                    }}\n                    modalOpen={linesAddedToCartDialogOpen}\n                    onClose={closeLinesAddedToCartDialog}\n                />\n            }\n        </>\n    );\n};\n\n// @ts-ignore\nexport const AddOrderTemplateToCartComponent: React.FunctionComponent<IAddOrderTemplateToCartComponentProps> = msdyn365Commerce.createComponent<IAddOrderTemplateToCartComponent>(\n    'AddOrderTemplate',\n    { component: AddOrderTemplate, ...AddToCartComponentActions }\n);"],"sourceRoot":"./src/"},"metadata":{},"sourceType":"module"}