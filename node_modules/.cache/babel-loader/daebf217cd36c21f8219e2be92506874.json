{"ast":null,"code":"import\"core-js/modules/es.promise.js\";import{createObservableDataAction}from'@msdyn365-commerce/core';import{getCustomerBalanceAsync}from'@msdyn365-commerce/retail-proxy/dist/DataActions/StoreOperationsDataActions.g';import getCustomer,{GetCustomerInput}from'./get-customer';import{buildCacheKey}from'./index';/**\r\n *  Input class for the GetCustomerBalance data action\r\n */export class GetCustomerBalanceInput{constructor(apiSettings,customerAccountNumber){this.getCacheKey=()=>buildCacheKey(\"CustomerBalance-\".concat(this.customerAccountNumber),this.apiSettings);this.getCacheObjectType=()=>'GetCustomerBalance';this.dataCacheType=()=>'request';this.customerAccountNumber=customerAccountNumber;this.apiSettings=apiSettings;}}/**\r\n * createInput method for the GetCustomerBalance method\r\n * @param inputData The input data passed to the createInput method\r\n */export const createGetCustomerBalanceInput=inputData=>{const{requestContext}=inputData;if(!requestContext.user.isAuthenticated){throw new Error('Unable to create get customer balance input. User is not authenticated.');}return new GetCustomerBalanceInput(requestContext.apiSettings);};/**\r\n * The action method for the GetCustomerBalance data action\r\n * @param input The action input\r\n * @param ctx The action context\r\n */export async function getCustomerBalanceAction(input,ctx){const customerInput=new GetCustomerInput(input.apiSettings,input.customerAccountNumber);const customer=await getCustomer(customerInput,ctx);if(!customer){ctx.telemetry.error('Not able to get customer',new Error('Not able to get customer'));}return getCustomerBalanceAsync({callerContext:ctx,queryResultSettings:{}},customer.AccountNumber,customer.InvoiceAccount);}/**\r\n * The GetCustomerBalance data action\r\n * Returns the customer's balance\r\n */export default createObservableDataAction({id:'@msdyn365-commerce-modules/retail-actions/get-customer-balance',action:getCustomerBalanceAction,input:createGetCustomerBalanceInput});","map":{"version":3,"sources":["../../src/get-customer-balance.ts"],"names":[],"mappings":"sCAAA,OACe,0BADf,KAGO,yBAHP,CAKA,OACI,uBADJ,KAEO,+EAFP,CAIA,MAAO,CAAA,WAAP,EAAsB,gBAAtB,KAA8C,gBAA9C,CACA,OAAS,aAAT,KAA8B,SAA9B,CAEA;;AAEG,GACH,MAAM,MAAO,CAAA,uBAAuB,CAIhC,WAAA,CAAY,WAAZ,CAA+C,qBAA/C,CAA6E,CAKtE,KAAA,WAAA,CAAc,IAAM,aAAa,2BAAoB,KAAK,qBAAzB,EAAkD,KAAK,WAAvD,CAAjC,CACA,KAAA,kBAAA,CAAqB,IAAM,oBAA3B,CACA,KAAA,aAAA,CAAgB,IAAiB,SAAjC,CANH,KAAK,qBAAL,CAA6B,qBAA7B,CACA,KAAK,WAAL,CAAmB,WAAnB,CACH,CAP+B,CAcpC;;;AAGG,GAEH,MAAO,MAAM,CAAA,6BAA6B,CAAI,SAAD,EAA6D,CACtG,KAAM,CAAE,cAAF,EAAqB,SAA3B,CACA,GAAI,CAAC,cAAc,CAAC,IAAf,CAAoB,eAAzB,CAA0C,CACtC,KAAM,IAAI,CAAA,KAAJ,CAAU,yEAAV,CAAN,CACH,CAED,MAAO,IAAI,CAAA,uBAAJ,CAA4B,cAAc,CAAC,WAA3C,CAAP,CACH,CAPM,CASP;;;;AAIG,GACH,MAAO,eAAe,CAAA,wBAAf,CAAwC,KAAxC,CAAwE,GAAxE,CAA2F,CAC9F,KAAM,CAAA,aAAa,CAAG,GAAI,CAAA,gBAAJ,CAAqB,KAAK,CAAC,WAA3B,CAAwC,KAAK,CAAC,qBAA9C,CAAtB,CACA,KAAM,CAAA,QAAQ,CAAG,KAAM,CAAA,WAAW,CAAC,aAAD,CAAgB,GAAhB,CAAlC,CAEA,GAAI,CAAC,QAAL,CAAe,CACX,GAAG,CAAC,SAAJ,CAAc,KAAd,CAAoB,0BAApB,CAAgD,GAAI,CAAA,KAAJ,CAAU,0BAAV,CAAhD,EACH,CAED,MAAO,CAAA,uBAAuB,CAC1B,CACI,aAAa,CAAE,GADnB,CAEI,mBAAmB,CAAE,EAFzB,CAD0B,CAK1B,QAAQ,CAAC,aALiB,CAM1B,QAAQ,CAAC,cANiB,CAA9B,CAQH,CAED;;;AAGG,GACH,cAAe,CAAA,0BAA0B,CAAmB,CACxD,EAAE,CAAE,gEADoD,CAExD,MAAM,CAA6B,wBAFqB,CAGxD,KAAK,CAAgD,6BAHG,CAAnB,CAAzC","sourcesContent":["import {\n    CacheType, createObservableDataAction, IAction, IActionContext, IActionInput,\n    ICommerceApiSettings, ICreateActionContext\n} from '@msdyn365-commerce/core';\nimport { CustomerBalances } from '@msdyn365-commerce/retail-proxy';\nimport {\n    getCustomerBalanceAsync\n} from '@msdyn365-commerce/retail-proxy/dist/DataActions/StoreOperationsDataActions.g';\n\nimport getCustomer, { GetCustomerInput } from './get-customer';\nimport { buildCacheKey } from './index';\n\n/**\n *  Input class for the GetCustomerBalance data action\n */\nexport class GetCustomerBalanceInput implements IActionInput {\n    public customerAccountNumber?: string;\n    public apiSettings: ICommerceApiSettings;\n\n    constructor(apiSettings: ICommerceApiSettings, customerAccountNumber?: string) {\n        this.customerAccountNumber = customerAccountNumber;\n        this.apiSettings = apiSettings;\n    }\n\n    public getCacheKey = () => buildCacheKey(`CustomerBalance-${this.customerAccountNumber}`, this.apiSettings);\n    public getCacheObjectType = () => 'GetCustomerBalance';\n    public dataCacheType = (): CacheType => 'request';\n}\n\n/**\n * createInput method for the GetCustomerBalance method\n * @param inputData The input data passed to the createInput method\n */\n\nexport const createGetCustomerBalanceInput = (inputData: ICreateActionContext): GetCustomerBalanceInput => {\n    const { requestContext } = inputData;\n    if (!requestContext.user.isAuthenticated) {\n        throw new Error('Unable to create get customer balance input. User is not authenticated.');\n    }\n\n    return new GetCustomerBalanceInput(requestContext.apiSettings);\n};\n\n/**\n * The action method for the GetCustomerBalance data action\n * @param input The action input\n * @param ctx The action context\n */\nexport async function getCustomerBalanceAction(input: GetCustomerBalanceInput, ctx: IActionContext): Promise<CustomerBalances> {\n    const customerInput = new GetCustomerInput(input.apiSettings, input.customerAccountNumber);\n    const customer = await getCustomer(customerInput, ctx);\n\n    if (!customer) {\n        ctx.telemetry.error('Not able to get customer', new Error('Not able to get customer'));\n    }\n\n    return getCustomerBalanceAsync(\n        {\n            callerContext: ctx,\n            queryResultSettings: {}\n        },\n        customer.AccountNumber,\n        customer.InvoiceAccount!\n    );\n}\n\n/**\n * The GetCustomerBalance data action\n * Returns the customer's balance\n */\nexport default createObservableDataAction<CustomerBalances>({\n    id: '@msdyn365-commerce-modules/retail-actions/get-customer-balance',\n    action: <IAction<CustomerBalances>>getCustomerBalanceAction,\n    input: <(args: ICreateActionContext) => IActionInput>createGetCustomerBalanceInput\n});\n"],"sourceRoot":""},"metadata":{},"sourceType":"module"}