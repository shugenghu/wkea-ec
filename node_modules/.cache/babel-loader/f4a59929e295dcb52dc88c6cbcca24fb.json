{"ast":null,"code":"import _defineProperty from\"@babel/runtime/helpers/esm/defineProperty\";import _regeneratorRuntime from\"@babel/runtime/regenerator\";import _asyncToGenerator from\"@babel/runtime/helpers/esm/asyncToGenerator\";import _classCallCheck from\"@babel/runtime/helpers/esm/classCallCheck\";import _createClass from\"@babel/runtime/helpers/esm/createClass\";import _inherits from\"@babel/runtime/helpers/esm/inherits\";import _possibleConstructorReturn from\"@babel/runtime/helpers/esm/possibleConstructorReturn\";import _getPrototypeOf from\"@babel/runtime/helpers/esm/getPrototypeOf\";function ownKeys(object,enumerableOnly){var keys=Object.keys(object);if(Object.getOwnPropertySymbols){var symbols=Object.getOwnPropertySymbols(object);if(enumerableOnly)symbols=symbols.filter(function(sym){return Object.getOwnPropertyDescriptor(object,sym).enumerable;});keys.push.apply(keys,symbols);}return keys;}function _objectSpread(target){for(var i=1;i<arguments.length;i++){var source=arguments[i]!=null?arguments[i]:{};if(i%2){ownKeys(Object(source),true).forEach(function(key){_defineProperty(target,key,source[key]);});}else if(Object.getOwnPropertyDescriptors){Object.defineProperties(target,Object.getOwnPropertyDescriptors(source));}else{ownKeys(Object(source)).forEach(function(key){Object.defineProperty(target,key,Object.getOwnPropertyDescriptor(source,key));});}}return target;}function _createSuper(Derived){var hasNativeReflectConstruct=_isNativeReflectConstruct();return function _createSuperInternal(){var Super=_getPrototypeOf(Derived),result;if(hasNativeReflectConstruct){var NewTarget=_getPrototypeOf(this).constructor;result=Reflect.construct(Super,arguments,NewTarget);}else{result=Super.apply(this,arguments);}return _possibleConstructorReturn(this,result);};}function _isNativeReflectConstruct(){if(typeof Reflect===\"undefined\"||!Reflect.construct)return false;if(Reflect.construct.sham)return false;if(typeof Proxy===\"function\")return true;try{Date.prototype.toString.call(Reflect.construct(Date,[],function(){}));return true;}catch(e){return false;}}import{__decorate}from\"tslib\";import*as Msdyn365 from'@msdyn365-commerce/core';import classnames from'classnames';import _get from'lodash/get';import{computed,observable}from'mobx';import{observer}from'mobx-react';import*as React from'react';import{updateCustomerPersonalization,updateCustomerPersonalizationInput}from'@msdyn365-commerce-modules/retail-actions';import{Button,getPayloadObject,getTelemetryAttributes,getTelemetryObject}from'@msdyn365-commerce-modules/utilities';import AccountProfileAttributes from'./components/account-profile-attributes';import DescriptionComponent from'./components/account-profile-description';import LinksComponent from'./components/account-profile-links';import TextComponent from'./components/account-profile-text';var AccountProfile=/*#__PURE__*/function(_React$Component){_inherits(AccountProfile,_React$Component);var _super=_createSuper(AccountProfile);function AccountProfile(props){var _this;_classCallCheck(this,AccountProfile);_this=_super.call(this,props);_this.isUpdatingPreference=false;_this.handleHeadingChange=function(event){return _this.props.config.heading.text=event.target.value;};_this.handleEmailHeadingChange=function(event){return _this.props.config.emailAddressSectionHeading.text=event.target.value;};_this.handleNameHeadingChange=function(event){return _this.props.config.nameSectionHeading.text=event.target.value;};_this.handleLinkTextChange=function(linkIndex){return function(event){if(_this.props.resources.editButtonText){_this.props.resources.editButtonText=event.target.value;}};};_this._renderPreference=function(className,sectionHeading,enableAriaLabel,description,isOptOut){var _this$props$resources=_this.props.resources,toggleDisableText=_this$props$resources.toggleDisableText,toggleEnableText=_this$props$resources.toggleEnableText;var toggleState=isOptOut?'disable':'enable';var onClickHandler=function onClickHandler(event){return _this._updateAccountPersonalization(className);};_this.payLoad.contentAction.etext=sectionHeading.text;var attributes=getTelemetryAttributes(_this.telemetryContent,_this.payLoad);return{accountPreference:{className:classnames('ms-account-profile__preference',\"ms-account-profile__preference-\".concat(className),{'ms-account-profile__personalization-updating':_this.isUpdatingPreference})},heading:sectionHeading&&/*#__PURE__*/React.createElement(Msdyn365.Text,{className:'ms-account-profile__preference-heading',tag:sectionHeading.tag||'h2',text:sectionHeading.text,editProps:{onEdit:_this.handleHeadingChange,requestContext:_this.props.context.request}}),buttonWrapper:{className:classnames('ms-account-profile__toggle-wrapper',\"ms-account-profile__toggle-\".concat(toggleState))},buttonYesText:/*#__PURE__*/React.createElement(TextComponent,{className:'ms-account-profile__toggle-enable-text',text:toggleEnableText}),buttonNoText:/*#__PURE__*/React.createElement(TextComponent,{className:'ms-account-profile__toggle-disable-text',text:toggleDisableText}),button:/*#__PURE__*/React.createElement(Button,Object.assign({className:classnames('ms-account-profile__toggle-button',\"ms-account-profile__toggle-\".concat(toggleState,\"-button\")),\"aria-label\":enableAriaLabel,value:isOptOut.toString(),\"aria-pressed\":!isOptOut,onClick:onClickHandler},attributes)),description:/*#__PURE__*/React.createElement(DescriptionComponent,{className:'ms-account-profile__preference-description',description:description}),onUpdateAccountPreference:function onUpdateAccountPreference(){return _this._updateAccountPersonalization(className);}};};_this._updateAccountPersonalization=/*#__PURE__*/function(){var _ref=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee(preferenceType){var customerInformation,_this$props,telemetry,_this$props$context,request,actionContext,isOptOutPersonalization,input;return _regeneratorRuntime.wrap(function _callee$(_context){while(1){switch(_context.prev=_context.next){case 0:customerInformation=_this.props.data.customerInformation.result;if(!customerInformation){_context.next=22;break;}_this$props=_this.props,telemetry=_this$props.telemetry,_this$props$context=_this$props.context,request=_this$props$context.request,actionContext=_this$props$context.actionContext;isOptOutPersonalization=false;_context.t0=preferenceType;_context.next=_context.t0==='web-tracking'?7:_context.t0===undefined?10:_context.t0==='personalization'?10:10;break;case 7:isOptOutPersonalization=customerInformation.OptOutWebActivityTracking||false;input=new updateCustomerPersonalizationInput(customerInformation.AccountNumber,!isOptOutPersonalization,request.apiSettings,preferenceType);return _context.abrupt(\"break\",12);case 10:isOptOutPersonalization=customerInformation.OptOutPersonalization||false;input=new updateCustomerPersonalizationInput(customerInformation.AccountNumber,!isOptOutPersonalization,request.apiSettings,preferenceType);case 12:_this.isUpdatingPreference=true;_context.prev=13;_context.next=16;return updateCustomerPersonalization(input,actionContext);case 16:_context.next=21;break;case 18:_context.prev=18;_context.t1=_context[\"catch\"](13);if(telemetry){telemetry.exception(_context.t1);telemetry.debug('Unable to update customer personalization');}case 21:_this.isUpdatingPreference=false;case 22:case\"end\":return _context.stop();}}},_callee,null,[[13,18]]);}));return function(_x){return _ref.apply(this,arguments);};}();_this._renderCustomerAttributes=function(){return/*#__PURE__*/React.createElement(AccountProfileAttributes,{accountProfileProps:_this.props});};_this.telemetryContent=getTelemetryObject(_this.props.context.request.telemetryPageName,_this.props.friendlyName,_this.props.telemetry);_this.payLoad=getPayloadObject('click',_this.telemetryContent,'');return _this;}_createClass(AccountProfile,[{key:\"render\",value:function render(){var _this$props2=this.props,config=_this$props2.config,resources=_this$props2.resources,data=_this$props2.data;var className=config.className,heading=config.heading,emailAddressSectionHeading=config.emailAddressSectionHeading,nameSectionHeading=config.nameSectionHeading,showAttributes=config.showAttributes,showPhone=config.showPhone,showVatNumber=config.showVatNumber;var editButtonText=resources.editButtonText,editButtonAriaLabel=resources.editButtonAriaLabel;var customerInformation=data.customerInformation.result;var shouldRenderAttributes=showAttributes&&showAttributes.length>0||showPhone||showVatNumber||false;var editLink={linkUrl:{destinationUrl:_get(this.props,'context.request.user.editProfileUrl','')},linkText:editButtonText,ariaLabel:editButtonAriaLabel};var viewProps=_objectSpread(_objectSpread({},this.props),{},{className:className,AccountProfile:{moduleProps:this.props,className:classnames('ms-account-profile',config.className)},accountProfileWrapper:{className:classnames('ms-account-profile-wrapper')},heading:heading&&/*#__PURE__*/React.createElement(Msdyn365.Text,{className:'ms-account-loyalty-tile__heading',tag:heading.tag||'h2',text:heading.text,editProps:{onEdit:this.handleHeadingChange,requestContext:this.props.context.request}}),emailSection:this._renderEmailSection(classnames('ms-account-profile__section','ms-account-profile__section-email'),emailAddressSectionHeading,customerInformation&&customerInformation.Email),nameSection:this._renderNameSection(classnames('ms-account-profile__section','ms-account-profile__section-name'),nameSectionHeading,\"\".concat(customerInformation&&customerInformation.FirstName,\" \").concat(customerInformation&&customerInformation.LastName),[editLink]),preferenceSection:this._renderPreferenceSection(classnames('ms-account-profile__section','ms-account-profile__section-preferences'),customerInformation),customerAttributesWrapper:{className:classnames('ms-account-profile__attributes-wrapper')},customerAttributesSection:shouldRenderAttributes&&this._renderCustomerAttributes()});return this.props.renderView(viewProps);}},{key:\"_renderEmailSection\",value:function _renderEmailSection(className,heading,description,links){return{AccountProfileItem:{className:className},heading:heading&&/*#__PURE__*/React.createElement(Msdyn365.Text,{className:'ms-account-profile__section-heading',tag:heading.tag||'h2',text:heading.text,editProps:{onEdit:this.handleEmailHeadingChange,requestContext:this.props.context.request}}),links:links&&links.length>0&&/*#__PURE__*/React.createElement(LinksComponent,Object.assign({},{links:links,onTextChange:this.handleLinkTextChange,requestContext:this.props.context.request,telemetryContent:this.telemetryContent})),description:description&&/*#__PURE__*/React.createElement(DescriptionComponent,{className:'ms-account-profile__section-description',description:description})};}},{key:\"_renderNameSection\",value:function _renderNameSection(className,heading,description,links){return{AccountProfileItem:{className:className},heading:heading&&/*#__PURE__*/React.createElement(Msdyn365.Text,{className:'ms-account-profile__section-heading',tag:heading.tag||'h2',text:heading.text,editProps:{onEdit:this.handleNameHeadingChange,requestContext:this.props.context.request}}),links:links&&links.length>0&&/*#__PURE__*/React.createElement(LinksComponent,Object.assign({},{links:links,onTextChange:this.handleLinkTextChange,requestContext:this.props.context.request,telemetryContent:this.telemetryContent})),description:description&&/*#__PURE__*/React.createElement(DescriptionComponent,{className:'ms-account-profile__section-description',description:description})};}},{key:\"_renderPreferenceSection\",value:function _renderPreferenceSection(className,customerInformation){var _this$props$resources2=this.props.resources,personalizationDescription=_this$props$resources2.personalizationDescription,personalizationEnableButtonAriaLabel=_this$props$resources2.personalizationEnableButtonAriaLabel,webTrackingDescription=_this$props$resources2.webTrackingDescription,webTrackingEnableButtonAriaLabel=_this$props$resources2.webTrackingEnableButtonAriaLabel;var _this$props$config=this.props.config,preferencesSectionHeading=_this$props$config.preferencesSectionHeading,personalizationSectionHeading=_this$props$config.personalizationSectionHeading,webTrackingSectionHeading=_this$props$config.webTrackingSectionHeading;var enableDataAnalytics=this.props.context.request.features.enableDataAnalytics;var extraPreferences=[];if(!customerInformation){this.props.context.telemetry.error('Account profile data is empty, module wont render');return null;}enableDataAnalytics&&webTrackingSectionHeading&&extraPreferences.push(this._renderPreference('web-tracking',webTrackingSectionHeading,webTrackingEnableButtonAriaLabel,webTrackingDescription,customerInformation.OptOutWebActivityTracking||false));return{accountPreferences:{className:className},heading:preferencesSectionHeading&&/*#__PURE__*/React.createElement(Msdyn365.Text,{className:'ms-account-profile__section-heading',tag:preferencesSectionHeading.tag||'h2',text:preferencesSectionHeading.text,editProps:{onEdit:this.handleHeadingChange,requestContext:this.props.context.request}}),personalization:this._renderPreference('personalization',personalizationSectionHeading,personalizationEnableButtonAriaLabel,personalizationDescription,customerInformation.OptOutPersonalization||false),extraPreferences:extraPreferences||undefined};}},{key:\"editProfileUrl\",get:function get(){return _get(this.props,'context.request.user.editProfileUrl','');}}]);return AccountProfile;}(React.Component);__decorate([observable],AccountProfile.prototype,\"isUpdatingPreference\",void 0);__decorate([computed],AccountProfile.prototype,\"editProfileUrl\",null);AccountProfile=__decorate([observer],AccountProfile);export default AccountProfile;","map":{"version":3,"sources":["modules/account-profile/account-profile.tsx"],"names":[],"mappings":"4hEAIA,MAAO,GAAK,CAAA,QAAZ,KAA0B,yBAA1B,CACA,MAAO,CAAA,UAAP,KAAuB,YAAvB,CACA,MAAO,CAAA,IAAP,KAAgB,YAAhB,CACA,OAAS,QAAT,CAAmB,UAAnB,KAAqC,MAArC,CACA,OAAS,QAAT,KAAyB,YAAzB,CACA,MAAO,GAAK,CAAA,KAAZ,KAAuB,OAAvB,CAEA,OAAS,6BAAT,CAAwC,kCAAxC,KAAkF,2CAAlF,CACA,OAAS,MAAT,CAAiB,gBAAjB,CAAmC,sBAAnC,CAA2D,kBAA3D,KAA4I,sCAA5I,CAIA,MAAO,CAAA,wBAAP,KAAqC,yCAArC,CACA,MAAO,CAAA,oBAAP,KAAiC,0CAAjC,CACA,MAAO,CAAA,cAAP,KAA2C,oCAA3C,CACA,MAAO,CAAA,aAAP,KAA0B,mCAA1B,CAiDA,GAAM,CAAA,cAAN,4HAMI,wBAAY,KAAZ,CAA4D,gDACxD,uBAAM,KAAN,EANgB,MAAA,oBAAA,CAAgC,KAAhC,CAoEb,MAAA,mBAAA,CAAsB,SAAC,KAAD,QAA0C,OAAK,KAAL,CAAW,MAAX,CAAkB,OAAlB,CAA0B,IAA1B,CAAiC,KAAK,CAAC,MAAN,CAAa,KAAxF,EAAtB,CACA,MAAA,wBAAA,CAA2B,SAAC,KAAD,QAA0C,OAAK,KAAL,CAAW,MAAX,CAAkB,0BAAlB,CAA8C,IAA9C,CAAqD,KAAK,CAAC,MAAN,CAAa,KAA5G,EAA3B,CACA,MAAA,uBAAA,CAA0B,SAAC,KAAD,QAA0C,OAAK,KAAL,CAAW,MAAX,CAAkB,kBAAlB,CAAsC,IAAtC,CAA6C,KAAK,CAAC,MAAN,CAAa,KAApG,EAA1B,CACA,MAAA,oBAAA,CAAuB,SAAC,SAAD,QAAuB,UAAC,KAAD,CAAyC,CAC1F,GAAG,MAAK,KAAL,CAAW,SAAX,CAAqB,cAAxB,CAAwC,CACtC,MAAK,KAAL,CAAW,SAAX,CAAqB,cAArB,CAAsC,KAAK,CAAC,MAAN,CAAa,KAAnD,CACD,CACF,CAJ2B,EAAvB,CA4EC,MAAA,iBAAA,CAAoB,SAAC,SAAD,CAAoB,cAApB,CAAkD,eAAlD,CAA2E,WAA3E,CAAgG,QAAhG,CAAqH,2BAC7F,MAAK,KAAL,CAAW,SADkF,CACrI,iBADqI,uBACrI,iBADqI,CAClH,gBADkH,uBAClH,gBADkH,CAE7I,GAAM,CAAA,WAAW,CAAG,QAAQ,CAAG,SAAH,CAAe,QAA3C,CACA,GAAM,CAAA,cAAc,CAAG,QAAjB,CAAA,cAAiB,CAAC,KAAD,CAAyC,CAAG,MAAO,OAAK,6BAAL,CAAmC,SAAnC,CAAP,CAAuD,CAA1H,CACA,MAAK,OAAL,CAAa,aAAb,CAA2B,KAA3B,CAAmC,cAAc,CAAC,IAAlD,CACA,GAAM,CAAA,UAAU,CAAG,sBAAsB,CAAC,MAAK,gBAAN,CAAyB,MAAK,OAA9B,CAAzC,CAEA,MAAO,CACH,iBAAiB,CAAE,CACf,SAAS,CAAE,UAAU,CAAC,gCAAD,0CAAqE,SAArE,EAAkF,CAAE,+CAAgD,MAAK,oBAAvD,CAAlF,CADN,CADhB,CAIH,OAAO,CAAE,cAAc,eACnB,KAAA,CAAA,aAAA,CAAC,QAAQ,CAAC,IAAV,CAAc,CACZ,SAAS,CAAC,wCADE,CAEZ,GAAG,CAAE,cAAc,CAAC,GAAf,EAAsB,IAFf,CAGZ,IAAI,CAAE,cAAc,CAAC,IAHT,CAIZ,SAAS,CAAI,CAAC,MAAM,CAAE,MAAK,mBAAd,CAAmC,cAAc,CAAE,MAAK,KAAL,CAAW,OAAX,CAAmB,OAAtE,CAJD,CAAd,CALD,CAWH,aAAa,CAAE,CACX,SAAS,CAAE,UAAU,CAAC,oCAAD,sCAAqE,WAArE,EADV,CAXZ,CAcH,aAAa,cAAE,KAAA,CAAA,aAAA,CAAC,aAAD,CAAc,CAAC,SAAS,CAAC,wCAAX,CAAoD,IAAI,CAAE,gBAA1D,CAAd,CAdZ,CAeH,YAAY,cAAE,KAAA,CAAA,aAAA,CAAC,aAAD,CAAc,CAAC,SAAS,CAAC,yCAAX,CAAqD,IAAI,CAAE,iBAA3D,CAAd,CAfX,CAgBH,MAAM,cACF,KAAA,CAAA,aAAA,CAAC,MAAD,CAAO,MAAA,CAAA,MAAA,CAAA,CACH,SAAS,CAAE,UAAU,CAAC,mCAAD,sCAAoE,WAApE,YADlB,CAC2G,aAClG,eAFT,CAGH,KAAK,CAAE,QAAQ,CAAC,QAAT,EAHJ,CAGuB,eACZ,CAAC,QAJZ,CAKH,OAAO,CAAE,cALN,CAAA,CAMC,UAND,CAAP,CAjBD,CA0BH,WAAW,cAAE,KAAA,CAAA,aAAA,CAAC,oBAAD,CAAqB,CAAC,SAAS,CAAC,4CAAX,CAAwD,WAAW,CAAE,WAArE,CAArB,CA1BV,CA2BH,yBAAyB,CAAE,2CAAM,OAAK,6BAAL,CAAmC,SAAnC,CAAN,EA3BxB,CAAP,CA6BH,CApCO,CAsCA,MAAA,6BAAA,0FAAgC,iBAAO,cAAP,wOAC9B,mBAD8B,CACR,MAAK,KAAL,CAAW,IAAX,CAAgB,mBAAhB,CAAoC,MAD5B,KAGhC,mBAHgC,sCAO5B,MAAK,KAPuB,CAK5B,SAL4B,aAK5B,SAL4B,iCAM5B,OAN4B,CAMjB,OANiB,qBAMjB,OANiB,CAMR,aANQ,qBAMR,aANQ,CAS5B,uBAT4B,CASF,KATE,aAYxB,cAZwB,6BAavB,cAbuB,iBAiBvB,SAjBuB,kBAkBvB,iBAlBuB,oBAcxB,uBAAuB,CAAG,mBAAmB,CAAC,yBAApB,EAAiD,KAA3E,CACA,KAAK,CAAG,GAAI,CAAA,kCAAJ,CAAuC,mBAAmB,CAAC,aAA3D,CAA0E,CAAC,uBAA3E,CAAoG,OAAO,CAAC,WAA5G,CAAyH,cAAzH,CAAR,CAfwB,2CAoBxB,uBAAuB,CAAG,mBAAmB,CAAC,qBAApB,EAA6C,KAAvE,CACA,KAAK,CAAG,GAAI,CAAA,kCAAJ,CAAuC,mBAAmB,CAAC,aAA3D,CAA0E,CAAC,uBAA3E,CAAoG,OAAO,CAAC,WAA5G,CAAyH,cAAzH,CAAR,CArBwB,QAwBhC,MAAK,oBAAL,CAA4B,IAA5B,CAxBgC,wCA2BtB,CAAA,6BAA6B,CAAC,KAAD,CAAQ,aAAR,CA3BP,2FA6B5B,GAAI,SAAJ,CAAe,CACX,SAAS,CAAC,SAAV,cACA,SAAS,CAAC,KAAV,CAAgB,2CAAhB,EACH,CAhC2B,QAmChC,MAAK,oBAAL,CAA4B,KAA5B,CAnCgC,sEAAhC,+DAuCA,MAAA,yBAAA,CAA4B,UAAsB,CACtD,mBACI,KAAA,CAAA,aAAA,CAAC,wBAAD,CAAyB,CACtB,mBAAmB,CAAI,MAAK,KADN,CAAzB,CADJ,CAKH,CANO,CAzNJ,MAAK,gBAAL,CAAwB,kBAAkB,CAAC,MAAK,KAAL,CAAW,OAAX,CAAmB,OAAnB,CAA2B,iBAA5B,CAAgD,MAAK,KAAL,CAAW,YAA3D,CAAyE,MAAK,KAAL,CAAW,SAApF,CAA1C,CACA,MAAK,OAAL,CAAe,gBAAgB,CAAC,OAAD,CAAU,MAAK,gBAAf,CAAiC,EAAjC,CAA/B,CAHwD,aAI3D,CAVL,kEAYiB,kBAE2B,KAAK,KAFhC,CAED,MAFC,cAED,MAFC,CAEO,SAFP,cAEO,SAFP,CAEkB,IAFlB,cAEkB,IAFlB,IAGD,CAAA,SAHC,CAGgH,MAHhH,CAGD,SAHC,CAGU,OAHV,CAGgH,MAHhH,CAGU,OAHV,CAGmB,0BAHnB,CAGgH,MAHhH,CAGmB,0BAHnB,CAG+C,kBAH/C,CAGgH,MAHhH,CAG+C,kBAH/C,CAGmE,cAHnE,CAGgH,MAHhH,CAGmE,cAHnE,CAGmF,SAHnF,CAGgH,MAHhH,CAGmF,SAHnF,CAG8F,aAH9F,CAGgH,MAHhH,CAG8F,aAH9F,IAKD,CAAA,cALC,CAKuC,SALvC,CAKD,cALC,CAKe,mBALf,CAKuC,SALvC,CAKe,mBALf,CAMT,GAAM,CAAA,mBAAmB,CAAG,IAAI,CAAC,mBAAL,CAAyB,MAArD,CAGA,GAAM,CAAA,sBAAsB,CAAI,cAAc,EAAI,cAAc,CAAC,MAAf,CAAwB,CAA3C,EAAiD,SAAjD,EAA8D,aAA9D,EAA+E,KAA9G,CACA,GAAM,CAAA,QAAQ,CAAe,CACzB,OAAO,CAAE,CACL,cAAc,CAAE,IAAG,CAAC,KAAK,KAAN,CAAa,qCAAb,CAAoD,EAApD,CADd,CADgB,CAIzB,QAAQ,CAAE,cAJe,CAKzB,SAAS,CAAE,mBALc,CAA7B,CAQA,GAAM,CAAA,SAAS,gCACR,KAAK,KADG,MAEX,SAAS,CAAE,SAFA,CAGX,cAAc,CAAE,CACZ,WAAW,CAAE,KAAK,KADN,CAEZ,SAAS,CAAE,UAAU,CAAC,oBAAD,CAAuB,MAAM,CAAC,SAA9B,CAFT,CAHL,CAOX,qBAAqB,CAAE,CACnB,SAAS,CAAE,UAAU,CAAC,4BAAD,CADF,CAPZ,CAUX,OAAO,CAAE,OAAO,eACZ,KAAA,CAAA,aAAA,CAAC,QAAQ,CAAC,IAAV,CAAc,CACZ,SAAS,CAAC,kCADE,CAEZ,GAAG,CAAE,OAAO,CAAC,GAAR,EAAe,IAFR,CAGZ,IAAI,CAAE,OAAO,CAAC,IAHF,CAIZ,SAAS,CAAI,CAAC,MAAM,CAAE,KAAK,mBAAd,CAAmC,cAAc,CAAE,KAAK,KAAL,CAAW,OAAX,CAAmB,OAAtE,CAJD,CAAd,CAXO,CAiBX,YAAY,CAAE,KAAK,mBAAL,CACV,UAAU,CAAC,6BAAD,CAAgC,mCAAhC,CADA,CAEV,0BAFU,CAGV,mBAAmB,EAAI,mBAAmB,CAAC,KAHjC,CAjBH,CAsBX,WAAW,CAAE,KAAK,kBAAL,CACT,UAAU,CAAC,6BAAD,CAAgC,kCAAhC,CADD,CAET,kBAFS,WAGN,mBAAmB,EAAI,mBAAmB,CAAC,SAHrC,aAGkD,mBAAmB,EAAI,mBAAmB,CAAC,QAH7F,EAIT,CAAC,QAAD,CAJS,CAtBF,CA4BX,iBAAiB,CAAE,KAAK,wBAAL,CACf,UAAU,CAAC,6BAAD,CAAgC,yCAAhC,CADK,CAEf,mBAFe,CA5BR,CAgCX,yBAAyB,CAAE,CACvB,SAAS,CAAE,UAAU,CAAC,wCAAD,CADE,CAhChB,CAmCX,yBAAyB,CAAE,sBAAsB,EAAI,KAAK,yBAAL,EAnC1C,EAAf,CAqCA,MAAO,MAAK,KAAL,CAAW,UAAX,CAAsB,SAAtB,CAAP,CACH,CApEL,gEAiFgC,SAjFhC,CAiFmD,OAjFnD,CAiF8F,WAjF9F,CAiFoH,KAjFpH,CAiFwI,CAChI,MAAO,CACH,kBAAkB,CAAE,CAChB,SAAS,CAAE,SADK,CADjB,CAIH,OAAO,CAAE,OAAO,eACZ,KAAA,CAAA,aAAA,CAAC,QAAQ,CAAC,IAAV,CAAc,CACZ,SAAS,CAAC,qCADE,CAEZ,GAAG,CAAE,OAAO,CAAC,GAAR,EAAe,IAFR,CAGZ,IAAI,CAAE,OAAO,CAAC,IAHF,CAIZ,SAAS,CAAI,CAAC,MAAM,CAAE,KAAK,wBAAd,CAAwC,cAAc,CAAE,KAAK,KAAL,CAAW,OAAX,CAAmB,OAA3E,CAJD,CAAd,CALD,CAWH,KAAK,CAAE,KAAK,EAAI,KAAK,CAAC,MAAN,CAAe,CAAxB,eAA6B,KAAA,CAAA,aAAA,CAAC,cAAD,CAAe,MAAA,CAAA,MAAA,CAAA,EAAA,CAAK,CAAE,KAAK,CAAE,KAAT,CAAgB,YAAY,CAAE,KAAK,oBAAnC,CAAyD,cAAc,CAAE,KAAK,KAAL,CAAW,OAAX,CAAmB,OAA5F,CAAqG,gBAAgB,CAAE,KAAK,gBAA5H,CAAL,CAAf,CAXjC,CAYH,WAAW,CAAE,WAAW,eAAI,KAAA,CAAA,aAAA,CAAC,oBAAD,CAAqB,CAAC,SAAS,CAAC,yCAAX,CAAqD,WAAW,CAAE,WAAlE,CAArB,CAZzB,CAAP,CAcH,CAhGL,8DAkG+B,SAlG/B,CAkGkD,OAlGlD,CAkGqF,WAlGrF,CAkG2G,KAlG3G,CAkG+H,CACvH,MAAO,CACH,kBAAkB,CAAE,CAChB,SAAS,CAAE,SADK,CADjB,CAIH,OAAO,CAAE,OAAO,eACZ,KAAA,CAAA,aAAA,CAAC,QAAQ,CAAC,IAAV,CAAc,CACZ,SAAS,CAAC,qCADE,CAEZ,GAAG,CAAE,OAAO,CAAC,GAAR,EAAe,IAFR,CAGZ,IAAI,CAAE,OAAO,CAAC,IAHF,CAIZ,SAAS,CAAI,CAAC,MAAM,CAAE,KAAK,uBAAd,CAAuC,cAAc,CAAE,KAAK,KAAL,CAAW,OAAX,CAAmB,OAA1E,CAJD,CAAd,CALD,CAWH,KAAK,CAAE,KAAK,EAAI,KAAK,CAAC,MAAN,CAAe,CAAxB,eAA6B,KAAA,CAAA,aAAA,CAAC,cAAD,CAAe,MAAA,CAAA,MAAA,CAAA,EAAA,CAAK,CAAE,KAAK,CAAE,KAAT,CAAgB,YAAY,CAAE,KAAK,oBAAnC,CAAyD,cAAc,CAAE,KAAK,KAAL,CAAW,OAAX,CAAmB,OAA5F,CAAqG,gBAAgB,CAAE,KAAK,gBAA5H,CAAL,CAAf,CAXjC,CAYH,WAAW,CAAE,WAAW,eAAI,KAAA,CAAA,aAAA,CAAC,oBAAD,CAAqB,CAAC,SAAS,CAAC,yCAAX,CAAqD,WAAW,CAAE,WAAlE,CAArB,CAZzB,CAAP,CAcH,CAjHL,0EAkHqC,SAlHrC,CAkHwD,mBAlHxD,CAkHsF,4BAEb,KAAK,KAAL,CAAW,SAFE,CACtE,0BADsE,wBACtE,0BADsE,CAC1C,oCAD0C,wBAC1C,oCAD0C,CAE1E,sBAF0E,wBAE1E,sBAF0E,CAElD,gCAFkD,wBAElD,gCAFkD,wBAGkB,KAAK,KAAL,CAAW,MAH7B,CAGtE,yBAHsE,oBAGtE,yBAHsE,CAG3C,6BAH2C,oBAG3C,6BAH2C,CAGZ,yBAHY,oBAGZ,yBAHY,IAItE,CAAA,mBAJsE,CAI9C,KAAK,KAAL,CAAW,OAAX,CAAmB,OAAnB,CAA2B,QAJmB,CAItE,mBAJsE,CAK9E,GAAM,CAAA,gBAAgB,CAAyB,EAA/C,CAEA,GAAI,CAAC,mBAAL,CAA0B,CACtB,KAAK,KAAL,CAAW,OAAX,CAAmB,SAAnB,CAA6B,KAA7B,CAAmC,mDAAnC,EACA,MAAO,KAAP,CACH,CAGD,mBAAmB,EAAI,yBAAvB,EACI,gBAAgB,CAAC,IAAjB,CAAsB,KAAK,iBAAL,CAAuB,cAAvB,CAAuC,yBAAvC,CAAkF,gCAAlF,CACuB,sBADvB,CAC+C,mBAAmB,CAAC,yBAApB,EAAiD,KADhG,CAAtB,CADJ,CAIA,MAAO,CACH,kBAAkB,CAAE,CAChB,SAAS,CAAE,SADK,CADjB,CAIH,OAAO,CAAE,yBAAyB,eAC9B,KAAA,CAAA,aAAA,CAAC,QAAQ,CAAC,IAAV,CAAc,CACZ,SAAS,CAAC,qCADE,CAEZ,GAAG,CAAE,yBAAyB,CAAC,GAA1B,EAAiC,IAF1B,CAGZ,IAAI,CAAE,yBAAyB,CAAC,IAHpB,CAIZ,SAAS,CAAI,CAAC,MAAM,CAAE,KAAK,mBAAd,CAAmC,cAAc,CAAE,KAAK,KAAL,CAAW,OAAX,CAAmB,OAAtE,CAJD,CAAd,CALD,CAWH,eAAe,CAAE,KAAK,iBAAL,CAAuB,iBAAvB,CAA0C,6BAA1C,CAAyF,oCAAzF,CACuB,0BADvB,CACmD,mBAAmB,CAAC,qBAApB,EAA6C,KADhG,CAXd,CAaH,gBAAgB,CAAE,gBAAgB,EAAI,SAbnC,CAAP,CAeH,CAlJL,0CA8EgC,CACxB,MAAO,CAAA,IAAG,CAAC,KAAK,KAAN,CAAa,qCAAb,CAAoD,EAApD,CAAV,CACH,CAhFL,4BAA6B,KAAK,CAAC,SAAnC,CAAA,CACgB,UAAA,CAAA,CAAX,UAAW,CAAA,C,wBAAA,C,sBAAA,C,IAA8C,EAA9C,CAAA,CA6EF,UAAA,CAAA,CAAT,QAAS,CAAA,C,wBAAA,C,gBAAA,CAET,IAFS,CAAA,CA9ER,cAAc,CAAA,UAAA,CAAA,CADnB,QACmB,CAAA,CAAd,cAAc,CAAd,CA0ON,cAAe,CAAA,cAAf","sourcesContent":["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nimport * as Msdyn365 from '@msdyn365-commerce/core';\nimport classnames from 'classnames';\nimport get from 'lodash/get';\nimport { computed, observable } from 'mobx';\nimport { observer } from 'mobx-react';\nimport * as React from 'react';\n\nimport { updateCustomerPersonalization, updateCustomerPersonalizationInput } from '@msdyn365-commerce-modules/retail-actions';\nimport { Button, getPayloadObject, getTelemetryAttributes, getTelemetryObject, IModuleProps, INodeProps, IPayLoad, ITelemetryContent } from '@msdyn365-commerce-modules/utilities';\nimport { Customer } from '@msdyn365-commerce/retail-proxy/dist/Entities/CommerceTypes.g';\nimport { IAccountProfileData } from './account-profile.data';\nimport { IAccountProfileProps, IEmailAddressSectionHeadingData, IHeadingData, INameSectionHeadingData} from './account-profile.props.autogenerated';\nimport AccountProfileAttributes from './components/account-profile-attributes';\nimport DescriptionComponent from './components/account-profile-description';\nimport LinksComponent, { ILinksData } from './components/account-profile-links';\nimport TextComponent from './components/account-profile-text';\n\nexport interface IAccountPreference {\n    accountPreference: INodeProps;\n    heading: React.ReactNode;\n    buttonWrapper: INodeProps;\n    buttonYesText: React.ReactNode;\n    buttonNoText: React.ReactNode;\n    button: React.ReactNode;\n    description: React.ReactNode;\n    onUpdateAccountPreference(preferenceType?: string): void;\n}\n\nexport interface IAccountPreferences {\n    accountPreferences: INodeProps;\n    heading?: React.ReactNode;\n    personalization: IAccountPreference;\n    extraPreferences?: IAccountPreference[];\n}\n\nexport interface IAccountProfileItem {\n    AccountProfileItem: INodeProps;\n    heading?: React.ReactNode;\n    links?: React.ReactNode;\n    description?: React.ReactNode;\n}\n\nexport interface IAccountCustomerAttributes {\n    customerAttributes?: React.ReactNode;\n}\n\nexport interface IAccountProfileViewProps extends IAccountProfileProps<IAccountProfileData> {\n    AccountProfile: IModuleProps;\n    accountProfileWrapper?: INodeProps;\n    className: string;\n    heading?: React.ReactNode;\n    emailSection: IAccountProfileItem;\n    nameSection: IAccountProfileItem;\n    preferenceSection: IAccountPreferences;\n    customerAttributesWrapper?: INodeProps;\n    customerAttributesSection?: IAccountCustomerAttributes;\n}\n\n/**\n *\n * AccountProfile component\n * @extends {React.Component<IAccountProfileProps<IAccountProfileData>>}\n */\n@observer\nclass AccountProfile extends React.Component<IAccountProfileProps<IAccountProfileData>> {\n    @observable private isUpdatingPreference: boolean = false;\n\n    private telemetryContent?: ITelemetryContent;\n    private payLoad: IPayLoad;\n\n    constructor(props: IAccountProfileProps<IAccountProfileData>) {\n        super(props);\n        this.telemetryContent = getTelemetryObject(this.props.context.request.telemetryPageName!, this.props.friendlyName, this.props.telemetry);\n        this.payLoad = getPayloadObject('click', this.telemetryContent, '');\n    }\n\n    public render(): JSX.Element {\n\n        const { config, resources, data } = this.props;\n        const { className, heading, emailAddressSectionHeading, nameSectionHeading, showAttributes, showPhone, showVatNumber } = config;\n\n        const { editButtonText, editButtonAriaLabel } = resources;\n        const customerInformation = data.customerInformation.result;\n\n        // As per the design, phone and vat numbers are part of the profile attributes section\n        const shouldRenderAttributes = (showAttributes && showAttributes.length > 0) || showPhone || showVatNumber || false;\n        const editLink: ILinksData = {\n            linkUrl: {\n                destinationUrl: get(this.props, 'context.request.user.editProfileUrl', '')\n            },\n            linkText: editButtonText,\n            ariaLabel: editButtonAriaLabel\n        };\n\n        const viewProps = {\n            ...this.props,\n            className: className,\n            AccountProfile: {\n                moduleProps: this.props,\n                className: classnames('ms-account-profile', config.className)\n            },\n            accountProfileWrapper: {\n                className: classnames('ms-account-profile-wrapper')\n            },\n            heading: heading && (\n                <Msdyn365.Text\n                  className='ms-account-loyalty-tile__heading'\n                  tag={heading.tag || 'h2'}\n                  text={heading.text}\n                  editProps = {{onEdit: this.handleHeadingChange, requestContext: this.props.context.request}}\n                />),\n            emailSection: this._renderEmailSection(\n                classnames('ms-account-profile__section', 'ms-account-profile__section-email'),\n                emailAddressSectionHeading as IEmailAddressSectionHeadingData,\n                customerInformation && customerInformation.Email\n            ),\n            nameSection: this._renderNameSection(\n                classnames('ms-account-profile__section', 'ms-account-profile__section-name'),\n                nameSectionHeading as INameSectionHeadingData,\n                `${customerInformation && customerInformation.FirstName} ${customerInformation && customerInformation.LastName}`,\n                [editLink]\n            ),\n            preferenceSection: this._renderPreferenceSection(\n                classnames('ms-account-profile__section', 'ms-account-profile__section-preferences'),\n                customerInformation,\n            ),\n            customerAttributesWrapper: {\n                className: classnames('ms-account-profile__attributes-wrapper')\n            },\n            customerAttributesSection: shouldRenderAttributes && this._renderCustomerAttributes()\n        };\n        return this.props.renderView(viewProps) as React.ReactElement;\n    }\n    public handleHeadingChange = (event: Msdyn365.ContentEditableEvent) => this.props.config.heading.text = event.target.value;\n    public handleEmailHeadingChange = (event: Msdyn365.ContentEditableEvent) => this.props.config.emailAddressSectionHeading!.text = event.target.value;\n    public handleNameHeadingChange = (event: Msdyn365.ContentEditableEvent) => this.props.config.nameSectionHeading!.text = event.target.value;\n    public handleLinkTextChange = (linkIndex: number) => (event: Msdyn365.ContentEditableEvent) => {\n        if(this.props.resources.editButtonText) {\n          this.props.resources.editButtonText = event.target.value;\n        }\n      };\n\n    @computed get editProfileUrl(): string {\n        return get(this.props, 'context.request.user.editProfileUrl', '');\n    }\n    private _renderEmailSection(className: string, heading?: IEmailAddressSectionHeadingData, description?: string, links?: ILinksData[]): IAccountProfileItem {\n        return {\n            AccountProfileItem: {\n                className: className\n            },\n            heading: heading && (\n                <Msdyn365.Text\n                  className='ms-account-profile__section-heading'\n                  tag={heading.tag || 'h2'}\n                  text={heading.text}\n                  editProps = {{onEdit: this.handleEmailHeadingChange, requestContext: this.props.context.request}}\n                />),\n            links: links && links.length > 0 && <LinksComponent {...{ links: links, onTextChange: this.handleLinkTextChange, requestContext: this.props.context.request, telemetryContent: this.telemetryContent }} />,\n            description: description && <DescriptionComponent className='ms-account-profile__section-description' description={description} />\n        };\n    }\n\n    private _renderNameSection(className: string, heading?: INameSectionHeadingData, description?: string, links?: ILinksData[]): IAccountProfileItem {\n        return {\n            AccountProfileItem: {\n                className: className\n            },\n            heading: heading && (\n                <Msdyn365.Text\n                  className='ms-account-profile__section-heading'\n                  tag={heading.tag || 'h2'}\n                  text={heading.text}\n                  editProps = {{onEdit: this.handleNameHeadingChange, requestContext: this.props.context.request}}\n                />),\n            links: links && links.length > 0 && <LinksComponent {...{ links: links, onTextChange: this.handleLinkTextChange, requestContext: this.props.context.request, telemetryContent: this.telemetryContent }} />,\n            description: description && <DescriptionComponent className='ms-account-profile__section-description' description={description} />\n        };\n    }\n    private _renderPreferenceSection(className: string, customerInformation?: Customer): IAccountPreferences | null {\n        const { personalizationDescription, personalizationEnableButtonAriaLabel,\n            webTrackingDescription, webTrackingEnableButtonAriaLabel } = this.props.resources;\n        const { preferencesSectionHeading, personalizationSectionHeading, webTrackingSectionHeading } = this.props.config;\n        const { enableDataAnalytics } = this.props.context.request.features;\n        const extraPreferences: IAccountPreference[] = [];\n\n        if (!customerInformation) {\n            this.props.context.telemetry.error('Account profile data is empty, module wont render');\n            return null;\n        }\n\n        // show browser activity loggin preference if switch is enabled AND a heading is provided\n        enableDataAnalytics && webTrackingSectionHeading &&\n            extraPreferences.push(this._renderPreference('web-tracking', webTrackingSectionHeading as IHeadingData, webTrackingEnableButtonAriaLabel,\n                                                         webTrackingDescription, customerInformation.OptOutWebActivityTracking || false));\n\n        return {\n            accountPreferences: {\n                className: className\n            },\n            heading: preferencesSectionHeading && (\n                <Msdyn365.Text\n                  className='ms-account-profile__section-heading'\n                  tag={preferencesSectionHeading.tag || 'h2'}\n                  text={preferencesSectionHeading.text}\n                  editProps = {{onEdit: this.handleHeadingChange, requestContext: this.props.context.request}}\n                />),\n            personalization: this._renderPreference('personalization', personalizationSectionHeading as IHeadingData, personalizationEnableButtonAriaLabel,\n                                                    personalizationDescription, customerInformation.OptOutPersonalization || false),\n            extraPreferences: extraPreferences || undefined\n        };\n    }\n\n    private _renderPreference = (className: string, sectionHeading: IHeadingData, enableAriaLabel: string, description: string, isOptOut: boolean) => {\n        const { toggleDisableText, toggleEnableText } = this.props.resources;\n        const toggleState = isOptOut ? 'disable' : 'enable';\n        const onClickHandler = (event: React.MouseEvent<HTMLElement>) => { return this._updateAccountPersonalization(className); };\n        this.payLoad.contentAction.etext = sectionHeading.text;\n        const attributes = getTelemetryAttributes(this.telemetryContent!, this.payLoad);\n\n        return {\n            accountPreference: {\n                className: classnames('ms-account-profile__preference', `ms-account-profile__preference-${className}`, { 'ms-account-profile__personalization-updating': this.isUpdatingPreference })\n            },\n            heading: sectionHeading && (\n                <Msdyn365.Text\n                  className='ms-account-profile__preference-heading'\n                  tag={sectionHeading.tag || 'h2'}\n                  text={sectionHeading.text}\n                  editProps = {{onEdit: this.handleHeadingChange, requestContext: this.props.context.request}}\n                />),\n            buttonWrapper: {\n                className: classnames('ms-account-profile__toggle-wrapper', `ms-account-profile__toggle-${toggleState}`)\n            },\n            buttonYesText: <TextComponent className='ms-account-profile__toggle-enable-text' text={toggleEnableText} />,\n            buttonNoText: <TextComponent className='ms-account-profile__toggle-disable-text' text={toggleDisableText} />,\n            button: (\n                <Button\n                    className={classnames('ms-account-profile__toggle-button', `ms-account-profile__toggle-${toggleState}-button`)}\n                    aria-label={enableAriaLabel}\n                    value={isOptOut.toString()}\n                    aria-pressed={!isOptOut}\n                    onClick={onClickHandler}\n                    {...attributes}\n                />\n            ),\n            description: <DescriptionComponent className='ms-account-profile__preference-description' description={description} />,\n            onUpdateAccountPreference: () => this._updateAccountPersonalization(className)\n        };\n    }\n\n    private _updateAccountPersonalization = async (preferenceType?: string) => {\n        const customerInformation = this.props.data.customerInformation.result;\n\n        if (customerInformation) {\n            const {\n                telemetry,\n                context: { request, actionContext }\n            } = this.props;\n\n            let isOptOutPersonalization = false;\n            let input;\n\n            switch (preferenceType) {\n                case 'web-tracking':\n                    isOptOutPersonalization = customerInformation.OptOutWebActivityTracking || false;\n                    input = new updateCustomerPersonalizationInput(customerInformation.AccountNumber, !isOptOutPersonalization, request.apiSettings, preferenceType);\n                    break;\n                case undefined:\n                case 'personalization':\n                default:\n                    isOptOutPersonalization = customerInformation.OptOutPersonalization || false;\n                    input = new updateCustomerPersonalizationInput(customerInformation.AccountNumber, !isOptOutPersonalization, request.apiSettings, preferenceType);\n            }\n\n            this.isUpdatingPreference = true;\n\n            try {\n                await updateCustomerPersonalization(input, actionContext);\n            } catch (error) {\n                if (telemetry) {\n                    telemetry.exception(error);\n                    telemetry.debug('Unable to update customer personalization');\n                }\n            }\n\n            this.isUpdatingPreference = false;\n        }\n    }\n\n    private _renderCustomerAttributes = (): React.ReactNode => {\n        return (\n            <AccountProfileAttributes\n               accountProfileProps = {this.props}\n            />\n        );\n    }\n}\n\nexport default AccountProfile;\n"],"sourceRoot":"./src/"},"metadata":{},"sourceType":"module"}