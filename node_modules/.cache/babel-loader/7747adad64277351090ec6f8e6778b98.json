{"ast":null,"code":"import\"core-js/modules/es.promise.js\";import\"core-js/modules/es.regexp.constructor.js\";import\"core-js/modules/es.regexp.to-string.js\";import\"core-js/modules/es.string.replace.js\";import{Alert,Button}from'@msdyn365-commerce-modules/utilities';import classnames from'classnames';import*as React from'react';export const getForm=options=>{const{errorMessage,inputRef,inputPinRef,inputExpRef,giftCardNumber,giftCardPin,giftCardExp,onEnterGiftCardNumber,onEnterGiftCardPin,onEnterGiftCardExp,onApplyGiftCard,supportExternalGiftCard,additionalFields,resources:{balanceCheckButton,giftCardFormLabel,giftCardNumberLabel,giftCardPinLabel,giftCardExpLabel,giftCardAlertLabel,giftCardPinPlaceholderText,giftCardExpPlaceholderText}}=options;const onApply=async e=>{e.preventDefault();await onApplyGiftCard();};const onChangeNumber=e=>{const value=(e.target.value||'').replace(new RegExp('[<>]','gi'),'');onEnterGiftCardNumber(value);};const onChangePin=e=>{const value=(e.target.value||'').replace(new RegExp('[<>]','gi'),'');onEnterGiftCardPin(value);};const onChangeExp=e=>{const value=(e.target.value||'').replace(new RegExp('[<>]','gi'),'');onEnterGiftCardExp(value);};const formProps={className:classnames('ms-gift-card-balance-check__form',{'is-invalid':!!errorMessage}),onSubmit:onApply,tag:'form'};const label=/*#__PURE__*/React.createElement(\"label\",{id:'ms-gift-card-balance-check__label',className:'ms-gift-card-balance-check__input-label'},giftCardFormLabel);const inputPinLabel=/*#__PURE__*/React.createElement(\"label\",{id:'ms-gift-card-balance-check__input-pin-label',className:'ms-gift-card-balance-check__input-pin-label'},giftCardPinLabel);const inputExpLabel=/*#__PURE__*/React.createElement(\"label\",{id:'ms-gift-card-balance-check__input-exp-label',className:'ms-gift-card-balance-check__input-exp-label'},giftCardExpLabel);const alertFieldLabel=/*#__PURE__*/React.createElement(\"label\",{id:'ms-gift-card-balance-check__input-alert',className:'ms-gift-card-balance-check__input-alert-label'},giftCardAlertLabel);const alert=/*#__PURE__*/React.createElement(Alert,{tag:'span',id:'ms-gift-card-balance-check__error',className:'ms-gift-card-balance-check__input-error',role:'alert',assertive:false,fade:false,includeAlertClass:false,isOpen:!!errorMessage},errorMessage);const inputProps={className:'ms-gift-card-balance-check__input-fields'};const inputNumProps={className:'ms-gift-card-balance-check__input-num-fields'};const inputPinProps={className:'ms-gift-card-balance-check__input-pin-fields'};const inputExpProps={className:'ms-gift-card-balance-check__input-exp-fields'};const inputNumber=/*#__PURE__*/React.createElement(\"input\",{ref:inputRef,type:'text',className:'ms-gift-card-balance-check__input-text form-control',\"aria-label\":giftCardNumberLabel,onChange:onChangeNumber,value:giftCardNumber,\"aria-labelledby\":'ms-gift-card-balance-check__label ms-gift-card-balance-check__error'});const inputPin=/*#__PURE__*/React.createElement(\"input\",{ref:inputPinRef,type:'text',className:'ms-gift-card-balance-check__input-pin-text form-contol',\"aria-label\":giftCardPinLabel,placeholder:giftCardPinPlaceholderText,onChange:onChangePin,value:giftCardPin,\"aria-labelledby\":'ms-gift-card-balance-check__label ms-gift-card-balance-check__error'});const inputExp=/*#__PURE__*/React.createElement(\"input\",{ref:inputExpRef,type:'text',className:'ms-gift-card-balance-check__input-exp-text form-contol',\"aria-label\":giftCardExpLabel,placeholder:giftCardExpPlaceholderText,onChange:onChangeExp,value:giftCardExp,\"aria-labelledby\":'ms-gift-card-balance-check__label ms-gift-card-balance-check__error'});const applyButton=/*#__PURE__*/React.createElement(Button,{className:'ms-gift-card-balance-check__btn-apply',onClick:onApply,\"aria-label\":balanceCheckButton,disabled:!giftCardNumber},balanceCheckButton);let showGiftCardPinInput=false;let showGiftCardExpInput=false;switch(additionalFields){case\"pin\":showGiftCardPinInput=true;break;case\"expirationDate\":showGiftCardExpInput=true;break;case\"pinAndExpirationDate\":showGiftCardPinInput=true;showGiftCardExpInput=true;break;default:}return{formProps,label,inputPinLabel,inputExpLabel,alert,inputProps,inputNumProps,inputPinProps,inputExpProps,inputNumber,inputPin,inputExp,applyButton,supportExternalGiftCard,showGiftCardPinInput,showGiftCardExpInput,alertFieldLabel};};","map":{"version":3,"sources":["modules/gift-card-balance-check/components/get-form.tsx"],"names":[],"mappings":"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","sourcesContent":["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nimport { Alert, Button, INodeProps, NodeTag } from '@msdyn365-commerce-modules/utilities';\nimport classnames from 'classnames';\nimport * as React from 'react';\nimport { showAdditionalFields } from '../gift-card-balance-check.props.autogenerated';\n\nexport interface IGetFormInput {\n    errorMessage: string;\n    giftCardNumber: string;\n    giftCardPin: string;\n    giftCardExp: string;\n    inputRef?: React.RefObject<HTMLInputElement>;\n    inputPinRef?: React.RefObject<HTMLInputElement>;\n    inputExpRef?: React.RefObject<HTMLInputElement>;\n    supportExternalGiftCard?: boolean;\n    additionalFields?: showAdditionalFields;\n    resources: {\n        balanceCheckButton: string;\n        giftCardFormLabel: string;\n        giftCardNumberLabel: string;\n        giftCardPinLabel: string;\n        giftCardExpLabel: string;\n        giftCardAlertLabel: string;\n        giftCardPinPlaceholderText: string;\n        giftCardExpPlaceholderText: string;\n    };\n    onEnterGiftCardNumber(giftCardNumber: string): void;\n    onEnterGiftCardPin(giftCardPin: string): void;\n    onEnterGiftCardExp(giftCardExp: string): void;\n    onApplyGiftCard(): Promise<void>;\n}\n\nexport interface IForm {\n    formProps: INodeProps;\n    label: React.ReactNode;\n    inputPinLabel: React.ReactNode;\n    inputExpLabel: React.ReactNode;\n    alert: React.ReactNode;\n    inputProps: INodeProps;\n    inputNumProps: INodeProps;\n    inputPinProps: INodeProps;\n    inputExpProps: INodeProps;\n    inputNumber: React.ReactNode;\n    inputPin: React.ReactNode;\n    inputExp: React.ReactNode;\n    applyButton: React.ReactNode;\n    supportExternalGiftCard: boolean | undefined;\n    showGiftCardPinInput: boolean | undefined;\n    showGiftCardExpInput: boolean | undefined;\n    alertFieldLabel: React.ReactNode;\n}\n\n// tslint:disable-next-line:max-func-body-length\nexport const getForm = (options: IGetFormInput): IForm => {\n    const {\n        errorMessage,\n        inputRef,\n        inputPinRef,\n        inputExpRef,\n        giftCardNumber,\n        giftCardPin,\n        giftCardExp,\n        onEnterGiftCardNumber,\n        onEnterGiftCardPin,\n        onEnterGiftCardExp,\n        onApplyGiftCard,\n        supportExternalGiftCard,\n        additionalFields,\n        resources: { balanceCheckButton, giftCardFormLabel, giftCardNumberLabel, giftCardPinLabel, giftCardExpLabel,\n            giftCardAlertLabel, giftCardPinPlaceholderText, giftCardExpPlaceholderText }\n    } = options;\n\n    const onApply = async (e: React.SyntheticEvent): Promise<void> => {\n        e.preventDefault();\n        await onApplyGiftCard();\n    };\n\n    const onChangeNumber = (e: React.ChangeEvent<HTMLInputElement>) => {\n        const value = (e.target.value || '').replace(new RegExp('[<>]', 'gi'), '');\n        onEnterGiftCardNumber(value);\n    };\n\n    const onChangePin = (e: React.ChangeEvent<HTMLInputElement>) => {\n        const value = (e.target.value || '').replace(new RegExp('[<>]', 'gi'), '');\n        onEnterGiftCardPin(value);\n    };\n\n    const onChangeExp = (e: React.ChangeEvent<HTMLInputElement>) => {\n        const value = (e.target.value || '').replace(new RegExp('[<>]', 'gi'), '');\n        onEnterGiftCardExp(value);\n    };\n\n    const formProps = {\n        className: classnames('ms-gift-card-balance-check__form', { 'is-invalid': !!errorMessage }),\n        onSubmit: onApply,\n        tag: 'form' as NodeTag\n    };\n\n    const label = (\n        <label id='ms-gift-card-balance-check__label' className='ms-gift-card-balance-check__input-label'>\n            {giftCardFormLabel}\n        </label>\n    );\n\n    const inputPinLabel = (\n        <label id='ms-gift-card-balance-check__input-pin-label' className='ms-gift-card-balance-check__input-pin-label'>\n            {giftCardPinLabel}\n        </label>\n    );\n\n    const inputExpLabel = (\n        <label id='ms-gift-card-balance-check__input-exp-label' className='ms-gift-card-balance-check__input-exp-label'>\n            {giftCardExpLabel}\n        </label>\n    );\n\n    const alertFieldLabel = (\n        <label id='ms-gift-card-balance-check__input-alert' className='ms-gift-card-balance-check__input-alert-label'>\n            {giftCardAlertLabel}\n        </label>\n    );\n\n    const alert = (\n        <Alert\n            tag='span'\n            id='ms-gift-card-balance-check__error'\n            className='ms-gift-card-balance-check__input-error'\n            role='alert'\n            assertive={false}\n            fade={false}\n            includeAlertClass={false}\n            isOpen={!!errorMessage}\n        >\n            {errorMessage}\n        </Alert>\n    );\n\n    const inputProps = {\n        className: 'ms-gift-card-balance-check__input-fields'\n    };\n\n    const inputNumProps = {\n        className: 'ms-gift-card-balance-check__input-num-fields'\n    };\n\n    const inputPinProps = {\n        className: 'ms-gift-card-balance-check__input-pin-fields'\n    };\n\n    const inputExpProps = {\n        className: 'ms-gift-card-balance-check__input-exp-fields'\n    };\n\n    const inputNumber = (\n        <input\n            ref={inputRef}\n            type='text'\n            className='ms-gift-card-balance-check__input-text form-control'\n            aria-label={giftCardNumberLabel}\n            onChange={onChangeNumber}\n            value={giftCardNumber}\n            aria-labelledby='ms-gift-card-balance-check__label ms-gift-card-balance-check__error'\n        />\n    );\n\n    const inputPin = (\n        <input\n            ref={inputPinRef}\n            type='text'\n            className='ms-gift-card-balance-check__input-pin-text form-contol'\n            aria-label={giftCardPinLabel}\n            placeholder={giftCardPinPlaceholderText}\n            onChange={onChangePin}\n            value={giftCardPin}\n            aria-labelledby='ms-gift-card-balance-check__label ms-gift-card-balance-check__error'\n        />\n    );\n\n    const inputExp = (\n        <input\n            ref={inputExpRef}\n            type='text'\n            className='ms-gift-card-balance-check__input-exp-text form-contol'\n            aria-label={giftCardExpLabel}\n            placeholder={giftCardExpPlaceholderText}\n            onChange={onChangeExp}\n            value={giftCardExp}\n            aria-labelledby='ms-gift-card-balance-check__label ms-gift-card-balance-check__error'\n        />\n    );\n\n    const applyButton = (\n        <Button\n            className='ms-gift-card-balance-check__btn-apply'\n            onClick={onApply}\n            aria-label={balanceCheckButton}\n            disabled={!giftCardNumber}\n        >\n            {balanceCheckButton}\n        </Button>\n    );\n\n    let showGiftCardPinInput = false;\n    let showGiftCardExpInput = false;\n\n    switch(additionalFields) {\n        case showAdditionalFields.pin:\n            showGiftCardPinInput = true;\n            break;\n        case showAdditionalFields.expirationDate:\n            showGiftCardExpInput = true;\n            break;\n        case showAdditionalFields.pinAndExpirationDate:\n            showGiftCardPinInput = true;\n            showGiftCardExpInput = true;\n            break;\n        default:\n    }\n\n    return {\n        formProps,\n        label,\n        inputPinLabel,\n        inputExpLabel,\n        alert,\n        inputProps,\n        inputNumProps,\n        inputPinProps,\n        inputExpProps,\n        inputNumber,\n        inputPin,\n        inputExp,\n        applyButton,\n        supportExternalGiftCard,\n        showGiftCardPinInput,\n        showGiftCardExpInput,\n        alertFieldLabel\n    };\n};\n"],"sourceRoot":"./src/"},"metadata":{},"sourceType":"module"}