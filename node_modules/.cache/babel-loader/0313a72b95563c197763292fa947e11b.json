{"ast":null,"code":"import\"core-js/modules/es.promise.js\";import{createObservableDataAction}from'@msdyn365-commerce/core';import{getCustomerLoyaltyCardsAsync,getLoyaltyCardAsync}from'@msdyn365-commerce/retail-proxy/dist/DataActions/StoreOperationsDataActions.g';import{buildCacheKey}from'./index';/**\r\n *  Input class for the getLoyaltyCard data action\r\n */export class GetLoyaltyCardInput{constructor(apiSettings,userAccountNumber){this.getCacheKey=()=>buildCacheKey(\"GetLoyaltyCard-\".concat(this.userAccountNumber),this.apiSettings);this.getCacheObjectType=()=>'GetLoyaltyCard';this.dataCacheType=()=>'request';this.userAccountNumber=userAccountNumber;this.apiSettings=apiSettings;}}/**\r\n * createInput method for the getLoyaltyCard method\r\n * @param inputData The input data passed to the createInput method\r\n */export const createGetLoyaltyCardInput=inputData=>{const{requestContext}=inputData;if(!requestContext.user.isAuthenticated){throw new Error('Unable to create get loyalty card input.  User is not authenticated.');}return new GetLoyaltyCardInput(inputData.requestContext.apiSettings);};/**\r\n * The action method for the getLoyaltyCard data action\r\n * @param input The action input\r\n * @param ctx The action context\r\n */export async function getLoyaltyAction(input,ctx){return getCustomerLoyaltyCardsAsync({callerContext:ctx,queryResultSettings:{}},input.userAccountNumber||null).then(cards=>{if(!cards||cards.length<1){return{};}const firstCard=cards[0];return getLoyaltyCardAsync({callerContext:ctx},firstCard.CardNumber).then(card=>{card.LoyaltyEnrollmentDate=firstCard.LoyaltyEnrollmentDate;card.LoyaltyEnrollmentDateLocal=firstCard.LoyaltyEnrollmentDateLocal;return card;}).catch(error=>{ctx.telemetry.exception(error);ctx.telemetry.debug(\"Unable to get loyalty card\");throw new Error('Unable to get loyalty card');});}).catch(error=>{ctx.telemetry.exception(error.message);ctx.telemetry.debug(\"Unable to get customers loyalty card\");throw new Error('Unable to get customers loyalty card');});}/**\r\n * The getLoyaltyCard data action\r\n * Returns the loyalty card belonging to the customer\r\n */export default createObservableDataAction({id:'@msdyn365-commerce-modules/retail-actions/get-loyalty-card',action:getLoyaltyAction,input:createGetLoyaltyCardInput});","map":{"version":3,"sources":["../../src/get-loyalty-card.ts"],"names":[],"mappings":"sCAAA,OAAoB,0BAApB,KAAyI,yBAAzI,CAEA,OAAS,4BAAT,CAAuC,mBAAvC,KAAkE,+EAAlE,CACA,OAAS,aAAT,KAA8B,SAA9B,CAEA;;AAEG,GACH,MAAM,MAAO,CAAA,mBAAmB,CAI5B,WAAA,CAAY,WAAZ,CAA+C,iBAA/C,CAAyE,CAMlE,KAAA,WAAA,CAAc,IAAM,aAAa,0BAAmB,KAAK,iBAAxB,EAA6C,KAAK,WAAlD,CAAjC,CACA,KAAA,kBAAA,CAAqB,IAAM,gBAA3B,CACA,KAAA,aAAA,CAAgB,IAAiB,SAAjC,CAPH,KAAK,iBAAL,CAAyB,iBAAzB,CACA,KAAK,WAAL,CAAmB,WAAnB,CAEH,CAR2B,CAehC;;;AAGG,GACH,MAAO,MAAM,CAAA,yBAAyB,CAAI,SAAD,EAAyD,CAC9F,KAAM,CAAE,cAAF,EAAqB,SAA3B,CACA,GAAI,CAAC,cAAc,CAAC,IAAf,CAAoB,eAAzB,CAA0C,CACtC,KAAM,IAAI,CAAA,KAAJ,CAAU,sEAAV,CAAN,CACH,CAED,MAAO,IAAI,CAAA,mBAAJ,CAAwB,SAAS,CAAC,cAAV,CAAyB,WAAjD,CAAP,CACH,CAPM,CASP;;;;AAIG,GACH,MAAO,eAAe,CAAA,gBAAf,CAAgC,KAAhC,CAA4D,GAA5D,CAA+E,CAClF,MAAO,CAAA,4BAA4B,CAAC,CAAE,aAAa,CAAE,GAAjB,CAAsB,mBAAmB,CAAE,EAA3C,CAAD,CAAkD,KAAK,CAAC,iBAAN,EAA2B,IAA7E,CAA5B,CACE,IADF,CACO,KAAK,EAAG,CACV,GAAI,CAAC,KAAD,EAAU,KAAK,CAAC,MAAN,CAAe,CAA7B,CAAgC,CAC5B,MAAoB,EAApB,CACH,CAED,KAAM,CAAA,SAAS,CAAG,KAAK,CAAC,CAAD,CAAvB,CAEA,MAAO,CAAA,mBAAmB,CAAC,CAAE,aAAa,CAAE,GAAjB,CAAD,CAAyB,SAAS,CAAC,UAAnC,CAAnB,CACF,IADE,CACG,IAAI,EAAG,CACT,IAAI,CAAC,qBAAL,CAA6B,SAAS,CAAC,qBAAvC,CACA,IAAI,CAAC,0BAAL,CAAkC,SAAS,CAAC,0BAA5C,CACA,MAAO,CAAA,IAAP,CACH,CALE,EAOF,KAPE,CAOI,KAAK,EAAG,CACX,GAAG,CAAC,SAAJ,CAAc,SAAd,CAAwB,KAAxB,EACA,GAAG,CAAC,SAAJ,CAAc,KAAd,+BACA,KAAM,IAAI,CAAA,KAAJ,CAAU,4BAAV,CAAN,CACH,CAXE,CAAP,CAYH,CApBF,EAqBE,KArBF,CAqBQ,KAAK,EAAG,CACX,GAAG,CAAC,SAAJ,CAAc,SAAd,CAAwB,KAAK,CAAC,OAA9B,EACA,GAAG,CAAC,SAAJ,CAAc,KAAd,yCACA,KAAM,IAAI,CAAA,KAAJ,CAAU,sCAAV,CAAN,CACH,CAzBF,CAAP,CA0BH,CAED;;;AAGG,GACH,cAAe,CAAA,0BAA0B,CAAc,CACnD,EAAE,CAAE,4DAD+C,CAEnD,MAAM,CAAwB,gBAFqB,CAGnD,KAAK,CAAgD,yBAHF,CAAd,CAAzC","sourcesContent":["import { CacheType, createObservableDataAction, IAction, IActionContext, IActionInput, ICommerceApiSettings, ICreateActionContext } from '@msdyn365-commerce/core';\nimport { LoyaltyCard } from '@msdyn365-commerce/retail-proxy';\nimport { getCustomerLoyaltyCardsAsync, getLoyaltyCardAsync } from '@msdyn365-commerce/retail-proxy/dist/DataActions/StoreOperationsDataActions.g';\nimport { buildCacheKey } from './index';\n\n/**\n *  Input class for the getLoyaltyCard data action\n */\nexport class GetLoyaltyCardInput implements IActionInput {\n    public userAccountNumber?: string;\n    public apiSettings: ICommerceApiSettings;\n\n    constructor(apiSettings: ICommerceApiSettings, userAccountNumber?: string) {\n        this.userAccountNumber = userAccountNumber;\n        this.apiSettings = apiSettings;\n\n    }\n\n    public getCacheKey = () => buildCacheKey(`GetLoyaltyCard-${this.userAccountNumber}`, this.apiSettings);\n    public getCacheObjectType = () => 'GetLoyaltyCard';\n    public dataCacheType = (): CacheType => 'request';\n}\n\n/**\n * createInput method for the getLoyaltyCard method\n * @param inputData The input data passed to the createInput method\n */\nexport const createGetLoyaltyCardInput = (inputData: ICreateActionContext): GetLoyaltyCardInput => {\n    const { requestContext } = inputData;\n    if (!requestContext.user.isAuthenticated) {\n        throw new Error('Unable to create get loyalty card input.  User is not authenticated.');\n    }\n\n    return new GetLoyaltyCardInput(inputData.requestContext.apiSettings);\n};\n\n/**\n * The action method for the getLoyaltyCard data action\n * @param input The action input\n * @param ctx The action context\n */\nexport async function getLoyaltyAction(input: GetLoyaltyCardInput, ctx: IActionContext): Promise<LoyaltyCard> {\n    return getCustomerLoyaltyCardsAsync({ callerContext: ctx, queryResultSettings: {} }, input.userAccountNumber || null)\n            .then(cards => {\n                if (!cards || cards.length < 1) {\n                    return <LoyaltyCard>{};\n                }\n\n                const firstCard = cards[0];\n\n                return getLoyaltyCardAsync({ callerContext: ctx }, firstCard.CardNumber!)\n                    .then(card => {\n                        card.LoyaltyEnrollmentDate = firstCard.LoyaltyEnrollmentDate;\n                        card.LoyaltyEnrollmentDateLocal = firstCard.LoyaltyEnrollmentDateLocal;\n                        return card;\n                    })\n\n                    .catch(error => {\n                        ctx.telemetry.exception(error);\n                        ctx.telemetry.debug(`Unable to get loyalty card`);\n                        throw new Error('Unable to get loyalty card');\n                    });\n            })\n            .catch(error => {\n                ctx.telemetry.exception(error.message);\n                ctx.telemetry.debug(`Unable to get customers loyalty card`);\n                throw new Error('Unable to get customers loyalty card');\n            });\n}\n\n/**\n * The getLoyaltyCard data action\n * Returns the loyalty card belonging to the customer\n */\nexport default createObservableDataAction<LoyaltyCard>({\n    id: '@msdyn365-commerce-modules/retail-actions/get-loyalty-card',\n    action: <IAction<LoyaltyCard>>getLoyaltyAction,\n    input: <(args: ICreateActionContext) => IActionInput>createGetLoyaltyCardInput\n});\n"],"sourceRoot":""},"metadata":{},"sourceType":"module"}