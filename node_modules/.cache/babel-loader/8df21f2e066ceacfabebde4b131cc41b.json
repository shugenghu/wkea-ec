{"ast":null,"code":"import*as React from'react';import{Module,Node}from'@msdyn365-commerce-modules/utilities';var PasswordResetItem=function PasswordResetItem(_ref){var wrapper=_ref.wrapper,label=_ref.label,errorMessage=_ref.errorMessage,input=_ref.input;return/*#__PURE__*/React.createElement(Node,Object.assign({},wrapper),label,errorMessage,input);};var LocalAccount=function LocalAccount(_ref2){var localAccount=_ref2.localAccount,items=_ref2.items,errorMessage=_ref2.errorMessage,buttonsWrapper=_ref2.buttonsWrapper,buttons=_ref2.buttons,verificationSuccessModal=_ref2.verificationSuccessModal,verificationSuccessModalMessage=_ref2.verificationSuccessModalMessage;return/*#__PURE__*/React.createElement(Node,Object.assign({},localAccount),items&&items.map(function(item){return/*#__PURE__*/React.createElement(PasswordResetItem,Object.assign({key:item.key},item));}),errorMessage&&errorMessage.map(function(error,index){return/*#__PURE__*/React.createElement(React.Fragment,{key:index},error);}),/*#__PURE__*/React.createElement(Node,Object.assign({},buttonsWrapper),buttons&&buttons.map(function(button,index){return/*#__PURE__*/React.createElement(React.Fragment,{key:index},button);})),/*#__PURE__*/React.createElement(Node,Object.assign({},verificationSuccessModal),/*#__PURE__*/React.createElement(Node,Object.assign({},verificationSuccessModalMessage))));};var PasswordResetLoading=function PasswordResetLoading(_ref3){var modal=_ref3.modal,modalBody=_ref3.modalBody,icon=_ref3.icon,message=_ref3.message;return/*#__PURE__*/React.createElement(Node,Object.assign({},modal),/*#__PURE__*/React.createElement(Node,Object.assign({},modalBody),icon,message));};var PasswordResetView=function PasswordResetView(props){var passwordReset=props.passwordReset,viewState=props.viewState,loading=props.loading,defaultAADConainer=props.defaultAADConainer,aadConainer=props.aadConainer,heading=props.heading,passwordResetLocalAccount=props.passwordResetLocalAccount;return/*#__PURE__*/React.createElement(Module,Object.assign({},passwordReset),viewState.isShowLoading&&/*#__PURE__*/React.createElement(Node,Object.assign({},defaultAADConainer)),viewState.isShowLoading&&/*#__PURE__*/React.createElement(PasswordResetLoading,Object.assign({},loading)),/*#__PURE__*/React.createElement(Node,Object.assign({},aadConainer),heading,LocalAccount(passwordResetLocalAccount)));};export default PasswordResetView;","map":{"version":3,"sources":["modules/password-reset/password-reset.view.tsx"],"names":[],"mappings":"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","sourcesContent":["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nimport * as React from 'react';\n\nimport { Module, Node } from '@msdyn365-commerce-modules/utilities';\n\nimport {\n    IPasswordResetItem, IPasswordResetLoading, IPasswordResetLocalAccount, IPasswordResetViewProps\n} from './password-reset';\n\nconst PasswordResetItem: React.FC<IPasswordResetItem> = ({\n    wrapper,\n    label,\n    errorMessage,\n    input\n}) => {\n\n    return (\n        <Node {...wrapper}>\n            {label}\n            {errorMessage}\n            {input}\n        </Node>\n    );\n};\n\nconst LocalAccount: React.FC<IPasswordResetLocalAccount> = ({\n    localAccount,\n    items,\n    errorMessage,\n    buttonsWrapper,\n    buttons,\n    verificationSuccessModal,\n    verificationSuccessModalMessage\n}) => {\n\n    return (\n        <Node {...localAccount}>\n            {items && items.map((item: IPasswordResetItem) => {\n                return (\n                    <PasswordResetItem key={item.key} {...item} />\n                );\n            })}\n            {errorMessage && errorMessage.map((error: React.ReactNode, index: number) => {\n                return (\n                    <React.Fragment key={index}>\n                        {error}\n                    </React.Fragment>\n                );\n            })}\n            <Node {...buttonsWrapper}>\n                {buttons && buttons.map((button: React.ReactNode, index: number) => {\n                    return (\n                        <React.Fragment key={index}>\n                            {button}\n                        </React.Fragment>\n                    );\n                })}\n            </Node>\n\n            <Node {...verificationSuccessModal}>\n                <Node {...verificationSuccessModalMessage} />\n            </Node>\n        </Node>\n    );\n};\n\nconst PasswordResetLoading: React.FC<IPasswordResetLoading> = ({\n    modal,\n    modalBody,\n    icon,\n    message,\n}) => {\n    return (\n        <Node {...modal}>\n            <Node {...modalBody}>\n                {icon}\n                {message}\n            </Node>\n        </Node>\n    );\n};\n\nconst PasswordResetView: React.FC<IPasswordResetViewProps> = props => {\n\n    const {\n        passwordReset,\n        viewState,\n        loading,\n        defaultAADConainer,\n        aadConainer,\n        heading,\n        passwordResetLocalAccount\n    } = props;\n\n    return (\n        <Module {...passwordReset}>\n            {viewState.isShowLoading && <Node {...defaultAADConainer} />}\n            {viewState.isShowLoading && <PasswordResetLoading {...loading} />}\n            <Node {...aadConainer}>\n                {heading}\n                {LocalAccount(passwordResetLocalAccount)}\n            </Node>\n        </Module>\n    );\n};\n\nexport default PasswordResetView;\n"],"sourceRoot":"./src/"},"metadata":{},"sourceType":"module"}