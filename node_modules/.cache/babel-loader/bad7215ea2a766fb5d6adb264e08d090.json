{"ast":null,"code":"import\"core-js/modules/es.promise.js\";import\"core-js/modules/web.dom-collections.iterator.js\";import{createObservableDataAction}from'@msdyn365-commerce/core';import{createAddressManagementInput,doAddressManagementOperation}from'./add-address';export function deleteAddressHandler(customer,address){customer.Addresses=customer.Addresses||[];customer.Addresses=[...customer.Addresses.filter(cur=>cur.RecordId!==address.RecordId)];return customer;}export async function deleteAddressAction(input,ctx){return doAddressManagementOperation(input,ctx,deleteAddressHandler);}/**\r\n * The deleteAddress data action\r\n * Calls the read RetailServer API to get information about a customer\r\n * Removes all address information from the retireved customer, and\r\n * then updates that customer via the update RetailServer API.\r\n */export default createObservableDataAction({id:'@msdyn365-commerce-modules/retail-actions/delete-address',action:deleteAddressAction,input:createAddressManagementInput,isBatched:false});","map":{"version":3,"sources":["../../src/delete-address.ts"],"names":[],"mappings":"8FACA,OAAS,0BAAT,KAAuE,yBAAvE,CAEA,OAAS,4BAAT,CAAuC,4BAAvC,KAAoG,eAApG,CAEA,MAAM,SAAU,CAAA,oBAAV,CAA+B,QAA/B,CAAmD,OAAnD,CAAmE,CACrE,QAAQ,CAAC,SAAT,CAAqB,QAAQ,CAAC,SAAT,EAAsB,EAA3C,CACA,QAAQ,CAAC,SAAT,CAAqB,CAAC,GAAG,QAAQ,CAAC,SAAT,CAAmB,MAAnB,CAA0B,GAAG,EAAI,GAAG,CAAC,QAAJ,GAAiB,OAAO,CAAC,QAA1D,CAAJ,CAArB,CACA,MAAO,CAAA,QAAP,CACH,CAED,MAAO,eAAe,CAAA,mBAAf,CAAmC,KAAnC,CAAmE,GAAnE,CAAsF,CACzF,MAAO,CAAA,4BAA4B,CAAC,KAAD,CAAQ,GAAR,CAAa,oBAAb,CAAnC,CACH,CAED;;;;;AAKG,GACH,cAAe,CAAA,0BAA0B,CAAY,CACjD,EAAE,CAAE,0DAD6C,CAEjD,MAAM,CAAsB,mBAFqB,CAGjD,KAAK,CAAuD,4BAHX,CAIjD,SAAS,CAAE,KAJsC,CAAZ,CAAzC","sourcesContent":["import { IAction, IActionContext, IActionInput } from '@msdyn365-commerce/core';\nimport { createObservableDataAction, IAny, ICreateActionContext } from '@msdyn365-commerce/core';\nimport { Address, Customer } from '@msdyn365-commerce/retail-proxy';\nimport { createAddressManagementInput, doAddressManagementOperation, IAddressManagementInput } from './add-address';\n\nexport function deleteAddressHandler(customer: Customer, address: Address): Customer {\n    customer.Addresses = customer.Addresses || [];\n    customer.Addresses = [...customer.Addresses.filter(cur => cur.RecordId !== address.RecordId)];\n    return customer;\n}\n\nexport async function deleteAddressAction(input: IAddressManagementInput, ctx: IActionContext): Promise<Address[]> {\n    return doAddressManagementOperation(input, ctx, deleteAddressHandler);\n}\n\n/**\n * The deleteAddress data action\n * Calls the read RetailServer API to get information about a customer\n * Removes all address information from the retireved customer, and\n * then updates that customer via the update RetailServer API.\n */\nexport default createObservableDataAction<Address[]>({\n    id: '@msdyn365-commerce-modules/retail-actions/delete-address',\n    action: <IAction<Address[]>>deleteAddressAction,\n    input: <(args: ICreateActionContext) => IActionInput>(<IAny>createAddressManagementInput),\n    isBatched: false\n});\n"],"sourceRoot":""},"metadata":{},"sourceType":"module"}