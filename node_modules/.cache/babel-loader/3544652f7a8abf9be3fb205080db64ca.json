{"ast":null,"code":"import\"core-js/modules/es.object.assign.js\";import _defineProperty from\"@babel/runtime/helpers/esm/defineProperty\";function ownKeys(object,enumerableOnly){var keys=Object.keys(object);if(Object.getOwnPropertySymbols){var symbols=Object.getOwnPropertySymbols(object);if(enumerableOnly)symbols=symbols.filter(function(sym){return Object.getOwnPropertyDescriptor(object,sym).enumerable;});keys.push.apply(keys,symbols);}return keys;}function _objectSpread(target){for(var i=1;i<arguments.length;i++){var source=arguments[i]!=null?arguments[i]:{};if(i%2){ownKeys(Object(source),true).forEach(function(key){_defineProperty(target,key,source[key]);});}else if(Object.getOwnPropertyDescriptors){Object.defineProperties(target,Object.getOwnPropertyDescriptors(source));}else{ownKeys(Object(source)).forEach(function(key){Object.defineProperty(target,key,Object.getOwnPropertyDescriptor(source,key));});}}return target;}/*!\r\n * Copyright (c) Microsoft Corporation.\r\n * All rights reserved. See LICENSE in the project root for license information.\r\n */import React from'react';import{isAuthoringEditEnabled}from'../helper';import{EditError,PROPERTY_DISABLED,PROPERTY_INIT}from'./edit-errors';import{ImageField}from'./image-field';import{LinkField}from'./link-field';import{TextField}from'./text-field';import{VideoField}from'./video-field';export var FieldType;(function(FieldType){FieldType[FieldType[\"Text\"]=0]=\"Text\";FieldType[FieldType[\"RichText\"]=1]=\"RichText\";FieldType[FieldType[\"Image\"]=2]=\"Image\";FieldType[FieldType[\"Video\"]=3]=\"Video\";FieldType[FieldType[\"Link\"]=4]=\"Link\";})(FieldType||(FieldType={}));/**\r\n * Editable field component, containing all the logic for inline editable properties in editorial preview\r\n * Current support: text, image\r\n */ // tslint:disable-next-line:no-any\nexport class EditableField extends React.Component{// tslint:disable-next-line:no-any\nconstructor(props){super(props);this._onChangeHandler=this._onChangeHandler.bind(this);this._isRequired=false;this.state={isDisabled:props.disabled||true};}componentDidMount(){this._checkDisabledStatus();}// tslint:disable-next-line:no-any\ncomponentWillReceiveProps(nextProps){// hook to handle props changes - when a field is changed between edit enabled/disabled states\nthis._checkDisabledStatus();}render(){const props=this.props;const enabled=!this.state.isDisabled;switch(props.type){case FieldType.Text:case FieldType.RichText:props.fieldProps.required=this._isRequired;return/*#__PURE__*/React.createElement(TextField,Object.assign({disabled:!!!enabled},props,{onChange:this._onChangeHandler}));case FieldType.Image:return/*#__PURE__*/React.createElement(ImageField,Object.assign({disabled:!!!enabled},props,{onChange:this._onChangeHandler}));case FieldType.Video:// tslint:disable-next-line:no-any\nconst videoProps=_objectSpread(_objectSpread({},this.props),{},{disabled:!!!enabled,onChange:this._onChangeHandler});return videoProps.fieldProps.children?/*#__PURE__*/React.createElement(VideoField,Object.assign({},videoProps)):null;case FieldType.Link:return/*#__PURE__*/React.createElement(LinkField,Object.assign({type:FieldType.Link},props,{disabled:!!!enabled,onChange:this._onChangeHandler}));default:return null;}}_onChangeHandler(event){try{if(this.props.onChange){// @ts-ignore\nthis.props.onChange(event);}if(this.props.editPropKey){const binding=this.props.editPropKey;// @ts-ignore\nbinding.$type=event.target.value;}}catch(e){// if property is disabled, disable editing\nif(e instanceof EditError){if(e.name===PROPERTY_DISABLED){this._updateStatus(true);}else if(e.name===PROPERTY_INIT){this._updateStatus(false);this._isRequired=!!e.required;}}}}_checkDisabledStatus(){if(isAuthoringEditEnabled(this.props.requestContext)){this._onChangeHandler({target:{value:'__MSDYN365_WYSIWYG_INIT__'}});}}_updateStatus(status){if(status!==this.state.isDisabled){this.setState({isDisabled:status});}}}","map":{"version":3,"sources":["../../../../src/utilities/editable-fields/editable-field.tsx"],"names":[],"mappings":"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","sourcesContent":["/*!\n * Copyright (c) Microsoft Corporation.\n * All rights reserved. See LICENSE in the project root for license information.\n */\n\nimport React from 'react';\nimport { ContentEditableEvent } from 'react-contenteditable';\nimport { IDictionary, IRequestContext } from '../../interfaces';\nimport { isAuthoringEditEnabled } from '../helper';\nimport { EditError, PROPERTY_DISABLED, PROPERTY_INIT } from './edit-errors';\nimport { ImageField } from './image-field';\nimport { LinkField } from './link-field';\nimport { TextField } from './text-field';\nimport { VideoField } from './video-field';\n\nexport interface IText {\n    tag?: string;\n    text: string;\n    required?: boolean;\n    className?: string;\n    additionalProperties?: IDictionary<string>;\n}\n\nexport interface ILink {\n    title: string;\n    text: string;\n    key: string;\n    openInNewTab: boolean;\n    className?: string;\n    innerClassName?: string;\n    href?: string;\n    role?: string;\n    ariaLabel: string;\n    additionalProperties?: IDictionary<string>;\n    linkTag?: string;\n    onClick?(ev: React.SyntheticEvent): void;\n}\n\nexport interface ITextEditProps {\n    requestContext: IRequestContext;\n    placeholderText?: string;\n    onEdit(event: ContentEditableEvent): void;\n}\n\nexport interface IEditProps {\n    key: object;\n    requestContext: IRequestContext;\n}\n\nexport interface IEditableFieldProps<T> {\n    editPropKey?: object;\n    requestContext?: IRequestContext;\n    placeholderText?: string;\n    disabled?: boolean;\n    fieldProps: T;\n    type?: FieldType;\n    children?: JSX.Element;\n    onChange?(event: React.SyntheticEvent): void;\n    onMouseOver?(event: React.SyntheticEvent): void;\n    onMouseOut?(event: React.SyntheticEvent): void;\n    onFocus?(event: React.SyntheticEvent): void;\n    onBlur?(event: React.SyntheticEvent): void;\n}\n\ninterface IEditableFieldState {\n    isDisabled: boolean;\n}\n\nexport enum FieldType {\n    Text,\n    RichText,\n    Image,\n    Video,\n    Link\n}\n\n/**\n * Editable field component, containing all the logic for inline editable properties in editorial preview\n * Current support: text, image\n */\n// tslint:disable-next-line:no-any\nexport class EditableField extends React.Component<IEditableFieldProps<any>, IEditableFieldState> {\n    private _isRequired: boolean;\n    // tslint:disable-next-line:no-any\n    public constructor(props: IEditableFieldProps<any>) {\n        super(props);\n        this._onChangeHandler = this._onChangeHandler.bind(this);\n        this._isRequired = false;\n        this.state = {\n            isDisabled: props.disabled || true\n        };\n    }\n\n    public componentDidMount(): void {\n        this._checkDisabledStatus();\n    }\n\n    // tslint:disable-next-line:no-any\n    public componentWillReceiveProps(nextProps: IEditableFieldProps<any>): void {\n        // hook to handle props changes - when a field is changed between edit enabled/disabled states\n        this._checkDisabledStatus();\n    }\n\n    public render(): JSX.Element | null {\n        const props = this.props;\n        const enabled = !this.state.isDisabled;\n\n        switch (props.type) {\n            case FieldType.Text:\n            case FieldType.RichText:\n                props.fieldProps.required = this._isRequired;\n                return <TextField disabled={!!!enabled} {...props} onChange={this._onChangeHandler} />;\n            case FieldType.Image:\n                return <ImageField disabled={!!!enabled} {...props} onChange={this._onChangeHandler} />;\n            case FieldType.Video:\n                // tslint:disable-next-line:no-any\n                const videoProps: IEditableFieldProps<any> = {\n                    ...this.props,\n                    disabled: !!!enabled,\n                    onChange: this._onChangeHandler\n                };\n                return videoProps.fieldProps.children ? <VideoField {...videoProps} /> : null;\n            case FieldType.Link:\n                return <LinkField type={FieldType.Link} {...props} disabled={!!!enabled} onChange={this._onChangeHandler} />;\n            default:\n                return null;\n        }\n    }\n    private _onChangeHandler(event: React.SyntheticEvent | { target: { value: string } }): void {\n        try {\n            if (this.props.onChange) {\n                // @ts-ignore\n                this.props.onChange(event);\n            }\n\n            if (this.props.editPropKey) {\n                const binding = this.props.editPropKey;\n                // @ts-ignore\n                binding.$type = event.target.value;\n            }\n        } catch (e) {\n            // if property is disabled, disable editing\n            if (e instanceof EditError) {\n                if (e.name === PROPERTY_DISABLED) {\n                    this._updateStatus(true);\n                } else if (e.name === PROPERTY_INIT) {\n                    this._updateStatus(false);\n                    this._isRequired = !!e.required;\n                }\n            }\n        }\n    }\n\n    private _checkDisabledStatus(): void {\n        if (isAuthoringEditEnabled(this.props.requestContext)) {\n            this._onChangeHandler({ target: { value: '__MSDYN365_WYSIWYG_INIT__' } });\n        }\n    }\n\n    private _updateStatus(status: boolean): void {\n        if (status !== this.state.isDisabled) {\n            this.setState({\n                isDisabled: status\n            });\n        }\n    }\n}\n"],"sourceRoot":""},"metadata":{},"sourceType":"module"}