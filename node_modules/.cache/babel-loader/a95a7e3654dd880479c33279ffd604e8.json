{"ast":null,"code":"import _regeneratorRuntime from\"@babel/runtime/regenerator\";import _asyncToGenerator from\"@babel/runtime/helpers/esm/asyncToGenerator\";import _classCallCheck from\"@babel/runtime/helpers/esm/classCallCheck\";import _createClass from\"@babel/runtime/helpers/esm/createClass\";import _inherits from\"@babel/runtime/helpers/esm/inherits\";import _possibleConstructorReturn from\"@babel/runtime/helpers/esm/possibleConstructorReturn\";import _getPrototypeOf from\"@babel/runtime/helpers/esm/getPrototypeOf\";function _createSuper(Derived){var hasNativeReflectConstruct=_isNativeReflectConstruct();return function _createSuperInternal(){var Super=_getPrototypeOf(Derived),result;if(hasNativeReflectConstruct){var NewTarget=_getPrototypeOf(this).constructor;result=Reflect.construct(Super,arguments,NewTarget);}else{result=Super.apply(this,arguments);}return _possibleConstructorReturn(this,result);};}function _isNativeReflectConstruct(){if(typeof Reflect===\"undefined\"||!Reflect.construct)return false;if(Reflect.construct.sham)return false;if(typeof Proxy===\"function\")return true;try{Date.prototype.toString.call(Reflect.construct(Date,[],function(){}));return true;}catch(e){return false;}}import{__decorate}from\"tslib\";import{action,computed,observable}from'mobx';import{GlobalState}from'../global-state/global-state';import addProductToCartInternal from'./add-product-to-cart';import addPromoCodeInternal from'./add-promo-code';import clearCartLineDeliveryModeInternal from'./clear-cart-line-delivery-mode';import _clearCartLinesDeliveryInformation from'./clear-cart-lines-delivery-information';import getOrCreateActiveCart from'./get-or-create-active-cart';import refreshCartInternal from'./refresh-cart';import removeAllPromoCodesInternal from'./remove-all-promo-codes';import removeCartLineInternal from'./remove-cart-lines';import removePromoCodesInternal from'./remove-promo-codes';import _updateCart from'./update-cart';import updateCartLineDeliverySpecificationsInternal from'./update-cart-line-delivery-specifications';import updateCartLineQuantityInternal from'./update-cart-line-quantity';import updateLoyaltyCardIdInternal from'./update-loyalty-card-id';import _updateReceiptEmail from'./update-receipt-email';/**\r\n * Cart state information\r\n */export var BaseCartState=/*#__PURE__*/function(_GlobalState){_inherits(BaseCartState,_GlobalState);var _super=_createSuper(BaseCartState);function BaseCartState(actionContext){var _this;_classCallCheck(this,BaseCartState);_this=_super.call(this,actionContext);_this._cart={};_this._attributeValues=[];_this._extensionProperties=[];return _this;}_createClass(BaseCartState,[{key:\"initialize\",value:function(){var _initialize=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee(){var newCart;return _regeneratorRuntime.wrap(function _callee$(_context){while(1){switch(_context.prev=_context.next){case 0:if(!this.isInitialized){_context.next=2;break;}return _context.abrupt(\"return\");case 2:_context.next=4;return getOrCreateActiveCart(this.actionContext);case 4:newCart=_context.sent;if(newCart){this._cart=newCart;this._status='READY';}else{this._status='ERROR';}this.isInitialized=true;case 7:case\"end\":return _context.stop();}}},_callee,this);}));function initialize(){return _initialize.apply(this,arguments);}return initialize;}()/**\r\n     * Refreshes the cart by getting it from the server\r\n     *\r\n     * Other actions should keep cart up to date so shouldn't need to call this\r\n     * outside of initialization but still might be scenarios where a manual\r\n     * refresh is needed\r\n     */},{key:\"refreshCart\",value:function(){var _refreshCart=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee3(input){var _this2=this;return _regeneratorRuntime.wrap(function _callee3$(_context3){while(1){switch(_context3.prev=_context3.next){case 0:return _context3.abrupt(\"return\",this._doAsyncAction(/*#__PURE__*/_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee2(){var newCart;return _regeneratorRuntime.wrap(function _callee2$(_context2){while(1){switch(_context2.prev=_context2.next){case 0:_context2.next=2;return refreshCartInternal(_this2.cart.Id,_this2.actionContext);case 2:newCart=_context2.sent;if(!newCart){_context2.next=6;break;}_this2._cart=newCart;return _context2.abrupt(\"return\",{status:'SUCCESS'});case 6:return _context2.abrupt(\"return\",{status:'FAILED'});case 7:case\"end\":return _context2.stop();}}},_callee2);}))));case 1:case\"end\":return _context3.stop();}}},_callee3,this);}));function refreshCart(_x){return _refreshCart.apply(this,arguments);}return refreshCart;}()/**\r\n     * Adds the specified product to the current cart. If product is already in cart\r\n     * will update its cart line, otherwise will add a new cart line to the cart\r\n     *\r\n     * @param product The product to add to the cart\r\n     * @param count: How many copies of the product to add\r\n     * @param location: The org unit location, used for BuyOnlinePickupInStore scenarios\r\n     * (If you want item to simply be shipped, leave this parameter undefined)\r\n     */},{key:\"addProductToCart\",value:function(){var _addProductToCart=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee5(input){var _this3=this;return _regeneratorRuntime.wrap(function _callee5$(_context5){while(1){switch(_context5.prev=_context5.next){case 0:return _context5.abrupt(\"return\",this._doAsyncAction(/*#__PURE__*/_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee4(){var cartLine,PRODUCTASSERVICE,isAddServiceItemToCart;return _regeneratorRuntime.wrap(function _callee4$(_context4){while(1){switch(_context4.prev=_context4.next){case 0:cartLine={CatalogId:_this3.actionContext.requestContext.apiSettings.catalogId,Description:input.product.Description,// TODO: Investigate this value and what it represents\nEntryMethodTypeValue:3,ItemId:input.product.ItemId,ProductId:input.product.RecordId,Quantity:input.count||1,TrackingId:'',UnitOfMeasureSymbol:input.product.DefaultUnitOfMeasure};if(!input.location){_context4.next=7;break;}if(_this3.actionContext.requestContext.channel){_context4.next=4;break;}return _context4.abrupt(\"return\",{status:'FAILED'});case 4:cartLine.DeliveryMode=_this3.actionContext.requestContext.channel.PickupDeliveryModeCode;cartLine.FulfillmentStoreId=cartLine.WarehouseId=input.location.OrgUnitNumber;cartLine.ShippingAddress=_this3._buildAddressFromOrgUnitLocation(input.location);case 7:// check if the product is service or not by product type\n// tslint:disable-next-line:prefer-type-cast\nPRODUCTASSERVICE=2;isAddServiceItemToCart=input.product.ItemTypeValue===PRODUCTASSERVICE;return _context4.abrupt(\"return\",_this3._doCartOperationWithRetry(function(){return addProductToCartInternal(_this3.cart,cartLine,_this3.actionContext,input.availableQuantity,input.enableStockCheck,isAddServiceItemToCart);}));case 10:case\"end\":return _context4.stop();}}},_callee4);}))));case 1:case\"end\":return _context5.stop();}}},_callee5,this);}));function addProductToCart(_x2){return _addProductToCart.apply(this,arguments);}return addProductToCart;}()/**\r\n     * Removes the cart lines with the provided ids from the cart\r\n     *\r\n     * @param cartLineIds The cart lines to remove\r\n     */},{key:\"removeCartLines\",value:function(){var _removeCartLines=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee7(input){var _this4=this;return _regeneratorRuntime.wrap(function _callee7$(_context7){while(1){switch(_context7.prev=_context7.next){case 0:return _context7.abrupt(\"return\",this._doAsyncAction(/*#__PURE__*/_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee6(){return _regeneratorRuntime.wrap(function _callee6$(_context6){while(1){switch(_context6.prev=_context6.next){case 0:return _context6.abrupt(\"return\",_this4._doCartOperationWithRetry(function(){return removeCartLineInternal(_this4.cart,input.cartLineIds,_this4.actionContext);}));case 1:case\"end\":return _context6.stop();}}},_callee6);}))));case 1:case\"end\":return _context7.stop();}}},_callee7,this);}));function removeCartLines(_x3){return _removeCartLines.apply(this,arguments);}return removeCartLines;}()/**\r\n     * Clears the pickup location information from the provided cart line,\r\n     * resulting in it getting shipped to the customer\r\n     *\r\n     * @param cartLineId The cart line to clear the location from\r\n     */},{key:\"clearCartLinePickupLocation\",value:function(){var _clearCartLinePickupLocation=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee9(input){var _this5=this;return _regeneratorRuntime.wrap(function _callee9$(_context9){while(1){switch(_context9.prev=_context9.next){case 0:return _context9.abrupt(\"return\",this._doAsyncAction(/*#__PURE__*/_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee8(){return _regeneratorRuntime.wrap(function _callee8$(_context8){while(1){switch(_context8.prev=_context8.next){case 0:return _context8.abrupt(\"return\",_this5._doCartOperationWithRetry(function(){return clearCartLineDeliveryModeInternal(_this5.cart,input.cartLineId,_this5.actionContext);}));case 1:case\"end\":return _context8.stop();}}},_callee8);}))));case 1:case\"end\":return _context9.stop();}}},_callee9,this);}));function clearCartLinePickupLocation(_x4){return _clearCartLinePickupLocation.apply(this,arguments);}return clearCartLinePickupLocation;}()/**\r\n     * Clears the delivery mode, and other information for the shipping cart lines.\r\n     */},{key:\"clearCartLinesDeliveryInformation\",value:function(){var _clearCartLinesDeliveryInformation2=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee11(input){var _this6=this;return _regeneratorRuntime.wrap(function _callee11$(_context11){while(1){switch(_context11.prev=_context11.next){case 0:return _context11.abrupt(\"return\",this._doAsyncAction(/*#__PURE__*/_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee10(){return _regeneratorRuntime.wrap(function _callee10$(_context10){while(1){switch(_context10.prev=_context10.next){case 0:return _context10.abrupt(\"return\",_this6._doCartOperationWithRetry(function(){return _clearCartLinesDeliveryInformation(_this6.cart,_this6.actionContext);}));case 1:case\"end\":return _context10.stop();}}},_callee10);}))));case 1:case\"end\":return _context11.stop();}}},_callee11,this);}));function clearCartLinesDeliveryInformation(_x5){return _clearCartLinesDeliveryInformation2.apply(this,arguments);}return clearCartLinesDeliveryInformation;}()/**\r\n     * Marks the provided cartline for pickup in store, with the provided location as\r\n     * the pickup location\r\n     *\r\n     * @param cartLineId The cart line to mark for pickup\r\n     * @param location The location to set for pickup\r\n     */},{key:\"updateCartLinePickupLocation\",value:function(){var _updateCartLinePickupLocation=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee13(input){var _this7=this;return _regeneratorRuntime.wrap(function _callee13$(_context13){while(1){switch(_context13.prev=_context13.next){case 0:return _context13.abrupt(\"return\",this._doAsyncAction(/*#__PURE__*/_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee12(){var cartLineDeliverySpecification;return _regeneratorRuntime.wrap(function _callee12$(_context12){while(1){switch(_context12.prev=_context12.next){case 0:if(_this7.actionContext.requestContext.channel){_context12.next=2;break;}return _context12.abrupt(\"return\",{status:'FAILED'});case 2:cartLineDeliverySpecification={LineId:input.cartLineId,DeliverySpecification:{DeliveryModeId:_this7.actionContext.requestContext.channel.PickupDeliveryModeCode,DeliveryPreferenceTypeValue:2,PickUpStoreId:input.location.OrgUnitNumber,DeliveryAddress:_this7._buildAddressFromOrgUnitLocation(input.location)}};return _context12.abrupt(\"return\",_this7._doCartOperationWithRetry(function(){return updateCartLineDeliverySpecificationsInternal(_this7.cart,[cartLineDeliverySpecification],_this7.actionContext);}));case 4:case\"end\":return _context12.stop();}}},_callee12);}))));case 1:case\"end\":return _context13.stop();}}},_callee13,this);}));function updateCartLinePickupLocation(_x6){return _updateCartLinePickupLocation.apply(this,arguments);}return updateCartLinePickupLocation;}()/**\r\n     * Updates the delivery mode for items in the cart with the desired delivery mode, preserving BOPIS status for stuff already marked as BOPIS\r\n     *\r\n     * @param deliveryModeId The delivery mode to use\r\n     */},{key:\"updateCartDeliverySpecification\",value:function(){var _updateCartDeliverySpecification=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee15(input){var _this8=this;return _regeneratorRuntime.wrap(function _callee15$(_context15){while(1){switch(_context15.prev=_context15.next){case 0:return _context15.abrupt(\"return\",this._doAsyncAction(/*#__PURE__*/_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee14(){var pickupDeliveryModeCode,cartLinesForShipping,deliverySpecifications;return _regeneratorRuntime.wrap(function _callee14$(_context14){while(1){switch(_context14.prev=_context14.next){case 0:if(!(input.deliveryModeId.trim()==='')){_context14.next=2;break;}return _context14.abrupt(\"return\",{status:'FAILED',substatus:'EMPTYINPUT'});case 2:pickupDeliveryModeCode=_this8.actionContext.requestContext.channel&&_this8.actionContext.requestContext.channel.PickupDeliveryModeCode;cartLinesForShipping=(_this8.cart.CartLines||[]).filter(function(cartLine){return cartLine.DeliveryMode&&cartLine.DeliveryMode!==''?cartLine.DeliveryMode!==pickupDeliveryModeCode:cartLine;});if(!(cartLinesForShipping.length>0)){_context14.next=7;break;}deliverySpecifications=cartLinesForShipping.map(function(cartLine){return{LineId:cartLine.LineId,DeliverySpecification:{DeliveryModeId:input.deliveryModeId,DeliveryPreferenceTypeValue:1,DeliveryAddress:input.shippingAddress}};});return _context14.abrupt(\"return\",_this8._doCartOperationWithRetry(function(){return updateCartLineDeliverySpecificationsInternal(_this8.cart,deliverySpecifications,_this8.actionContext);}));case 7:return _context14.abrupt(\"return\",{status:'FAILED',substatus:'NOCONTENT'});case 8:case\"end\":return _context14.stop();}}},_callee14);}))));case 1:case\"end\":return _context15.stop();}}},_callee15,this);}));function updateCartDeliverySpecification(_x7){return _updateCartDeliverySpecification.apply(this,arguments);}return updateCartDeliverySpecification;}()/**\r\n     * Updates the quantity of the cart line\r\n     *\r\n     * @param cartLineId The cart line to update the quantity\r\n     * @param newQuantity The new quantity to use (note that if this exceeds max quantity, will set quantity to max quantity)\r\n     */},{key:\"updateCartLineQuantity\",value:function(){var _updateCartLineQuantity=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee17(input){var _this9=this;return _regeneratorRuntime.wrap(function _callee17$(_context17){while(1){switch(_context17.prev=_context17.next){case 0:return _context17.abrupt(\"return\",this._doAsyncAction(/*#__PURE__*/_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee16(){return _regeneratorRuntime.wrap(function _callee16$(_context16){while(1){switch(_context16.prev=_context16.next){case 0:return _context16.abrupt(\"return\",_this9._doCartOperationWithRetry(function(){return updateCartLineQuantityInternal(_this9.cart,input.cartLineId,input.newQuantity,_this9.actionContext);}));case 1:case\"end\":return _context16.stop();}}},_callee16);}))));case 1:case\"end\":return _context17.stop();}}},_callee17,this);}));function updateCartLineQuantity(_x8){return _updateCartLineQuantity.apply(this,arguments);}return updateCartLineQuantity;}()/**\r\n     * Updates the loyalty card ID on the card\r\n     *\r\n     * @param loyaltyCardId The loyalty card id to use\r\n     */},{key:\"updateLoyaltyCardId\",value:function(){var _updateLoyaltyCardId=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee19(input){var _this10=this;return _regeneratorRuntime.wrap(function _callee19$(_context19){while(1){switch(_context19.prev=_context19.next){case 0:if(input.loyaltyCardNumber){_context19.next=2;break;}return _context19.abrupt(\"return\",{status:'FAILED',substatus:'EMPTYINPUT'});case 2:return _context19.abrupt(\"return\",this._doAsyncAction(/*#__PURE__*/_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee18(){return _regeneratorRuntime.wrap(function _callee18$(_context18){while(1){switch(_context18.prev=_context18.next){case 0:return _context18.abrupt(\"return\",_this10._doCartOperationWithRetry(function(){return updateLoyaltyCardIdInternal(_this10.cart,input.loyaltyCardNumber,_this10.actionContext);}));case 1:case\"end\":return _context18.stop();}}},_callee18);}))));case 3:case\"end\":return _context19.stop();}}},_callee19,this);}));function updateLoyaltyCardId(_x9){return _updateLoyaltyCardId.apply(this,arguments);}return updateLoyaltyCardId;}()/**\r\n     * Adds promo code to the cart\r\n     *\r\n     * @param promoCode The promo code to add\r\n     */},{key:\"addPromoCode\",value:function addPromoCode(input){var _this11=this;return this._doAsyncAction(/*#__PURE__*/_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee20(){return _regeneratorRuntime.wrap(function _callee20$(_context20){while(1){switch(_context20.prev=_context20.next){case 0:return _context20.abrupt(\"return\",_this11._doCartOperationWithRetry(function(){return addPromoCodeInternal(_this11.cart,input.promoCode,_this11.actionContext);}));case 1:case\"end\":return _context20.stop();}}},_callee20);})));}/**\r\n     * Removes promo codes from the cart\r\n     *\r\n     * @param promoCodes The promo codes to remove\r\n     */},{key:\"removePromoCodes\",value:function removePromoCodes(input){var _this12=this;return this._doAsyncAction(/*#__PURE__*/_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee21(){return _regeneratorRuntime.wrap(function _callee21$(_context21){while(1){switch(_context21.prev=_context21.next){case 0:return _context21.abrupt(\"return\",_this12._doCartOperationWithRetry(function(){return removePromoCodesInternal(_this12.cart,input.promoCodes,_this12.actionContext);}));case 1:case\"end\":return _context21.stop();}}},_callee21);})));}/**\r\n     * Removes all promo code from the cart\r\n     */},{key:\"removeAllPromoCodes\",value:function removeAllPromoCodes(input){var _this13=this;return this._doAsyncAction(/*#__PURE__*/_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee22(){return _regeneratorRuntime.wrap(function _callee22$(_context22){while(1){switch(_context22.prev=_context22.next){case 0:return _context22.abrupt(\"return\",_this13._doCartOperationWithRetry(function(){return removeAllPromoCodesInternal(_this13.cart,_this13.actionContext);}));case 1:case\"end\":return _context22.stop();}}},_callee22);})));}/**\r\n     * Updates receipt email\r\n     *\r\n     * @param newEmail The receipt email\r\n     */},{key:\"updateReceiptEmail\",value:function(){var _updateReceiptEmail2=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee24(input){var _this14=this;return _regeneratorRuntime.wrap(function _callee24$(_context24){while(1){switch(_context24.prev=_context24.next){case 0:return _context24.abrupt(\"return\",this._doAsyncAction(/*#__PURE__*/_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee23(){return _regeneratorRuntime.wrap(function _callee23$(_context23){while(1){switch(_context23.prev=_context23.next){case 0:return _context23.abrupt(\"return\",_this14._doCartOperationWithRetry(function(){return _updateReceiptEmail(_this14.cart,input.newEmail,_this14.actionContext);}));case 1:case\"end\":return _context23.stop();}}},_callee23);}))));case 1:case\"end\":return _context24.stop();}}},_callee24,this);}));function updateReceiptEmail(_x10){return _updateReceiptEmail2.apply(this,arguments);}return updateReceiptEmail;}()/**\r\n     * Updates the attribute values\r\n     *\r\n     * @param newAttributeValues The new attribute values to update\r\n     */},{key:\"updateAttributeValues\",value:function(){var _updateAttributeValues=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee25(input){var newCartObject;return _regeneratorRuntime.wrap(function _callee25$(_context25){while(1){switch(_context25.prev=_context25.next){case 0:this._attributeValues=input.newAttributeValues;newCartObject={Id:this.cart.Id,AttributeValues:input.newAttributeValues};return _context25.abrupt(\"return\",this.updateCart({newCartObject:newCartObject}));case 3:case\"end\":return _context25.stop();}}},_callee25,this);}));function updateAttributeValues(_x11){return _updateAttributeValues.apply(this,arguments);}return updateAttributeValues;}()/**\r\n     * Updates the extension properties\r\n     *\r\n     * @param newExtensionProperties The new Extension properties to update\r\n     */},{key:\"updateExtensionProperties\",value:function(){var _updateExtensionProperties=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee26(input){var newCartObject;return _regeneratorRuntime.wrap(function _callee26$(_context26){while(1){switch(_context26.prev=_context26.next){case 0:this._extensionProperties=input.newExtensionProperties;newCartObject={Id:this.cart.Id,ExtensionProperties:input.newExtensionProperties};return _context26.abrupt(\"return\",this.updateCart({newCartObject:newCartObject}));case 3:case\"end\":return _context26.stop();}}},_callee26,this);}));function updateExtensionProperties(_x12){return _updateExtensionProperties.apply(this,arguments);}return updateExtensionProperties;}()/**\r\n     * Updates cart object\r\n     *\r\n     * @param newCart The cart object\r\n     */},{key:\"updateCart\",value:function(){var _updateCart2=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee28(input){var _this15=this;return _regeneratorRuntime.wrap(function _callee28$(_context28){while(1){switch(_context28.prev=_context28.next){case 0:return _context28.abrupt(\"return\",this._doAsyncAction(/*#__PURE__*/_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee27(){return _regeneratorRuntime.wrap(function _callee27$(_context27){while(1){switch(_context27.prev=_context27.next){case 0:return _context27.abrupt(\"return\",_this15._doCartOperationWithRetry(function(){return _updateCart(_this15.cart,input.newCartObject,_this15.actionContext);}));case 1:case\"end\":return _context27.stop();}}},_callee27);}))));case 1:case\"end\":return _context28.stop();}}},_callee28,this);}));function updateCart(_x13){return _updateCart2.apply(this,arguments);}return updateCart;}()},{key:\"_doCartOperationWithRetry\",value:function(){var _doCartOperationWithRetry2=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee29(callback){var callbackResult,refreshCartResult;return _regeneratorRuntime.wrap(function _callee29$(_context29){while(1){switch(_context29.prev=_context29.next){case 0:_context29.next=2;return callback();case 2:callbackResult=_context29.sent;if(!(callbackResult.status==='SUCCESS'||!this._shouldRetrySubstatus(callbackResult.substatus))){_context29.next=7;break;}if(callbackResult.cart){this._cart=callbackResult.cart;}_context29.next=15;break;case 7:_context29.next=9;return this.refreshCart({});case 9:refreshCartResult=_context29.sent;if(!(refreshCartResult.status==='SUCCESS')){_context29.next=15;break;}_context29.next=13;return callback();case 13:callbackResult=_context29.sent;if(callbackResult.status==='SUCCESS'||!this._shouldRetrySubstatus(callbackResult.substatus)){if(callbackResult.cart){this._cart=callbackResult.cart;}}case 15:return _context29.abrupt(\"return\",{status:callbackResult.status,substatus:callbackResult.substatus});case 16:case\"end\":return _context29.stop();}}},_callee29,this);}));function _doCartOperationWithRetry(_x14){return _doCartOperationWithRetry2.apply(this,arguments);}return _doCartOperationWithRetry;}()},{key:\"_shouldRetrySubstatus\",value:function _shouldRetrySubstatus(subsatus){if(!subsatus){return true;}// all substatus currently don't result in a retry\nreturn false;}},{key:\"_buildAddressFromOrgUnitLocation\",value:function _buildAddressFromOrgUnitLocation(location){return{RecordId:location.PostalAddressId,Name:location.OrgUnitName,FullAddress:location.Address,Street:location.Street,StreetNumber:location.StreetNumber,City:location.City,DistrictName:location.DistrictName,BuildingCompliment:location.BuildingCompliment,Postbox:location.Postbox,ThreeLetterISORegionName:location.Country,ZipCode:location.Zip,County:location.County,CountyName:location.CountyName,State:location.State,StateName:location.StateName};}},{key:\"cart\",get:function get(){return this._cart;}},{key:\"attributeValues\",get:function get(){return this._attributeValues;}},{key:\"extensionProperties\",get:function get(){return this._extensionProperties;}},{key:\"totalItemsInCart\",get:function get(){if(this._cart.CartLines){return this._cart.CartLines.map(function(cartLine){return cartLine.Quantity||1;}).reduce(function(total,num){return total+num;},0);}return 0;}},{key:\"isEmpty\",get:function get(){return!(this._cart.CartLines&&this._cart.CartLines.length>0);}}]);return BaseCartState;}(GlobalState);__decorate([observable],BaseCartState.prototype,\"_cart\",void 0);__decorate([computed],BaseCartState.prototype,\"cart\",null);__decorate([observable],BaseCartState.prototype,\"_attributeValues\",void 0);__decorate([computed],BaseCartState.prototype,\"attributeValues\",null);__decorate([observable],BaseCartState.prototype,\"_extensionProperties\",void 0);__decorate([computed],BaseCartState.prototype,\"extensionProperties\",null);__decorate([computed],BaseCartState.prototype,\"totalItemsInCart\",null);__decorate([computed],BaseCartState.prototype,\"isEmpty\",null);__decorate([action],BaseCartState.prototype,\"refreshCart\",null);__decorate([action],BaseCartState.prototype,\"addProductToCart\",null);__decorate([action],BaseCartState.prototype,\"removeCartLines\",null);__decorate([action],BaseCartState.prototype,\"clearCartLinePickupLocation\",null);__decorate([action],BaseCartState.prototype,\"clearCartLinesDeliveryInformation\",null);__decorate([action],BaseCartState.prototype,\"updateCartLinePickupLocation\",null);__decorate([action],BaseCartState.prototype,\"updateCartDeliverySpecification\",null);__decorate([action],BaseCartState.prototype,\"updateCartLineQuantity\",null);__decorate([action],BaseCartState.prototype,\"updateLoyaltyCardId\",null);__decorate([action],BaseCartState.prototype,\"addPromoCode\",null);__decorate([action],BaseCartState.prototype,\"removePromoCodes\",null);__decorate([action],BaseCartState.prototype,\"removeAllPromoCodes\",null);__decorate([action],BaseCartState.prototype,\"updateReceiptEmail\",null);__decorate([action],BaseCartState.prototype,\"updateAttributeValues\",null);__decorate([action],BaseCartState.prototype,\"updateExtensionProperties\",null);__decorate([action],BaseCartState.prototype,\"updateCart\",null);","map":{"version":3,"sources":["cart-state/base-cart-state.ts"],"names":[],"mappings":"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","sourcesContent":["import { IActionContext } from '@msdyn365-commerce/core';\nimport { Address, Cart, CartLine, OrgUnitLocation, SimpleProduct } from '@msdyn365-commerce/retail-proxy';\nimport { action, computed, observable } from 'mobx';\n\nimport { AttributeValueBase, CommerceProperty, ReleasedProductType } from '@msdyn365-commerce/retail-proxy/dist/Entities/CommerceTypes.g';\nimport { GlobalState } from '../global-state/global-state';\nimport { ICartActionResult, ICartActionSubStatus, ICartState } from '../state-interfaces/i-cart-state';\nimport addProductToCartInternal from './add-product-to-cart';\nimport addPromoCodeInternal from './add-promo-code';\nimport { ICartActionResultWithCart } from './cart-action-result';\nimport clearCartLineDeliveryModeInternal from './clear-cart-line-delivery-mode';\nimport clearCartLinesDeliveryInformation from './clear-cart-lines-delivery-information';\nimport getOrCreateActiveCart from './get-or-create-active-cart';\nimport refreshCartInternal from './refresh-cart';\nimport removeAllPromoCodesInternal from './remove-all-promo-codes';\nimport removeCartLineInternal from './remove-cart-lines';\nimport removePromoCodesInternal from './remove-promo-codes';\nimport updateCart from './update-cart';\nimport updateCartLineDeliverySpecificationsInternal from './update-cart-line-delivery-specifications';\nimport updateCartLineQuantityInternal from './update-cart-line-quantity';\nimport updateLoyaltyCardIdInternal from './update-loyalty-card-id';\nimport updateReceiptEmail from './update-receipt-email';\n\n/**\n * Cart state information\n */\nexport class BaseCartState extends GlobalState implements ICartState {\n    @observable protected _cart: Cart;\n\n    @computed public get cart(): Readonly<Cart> {\n        return this._cart;\n    }\n\n    @observable protected _attributeValues: AttributeValueBase[];\n\n    @computed public get attributeValues(): AttributeValueBase[] {\n        return this._attributeValues;\n    }\n\n    @observable protected _extensionProperties: CommerceProperty[];\n\n    @computed public get extensionProperties(): CommerceProperty[] {\n        return this._extensionProperties;\n    }\n\n    @computed public get totalItemsInCart(): number {\n        if (this._cart.CartLines) {\n            return this._cart.CartLines.map(cartLine => cartLine.Quantity || 1).reduce((total, num) => total + num, 0);\n        }\n\n        return 0;\n    }\n\n    @computed public get isEmpty(): boolean {\n        return !(this._cart.CartLines && this._cart.CartLines.length > 0);\n    }\n\n    constructor(actionContext: IActionContext) {\n        super(actionContext);\n        this._cart = <Cart>{};\n        this._attributeValues = [];\n        this._extensionProperties = [];\n    }\n\n    public async initialize(): Promise<void> {\n        if (this.isInitialized) {\n            return;\n        }\n\n        const newCart = await getOrCreateActiveCart(this.actionContext);\n\n        if (newCart) {\n            this._cart = newCart;\n            this._status = 'READY';\n        } else {\n            this._status = 'ERROR';\n        }\n\n        this.isInitialized = true;\n    }\n\n    /**\n     * Refreshes the cart by getting it from the server\n     *\n     * Other actions should keep cart up to date so shouldn't need to call this\n     * outside of initialization but still might be scenarios where a manual\n     * refresh is needed\n     */\n    @action\n    public async refreshCart(input: { additionalProperties?: object }): Promise<ICartActionResult> {\n        return this._doAsyncAction<ICartActionResult>(async () => {\n            const newCart = await refreshCartInternal(this.cart.Id, this.actionContext);\n\n            if (newCart) {\n                this._cart = newCart;\n\n                return { status: 'SUCCESS' };\n            }\n\n            return { status: 'FAILED' };\n        });\n    }\n\n    /**\n     * Adds the specified product to the current cart. If product is already in cart\n     * will update its cart line, otherwise will add a new cart line to the cart\n     *\n     * @param product The product to add to the cart\n     * @param count: How many copies of the product to add\n     * @param location: The org unit location, used for BuyOnlinePickupInStore scenarios\n     * (If you want item to simply be shipped, leave this parameter undefined)\n     */\n    @action\n    public async addProductToCart(input: {product: SimpleProduct; count?: number; location?: OrgUnitLocation; additionalProperties?: object; availableQuantity?: number; enableStockCheck?: boolean}): Promise<ICartActionResult> {\n        return this._doAsyncAction<ICartActionResult>(async () => {\n            const cartLine: CartLine = {\n                CatalogId: this.actionContext.requestContext.apiSettings.catalogId,\n                Description: input.product.Description,\n                // TODO: Investigate this value and what it represents\n                EntryMethodTypeValue: 3,\n                ItemId: input.product.ItemId,\n                ProductId: input.product.RecordId,\n                Quantity: input.count || 1,\n                TrackingId: '',\n                UnitOfMeasureSymbol: input.product.DefaultUnitOfMeasure\n            };\n\n            if (input.location) {\n                if (!this.actionContext.requestContext.channel) {\n                    return { status: 'FAILED' };\n                }\n\n                cartLine.DeliveryMode = this.actionContext.requestContext.channel.PickupDeliveryModeCode;\n                cartLine.FulfillmentStoreId = cartLine.WarehouseId = input.location.OrgUnitNumber;\n                cartLine.ShippingAddress = this._buildAddressFromOrgUnitLocation(input.location);\n            }\n\n            // check if the product is service or not by product type\n            // tslint:disable-next-line:prefer-type-cast\n            const PRODUCTASSERVICE = 2 as ReleasedProductType.Service;\n            const isAddServiceItemToCart = input.product.ItemTypeValue === PRODUCTASSERVICE;\n\n            return this._doCartOperationWithRetry(() => addProductToCartInternal(this.cart, cartLine, this.actionContext, input.availableQuantity, input.enableStockCheck, isAddServiceItemToCart));\n        });\n    }\n\n    /**\n     * Removes the cart lines with the provided ids from the cart\n     *\n     * @param cartLineIds The cart lines to remove\n     */\n    @action\n    public async removeCartLines(input: { cartLineIds: string[]; additionalProperties?: object }): Promise<ICartActionResult> {\n        return this._doAsyncAction<ICartActionResult>(async () => {\n            return this._doCartOperationWithRetry(() => removeCartLineInternal(this.cart, input.cartLineIds, this.actionContext));\n        });\n    }\n\n    /**\n     * Clears the pickup location information from the provided cart line,\n     * resulting in it getting shipped to the customer\n     *\n     * @param cartLineId The cart line to clear the location from\n     */\n    @action\n    public async clearCartLinePickupLocation(input: { cartLineId: string; additionalProperties?: object }): Promise<ICartActionResult> {\n        return this._doAsyncAction<ICartActionResult>(async () => {\n            return this._doCartOperationWithRetry(() => clearCartLineDeliveryModeInternal(this.cart, input.cartLineId, this.actionContext));\n        });\n    }\n\n    /**\n     * Clears the delivery mode, and other information for the shipping cart lines.\n     */\n    @action\n    public async clearCartLinesDeliveryInformation(input: { additionalProperties?: object }): Promise<ICartActionResult> {\n        return this._doAsyncAction<ICartActionResult>(async () => {\n            return this._doCartOperationWithRetry(() => clearCartLinesDeliveryInformation(this.cart, this.actionContext));\n        });\n    }\n\n    /**\n     * Marks the provided cartline for pickup in store, with the provided location as\n     * the pickup location\n     *\n     * @param cartLineId The cart line to mark for pickup\n     * @param location The location to set for pickup\n     */\n    @action\n    public async updateCartLinePickupLocation(input: { cartLineId: string; location: OrgUnitLocation; additionalProperties?: object }): Promise<ICartActionResult> {\n        return this._doAsyncAction<ICartActionResult>(async () => {\n            if (!this.actionContext.requestContext.channel) {\n                return { status: 'FAILED' };\n            }\n\n            const cartLineDeliverySpecification = {\n                LineId: input.cartLineId,\n                DeliverySpecification: {\n                    DeliveryModeId: this.actionContext.requestContext.channel.PickupDeliveryModeCode,\n                    DeliveryPreferenceTypeValue: 2, // Pick up in store\n                    PickUpStoreId: input.location.OrgUnitNumber,\n                    DeliveryAddress: this._buildAddressFromOrgUnitLocation(input.location)\n                }\n            };\n\n            return this._doCartOperationWithRetry(() => updateCartLineDeliverySpecificationsInternal(this.cart, [cartLineDeliverySpecification], this.actionContext));\n        });\n    }\n\n    /**\n     * Updates the delivery mode for items in the cart with the desired delivery mode, preserving BOPIS status for stuff already marked as BOPIS\n     *\n     * @param deliveryModeId The delivery mode to use\n     */\n    @action\n    public async updateCartDeliverySpecification(input: { deliveryModeId: string; shippingAddress: Address | undefined; additionalProperties?: object }): Promise<ICartActionResult> {\n        return this._doAsyncAction<ICartActionResult>(async () => {\n            if (input.deliveryModeId.trim() === '') {\n                return { status: 'FAILED', substatus: 'EMPTYINPUT' };\n            }\n\n            const pickupDeliveryModeCode =\n                this.actionContext.requestContext.channel && this.actionContext.requestContext.channel.PickupDeliveryModeCode;\n\n            const cartLinesForShipping = (this.cart.CartLines || []).filter(\n                cartLine => (cartLine.DeliveryMode && cartLine.DeliveryMode !== '') ? cartLine.DeliveryMode !== pickupDeliveryModeCode : cartLine\n            );\n\n            if (cartLinesForShipping.length > 0) {\n                const deliverySpecifications = cartLinesForShipping.map(cartLine => {\n                    return {\n                        LineId: cartLine.LineId,\n                        DeliverySpecification: {\n                            DeliveryModeId: input.deliveryModeId,\n                            DeliveryPreferenceTypeValue: 1, // Ship\n                            DeliveryAddress: input.shippingAddress\n                        }\n                    };\n                });\n\n                return this._doCartOperationWithRetry(() => updateCartLineDeliverySpecificationsInternal(this.cart, deliverySpecifications, this.actionContext));\n            }\n\n            return { status: 'FAILED', substatus: 'NOCONTENT' };\n        });\n    }\n\n    /**\n     * Updates the quantity of the cart line\n     *\n     * @param cartLineId The cart line to update the quantity\n     * @param newQuantity The new quantity to use (note that if this exceeds max quantity, will set quantity to max quantity)\n     */\n    @action\n    public async updateCartLineQuantity(input: { cartLineId: string; newQuantity: number; additionalProperties?: object }): Promise<ICartActionResult> {\n        return this._doAsyncAction<ICartActionResult>(async () => {\n            return this._doCartOperationWithRetry(() => updateCartLineQuantityInternal(this.cart, input.cartLineId, input.newQuantity, this.actionContext));\n        });\n    }\n\n    /**\n     * Updates the loyalty card ID on the card\n     *\n     * @param loyaltyCardId The loyalty card id to use\n     */\n    @action\n    public async updateLoyaltyCardId(input: { loyaltyCardNumber: string | undefined; additionalProperties?: object }): Promise<ICartActionResult> {\n        if (!input.loyaltyCardNumber) {\n            return { status: 'FAILED', substatus: 'EMPTYINPUT' };\n        }\n\n        return this._doAsyncAction<ICartActionResult>(async () => {\n            return this._doCartOperationWithRetry(() => updateLoyaltyCardIdInternal(this.cart, input.loyaltyCardNumber!, this.actionContext));\n        });\n    }\n\n    /**\n     * Adds promo code to the cart\n     *\n     * @param promoCode The promo code to add\n     */\n    @action\n    public addPromoCode(input: { promoCode: string; additionalProperties?: object }): Promise<ICartActionResult> {\n        return this._doAsyncAction<ICartActionResult>(async () => {\n            return this._doCartOperationWithRetry(() => addPromoCodeInternal(this.cart, input.promoCode, this.actionContext));\n        });\n    }\n\n    /**\n     * Removes promo codes from the cart\n     *\n     * @param promoCodes The promo codes to remove\n     */\n    @action\n    public removePromoCodes(input: { promoCodes: string[]; additionalProperties?: object }): Promise<ICartActionResult> {\n        return this._doAsyncAction<ICartActionResult>(async () => {\n            return this._doCartOperationWithRetry(() => removePromoCodesInternal(this.cart, input.promoCodes, this.actionContext));\n        });\n    }\n\n    /**\n     * Removes all promo code from the cart\n     */\n    @action\n    public removeAllPromoCodes(input: { additionalProperties?: object }): Promise<ICartActionResult> {\n        return this._doAsyncAction<ICartActionResult>(async () => {\n            return this._doCartOperationWithRetry(() => removeAllPromoCodesInternal(this.cart, this.actionContext));\n        });\n    }\n\n    /**\n     * Updates receipt email\n     *\n     * @param newEmail The receipt email\n     */\n    @action\n    public async updateReceiptEmail(input: { newEmail: string; additionalProperties?: object }): Promise<ICartActionResult> {\n        return this._doAsyncAction<ICartActionResult>(async () => {\n            return this._doCartOperationWithRetry(() => updateReceiptEmail(this.cart, input.newEmail, this.actionContext));\n        });\n    }\n\n    /**\n     * Updates the attribute values\n     *\n     * @param newAttributeValues The new attribute values to update\n     */\n    @action\n    public async updateAttributeValues(input: { newAttributeValues: AttributeValueBase[]; additionalProperties?: object }): Promise<ICartActionResult> {\n        this._attributeValues = input.newAttributeValues;\n        const newCartObject: Cart = {\n            Id: this.cart.Id,\n            AttributeValues: input.newAttributeValues\n        };\n        return this.updateCart({ newCartObject: newCartObject });\n    }\n\n    /**\n     * Updates the extension properties\n     *\n     * @param newExtensionProperties The new Extension properties to update\n     */\n    @action\n    public async updateExtensionProperties(input: { newExtensionProperties: CommerceProperty[]; additionalProperties?: object }): Promise<ICartActionResult> {\n        this._extensionProperties = input.newExtensionProperties;\n        const newCartObject: Cart = {\n            Id: this.cart.Id,\n            ExtensionProperties: input.newExtensionProperties\n        };\n        return this.updateCart({ newCartObject: newCartObject });\n    }\n\n    /**\n     * Updates cart object\n     *\n     * @param newCart The cart object\n     */\n    @action\n    public async updateCart(input: { newCartObject: Cart; additionalProperties?: object }): Promise<ICartActionResult> {\n        return this._doAsyncAction<ICartActionResult>(async () => {\n            return this._doCartOperationWithRetry(() => updateCart(this.cart, input.newCartObject, this.actionContext));\n        });\n    }\n\n    private async _doCartOperationWithRetry(callback: () => Promise<ICartActionResultWithCart>): Promise<ICartActionResult> {\n        let callbackResult = await callback();\n\n        if (callbackResult.status === 'SUCCESS' || !this._shouldRetrySubstatus(callbackResult.substatus)) {\n            if (callbackResult.cart) {\n                this._cart = callbackResult.cart;\n            }\n        } else {\n            const refreshCartResult = await this.refreshCart({});\n\n            if (refreshCartResult.status === 'SUCCESS') {\n                callbackResult = await callback();\n\n                if (callbackResult.status === 'SUCCESS' || !this._shouldRetrySubstatus(callbackResult.substatus)) {\n                    if (callbackResult.cart) {\n                        this._cart = callbackResult.cart;\n                    }\n                }\n            }\n        }\n\n        return { status: callbackResult.status, substatus: callbackResult.substatus };\n    }\n\n    private _shouldRetrySubstatus(subsatus?: ICartActionSubStatus): boolean {\n        if (!subsatus) {\n            return true;\n        }\n\n        // all substatus currently don't result in a retry\n        return false;\n    }\n\n    private _buildAddressFromOrgUnitLocation(location: OrgUnitLocation): Address {\n        return {\n            RecordId: location.PostalAddressId,\n            Name: location.OrgUnitName,\n            FullAddress: location.Address,\n            Street: location.Street,\n            StreetNumber: location.StreetNumber,\n            City: location.City,\n            DistrictName: location.DistrictName,\n            BuildingCompliment: location.BuildingCompliment,\n            Postbox: location.Postbox,\n            ThreeLetterISORegionName: location.Country,\n            ZipCode: location.Zip,\n            County: location.County,\n            CountyName: location.CountyName,\n            State: location.State,\n            StateName: location.StateName\n        };\n    }\n}\n"],"sourceRoot":"./src/"},"metadata":{},"sourceType":"module"}