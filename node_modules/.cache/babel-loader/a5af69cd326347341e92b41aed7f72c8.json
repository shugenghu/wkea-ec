{"ast":null,"code":"import _defineProperty from \"@babel/runtime/helpers/esm/defineProperty\";\nimport _classCallCheck from \"@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/esm/createClass\";\nimport _assertThisInitialized from \"@babel/runtime/helpers/esm/assertThisInitialized\";\nimport _inherits from \"@babel/runtime/helpers/esm/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/esm/getPrototypeOf\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Date.prototype.toString.call(Reflect.construct(Date, [], function () {})); return true; } catch (e) { return false; } }\n\nimport { __decorate } from \"tslib\";\n/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { Button, getPayloadObject, getTelemetryAttributes, getTelemetryObject, KeyCodes, Modal, ModalBody, ModalHeader, onTelemetryClick, Popover, TelemetryConstant } from '@msdyn365-commerce-modules/utilities';\nimport { CartIconComponent, WishListIconComponent } from '@msdyn365-commerce/components';\nimport * as MsDyn365 from '@msdyn365-commerce/core';\nimport classnames from 'classnames';\nimport { computed } from 'mobx';\nimport * as React from 'react';\nimport { Logo, NavIcon } from './components';\n/**\n *\n * Header component\n * @extends {React.PureComponent<IHeaderProps<IHeaderData>>}\n */\n\nvar Header = /*#__PURE__*/function (_React$PureComponent) {\n  _inherits(Header, _React$PureComponent);\n\n  var _super = _createSuper(Header);\n\n  function Header(props) {\n    var _this;\n\n    _classCallCheck(this, Header);\n\n    _this = _super.call(this, props);\n    /* Handle link text change*/\n\n    _this.handleLinkTextChange = function (linkIndex) {\n      return function (event) {\n        if (_this.props.config.myAccountLinks && _this.props.config.myAccountLinks[linkIndex]) {\n          _this.props.config.myAccountLinks[linkIndex].linkText = event.target.value;\n        }\n      };\n    };\n\n    _this.popOverRef = /*#__PURE__*/React.createRef();\n    _this._toggleNavbar = _this._toggleNavbar.bind(_assertThisInitialized(_this));\n    _this._togglePopover = _this._togglePopover.bind(_assertThisInitialized(_this));\n    _this._keydown = _this._keydown.bind(_assertThisInitialized(_this));\n    _this.state = {\n      mobileMenuCollapsed: true,\n      signinPopoverOpen: false\n    };\n    _this.telemetryContent = getTelemetryObject(_this.props.context.request.telemetryPageName, _this.props.friendlyName, _this.props.telemetry);\n    return _this;\n  }\n\n  _createClass(Header, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      if (MsDyn365.msdyn365Commerce.isBrowser) {\n        window.addEventListener('keydown', this._keydown);\n      }\n    }\n  }, {\n    key: \"componentWillUnmount\",\n    value: function componentWillUnmount() {\n      if (MsDyn365.msdyn365Commerce.isBrowser) {\n        window.removeEventListener('keydown', this._keydown, false);\n      }\n    } // tslint:disable-next-line: max-func-body-length\n\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this$props = this.props,\n          id = _this$props.id,\n          typeName = _this$props.typeName,\n          _this$props$data = _this$props.data,\n          accountInformation = _this$props$data.accountInformation,\n          cart = _this$props$data.cart.result,\n          user = _this$props.context.request.user,\n          context = _this$props.context,\n          cartLabel = _this$props.resources.cartLabel;\n      var _this$props$config = this.props.config,\n          logoLink = _this$props$config.logoLink,\n          logoImage = _this$props$config.logoImage;\n      var headerClassName = classnames('ms-header', this.props.config.className);\n      var navbarKey = 'header-nav-mobile';\n      var customer = accountInformation && accountInformation.result;\n\n      var cartIconSlot = this._getSlot('cartIcon');\n\n      var menuBarSlot = this._getSlot('menuBar');\n\n      var searchSlot = this._getSlot('search');\n\n      var siteOptionsSlot = this._getSlot('siteOptions');\n\n      var viewProps = _objectSpread(_objectSpread(_objectSpread({}, this.props), this.state), {}, {\n        logo: /*#__PURE__*/React.createElement(Logo, Object.assign({}, {\n          link: logoLink,\n          image: logoImage,\n          className: 'ms-header__logo',\n          gridSettings: this.props.context.request.gridSettings,\n          requestContext: this.props.context.request,\n          telemetryContent: this.telemetryContent\n        })),\n        wishListIconDesktop: /*#__PURE__*/React.createElement(WishListIconComponent, {\n          className: 'ms-header__wishlist-desktop',\n          showButtonTooltip: true,\n          wishlistTooltipText: this.props.resources.wishlistTooltipText,\n          context: context,\n          id: id,\n          typeName: typeName,\n          telemetryContent: this.telemetryContent,\n          data: {}\n        }),\n        wishListIconMobile: /*#__PURE__*/React.createElement(WishListIconComponent, {\n          className: 'ms-header__wishlist-mobile',\n          showButtonTooltip: true,\n          wishlistTooltipText: this.props.resources.wishlistTooltipText,\n          context: context,\n          id: id,\n          typeName: typeName,\n          telemetryContent: this.telemetryContent,\n          data: {}\n        }),\n        cartIcon: cartIconSlot && cartIconSlot.length > 0 ? cartIconSlot[0] : cart && /*#__PURE__*/React.createElement(CartIconComponent, {\n          cartLabel: cartLabel,\n          context: context,\n          id: id,\n          typeName: typeName,\n          telemetryContent: this.telemetryContent,\n          data: {\n            cart: cart\n          }\n        }),\n        navIcon: /*#__PURE__*/React.createElement(NavIcon, Object.assign({}, {\n          resources: this.props.resources,\n          isExpanded: !this.state.mobileMenuCollapsed,\n          targetId: navbarKey,\n          toggleNavBar: this._toggleNavbar,\n          telemetryContent: this.telemetryContent\n        })),\n        menuBar: menuBarSlot && menuBarSlot.length && menuBarSlot || [],\n        search: searchSlot && searchSlot.length && searchSlot || [],\n        siteOptions: siteOptionsSlot && siteOptionsSlot.length && siteOptionsSlot || [],\n        className: headerClassName,\n        HeaderTag: {\n          moduleProps: this.props,\n          className: classnames(headerClassName),\n          tag: 'header'\n        },\n        HeaderContainer: {\n          className: classnames('ms-header__container')\n        },\n        HeaderTopBarContainer: {\n          className: classnames('ms-header__topbar')\n        },\n        Divider: {\n          className: classnames('ms-header__divider')\n        },\n        MobileMenuContainer: {\n          tag: Modal,\n          id: navbarKey,\n          className: 'ms-header__mobile-hamburger',\n          isOpen: !this.state.mobileMenuCollapsed,\n          wrapClassName: 'ms-header__modal'\n        },\n        MobileMenuHeader: /*#__PURE__*/React.createElement(ModalHeader, {\n          className: 'ms-header__mobile-hamburger-menu-header',\n          toggle: this._toggleNavbar\n        }),\n        MobileMenuBodyContainer: {\n          tag: ModalBody,\n          className: 'ms-header__mobile-hamburger-menu-body'\n        },\n        MobileMenuLinksContainer: {\n          className: 'ms-header__mobile-hamburger-menu-links'\n        },\n        AccountInfoDropdownParentContainer: {\n          className: 'ms-header__account-info'\n        },\n        AccountInfoDropdownPopoverConentContainer: customer && this.displayName && {\n          tag: Popover,\n          id: 'myprofilePopover',\n          className: 'ms-header__account-info-content',\n          placement: 'bottom',\n          isOpen: this.state.signinPopoverOpen,\n          target: this.popOverRef,\n          toggle: this._togglePopover\n        } || undefined,\n        signInLink: this._getSigninButton(customer, user, this.props.resources),\n        signOutLink: this._getSignOutButton(customer, user, this.props.resources),\n        accountInfoDropdownButton: this._getAccountInfoDropdownButton(customer),\n        accountLinks: this._getAccountLinks(customer)\n      });\n\n      return this.props.renderView(viewProps);\n    }\n  }, {\n    key: \"_getSlot\",\n    value: function _getSlot(slotName) {\n      var slots = this.props.slots;\n      return slots && slots[slotName] && slots[slotName].length && slots[slotName] || null;\n    }\n  }, {\n    key: \"_getSigninButton\",\n    value: function _getSigninButton(customer, user, resources) {\n      var payLoad = getPayloadObject('click', this.telemetryContent, TelemetryConstant.SignIn);\n      var attributes = getTelemetryAttributes(this.telemetryContent, payLoad);\n      return !customer && /*#__PURE__*/React.createElement(Button, Object.assign({\n        className: 'ms-header__signin-button',\n        title: resources.signInLinkText,\n        href: user && user.signInUrl,\n        \"aria-label\": resources.signInLinkAriaText,\n        onClick: onTelemetryClick(this.telemetryContent, payLoad, 'Sign in')\n      }, attributes), /*#__PURE__*/React.createElement(\"span\", {\n        className: 'ms-header__signin-button-text',\n        \"aria-hidden\": true\n      }, resources.signInLinkText));\n    }\n  }, {\n    key: \"_getSignOutButton\",\n    value: function _getSignOutButton(customer, user, resources) {\n      var payLoad = getPayloadObject('click', this.telemetryContent, TelemetryConstant.SignOut);\n      var attributes = getTelemetryAttributes(this.telemetryContent, payLoad);\n      return customer && this.displayName && /*#__PURE__*/React.createElement(Button, Object.assign({\n        className: 'ms-header__signout-button',\n        title: resources.signOutLinkText,\n        href: user && user.signOutUrl || '',\n        \"aria-label\": resources.signOutLinkAriaText,\n        onClick: onTelemetryClick(this.telemetryContent, payLoad, 'Sign out')\n      }, attributes), /*#__PURE__*/React.createElement(\"span\", {\n        className: 'ms-header__signout-button-text',\n        \"aria-hidden\": true\n      }, resources.signOutLinkText));\n    }\n  }, {\n    key: \"_getAccountInfoDropdownButton\",\n    value: function _getAccountInfoDropdownButton(customer) {\n      var payLoad = getPayloadObject('click', this.telemetryContent, TelemetryConstant.MyProfile);\n      var attributes = getTelemetryAttributes(this.telemetryContent, payLoad);\n      return customer && this.displayName && /*#__PURE__*/React.createElement(Button, Object.assign({\n        innerRef: this.popOverRef,\n        className: 'ms-header__profile-button',\n        \"aria-describedby\": 'myprofilePopover',\n        onClick: this._togglePopover,\n        color: 'link',\n        \"aria-expanded\": this.state.signinPopoverOpen\n      }, attributes), /*#__PURE__*/React.createElement(\"span\", {\n        className: 'ms-profile-button-text'\n      }, this.displayName));\n    }\n  }, {\n    key: \"_getAccountLinks\",\n    value: function _getAccountLinks(customer) {\n      var _this2 = this;\n\n      var myAccountLinks = this.props.config.myAccountLinks;\n      var payLoad = getPayloadObject('click', this.telemetryContent, '');\n\n      if (!customer || !this.displayName || !myAccountLinks || !myAccountLinks.length) {\n        return undefined;\n      }\n\n      return myAccountLinks.map(function (cta, index) {\n        payLoad.contentAction.etext = cta.linkText;\n        var attributes = getTelemetryAttributes(_this2.telemetryContent, payLoad);\n        var editableLink = {\n          ariaLabel: cta.ariaLabel,\n          className: 'ms-signin-info__account-link-button',\n          linkText: cta.linkText,\n          linkUrl: cta.linkUrl.destinationUrl,\n          openInNewTab: cta.openInNewTab,\n          role: 'button',\n          additionalProperties: attributes\n        };\n        return /*#__PURE__*/React.createElement(MsDyn365.Link, {\n          key: index,\n          link: editableLink,\n          editProps: {\n            onTextChange: _this2.handleLinkTextChange(index),\n            requestContext: _this2.props.context.request\n          }\n        });\n      });\n    }\n  }, {\n    key: \"_toggleNavbar\",\n    value: function _toggleNavbar() {\n      this.setState({\n        mobileMenuCollapsed: !this.state.mobileMenuCollapsed\n      });\n    }\n  }, {\n    key: \"_togglePopover\",\n    value: function _togglePopover() {\n      this.setState({\n        signinPopoverOpen: !this.state.signinPopoverOpen\n      });\n    }\n  }, {\n    key: \"_keydown\",\n    value: function _keydown(e) {\n      if (e.keyCode === KeyCodes.Escape) {\n        this.setState({\n          mobileMenuCollapsed: true\n        });\n      }\n    }\n  }, {\n    key: \"displayName\",\n    get: function get() {\n      var _this$props$data$acco;\n\n      var customer = (_this$props$data$acco = this.props.data.accountInformation) === null || _this$props$data$acco === void 0 ? void 0 : _this$props$data$acco.result;\n      return customer ? customer.FirstName || customer.Name : undefined;\n    }\n  }]);\n\n  return Header;\n}(React.PureComponent);\n\n__decorate([computed], Header.prototype, \"displayName\", null);\n\nexport default Header;","map":{"version":3,"sources":["/Users/User/Documents/wkea-ec/Msdyn365.Commerce.Online/node_modules/source-map-loader/index.js!/Users/User/Documents/wkea-ec/Msdyn365.Commerce.Online/src/modules/header/header.tsx"],"names":[],"mappings":"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","sourcesContent":["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nimport {\n    Button, getPayloadObject, getTelemetryAttributes, getTelemetryObject, IModuleProps, INodeProps, ITelemetryContent, KeyCodes, Modal,\n    ModalBody, ModalHeader, onTelemetryClick, Popover, TelemetryConstant\n} from '@msdyn365-commerce-modules/utilities';\nimport { CartIconComponent, WishListIconComponent } from '@msdyn365-commerce/components';\nimport * as MsDyn365 from '@msdyn365-commerce/core';\nimport { Customer } from '@msdyn365-commerce/retail-proxy';\nimport classnames from 'classnames';\nimport { computed } from 'mobx';\nimport * as React from 'react';\nimport { Logo, NavIcon } from './components';\nimport { IHeaderData } from './header.data';\nimport { IHeaderProps, IHeaderResources, IMyAccountLinksData } from './header.props.autogenerated';\n\nexport interface IHeaderState {\n    mobileMenuCollapsed: boolean;\n    signinPopoverOpen: boolean;\n}\n\nexport interface IHeaderViewProps extends IHeaderProps<IHeaderData>, IHeaderState {\n    logo: React.ReactNode;\n    wishListIconDesktop: React.ReactNode;\n    wishListIconMobile: React.ReactNode;\n    cartIcon: React.ReactNode;\n    navIcon: React.ReactNode;\n    className: string;\n    menuBar: React.ReactNode[];\n    search: React.ReactNode[];\n    siteOptions: React.ReactNode[];\n    HeaderTag: IModuleProps;\n    HeaderContainer: INodeProps;\n    MobileMenuContainer: INodeProps;\n    MobileMenuHeader: React.ReactNode;\n    MobileMenuBodyContainer: INodeProps;\n    MobileMenuLinksContainer: INodeProps;\n    HeaderTopBarContainer: INodeProps;\n    Divider: INodeProps;\n\n    AccountInfoDropdownParentContainer?: INodeProps;\n    AccountInfoDropdownPopoverConentContainer?: INodeProps;\n    accountInfoDropdownButton?: React.ReactNode;\n\n    signOutLink?: React.ReactNode;\n    signInLink?: React.ReactNode;\n    accountLinks?: React.ReactNode[];\n}\n\n/**\n *\n * Header component\n * @extends {React.PureComponent<IHeaderProps<IHeaderData>>}\n */\nclass Header extends React.PureComponent<IHeaderProps<IHeaderData>, IHeaderState> {\n    private popOverRef: React.RefObject<HTMLButtonElement>;\n    private telemetryContent: ITelemetryContent;\n    @computed public get displayName(): Readonly<string | undefined> {\n        const customer = this.props.data.accountInformation?.result;\n        return customer ? customer.FirstName || customer.Name : undefined;\n    }\n\n    constructor(props: IHeaderProps<IHeaderData>) {\n        super(props);\n        this.popOverRef = React.createRef();\n        this._toggleNavbar = this._toggleNavbar.bind(this);\n        this._togglePopover = this._togglePopover.bind(this);\n        this._keydown = this._keydown.bind(this);\n        this.state = {\n            mobileMenuCollapsed: true,\n            signinPopoverOpen: false\n        };\n        this.telemetryContent = getTelemetryObject(this.props.context.request.telemetryPageName!, this.props.friendlyName, this.props.telemetry);\n    }\n\n    public componentDidMount(): void {\n        if (MsDyn365.msdyn365Commerce.isBrowser) {\n            window.addEventListener('keydown', this._keydown);\n        }\n    }\n\n    public componentWillUnmount(): void {\n        if (MsDyn365.msdyn365Commerce.isBrowser) {\n            window.removeEventListener('keydown', this._keydown, false);\n        }\n    }\n\n    // tslint:disable-next-line: max-func-body-length\n    public render(): JSX.Element | null {\n        const {\n            id,\n            typeName,\n            data: { accountInformation,\n                cart: { result: cart }\n            },\n            context: {\n                request: {\n                    user\n                }\n            },\n            context,\n            resources: {\n                cartLabel\n            }\n        } = this.props;\n        const { logoLink, logoImage } = this.props.config;\n        const headerClassName = classnames('ms-header', this.props.config.className);\n        const navbarKey = 'header-nav-mobile';\n        const customer = accountInformation && accountInformation.result;\n        const cartIconSlot = this._getSlot('cartIcon');\n        const menuBarSlot = this._getSlot('menuBar');\n        const searchSlot = this._getSlot('search');\n        const siteOptionsSlot = this._getSlot('siteOptions');\n        const viewProps: IHeaderViewProps = {\n            ...(this.props as IHeaderProps<IHeaderData>),\n            ...(this.state),\n            logo: <Logo {...{ link: logoLink, image: logoImage, className: 'ms-header__logo', gridSettings: this.props.context.request.gridSettings, requestContext: this.props.context.request, telemetryContent: this.telemetryContent }} />,\n            wishListIconDesktop: (\n                <WishListIconComponent\n                    className='ms-header__wishlist-desktop'\n                    showButtonTooltip={true}\n                    wishlistTooltipText={this.props.resources.wishlistTooltipText}\n                    context={context}\n                    id={id}\n                    typeName={typeName}\n                    telemetryContent={this.telemetryContent}\n                    data={{}}\n                />\n            ),\n            wishListIconMobile: (\n                <WishListIconComponent\n                    className='ms-header__wishlist-mobile'\n                    showButtonTooltip={true}\n                    wishlistTooltipText={this.props.resources.wishlistTooltipText}\n                    context={context}\n                    id={id}\n                    typeName={typeName}\n                    telemetryContent={this.telemetryContent}\n                    data={{}}\n                />\n            ),\n            cartIcon: (cartIconSlot && cartIconSlot.length > 0)\n                ? cartIconSlot[0]\n                : cart && <CartIconComponent cartLabel={cartLabel} context={context} id={id} typeName={typeName} telemetryContent={this.telemetryContent} data={{ cart: cart }} />,\n            navIcon: <NavIcon {...{ resources: this.props.resources, isExpanded: !this.state.mobileMenuCollapsed, targetId: navbarKey, toggleNavBar: this._toggleNavbar, telemetryContent: this.telemetryContent }} />,\n            menuBar: menuBarSlot && menuBarSlot.length && menuBarSlot || [],\n            search: searchSlot && searchSlot.length && searchSlot || [],\n            siteOptions: siteOptionsSlot && siteOptionsSlot.length && siteOptionsSlot || [],\n            className: headerClassName,\n            HeaderTag: {\n                moduleProps: this.props,\n                className: classnames(headerClassName),\n                tag: 'header'\n            },\n            HeaderContainer: {\n                className: classnames('ms-header__container')\n            },\n            HeaderTopBarContainer: {\n                className: classnames('ms-header__topbar')\n            },\n            Divider: {\n                className: classnames('ms-header__divider')\n            },\n            MobileMenuContainer: {\n                tag: Modal,\n                id: navbarKey,\n                className: 'ms-header__mobile-hamburger',\n                isOpen: !this.state.mobileMenuCollapsed,\n                wrapClassName: 'ms-header__modal'\n            },\n            MobileMenuHeader: (\n                <ModalHeader\n                    className='ms-header__mobile-hamburger-menu-header'\n                    toggle={this._toggleNavbar}\n                />\n            ),\n            MobileMenuBodyContainer: {\n                tag: ModalBody,\n                className: 'ms-header__mobile-hamburger-menu-body',\n            },\n            MobileMenuLinksContainer: {\n                className: 'ms-header__mobile-hamburger-menu-links',\n            },\n            AccountInfoDropdownParentContainer: {\n                className: 'ms-header__account-info'\n            },\n            AccountInfoDropdownPopoverConentContainer: customer && this.displayName && {\n                tag: Popover,\n                id: 'myprofilePopover',\n                className: 'ms-header__account-info-content',\n                placement: 'bottom',\n                isOpen: this.state.signinPopoverOpen,\n                target: this.popOverRef,\n                toggle: this._togglePopover,\n            } || undefined,\n            signInLink: this._getSigninButton(customer, user, this.props.resources),\n            signOutLink: this._getSignOutButton(customer, user, this.props.resources),\n            accountInfoDropdownButton: this._getAccountInfoDropdownButton(customer),\n            accountLinks: this._getAccountLinks(customer)\n        };\n\n        return this.props.renderView(viewProps) as React.ReactElement;\n    }\n\n    /* Handle link text change*/\n    public handleLinkTextChange = (linkIndex: number) => (event: MsDyn365.ContentEditableEvent) => {\n        if (this.props.config.myAccountLinks && this.props.config.myAccountLinks[linkIndex]) {\n            this.props.config.myAccountLinks[linkIndex].linkText = event.target.value;\n        }\n    }\n\n    private _getSlot(slotName: string): React.ReactNode[] | null {\n        const { slots } = this.props;\n        return (slots && slots[slotName] && slots[slotName].length && slots[slotName]) || null;\n    }\n\n    private _getSigninButton(customer: Customer | undefined, user: MsDyn365.IRequestContextUser | undefined, resources: IHeaderResources): React.ReactNode | undefined {\n        const payLoad = getPayloadObject('click', this.telemetryContent, TelemetryConstant.SignIn);\n        const attributes = getTelemetryAttributes(this.telemetryContent, payLoad);\n        return !customer && (\n            <Button\n                className='ms-header__signin-button'\n                title={resources.signInLinkText}\n                href={user && user.signInUrl}\n                aria-label={resources.signInLinkAriaText}\n                onClick={onTelemetryClick(this.telemetryContent, payLoad, 'Sign in')}\n                {...attributes}\n            >\n                <span className='ms-header__signin-button-text' aria-hidden={true}>{resources.signInLinkText}</span>\n            </Button>\n        );\n    }\n\n    private _getSignOutButton(customer: Customer | undefined, user: MsDyn365.IRequestContextUser | undefined, resources: IHeaderResources): React.ReactNode | undefined {\n        const payLoad = getPayloadObject('click', this.telemetryContent, TelemetryConstant.SignOut);\n        const attributes = getTelemetryAttributes(this.telemetryContent, payLoad);\n        return customer && this.displayName && (\n            <Button\n                className={'ms-header__signout-button'}\n                title={resources.signOutLinkText}\n                href={user && user.signOutUrl || ''}\n                aria-label={resources.signOutLinkAriaText}\n                onClick={onTelemetryClick(this.telemetryContent, payLoad, 'Sign out')}\n                {...attributes}\n            >\n                <span className='ms-header__signout-button-text' aria-hidden={true}>{resources.signOutLinkText}</span>\n            </Button>\n        );\n    }\n\n    private _getAccountInfoDropdownButton(customer: Customer | undefined): React.ReactNode | undefined {\n        const payLoad = getPayloadObject('click', this.telemetryContent, TelemetryConstant.MyProfile);\n        const attributes = getTelemetryAttributes(this.telemetryContent, payLoad);\n        return customer && this.displayName && (\n            <Button\n                innerRef={this.popOverRef}\n                className={'ms-header__profile-button'}\n                aria-describedby='myprofilePopover'\n                onClick={this._togglePopover}\n                color='link'\n                aria-expanded={this.state.signinPopoverOpen}\n                {...attributes}\n            >\n                <span className='ms-profile-button-text'>{this.displayName}</span>\n            </Button>\n        );\n    }\n\n    private _getAccountLinks(customer: Customer | undefined): React.ReactNode[] | undefined {\n        const { myAccountLinks } = this.props.config;\n        const payLoad = getPayloadObject('click', this.telemetryContent, '');\n        if(!customer || ! this.displayName || !myAccountLinks || !myAccountLinks.length) {\n            return undefined;\n        }\n        return myAccountLinks.map((cta: IMyAccountLinksData, index: number) => {\n            payLoad.contentAction.etext = cta.linkText;\n            const attributes = getTelemetryAttributes(this.telemetryContent, payLoad);\n            const editableLink: MsDyn365.ILinksData = {\n                ariaLabel: cta.ariaLabel,\n                className: 'ms-signin-info__account-link-button',\n                linkText: cta.linkText,\n                linkUrl: cta.linkUrl.destinationUrl,\n                openInNewTab: cta.openInNewTab,\n                role: 'button',\n                additionalProperties: attributes\n            };\n\n            return (\n                <MsDyn365.Link\n                    key={index}\n                    link={editableLink}\n                    editProps={{ onTextChange: this.handleLinkTextChange(index), requestContext: this.props.context.request }}\n                />\n            );\n        });\n    }\n\n    private _toggleNavbar(): void {\n        this.setState({\n            mobileMenuCollapsed: !this.state.mobileMenuCollapsed\n        });\n    }\n\n    private _togglePopover(): void {\n        this.setState({\n            signinPopoverOpen: !this.state.signinPopoverOpen\n        });\n    }\n\n    private _keydown(e: KeyboardEvent): void {\n        if (e.keyCode === KeyCodes.Escape) {\n            this.setState({ mobileMenuCollapsed: true });\n        }\n    }\n}\n\nexport default Header;"],"sourceRoot":""},"metadata":{},"sourceType":"module"}