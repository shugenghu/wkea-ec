{"ast":null,"code":"import\"core-js/modules/es.promise.js\";import\"core-js/modules/es.string.split.js\";import{createObservableDataAction}from'@msdyn365-commerce/core';import{copyAsync,readAsync}from'@msdyn365-commerce/retail-proxy/dist/DataActions/CartsDataActions.g';import{getCartState}from'./get-cart-state';/**\r\n * Input class for getCheckoutCart data action\r\n */export class GetCheckoutCartInput{constructor(apiSettings){this.getCacheKey=()=>\"CheckoutCart-chanId:\".concat(this.apiSettings.channelId,\"-catId:\").concat(this.apiSettings.catalogId);this.getCacheObjectType=()=>'CheckoutCart';this.dataCacheType=()=>'request';this.apiSettings=apiSettings;}}const createInput=inputData=>{return new GetCheckoutCartInput(inputData.requestContext.apiSettings);};/**\r\n * Data action to copy the cart for checkout actions\r\n */export async function getCheckoutCart(input,ctx){let savedCheckoutCartId=ctx.requestContext.cookies.getCheckoutCartCookie();const cartCookieParts=savedCheckoutCartId.split(':');let checkoutCartId=null;const isAuthenticated=ctx.requestContext.user.isAuthenticated;if(isAuthenticated&&cartCookieParts[0]===\"t\"/* Auth */||!isAuthenticated&&cartCookieParts[0]===\"p\"/* Anon */){checkoutCartId=cartCookieParts[1];}let checkoutCart;if(checkoutCartId){try{checkoutCart=await readAsync({callerContext:ctx,bypassCache:'none'},checkoutCartId);}catch(error){ctx.telemetry.error('Error getting checkout cart based on saved checkout card id');ctx.telemetry.exception(error);}}const cartState=await getCartState(ctx);if(cartState&&cartState.cart.Id!==undefined){if(checkoutCart&&checkoutCart.Version&&cartState.cart.Version&&checkoutCart.Version>cartState.cart.Version){return Promise.resolve(checkoutCart);}return copyAsync({callerContext:ctx},cartState.cart.Id,2).then(cart=>{ctx.requestContext.cookies.setCheckoutCartCookie(cart,isAuthenticated);return cart;}).catch(error=>{ctx.telemetry.error('Error copying cart');ctx.telemetry.exception(error);return undefined;});}return undefined;}export default createObservableDataAction({id:'@msdyn365-commerce/global-state/get-checkout-cart',action:getCheckoutCart,input:createInput});","map":{"version":3,"sources":["data-actions/get-checkout-cart.ts"],"names":[],"mappings":"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","sourcesContent":["import { CacheType, createObservableDataAction, IAction, IActionContext, IActionInput, ICommerceApiSettings, ICreateActionContext } from '@msdyn365-commerce/core';\nimport { Cart } from '@msdyn365-commerce/retail-proxy';\nimport { copyAsync, readAsync } from '@msdyn365-commerce/retail-proxy/dist/DataActions/CartsDataActions.g';\nimport { getCartState } from './get-cart-state';\n\n/**\n * Input class for getCheckoutCart data action\n */\nexport class GetCheckoutCartInput implements IActionInput {\n    private apiSettings: ICommerceApiSettings;\n\n    constructor(apiSettings: ICommerceApiSettings) {\n        this.apiSettings = apiSettings;\n    }\n\n    public getCacheKey = () => `CheckoutCart-chanId:${this.apiSettings.channelId}-catId:${this.apiSettings.catalogId}`;\n    public getCacheObjectType = () => 'CheckoutCart';\n    public dataCacheType = (): CacheType => 'request';\n}\n\nconst enum CartTokenPrefix {\n    Auth = 't',\n    Anon = 'p'\n}\n\nconst createInput = (inputData: ICreateActionContext) => {\n    return new GetCheckoutCartInput(inputData.requestContext.apiSettings);\n};\n\n/**\n * Data action to copy the cart for checkout actions\n */\nexport async function getCheckoutCart(input: GetCheckoutCartInput, ctx: IActionContext): Promise<Cart | undefined> {\n    let savedCheckoutCartId = ctx.requestContext.cookies.getCheckoutCartCookie();\n    const cartCookieParts: string[] = savedCheckoutCartId.split(':');\n    let checkoutCartId = null;\n    const isAuthenticated = ctx.requestContext.user.isAuthenticated;\n\n    if ((isAuthenticated && cartCookieParts[0] === CartTokenPrefix.Auth) || (!isAuthenticated && cartCookieParts[0] === CartTokenPrefix.Anon)) {\n        checkoutCartId = cartCookieParts[1];\n    }\n\n    let checkoutCart: Cart | undefined;\n\n    if (checkoutCartId) {\n        try {\n            checkoutCart = await readAsync({ callerContext: ctx, bypassCache: 'none' }, checkoutCartId);\n        } catch (error) {\n            ctx.telemetry.error('Error getting checkout cart based on saved checkout card id');\n            ctx.telemetry.exception(error);\n        }\n    }\n\n    const cartState = await getCartState(ctx);\n    if (cartState && cartState.cart.Id !== undefined) {\n        if (checkoutCart && checkoutCart.Version && cartState.cart.Version && checkoutCart.Version > cartState.cart.Version) {\n            return Promise.resolve(<Cart>checkoutCart);\n        }\n\n        return copyAsync({ callerContext: ctx }, cartState.cart.Id, 2)\n            .then(cart => {\n                ctx.requestContext.cookies.setCheckoutCartCookie(cart, isAuthenticated);\n                return cart;\n            })\n            .catch(error => {\n                ctx.telemetry.error('Error copying cart');\n                ctx.telemetry.exception(error);\n                return undefined;\n            });\n    }\n\n    return undefined;\n}\n\nexport default createObservableDataAction({\n    id: '@msdyn365-commerce/global-state/get-checkout-cart',\n    action: <IAction<Cart | undefined>>getCheckoutCart,\n    input: createInput\n});"],"sourceRoot":"./src/"},"metadata":{},"sourceType":"module"}