{"ast":null,"code":"import _regeneratorRuntime from\"@babel/runtime/regenerator\";import _asyncToGenerator from\"@babel/runtime/helpers/esm/asyncToGenerator\";import _classCallCheck from\"@babel/runtime/helpers/esm/classCallCheck\";import{createObservableDataAction}from'@msdyn365-commerce/core';import{deleteAsync}from'@msdyn365-commerce/retail-proxy/dist/DataActions/BusinessPartnerUsersDataActions.g';/**\r\n * Input class for DeleteOrganizationUser data action\r\n */export var DeleteOrganizationUserInput=function DeleteOrganizationUserInput(newUser){_classCallCheck(this,DeleteOrganizationUserInput);this.getCacheKey=function(){return\"DeleteOrganizationUser\";};this.getCacheObjectType=function(){return'DeleteOrganizationUser';};this.dataCacheType=function(){return'none';};this.user=newUser;};/**\r\n * Input class for DeleteOrganizationUser data action\r\n */export var createDeleteOrganizationUserInput=function createDeleteOrganizationUserInput(inputData,newUser){var requestContext=inputData.requestContext;// Check if the user is authenticated.\nif(!requestContext.user.isAuthenticated){throw new Error('User is not logged in.');}return new DeleteOrganizationUserInput(newUser);};/**\r\n * The DeleteOrganizationUser data action\r\n * Calls getCurrent() to get a businessPartnerId from the user requesting the action.\r\n * It then maps the newUsers' businessPartnerId to the same as the above user.\r\n * Calls the createBusinessPartner to then create a new entitiy in the database with the\r\n * information passed into through newUser\r\n */export function deleteOrganizationUser(_x,_x2){return _deleteOrganizationUser.apply(this,arguments);}/**\r\n * The DeleteOrganizationUser data action\r\n * Calls the read RetailServer API to get the BusinessPartnerId from the admin\r\n * account and Deletes that businessPartner to the recieved input (new User)/\r\n * We then send this new User through the RetailServer API so that the database\r\n * is updated.\r\n */function _deleteOrganizationUser(){_deleteOrganizationUser=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee(input,ctx){var user;return _regeneratorRuntime.wrap(function _callee$(_context){while(1){switch(_context.prev=_context.next){case 0:user=input.user;return _context.abrupt(\"return\",deleteAsync({callerContext:ctx},user)[\"catch\"](function(error){console.log(error);ctx.telemetry.debug('[Delete-organization-user] Unable to delete BusinessPartnerUser account');throw new Error('[Delete-organization-user] Unable to delete BusinessPartnerUser account');}));case 2:case\"end\":return _context.stop();}}},_callee);}));return _deleteOrganizationUser.apply(this,arguments);}export default createObservableDataAction({id:'@msdyn365-commerce-modules/retail-actions/delete-organization-user',action:deleteOrganizationUser,input:createDeleteOrganizationUserInput});","map":{"version":3,"sources":["../../src/delete-organization-user.ts"],"names":[],"mappings":"8MAAA,OAAoB,0BAApB,KAAmI,yBAAnI,CAEA,OAAS,WAAT,KAA4B,oFAA5B,CACA;;AAEG,GACH,UAAa,CAAA,2BAAb,CAGI,qCAAY,OAAZ,CAAwC,mDAIjC,KAAA,WAAA,CAAc,2CAAd,CACA,KAAA,kBAAA,CAAqB,iBAAM,wBAAN,EAArB,CACA,KAAA,aAAA,CAAgB,iBAAiB,MAAjB,EAAhB,CALH,KAAK,IAAL,CAAY,OAAZ,CACH,CALL,CAYA;;AAEG,GACH,MAAO,IAAM,CAAA,iCAAiC,CAAG,QAApC,CAAA,iCAAoC,CAAC,SAAD,CAAkD,OAAlD,CAAgG,IACrI,CAAA,cADqI,CAClH,SADkH,CACrI,cADqI,CAG7I;AACA,GAAI,CAAC,cAAc,CAAC,IAAf,CAAoB,eAAzB,CAA0C,CACtC,KAAM,IAAI,CAAA,KAAJ,CAAU,wBAAV,CAAN,CACH,CAED,MAAO,IAAI,CAAA,2BAAJ,CAAgC,OAAhC,CAAP,CACH,CATM,CAWP;;;;;;AAMG,GACH,eAAsB,CAAA,sBAAtB,+DAWA;;;;;;AAMG,G,mHAjBI,iBAAsC,KAAtC,CAA0E,GAA1E,2HACK,IADL,CACc,KADd,CACK,IADL,iCAGI,WAAW,CAAC,CAAE,aAAa,CAAE,GAAjB,CAAD,CAAwB,IAAxB,CAAX,UACI,SAAA,KAAK,CAAG,CACX,OAAO,CAAC,GAAR,CAAY,KAAZ,EACA,GAAG,CAAC,SAAJ,CAAc,KAAd,CAAoB,yEAApB,EACA,KAAM,IAAI,CAAA,KAAJ,CAAU,yEAAV,CAAN,CACH,CALE,CAHJ,wD,yDAkBP,cAAe,CAAA,0BAA0B,CAAsB,CAC3D,EAAE,CAAE,oEADuD,CAE3D,MAAM,CAAgC,sBAFqB,CAG3D,KAAK,CAAuD,iCAHD,CAAtB,CAAzC","sourcesContent":["import { CacheType, createObservableDataAction, IAction, IActionContext, IActionInput, IAny, ICreateActionContext, IGeneric } from '@msdyn365-commerce/core';\nimport { BusinessPartnerUser, NullResult } from '@msdyn365-commerce/retail-proxy';\nimport { deleteAsync } from '@msdyn365-commerce/retail-proxy/dist/DataActions/BusinessPartnerUsersDataActions.g';\n/**\n * Input class for DeleteOrganizationUser data action\n */\nexport class DeleteOrganizationUserInput implements IActionInput {\n    public user: BusinessPartnerUser;\n\n    constructor(newUser: BusinessPartnerUser) {\n        this.user = newUser;\n    }\n\n    public getCacheKey = () => `DeleteOrganizationUser`;\n    public getCacheObjectType = () => 'DeleteOrganizationUser';\n    public dataCacheType = (): CacheType => 'none';\n}\n\n/**\n * Input class for DeleteOrganizationUser data action\n */\nexport const createDeleteOrganizationUserInput = (inputData: ICreateActionContext<IGeneric<IAny>>, newUser: BusinessPartnerUser): IActionInput => {\n    const { requestContext } = inputData;\n\n    // Check if the user is authenticated.\n    if (!requestContext.user.isAuthenticated) {\n        throw new Error('User is not logged in.');\n    }\n\n    return new DeleteOrganizationUserInput(newUser);\n};\n\n/**\n * The DeleteOrganizationUser data action\n * Calls getCurrent() to get a businessPartnerId from the user requesting the action.\n * It then maps the newUsers' businessPartnerId to the same as the above user.\n * Calls the createBusinessPartner to then create a new entitiy in the database with the\n * information passed into through newUser\n */\nexport async function deleteOrganizationUser(input: DeleteOrganizationUserInput, ctx: IActionContext): Promise<NullResult> {\n    const { user } = input;\n\n    return deleteAsync({ callerContext: ctx}, user)\n        .catch(error => {\n            console.log(error);\n            ctx.telemetry.debug('[Delete-organization-user] Unable to delete BusinessPartnerUser account');\n            throw new Error('[Delete-organization-user] Unable to delete BusinessPartnerUser account');\n        });\n}\n\n/**\n * The DeleteOrganizationUser data action\n * Calls the read RetailServer API to get the BusinessPartnerId from the admin\n * account and Deletes that businessPartner to the recieved input (new User)/\n * We then send this new User through the RetailServer API so that the database\n * is updated.\n */\nexport default createObservableDataAction<BusinessPartnerUser>({\n    id: '@msdyn365-commerce-modules/retail-actions/delete-organization-user',\n    action: <IAction<BusinessPartnerUser>>deleteOrganizationUser,\n    input: <(args: ICreateActionContext) => IActionInput>(<IAny>createDeleteOrganizationUserInput),\n});"],"sourceRoot":""},"metadata":{},"sourceType":"module"}