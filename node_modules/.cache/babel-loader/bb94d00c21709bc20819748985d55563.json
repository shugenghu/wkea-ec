{"ast":null,"code":"import\"core-js/modules/es.string.replace.js\";import*as React from'react';import{isNonceEnabled,SDK_FRAGMENT_NAME}from'@msdyn365-commerce/core-internal';class DefaultMetaTags extends React.PureComponent{render(){const{data,config}=this.props;const nonceToken=this.props.context&&isNonceEnabled(this.props.context.request);let metaTagsHtml='';let metaTags;if(config.metaTags){metaTags=nonceToken?this._addNonceToInlineScript(config.metaTags,nonceToken):config.metaTags;metaTagsHtml=metaTags&&metaTags.join('\\n');}else if(data.metaTags){metaTags=data.metaTags;let metaTagsText=metaTags.map(simpleText=>simpleText.text);metaTagsText=nonceToken?this._addNonceToInlineScript(metaTagsText,nonceToken):metaTagsText;metaTagsHtml=metaTagsText&&metaTagsText.join('\\n');}return/*#__PURE__*/React.createElement(SDK_FRAGMENT_NAME,{key:this.props.id,dangerouslySetInnerHTML:{__html:metaTagsHtml}});}_addNonceToInlineScript(metaTags,nonceToken){const inlineScripRegex=/<script((?:(?!src=).)*?)>(.*?)<\\/script>/g;return metaTags.map(metaTag=>{if(inlineScripRegex.test(metaTag)){return metaTag.replace(/<script/g,\"<script nonce=\".concat(nonceToken));}return metaTag;}).filter(Boolean);}}export default DefaultMetaTags;","map":{"version":3,"sources":["modules/default-metatags/default-metatags.tsx"],"names":[],"mappings":"6CAKA,MAAO,GAAK,CAAA,KAAZ,KAAuB,OAAvB,CAEA,OAAS,cAAT,CAAyB,iBAAzB,KAAkD,kCAAlD,CASA,KAAM,CAAA,eAAN,QAA8B,CAAA,KAAK,CAAC,aAA0D,CACnF,MAAM,EAAA,CACT,KAAM,CAAE,IAAF,CAAQ,MAAR,EAAmB,KAAK,KAA9B,CACA,KAAM,CAAA,UAAU,CAAG,KAAK,KAAL,CAAW,OAAX,EAAsB,cAAc,CAAC,KAAK,KAAL,CAAW,OAAX,CAAmB,OAApB,CAAvD,CACA,GAAI,CAAA,YAAY,CAAW,EAA3B,CACA,GAAI,CAAA,QAAJ,CACA,GAAI,MAAM,CAAC,QAAX,CAAqB,CACjB,QAAQ,CAAG,UAAU,CAAG,KAAK,uBAAL,CAA6B,MAAM,CAAC,QAApC,CAA8C,UAA9C,CAAH,CAA+D,MAAM,CAAC,QAA3F,CACA,YAAY,CAAG,QAAQ,EAAI,QAAQ,CAAC,IAAT,CAAc,IAAd,CAA3B,CACH,CAHD,IAGO,IAAI,IAAI,CAAC,QAAT,CAAmB,CACtB,QAAQ,CAAG,IAAI,CAAC,QAAhB,CACA,GAAI,CAAA,YAAY,CAAG,QAAQ,CAAC,GAAT,CAAa,UAAU,EAAI,UAAU,CAAC,IAAtC,CAAnB,CACA,YAAY,CAAG,UAAU,CAAG,KAAK,uBAAL,CAA6B,YAA7B,CAA2C,UAA3C,CAAH,CAA4D,YAArF,CACA,YAAY,CAAG,YAAY,EAAI,YAAY,CAAC,IAAb,CAAkB,IAAlB,CAA/B,CACH,CAED,mBAAO,KAAK,CAAC,aAAN,CAAoB,iBAApB,CAAuC,CAAE,GAAG,CAAE,KAAK,KAAL,CAAW,EAAlB,CAAsB,uBAAuB,CAAE,CAAE,MAAM,CAAE,YAAV,CAA/C,CAAvC,CAAP,CACH,CAEO,uBAAuB,CAAC,QAAD,CAAqB,UAArB,CAAuC,CAClE,KAAM,CAAA,gBAAgB,CAAG,2CAAzB,CACA,MAAO,CAAA,QAAQ,CACV,GADE,CACE,OAAO,EAAG,CACX,GAAI,gBAAgB,CAAC,IAAjB,CAAsB,OAAtB,CAAJ,CAAoC,CAChC,MAAO,CAAA,OAAO,CAAC,OAAR,CAAgB,UAAhB,yBAA6C,UAA7C,EAAP,CACH,CACD,MAAO,CAAA,OAAP,CACH,CANE,EAOF,MAPE,CAOK,OAPL,CAAP,CAQH,CA7ByF,CAgC9F,cAAe,CAAA,eAAf","sourcesContent":["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport * as React from 'react';\n\nimport { isNonceEnabled, SDK_FRAGMENT_NAME } from '@msdyn365-commerce/core-internal';\nimport { IDefaultMetatagsData } from './default-metatags.data';\nimport { IDefaultMetatagsProps } from './default-metatags.props.autogenerated';\n\n/**\n *\n * DefaultPageSummaryMetadata component\n * @extends {React.PureComponent<DefaultPageSummaryProps<{}>>}\n */\nclass DefaultMetaTags extends React.PureComponent<IDefaultMetatagsProps<IDefaultMetatagsData>> {\n    public render(): JSX.Element {\n        const { data, config } = this.props;\n        const nonceToken = this.props.context && isNonceEnabled(this.props.context.request);\n        let metaTagsHtml: string = '';\n        let metaTags;\n        if (config.metaTags) {\n            metaTags = nonceToken ? this._addNonceToInlineScript(config.metaTags, nonceToken) : config.metaTags;\n            metaTagsHtml = metaTags && metaTags.join('\\n');\n        } else if (data.metaTags) {\n            metaTags = data.metaTags;\n            let metaTagsText = metaTags.map(simpleText => simpleText.text);\n            metaTagsText = nonceToken ? this._addNonceToInlineScript(metaTagsText, nonceToken) : metaTagsText;\n            metaTagsHtml = metaTagsText && metaTagsText.join('\\n');\n        }\n        // tslint:disable-next-line:react-no-dangerous-html\n        return React.createElement(SDK_FRAGMENT_NAME, { key: this.props.id, dangerouslySetInnerHTML: { __html: metaTagsHtml } });\n    }\n\n    private _addNonceToInlineScript(metaTags: string[], nonceToken: string): string[] {\n        const inlineScripRegex = /<script((?:(?!src=).)*?)>(.*?)<\\/script>/g;\n        return metaTags\n            .map(metaTag => {\n                if (inlineScripRegex.test(metaTag)) {\n                    return metaTag.replace(/<script/g, `<script nonce=${nonceToken}`);\n                }\n                return metaTag;\n            })\n            .filter(Boolean);\n    }\n}\n\nexport default DefaultMetaTags;\n"],"sourceRoot":"./src/"},"metadata":{},"sourceType":"module"}