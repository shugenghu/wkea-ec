{"ast":null,"code":"import{DataServiceQuery}from'../DataServiceQuery';import{BusinessPartnerUserClass}from'../Entities/CommerceModels.g';import{executeAction}from'../retail-action';function businessPartnerUsersQuery(email){var key=email?{Email:email}:null;return new DataServiceQuery(\"BusinessPartnerUsers\",\"BusinessPartnerUser\",BusinessPartnerUserClass,key);}export function createCreateInput(entity){return businessPartnerUsersQuery().create(entity);}export function createBusinessPartnerUserAsync(context,entity){var request=createCreateInput(entity);return executeAction(request,context);}export function createUpdateInput(entity){return businessPartnerUsersQuery(entity.Email).update(entity);}export function updateAsync(context,entity){var request=createUpdateInput(entity);return executeAction(request,context);}export function createDeleteAsync(entity){return businessPartnerUsersQuery(entity.Email)[\"delete\"]();}export function deleteAsync(context,entity){var request=createDeleteAsync(entity);return executeAction(request,context);}export function createReadAsync(email){return businessPartnerUsersQuery(email).read();}export function readAsync(context,email){var request=createReadAsync(email);return executeAction(request,context);}export function createReadAllAsync(queryResultSettings){return businessPartnerUsersQuery().resultSettings(queryResultSettings).read();}export function readAllAsync(context){var request=createReadAllAsync(context.queryResultSettings);return executeAction(request,context);}","map":{"version":3,"sources":["../../src/DataActions/BusinessPartnerUsersDataActions.g.ts"],"names":[],"mappings":"AAEI,OAAS,gBAAT,KAAiC,qBAAjC,CAEA,OAAS,wBAAT,KAAyC,8BAAzC,CAEA,OAAS,aAAT,KAA8B,kBAA9B,CAGA,QAAS,CAAA,yBAAT,CAAmC,KAAnC,CAAiD,CAC/C,GAAI,CAAA,GAAG,CAAI,KAAD,CAAU,CAAE,KAAK,CAAE,KAAT,CAAV,CAA6B,IAAvC,CACA,MAAO,IAAI,CAAA,gBAAJ,CAAqB,sBAArB,CAA6C,qBAA7C,CAAoE,wBAApE,CAA8F,GAA9F,CAAP,CACD,CAED,MAAM,SAAU,CAAA,iBAAV,CAA4B,MAA5B,CAAuD,CACzD,MAAO,CAAA,yBAAyB,GAAG,MAA5B,CAAmC,MAAnC,CAAP,CACH,CACD,MAAM,SAAU,CAAA,8BAAV,CAAyC,OAAzC,CAA4D,MAA5D,CAAuF,CACzF,GAAM,CAAA,OAAO,CAAG,iBAAiB,CAAC,MAAD,CAAjC,CACA,MAAO,CAAA,aAAa,CAAsB,OAAtB,CAA+B,OAA/B,CAApB,CACH,CACD,MAAM,SAAU,CAAA,iBAAV,CAA4B,MAA5B,CAAuD,CACzD,MAAO,CAAA,yBAAyB,CAAC,MAAM,CAAC,KAAR,CAAzB,CAAwC,MAAxC,CAA+C,MAA/C,CAAP,CACH,CACD,MAAM,SAAU,CAAA,WAAV,CAAsB,OAAtB,CAAyC,MAAzC,CAAoE,CACtE,GAAM,CAAA,OAAO,CAAG,iBAAiB,CAAC,MAAD,CAAjC,CACA,MAAO,CAAA,aAAa,CAAsB,OAAtB,CAA+B,OAA/B,CAApB,CACH,CACD,MAAM,SAAU,CAAA,iBAAV,CAA4B,MAA5B,CAAuD,CACzD,MAAO,CAAA,yBAAyB,CAAC,MAAM,CAAC,KAAR,CAAzB,YAAP,CACH,CACD,MAAM,SAAU,CAAA,WAAV,CAAsB,OAAtB,CAAyC,MAAzC,CAAoE,CACtE,GAAM,CAAA,OAAO,CAAG,iBAAiB,CAAC,MAAD,CAAjC,CACA,MAAO,CAAA,aAAa,CAAa,OAAb,CAAsB,OAAtB,CAApB,CACH,CACD,MAAM,SAAU,CAAA,eAAV,CAA0B,KAA1B,CAAuC,CACzC,MAAO,CAAA,yBAAyB,CAAC,KAAD,CAAzB,CAAiC,IAAjC,EAAP,CACH,CACD,MAAM,SAAU,CAAA,SAAV,CAAoB,OAApB,CAAuC,KAAvC,CAAoD,CACtD,GAAM,CAAA,OAAO,CAAG,eAAe,CAAC,KAAD,CAA/B,CACA,MAAO,CAAA,aAAa,CAAsB,OAAtB,CAA+B,OAA/B,CAApB,CACH,CACD,MAAM,SAAU,CAAA,kBAAV,CAA6B,mBAA7B,CAAsE,CACxE,MAAO,CAAA,yBAAyB,GAAG,cAA5B,CAA2C,mBAA3C,EAAgE,IAAhE,EAAP,CACH,CACD,MAAM,SAAU,CAAA,YAAV,CAAuB,OAAvB,CAAwC,CAC1C,GAAM,CAAA,OAAO,CAAG,kBAAkB,CAAC,OAAO,CAAC,mBAAT,CAAlC,CACA,MAAO,CAAA,aAAa,CAAwB,OAAxB,CAAiC,OAAjC,CAApB,CACH","sourcesContent":["    // <auto-generated />\n    import { AsyncResult } from '../async-result';\n    import { DataServiceQuery } from '../DataServiceQuery';\n    import { BusinessPartnerUser } from '../Entities/CommerceTypes.g';\n    import { BusinessPartnerUserClass } from '../Entities/CommerceModels.g';\n    import { IContext, IDataServiceRequest, IQueryResultSettings, NullResult } from '../Interfaces';\n    import { executeAction } from '../retail-action';\n    \n    \n    function businessPartnerUsersQuery(email?: string): DataServiceQuery {\n      var key = (email) ? { Email: email } : null;\n      return new DataServiceQuery(\"BusinessPartnerUsers\", \"BusinessPartnerUser\", BusinessPartnerUserClass, key);\n    }\n    \n    export function createCreateInput(entity: BusinessPartnerUser): IDataServiceRequest {\n        return businessPartnerUsersQuery().create(entity);\n    }\n    export function createBusinessPartnerUserAsync(context: IContext, entity: BusinessPartnerUser): AsyncResult<BusinessPartnerUser> {\n        const request = createCreateInput(entity, );\n        return executeAction<BusinessPartnerUser>(request, context);\n    }\n    export function createUpdateInput(entity: BusinessPartnerUser): IDataServiceRequest {\n        return businessPartnerUsersQuery(entity.Email).update(entity);\n    }\n    export function updateAsync(context: IContext, entity: BusinessPartnerUser): AsyncResult<BusinessPartnerUser> {\n        const request = createUpdateInput(entity, );\n        return executeAction<BusinessPartnerUser>(request, context);\n    }\n    export function createDeleteAsync(entity: BusinessPartnerUser): IDataServiceRequest {\n        return businessPartnerUsersQuery(entity.Email).delete();\n    }\n    export function deleteAsync(context: IContext, entity: BusinessPartnerUser): AsyncResult<NullResult> {\n        const request = createDeleteAsync(entity, );\n        return executeAction<NullResult>(request, context);\n    }\n    export function createReadAsync(email: string): IDataServiceRequest {\n        return businessPartnerUsersQuery(email).read();\n    }\n    export function readAsync(context: IContext, email: string): AsyncResult<BusinessPartnerUser> {\n        const request = createReadAsync(email, );\n        return executeAction<BusinessPartnerUser>(request, context);\n    }\n    export function createReadAllAsync(queryResultSettings: IQueryResultSettings): IDataServiceRequest {\n        return businessPartnerUsersQuery().resultSettings(queryResultSettings).read();\n    }\n    export function readAllAsync(context: IContext): AsyncResult<BusinessPartnerUser[]> {\n        const request = createReadAllAsync(context.queryResultSettings, );\n        return executeAction<BusinessPartnerUser[]>(request, context);\n    }\n    \n    "],"sourceRoot":""},"metadata":{},"sourceType":"module"}