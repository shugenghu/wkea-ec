{"ast":null,"code":"import\"core-js/modules/es.promise.js\";import{getSimpleProducts,ProductInput}from'@msdyn365-commerce-modules/retail-actions';import{createObservableDataAction}from'@msdyn365-commerce/core';import{getCheckoutState}from'@msdyn365-commerce/global-state';export class ActiveCheckoutCartProductsInput{constructor(){this.getCacheKey=()=>'ActiveCheckoutCartProducts';this.getCacheObjectType=()=>'ActiveCheckoutCartProducts';this.dataCacheType=()=>'none';}}export const createInput=()=>{return new ActiveCheckoutCartProductsInput();};export async function getActiveCheckoutCartProductsAction(input,ctx){if(!input){ctx.telemetry.exception(new Error('[getActiveCheckoutCartWithProducts]No valid Input was provided, failing'));throw new Error('[getActiveCheckoutCartWithProducts]No valid Input was provided, failing');}const checkoutState=await getCheckoutState(ctx);const cart=checkoutState.checkoutCart.cart;if(cart&&cart.CartLines&&cart.CartLines.length){return getSimpleProducts(cart.CartLines.map(cartLine=>{if(cartLine.ProductId){return new ProductInput(cartLine.ProductId,ctx.requestContext.apiSettings);}return undefined;}).filter(Boolean),ctx).then(products=>{if(products){return products;}else{return[];}}).catch(error=>{ctx.telemetry.exception(error);throw new Error('[getActiveCheckoutCartWithProdcuts]Unable to hydrate cart with product information');});}return[];}export default createObservableDataAction({id:'@msdyn365-commerce-modules/checkout/get-products-in-active-checkout-cart',action:getActiveCheckoutCartProductsAction,input:createInput});","map":{"version":3,"sources":["modules/checkout/actions/get-products-in-active-checkout-cart.ts"],"names":[],"mappings":"sCAAA,OAAS,iBAAT,CAA4B,YAA5B,KAAgD,2CAAhD,CACA,OAAoB,0BAApB,KAA6F,yBAA7F,CACA,OAAS,gBAAT,KAAiC,iCAAjC,CAMA,MAAM,MAAO,CAAA,+BAA+B,CAA5C,WAAA,EAAA,CACW,KAAA,WAAA,CAAc,IAAM,4BAApB,CACA,KAAA,kBAAA,CAAqB,IAAM,4BAA3B,CACA,KAAA,aAAA,CAAgB,IAAiB,MAAjC,CACV,CAJ2C,CAM5C,MAAO,MAAM,CAAA,WAAW,CAAG,IAAK,CAC5B,MAAO,IAAI,CAAA,+BAAJ,EAAP,CACH,CAFM,CAOP,MAAO,eAAe,CAAA,mCAAf,CAAmD,KAAnD,CAA2F,GAA3F,CAA8G,CAEjH,GAAI,CAAC,KAAL,CAAY,CACR,GAAG,CAAC,SAAJ,CAAc,SAAd,CAAwB,GAAI,CAAA,KAAJ,CAAU,yEAAV,CAAxB,EACA,KAAM,IAAI,CAAA,KAAJ,CAAU,yEAAV,CAAN,CACH,CAED,KAAM,CAAA,aAAa,CAAG,KAAM,CAAA,gBAAgB,CAAC,GAAD,CAA5C,CACA,KAAM,CAAA,IAAI,CAAG,aAAa,CAAC,YAAd,CAA2B,IAAxC,CAGA,GAAI,IAAI,EAAI,IAAI,CAAC,SAAb,EAA0B,IAAI,CAAC,SAAL,CAAe,MAA7C,CAAqD,CACjD,MAAO,CAAA,iBAAiB,CACJ,IAAI,CAAC,SAAL,CAAe,GAAf,CAAmB,QAAQ,EAAG,CAC1C,GAAI,QAAQ,CAAC,SAAb,CAAwB,CACpB,MAAO,IAAI,CAAA,YAAJ,CAAiB,QAAQ,CAAC,SAA1B,CAAqC,GAAG,CAAC,cAAJ,CAAmB,WAAxD,CAAP,CACH,CACD,MAAO,CAAA,SAAP,CACH,CALe,EAKb,MALa,CAKN,OALM,CADI,CAOpB,GAPoB,CAAjB,CASF,IATE,CASG,QAAQ,EAAG,CACb,GAAI,QAAJ,CAAc,CACV,MAAO,CAAA,QAAP,CACH,CAFD,IAEO,CACH,MAAO,EAAP,CACH,CACJ,CAfE,EAgBF,KAhBE,CAgBI,KAAK,EAAG,CACX,GAAG,CAAC,SAAJ,CAAc,SAAd,CAAwB,KAAxB,EACA,KAAM,IAAI,CAAA,KAAJ,CAAU,oFAAV,CAAN,CACH,CAnBE,CAAP,CAoBH,CAED,MAAwB,EAAxB,CACH,CAED,cAAe,CAAA,0BAA0B,CAAC,CACtC,EAAE,CAAE,0EADkC,CAEtC,MAAM,CAA4B,mCAFI,CAGtC,KAAK,CAAE,WAH+B,CAAD,CAAzC","sourcesContent":["import { getSimpleProducts, ProductInput } from '@msdyn365-commerce-modules/retail-actions';\nimport { CacheType, createObservableDataAction, IAction, IActionContext, IActionInput } from '@msdyn365-commerce/core';\nimport { getCheckoutState } from '@msdyn365-commerce/global-state';\nimport { SimpleProduct } from '@msdyn365-commerce/retail-proxy/dist/Entities/CommerceTypes.g';\n\n/**\n * Input class for ActiveCheckoutCartWithProducts data action\n */\nexport class ActiveCheckoutCartProductsInput implements IActionInput {\n    public getCacheKey = () => 'ActiveCheckoutCartProducts';\n    public getCacheObjectType = () => 'ActiveCheckoutCartProducts';\n    public dataCacheType = (): CacheType => 'none';\n}\n\nexport const createInput = () => {\n    return new ActiveCheckoutCartProductsInput();\n};\n\n/**\n * Calls the Retail API and returns a cart object based on the passed GetCartInput\n */\nexport async function getActiveCheckoutCartProductsAction(input: ActiveCheckoutCartProductsInput, ctx: IActionContext): Promise<SimpleProduct[]> {\n    // If no cart ID is provided in input, we need to create a cart object\n    if (!input) {\n        ctx.telemetry.exception(new Error('[getActiveCheckoutCartWithProducts]No valid Input was provided, failing'));\n        throw new Error('[getActiveCheckoutCartWithProducts]No valid Input was provided, failing');\n    }\n\n    const checkoutState = await getCheckoutState(ctx);\n    const cart = checkoutState.checkoutCart.cart;\n\n    // If there are cart lines, make call to get products\n    if (cart && cart.CartLines && cart.CartLines.length) {\n        return getSimpleProducts(\n            <ProductInput[]>cart.CartLines.map(cartLine => {\n                if (cartLine.ProductId) {\n                    return new ProductInput(cartLine.ProductId, ctx.requestContext.apiSettings);\n                }\n                return undefined;\n            }).filter(Boolean),\n            ctx\n        )\n            .then(products => {\n                if (products) {\n                    return products;\n                } else {\n                    return [];\n                }\n            })\n            .catch(error => {\n                ctx.telemetry.exception(error);\n                throw new Error('[getActiveCheckoutCartWithProdcuts]Unable to hydrate cart with product information');\n            });\n    }\n\n    return <SimpleProduct[]>[];\n}\n\nexport default createObservableDataAction({\n    id: '@msdyn365-commerce-modules/checkout/get-products-in-active-checkout-cart',\n    action: <IAction<SimpleProduct[]>>getActiveCheckoutCartProductsAction,\n    input: createInput\n});\n"],"sourceRoot":"./src/"},"metadata":{},"sourceType":"module"}