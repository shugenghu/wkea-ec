{"ast":null,"code":"import*as React from'react';const GetMaxLength=maxLength=>{if(maxLength){const parsedMaxLength=parseInt(maxLength,10);if(!isNaN(parsedMaxLength)){return parsedMaxLength;}}return undefined;};const PasswordResetVerificationInput=(_ref)=>{let{id,type,value,pattern,className,maxLength,onChange}=_ref;return/*#__PURE__*/React.createElement(\"input\",{id:id,type:type,value:value,className:\"\".concat(className,\"-input \").concat(className,\"-\").concat(id),pattern:pattern!==''?pattern:undefined,\"aria-required\":'true',maxLength:GetMaxLength(maxLength),onChange:onChange});};export default PasswordResetVerificationInput;","map":{"version":3,"sources":["modules/password-reset-verification/components/password-reset-verification-input.tsx"],"names":[],"mappings":"AAIA,MAAO,GAAK,CAAA,KAAZ,KAAuB,OAAvB,CAuBA,KAAM,CAAA,YAAY,CAAI,SAAD,EAA2C,CAC5D,GAAI,SAAJ,CAAe,CACX,KAAM,CAAA,eAAe,CAAG,QAAQ,CAAC,SAAD,CAAY,EAAZ,CAAhC,CACA,GAAI,CAAC,KAAK,CAAC,eAAD,CAAV,CAA6B,CACzB,MAAO,CAAA,eAAP,CACH,CACJ,CAED,MAAO,CAAA,SAAP,CACH,CATD,CAWA,KAAM,CAAA,8BAA8B,CAAmD,YAAC,CACpF,EADoF,CAEpF,IAFoF,CAGpF,KAHoF,CAIpF,OAJoF,CAKpF,SALoF,CAMpF,SANoF,CAOpF,QAPoF,CAAD,yBAQ/E,KAAA,CAAA,aAAA,CAAA,OAAA,CAAA,CACI,EAAE,CAAE,EADR,CAEI,IAAI,CAAE,IAFV,CAGI,KAAK,CAAE,KAHX,CAII,SAAS,WAAK,SAAL,mBAAwB,SAAxB,aAAqC,EAArC,CAJb,CAKI,OAAO,CAAE,OAAO,GAAK,EAAZ,CAAiB,OAAjB,CAA2B,SALxC,CAKiD,gBAC/B,MANlB,CAOI,SAAS,CAAE,YAAY,CAAC,SAAD,CAP3B,CAQI,QAAQ,CAAE,QARd,CAAA,CAR+E,EAAvF,CAoBA,cAAe,CAAA,8BAAf","sourcesContent":["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nimport * as React from 'react';\n\nimport { INodeProps } from '@msdyn365-commerce-modules/utilities';\n\nexport interface IPasswordResetVerificationInputProps {\n    id?: string;\n    // tslint:disable-next-line:no-any\n    type: any;\n    value?: string;\n    pattern?: string;\n    className: string;\n    maxLength?: string;\n    onChange?(event: React.ChangeEvent<HTMLInputElement>): void;\n}\n\nexport interface IPasswordResetVerificationInput {\n    key: string;\n    AddressItem: INodeProps;\n    label: React.ReactNode;\n    alert: React.ReactNode;\n    input: React.ReactNode;\n}\n\nconst GetMaxLength = (maxLength?: string): number | undefined => {\n    if (maxLength) {\n        const parsedMaxLength = parseInt(maxLength, 10);\n        if (!isNaN(parsedMaxLength)) {\n            return parsedMaxLength;\n        }\n    }\n\n    return undefined;\n};\n\nconst PasswordResetVerificationInput: React.FC<IPasswordResetVerificationInputProps> = ({\n    id,\n    type,\n    value,\n    pattern,\n    className,\n    maxLength,\n    onChange }) => (\n        <input\n            id={id}\n            type={type}\n            value={value}\n            className={`${className}-input ${className}-${id}`}\n            pattern={pattern !== '' ? pattern : undefined}\n            aria-required='true'\n            maxLength={GetMaxLength(maxLength)}\n            onChange={onChange}\n        />\n    );\n\nexport default PasswordResetVerificationInput;\n"],"sourceRoot":"./src/"},"metadata":{},"sourceType":"module"}