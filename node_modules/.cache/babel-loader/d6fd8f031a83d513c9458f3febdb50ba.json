{"ast":null,"code":"import\"core-js/modules/es.object.assign.js\";import\"core-js/modules/es.promise.js\";import{format,getPayloadObject,getTelemetryAttributes,TelemetryConstant}from'@msdyn365-commerce-modules/utilities';import*as React from'react';export const ReviewCount=props=>{const{currentPage,resources,reviewsCount,reviewsShownOnEachPage}=props;return/*#__PURE__*/React.createElement(\"span\",{\"aria-live\":'polite',className:'sr-only'},format(resources.pageReviewCountText,_getReviewStartNumber(currentPage,reviewsShownOnEachPage),_getReviewEndNumber(currentPage,reviewsCount,reviewsShownOnEachPage),reviewsCount));};export const PageControls=props=>{const{currentPage,resources,reviewsCount,reviewsShownOnEachPage}=props;const previousPageClick=()=>{return _getPreviousPageData(props);};const nextPageClick=()=>{return _getNextPageData(props);};const payLoad=getPayloadObject('click',props.telemetryContent,TelemetryConstant.Next);const nextAttribute=getTelemetryAttributes(props.telemetryContent,payLoad);payLoad.contentAction.etext=TelemetryConstant.Previous;const previousAttribute=getTelemetryAttributes(props.telemetryContent,payLoad);return/*#__PURE__*/React.createElement(\"div\",{className:'ms-reviews-list__page-controls'},_hasPreviousPage(currentPage)&&/*#__PURE__*/React.createElement(\"button\",Object.assign({onClick:previousPageClick,className:'ms-reviews-list__previous',\"aria-label\":_paginationAriaLabel(resources.pageReviewAriaLabel,currentPage,reviewsCount,reviewsShownOnEachPage,false)},previousAttribute),resources.previousButtonText),_hasNextPage(currentPage,reviewsCount,reviewsShownOnEachPage)&&/*#__PURE__*/React.createElement(\"button\",Object.assign({onClick:nextPageClick,className:'ms-reviews-list__next',\"aria-label\":_paginationAriaLabel(resources.pageReviewAriaLabel,currentPage,reviewsCount,reviewsShownOnEachPage,true)},nextAttribute),resources.nextButtonText));};const _hasPreviousPage=currentPage=>{return currentPage>1;};const _hasNextPage=(currentPage,reviewsCount,reviewsShownOnEachPage)=>{return _getPagesCount(reviewsCount,reviewsShownOnEachPage)>currentPage;};const _getReviewsShown=reviewsShownOnEachPage=>{return Math.min(25,reviewsShownOnEachPage);};const _getPagesCount=(reviewsCount,reviewsShownOnEachPage)=>{return Math.ceil(reviewsCount/_getReviewsShown(reviewsShownOnEachPage));};const _paginationAriaLabel=(pageReviewAriaLabel,currentPage,reviewsCount,reviewsShownOnEachPage,isNextPage,page)=>{const pageModifier=isNextPage?1:-1;return format(pageReviewAriaLabel,_getReviewStartNumber(currentPage,reviewsShownOnEachPage,currentPage+pageModifier),_getReviewEndNumber(currentPage,reviewsCount,reviewsShownOnEachPage,currentPage+pageModifier),reviewsCount);};const _getReviewStartNumber=(currentPage,reviewsShownOnEachPage,page)=>{return((page||currentPage)-1)*_getReviewsShown(reviewsShownOnEachPage)+1;};const _getReviewEndNumber=(currentPage,reviewsCount,reviewsShownOnEachPage,page)=>{const pageUsed=page||currentPage;const pageReviewCount=pageUsed*_getReviewsShown(reviewsShownOnEachPage);return pageReviewCount<reviewsCount?pageReviewCount:reviewsCount;};const _getPreviousPageData=async props=>{await props.updateReviews(_getReviewStartNumber(props.currentPage,props.reviewsShownOnEachPage)-1-_getReviewsShown(props.reviewsShownOnEachPage),props.selectedSortByOption,props.selectedFilterByOption,props.currentPage-1,false);};const _getNextPageData=async props=>{await props.updateReviews(_getReviewEndNumber(props.currentPage,props.reviewsCount,props.reviewsShownOnEachPage),props.selectedSortByOption,props.selectedFilterByOption,props.currentPage+1,false);};","map":{"version":3,"sources":["modules/reviews-list/components/components.tsx"],"names":[],"mappings":"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","sourcesContent":["import { format, getPayloadObject, getTelemetryAttributes, ILabeledDropdownOption, ITelemetryContent, TelemetryConstant } from '@msdyn365-commerce-modules/utilities';\nimport * as React from 'react';\n\nexport interface IReviewCountResources {\n    pageReviewCountText: string;\n}\n\nexport interface IReviewCountProps {\n    resources: IReviewCountResources;\n    currentPage: number;\n    reviewsCount: number;\n    reviewsShownOnEachPage: number;\n}\n\nexport const ReviewCount: React.FC<IReviewCountProps> = (props: IReviewCountProps) => {\n    const {currentPage, resources, reviewsCount, reviewsShownOnEachPage} = props;\n\n    return (\n        <span aria-live='polite' className='sr-only'>\n            {format(\n                resources.pageReviewCountText,\n                _getReviewStartNumber(currentPage, reviewsShownOnEachPage),\n                _getReviewEndNumber(currentPage, reviewsCount, reviewsShownOnEachPage),\n                reviewsCount\n            )}\n        </span>\n    );\n};\n\nexport interface IPageControlResources {\n    previousButtonText: string;\n    nextButtonText: string;\n    pageReviewAriaLabel: string;\n}\n\nexport interface IPageControlsProps {\n    resources: IPageControlResources;\n    currentPage: number;\n    reviewsCount: number;\n    reviewsShownOnEachPage: number;\n    selectedSortByOption: ILabeledDropdownOption;\n    selectedFilterByOption: ILabeledDropdownOption;\n    telemetryContent?: ITelemetryContent;\n    updateReviews(skipItems: number, selectedSortByOption: ILabeledDropdownOption, selectedFilterByOption: ILabeledDropdownOption, currentPage: number, isFilterApplied: boolean): Promise<void>;\n}\n\nexport const PageControls: React.FC<IPageControlsProps> = (props: IPageControlsProps) => {\n    const {currentPage, resources, reviewsCount, reviewsShownOnEachPage} = props;\n    const previousPageClick = () => {return _getPreviousPageData(props); };\n    const nextPageClick = () => {return _getNextPageData(props); };\n    const payLoad = getPayloadObject('click', props.telemetryContent!, TelemetryConstant.Next);\n    const nextAttribute = getTelemetryAttributes(props.telemetryContent!, payLoad);\n    payLoad.contentAction.etext = TelemetryConstant.Previous;\n    const previousAttribute = getTelemetryAttributes(props.telemetryContent!, payLoad);\n\n    return (\n        <div className='ms-reviews-list__page-controls'>\n            {_hasPreviousPage(currentPage) && (\n                <button\n                    onClick={previousPageClick}\n                    className={'ms-reviews-list__previous'}\n                    aria-label={_paginationAriaLabel(resources.pageReviewAriaLabel, currentPage, reviewsCount, reviewsShownOnEachPage,  false)}\n                    {...previousAttribute}\n                >\n                    {resources.previousButtonText}\n                </button>\n            )}\n            {_hasNextPage(currentPage, reviewsCount, reviewsShownOnEachPage) && (\n                <button\n                    onClick={nextPageClick}\n                    className={'ms-reviews-list__next'}\n                    aria-label={_paginationAriaLabel(resources.pageReviewAriaLabel, currentPage, reviewsCount, reviewsShownOnEachPage,  true)}\n                    {...nextAttribute}\n                >\n                    {resources.nextButtonText}\n                </button>\n            )}\n        </div>\n    );\n};\n\nconst _hasPreviousPage = (currentPage: number): boolean => {\n    return currentPage > 1;\n};\n\nconst _hasNextPage = (currentPage: number, reviewsCount: number, reviewsShownOnEachPage: number): boolean => {\n    return _getPagesCount(reviewsCount, reviewsShownOnEachPage) > currentPage;\n};\n\nconst _getReviewsShown = (reviewsShownOnEachPage: number) => {\n    return Math.min(25, reviewsShownOnEachPage);\n};\n\nconst _getPagesCount = (reviewsCount: number, reviewsShownOnEachPage: number): number => {\n    return Math.ceil(reviewsCount / _getReviewsShown(reviewsShownOnEachPage));\n};\n\nconst _paginationAriaLabel = (pageReviewAriaLabel: string, currentPage: number, reviewsCount: number, reviewsShownOnEachPage: number, isNextPage: boolean, page?: number): string => {\n    const pageModifier = isNextPage ? 1: -1;\n    return format(\n                pageReviewAriaLabel,\n                _getReviewStartNumber(currentPage, reviewsShownOnEachPage, currentPage + pageModifier),\n                _getReviewEndNumber(currentPage, reviewsCount, reviewsShownOnEachPage, currentPage + pageModifier),\n                reviewsCount\n            );\n};\n\nconst _getReviewStartNumber = (currentPage: number,  reviewsShownOnEachPage: number, page?: number): number => {\n    return ((page || currentPage) - 1) * _getReviewsShown(reviewsShownOnEachPage) + 1;\n};\n\nconst _getReviewEndNumber = (currentPage: number, reviewsCount: number, reviewsShownOnEachPage: number, page?: number): number => {\n    const pageUsed = page || currentPage;\n    const pageReviewCount = pageUsed * _getReviewsShown(reviewsShownOnEachPage);\n    return pageReviewCount < reviewsCount ? pageReviewCount : reviewsCount;\n};\n\nconst _getPreviousPageData = async (props: IPageControlsProps) => {\n    await props.updateReviews(\n        _getReviewStartNumber(props.currentPage, props.reviewsShownOnEachPage) - 1 - _getReviewsShown(props.reviewsShownOnEachPage),\n        props.selectedSortByOption,\n        props.selectedFilterByOption,\n        props.currentPage - 1,\n        false\n    );\n};\n\nconst _getNextPageData = async (props: IPageControlsProps) => {\n\n    await props.updateReviews(\n        _getReviewEndNumber(props.currentPage, props.reviewsCount, props.reviewsShownOnEachPage),\n        props.selectedSortByOption,\n        props.selectedFilterByOption,\n        props.currentPage + 1,\n        false\n    );\n};"],"sourceRoot":"./src/"},"metadata":{},"sourceType":"module"}