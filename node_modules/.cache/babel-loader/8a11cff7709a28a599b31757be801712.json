{"ast":null,"code":"import{DataServiceQuery}from'../DataServiceQuery';import{CustomerClass,GlobalCustomerClass,CustomerTimelineItemClass,SalesOrderClass,OrderShipmentsClass,PurchaseHistoryClass,CustomerSearchFieldClass,CustomerTimelineItemTypeMapClass,CustomerTimelineRefinerClass,CustomerTitleClass}from'../Entities/CommerceModels.g';import{executeAction}from'../retail-action';function customersQuery(accountNumber){// Temp fix to return '' instead of null. Requires manual update until TSProxy generator updated\nvar key=accountNumber!==null&&accountNumber!==undefined?{AccountNumber:accountNumber}:null;return new DataServiceQuery(\"Customers\",\"Customer\",CustomerClass,key);}export function createCreateInput(entity){return customersQuery().create(entity);}export function createCustomerAsync(context,entity){var request=createCreateInput(entity);return executeAction(request,context);}export function createUpdateInput(entity){return customersQuery(entity.AccountNumber).update(entity);}export function updateAsync(context,entity){var request=createUpdateInput(entity);return executeAction(request,context);}export function createDeleteAsync(entity){return customersQuery(entity.AccountNumber)[\"delete\"]();}export function deleteAsync(context,entity){var request=createDeleteAsync(entity);return executeAction(request,context);}export function createReadAsync(accountNumber){return customersQuery(accountNumber).read();}export function readAsync(context,accountNumber){var request=createReadAsync(accountNumber);return executeAction(request,context);}export function createReadAllAsync(queryResultSettings){return customersQuery().resultSettings(queryResultSettings).read();}export function readAllAsync(context){var request=createReadAllAsync(context.queryResultSettings);return executeAction(request,context);}export function createSearchInput(queryResultSettings,customerSearchCriteria){var query=customersQuery().resultSettings(queryResultSettings);return query.createDataServiceRequestForOperation('Search',true,GlobalCustomerClass,'true',{bypassCache:'none',returnEntity:'GlobalCustomer'},{customerSearchCriteria:customerSearchCriteria});}export function searchAsync(context,customerSearchCriteria){var request=createSearchInput(context.queryResultSettings,customerSearchCriteria);return executeAction(request,context);}export function createSearchByFieldsInput(queryResultSettings,customerSearchByFieldCriteria){var query=customersQuery().resultSettings(queryResultSettings);return query.createDataServiceRequestForOperation('SearchByFields',true,GlobalCustomerClass,'true',{bypassCache:'none',returnEntity:'GlobalCustomer'},{CustomerSearchByFieldCriteria:customerSearchByFieldCriteria});}export function searchByFieldsAsync(context,customerSearchByFieldCriteria){var request=createSearchByFieldsInput(context.queryResultSettings,customerSearchByFieldCriteria);return executeAction(request,context);}export function createGetByAccountNumbersInput(queryResultSettings,accountNumbers,searchLocationValue){var query=customersQuery().resultSettings(queryResultSettings);return query.createDataServiceRequestForOperation('GetByAccountNumbers',true,CustomerClass,'true',{bypassCache:'none',returnEntity:'Customer'},{accountNumbers:accountNumbers,searchLocationValue:searchLocationValue});}export function getByAccountNumbersAsync(context,accountNumbers,searchLocationValue){var request=createGetByAccountNumbersInput(context.queryResultSettings,accountNumbers,searchLocationValue);return executeAction(request,context);}export function createCreateCustomerTimelineItemInput(customerTimelineItem){var query=customersQuery();return query.createDataServiceRequestForOperation('CreateCustomerTimelineItem',true,CustomerTimelineItemClass,'false',{bypassCache:'get',returnEntity:'CustomerTimelineItem'},{customerTimelineItem:customerTimelineItem});}export function createCustomerTimelineItemAsync(context,customerTimelineItem){var request=createCreateCustomerTimelineItemInput(customerTimelineItem);return executeAction(request,context);}export function createUpdateCustomerTimelineItemInput(customerTimelineItem){var query=customersQuery();return query.createDataServiceRequestForOperation('UpdateCustomerTimelineItem',true,CustomerTimelineItemClass,'false',{bypassCache:'get',returnEntity:'CustomerTimelineItem'},{customerTimelineItem:customerTimelineItem});}export function updateCustomerTimelineItemAsync(context,customerTimelineItem){var request=createUpdateCustomerTimelineItemInput(customerTimelineItem);return executeAction(request,context);}export function createGetOrderHistoryInput(queryResultSettings,accountNumber){var query=customersQuery(accountNumber).resultSettings(queryResultSettings);return query.createDataServiceRequestForOperation('GetOrderHistory',true,SalesOrderClass,'true',{bypassCache:'none',returnEntity:'SalesOrder'},{});}export function getOrderHistoryAsync(context,accountNumber){var request=createGetOrderHistoryInput(context.queryResultSettings,accountNumber);return executeAction(request,context);}export function createGetOrderShipmentsHistoryInput(queryResultSettings,accountNumber){var query=customersQuery(accountNumber).resultSettings(queryResultSettings);return query.createDataServiceRequestForOperation('GetOrderShipmentsHistory',true,OrderShipmentsClass,'true',{bypassCache:'none',returnEntity:'OrderShipments'},{});}export function getOrderShipmentsHistoryAsync(context,accountNumber){var request=createGetOrderShipmentsHistoryInput(context.queryResultSettings,accountNumber);return executeAction(request,context);}export function createPostNonTransactionalActivityLoyaltyPointsInput(loyaltyCardId,channelId,affiliationId,activityTypeId){var query=customersQuery();return query.createDataServiceRequestForOperation('PostNonTransactionalActivityLoyaltyPoints',true,'','',{bypassCache:'get',returnEntity:''},{loyaltyCardId:loyaltyCardId,channelId:channelId,affiliationId:affiliationId,activityTypeId:activityTypeId});}export function postNonTransactionalActivityLoyaltyPointsAsync(context,loyaltyCardId,channelId,affiliationId,activityTypeId){var request=createPostNonTransactionalActivityLoyaltyPointsInput(loyaltyCardId,channelId,affiliationId,activityTypeId);return executeAction(request,context);}export function createGetPurchaseHistoryInput(queryResultSettings,accountNumber){var query=customersQuery(accountNumber).resultSettings(queryResultSettings);return query.createDataServiceRequestForOperation('GetPurchaseHistory',false,PurchaseHistoryClass,'true',{bypassCache:'none',returnEntity:'PurchaseHistory'},{});}export function getPurchaseHistoryAsync(context,accountNumber){var request=createGetPurchaseHistoryInput(context.queryResultSettings,accountNumber);return executeAction(request,context);}export function createGetCustomerSearchFieldsInput(queryResultSettings){var query=customersQuery().resultSettings(queryResultSettings);return query.createDataServiceRequestForOperation('GetCustomerSearchFields',false,CustomerSearchFieldClass,'true',{bypassCache:'none',returnEntity:'CustomerSearchField'},{});}export function getCustomerSearchFieldsAsync(context){var request=createGetCustomerSearchFieldsInput(context.queryResultSettings);return executeAction(request,context);}export function createGetCustomerTimelineItemTypesInput(queryResultSettings){var query=customersQuery().resultSettings(queryResultSettings);return query.createDataServiceRequestForOperation('GetCustomerTimelineItemTypes',false,CustomerTimelineItemTypeMapClass,'true',{bypassCache:'none',returnEntity:'CustomerTimelineItemTypeMap'},{});}export function getCustomerTimelineItemTypesAsync(context){var request=createGetCustomerTimelineItemTypesInput(context.queryResultSettings);return executeAction(request,context);}export function createGetCustomerTimelineItemsInput(queryResultSettings,accountNumber){var query=customersQuery(accountNumber).resultSettings(queryResultSettings);return query.createDataServiceRequestForOperation('GetCustomerTimelineItems',false,CustomerTimelineItemClass,'true',{bypassCache:'none',returnEntity:'CustomerTimelineItem'},{});}export function getCustomerTimelineItemsAsync(context,accountNumber){var request=createGetCustomerTimelineItemsInput(context.queryResultSettings,accountNumber);return executeAction(request,context);}export function createGetCustomerTimelineRefinersInput(queryResultSettings,accountNumber){var query=customersQuery(accountNumber).resultSettings(queryResultSettings);return query.createDataServiceRequestForOperation('GetCustomerTimelineRefiners',false,CustomerTimelineRefinerClass,'true',{bypassCache:'none',returnEntity:'CustomerTimelineRefiner'},{});}export function getCustomerTimelineRefinersAsync(context,accountNumber){var request=createGetCustomerTimelineRefinersInput(context.queryResultSettings,accountNumber);return executeAction(request,context);}export function createGetTitlesInput(queryResultSettings){var query=customersQuery().resultSettings(queryResultSettings);return query.createDataServiceRequestForOperation('GetTitles',false,CustomerTitleClass,'true',{bypassCache:'none',returnEntity:'CustomerTitle'},{});}export function getTitlesAsync(context){var request=createGetTitlesInput(context.queryResultSettings);return executeAction(request,context);}","map":{"version":3,"sources":["../../src/DataActions/CustomersDataActions.g.ts"],"names":[],"mappings":"AAEI,OAAS,gBAAT,KAAiC,qBAAjC,CAEA,OAAS,aAAT,CAAwB,mBAAxB,CAA6C,yBAA7C,CAAwE,eAAxE,CAAyF,mBAAzF,CAA8G,oBAA9G,CAAoI,wBAApI,CAA8J,gCAA9J,CAAgM,4BAAhM,CAA8N,kBAA9N,KAAwP,8BAAxP,CAEA,OAAS,aAAT,KAA8B,kBAA9B,CAGA,QAAS,CAAA,cAAT,CAAwB,aAAxB,CAA8C,CAC9C;AACE,GAAI,CAAA,GAAG,CAAI,aAAa,GAAK,IAAlB,EAA0B,aAAa,GAAK,SAA7C,CAA0D,CAAE,aAAa,CAAE,aAAjB,CAA1D,CAA6F,IAAvG,CACA,MAAO,IAAI,CAAA,gBAAJ,CAAqB,WAArB,CAAkC,UAAlC,CAA8C,aAA9C,CAA6D,GAA7D,CAAP,CACD,CAED,MAAM,SAAU,CAAA,iBAAV,CAA4B,MAA5B,CAA4C,CAC9C,MAAO,CAAA,cAAc,GAAG,MAAjB,CAAwB,MAAxB,CAAP,CACH,CACD,MAAM,SAAU,CAAA,mBAAV,CAA8B,OAA9B,CAAiD,MAAjD,CAAiE,CACnE,GAAM,CAAA,OAAO,CAAG,iBAAiB,CAAC,MAAD,CAAjC,CACA,MAAO,CAAA,aAAa,CAAW,OAAX,CAAoB,OAApB,CAApB,CACH,CACD,MAAM,SAAU,CAAA,iBAAV,CAA4B,MAA5B,CAA4C,CAC9C,MAAO,CAAA,cAAc,CAAC,MAAM,CAAC,aAAR,CAAd,CAAqC,MAArC,CAA4C,MAA5C,CAAP,CACH,CACD,MAAM,SAAU,CAAA,WAAV,CAAsB,OAAtB,CAAyC,MAAzC,CAAyD,CAC3D,GAAM,CAAA,OAAO,CAAG,iBAAiB,CAAC,MAAD,CAAjC,CACA,MAAO,CAAA,aAAa,CAAW,OAAX,CAAoB,OAApB,CAApB,CACH,CACD,MAAM,SAAU,CAAA,iBAAV,CAA4B,MAA5B,CAA4C,CAC9C,MAAO,CAAA,cAAc,CAAC,MAAM,CAAC,aAAR,CAAd,YAAP,CACH,CACD,MAAM,SAAU,CAAA,WAAV,CAAsB,OAAtB,CAAyC,MAAzC,CAAyD,CAC3D,GAAM,CAAA,OAAO,CAAG,iBAAiB,CAAC,MAAD,CAAjC,CACA,MAAO,CAAA,aAAa,CAAa,OAAb,CAAsB,OAAtB,CAApB,CACH,CACD,MAAM,SAAU,CAAA,eAAV,CAA0B,aAA1B,CAA+C,CACjD,MAAO,CAAA,cAAc,CAAC,aAAD,CAAd,CAA8B,IAA9B,EAAP,CACH,CACD,MAAM,SAAU,CAAA,SAAV,CAAoB,OAApB,CAAuC,aAAvC,CAA4D,CAC9D,GAAM,CAAA,OAAO,CAAG,eAAe,CAAC,aAAD,CAA/B,CACA,MAAO,CAAA,aAAa,CAAW,OAAX,CAAoB,OAApB,CAApB,CACH,CACD,MAAM,SAAU,CAAA,kBAAV,CAA6B,mBAA7B,CAAsE,CACxE,MAAO,CAAA,cAAc,GAAG,cAAjB,CAAgC,mBAAhC,EAAqD,IAArD,EAAP,CACH,CACD,MAAM,SAAU,CAAA,YAAV,CAAuB,OAAvB,CAAwC,CAC1C,GAAM,CAAA,OAAO,CAAG,kBAAkB,CAAC,OAAO,CAAC,mBAAT,CAAlC,CACA,MAAO,CAAA,aAAa,CAAa,OAAb,CAAsB,OAAtB,CAApB,CACH,CAED,MAAM,SAAU,CAAA,iBAAV,CAA4B,mBAA5B,CAAuE,sBAAvE,CAA4H,CAC9H,GAAM,CAAA,KAAK,CAAG,cAAc,GAAG,cAAjB,CAAgC,mBAAhC,CAAd,CACA,MAAO,CAAA,KAAK,CAAC,oCAAN,CAA2C,QAA3C,CAAqD,IAArD,CAA2D,mBAA3D,CAAgF,MAAhF,CAAwF,CAAE,WAAW,CAAE,MAAf,CAAuB,YAAY,CAAE,gBAArC,CAAxF,CAAgJ,CAAC,sBAAsB,CAAE,sBAAzB,CAAhJ,CAAP,CACH,CAED,MAAM,SAAU,CAAA,WAAV,CAAsB,OAAtB,CAAyC,sBAAzC,CAA8F,CAChG,GAAM,CAAA,OAAO,CAAG,iBAAiB,CAAC,OAAO,CAAC,mBAAT,CAA8B,sBAA9B,CAAjC,CACA,MAAO,CAAA,aAAa,CAAmB,OAAnB,CAA4B,OAA5B,CAApB,CACH,CAED,MAAM,SAAU,CAAA,yBAAV,CAAoC,mBAApC,CAA+E,6BAA/E,CAAkJ,CACpJ,GAAM,CAAA,KAAK,CAAG,cAAc,GAAG,cAAjB,CAAgC,mBAAhC,CAAd,CACA,MAAO,CAAA,KAAK,CAAC,oCAAN,CAA2C,gBAA3C,CAA6D,IAA7D,CAAmE,mBAAnE,CAAwF,MAAxF,CAAgG,CAAE,WAAW,CAAE,MAAf,CAAuB,YAAY,CAAE,gBAArC,CAAhG,CAAwJ,CAAC,6BAA6B,CAAE,6BAAhC,CAAxJ,CAAP,CACH,CAED,MAAM,SAAU,CAAA,mBAAV,CAA8B,OAA9B,CAAiD,6BAAjD,CAAoH,CACtH,GAAM,CAAA,OAAO,CAAG,yBAAyB,CAAC,OAAO,CAAC,mBAAT,CAA8B,6BAA9B,CAAzC,CACA,MAAO,CAAA,aAAa,CAAmB,OAAnB,CAA4B,OAA5B,CAApB,CACH,CAED,MAAM,SAAU,CAAA,8BAAV,CAAyC,mBAAzC,CAAoF,cAApF,CAAqH,mBAArH,CAAgJ,CAClJ,GAAM,CAAA,KAAK,CAAG,cAAc,GAAG,cAAjB,CAAgC,mBAAhC,CAAd,CACA,MAAO,CAAA,KAAK,CAAC,oCAAN,CAA2C,qBAA3C,CAAkE,IAAlE,CAAwE,aAAxE,CAAuF,MAAvF,CAA+F,CAAE,WAAW,CAAE,MAAf,CAAuB,YAAY,CAAE,UAArC,CAA/F,CAAiJ,CAAC,cAAc,CAAE,cAAjB,CAAiC,mBAAmB,CAAE,mBAAtD,CAAjJ,CAAP,CACH,CAED,MAAM,SAAU,CAAA,wBAAV,CAAmC,OAAnC,CAAsD,cAAtD,CAAuF,mBAAvF,CAAkH,CACpH,GAAM,CAAA,OAAO,CAAG,8BAA8B,CAAC,OAAO,CAAC,mBAAT,CAA8B,cAA9B,CAA8C,mBAA9C,CAA9C,CACA,MAAO,CAAA,aAAa,CAAa,OAAb,CAAsB,OAAtB,CAApB,CACH,CAED,MAAM,SAAU,CAAA,qCAAV,CAAgD,oBAAhD,CAAiG,CACnG,GAAM,CAAA,KAAK,CAAG,cAAc,EAA5B,CACA,MAAO,CAAA,KAAK,CAAC,oCAAN,CAA2C,4BAA3C,CAAyE,IAAzE,CAA+E,yBAA/E,CAA0G,OAA1G,CAAmH,CAAE,WAAW,CAAE,KAAf,CAAsB,YAAY,CAAE,sBAApC,CAAnH,CAAgL,CAAC,oBAAoB,CAAE,oBAAvB,CAAhL,CAAP,CACH,CAED,MAAM,SAAU,CAAA,+BAAV,CAA0C,OAA1C,CAA6D,oBAA7D,CAA8G,CAChH,GAAM,CAAA,OAAO,CAAG,qCAAqC,CAAC,oBAAD,CAArD,CACA,MAAO,CAAA,aAAa,CAAuB,OAAvB,CAAgC,OAAhC,CAApB,CACH,CAED,MAAM,SAAU,CAAA,qCAAV,CAAgD,oBAAhD,CAAiG,CACnG,GAAM,CAAA,KAAK,CAAG,cAAc,EAA5B,CACA,MAAO,CAAA,KAAK,CAAC,oCAAN,CAA2C,4BAA3C,CAAyE,IAAzE,CAA+E,yBAA/E,CAA0G,OAA1G,CAAmH,CAAE,WAAW,CAAE,KAAf,CAAsB,YAAY,CAAE,sBAApC,CAAnH,CAAgL,CAAC,oBAAoB,CAAE,oBAAvB,CAAhL,CAAP,CACH,CAED,MAAM,SAAU,CAAA,+BAAV,CAA0C,OAA1C,CAA6D,oBAA7D,CAA8G,CAChH,GAAM,CAAA,OAAO,CAAG,qCAAqC,CAAC,oBAAD,CAArD,CACA,MAAO,CAAA,aAAa,CAAuB,OAAvB,CAAgC,OAAhC,CAApB,CACH,CAED,MAAM,SAAU,CAAA,0BAAV,CAAqC,mBAArC,CAAgF,aAAhF,CAAqG,CACvG,GAAM,CAAA,KAAK,CAAG,cAAc,CAAC,aAAD,CAAd,CAA8B,cAA9B,CAA6C,mBAA7C,CAAd,CACA,MAAO,CAAA,KAAK,CAAC,oCAAN,CAA2C,iBAA3C,CAA8D,IAA9D,CAAoE,eAApE,CAAqF,MAArF,CAA6F,CAAE,WAAW,CAAE,MAAf,CAAuB,YAAY,CAAE,YAArC,CAA7F,CAAiJ,EAAjJ,CAAP,CACH,CAED,MAAM,SAAU,CAAA,oBAAV,CAA+B,OAA/B,CAAkD,aAAlD,CAAuE,CACzE,GAAM,CAAA,OAAO,CAAG,0BAA0B,CAAC,OAAO,CAAC,mBAAT,CAA8B,aAA9B,CAA1C,CACA,MAAO,CAAA,aAAa,CAAe,OAAf,CAAwB,OAAxB,CAApB,CACH,CAED,MAAM,SAAU,CAAA,mCAAV,CAA8C,mBAA9C,CAAyF,aAAzF,CAA8G,CAChH,GAAM,CAAA,KAAK,CAAG,cAAc,CAAC,aAAD,CAAd,CAA8B,cAA9B,CAA6C,mBAA7C,CAAd,CACA,MAAO,CAAA,KAAK,CAAC,oCAAN,CAA2C,0BAA3C,CAAuE,IAAvE,CAA6E,mBAA7E,CAAkG,MAAlG,CAA0G,CAAE,WAAW,CAAE,MAAf,CAAuB,YAAY,CAAE,gBAArC,CAA1G,CAAkK,EAAlK,CAAP,CACH,CAED,MAAM,SAAU,CAAA,6BAAV,CAAwC,OAAxC,CAA2D,aAA3D,CAAgF,CAClF,GAAM,CAAA,OAAO,CAAG,mCAAmC,CAAC,OAAO,CAAC,mBAAT,CAA8B,aAA9B,CAAnD,CACA,MAAO,CAAA,aAAa,CAAmB,OAAnB,CAA4B,OAA5B,CAApB,CACH,CAED,MAAM,SAAU,CAAA,oDAAV,CAA+D,aAA/D,CAA6F,SAA7F,CAAgH,aAAhH,CAAuI,cAAvI,CAAoK,CACtK,GAAM,CAAA,KAAK,CAAG,cAAc,EAA5B,CACA,MAAO,CAAA,KAAK,CAAC,oCAAN,CAA2C,2CAA3C,CAAwF,IAAxF,CAA8F,EAA9F,CAAkG,EAAlG,CAAsG,CAAE,WAAW,CAAE,KAAf,CAAsB,YAAY,CAAE,EAApC,CAAtG,CAA+I,CAAC,aAAa,CAAE,aAAhB,CAA+B,SAAS,CAAE,SAA1C,CAAqD,aAAa,CAAE,aAApE,CAAmF,cAAc,CAAE,cAAnG,CAA/I,CAAP,CACH,CAED,MAAM,SAAU,CAAA,8CAAV,CAAyD,OAAzD,CAA4E,aAA5E,CAA0G,SAA1G,CAA6H,aAA7H,CAAoJ,cAApJ,CAAiL,CACnL,GAAM,CAAA,OAAO,CAAG,oDAAoD,CAAC,aAAD,CAAgB,SAAhB,CAA2B,aAA3B,CAA0C,cAA1C,CAApE,CACA,MAAO,CAAA,aAAa,CAAa,OAAb,CAAsB,OAAtB,CAApB,CACH,CAED,MAAM,SAAU,CAAA,6BAAV,CAAwC,mBAAxC,CAAmF,aAAnF,CAAwG,CAC1G,GAAM,CAAA,KAAK,CAAG,cAAc,CAAC,aAAD,CAAd,CAA8B,cAA9B,CAA6C,mBAA7C,CAAd,CACA,MAAO,CAAA,KAAK,CAAC,oCAAN,CAA2C,oBAA3C,CAAiE,KAAjE,CAAwE,oBAAxE,CAA8F,MAA9F,CAAsG,CAAE,WAAW,CAAE,MAAf,CAAuB,YAAY,CAAE,iBAArC,CAAtG,CAA+J,EAA/J,CAAP,CACH,CAED,MAAM,SAAU,CAAA,uBAAV,CAAkC,OAAlC,CAAqD,aAArD,CAA0E,CAC5E,GAAM,CAAA,OAAO,CAAG,6BAA6B,CAAC,OAAO,CAAC,mBAAT,CAA8B,aAA9B,CAA7C,CACA,MAAO,CAAA,aAAa,CAAoB,OAApB,CAA6B,OAA7B,CAApB,CACH,CAED,MAAM,SAAU,CAAA,kCAAV,CAA6C,mBAA7C,CAAsF,CACxF,GAAM,CAAA,KAAK,CAAG,cAAc,GAAG,cAAjB,CAAgC,mBAAhC,CAAd,CACA,MAAO,CAAA,KAAK,CAAC,oCAAN,CAA2C,yBAA3C,CAAsE,KAAtE,CAA6E,wBAA7E,CAAuG,MAAvG,CAA+G,CAAE,WAAW,CAAE,MAAf,CAAuB,YAAY,CAAE,qBAArC,CAA/G,CAA4K,EAA5K,CAAP,CACH,CAED,MAAM,SAAU,CAAA,4BAAV,CAAuC,OAAvC,CAAwD,CAC1D,GAAM,CAAA,OAAO,CAAG,kCAAkC,CAAC,OAAO,CAAC,mBAAT,CAAlD,CACA,MAAO,CAAA,aAAa,CAAwB,OAAxB,CAAiC,OAAjC,CAApB,CACH,CAED,MAAM,SAAU,CAAA,uCAAV,CAAkD,mBAAlD,CAA2F,CAC7F,GAAM,CAAA,KAAK,CAAG,cAAc,GAAG,cAAjB,CAAgC,mBAAhC,CAAd,CACA,MAAO,CAAA,KAAK,CAAC,oCAAN,CAA2C,8BAA3C,CAA2E,KAA3E,CAAkF,gCAAlF,CAAoH,MAApH,CAA4H,CAAE,WAAW,CAAE,MAAf,CAAuB,YAAY,CAAE,6BAArC,CAA5H,CAAiM,EAAjM,CAAP,CACH,CAED,MAAM,SAAU,CAAA,iCAAV,CAA4C,OAA5C,CAA6D,CAC/D,GAAM,CAAA,OAAO,CAAG,uCAAuC,CAAC,OAAO,CAAC,mBAAT,CAAvD,CACA,MAAO,CAAA,aAAa,CAAgC,OAAhC,CAAyC,OAAzC,CAApB,CACH,CAED,MAAM,SAAU,CAAA,mCAAV,CAA8C,mBAA9C,CAAyF,aAAzF,CAA8G,CAChH,GAAM,CAAA,KAAK,CAAG,cAAc,CAAC,aAAD,CAAd,CAA8B,cAA9B,CAA6C,mBAA7C,CAAd,CACA,MAAO,CAAA,KAAK,CAAC,oCAAN,CAA2C,0BAA3C,CAAuE,KAAvE,CAA8E,yBAA9E,CAAyG,MAAzG,CAAiH,CAAE,WAAW,CAAE,MAAf,CAAuB,YAAY,CAAE,sBAArC,CAAjH,CAA+K,EAA/K,CAAP,CACH,CAED,MAAM,SAAU,CAAA,6BAAV,CAAwC,OAAxC,CAA2D,aAA3D,CAAgF,CAClF,GAAM,CAAA,OAAO,CAAG,mCAAmC,CAAC,OAAO,CAAC,mBAAT,CAA8B,aAA9B,CAAnD,CACA,MAAO,CAAA,aAAa,CAAyB,OAAzB,CAAkC,OAAlC,CAApB,CACH,CAED,MAAM,SAAU,CAAA,sCAAV,CAAiD,mBAAjD,CAA4F,aAA5F,CAAiH,CACnH,GAAM,CAAA,KAAK,CAAG,cAAc,CAAC,aAAD,CAAd,CAA8B,cAA9B,CAA6C,mBAA7C,CAAd,CACA,MAAO,CAAA,KAAK,CAAC,oCAAN,CAA2C,6BAA3C,CAA0E,KAA1E,CAAiF,4BAAjF,CAA+G,MAA/G,CAAuH,CAAE,WAAW,CAAE,MAAf,CAAuB,YAAY,CAAE,yBAArC,CAAvH,CAAwL,EAAxL,CAAP,CACH,CAED,MAAM,SAAU,CAAA,gCAAV,CAA2C,OAA3C,CAA8D,aAA9D,CAAmF,CACrF,GAAM,CAAA,OAAO,CAAG,sCAAsC,CAAC,OAAO,CAAC,mBAAT,CAA8B,aAA9B,CAAtD,CACA,MAAO,CAAA,aAAa,CAA4B,OAA5B,CAAqC,OAArC,CAApB,CACH,CAED,MAAM,SAAU,CAAA,oBAAV,CAA+B,mBAA/B,CAAwE,CAC1E,GAAM,CAAA,KAAK,CAAG,cAAc,GAAG,cAAjB,CAAgC,mBAAhC,CAAd,CACA,MAAO,CAAA,KAAK,CAAC,oCAAN,CAA2C,WAA3C,CAAwD,KAAxD,CAA+D,kBAA/D,CAAmF,MAAnF,CAA2F,CAAE,WAAW,CAAE,MAAf,CAAuB,YAAY,CAAE,eAArC,CAA3F,CAAkJ,EAAlJ,CAAP,CACH,CAED,MAAM,SAAU,CAAA,cAAV,CAAyB,OAAzB,CAA0C,CAC5C,GAAM,CAAA,OAAO,CAAG,oBAAoB,CAAC,OAAO,CAAC,mBAAT,CAApC,CACA,MAAO,CAAA,aAAa,CAAkB,OAAlB,CAA2B,OAA3B,CAApB,CACH","sourcesContent":["    // <auto-generated />\n    import { AsyncResult } from '../async-result';\n    import { DataServiceQuery } from '../DataServiceQuery';\n    import { Customer, CustomerSearchCriteria, GlobalCustomer, CustomerSearchByFieldCriteria, CustomerTimelineItem, SalesOrder, OrderShipments, PurchaseHistory, CustomerSearchField, CustomerTimelineItemTypeMap, CustomerTimelineRefiner, CustomerTitle } from '../Entities/CommerceTypes.g';\n    import { CustomerClass, GlobalCustomerClass, CustomerTimelineItemClass, SalesOrderClass, OrderShipmentsClass, PurchaseHistoryClass, CustomerSearchFieldClass, CustomerTimelineItemTypeMapClass, CustomerTimelineRefinerClass, CustomerTitleClass } from '../Entities/CommerceModels.g';\n    import { IContext, IDataServiceRequest, IQueryResultSettings, NullResult } from '../Interfaces';\n    import { executeAction } from '../retail-action';\n    \n    \n    function customersQuery(accountNumber?: string): DataServiceQuery {\n    // Temp fix to return '' instead of null. Requires manual update until TSProxy generator updated\n      var key = (accountNumber !== null && accountNumber !== undefined) ? { AccountNumber: accountNumber } : null;\n      return new DataServiceQuery(\"Customers\", \"Customer\", CustomerClass, key);\n    }\n    \n    export function createCreateInput(entity: Customer): IDataServiceRequest {\n        return customersQuery().create(entity);\n    }\n    export function createCustomerAsync(context: IContext, entity: Customer): AsyncResult<Customer> {\n        const request = createCreateInput(entity, );\n        return executeAction<Customer>(request, context);\n    }\n    export function createUpdateInput(entity: Customer): IDataServiceRequest {\n        return customersQuery(entity.AccountNumber).update(entity);\n    }\n    export function updateAsync(context: IContext, entity: Customer): AsyncResult<Customer> {\n        const request = createUpdateInput(entity, );\n        return executeAction<Customer>(request, context);\n    }\n    export function createDeleteAsync(entity: Customer): IDataServiceRequest {\n        return customersQuery(entity.AccountNumber).delete();\n    }\n    export function deleteAsync(context: IContext, entity: Customer): AsyncResult<NullResult> {\n        const request = createDeleteAsync(entity, );\n        return executeAction<NullResult>(request, context);\n    }\n    export function createReadAsync(accountNumber: string): IDataServiceRequest {\n        return customersQuery(accountNumber).read();\n    }\n    export function readAsync(context: IContext, accountNumber: string): AsyncResult<Customer> {\n        const request = createReadAsync(accountNumber, );\n        return executeAction<Customer>(request, context);\n    }\n    export function createReadAllAsync(queryResultSettings: IQueryResultSettings): IDataServiceRequest {\n        return customersQuery().resultSettings(queryResultSettings).read();\n    }\n    export function readAllAsync(context: IContext): AsyncResult<Customer[]> {\n        const request = createReadAllAsync(context.queryResultSettings, );\n        return executeAction<Customer[]>(request, context);\n    }\n    \n    export function createSearchInput(queryResultSettings: IQueryResultSettings, customerSearchCriteria: CustomerSearchCriteria | null): IDataServiceRequest {      \n        const query = customersQuery().resultSettings(queryResultSettings);\n        return query.createDataServiceRequestForOperation('Search', true, GlobalCustomerClass, 'true', { bypassCache: 'none', returnEntity: 'GlobalCustomer'}, {customerSearchCriteria: customerSearchCriteria });\n    }    \n    \n    export function searchAsync(context: IContext, customerSearchCriteria: CustomerSearchCriteria | null):AsyncResult<GlobalCustomer[]> {\n        const request = createSearchInput(context.queryResultSettings, customerSearchCriteria, );\n        return executeAction<GlobalCustomer[]>(request, context);\n    }          \n          \n    export function createSearchByFieldsInput(queryResultSettings: IQueryResultSettings, customerSearchByFieldCriteria: CustomerSearchByFieldCriteria | null): IDataServiceRequest {      \n        const query = customersQuery().resultSettings(queryResultSettings);\n        return query.createDataServiceRequestForOperation('SearchByFields', true, GlobalCustomerClass, 'true', { bypassCache: 'none', returnEntity: 'GlobalCustomer'}, {CustomerSearchByFieldCriteria: customerSearchByFieldCriteria });\n    }    \n    \n    export function searchByFieldsAsync(context: IContext, customerSearchByFieldCriteria: CustomerSearchByFieldCriteria | null):AsyncResult<GlobalCustomer[]> {\n        const request = createSearchByFieldsInput(context.queryResultSettings, customerSearchByFieldCriteria, );\n        return executeAction<GlobalCustomer[]>(request, context);\n    }          \n          \n    export function createGetByAccountNumbersInput(queryResultSettings: IQueryResultSettings, accountNumbers: string[] | null, searchLocationValue: number): IDataServiceRequest {      \n        const query = customersQuery().resultSettings(queryResultSettings);\n        return query.createDataServiceRequestForOperation('GetByAccountNumbers', true, CustomerClass, 'true', { bypassCache: 'none', returnEntity: 'Customer'}, {accountNumbers: accountNumbers, searchLocationValue: searchLocationValue });\n    }    \n    \n    export function getByAccountNumbersAsync(context: IContext, accountNumbers: string[] | null, searchLocationValue: number):AsyncResult<Customer[]> {\n        const request = createGetByAccountNumbersInput(context.queryResultSettings, accountNumbers, searchLocationValue, );\n        return executeAction<Customer[]>(request, context);\n    }          \n          \n    export function createCreateCustomerTimelineItemInput(customerTimelineItem: CustomerTimelineItem | null): IDataServiceRequest {      \n        const query = customersQuery();\n        return query.createDataServiceRequestForOperation('CreateCustomerTimelineItem', true, CustomerTimelineItemClass, 'false', { bypassCache: 'get', returnEntity: 'CustomerTimelineItem'}, {customerTimelineItem: customerTimelineItem });\n    }    \n    \n    export function createCustomerTimelineItemAsync(context: IContext, customerTimelineItem: CustomerTimelineItem | null):AsyncResult<CustomerTimelineItem> {\n        const request = createCreateCustomerTimelineItemInput(customerTimelineItem, );\n        return executeAction<CustomerTimelineItem>(request, context);\n    }          \n          \n    export function createUpdateCustomerTimelineItemInput(customerTimelineItem: CustomerTimelineItem | null): IDataServiceRequest {      \n        const query = customersQuery();\n        return query.createDataServiceRequestForOperation('UpdateCustomerTimelineItem', true, CustomerTimelineItemClass, 'false', { bypassCache: 'get', returnEntity: 'CustomerTimelineItem'}, {customerTimelineItem: customerTimelineItem });\n    }    \n    \n    export function updateCustomerTimelineItemAsync(context: IContext, customerTimelineItem: CustomerTimelineItem | null):AsyncResult<CustomerTimelineItem> {\n        const request = createUpdateCustomerTimelineItemInput(customerTimelineItem, );\n        return executeAction<CustomerTimelineItem>(request, context);\n    }          \n          \n    export function createGetOrderHistoryInput(queryResultSettings: IQueryResultSettings, accountNumber: string): IDataServiceRequest {      \n        const query = customersQuery(accountNumber).resultSettings(queryResultSettings);\n        return query.createDataServiceRequestForOperation('GetOrderHistory', true, SalesOrderClass, 'true', { bypassCache: 'none', returnEntity: 'SalesOrder'}, { });\n    }    \n    \n    export function getOrderHistoryAsync(context: IContext, accountNumber: string):AsyncResult<SalesOrder[]> {\n        const request = createGetOrderHistoryInput(context.queryResultSettings, accountNumber, );\n        return executeAction<SalesOrder[]>(request, context);\n    }          \n          \n    export function createGetOrderShipmentsHistoryInput(queryResultSettings: IQueryResultSettings, accountNumber: string): IDataServiceRequest {      \n        const query = customersQuery(accountNumber).resultSettings(queryResultSettings);\n        return query.createDataServiceRequestForOperation('GetOrderShipmentsHistory', true, OrderShipmentsClass, 'true', { bypassCache: 'none', returnEntity: 'OrderShipments'}, { });\n    }    \n    \n    export function getOrderShipmentsHistoryAsync(context: IContext, accountNumber: string):AsyncResult<OrderShipments[]> {\n        const request = createGetOrderShipmentsHistoryInput(context.queryResultSettings, accountNumber, );\n        return executeAction<OrderShipments[]>(request, context);\n    }          \n          \n    export function createPostNonTransactionalActivityLoyaltyPointsInput(loyaltyCardId: string | null, channelId: number, affiliationId: number, activityTypeId: string | null): IDataServiceRequest {      \n        const query = customersQuery();\n        return query.createDataServiceRequestForOperation('PostNonTransactionalActivityLoyaltyPoints', true, '', '', { bypassCache: 'get', returnEntity: ''}, {loyaltyCardId: loyaltyCardId, channelId: channelId, affiliationId: affiliationId, activityTypeId: activityTypeId });\n    }    \n    \n    export function postNonTransactionalActivityLoyaltyPointsAsync(context: IContext, loyaltyCardId: string | null, channelId: number, affiliationId: number, activityTypeId: string | null):AsyncResult<NullResult> {\n        const request = createPostNonTransactionalActivityLoyaltyPointsInput(loyaltyCardId, channelId, affiliationId, activityTypeId, );\n        return executeAction<NullResult>(request, context);\n    }          \n          \n    export function createGetPurchaseHistoryInput(queryResultSettings: IQueryResultSettings, accountNumber: string): IDataServiceRequest {      \n        const query = customersQuery(accountNumber).resultSettings(queryResultSettings);\n        return query.createDataServiceRequestForOperation('GetPurchaseHistory', false, PurchaseHistoryClass, 'true', { bypassCache: 'none', returnEntity: 'PurchaseHistory'}, { });\n    }    \n    \n    export function getPurchaseHistoryAsync(context: IContext, accountNumber: string):AsyncResult<PurchaseHistory[]> {\n        const request = createGetPurchaseHistoryInput(context.queryResultSettings, accountNumber, );\n        return executeAction<PurchaseHistory[]>(request, context);\n    }          \n          \n    export function createGetCustomerSearchFieldsInput(queryResultSettings: IQueryResultSettings): IDataServiceRequest {      \n        const query = customersQuery().resultSettings(queryResultSettings);\n        return query.createDataServiceRequestForOperation('GetCustomerSearchFields', false, CustomerSearchFieldClass, 'true', { bypassCache: 'none', returnEntity: 'CustomerSearchField'}, { });\n    }    \n    \n    export function getCustomerSearchFieldsAsync(context: IContext):AsyncResult<CustomerSearchField[]> {\n        const request = createGetCustomerSearchFieldsInput(context.queryResultSettings, );\n        return executeAction<CustomerSearchField[]>(request, context);\n    }          \n          \n    export function createGetCustomerTimelineItemTypesInput(queryResultSettings: IQueryResultSettings): IDataServiceRequest {      \n        const query = customersQuery().resultSettings(queryResultSettings);\n        return query.createDataServiceRequestForOperation('GetCustomerTimelineItemTypes', false, CustomerTimelineItemTypeMapClass, 'true', { bypassCache: 'none', returnEntity: 'CustomerTimelineItemTypeMap'}, { });\n    }    \n    \n    export function getCustomerTimelineItemTypesAsync(context: IContext):AsyncResult<CustomerTimelineItemTypeMap[]> {\n        const request = createGetCustomerTimelineItemTypesInput(context.queryResultSettings, );\n        return executeAction<CustomerTimelineItemTypeMap[]>(request, context);\n    }          \n          \n    export function createGetCustomerTimelineItemsInput(queryResultSettings: IQueryResultSettings, accountNumber: string): IDataServiceRequest {      \n        const query = customersQuery(accountNumber).resultSettings(queryResultSettings);\n        return query.createDataServiceRequestForOperation('GetCustomerTimelineItems', false, CustomerTimelineItemClass, 'true', { bypassCache: 'none', returnEntity: 'CustomerTimelineItem'}, { });\n    }    \n    \n    export function getCustomerTimelineItemsAsync(context: IContext, accountNumber: string):AsyncResult<CustomerTimelineItem[]> {\n        const request = createGetCustomerTimelineItemsInput(context.queryResultSettings, accountNumber, );\n        return executeAction<CustomerTimelineItem[]>(request, context);\n    }          \n          \n    export function createGetCustomerTimelineRefinersInput(queryResultSettings: IQueryResultSettings, accountNumber: string): IDataServiceRequest {      \n        const query = customersQuery(accountNumber).resultSettings(queryResultSettings);\n        return query.createDataServiceRequestForOperation('GetCustomerTimelineRefiners', false, CustomerTimelineRefinerClass, 'true', { bypassCache: 'none', returnEntity: 'CustomerTimelineRefiner'}, { });\n    }    \n    \n    export function getCustomerTimelineRefinersAsync(context: IContext, accountNumber: string):AsyncResult<CustomerTimelineRefiner[]> {\n        const request = createGetCustomerTimelineRefinersInput(context.queryResultSettings, accountNumber, );\n        return executeAction<CustomerTimelineRefiner[]>(request, context);\n    }          \n          \n    export function createGetTitlesInput(queryResultSettings: IQueryResultSettings): IDataServiceRequest {      \n        const query = customersQuery().resultSettings(queryResultSettings);\n        return query.createDataServiceRequestForOperation('GetTitles', false, CustomerTitleClass, 'true', { bypassCache: 'none', returnEntity: 'CustomerTitle'}, { });\n    }    \n    \n    export function getTitlesAsync(context: IContext):AsyncResult<CustomerTitle[]> {\n        const request = createGetTitlesInput(context.queryResultSettings, );\n        return executeAction<CustomerTitle[]>(request, context);\n    }          \n          \n    "],"sourceRoot":""},"metadata":{},"sourceType":"module"}