{"ast":null,"code":"import\"core-js/modules/es.object.assign.js\";import\"core-js/modules/es.promise.js\";import\"core-js/modules/es.regexp.to-string.js\";import _defineProperty from\"@babel/runtime/helpers/esm/defineProperty\";function ownKeys(object,enumerableOnly){var keys=Object.keys(object);if(Object.getOwnPropertySymbols){var symbols=Object.getOwnPropertySymbols(object);if(enumerableOnly)symbols=symbols.filter(function(sym){return Object.getOwnPropertyDescriptor(object,sym).enumerable;});keys.push.apply(keys,symbols);}return keys;}function _objectSpread(target){for(var i=1;i<arguments.length;i++){var source=arguments[i]!=null?arguments[i]:{};if(i%2){ownKeys(Object(source),true).forEach(function(key){_defineProperty(target,key,source[key]);});}else if(Object.getOwnPropertyDescriptors){Object.defineProperties(target,Object.getOwnPropertyDescriptors(source));}else{ownKeys(Object(source)).forEach(function(key){Object.defineProperty(target,key,Object.getOwnPropertyDescriptor(source,key));});}}return target;}import{__decorate}from\"tslib\";import*as Msdyn365 from'@msdyn365-commerce/core';import classname from'classnames';import{reaction}from'mobx';import{observer}from'mobx-react';import*as React from'react';let Map=class Map extends React.Component{constructor(props){super(props);this.mapRef=/*#__PURE__*/React.createRef();this.handleHeadingChange=event=>this.props.config.heading.text=event.target.value;this._initMap=()=>{const{context:{actionContext:{requestContext:{channel}}},data:{storeSelectorStateManager:{result:storeSelectorStateManager}}}=this.props;if(storeSelectorStateManager!==null&&storeSelectorStateManager!==void 0&&storeSelectorStateManager.isMapApiLoaded){this.map=new Microsoft.Maps.Map(this.mapRef.current,{credentials:channel===null||channel===void 0?void 0:channel.BingMapsApiKey,pushpinAccessible:true});}};this._updateMap=()=>{var _this$props$data$stor,_storeSelectorStateMa;const pushpinOptions=this.props.config.pushpinOptions;const storeSelectorStateManager=(_this$props$data$stor=this.props.data.storeSelectorStateManager)===null||_this$props$data$stor===void 0?void 0:_this$props$data$stor.result;const orgUnitStoreInformation=storeSelectorStateManager===null||storeSelectorStateManager===void 0?void 0:(_storeSelectorStateMa=storeSelectorStateManager.context)===null||_storeSelectorStateMa===void 0?void 0:_storeSelectorStateMa.orgUnitStoreInformation;const selectedStoreLocationId=storeSelectorStateManager===null||storeSelectorStateManager===void 0?void 0:storeSelectorStateManager.selectedStoreLocationId;if(this.map&&orgUnitStoreInformation){var _this$map;let mapLocation;this.map.entities.clear();const pushpins=[];orgUnitStoreInformation.map((unitStoreInfo,index)=>{var _unitStoreInfo$OrgUni;const storeLocation=unitStoreInfo===null||unitStoreInfo===void 0?void 0:(_unitStoreInfo$OrgUni=unitStoreInfo.OrgUnitAvailability)===null||_unitStoreInfo$OrgUni===void 0?void 0:_unitStoreInfo$OrgUni.OrgUnitLocation;if(storeLocation!==null&&storeLocation!==void 0&&storeLocation.Latitude&&storeLocation.Longitude){const isSelectedLocation=selectedStoreLocationId===storeLocation.OrgUnitNumber;const options=this._getPushpinOptions(isSelectedLocation,index,pushpinOptions);const pushpin=new Microsoft.Maps.Pushpin(new Microsoft.Maps.Location(storeLocation.Latitude,storeLocation.Longitude),options);Microsoft.Maps.Events.addHandler(pushpin,'click',()=>storeLocation.OrgUnitNumber&&(storeSelectorStateManager===null||storeSelectorStateManager===void 0?void 0:storeSelectorStateManager.setSelectedStoreLocationId(storeLocation.OrgUnitNumber)));isSelectedLocation?pushpins.unshift(pushpin):pushpins.push(pushpin);if(isSelectedLocation){mapLocation=storeLocation;}}});if(mapLocation){const currLocation=new Microsoft.Maps.Location(mapLocation.Latitude,mapLocation.Longitude);this.map.setView({center:currLocation});}else{this.map.setView({bounds:Microsoft.Maps.LocationRect.fromShapes(pushpins)});}this.map.setOptions({pushpinAccessible:true});(_this$map=this.map)===null||_this$map===void 0?void 0:_this$map.entities.push(pushpins);}};this._getPushpinOptions=(isSelectedLocation,index,pushpinOptions)=>{const text=pushpinOptions!==null&&pushpinOptions!==void 0&&pushpinOptions.showIndex?(index+1).toString():undefined;const size=(pushpinOptions===null||pushpinOptions===void 0?void 0:pushpinOptions.size)||1;const color=isSelectedLocation?(pushpinOptions===null||pushpinOptions===void 0?void 0:pushpinOptions.selectionColor)||(pushpinOptions===null||pushpinOptions===void 0?void 0:pushpinOptions.color):pushpinOptions===null||pushpinOptions===void 0?void 0:pushpinOptions.color;const icon=this._getSvgIcon(size,color,text);return{color:isSelectedLocation?pushpinOptions===null||pushpinOptions===void 0?void 0:pushpinOptions.selectionColor:pushpinOptions===null||pushpinOptions===void 0?void 0:pushpinOptions.color,icon:icon};};this._getSvgIcon=(size,color,text)=>{const baseValue=32;return\"<svg xmlns=\\\"http://www.w3.org/2000/svg\\\" width=\\\"\".concat(baseValue*size,\"\\\" height=\\\"\").concat(baseValue*size,\"\\\" viewBox=\\\"0 0 365 560\\\">\\n                    <path fill=\\\"\").concat(color,\"\\\" d=\\\"M182.9,551.7c0,0.1,0.2,0.3,0.2,0.3S358.3,283,358.3,194.6c0-130.1-88.8-186.7-175.4-186.9 C96.3,7.9,7.5,64.5,7.5,194.6c0,88.4,175.3,357.4,175.3,357.4S182.9,551.7,182.9,551.7z\\\" />\\n                    \").concat(text?\"<text x=\\\"185\\\" y=\\\"280\\\" style=\\\"font-size:220px;fill:#ffffff;\\\" text-anchor=\\\"middle\\\">\".concat(text,\"</text>\"):'',\"\\n                </svg>\");};}componentDidMount(){const{context:{telemetry,actionContext:{requestContext:{channel}}}}=this.props;if(channel&&!channel.BingMapsApiKey){telemetry.error('BingMapsApiKey is missing.');return;}if(channel&&!channel.BingMapsEnabled){telemetry.error('Map is disabled from HQ.');return;}reaction(()=>{var _this$props$data$stor2;return(_this$props$data$stor2=this.props.data.storeSelectorStateManager.result)===null||_this$props$data$stor2===void 0?void 0:_this$props$data$stor2.loadMapApi;},()=>{var _this$props$data$stor3,_this$props$context,_this$props$context$a,_this$props$context$a2,_this$props$context$a3,_this$props$context2,_this$props$context2$,_this$props$context2$2,_this$props$context2$3;(_this$props$data$stor3=this.props.data.storeSelectorStateManager.result)===null||_this$props$data$stor3===void 0?void 0:_this$props$data$stor3.loadMapApi({key:channel===null||channel===void 0?void 0:channel.BingMapsApiKey,lang:(_this$props$context=this.props.context)===null||_this$props$context===void 0?void 0:(_this$props$context$a=_this$props$context.actionContext)===null||_this$props$context$a===void 0?void 0:(_this$props$context$a2=_this$props$context$a.requestContext)===null||_this$props$context$a2===void 0?void 0:(_this$props$context$a3=_this$props$context$a2.channel)===null||_this$props$context$a3===void 0?void 0:_this$props$context$a3.ChannelCountryRegionISOCode,market:(_this$props$context2=this.props.context)===null||_this$props$context2===void 0?void 0:(_this$props$context2$=_this$props$context2.actionContext)===null||_this$props$context2$===void 0?void 0:(_this$props$context2$2=_this$props$context2$.requestContext)===null||_this$props$context2$2===void 0?void 0:(_this$props$context2$3=_this$props$context2$2.channel)===null||_this$props$context2$3===void 0?void 0:_this$props$context2$3.DefaultLanguageId});});reaction(()=>{var _this$props$data$stor4;return(_this$props$data$stor4=this.props.data.storeSelectorStateManager.result)===null||_this$props$data$stor4===void 0?void 0:_this$props$data$stor4.isMapApiLoaded;},()=>{this._initMap();});reaction(()=>{var _this$props$data$stor5,_this$props$data$stor6,_this$props$data$stor7;return[(_this$props$data$stor5=this.props.data.storeSelectorStateManager.result)===null||_this$props$data$stor5===void 0?void 0:(_this$props$data$stor6=_this$props$data$stor5.context)===null||_this$props$data$stor6===void 0?void 0:_this$props$data$stor6.orgUnitStoreInformation,(_this$props$data$stor7=this.props.data.storeSelectorStateManager.result)===null||_this$props$data$stor7===void 0?void 0:_this$props$data$stor7.selectedStoreLocationId];},async()=>{this._updateMap();});}render(){var _storeSelectorStateMa2;const{config:{heading,className},data:{storeSelectorStateManager:{result:storeSelectorStateManager}}}=this.props;const displayMap=storeSelectorStateManager===null||storeSelectorStateManager===void 0?void 0:(_storeSelectorStateMa2=storeSelectorStateManager.listMapViewState)===null||_storeSelectorStateMa2===void 0?void 0:_storeSelectorStateMa2.displayMap;const viewProps=_objectSpread(_objectSpread({},this.props),{},{ModuleProps:{tag:'div',moduleProps:this.props,className:classname('ms-map',{show:displayMap},className)},Header:{headerProps:{className:'ms-map__header'},heading:heading&&heading.text&&/*#__PURE__*/React.createElement(Msdyn365.Text,Object.assign({className:'ms-map__heading'},heading,{tag:heading.tag||'h2',text:heading.text,editProps:{onEdit:this.handleHeadingChange,requestContext:this.props.context.request}}))},MapProps:{tag:'div',className:'ms-map__body',ref:this.mapRef},Map:this.map});return this.props.renderView(viewProps);}};Map=__decorate([observer],Map);export default Map;","map":{"version":3,"sources":["modules/map/map.tsx"],"names":[],"mappings":"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","sourcesContent":["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\n// tslint:disable:no-reference\n/// <reference path=\"types/MicrosoftMaps/Microsoft.Maps.All.d.ts\" />\n\nimport { IFullOrgUnitAvailability } from '@msdyn365-commerce-modules/retail-actions/dist/types/utilities/full-org-unit-availability';\nimport { IModuleProps, INodeProps } from '@msdyn365-commerce-modules/utilities';\nimport * as Msdyn365 from '@msdyn365-commerce/core';\nimport { OrgUnitLocation } from '@msdyn365-commerce/retail-proxy';\nimport classname from 'classnames';\nimport { reaction } from 'mobx';\nimport { observer } from 'mobx-react';\nimport * as React from 'react';\n\nimport { IMapData } from './map.data';\nimport { IMapProps, IPushpinOptionsData } from './map.props.autogenerated';\n\nexport interface IHeader {\n    headerProps: INodeProps;\n    heading: React.ReactNode;\n}\n\nexport interface IMapViewProps extends IMapProps<IMapData> {\n    ModuleProps: IModuleProps;\n    Header: IHeader;\n    MapProps: INodeProps;\n    Map: Microsoft.Maps.Map | undefined;\n}\n\n/**\n *\n * Map component\n * @extends {React.Component<IMapProps<IMapData>>}\n */\n@observer\nclass Map extends React.Component<IMapProps<IMapData>> {\n    public map: Microsoft.Maps.Map | undefined;\n    private mapRef: React.RefObject<HTMLElement> = React.createRef<HTMLElement>();\n\n    constructor(props: IMapProps<IMapData>) {\n        super(props);\n    }\n\n    public componentDidMount(): void {\n        const {\n            context: {\n                telemetry,\n                actionContext: {\n                    requestContext: {\n                        channel\n                    }\n                }\n            }\n        } = this.props;\n\n        if (channel && !channel.BingMapsApiKey) {\n            telemetry.error('BingMapsApiKey is missing.');\n            return;\n        }\n\n        if (channel && !channel.BingMapsEnabled) {\n            telemetry.error('Map is disabled from HQ.');\n            return;\n        }\n\n        reaction(\n            () => this.props.data.storeSelectorStateManager.result?.loadMapApi,\n            () => {\n                this.props.data.storeSelectorStateManager.result?.loadMapApi({\n                    key: channel?.BingMapsApiKey,\n                    lang: this.props.context?.actionContext?.requestContext?.channel?.ChannelCountryRegionISOCode,\n                    market: this.props.context?.actionContext?.requestContext?.channel?.DefaultLanguageId\n                });\n            }\n        );\n\n        reaction(\n            () => this.props.data.storeSelectorStateManager.result?.isMapApiLoaded,\n            () => {\n                this._initMap();\n            }\n        );\n\n        reaction(\n            () => {\n                return [this.props.data.storeSelectorStateManager.result?.context?.orgUnitStoreInformation,\n                this.props.data.storeSelectorStateManager.result?.selectedStoreLocationId];\n            },\n            async () => {\n                this._updateMap();\n            }\n        );\n    }\n\n    public render(): JSX.Element | null {\n\n        const {\n            config: {\n                heading,\n                className\n            },\n            data: {\n                storeSelectorStateManager: { result: storeSelectorStateManager }\n            }\n        } = this.props;\n\n        const displayMap = storeSelectorStateManager?.listMapViewState?.displayMap;\n\n        const viewProps: IMapViewProps = {\n            ...this.props,\n            ModuleProps: {\n                tag: 'div',\n                moduleProps: this.props,\n                className: classname('ms-map', { show: displayMap }, className)\n            },\n            Header: {\n                headerProps: { className: 'ms-map__header' },\n                heading: heading && heading.text && (\n                    <Msdyn365.Text\n                        className='ms-map__heading'\n                        {...heading}\n                        tag={heading.tag || 'h2'}\n                        text={heading.text}\n                        editProps={{ onEdit: this.handleHeadingChange, requestContext: this.props.context.request }}\n                    />\n                )\n            },\n            MapProps: {\n                tag: 'div',\n                className: 'ms-map__body',\n                ref: this.mapRef\n            },\n            Map: this.map\n        };\n\n        return this.props.renderView(viewProps) as React.ReactElement;\n    }\n\n    public handleHeadingChange = (event: Msdyn365.ContentEditableEvent) => this.props.config.heading!.text = event.target.value;\n\n    private _initMap = () => {\n        const {\n            context: {\n                actionContext: {\n                    requestContext: {\n                        channel\n                    }\n                }\n            },\n            data: {\n                storeSelectorStateManager: { result: storeSelectorStateManager }\n            }\n        } = this.props;\n        if (storeSelectorStateManager?.isMapApiLoaded) {\n\n            this.map = new Microsoft.Maps.Map(this.mapRef.current as HTMLElement, {\n                credentials: channel?.BingMapsApiKey,\n                pushpinAccessible: true\n            });\n        }\n    }\n\n    private _updateMap = () => {\n        const pushpinOptions = this.props.config.pushpinOptions;\n        const storeSelectorStateManager = this.props.data.storeSelectorStateManager?.result;\n        const orgUnitStoreInformation = storeSelectorStateManager?.context?.orgUnitStoreInformation;\n        const selectedStoreLocationId = storeSelectorStateManager?.selectedStoreLocationId;\n\n        if (this.map && orgUnitStoreInformation) {\n            let mapLocation: OrgUnitLocation | undefined;\n            this.map.entities.clear();\n            const pushpins: Microsoft.Maps.IPrimitive[] = [];\n\n            orgUnitStoreInformation.map((unitStoreInfo: IFullOrgUnitAvailability, index: number) => {\n                const storeLocation = unitStoreInfo?.OrgUnitAvailability?.OrgUnitLocation;\n\n                if (storeLocation?.Latitude && storeLocation.Longitude) {\n                    const isSelectedLocation = selectedStoreLocationId === storeLocation.OrgUnitNumber;\n                    const options = this._getPushpinOptions(isSelectedLocation, index, pushpinOptions);\n                    const pushpin = new Microsoft.Maps.Pushpin(new Microsoft.Maps.Location(storeLocation.Latitude, storeLocation.Longitude), options);\n\n                    Microsoft.Maps.Events.addHandler(pushpin, 'click', () => storeLocation.OrgUnitNumber && storeSelectorStateManager?.setSelectedStoreLocationId(storeLocation.OrgUnitNumber));\n\n                    isSelectedLocation ? pushpins.unshift(pushpin) : pushpins.push(pushpin);\n\n                    if (isSelectedLocation) {\n                        mapLocation = storeLocation;\n                    }\n                }\n            });\n\n            if (mapLocation) {\n                const currLocation = new Microsoft.Maps.Location(mapLocation.Latitude, mapLocation.Longitude);\n                this.map.setView({ center: currLocation });\n            } else {\n                // Create a LocationRect from array of pushpins and set the map view.\n                this.map.setView({\n                    bounds: Microsoft.Maps.LocationRect.fromShapes(pushpins)\n                });\n            }\n\n            this.map.setOptions({ pushpinAccessible: true });\n            this.map?.entities.push(pushpins);\n        }\n    }\n\n    private _getPushpinOptions = (isSelectedLocation: boolean, index: number, pushpinOptions?: IPushpinOptionsData) => {\n        const text = pushpinOptions?.showIndex ? (index + 1).toString() : undefined;\n\n        const size = pushpinOptions?.size || 1;\n        const color = isSelectedLocation ? pushpinOptions?.selectionColor || pushpinOptions?.color : pushpinOptions?.color;\n        const icon = this._getSvgIcon(size, color, text);\n\n        return {\n            // fallback if icon doesn't render properly\n            color: isSelectedLocation ? pushpinOptions?.selectionColor : pushpinOptions?.color,\n            icon: icon\n        };\n    }\n\n    private _getSvgIcon = (size: number, color?: string, text?: string) => {\n        const baseValue: number = 32;\n        return `<svg xmlns=\"http://www.w3.org/2000/svg\" width=\"${baseValue * size}\" height=\"${baseValue * size}\" viewBox=\"0 0 365 560\">\n                    <path fill=\"${color}\" d=\"M182.9,551.7c0,0.1,0.2,0.3,0.2,0.3S358.3,283,358.3,194.6c0-130.1-88.8-186.7-175.4-186.9 C96.3,7.9,7.5,64.5,7.5,194.6c0,88.4,175.3,357.4,175.3,357.4S182.9,551.7,182.9,551.7z\" />\n                    ${text ? `<text x=\"185\" y=\"280\" style=\"font-size:220px;fill:#ffffff;\" text-anchor=\"middle\">${text}</text>` : ''}\n                </svg>`;\n    }\n}\n\nexport default Map;\n"],"sourceRoot":"./src/"},"metadata":{},"sourceType":"module"}