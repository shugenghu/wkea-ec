{"ast":null,"code":"import\"core-js/modules/es.promise.js\";import\"core-js/modules/web.dom-collections.iterator.js\";import{getCartState,getCheckoutState}from'@msdyn365-commerce/global-state';async function emptyActiveCart(ctx){let cartState;let checkoutState;const lineItemIdsToRemove=[];try{cartState=await getCartState(ctx);checkoutState=await getCheckoutState(ctx);}catch(e){throw e;}if(!cartState||!cartState.cart){throw new Error('Fail to fetch active cart');}if(!checkoutState||!checkoutState.checkoutCart){throw new Error('Fail to fetch checkoutCart cart');}const activeCart=cartState.cart;const checkoutCart=checkoutState.checkoutCart.cart;for(const activeCartLine of activeCart.CartLines||[]){for(const checkoutCartLine of checkoutCart.CartLines||[]){if(activeCartLine.LineId&&activeCartLine.LineId===checkoutCartLine.LineId){lineItemIdsToRemove.push(activeCartLine.LineId);}}}try{await cartState.removeCartLines({cartLineIds:lineItemIdsToRemove});await cartState.removeAllPromoCodes({});await checkoutState.removeCheckoutCartId({});}catch(e){throw e;}}export default emptyActiveCart;","map":{"version":3,"sources":["modules/checkout/methods/empty-active-cart.ts"],"names":[],"mappings":"8FACA,OAAS,YAAT,CAAuB,gBAAvB,KAA+C,iCAA/C,CAEA,cAAe,CAAA,eAAf,CAA+B,GAA/B,CAAkD,CAC9C,GAAI,CAAA,SAAJ,CACA,GAAI,CAAA,aAAJ,CACA,KAAM,CAAA,mBAAmB,CAAG,EAA5B,CAEA,GAAI,CACA,SAAS,CAAG,KAAM,CAAA,YAAY,CAAC,GAAD,CAA9B,CACA,aAAa,CAAG,KAAM,CAAA,gBAAgB,CAAC,GAAD,CAAtC,CACH,CAAC,MAAO,CAAP,CAAU,CACR,KAAM,CAAA,CAAN,CACH,CAED,GAAI,CAAC,SAAD,EAAc,CAAC,SAAS,CAAC,IAA7B,CAAmC,CAC/B,KAAM,IAAI,CAAA,KAAJ,CAAU,2BAAV,CAAN,CACH,CAED,GAAI,CAAC,aAAD,EAAkB,CAAC,aAAa,CAAC,YAArC,CAAmD,CAC/C,KAAM,IAAI,CAAA,KAAJ,CAAU,iCAAV,CAAN,CACH,CAED,KAAM,CAAA,UAAU,CAAG,SAAS,CAAC,IAA7B,CACA,KAAM,CAAA,YAAY,CAAG,aAAa,CAAC,YAAd,CAA2B,IAAhD,CAEA,IAAK,KAAM,CAAA,cAAX,GAA6B,CAAA,UAAU,CAAC,SAAX,EAAwB,EAArD,CAAyD,CACrD,IAAK,KAAM,CAAA,gBAAX,GAA+B,CAAA,YAAY,CAAC,SAAb,EAA0B,EAAzD,CAA6D,CACzD,GAAI,cAAc,CAAC,MAAf,EAAyB,cAAc,CAAC,MAAf,GAA0B,gBAAgB,CAAC,MAAxE,CAAgF,CAC5E,mBAAmB,CAAC,IAApB,CAAyB,cAAc,CAAC,MAAxC,EACH,CACJ,CACJ,CAED,GAAI,CACA,KAAM,CAAA,SAAS,CAAC,eAAV,CAA0B,CAAE,WAAW,CAAE,mBAAf,CAA1B,CAAN,CACA,KAAM,CAAA,SAAS,CAAC,mBAAV,CAA8B,EAA9B,CAAN,CACA,KAAM,CAAA,aAAa,CAAC,oBAAd,CAAmC,EAAnC,CAAN,CACH,CAAC,MAAO,CAAP,CAAU,CACR,KAAM,CAAA,CAAN,CACH,CACJ,CAED,cAAe,CAAA,eAAf","sourcesContent":["import { IActionContext } from '@msdyn365-commerce/core';\nimport { getCartState, getCheckoutState } from '@msdyn365-commerce/global-state';\n\nasync function emptyActiveCart(ctx: IActionContext): Promise<void> {\n    let cartState;\n    let checkoutState;\n    const lineItemIdsToRemove = [];\n\n    try {\n        cartState = await getCartState(ctx);\n        checkoutState = await getCheckoutState(ctx);\n    } catch (e) {\n        throw e;\n    }\n\n    if (!cartState || !cartState.cart) {\n        throw new Error('Fail to fetch active cart');\n    }\n\n    if (!checkoutState || !checkoutState.checkoutCart) {\n        throw new Error('Fail to fetch checkoutCart cart');\n    }\n\n    const activeCart = cartState.cart;\n    const checkoutCart = checkoutState.checkoutCart.cart;\n\n    for (const activeCartLine of activeCart.CartLines || []) {\n        for (const checkoutCartLine of checkoutCart.CartLines || []) {\n            if (activeCartLine.LineId && activeCartLine.LineId === checkoutCartLine.LineId) {\n                lineItemIdsToRemove.push(activeCartLine.LineId);\n            }\n        }\n    }\n\n    try {\n        await cartState.removeCartLines({ cartLineIds: lineItemIdsToRemove });\n        await cartState.removeAllPromoCodes({});\n        await checkoutState.removeCheckoutCartId({});\n    } catch (e) {\n        throw e;\n    }\n}\n\nexport default emptyActiveCart;\n"],"sourceRoot":"./src/"},"metadata":{},"sourceType":"module"}