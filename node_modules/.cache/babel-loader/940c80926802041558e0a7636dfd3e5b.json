{"ast":null,"code":"import _regeneratorRuntime from\"@babel/runtime/regenerator\";import _asyncToGenerator from\"@babel/runtime/helpers/esm/asyncToGenerator\";/*!\r\n * Copyright (c) Microsoft Corporation.\r\n * All rights reserved. See LICENSE in the project root for license information.\r\n */import{createDataActionHook}from'@msdyn365-commerce/core';import{TelemetryEvent}from'@msdyn365-commerce/telemetry-internal';import{getProductTransactionInfoFromSalesOrder}from'./telemetry.action.helper';var beforePurchase=/*#__PURE__*/function(){var _ref=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee(inputs){return _regeneratorRuntime.wrap(function _callee$(_context){while(1){switch(_context.prev=_context.next){case 0:case\"end\":return _context.stop();}}},_callee);}));return function beforePurchase(_x){return _ref.apply(this,arguments);};}();var afterPurchase=/*#__PURE__*/function(){var _ref2=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee2(_inputs,salesOrder,actionContext){return _regeneratorRuntime.wrap(function _callee2$(_context2){while(1){switch(_context2.prev=_context2.next){case 0:if(window&&window._msdyn365&&window._msdyn365.telemetry){actionContext.requestContext.telemetryData[TelemetryEvent.Purchase]=getProductTransactionInfoFromSalesOrder(salesOrder,actionContext.requestContext.telemetryData);window._msdyn365.telemetry.logEvent(TelemetryEvent.Purchase,actionContext.requestContext.telemetryData[TelemetryEvent.Purchase]);}case 1:case\"end\":return _context2.stop();}}},_callee2);}));return function afterPurchase(_x2,_x3,_x4){return _ref2.apply(this,arguments);};}();createDataActionHook({actionId:'@msdyn365-commerce/retail-proxy/Carts/Checkout',postReaderHook:afterPurchase,preReaderHook:beforePurchase});","map":{"version":3,"sources":["actions/purchase-telemetry.action.ts"],"names":[],"mappings":"uIAAA;;;AAGG,GAEH,OAAS,oBAAT,KAAmE,yBAAnE,CAEA,OAAS,cAAT,KAA+B,uCAA/B,CACA,OAAS,uCAAT,KAAwD,2BAAxD,CAEA,GAAM,CAAA,cAAc,0FAAG,iBAAO,MAAP,iKAAH,kBAAd,CAAA,cAAc,4CAApB,CAIA,GAAM,CAAA,aAAa,2FAAG,kBAClB,OADkB,CAElB,UAFkB,CAGlB,aAHkB,sHAMlB,GAAI,MAAM,EAAI,MAAM,CAAC,SAAjB,EAA8B,MAAM,CAAC,SAAP,CAAiB,SAAnD,CAA8D,CAE1D,aAAa,CAAC,cAAd,CAA6B,aAA7B,CAA2C,cAAc,CAAC,QAA1D,EAAsE,uCAAuC,CACzG,UADyG,CAEzG,aAAa,CAAC,cAAd,CAA6B,aAF4E,CAA7G,CAMA,MAAM,CAAC,SAAP,CAAiB,SAAjB,CAA2B,QAA3B,CAAoC,cAAc,CAAC,QAAnD,CAA6D,aAAa,CAAC,cAAd,CAA6B,aAA7B,CAA2C,cAAc,CAAC,QAA1D,CAA7D,EACH,CAfiB,wDAAH,kBAAb,CAAA,aAAa,sDAAnB,CAkBA,oBAAoB,CAAC,CACjB,QAAQ,CAAE,gDADO,CAEjB,cAAc,CAAE,aAFC,CAGjB,aAAa,CAAE,cAHE,CAAD,CAApB","sourcesContent":["/*!\n * Copyright (c) Microsoft Corporation.\n * All rights reserved. See LICENSE in the project root for license information.\n */\n\nimport { createDataActionHook, IActionContext, IActionInput } from '@msdyn365-commerce/core';\nimport { SalesOrder } from '@msdyn365-commerce/retail-proxy';\nimport { TelemetryEvent } from '@msdyn365-commerce/telemetry-internal';\nimport { getProductTransactionInfoFromSalesOrder } from './telemetry.action.helper';\n\nconst beforePurchase = async (inputs: IActionInput | IActionInput[]) => {\n    // placeholder\n};\n\nconst afterPurchase = async (\n    _inputs: IActionInput | IActionInput[],\n    salesOrder: SalesOrder | SalesOrder[],\n    actionContext: IActionContext\n) => {\n    // @ts-ignore\n    if (window && window._msdyn365 && window._msdyn365.telemetry) {\n        // store the purchased product information so that we can avoid \"code triggered\" remove from cart telemetry event.\n        actionContext.requestContext.telemetryData[TelemetryEvent.Purchase] = getProductTransactionInfoFromSalesOrder(\n            salesOrder,\n            actionContext.requestContext.telemetryData\n        );\n\n        // @ts-ignore\n        window._msdyn365.telemetry.logEvent(TelemetryEvent.Purchase, actionContext.requestContext.telemetryData[TelemetryEvent.Purchase]);\n    }\n};\n\ncreateDataActionHook({\n    actionId: '@msdyn365-commerce/retail-proxy/Carts/Checkout',\n    postReaderHook: afterPurchase,\n    preReaderHook: beforePurchase\n});\n"],"sourceRoot":"./src/"},"metadata":{},"sourceType":"module"}