{"ast":null,"code":"import _defineProperty from\"@babel/runtime/helpers/esm/defineProperty\";function ownKeys(object,enumerableOnly){var keys=Object.keys(object);if(Object.getOwnPropertySymbols){var symbols=Object.getOwnPropertySymbols(object);if(enumerableOnly)symbols=symbols.filter(function(sym){return Object.getOwnPropertyDescriptor(object,sym).enumerable;});keys.push.apply(keys,symbols);}return keys;}function _objectSpread(target){for(var i=1;i<arguments.length;i++){var source=arguments[i]!=null?arguments[i]:{};if(i%2){ownKeys(Object(source),true).forEach(function(key){_defineProperty(target,key,source[key]);});}else if(Object.getOwnPropertyDescriptors){Object.defineProperties(target,Object.getOwnPropertyDescriptors(source));}else{ownKeys(Object(source)).forEach(function(key){Object.defineProperty(target,key,Object.getOwnPropertyDescriptor(source,key));});}}return target;}import{getTelemetryObject}from'@msdyn365-commerce-modules/utilities';import*as MsDyn365 from'@msdyn365-commerce/core';import classnames from'classnames';import*as React from'react';import{CookieComplianceAcceptButton,CookieComplianceLinks}from'./components';class CookieCompliance extends React.PureComponent{constructor(props){super(props);this.telemetryContent=getTelemetryObject(this.props.context.request.telemetryPageName,this.props.friendlyName,this.props.telemetry);this.handleLinkTextChange=linkIndex=>event=>{if(this.props.config.actionLinks&&this.props.config.actionLinks[linkIndex]){this.props.config.actionLinks[linkIndex].linkText=event.target.value;}};this.handleContentChange=event=>this.props.config.content=event.target.value;this.state={visible:false};this.cookieRef=/*#__PURE__*/React.createRef();this._onDismiss=this._onDismiss.bind(this);}componentDidMount(){const{context}=this.props;if(context&&context.request&&context.request.cookies&&!context.request.cookies.isConsentGiven()){this.setState({visible:true});}}render(){const{config,context,resources,telemetry}=this.props;const{acceptCookiesButtonText,acceptCookiesAriaLabel}=resources;const{visible}=this.state;const isConsentGiven=context&&context.request&&context.request.cookies&&context.request.cookies.isConsentGiven();let moduleConfig;try{moduleConfig=config;}catch(e){telemetry.error(\"Something went wrong while rendering the alert module ------\".concat(e));return/*#__PURE__*/React.createElement(\"div\",null,e);}if(isConsentGiven&&!visible){this.props.context.telemetry.error('Cookie Compliance content is empty, module wont render.');return null;}const viewProps=_objectSpread(_objectSpread({},this.props),{},{onDismiss:this._onDismiss,CookieComplianceBanner:{moduleProps:this.props,className:classnames('ms-cookie-compliance',moduleConfig.className),ref:this.cookieRef},AlertProps:{className:'ms-cookie-compliance__container',color:'white',fade:false},Content:{className:'ms-cookie-compliance__content'},text:moduleConfig.content&&/*#__PURE__*/React.createElement(MsDyn365.RichTextComponent,{className:'ms-cookie-compliance__text',text:moduleConfig.content,editProps:{onEdit:this.handleContentChange,requestContext:this.props.context.request}}),links:moduleConfig.actionLinks&&moduleConfig.actionLinks.length>0&&/*#__PURE__*/React.createElement(CookieComplianceLinks,{links:moduleConfig.actionLinks,onTextChange:this.handleLinkTextChange,requestContext:this.props.context.request,telemetryContent:this.telemetryContent}),acceptButton:/*#__PURE__*/React.createElement(CookieComplianceAcceptButton,{onClose:this._onDismiss,acceptCookiesButtonText:acceptCookiesButtonText,acceptCookiesButtonAriaLabel:acceptCookiesAriaLabel,telemetryContent:this.telemetryContent})});return this.props.renderView(viewProps);}_onDismiss(){const{context}=this.props;if(context&&context.request&&context.request.cookies){context.request.cookies.setConsentCookie();location.reload();}this.setState({visible:false});}}export default CookieCompliance;","map":{"version":3,"sources":["modules/cookie-compliance/cookie-compliance.tsx"],"names":[],"mappings":"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","sourcesContent":["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { getTelemetryObject, IAlertProps, IModuleProps, INodeProps, ITelemetryContent } from '@msdyn365-commerce-modules/utilities';\nimport * as MsDyn365 from '@msdyn365-commerce/core';\nimport classnames from 'classnames';\nimport * as React from 'react';\nimport { CookieComplianceAcceptButton, CookieComplianceLinks} from './components';\nimport { ICookieComplianceConfig, ICookieComplianceProps } from './cookie-compliance.props.autogenerated';\n\nexport interface IAlertState {\n    visible: boolean;\n}\n\nexport interface ICookieComplianceViewProps extends ICookieComplianceProps<{}> {\n    CookieComplianceBanner: IModuleProps;\n    AlertProps: IAlertProps;\n    Content: INodeProps;\n    text?: React.ReactNode;\n    links?: React.ReactNode;\n    acceptButton?: React.ReactNode;\n    className: string;\n    onDismiss(): void;\n}\n\n/**\n *\n * CookieCompliance component\n * @extends {React.PureComponent<ICookieComplianceProps<IHeroConfig>>}\n */\nclass CookieCompliance extends React.PureComponent<ICookieComplianceProps<ICookieComplianceConfig>, IAlertState> {\n    private cookieRef: React.RefObject<HTMLInputElement>;\n    private telemetryContent: ITelemetryContent = getTelemetryObject(this.props.context.request.telemetryPageName!,\n                                                                     this.props.friendlyName,\n                                                                     this.props.telemetry);\n    constructor(props: ICookieComplianceProps<ICookieComplianceConfig>) {\n        super(props);\n        this.state = {visible:false};\n        this.cookieRef = React.createRef();\n        this._onDismiss = this._onDismiss.bind(this);\n    }\n\n    public componentDidMount(): void {\n        const { context } = this.props;\n\n        if (context && context.request && context.request.cookies && !context.request.cookies.isConsentGiven()) {\n            this.setState({visible: true});\n        }\n    }\n\n    public render(): JSX.Element | null {\n\n        const { config, context, resources, telemetry } = this.props;\n        const { acceptCookiesButtonText, acceptCookiesAriaLabel } = resources;\n        const { visible } = this.state;\n\n        const isConsentGiven = context && context.request && context.request.cookies && context.request.cookies.isConsentGiven();\n        let moduleConfig: ICookieComplianceConfig;\n\n        try {\n            moduleConfig = config;\n        } catch(e) {\n            telemetry.error(`Something went wrong while rendering the alert module ------${e}`);\n            return <div>{e}</div>;\n        }\n\n        if (isConsentGiven && !visible) {\n            this.props.context.telemetry.error('Cookie Compliance content is empty, module wont render.');\n            return null;\n        }\n\n        const viewProps = {\n            ...this.props,\n            onDismiss: this._onDismiss,\n            CookieComplianceBanner: {\n                moduleProps: this.props,\n                className: classnames('ms-cookie-compliance', moduleConfig.className),\n                ref: this.cookieRef,\n            },\n            AlertProps: {\n                className: 'ms-cookie-compliance__container',\n                color: 'white',\n                fade: false\n            },\n            Content: {\n                className: 'ms-cookie-compliance__content'\n            },\n            text: moduleConfig.content && (\n                <MsDyn365.RichTextComponent\n                    className='ms-cookie-compliance__text'\n                    text={ moduleConfig.content }\n                    editProps= {{onEdit: this.handleContentChange, requestContext: this.props.context.request}}\n                />\n            ),\n            links: moduleConfig.actionLinks && moduleConfig.actionLinks.length  > 0 && (\n                <CookieComplianceLinks\n                    links={ moduleConfig.actionLinks }\n                    onTextChange= {this.handleLinkTextChange}\n                    requestContext= {this.props.context.request}\n                    telemetryContent= {this.telemetryContent}\n                />\n            ),\n            acceptButton: (\n                <CookieComplianceAcceptButton\n                    onClose={this._onDismiss}\n                    acceptCookiesButtonText={acceptCookiesButtonText}\n                    acceptCookiesButtonAriaLabel={acceptCookiesAriaLabel}\n                    telemetryContent={this.telemetryContent}\n                />)\n        };\n\n        return this.props.renderView(viewProps) as React.ReactElement;\n    }\n\n    /* Handle link text change*/\n    public handleLinkTextChange = (linkIndex: number) => (event: MsDyn365.ContentEditableEvent) => {\n        if(this.props.config.actionLinks && this.props.config.actionLinks[linkIndex]) {\n        this.props.config.actionLinks[linkIndex].linkText = event.target.value;\n        }\n    };\n\n    /* Handle text content change*/\n    public handleContentChange = (event: MsDyn365.ContentEditableEvent) => this.props.config.content = event.target.value;\n\n    private _onDismiss(): void {\n        const { context } = this.props;\n\n        if (context && context.request && context.request.cookies) {\n            context.request.cookies.setConsentCookie();\n            location.reload();\n        }\n        this.setState({visible: false});\n    }\n}\n\nexport default CookieCompliance;"],"sourceRoot":"./src/"},"metadata":{},"sourceType":"module"}