{"ast":null,"code":"import _regeneratorRuntime from\"@babel/runtime/regenerator\";import _asyncToGenerator from\"@babel/runtime/helpers/esm/asyncToGenerator\";import _toConsumableArray from\"@babel/runtime/helpers/esm/toConsumableArray\";import _defineProperty from\"@babel/runtime/helpers/esm/defineProperty\";function ownKeys(object,enumerableOnly){var keys=Object.keys(object);if(Object.getOwnPropertySymbols){var symbols=Object.getOwnPropertySymbols(object);if(enumerableOnly)symbols=symbols.filter(function(sym){return Object.getOwnPropertyDescriptor(object,sym).enumerable;});keys.push.apply(keys,symbols);}return keys;}function _objectSpread(target){for(var i=1;i<arguments.length;i++){var source=arguments[i]!=null?arguments[i]:{};if(i%2){ownKeys(Object(source),true).forEach(function(key){_defineProperty(target,key,source[key]);});}else if(Object.getOwnPropertyDescriptors){Object.defineProperties(target,Object.getOwnPropertyDescriptors(source));}else{ownKeys(Object(source)).forEach(function(key){Object.defineProperty(target,key,Object.getOwnPropertyDescriptor(source,key));});}}return target;}import{createObservableDataAction}from'@msdyn365-commerce/core';import{createAddressManagementInput,doAddressManagementOperation}from'./add-address';export function updatePrimaryAddressHandler(customer,address){customer.Addresses=setPrimaryAddress(_objectSpread({},address),_toConsumableArray(customer.Addresses||[]));return customer;}export function updatePrimaryAddressAction(_x,_x2){return _updatePrimaryAddressAction.apply(this,arguments);}/**\r\n * The updatePrimaryAddress data action\r\n * Calls the read RetailServer API to get information about a customer\r\n * Merge the passed address information with the address information from\r\n * the retireved customer, and then updates that customer via the update RetailServer API.\r\n */function _updatePrimaryAddressAction(){_updatePrimaryAddressAction=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee(input,ctx){return _regeneratorRuntime.wrap(function _callee$(_context){while(1){switch(_context.prev=_context.next){case 0:return _context.abrupt(\"return\",doAddressManagementOperation(input,ctx,updatePrimaryAddressHandler));case 1:case\"end\":return _context.stop();}}},_callee);}));return _updatePrimaryAddressAction.apply(this,arguments);}export default createObservableDataAction({id:'@msdyn365-commerce-modules/retail-actions/update-primary-address',action:updatePrimaryAddressAction,input:createAddressManagementInput,isBatched:false});var setPrimaryAddress=function setPrimaryAddress(primaryAddresses,addresses){return addresses.map(function(addr){if(addr.RecordId===primaryAddresses.RecordId){addr.IsPrimary=true;}else{addr.IsPrimary=false;}return addr;});};","map":{"version":3,"sources":["../../src/update-primary-address.ts"],"names":[],"mappings":"ujCACA,OAAS,0BAAT,KAAuE,yBAAvE,CAEA,OAAS,4BAAT,CAAuC,4BAAvC,KAAoG,eAApG,CAEA,MAAM,SAAU,CAAA,2BAAV,CAAsC,QAAtC,CAA0D,OAA1D,CAA0E,CAC5E,QAAQ,CAAC,SAAT,CAAqB,iBAAiB,kBAAM,OAAN,qBAAsB,QAAQ,CAAC,SAAT,EAAsB,EAA5C,EAAtC,CACA,MAAO,CAAA,QAAP,CACH,CAED,eAAsB,CAAA,0BAAtB,mEAIA;;;;;AAKG,G,2HATI,iBAA0C,KAA1C,CAA0E,GAA1E,kJACI,4BAA4B,CAAC,KAAD,CAAQ,GAAR,CAAa,2BAAb,CADhC,wD,6DAUP,cAAe,CAAA,0BAA0B,CAAY,CACjD,EAAE,CAAE,kEAD6C,CAEjD,MAAM,CAAsB,0BAFqB,CAGjD,KAAK,CAAuD,4BAHX,CAIjD,SAAS,CAAE,KAJsC,CAAZ,CAAzC,CAOA,GAAM,CAAA,iBAAiB,CAAG,QAApB,CAAA,iBAAoB,CAAC,gBAAD,CAA4B,SAA5B,CAA+D,CACrF,MAAO,CAAA,SAAS,CAAC,GAAV,CAAc,SAAA,IAAI,CAAG,CACxB,GAAI,IAAI,CAAC,QAAL,GAAkB,gBAAgB,CAAC,QAAvC,CAAiD,CAC7C,IAAI,CAAC,SAAL,CAAiB,IAAjB,CACH,CAFD,IAEO,CACH,IAAI,CAAC,SAAL,CAAiB,KAAjB,CACH,CACD,MAAO,CAAA,IAAP,CACH,CAPM,CAAP,CAQH,CATD","sourcesContent":["import { IAction, IActionContext, IActionInput } from '@msdyn365-commerce/core';\nimport { createObservableDataAction, IAny, ICreateActionContext } from '@msdyn365-commerce/core';\nimport { Address, Customer } from '@msdyn365-commerce/retail-proxy/dist/Entities/CommerceTypes.g';\nimport { createAddressManagementInput, doAddressManagementOperation, IAddressManagementInput } from './add-address';\n\nexport function updatePrimaryAddressHandler(customer: Customer, address: Address): Customer {\n    customer.Addresses = setPrimaryAddress({ ...address }, [...(customer.Addresses || [])]);\n    return customer;\n}\n\nexport async function updatePrimaryAddressAction(input: IAddressManagementInput, ctx: IActionContext): Promise<Address[]> {\n    return doAddressManagementOperation(input, ctx, updatePrimaryAddressHandler);\n}\n\n/**\n * The updatePrimaryAddress data action\n * Calls the read RetailServer API to get information about a customer\n * Merge the passed address information with the address information from\n * the retireved customer, and then updates that customer via the update RetailServer API.\n */\nexport default createObservableDataAction<Address[]>({\n    id: '@msdyn365-commerce-modules/retail-actions/update-primary-address',\n    action: <IAction<Address[]>>updatePrimaryAddressAction,\n    input: <(args: ICreateActionContext) => IActionInput>(<IAny>createAddressManagementInput),\n    isBatched: false\n});\n\nconst setPrimaryAddress = (primaryAddresses: Address, addresses: Address[]): Address[] => {\n    return addresses.map(addr => {\n        if (addr.RecordId === primaryAddresses.RecordId) {\n            addr.IsPrimary = true;\n        } else {\n            addr.IsPrimary = false;\n        }\n        return addr;\n    });\n};\n"],"sourceRoot":""},"metadata":{},"sourceType":"module"}