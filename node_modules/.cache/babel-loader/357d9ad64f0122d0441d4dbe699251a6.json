{"ast":null,"code":"import _regeneratorRuntime from\"@babel/runtime/regenerator\";import _asyncToGenerator from\"@babel/runtime/helpers/esm/asyncToGenerator\";/*!\r\n * Copyright (c) Microsoft Corporation.\r\n * All rights reserved. See LICENSE in the project root for license information.\r\n */import{createDataActionHook}from'@msdyn365-commerce/core';var beforeRead=/*#__PURE__*/function(){var _ref=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee(inputs){return _regeneratorRuntime.wrap(function _callee$(_context){while(1){switch(_context.prev=_context.next){case 0:case\"end\":return _context.stop();}}},_callee);}));return function beforeRead(_x){return _ref.apply(this,arguments);};}();var afterRead=/*#__PURE__*/function(){var _ref2=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee2(_inputs,cart,actionContext){var activeCart;return _regeneratorRuntime.wrap(function _callee2$(_context2){while(1){switch(_context2.prev=_context2.next){case 0:_context2.prev=0;_context2.next=3;return Promise.resolve(Array.isArray(cart)?cart[0]:cart);case 3:activeCart=_context2.sent;actionContext.requestContext.telemetryData[\"activeCart\"]=activeCart;_context2.next=10;break;case 7:_context2.prev=7;_context2.t0=_context2[\"catch\"](0);actionContext.telemetry.debug('ReadCart post-data action hook failed.',_context2.t0);case 10:case\"end\":return _context2.stop();}}},_callee2,null,[[0,7]]);}));return function afterRead(_x2,_x3,_x4){return _ref2.apply(this,arguments);};}();createDataActionHook({actionId:'@msdyn365-commerce/retail-proxy/Carts/Read',postReaderHook:afterRead,preReaderHook:beforeRead});","map":{"version":3,"sources":["actions/readCart-telemetry.action.ts"],"names":[],"mappings":"uIAAA;;;AAGG,GAEH,OAAS,oBAAT,KAAmE,yBAAnE,CAGA,GAAM,CAAA,UAAU,0FAAG,iBAAO,MAAP,iKAAH,kBAAV,CAAA,UAAU,4CAAhB,CAIA,GAAM,CAAA,SAAS,2FAAG,kBAAO,OAAP,CAA+C,IAA/C,CAAoE,aAApE,6KAEe,CAAA,OAAO,CAAC,OAAR,CAAgB,KAAK,CAAC,OAAN,CAAc,IAAd,EAAsB,IAAI,CAAC,CAAD,CAA1B,CAAgC,IAAhD,CAFf,QAEJ,UAFI,gBAGV,aAAa,CAAC,cAAd,CAA6B,aAA7B,eAA2D,UAA3D,CAHU,mFAKV,aAAa,CAAC,SAAd,CAAwB,KAAxB,CAA8B,wCAA9B,eALU,sEAAH,kBAAT,CAAA,SAAS,sDAAf,CASA,oBAAoB,CAAC,CACjB,QAAQ,CAAE,4CADO,CAEjB,cAAc,CAAE,SAFC,CAGjB,aAAa,CAAE,UAHE,CAAD,CAApB","sourcesContent":["/*!\n * Copyright (c) Microsoft Corporation.\n * All rights reserved. See LICENSE in the project root for license information.\n */\n\nimport { createDataActionHook, IActionContext, IActionInput } from '@msdyn365-commerce/core';\nimport { Cart } from '@msdyn365-commerce/retail-proxy';\n\nconst beforeRead = async (inputs: IActionInput | IActionInput[]) => {\n    // placeholder\n};\n\nconst afterRead = async (_inputs: IActionInput | IActionInput[], cart: Cart | Cart[], actionContext: IActionContext) => {\n    try {\n        const activeCart = await Promise.resolve(Array.isArray(cart) ? cart[0] : cart);\n        actionContext.requestContext.telemetryData[`activeCart`] = activeCart;\n    } catch (e) {\n        actionContext.telemetry.debug('ReadCart post-data action hook failed.', e);\n    }\n};\n\ncreateDataActionHook({\n    actionId: '@msdyn365-commerce/retail-proxy/Carts/Read',\n    postReaderHook: afterRead,\n    preReaderHook: beforeRead\n});\n"],"sourceRoot":"./src/"},"metadata":{},"sourceType":"module"}