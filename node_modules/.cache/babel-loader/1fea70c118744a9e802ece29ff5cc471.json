{"ast":null,"code":"import\"core-js/modules/es.object.assign.js\";import\"core-js/modules/es.promise.js\";import\"core-js/modules/web.dom-collections.iterator.js\";import{Button,getPayloadObject,getTelemetryAttributes}from'@msdyn365-commerce-modules/utilities';import{TelemetryEvent}from'@msdyn365-commerce/core';import classnames from'classnames';import React,{useState}from'react';const CheckoutPlaceOrderButton=(_ref)=>{let{placeOrderText,canPlaceOrder,placeOrder,telemetryContent}=_ref;const[isBusy,setIsBusy]=useState(false);const payload=getPayloadObject(TelemetryEvent.Purchase,telemetryContent,placeOrderText,'');const attributes=getTelemetryAttributes(telemetryContent,payload);const onPlaceOrder=async()=>{if(isBusy||!canPlaceOrder){return;}setIsBusy(true);await placeOrder();setIsBusy(false);};return/*#__PURE__*/React.createElement(Button,Object.assign({className:classnames('ms-checkout__btn-place-order',{'is-busy':isBusy}),color:'primary',onClick:onPlaceOrder,title:placeOrderText},attributes,{disabled:!canPlaceOrder}),placeOrderText);};export default CheckoutPlaceOrderButton;","map":{"version":3,"sources":["modules/checkout/components/place-order-button.tsx"],"names":[],"mappings":"0IAIA,OAAS,MAAT,CAAiB,gBAAjB,CAAmC,sBAAnC,KAAoF,sCAApF,CACA,OAAS,cAAT,KAA+B,yBAA/B,CACA,MAAO,CAAA,UAAP,KAAuB,YAAvB,CACA,MAAO,CAAA,KAAP,EAAgB,QAAhB,KAAgC,OAAhC,CASA,KAAM,CAAA,wBAAwB,CAA6C,QAAoE,IAAnE,CAAE,cAAF,CAAkB,aAAlB,CAAiC,UAAjC,CAA6C,gBAA7C,CAAmE,MAC3I,KAAM,CAAC,MAAD,CAAS,SAAT,EAAsB,QAAQ,CAAC,KAAD,CAApC,CACA,KAAM,CAAA,OAAO,CAAG,gBAAgB,CAAC,cAAc,CAAC,QAAhB,CAA0B,gBAA1B,CAA6C,cAA7C,CAA6D,EAA7D,CAAhC,CACA,KAAM,CAAA,UAAU,CAAG,sBAAsB,CAAC,gBAAD,CAAoB,OAApB,CAAzC,CACA,KAAM,CAAA,YAAY,CAAG,SAAW,CAC5B,GAAI,MAAM,EAAI,CAAC,aAAf,CAA8B,CAC1B,OACH,CACD,SAAS,CAAC,IAAD,CAAT,CACA,KAAM,CAAA,UAAU,EAAhB,CACA,SAAS,CAAC,KAAD,CAAT,CACH,CAPD,CAQA,mBACI,KAAA,CAAA,aAAA,CAAC,MAAD,CAAO,MAAA,CAAA,MAAA,CAAA,CACH,SAAS,CAAE,UAAU,CAAC,8BAAD,CAAiC,CAAE,UAAW,MAAb,CAAjC,CADlB,CAEH,KAAK,CAAC,SAFH,CAGH,OAAO,CAAE,YAHN,CAIH,KAAK,CAAE,cAJJ,CAAA,CAKC,UALD,CAKW,CACd,QAAQ,CAAE,CAAC,aADG,CALX,CAAP,CAQK,cARL,CADJ,CAYH,CAxBD,CA0BA,cAAe,CAAA,wBAAf","sourcesContent":["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/ //\nimport { Button, getPayloadObject, getTelemetryAttributes, ITelemetryContent } from '@msdyn365-commerce-modules/utilities';\nimport { TelemetryEvent } from '@msdyn365-commerce/core';\nimport classnames from 'classnames';\nimport React, { useState } from 'react';\n\ninterface ICheckoutPlaceOrderButtonProps {\n    canPlaceOrder: boolean;\n    placeOrderText: string;\n    telemetryContent?: ITelemetryContent;\n    placeOrder(): Promise<void>;\n}\n\nconst CheckoutPlaceOrderButton: React.FC<ICheckoutPlaceOrderButtonProps> = ({ placeOrderText, canPlaceOrder, placeOrder, telemetryContent }) => {\n    const [isBusy, setIsBusy] = useState(false);\n    const payload = getPayloadObject(TelemetryEvent.Purchase, telemetryContent!, placeOrderText, '');\n    const attributes = getTelemetryAttributes(telemetryContent!, payload);\n    const onPlaceOrder = async () => {\n        if (isBusy || !canPlaceOrder) {\n            return;\n        }\n        setIsBusy(true);\n        await placeOrder();\n        setIsBusy(false);\n    };\n    return (\n        <Button\n            className={classnames('ms-checkout__btn-place-order', { 'is-busy': isBusy })}\n            color='primary'\n            onClick={onPlaceOrder}\n            title={placeOrderText}\n            {...attributes}\n            disabled={!canPlaceOrder}\n        >\n            {placeOrderText}\n        </Button>\n    );\n};\n\nexport default CheckoutPlaceOrderButton;\n"],"sourceRoot":"./src/"},"metadata":{},"sourceType":"module"}