{"ast":null,"code":"import _regeneratorRuntime from\"@babel/runtime/regenerator\";import _defineProperty from\"@babel/runtime/helpers/esm/defineProperty\";import _asyncToGenerator from\"@babel/runtime/helpers/esm/asyncToGenerator\";function ownKeys(object,enumerableOnly){var keys=Object.keys(object);if(Object.getOwnPropertySymbols){var symbols=Object.getOwnPropertySymbols(object);if(enumerableOnly)symbols=symbols.filter(function(sym){return Object.getOwnPropertyDescriptor(object,sym).enumerable;});keys.push.apply(keys,symbols);}return keys;}function _objectSpread(target){for(var i=1;i<arguments.length;i++){var source=arguments[i]!=null?arguments[i]:{};if(i%2){ownKeys(Object(source),true).forEach(function(key){_defineProperty(target,key,source[key]);});}else if(Object.getOwnPropertyDescriptors){Object.defineProperties(target,Object.getOwnPropertyDescriptors(source));}else{ownKeys(Object(source)).forEach(function(key){Object.defineProperty(target,key,Object.getOwnPropertyDescriptor(source,key));});}}return target;}import{updateCartLinesAsync}from'@msdyn365-commerce/retail-proxy/dist/DataActions/CartsDataActions.g';export default function clearCartLineDeliveryMode(_x,_x2,_x3){return _clearCartLineDeliveryMode.apply(this,arguments);}function _clearCartLineDeliveryMode(){_clearCartLineDeliveryMode=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee(cart,cartLineId,actionContext){var matchingLines,copyCartLine;return _regeneratorRuntime.wrap(function _callee$(_context){while(1){switch(_context.prev=_context.next){case 0:if(!(!cart||!cart.CartLines)){_context.next=2;break;}return _context.abrupt(\"return\",{cart:undefined,status:'FAILED'});case 2:matchingLines=cart.CartLines.filter(function(cartLine){return cartLine.LineId===cartLineId;});if(!(matchingLines.length===0)){_context.next=5;break;}return _context.abrupt(\"return\",{cart:undefined,status:'FAILED'});case 5:copyCartLine=_objectSpread({},matchingLines[0]);copyCartLine.DeliveryMode='';copyCartLine.FulfillmentStoreId='';copyCartLine.ShippingAddress={};return _context.abrupt(\"return\",updateCartLinesAsync({callerContext:actionContext},cart.Id,[copyCartLine],null).then(function(newCart){return{cart:newCart,status:'SUCCESS'};})[\"catch\"](function(error){actionContext.telemetry.warning(error);actionContext.telemetry.debug('Unable to Update Cart Line');return{cart:undefined,status:'FAILED'};}));case 10:case\"end\":return _context.stop();}}},_callee);}));return _clearCartLineDeliveryMode.apply(this,arguments);}","map":{"version":3,"sources":["cart-state/clear-cart-line-delivery-mode.ts"],"names":[],"mappings":"0+BACA,OAAS,oBAAT,KAAqC,qEAArC,CAIA,uBAA8B,CAAA,yBAA9B,sE,yHAAe,iBAAyC,IAAzC,CAA2E,UAA3E,CAA+F,aAA/F,sJACP,CAAC,IAAD,EAAS,CAAC,IAAI,CAAC,SADR,0DAEA,CAAE,IAAI,CAAE,SAAR,CAAmB,MAAM,CAAE,QAA3B,CAFA,SAKL,aALK,CAKW,IAAI,CAAC,SAAL,CAAe,MAAf,CAAsB,SAAA,QAAQ,QAAI,CAAA,QAAQ,CAAC,MAAT,GAAoB,UAAxB,EAA9B,CALX,MAOP,aAAa,CAAC,MAAd,GAAyB,CAPlB,0DAQ4B,CAAE,IAAI,CAAE,SAAR,CAAmB,MAAM,CAAE,QAA3B,CAR5B,SAWL,YAXK,kBAWwB,aAAa,CAAC,CAAD,CAXrC,EAaX,YAAY,CAAC,YAAb,CAA4B,EAA5B,CACA,YAAY,CAAC,kBAAb,CAAkC,EAAlC,CACA,YAAY,CAAC,eAAb,CAA+B,EAA/B,CAfW,gCAiBJ,oBAAoB,CAAC,CAAE,aAAa,CAAE,aAAjB,CAAD,CAAkC,IAAI,CAAC,EAAvC,CAA2C,CAAC,YAAD,CAA3C,CAA0D,IAA1D,CAApB,CACF,IADE,CACG,SAAA,OAAO,CAAG,CACZ,MAAmC,CAAE,IAAI,CAAE,OAAR,CAAiB,MAAM,CAAE,SAAzB,CAAnC,CACH,CAHE,WAII,SAAA,KAAK,CAAG,CACX,aAAa,CAAC,SAAd,CAAwB,OAAxB,CAAgC,KAAhC,EACA,aAAa,CAAC,SAAd,CAAwB,KAAxB,CAA8B,4BAA9B,EAEA,MAAmC,CAAE,IAAI,CAAE,SAAR,CAAmB,MAAM,CAAE,QAA3B,CAAnC,CACH,CATE,CAjBI,yD","sourcesContent":["import { IActionContext } from '@msdyn365-commerce/core';\nimport { updateCartLinesAsync } from '@msdyn365-commerce/retail-proxy/dist/DataActions/CartsDataActions.g';\nimport { Cart, CartLine } from '@msdyn365-commerce/retail-proxy/dist/Entities/CommerceTypes.g';\nimport { ICartActionResultWithCart } from './cart-action-result';\n\nexport default async function clearCartLineDeliveryMode(cart: Readonly<Cart | undefined>, cartLineId: string, actionContext: IActionContext): Promise<ICartActionResultWithCart> {\n    if (!cart || !cart.CartLines) {\n        return { cart: undefined, status: 'FAILED'};\n    }\n\n    const matchingLines = cart.CartLines.filter(cartLine => cartLine.LineId === cartLineId);\n\n    if (matchingLines.length === 0) {\n        return <ICartActionResultWithCart> { cart: undefined, status: 'FAILED'};\n    }\n\n    const copyCartLine: CartLine = {...matchingLines[0]};\n\n    copyCartLine.DeliveryMode = '';\n    copyCartLine.FulfillmentStoreId = '';\n    copyCartLine.ShippingAddress = {};\n\n    return updateCartLinesAsync({ callerContext: actionContext}, cart.Id, [copyCartLine],null)\n        .then(newCart => {\n            return <ICartActionResultWithCart> { cart: newCart, status: 'SUCCESS'};\n        })\n        .catch(error => {\n            actionContext.telemetry.warning(error);\n            actionContext.telemetry.debug('Unable to Update Cart Line');\n\n            return <ICartActionResultWithCart> { cart: undefined, status: 'FAILED'};\n        });\n}"],"sourceRoot":"./src/"},"metadata":{},"sourceType":"module"}