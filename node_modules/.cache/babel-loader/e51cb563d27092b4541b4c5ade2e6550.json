{"ast":null,"code":"/*!\r\n * Copyright (c) Microsoft Corporation.\r\n * All rights reserved. See LICENSE in the project root for license information.\r\n */ /**\r\n * Wraps the given data in an 'AccessControl' DynamicsPrivacyLog object.\r\n * @param data Data to wrap with privacy information\r\n */export function asAccessControl(data){return{data:data,classificationLevel:'AccessControl',isCustomerData:false,isRestrictedData:true,isPersonalData:false,__isDynamicsPrivacy:true};}/**\r\n * Wraps the given data in an 'CustomerContent' DynamicsPrivacyLog object.\r\n * @param data Data to wrap with privacy information\r\n */export function asCustomerContent(data){return{data:data,classificationLevel:'CustomerContent',isCustomerData:true,isRestrictedData:true,isPersonalData:true,__isDynamicsPrivacy:true};}/**\r\n * Wraps the given data in an 'EUII' DynamicsPrivacyLog object.\r\n * @param data Data to wrap with privacy information\r\n */export function asEUII(data){return{data:data,classificationLevel:'EUII',isCustomerData:true,isRestrictedData:true,isPersonalData:true,__isDynamicsPrivacy:true};}/**\r\n * Wraps the given data in an 'SupportData' DynamicsPrivacyLog object.\r\n * @param data Data to wrap with privacy information\r\n */export function asSupportData(data){return{data:data,classificationLevel:'SupportData',isCustomerData:false,isRestrictedData:false,isPersonalData:true,__isDynamicsPrivacy:true};}/**\r\n * Wraps the given data in an 'AccountData' DynamicsPrivacyLog object.\r\n * @param data Data to wrap with privacy information\r\n */export function asAccountData(data){return{data:data,classificationLevel:'AccountData',isCustomerData:false,isRestrictedData:false,isPersonalData:true,__isDynamicsPrivacy:true};}/**\r\n * Wraps the given data in an 'PublicPersonalData' DynamicsPrivacyLog object.\r\n * @param data Data to wrap with privacy information\r\n */export function asPublicPersonalData(data){return{data:data,classificationLevel:'PublicPersonalData',isCustomerData:false,isRestrictedData:false,isPersonalData:true,__isDynamicsPrivacy:true};}/**\r\n * Wraps the given data in an 'EUPI' DynamicsPrivacyLog object.\r\n * @param data Data to wrap with privacy information\r\n */export function asEUPI(data){return{data:data,classificationLevel:'EUPI',isCustomerData:false,isRestrictedData:false,isPersonalData:true,__isDynamicsPrivacy:true};}/**\r\n * Wraps the given data in an 'OII' DynamicsPrivacyLog object.\r\n * @param data Data to wrap with privacy information\r\n */export function asOII(data){return{data:data,classificationLevel:'OII',isCustomerData:false,isRestrictedData:false,isPersonalData:false,__isDynamicsPrivacy:true};}/**\r\n * Wraps the given data in an 'SystemMetadata' DynamicsPrivacyLog object.\r\n * @param data Data to wrap with privacy information\r\n */export function asSystemMetadata(data){return{data:data,classificationLevel:'SystemMetadata',isCustomerData:false,isRestrictedData:false,isPersonalData:false,__isDynamicsPrivacy:true};}/**\r\n * Wraps the given data in an 'PublicNonPersonalData' DynamicsPrivacyLog object.\r\n * @param data Data to wrap with privacy information\r\n */export function asPublicNonPersonalData(data){return{data:data,classificationLevel:'PublicNonPersonalData',isCustomerData:false,isRestrictedData:false,isPersonalData:false,__isDynamicsPrivacy:true};}/**\r\n * Gets the data out of the input object if it is a DynamicsPrivacyLog object.\r\n * Filters data if it contains privacy information.\r\n * @param input Input object that may or may not be a DynamicsPrivacyLog\r\n */ // tslint:disable-next-line:no-any\nexport function getFilteredData(input){// Check if the input is a DynamicsPrivacyLog object\nif(input&&input.__isDynamicsPrivacy){// If input contains privacy data, censor output\nif(input.isCustomerData||input.isRestrictedData||input.isPersonalData){return\"DATA CENSORED (\".concat(input.classificationLevel,\")\");}else{return input.data;}}else{return input;}}","map":{"version":3,"sources":["../../../src/privacy/dynamics-privacy-helper.ts"],"names":[],"mappings":"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","sourcesContent":["/*!\n * Copyright (c) Microsoft Corporation.\n * All rights reserved. See LICENSE in the project root for license information.\n */\n\nimport { DynamicsPrivacyLog } from './dynamics-privacy-log';\n\n/**\n * Wraps the given data in an 'AccessControl' DynamicsPrivacyLog object.\n * @param data Data to wrap with privacy information\n */\nexport function asAccessControl<T>(data: T): DynamicsPrivacyLog<T> {\n    return {\n        data: data,\n        classificationLevel: 'AccessControl',\n        isCustomerData: false,\n        isRestrictedData: true,\n        isPersonalData: false,\n        __isDynamicsPrivacy: true\n    };\n}\n\n/**\n * Wraps the given data in an 'CustomerContent' DynamicsPrivacyLog object.\n * @param data Data to wrap with privacy information\n */\nexport function asCustomerContent<T>(data: T): DynamicsPrivacyLog<T> {\n    return {\n        data: data,\n        classificationLevel: 'CustomerContent',\n        isCustomerData: true,\n        isRestrictedData: true,\n        isPersonalData: true,\n        __isDynamicsPrivacy: true\n    };\n}\n\n/**\n * Wraps the given data in an 'EUII' DynamicsPrivacyLog object.\n * @param data Data to wrap with privacy information\n */\nexport function asEUII<T>(data: T): DynamicsPrivacyLog<T> {\n    return {\n        data: data,\n        classificationLevel: 'EUII',\n        isCustomerData: true,\n        isRestrictedData: true,\n        isPersonalData: true,\n        __isDynamicsPrivacy: true\n    };\n}\n\n/**\n * Wraps the given data in an 'SupportData' DynamicsPrivacyLog object.\n * @param data Data to wrap with privacy information\n */\nexport function asSupportData<T>(data: T): DynamicsPrivacyLog<T> {\n    return {\n        data: data,\n        classificationLevel: 'SupportData',\n        isCustomerData: false,\n        isRestrictedData: false,\n        isPersonalData: true,\n        __isDynamicsPrivacy: true\n    };\n}\n\n/**\n * Wraps the given data in an 'AccountData' DynamicsPrivacyLog object.\n * @param data Data to wrap with privacy information\n */\nexport function asAccountData<T>(data: T): DynamicsPrivacyLog<T> {\n    return {\n        data: data,\n        classificationLevel: 'AccountData',\n        isCustomerData: false,\n        isRestrictedData: false,\n        isPersonalData: true,\n        __isDynamicsPrivacy: true\n    };\n}\n\n/**\n * Wraps the given data in an 'PublicPersonalData' DynamicsPrivacyLog object.\n * @param data Data to wrap with privacy information\n */\nexport function asPublicPersonalData<T>(data: T): DynamicsPrivacyLog<T> {\n    return {\n        data: data,\n        classificationLevel: 'PublicPersonalData',\n        isCustomerData: false,\n        isRestrictedData: false,\n        isPersonalData: true,\n        __isDynamicsPrivacy: true\n    };\n}\n\n/**\n * Wraps the given data in an 'EUPI' DynamicsPrivacyLog object.\n * @param data Data to wrap with privacy information\n */\nexport function asEUPI<T>(data: T): DynamicsPrivacyLog<T> {\n    return {\n        data: data,\n        classificationLevel: 'EUPI',\n        isCustomerData: false,\n        isRestrictedData: false,\n        isPersonalData: true,\n        __isDynamicsPrivacy: true\n    };\n}\n\n/**\n * Wraps the given data in an 'OII' DynamicsPrivacyLog object.\n * @param data Data to wrap with privacy information\n */\nexport function asOII<T>(data: T): DynamicsPrivacyLog<T> {\n    return {\n        data: data,\n        classificationLevel: 'OII',\n        isCustomerData: false,\n        isRestrictedData: false,\n        isPersonalData: false,\n        __isDynamicsPrivacy: true\n    };\n}\n\n/**\n * Wraps the given data in an 'SystemMetadata' DynamicsPrivacyLog object.\n * @param data Data to wrap with privacy information\n */\nexport function asSystemMetadata<T>(data: T): DynamicsPrivacyLog<T> {\n    return {\n        data: data,\n        classificationLevel: 'SystemMetadata',\n        isCustomerData: false,\n        isRestrictedData: false,\n        isPersonalData: false,\n        __isDynamicsPrivacy: true\n    };\n}\n\n/**\n * Wraps the given data in an 'PublicNonPersonalData' DynamicsPrivacyLog object.\n * @param data Data to wrap with privacy information\n */\nexport function asPublicNonPersonalData<T>(data: T): DynamicsPrivacyLog<T> {\n    return {\n        data: data,\n        classificationLevel: 'PublicNonPersonalData',\n        isCustomerData: false,\n        isRestrictedData: false,\n        isPersonalData: false,\n        __isDynamicsPrivacy: true\n    };\n}\n\n/**\n * Gets the data out of the input object if it is a DynamicsPrivacyLog object.\n * Filters data if it contains privacy information.\n * @param input Input object that may or may not be a DynamicsPrivacyLog\n */\n// tslint:disable-next-line:no-any\nexport function getFilteredData(input: any): any {\n    // Check if the input is a DynamicsPrivacyLog object\n    if (input && input.__isDynamicsPrivacy) {\n        // If input contains privacy data, censor output\n        if (input.isCustomerData || input.isRestrictedData || input.isPersonalData) {\n            return `DATA CENSORED (${input.classificationLevel})`;\n        } else {\n            return input.data;\n        }\n    } else {\n        return input;\n    }\n}\n"],"sourceRoot":""},"metadata":{},"sourceType":"module"}