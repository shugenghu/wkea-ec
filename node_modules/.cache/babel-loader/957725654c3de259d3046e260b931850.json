{"ast":null,"code":"import\"core-js/modules/es.object.assign.js\";import{Button,getPayloadObject,getTelemetryAttributes,TelemetryConstant}from'@msdyn365-commerce-modules/utilities';import classname from'classnames';import*as React from'react';import ReactDOM from'react-dom';class CheckoutGuidedCard extends React.PureComponent{constructor(props){super(props);this.editButtonRef=/*#__PURE__*/React.createRef();this.formCardRef=/*#__PURE__*/React.createRef();this.renderFooder=()=>{const{isVisted,isReady,isSubmitting,isCancelAllowed,hasControlGroup,onCancel,onSubmit,resource}=this.props;const{saveBtnLabel,cancelBtnLabel,saveAndContinueBtnLabel}=resource;const canSubmit=!isReady&&onSubmit;const canCancel=!isReady&&isVisted&&isCancelAllowed&&onCancel;if(!hasControlGroup||!canSubmit&&!canCancel){return null;}this.payLoad.contentAction.etext=isVisted?TelemetryConstant.Save:TelemetryConstant.SaveContinue;const saveBtnAttributes=getTelemetryAttributes(this.props.telemetryContent,this.payLoad);this.payLoad.contentAction.etext=TelemetryConstant.Cancel;const cancelBtnAttributes=getTelemetryAttributes(this.props.telemetryContent,this.payLoad);return/*#__PURE__*/React.createElement(\"div\",{className:'ms-checkout__guided-card-footer'},canSubmit&&/*#__PURE__*/React.createElement(Button,Object.assign({className:classname('ms-checkout__guided-card-btn-save',{'is-submitting':isSubmitting}),title:isVisted?saveBtnLabel:saveAndContinueBtnLabel,color:'primary',disabled:isSubmitting,onClick:onSubmit},saveBtnAttributes),isVisted&&isCancelAllowed?saveBtnLabel:saveAndContinueBtnLabel),canCancel&&/*#__PURE__*/React.createElement(Button,Object.assign({className:'ms-checkout__guided-card-btn-cancel',title:cancelBtnLabel,color:'secondary',onClick:onCancel},cancelBtnAttributes),cancelBtnLabel));};this.focusOnFirstFocusableElement=()=>{const node=ReactDOM.findDOMNode(this);const focussableElements=\"\\n             a:not([disabled]),\\n             button:not([disabled]),\\n             input[type=submit]:not([disabled]),\\n             input[type=checkbox]:not([disabled]),\\n             input[type=text]:not([disabled]),\\n             input[type=radio]:not([disabled]),\\n             input[type=password]:not([disabled]),\\n             select:not([disabled]),\\n             textarea:not([disabled]),\\n             [tabindex]:not([disabled]):not([tabindex=\\\"-1\\\"])\\n         \";const child=node&&node.querySelector&&node.querySelector(focussableElements);child&&child.focus&&child.focus();};this.focusOnEditButton=()=>{const editButton=this.editButtonRef&&this.editButtonRef.current&&this.editButtonRef.current.focus&&this.editButtonRef.current;editButton&&editButton.focus();};this.scrollToTitle=()=>{const formCard=this.props.isMobile&&this.formCardRef&&this.formCardRef.current&&this.formCardRef.current;formCard&&formCard.scrollIntoView();};this.getTitle=()=>{const{step,title}=this.props;const{headingTag:Tag='h2',text=''}=title||{};return/*#__PURE__*/React.createElement(Tag,{className:'ms-checkout__guided-card-title'},/*#__PURE__*/React.createElement(\"span\",{className:'ms-checkout__guided-card-title-step'},step+1,\". \"),text&&/*#__PURE__*/React.createElement(\"span\",{className:'ms-checkout__guided-card-title-text'},text));};this.payLoad=getPayloadObject('click',props.telemetryContent,'');}componentDidUpdate(prevProps){const{isActive,isReady,onNext,isVisted,onEdit}=this.props;if(isActive&&isReady){onNext();}const prevCanEdit=prevProps.isReady&&prevProps.isVisted&&!!prevProps.onEdit;const canEdit=isReady&&isVisted&&!!onEdit;if(!prevCanEdit&&canEdit){this.focusOnEditButton();this.scrollToTitle();}if(prevProps.isReady&&!isReady){this.focusOnFirstFocusableElement();}}render(){const{title,disabled,isExpanded,isActive,isVisted,children,isReady,isPending,isUpdating,hasInitialized,hasControlGroup,onEdit,resource}=this.props;const{changeBtnLabel}=resource;this.payLoad.contentAction.etext=TelemetryConstant.CheckoutChange;const changeBtnAttributes=getTelemetryAttributes(this.props.telemetryContent,this.payLoad);const canEdit=hasControlGroup&&isReady&&isVisted&&onEdit;return/*#__PURE__*/React.createElement(\"div\",{className:classname('ms-checkout__guided-card',{active:isActive,expanded:isExpanded,closed:!isExpanded,visted:isVisted,hidden:disabled,initialized:hasInitialized,disabled:disabled,ready:isReady,pending:isPending,updating:isUpdating}),ref:this.formCardRef},/*#__PURE__*/React.createElement(\"div\",{className:'ms-checkout__guided-card-header'},this.getTitle(),canEdit&&/*#__PURE__*/React.createElement(Button,Object.assign({innerRef:this.editButtonRef,className:'ms-checkout__guided-card-btn-edit',title:changeBtnLabel,color:'link',onClick:onEdit,\"aria-label\":title&&title.text?\"\".concat(changeBtnLabel,\" \").concat(title.text):''},changeBtnAttributes),changeBtnLabel)),/*#__PURE__*/React.createElement(\"div\",{className:classname('ms-checkout__guided-card-body',{hidden:!isExpanded})},/*#__PURE__*/React.createElement(\"div\",{className:'ms-checkout__guided-card-content'},children),this.renderFooder()));}}export default CheckoutGuidedCard;","map":{"version":3,"sources":["modules/checkout/components/guided-card.tsx"],"names":[],"mappings":"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","sourcesContent":["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/ //\nimport { Heading as HeadingType } from '@msdyn365-commerce-modules/data-types';\nimport { Button, getPayloadObject, getTelemetryAttributes, IPayLoad, ITelemetryContent, TelemetryConstant } from '@msdyn365-commerce-modules/utilities';\nimport classname from 'classnames';\nimport * as React from 'react';\nimport ReactDOM from 'react-dom';\n\nexport interface ICheckoutGuidedCardProps {\n    step: number;\n    title?: HeadingType;\n    disabled?: boolean; // module is not available\n    isActive?: boolean; // step === currentStep\n    isVisted?: boolean; // step < currentStep\n    isExpanded?: boolean;\n    isReady?: boolean;\n    isPending?: boolean;\n    isUpdating?: boolean;\n    isSubmitting?: boolean;\n    isCancelAllowed?: boolean;\n    isMobile?: boolean;\n    hasInitialized?: boolean;\n    hasControlGroup?: boolean;\n    children: React.ReactNode;\n    resource: {\n        checkoutStepTitleFormat: string;\n        saveBtnLabel: string;\n        changeBtnLabel: string;\n        cancelBtnLabel: string;\n        saveAndContinueBtnLabel: string;\n    };\n    telemetryContent?: ITelemetryContent;\n    onEdit?(): void;\n    onCancel?(): void;\n    onSubmit?(): void;\n    onNext(): void;\n}\n\n/**\n *\n * CheckoutGuidedCard component\n * @extends {React.Component<ICheckoutGuidedCardProps>}\n */\nclass CheckoutGuidedCard extends React.PureComponent<ICheckoutGuidedCardProps> {\n    private editButtonRef: React.RefObject<HTMLButtonElement> = React.createRef();\n    private formCardRef: React.RefObject<HTMLDivElement> = React.createRef();\n    private payLoad: IPayLoad;\n\n    constructor(props: ICheckoutGuidedCardProps) {\n        super(props);\n        this.payLoad = getPayloadObject('click', props.telemetryContent!, '');\n    }\n\n    public componentDidUpdate(prevProps: ICheckoutGuidedCardProps): void {\n        /**\n         * Move to next step when current step is ready\n         */\n        const { isActive, isReady, onNext, isVisted, onEdit } = this.props;\n\n        // Move to next step after completing the current step\n        if (isActive && isReady) {\n            onNext();\n        }\n\n        // Set the focus to Edit button once edit button appear\n        // (It happens when current step switch to isReady status)\n        const prevCanEdit = prevProps.isReady && prevProps.isVisted && !!prevProps.onEdit;\n        const canEdit = isReady && isVisted && !!onEdit;\n        if (!prevCanEdit && canEdit) {\n            this.focusOnEditButton();\n            this.scrollToTitle();\n        }\n\n        // Set the focus to the first focusable element\n        // (It happens when current step switch to isUpdating status)\n        if (prevProps.isReady && !isReady) {\n            this.focusOnFirstFocusableElement();\n        }\n    }\n\n    public render(): JSX.Element | null {\n        const {\n            title,\n            disabled,\n            isExpanded,\n            isActive,\n            isVisted,\n            children,\n            isReady,\n            isPending,\n            isUpdating,\n            hasInitialized,\n            hasControlGroup,\n            onEdit,\n            resource\n        } = this.props;\n        const { changeBtnLabel } = resource;\n\n        this.payLoad.contentAction.etext = TelemetryConstant.CheckoutChange;\n        const changeBtnAttributes = getTelemetryAttributes(this.props.telemetryContent!, this.payLoad);\n        const canEdit = hasControlGroup && isReady && isVisted && onEdit;\n\n        return (\n            <div\n                className={classname('ms-checkout__guided-card', {\n                    active: isActive,\n                    expanded: isExpanded,\n                    closed: !isExpanded,\n                    visted: isVisted,\n                    hidden: disabled,\n                    initialized: hasInitialized,\n                    disabled: disabled,\n                    ready: isReady,\n                    pending: isPending,\n                    updating: isUpdating\n                })}\n                ref={this.formCardRef}\n            >\n                <div className='ms-checkout__guided-card-header'>\n                    {this.getTitle()}\n\n                    {canEdit && (\n                        <Button\n                            innerRef={this.editButtonRef}\n                            className='ms-checkout__guided-card-btn-edit'\n                            title={changeBtnLabel}\n                            color='link'\n                            onClick={onEdit}\n                            aria-label={title && title.text ? `${changeBtnLabel} ${title.text}` : ''}\n                            {...changeBtnAttributes}\n                        >\n                            {changeBtnLabel}\n                        </Button>\n                    )}\n                </div>\n\n                <div\n                    className={classname('ms-checkout__guided-card-body', {\n                        hidden: !isExpanded\n                    })}\n                >\n                    <div className='ms-checkout__guided-card-content'>{children}</div>\n\n                    {this.renderFooder()}\n                </div>\n            </div>\n        );\n    }\n\n    private renderFooder = (): JSX.Element | null => {\n        const { isVisted, isReady, isSubmitting, isCancelAllowed, hasControlGroup, onCancel, onSubmit, resource } = this.props;\n        const { saveBtnLabel, cancelBtnLabel, saveAndContinueBtnLabel } = resource;\n\n        const canSubmit = !isReady && onSubmit;\n        const canCancel = !isReady && isVisted && isCancelAllowed && onCancel;\n\n        if (!hasControlGroup || (!canSubmit && !canCancel)) {\n            return null;\n        }\n\n        this.payLoad.contentAction.etext = isVisted ? TelemetryConstant.Save : TelemetryConstant.SaveContinue;\n        const saveBtnAttributes = getTelemetryAttributes(this.props.telemetryContent!, this.payLoad);\n        this.payLoad.contentAction.etext = TelemetryConstant.Cancel;\n        const cancelBtnAttributes = getTelemetryAttributes(this.props.telemetryContent!, this.payLoad);\n\n        return (\n            <div className='ms-checkout__guided-card-footer'>\n                {canSubmit && (\n                    <Button\n                        className={classname('ms-checkout__guided-card-btn-save', { 'is-submitting': isSubmitting })}\n                        title={isVisted ? saveBtnLabel : saveAndContinueBtnLabel}\n                        color='primary'\n                        disabled={isSubmitting}\n                        onClick={onSubmit}\n                        {...saveBtnAttributes}\n                    >\n                        {isVisted && isCancelAllowed ? saveBtnLabel : saveAndContinueBtnLabel}\n                    </Button>\n                )}\n                {canCancel && (\n                    <Button\n                        className='ms-checkout__guided-card-btn-cancel'\n                        title={cancelBtnLabel}\n                        color='secondary'\n                        onClick={onCancel}\n                        {...cancelBtnAttributes}\n                    >\n                        {cancelBtnLabel}\n                    </Button>\n                )}\n            </div>\n        );\n    };\n\n    private focusOnFirstFocusableElement = (): void => {\n        const node = ReactDOM.findDOMNode(this) as HTMLElement;\n        const focussableElements = `\n             a:not([disabled]),\n             button:not([disabled]),\n             input[type=submit]:not([disabled]),\n             input[type=checkbox]:not([disabled]),\n             input[type=text]:not([disabled]),\n             input[type=radio]:not([disabled]),\n             input[type=password]:not([disabled]),\n             select:not([disabled]),\n             textarea:not([disabled]),\n             [tabindex]:not([disabled]):not([tabindex=\"-1\"])\n         `;\n\n        const child = node && node.querySelector && (node.querySelector(focussableElements) as HTMLElement);\n        child && child.focus && child.focus();\n    };\n\n    private focusOnEditButton = (): void => {\n        // Focus on edit button\n        const editButton =\n            this.editButtonRef &&\n            this.editButtonRef.current &&\n            this.editButtonRef.current.focus &&\n            (this.editButtonRef.current as HTMLElement);\n        editButton && editButton.focus();\n    };\n\n    private scrollToTitle = (): void => {\n        // scroll window to the title of the step that was just completed only in mobile viewport\n        const formCard = this.props.isMobile && this.formCardRef && this.formCardRef.current && (this.formCardRef.current as HTMLElement);\n        formCard && formCard.scrollIntoView();\n    };\n\n    private getTitle = (): JSX.Element => {\n        const { step, title } = this.props;\n        const { headingTag: Tag = 'h2', text = '' } = title || {};\n        return (\n            <Tag className='ms-checkout__guided-card-title'>\n                <span className='ms-checkout__guided-card-title-step'>{step + 1}. </span>\n                {text && <span className='ms-checkout__guided-card-title-text'>{text}</span>}\n            </Tag>\n        );\n    };\n}\n\nexport default CheckoutGuidedCard;\n"],"sourceRoot":"./src/"},"metadata":{},"sourceType":"module"}