{"ast":null,"code":"import _regeneratorRuntime from\"@babel/runtime/regenerator\";import _asyncToGenerator from\"@babel/runtime/helpers/esm/asyncToGenerator\";import*as React from'react';import{getTelemetryObject}from'@msdyn365-commerce-modules/utilities';import{Dropdown}from'./dropdown';var telemetryContent;export function getBuyboxProductConfigure(props,state,callbacks){var _props$data=props.data,product=_props$data.product.result,productDimensions=_props$data.productDimensions.result,resources=props.resources;var configureErrors=state.errorState.configureErrors;var getDropdownName=callbacks.getDropdownName;if(!product||!productDimensions){return undefined;}var onChanged=/*#__PURE__*/function(){var _ref=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee(notification){return _regeneratorRuntime.wrap(function _callee$(_context){while(1){switch(_context.prev=_context.next){case 0:return _context.abrupt(\"return\",_onChanged(notification,callbacks.dimensionSelectedAsync));case 1:case\"end\":return _context.stop();}}},_callee);}));return function onChanged(_x){return _ref.apply(this,arguments);};}();telemetryContent=getTelemetryObject(props.context.request.telemetryPageName,props.friendlyName,props.telemetry);var dropdowns=productDimensions.map(function(productDimensionFull){return _mapProductDimensionFullToDropdownViewProps(productDimensionFull,resources,configureErrors,getDropdownName,onChanged);});if(!dropdowns||dropdowns.length===0){return undefined;}return{ContainerProps:{className:'ms-buybox__configure'},dropdowns:dropdowns};}var _onChanged=/*#__PURE__*/function(){var _ref2=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee2(notification,dimensionChanged){return _regeneratorRuntime.wrap(function _callee2$(_context2){while(1){switch(_context2.prev=_context2.next){case 0:_context2.next=2;return dimensionChanged(+notification.dropdownId,notification.selectId);case 2:case\"end\":return _context2.stop();}}},_callee2);}));return function _onChanged(_x2,_x3){return _ref2.apply(this,arguments);};}();var _mapProductDimensionFullToDropdownViewProps=function _mapProductDimensionFullToDropdownViewProps(productDimensionFull,resources,configureErrors,getDropdownName,dropdownCallback){var dropdownName=getDropdownName(productDimensionFull.DimensionTypeValue,resources);var dropdownId=productDimensionFull.DimensionTypeValue.toString();var dropdownToggleName=resources.selectDimensionFormatString.replace('{0}',dropdownName.toLocaleLowerCase());var dropdownList=productDimensionFull.DimensionValues?productDimensionFull.DimensionValues.map(function(dimensionValue){return{value:dimensionValue.Value||'',id:dimensionValue.RecordId.toString()};}):[];var errorMessage=configureErrors[dropdownId];return{ContainerProps:{className:'ms-buybox__dropdown'},LabelContainerProps:{tag:'label',className:'ms-buybox__dropdown-quantity-label',htmlFor:\"ms-buybox__dropown-quantity-input-\".concat(dropdownId)},errors:errorMessage&&/*#__PURE__*/React.createElement(\"span\",{className:'msc-alert msc-alert-noborder msc-alert-danger'},/*#__PURE__*/React.createElement(\"span\",{className:'msi-exclamation-triangle',\"aria-hidden\":'true'}),/*#__PURE__*/React.createElement(\"span\",null,errorMessage)),heading:/*#__PURE__*/React.createElement(\"div\",null,dropdownName),select:/*#__PURE__*/React.createElement(Dropdown,{dropdownId:dropdownId,dropdownName:dropdownName,dropdownToggleName:dropdownToggleName,dropdownList:dropdownList,onChange:dropdownCallback,telemetryContent:telemetryContent})};};","map":{"version":3,"sources":["modules/buybox/components/buybox-product-configure.tsx"],"names":[],"mappings":"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","sourcesContent":["import * as React from 'react';\n\nimport { getTelemetryObject, INodeProps, ITelemetryContent } from '@msdyn365-commerce-modules/utilities';\nimport { ProductDimensionFull } from '@msdyn365-commerce/commerce-entities';\nimport { IActionContext } from '@msdyn365-commerce/core';\nimport { SimpleProduct } from '@msdyn365-commerce/retail-proxy';\n\nimport { IBuyboxCallbacks, IBuyboxData, IBuyboxProps, IBuyboxResources, IBuyboxState } from '../../../index';\nimport { Dropdown, IDropdownItemProps, IDropdownOnSelectionChangeNotification } from './dropdown';\n\nexport interface IBuyboxProductConfigureProps {\n    product: SimpleProduct;\n    productDimensions: ProductDimensionFull[];\n    resources: IBuyboxResources;\n    channelId: number;\n    actionContext: IActionContext;\n    errors: { [configureId: string]: string | undefined };\n\n    dimensionChanged?(newValue: number): void;\n}\n\nexport interface IBuyboxProductConfigureDropdownViewProps {\n    ContainerProps: INodeProps;\n    LabelContainerProps: INodeProps;\n\n    heading: React.ReactNode;\n    errors?: React.ReactNode;\n\n    select: React.ReactNode;\n}\n\nexport interface IBuyboxProductConfigureViewProps {\n    ContainerProps: INodeProps;\n\n    dropdowns: IBuyboxProductConfigureDropdownViewProps[];\n}\n\nlet telemetryContent:  ITelemetryContent;\n\nexport function getBuyboxProductConfigure(props: IBuyboxProps<IBuyboxData>, state: IBuyboxState, callbacks: IBuyboxCallbacks): IBuyboxProductConfigureViewProps | undefined {\n    const {\n        data: {\n            product: {result: product },\n            productDimensions: {result: productDimensions },\n        },\n        resources\n    } = props;\n\n    const\n    {\n        errorState: {\n            configureErrors,\n        }\n    } = state;\n\n    const\n    {\n        getDropdownName\n    } = callbacks;\n\n    if (!product || !productDimensions) {\n        return undefined;\n    }\n\n    const onChanged = async (notification: IDropdownOnSelectionChangeNotification) =>\n        _onChanged(notification, callbacks.dimensionSelectedAsync);\n\n    telemetryContent = getTelemetryObject(props.context.request.telemetryPageName!, props.friendlyName, props.telemetry);\n    const dropdowns = productDimensions.map(productDimensionFull => _mapProductDimensionFullToDropdownViewProps(productDimensionFull, resources, configureErrors, getDropdownName, onChanged));\n\n    if (!dropdowns || dropdowns.length === 0) {\n        return undefined;\n    }\n\n    return {\n        ContainerProps: {\n            className: 'ms-buybox__configure'\n        },\n        dropdowns: dropdowns\n    };\n}\n\nconst _onChanged = async (\n        notification: IDropdownOnSelectionChangeNotification,\n        dimensionChanged: (newValue: number, selectedDimensionValue: string) => Promise<void>,\n    ): Promise<void> => {\n    await dimensionChanged(+notification.dropdownId, notification.selectId);\n};\n\nconst _mapProductDimensionFullToDropdownViewProps =\n    (\n        productDimensionFull: ProductDimensionFull,\n        resources: IBuyboxResources,\n        configureErrors: {[configureId: string]: string | undefined},\n        getDropdownName: (dimensionType: number, resources: IBuyboxResources) => string,\n        dropdownCallback: (notification: IDropdownOnSelectionChangeNotification) => Promise<void>\n    ): IBuyboxProductConfigureDropdownViewProps => {\n    const dropdownName =  getDropdownName(productDimensionFull.DimensionTypeValue, resources);\n    const dropdownId = productDimensionFull.DimensionTypeValue.toString();\n    const dropdownToggleName = resources.selectDimensionFormatString.replace('{0}', dropdownName.toLocaleLowerCase());\n    const dropdownList: IDropdownItemProps[] = productDimensionFull.DimensionValues\n        ? productDimensionFull.DimensionValues.map<IDropdownItemProps>(dimensionValue => {\n            return {\n                value: dimensionValue.Value || '',\n                id: dimensionValue.RecordId.toString()\n            };\n        })\n        : [];\n    const errorMessage = configureErrors[dropdownId];\n\n    return {\n        ContainerProps: {\n            className: 'ms-buybox__dropdown'\n        },\n        LabelContainerProps: {\n            tag: 'label',\n            className: 'ms-buybox__dropdown-quantity-label',\n            htmlFor: `ms-buybox__dropown-quantity-input-${dropdownId}`\n        },\n        errors: errorMessage && (\n            <span className='msc-alert msc-alert-noborder msc-alert-danger'>\n                <span className='msi-exclamation-triangle' aria-hidden='true' />\n                <span>{errorMessage}</span>\n            </span>\n        ),\n        heading: (\n            <div>{dropdownName}</div>\n        ),\n        select: (\n            <Dropdown\n                dropdownId={dropdownId}\n                dropdownName={dropdownName}\n                dropdownToggleName={dropdownToggleName}\n                dropdownList={dropdownList}\n                onChange={dropdownCallback}\n                telemetryContent={telemetryContent}\n            />\n        )\n    };\n};"],"sourceRoot":"./src/"},"metadata":{},"sourceType":"module"}