{"ast":null,"code":"import\"core-js/modules/es.regexp.constructor.js\";import\"core-js/modules/es.regexp.to-string.js\";import\"core-js/modules/es.string.replace.js\";import\"core-js/modules/es.string.split.js\";/*!\r\n * Copyright (c) Microsoft Corporation.\r\n * All rights reserved. See LICENSE in the project root for license information.\r\n */import*as MsDyn365 from'@msdyn365-commerce/core-internal';import{LogLevel}from'@msdyn365-commerce/telemetry-internal';import*as React from'react';class ScriptInjector extends React.PureComponent{constructor(props){super(props);}render(){const{config}=this.props;this._debug(\"Adding html head tags for '\".concat(this.props.id,\"/\").concat(this.props.typeName,\"'\"));const placeHolderPropsRegEx=RegExp('%[a-zA-Z0-9-.]*%','g');let placeHolders;const originalSource=config&&config.scriptSource;let resolvedSource;if(originalSource){let hasMorePlaceHolders=true;resolvedSource=originalSource;while(hasMorePlaceHolders){placeHolders=placeHolderPropsRegEx.exec(originalSource);if(placeHolders&&placeHolders.length>0){this._debug(\"extracted placeholder \".concat(placeHolders[0]));resolvedSource=this._resolvePlaceHolder(resolvedSource,placeHolders[0]);}else{hasMorePlaceHolders=false;}}}if(!resolvedSource){return null;}return/*#__PURE__*/React.createElement(MsDyn365.HtmlHeadInclude,null,this._isUrl(resolvedSource)?/*#__PURE__*/React.createElement(\"script\",{src:resolvedSource,async:!!config.async,defer:!!config.defer,\"data-load-point\":config.loadPoint||'bodyEnd'}):/*#__PURE__*/React.createElement(\"script\",{async:!!config.async,defer:!!config.defer,\"data-load-point\":config.loadPoint||'bodyEnd',dangerouslySetInnerHTML:{__html:resolvedSource}}));}_debug(debugMessage){if(this.props.telemetry){this.props.telemetry.log(LogLevel.Debug,debugMessage);}}_isUrl(source){return /(ftp|http|https):\\/\\/(\\w+:{0,1}\\w*@)?(\\S+)(:[0-9]+)?(\\/|\\/([\\w#!:.?+=&%@!\\-\\/]))?/.test(source);}_resolvePlaceHolder(resolvedSource,placeHolderToken){const placeHolderTokens=placeHolderToken.split(/[%.]/);if(placeHolderTokens.length!==4||!resolvedSource){return resolvedSource;}const propertyContext=placeHolderTokens[1];const propertyName=placeHolderTokens[2];if(propertyContext==='props'){if(this.props[propertyName]){resolvedSource=resolvedSource.replace(placeHolderToken,this.props[propertyName]);this._debug(\"Replaced placeholder \".concat(placeHolderToken,\" with props property \").concat(this.props[propertyName]));}}else if(this.props.context&&this.props.context.request){switch(propertyContext){case'request':if(this.props.context.request[propertyName]){resolvedSource=resolvedSource.replace(placeHolderToken,this.props.context.request[propertyName]);this._debug(\"Replaced placeholder \".concat(placeHolderToken,\" with request property \").concat(this.props.context.request[propertyName]));}break;case'user':if(this.props.context.request.user&&this.props.context.request.user[propertyName]){resolvedSource=resolvedSource.replace(placeHolderToken,this.props.context.request.user[propertyName]);this._debug(\"Replaced placeholder \".concat(placeHolderToken,\" with user property \").concat(this.props.context.request.user[propertyName]));}break;case'query':if(this.props.context.request.query&&this.props.context.request.query[propertyName]){resolvedSource=resolvedSource.replace(placeHolderToken,this.props.context.request.query[propertyName]);this._debug(\"Replaced placeholder \".concat(placeHolderToken,\" with query parameter \").concat(this.props.context.request.query[propertyName]));}break;default:}}return resolvedSource;}}export default ScriptInjector;","map":{"version":3,"sources":["modules/script-injector/script-injector.tsx"],"names":[],"mappings":"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","sourcesContent":["/*!\n * Copyright (c) Microsoft Corporation.\n * All rights reserved. See LICENSE in the project root for license information.\n */\n\nimport * as MsDyn365 from '@msdyn365-commerce/core-internal';\nimport { LogLevel } from '@msdyn365-commerce/telemetry-internal';\nimport * as React from 'react';\nimport { IScriptInjectorProps } from './script-injector.props.autogenerated';\n\n/**\n *\n * CoreComponent component\n * @extends {React.PureComponent<IScriptInjectorProps>}\n */\nclass ScriptInjector extends React.PureComponent<IScriptInjectorProps<{}>> {\n    constructor(props: IScriptInjectorProps<{}>) {\n        super(props);\n    }\n\n    public render(): JSX.Element | null {\n        const { config } = this.props;\n        this._debug(`Adding html head tags for '${this.props.id}/${this.props.typeName}'`);\n\n        const placeHolderPropsRegEx = RegExp('%[a-zA-Z0-9-.]*%', 'g');\n        let placeHolders: RegExpExecArray | null;\n        const originalSource = config && config.scriptSource;\n        let resolvedSource;\n\n        if (originalSource) {\n            let hasMorePlaceHolders = true;\n            resolvedSource = originalSource;\n\n            while (hasMorePlaceHolders) {\n                placeHolders = placeHolderPropsRegEx.exec(originalSource);\n\n                if (placeHolders && placeHolders.length > 0) {\n                    this._debug(`extracted placeholder ${placeHolders[0]}`);\n                    resolvedSource = this._resolvePlaceHolder(resolvedSource, placeHolders[0]);\n                } else {\n                    hasMorePlaceHolders = false;\n                }\n            }\n        }\n\n        if (!resolvedSource) {\n            return null;\n        }\n\n        return (\n            <MsDyn365.HtmlHeadInclude>\n                {this._isUrl(resolvedSource) ? (\n                    <script\n                        src={resolvedSource}\n                        async={!!config.async}\n                        defer={!!config.defer}\n                        data-load-point={config.loadPoint || 'bodyEnd'}\n                    />\n                ) : (\n                    // tslint:disable-next-line: react-no-dangerous-html\n                    <script\n                        async={!!config.async}\n                        defer={!!config.defer}\n                        data-load-point={config.loadPoint || 'bodyEnd'}\n                        dangerouslySetInnerHTML={{ __html: resolvedSource }}\n                    />\n                )}\n            </MsDyn365.HtmlHeadInclude>\n        );\n    }\n\n    private _debug(debugMessage: string): void {\n        if (this.props.telemetry) {\n            this.props.telemetry.log(LogLevel.Debug, debugMessage);\n        }\n    }\n\n    private _isUrl(source: string): boolean {\n        return /(ftp|http|https):\\/\\/(\\w+:{0,1}\\w*@)?(\\S+)(:[0-9]+)?(\\/|\\/([\\w#!:.?+=&%@!\\-\\/]))?/.test(source);\n    }\n\n    // tslint:disable-next-line:cyclomatic-complexity\n    private _resolvePlaceHolder(resolvedSource: string, placeHolderToken: string): string {\n        // expect placeholder to of the format eg: %config.id%\n        const placeHolderTokens = placeHolderToken.split(/[%.]/);\n\n        if (placeHolderTokens.length !== 4 || !resolvedSource) {\n            return resolvedSource;\n        }\n\n        const propertyContext = placeHolderTokens[1];\n        const propertyName = placeHolderTokens[2];\n\n        if (propertyContext === 'props') {\n            if (this.props[propertyName]) {\n                resolvedSource = resolvedSource.replace(placeHolderToken, this.props[propertyName]);\n                this._debug(`Replaced placeholder ${placeHolderToken} with props property ${this.props[propertyName]}`);\n            }\n        } else if (this.props.context && this.props.context.request) {\n            switch (propertyContext) {\n                case 'request':\n                    if (this.props.context.request[propertyName]) {\n                        resolvedSource = resolvedSource.replace(placeHolderToken, this.props.context.request[propertyName]);\n                        // tslint:disable-next-line:max-line-length\n                        this._debug(\n                            `Replaced placeholder ${placeHolderToken} with request property ${this.props.context.request[propertyName]}`\n                        );\n                    }\n\n                    break;\n                case 'user':\n                    if (this.props.context.request.user && this.props.context.request.user[propertyName]) {\n                        resolvedSource = resolvedSource.replace(placeHolderToken, this.props.context.request.user[propertyName]);\n                        this._debug(\n                            `Replaced placeholder ${placeHolderToken} with user property ${this.props.context.request.user[propertyName]}`\n                        );\n                    }\n\n                    break;\n                case 'query':\n                    if (this.props.context.request.query && this.props.context.request.query[propertyName]) {\n                        resolvedSource = resolvedSource.replace(placeHolderToken, this.props.context.request.query[propertyName]);\n                        // tslint:disable-next-line:max-line-length\n                        this._debug(\n                            `Replaced placeholder ${placeHolderToken} with query parameter ${this.props.context.request.query[propertyName]}`\n                        );\n                    }\n\n                    break;\n                default:\n            }\n        }\n\n        return resolvedSource;\n    }\n}\n\nexport default ScriptInjector;\n"],"sourceRoot":"./src/"},"metadata":{},"sourceType":"module"}