{"ast":null,"code":"import _regeneratorRuntime from\"@babel/runtime/regenerator\";import _defineProperty from\"@babel/runtime/helpers/esm/defineProperty\";import _asyncToGenerator from\"@babel/runtime/helpers/esm/asyncToGenerator\";function ownKeys(object,enumerableOnly){var keys=Object.keys(object);if(Object.getOwnPropertySymbols){var symbols=Object.getOwnPropertySymbols(object);if(enumerableOnly)symbols=symbols.filter(function(sym){return Object.getOwnPropertyDescriptor(object,sym).enumerable;});keys.push.apply(keys,symbols);}return keys;}function _objectSpread(target){for(var i=1;i<arguments.length;i++){var source=arguments[i]!=null?arguments[i]:{};if(i%2){ownKeys(Object(source),true).forEach(function(key){_defineProperty(target,key,source[key]);});}else if(Object.getOwnPropertyDescriptors){Object.defineProperties(target,Object.getOwnPropertyDescriptors(source));}else{ownKeys(Object(source)).forEach(function(key){Object.defineProperty(target,key,Object.getOwnPropertyDescriptor(source,key));});}}return target;}import{addCartLinesAsync}from'@msdyn365-commerce/retail-proxy/dist/DataActions/CartsDataActions.g';// tslint:disable-next-line:cyclomatic-complexity\nexport default function addProductToCartInternal(_x,_x2,_x3,_x4,_x5,_x6){return _addProductToCartInternal.apply(this,arguments);}function _addProductToCartInternal(){_addProductToCartInternal=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee(cart,cartLineToAdd,actionContext,availableQuantity,enableStockCheck,isAddServiceItemToCart){var maxQuantityForCartLineItem,quantityLimit,elementFoundAt,productIdToFind,i,cartLineToUpdate,curQuantity,newCartLine;return _regeneratorRuntime.wrap(function _callee$(_context){while(1){switch(_context.prev=_context.next){case 0:if(cart.CartLines){_context.next=2;break;}return _context.abrupt(\"return\",{cart:undefined,status:'FAILED'});case 2:maxQuantityForCartLineItem=actionContext.requestContext.app.config.maxQuantityForCartLineItem;if(enableStockCheck===false){quantityLimit=maxQuantityForCartLineItem||10;}else{if(maxQuantityForCartLineItem===undefined&&availableQuantity===undefined){quantityLimit=10;}else if(availableQuantity===undefined){quantityLimit=maxQuantityForCartLineItem;}else if(maxQuantityForCartLineItem===undefined){quantityLimit=availableQuantity;}else{quantityLimit=Math.min(maxQuantityForCartLineItem,availableQuantity);}}elementFoundAt=-1;productIdToFind=cartLineToAdd.ProductId;i=0;case 7:if(!(i<cart.CartLines.length)){_context.next=14;break;}if(!(cart.CartLines[i].ProductId===productIdToFind&&(cart.CartLines[i].DeliveryMode||'')===(cartLineToAdd.DeliveryMode||'')&&(cart.CartLines[i].FulfillmentStoreId||'')===(cartLineToAdd.FulfillmentStoreId||''))){_context.next=11;break;}elementFoundAt=i;return _context.abrupt(\"break\",14);case 11:i++;_context.next=7;break;case 14:if(!(!isAddServiceItemToCart&&elementFoundAt!==-1)){_context.next=19;break;}cartLineToUpdate=_objectSpread({},cart.CartLines[elementFoundAt]);curQuantity=cartLineToUpdate.Quantity||0;if(!(curQuantity+(cartLineToAdd.Quantity||1)>quantityLimit)){_context.next=19;break;}return _context.abrupt(\"return\",{cart:{Id:cart.Id,CartLines:cart.CartLines},status:'FAILED',substatus:'MAXQUANTITY'});case 19:newCartLine=_objectSpread({},cartLineToAdd);if(!(!isAddServiceItemToCart&&cartLineToAdd&&cartLineToAdd.Quantity&&cartLineToAdd.Quantity>quantityLimit)){_context.next=22;break;}return _context.abrupt(\"return\",{cart:{Id:cart.Id,CartLines:cart.CartLines},status:'FAILED',substatus:'MAXQUANTITY'});case 22:newCartLine.Quantity=cartLineToAdd.Quantity||1;if(!cart.Version){_context.next=27;break;}return _context.abrupt(\"return\",addCartLinesAsync({callerContext:actionContext},cart.Id,[newCartLine],cart.Version).then(function(newCart){return{cart:newCart,status:'SUCCESS'};})[\"catch\"](function(error){actionContext.telemetry.trace(error);actionContext.telemetry.trace('Unable to add Cart Line');return{cart:undefined,status:'FAILED'};}));case 27:actionContext.telemetry.warning('Unable to update Cart Line, Cart Version could not be found');case 28:return _context.abrupt(\"return\",{cart:undefined,status:'FAILED'});case 29:case\"end\":return _context.stop();}}},_callee);}));return _addProductToCartInternal.apply(this,arguments);}","map":{"version":3,"sources":["cart-state/add-product-to-cart.ts"],"names":[],"mappings":"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","sourcesContent":["import { IActionContext } from '@msdyn365-commerce/core';\nimport { addCartLinesAsync } from '@msdyn365-commerce/retail-proxy/dist/DataActions/CartsDataActions.g';\nimport { Cart, CartLine } from '@msdyn365-commerce/retail-proxy/dist/Entities/CommerceTypes.g';\nimport { ICartActionResultWithCart } from './cart-action-result';\n\n// tslint:disable-next-line:cyclomatic-complexity\nexport default async function addProductToCartInternal(cart: Readonly<Cart>, cartLineToAdd: CartLine, actionContext: IActionContext, availableQuantity?: number,\n                                                       enableStockCheck?: boolean, isAddServiceItemToCart?: boolean): Promise<ICartActionResultWithCart> {\n    if (!cart.CartLines) {\n        return { cart: undefined, status: 'FAILED' };\n    }\n\n    const maxQuantityForCartLineItem = actionContext.requestContext.app.config.maxQuantityForCartLineItem;\n    let quantityLimit: number;\n\n    if (enableStockCheck === false) {\n        quantityLimit = maxQuantityForCartLineItem || 10;\n    } else {\n        if (maxQuantityForCartLineItem === undefined && availableQuantity === undefined) {\n            quantityLimit = 10;\n        } else if (availableQuantity === undefined) {\n            quantityLimit = maxQuantityForCartLineItem;\n        } else if (maxQuantityForCartLineItem === undefined) {\n            quantityLimit = availableQuantity;\n        } else {\n            quantityLimit = Math.min(maxQuantityForCartLineItem, availableQuantity);\n        }\n    }\n\n    let elementFoundAt:number = -1;\n    const productIdToFind = cartLineToAdd.ProductId;\n\n    for (let i = 0; i < cart.CartLines.length; i++) {\n        if (cart.CartLines[i].ProductId === productIdToFind &&\n            (cart.CartLines[i].DeliveryMode || '') === (cartLineToAdd.DeliveryMode || '') &&\n            (cart.CartLines[i].FulfillmentStoreId || '') === (cartLineToAdd.FulfillmentStoreId || '')) {\n            elementFoundAt = i;\n\n            break;\n        }\n    }\n\n    if (!isAddServiceItemToCart && elementFoundAt !== -1) {\n        const cartLineToUpdate = {...cart.CartLines[elementFoundAt]};\n        const curQuantity = cartLineToUpdate.Quantity || 0;\n\n        if (curQuantity + (cartLineToAdd.Quantity || 1) > quantityLimit) {\n            return {\n                cart: {\n                    Id: cart.Id,\n                    CartLines: cart.CartLines\n                },\n                status: 'FAILED',\n                substatus: 'MAXQUANTITY'\n            };\n        }\n    }\n\n    const newCartLine = {...cartLineToAdd};\n\n    if (!isAddServiceItemToCart && cartLineToAdd && cartLineToAdd.Quantity && cartLineToAdd.Quantity > quantityLimit) {\n        return {\n            cart: {\n                Id: cart.Id,\n                CartLines: cart.CartLines\n            },\n            status: 'FAILED',\n            substatus: 'MAXQUANTITY'\n        };\n    }\n\n    newCartLine.Quantity = cartLineToAdd.Quantity || 1;\n\n    if (cart.Version) {\n        return addCartLinesAsync({ callerContext: actionContext }, cart.Id, [newCartLine], cart.Version)\n        .then(newCart => {\n            return <ICartActionResultWithCart> { cart: newCart, status: 'SUCCESS' };\n        }).catch(error => {\n            actionContext.telemetry.trace(error);\n            actionContext.telemetry.trace('Unable to add Cart Line');\n\n            return <ICartActionResultWithCart> { cart: undefined, status: 'FAILED' };\n        });\n    } else {\n        actionContext.telemetry.warning('Unable to update Cart Line, Cart Version could not be found');\n    }\n\n    return <ICartActionResultWithCart> { cart: undefined, status: 'FAILED' };\n}"],"sourceRoot":"./src/"},"metadata":{},"sourceType":"module"}