{"ast":null,"code":"import\"core-js/modules/es.object.assign.js\";import\"core-js/modules/web.dom-collections.iterator.js\";import _defineProperty from\"@babel/runtime/helpers/esm/defineProperty\";function ownKeys(object,enumerableOnly){var keys=Object.keys(object);if(Object.getOwnPropertySymbols){var symbols=Object.getOwnPropertySymbols(object);if(enumerableOnly)symbols=symbols.filter(function(sym){return Object.getOwnPropertyDescriptor(object,sym).enumerable;});keys.push.apply(keys,symbols);}return keys;}function _objectSpread(target){for(var i=1;i<arguments.length;i++){var source=arguments[i]!=null?arguments[i]:{};if(i%2){ownKeys(Object(source),true).forEach(function(key){_defineProperty(target,key,source[key]);});}else if(Object.getOwnPropertyDescriptors){Object.defineProperties(target,Object.getOwnPropertyDescriptors(source));}else{ownKeys(Object(source)).forEach(function(key){Object.defineProperty(target,key,Object.getOwnPropertyDescriptor(source,key));});}}return target;}import{getTelemetryObject}from'@msdyn365-commerce-modules/utilities';import*as Msdyn365 from'@msdyn365-commerce/core';import classnames from'classnames';import*as React from'react';import LinksComponent from'./components/links';class ContentBlock extends React.PureComponent{constructor(){super(...arguments);this.telemetryContent=getTelemetryObject(this.props.context.request.telemetryPageName,this.props.friendlyName,this.props.telemetry);this.handleTextChange=event=>this.props.config.heading.text=event.target.value;this.handleParagraphChange=event=>this.props.config.paragraph=event.target.value;this.handleLinkTextChange=linkIndex=>event=>{if(this.props.config.links&&this.props.config.links[linkIndex]){this.props.config.links[linkIndex].linkText=event.target.value;}};}render(){const{heading,paragraph,image,links,className,imageAriaLabel}=this.props.config;const contentBlockTitle=heading&&/*#__PURE__*/React.createElement(Msdyn365.Text,{className:'ms-content-block__title',tag:heading.tag||'h1',text:heading.text,editProps:{onEdit:this.handleTextChange,requestContext:this.props.context.request}});const imageProps={gridSettings:this.props.context.request.gridSettings||{},imageSettings:image&&image.imageSettings};const contentBlockLinks=links&&links.length>0&&/*#__PURE__*/React.createElement(LinksComponent,Object.assign({},{links:links,onTextChange:this.handleLinkTextChange,requestContext:this.props.context.request,telemetryContent:this.telemetryContent}));const contentBlockText=paragraph&&/*#__PURE__*/React.createElement(Msdyn365.RichTextComponent,{text:paragraph,className:'ms-content-block__text',editProps:{onEdit:this.handleParagraphChange,requestContext:this.props.context.request}});const contentBlockImage=image&&/*#__PURE__*/React.createElement(Msdyn365.Image,Object.assign({},image,imageProps,{editProps:{key:this.props.config.image||{},requestContext:this.props.context.request}}));if(!contentBlockTitle&&!contentBlockText&&!contentBlockImage&&!contentBlockLinks){this.props.context.telemetry.error('Content block content is empty, module wont render.');return null;}const contentBlockviewProps=_objectSpread(_objectSpread({},this.props),{},{title:contentBlockTitle,text:contentBlockText,image:contentBlockImage,links:contentBlockLinks,moduleClass:this.props.config.className,contentBlockContainer:{moduleProps:this.props,className:classnames('ms-content-block',className)},imageContainer:{className:'ms-content-block__image'},detailsContainer:{className:'ms-content-block__details'},contentBlockAnchorTag:{tag:'a',className:'ms-content-block__link',role:'link'},imageLink:this._getImageLink(),imageAriaLabel});return this.props.renderView(contentBlockviewProps);}_getImageLink(){const{imageLink,links,actionableRegion}=this.props.config;if(actionableRegion===\"imageAndLinks\"){if(imageLink&&imageLink.destinationUrl){return imageLink.destinationUrl;}else if(links&&links.length&&links[0].linkUrl){return links[0].linkUrl.destinationUrl;}else{return null;}}else{return null;}}}export default ContentBlock;","map":{"version":3,"sources":["modules/content-block/content-block.tsx"],"names":[],"mappings":"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","sourcesContent":["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nimport { getTelemetryObject, IModuleProps, INodeProps, ITelemetryContent } from '@msdyn365-commerce-modules/utilities';\nimport * as Msdyn365 from '@msdyn365-commerce/core';\nimport classnames from 'classnames';\nimport * as React from 'react';\nimport LinksComponent from './components/links';\nimport { actionableRegion as region, IContentBlockProps } from './content-block.props.autogenerated';\n\nexport interface IContentBlockViewProps extends IContentBlockProps<{}> {\n  title?: React.ReactNode;\n  text?: React.ReactNode;\n  image?: React.ReactNode;\n  links?: React.ReactNode;\n  className?: string;\n  contentBlockContainer: IModuleProps;\n  imageContainer: INodeProps;\n  detailsContainer: INodeProps;\n  contentBlockAnchorTag?: INodeProps;\n  imageLink?: string;\n  imageAriaLabel?: string;\n}\n/**\n *\n * ContentCard component\n * @extends {React.PureComponent<IContentBlockProps{}>}\n */\n\nclass ContentBlock extends React.PureComponent<IContentBlockProps<{}>> {\n private telemetryContent: ITelemetryContent = getTelemetryObject(this.props.context.request.telemetryPageName!,\n                                                                  this.props.friendlyName,\n                                                                  this.props.telemetry);\n public render(): JSX.Element | null {\n    const {\n      heading,\n      paragraph,\n      image,\n      links,\n      className,\n      imageAriaLabel\n    } = this.props.config;\n    const contentBlockTitle = heading && (\n      <Msdyn365.Text\n        className='ms-content-block__title'\n        tag={heading.tag || 'h1'}\n        text={heading.text}\n        editProps={{onEdit: this.handleTextChange, requestContext:this.props.context.request}}\n      />\n    );\n    const imageProps = {\n      gridSettings: this.props.context.request.gridSettings || {},\n      imageSettings: image && image.imageSettings,\n    };\n    const contentBlockLinks = links && links.length > 0 && (\n      <LinksComponent {...{ links: links, onTextChange: this.handleLinkTextChange, requestContext: this.props.context.request, telemetryContent: this.telemetryContent }} />\n    );\n    const contentBlockText = paragraph && (\n      <Msdyn365.RichTextComponent\n        text={paragraph}\n        className='ms-content-block__text'\n        editProps={{onEdit: this.handleParagraphChange, requestContext: this.props.context.request}}\n      />\n    );\n    const contentBlockImage = image && (\n      <Msdyn365.Image {...image} {...imageProps} editProps ={{key:this.props.config.image || {}, requestContext: this.props.context.request}}/>\n    );\n\n    if (\n      !contentBlockTitle &&\n      !contentBlockText &&\n      !contentBlockImage &&\n      !contentBlockLinks\n    ) {\n      this.props.context.telemetry.error(\n        'Content block content is empty, module wont render.'\n      );\n      return null;\n    }\n\n    const contentBlockviewProps = {\n      ...this.props,\n      title: contentBlockTitle,\n      text: contentBlockText,\n      image: contentBlockImage,\n      links: contentBlockLinks,\n      moduleClass: this.props.config.className,\n      contentBlockContainer: {\n        moduleProps: this.props,\n        className: classnames('ms-content-block', className),\n      },\n      imageContainer: { className: 'ms-content-block__image' },\n      detailsContainer: { className: 'ms-content-block__details' },\n      contentBlockAnchorTag: {\n        tag: 'a',\n        className: 'ms-content-block__link',\n        role: 'link',\n      },\n      imageLink: this._getImageLink(),\n      imageAriaLabel\n    };\n\n    return this.props.renderView(contentBlockviewProps) as React.ReactElement;\n  }\n  public handleTextChange = (event: Msdyn365.ContentEditableEvent) => this.props.config.heading!.text = event.target.value;\n  public handleParagraphChange = (event: Msdyn365.ContentEditableEvent) => this.props.config.paragraph = event.target.value;\n  /* Handle link text change*/\n  public handleLinkTextChange = (linkIndex: number) => (event: Msdyn365.ContentEditableEvent) => {\n    if(this.props.config.links && this.props.config.links[linkIndex]) {\n      this.props.config.links[linkIndex].linkText = event.target.value;\n    }\n  };\n  private _getImageLink(): string | null {\n    const { imageLink, links, actionableRegion } = this.props.config;\n    if (actionableRegion === region.imageAndLinks) {\n      if (imageLink && imageLink.destinationUrl) {\n        return imageLink.destinationUrl;\n      } else if (links && links.length && links[0].linkUrl) {\n        return links[0].linkUrl.destinationUrl;\n      } else {\n        return null;\n      }\n    } else {\n        return null;\n    }\n  }\n}\n\nexport default ContentBlock;\n"],"sourceRoot":"./src/"},"metadata":{},"sourceType":"module"}