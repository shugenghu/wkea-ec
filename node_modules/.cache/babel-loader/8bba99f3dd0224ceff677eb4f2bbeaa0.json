{"ast":null,"code":"/*!\r\n * Copyright (c) Microsoft Corporation.\r\n * All rights reserved. See LICENSE in the project root for license information.\r\n */export var moduleTypeToFriendlyName=function moduleTypeToFriendlyName(moduleType){switch(moduleType){case'htmlHeadTagsModule':{return'HTML Head';}case'scriptModule':{return'Script';}case'containerModule':{return'Container';}case'contentModule':{return'Content';}case'appModule':{return'App';}case'pageModule':{return'Page';}default:{return'Uncategorized';}}};export var generateModueListForAType=function generateModueListForAType(moduleList,moduleType){moduleList=moduleList.sort(function(a,b){return a.name.localeCompare(b.name);});var mappedListHtml;if(moduleType==='contentModule'||moduleType==='uncategorizedModules'){mappedListHtml=moduleList.map(function(moduleDetails){return\"<li style=\\\"line-height: 1.5\\\"><a href=\\\"\".concat(moduleDetails.mockUrl,\"\\\">\").concat(moduleDetails.name,\"</a></li>\");});}else{mappedListHtml=moduleList.map(function(moduleDetails){return\"<li style=\\\"line-height: 1.5\\\">\".concat(moduleDetails.name,\"</li>\");});}return mappedListHtml.join('');};/**\r\n * Renders a simple web page with a list of registered content modules\r\n * taken from DAPI. Each module links to a view with its default mock\r\n *\r\n * @param moduleList The list of registered content modules\r\n */export var moduleListPage=function moduleListPage(moduleList){var moduleListHtml='';var totalModuleCount=0;Object.keys(moduleList).forEach(function(moduleType){var modulesForType=moduleList[moduleType];if(modulesForType){moduleListHtml+=\"<h2>\".concat(moduleTypeToFriendlyName(moduleType),\" Module\").concat(modulesForType.length!==1?'s':'',\"</h2>\");moduleListHtml+=\"<ul style=\\\"font-size: 1.5rem\\\">\\n                \".concat(generateModueListForAType(modulesForType,moduleType),\"\\n            </ul>\");totalModuleCount+=modulesForType.length;}});return\"<!DOCTYPE html>\\n    <html>\\n        <head>\\n            <meta http-equiv=\\\"X-UA-Compatible\\\" content=\\\"IE=edge,chrome=1\\\" />\\n            <title>Installed Modules </title>\\n        </head>\\n        <body>\\n            <h1>List of installed modules (\".concat(totalModuleCount,\" module\").concat(totalModuleCount!==1?'s':'',\" found)</h1>\\n            <p style=\\\"font-size: 1.25rem\\\">If available, click on a module to see its preview</p>\\n            \").concat(moduleListHtml,\"\\n        </body>\\n    </html>\");};","map":{"version":3,"sources":["../../../src/components/module-list-page.tsx"],"names":[],"mappings":"AAAA;;;AAGG,GAiBH,MAAO,IAAM,CAAA,wBAAwB,CAAG,QAA3B,CAAA,wBAA2B,CAAC,UAAD,CAA+B,CACnE,OAAQ,UAAR,EACI,IAAK,oBAAL,CAA2B,CACvB,MAAO,WAAP,CACH,CACD,IAAK,cAAL,CAAqB,CACjB,MAAO,QAAP,CACH,CACD,IAAK,iBAAL,CAAwB,CACpB,MAAO,WAAP,CACH,CACD,IAAK,eAAL,CAAsB,CAClB,MAAO,SAAP,CACH,CACD,IAAK,WAAL,CAAkB,CACd,MAAO,KAAP,CACH,CACD,IAAK,YAAL,CAAmB,CACf,MAAO,MAAP,CACH,CACD,QAAS,CACL,MAAO,eAAP,CACH,CArBL,CAuBH,CAxBM,CA0BP,MAAO,IAAM,CAAA,yBAAyB,CAAG,QAA5B,CAAA,yBAA4B,CAAC,UAAD,CAAa,UAAb,CAA2C,CAChF,UAAU,CAAG,UAAU,CAAC,IAAX,CAAgB,SAAC,CAAD,CAAI,CAAJ,QAAU,CAAA,CAAC,CAAC,IAAF,CAAO,aAAP,CAAqB,CAAC,CAAC,IAAvB,CAAV,EAAhB,CAAb,CAEA,GAAI,CAAA,cAAJ,CACA,GAAI,UAAU,GAAK,eAAf,EAAkC,UAAU,GAAK,sBAArD,CAA6E,CACzE,cAAc,CAAG,UAAU,CAAC,GAAX,CACb,SAAA,aAAa,2DAA6C,aAAa,CAAC,OAA3D,eAAuE,aAAa,CAAC,IAArF,eADA,CAAjB,CAGH,CAJD,IAIO,CACH,cAAc,CAAG,UAAU,CAAC,GAAX,CAAe,SAAA,aAAa,iDAAoC,aAAa,CAAC,IAAlD,WAA5B,CAAjB,CACH,CACD,MAAO,CAAA,cAAc,CAAC,IAAf,CAAoB,EAApB,CAAP,CACH,CAZM,CAcP;;;;;AAKG,GACH,MAAO,IAAM,CAAA,cAAc,CAAG,QAAjB,CAAA,cAAiB,CAAC,UAAD,CAAyC,CACnE,GAAI,CAAA,cAAc,CAAG,EAArB,CACA,GAAI,CAAA,gBAAgB,CAAG,CAAvB,CAEA,MAAM,CAAC,IAAP,CAAY,UAAZ,EAAwB,OAAxB,CAAgC,SAAC,UAAD,CAAuB,CACnD,GAAM,CAAA,cAAc,CAAG,UAAU,CAAC,UAAD,CAAjC,CACA,GAAI,cAAJ,CAAoB,CAChB,cAAc,gBAAW,wBAAwB,CAAC,UAAD,CAAnC,mBAAyD,cAAc,CAAC,MAAf,GAA0B,CAA1B,CAA8B,GAA9B,CAAoC,EAA7F,SAAd,CACA,cAAc,8DACR,yBAAyB,CAAC,cAAD,CAAiB,UAAjB,CADjB,uBAAd,CAGA,gBAAgB,EAAI,cAAc,CAAC,MAAnC,CACH,CACJ,CATD,EAWA,0QAOyC,gBAPzC,mBAOmE,gBAAgB,GAAK,CAArB,CAAyB,GAAzB,CAA+B,EAPlG,0IASU,cATV,mCAYH,CA3BM","sourcesContent":["/*!\n * Copyright (c) Microsoft Corporation.\n * All rights reserved. See LICENSE in the project root for license information.\n */\n\nexport interface IModuleListTypes {\n    htmlHeadTagsModule?: IModuleDetails[];\n    scriptModule?: IModuleDetails[];\n    containerModule?: IModuleDetails[];\n    contentModule?: IModuleDetails[];\n    appModule?: IModuleDetails[];\n    pageModule?: IModuleDetails[];\n    uncategorizedModules?: IModuleDetails[];\n}\n\nexport interface IModuleDetails {\n    name: string;\n    mockUrl?: string;\n}\n\nexport const moduleTypeToFriendlyName = (moduleType: string): string => {\n    switch (moduleType) {\n        case 'htmlHeadTagsModule': {\n            return 'HTML Head';\n        }\n        case 'scriptModule': {\n            return 'Script';\n        }\n        case 'containerModule': {\n            return 'Container';\n        }\n        case 'contentModule': {\n            return 'Content';\n        }\n        case 'appModule': {\n            return 'App';\n        }\n        case 'pageModule': {\n            return 'Page';\n        }\n        default: {\n            return 'Uncategorized';\n        }\n    }\n};\n\nexport const generateModueListForAType = (moduleList, moduleType: string): string => {\n    moduleList = moduleList.sort((a, b) => a.name.localeCompare(b.name));\n\n    let mappedListHtml;\n    if (moduleType === 'contentModule' || moduleType === 'uncategorizedModules') {\n        mappedListHtml = moduleList.map(\n            moduleDetails => `<li style=\"line-height: 1.5\"><a href=\"${moduleDetails.mockUrl}\">${moduleDetails.name}</a></li>`\n        );\n    } else {\n        mappedListHtml = moduleList.map(moduleDetails => `<li style=\"line-height: 1.5\">${moduleDetails.name}</li>`);\n    }\n    return mappedListHtml.join('');\n};\n\n/**\n * Renders a simple web page with a list of registered content modules\n * taken from DAPI. Each module links to a view with its default mock\n *\n * @param moduleList The list of registered content modules\n */\nexport const moduleListPage = (moduleList: IModuleListTypes): string => {\n    let moduleListHtml = '';\n    let totalModuleCount = 0;\n\n    Object.keys(moduleList).forEach((moduleType: string) => {\n        const modulesForType = moduleList[moduleType];\n        if (modulesForType) {\n            moduleListHtml += `<h2>${moduleTypeToFriendlyName(moduleType)} Module${modulesForType.length !== 1 ? 's' : ''}</h2>`;\n            moduleListHtml += `<ul style=\"font-size: 1.5rem\">\n                ${generateModueListForAType(modulesForType, moduleType)}\n            </ul>`;\n            totalModuleCount += modulesForType.length;\n        }\n    });\n\n    return `<!DOCTYPE html>\n    <html>\n        <head>\n            <meta http-equiv=\"X-UA-Compatible\" content=\"IE=edge,chrome=1\" />\n            <title>Installed Modules </title>\n        </head>\n        <body>\n            <h1>List of installed modules (${totalModuleCount} module${totalModuleCount !== 1 ? 's' : ''} found)</h1>\n            <p style=\"font-size: 1.25rem\">If available, click on a module to see its preview</p>\n            ${moduleListHtml}\n        </body>\n    </html>`;\n};\n"],"sourceRoot":""},"metadata":{},"sourceType":"module"}