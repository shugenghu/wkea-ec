{"ast":null,"code":"import _regeneratorRuntime from\"@babel/runtime/regenerator\";import _asyncToGenerator from\"@babel/runtime/helpers/esm/asyncToGenerator\";import _classCallCheck from\"@babel/runtime/helpers/esm/classCallCheck\";import{createObservableDataAction}from'@msdyn365-commerce/core';import{getRefinersByTextAsync}from'@msdyn365-commerce/retail-proxy/dist/DataActions/ProductsDataActions.g';import{parseSearchData}from'./utilities/input-data-parser';import{QueryResultSettingsProxy}from'./utilities/QueryResultSettingsProxy';import{buildCacheKey}from'./utilities/utils';/**\r\n * Action Input class for the getRefinersByText data action\r\n */export var RefinersByTextInput=function RefinersByTextInput(searchText,catalogId,queryResultSettingsProxy,apiSettings){var _this=this;_classCallCheck(this,RefinersByTextInput);this.getCacheKey=function(){return buildCacheKey(\"\".concat(_this.searchText,\"|\").concat(_this.catalogId,\"|\").concat(_this.queryResultSettingsProxy.cacheKeyHint),_this.apiSettings);};this.getCacheObjectType=function(){return'ProductRefiner';};this.dataCacheType=function(){return'request';};this.catalogId=catalogId;this.searchText=searchText;this.queryResultSettingsProxy=queryResultSettingsProxy;this.apiSettings=apiSettings;};/**\r\n * Creates the input required to make the retail api call\r\n */export var createRefinersByTextInput=function createRefinersByTextInput(inputData){var searchInputData=parseSearchData(inputData);var catalogId=inputData.config?Number(inputData.config.catalogId):0;return new RefinersByTextInput(searchInputData.q,Number.isNaN(catalogId)?0:catalogId,QueryResultSettingsProxy.fromInputData(inputData),inputData.requestContext.apiSettings);};/**\r\n * Calls the Retail API and returns all refiners by text\r\n */export function getRefinersByTextAction(_x,_x2){return _getRefinersByTextAction.apply(this,arguments);}function _getRefinersByTextAction(){_getRefinersByTextAction=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee(input,ctx){return _regeneratorRuntime.wrap(function _callee$(_context){while(1){switch(_context.prev=_context.next){case 0:return _context.abrupt(\"return\",getRefinersByTextAsync({callerContext:ctx,queryResultSettings:input.queryResultSettingsProxy.QueryResultSettings},input.catalogId,input.searchText));case 1:case\"end\":return _context.stop();}}},_callee);}));return _getRefinersByTextAction.apply(this,arguments);}export default createObservableDataAction({id:'@msdyn365-commerce-modules/retail-actions/get-refiners-by-text',action:getRefinersByTextAction,input:createRefinersByTextInput});","map":{"version":3,"sources":["../../src/get-refiners-by-text.ts"],"names":[],"mappings":"8MACA,OAAS,0BAAT,KAAiG,yBAAjG,CAGA,OAAS,sBAAT,KAAuC,wEAAvC,CACA,OAAS,eAAT,KAAgC,+BAAhC,CACA,OAAS,wBAAT,KAAyC,sCAAzC,CACA,OAAS,aAAT,KAA8B,mBAA9B,CAEA;;AAEG,GACH,UAAa,CAAA,mBAAb,CAMI,6BACI,UADJ,CAEI,SAFJ,CAGI,wBAHJ,CAII,WAJJ,CAIqC,0DAO9B,KAAA,WAAA,CAAc,iBAAM,CAAA,aAAa,WAAI,KAAI,CAAC,UAAT,aAAuB,KAAI,CAAC,SAA5B,aAAyC,KAAI,CAAC,wBAAL,CAA8B,YAAvE,EAAuF,KAAI,CAAC,WAA5F,CAAnB,EAAd,CACA,KAAA,kBAAA,CAAqB,iBAAM,gBAAN,EAArB,CACA,KAAA,aAAA,CAAgB,iBAAiB,SAAjB,EAAhB,CARH,KAAK,SAAL,CAAiB,SAAjB,CACA,KAAK,UAAL,CAAkB,UAAlB,CACA,KAAK,wBAAL,CAAgC,wBAAhC,CACA,KAAK,WAAL,CAAmB,WAAnB,CACH,CAfL,CAsBA;;AAEG,GACH,MAAO,IAAM,CAAA,yBAAyB,CAAG,QAA5B,CAAA,yBAA4B,CAAC,SAAD,CAAkE,CACvG,GAAM,CAAA,eAAe,CAAG,eAAe,CAAC,SAAD,CAAvC,CACA,GAAM,CAAA,SAAS,CAAG,SAAS,CAAC,MAAV,CAAmB,MAAM,CAAC,SAAS,CAAC,MAAV,CAAiB,SAAlB,CAAzB,CAAwD,CAA1E,CAEA,MAAO,IAAI,CAAA,mBAAJ,CACH,eAAe,CAAC,CADb,CAEH,MAAM,CAAC,KAAP,CAAa,SAAb,EAA0B,CAA1B,CAA8B,SAF3B,CAGH,wBAAwB,CAAC,aAAzB,CAAuC,SAAvC,CAHG,CAIH,SAAS,CAAC,cAAV,CAAyB,WAJtB,CAAP,CAMH,CAVM,CAYP;;AAEG,GACH,eAAsB,CAAA,uBAAtB,gE,qHAAO,iBAAuC,KAAvC,CAAmE,GAAnE,kJACI,sBAAsB,CACzB,CAAE,aAAa,CAAE,GAAjB,CAAsB,mBAAmB,CAAE,KAAK,CAAC,wBAAN,CAA+B,mBAA1E,CADyB,CAEzB,KAAK,CAAC,SAFmB,CAGzB,KAAK,CAAC,UAHmB,CAD1B,wD,0DAOP,cAAe,CAAA,0BAA0B,CAAC,CACtC,EAAE,CAAE,gEADkC,CAEtC,MAAM,CAA6B,uBAFG,CAGtC,KAAK,CAAE,yBAH+B,CAAD,CAAzC","sourcesContent":["import { CacheType, IAction, IActionInput, ICommerceApiSettings } from '@msdyn365-commerce/core';\nimport { createObservableDataAction, IActionContext, IAny, ICreateActionContext, IGeneric } from '@msdyn365-commerce/core';\nimport { ProductRefiner } from '@msdyn365-commerce/retail-proxy';\n\nimport { getRefinersByTextAsync } from '@msdyn365-commerce/retail-proxy/dist/DataActions/ProductsDataActions.g';\nimport { parseSearchData } from './utilities/input-data-parser';\nimport { QueryResultSettingsProxy } from './utilities/QueryResultSettingsProxy';\nimport { buildCacheKey } from './utilities/utils';\n\n/**\n * Action Input class for the getRefinersByText data action\n */\nexport class RefinersByTextInput implements IActionInput {\n    public readonly catalogId: number;\n    public readonly searchText: string;\n    public readonly queryResultSettingsProxy: QueryResultSettingsProxy;\n    private apiSettings: ICommerceApiSettings;\n\n    constructor(\n        searchText: string,\n        catalogId: number,\n        queryResultSettingsProxy: QueryResultSettingsProxy,\n        apiSettings: ICommerceApiSettings) {\n        this.catalogId = catalogId;\n        this.searchText = searchText;\n        this.queryResultSettingsProxy = queryResultSettingsProxy;\n        this.apiSettings = apiSettings;\n    }\n\n    public getCacheKey = () => buildCacheKey(`${this.searchText}|${this.catalogId}|${this.queryResultSettingsProxy.cacheKeyHint}`, this.apiSettings);\n    public getCacheObjectType = () => 'ProductRefiner';\n    public dataCacheType = (): CacheType => 'request';\n}\n\n/**\n * Creates the input required to make the retail api call\n */\nexport const createRefinersByTextInput = (inputData: ICreateActionContext<IGeneric<IAny>>): IActionInput => {\n    const searchInputData = parseSearchData(inputData);\n    const catalogId = inputData.config ? Number(inputData.config.catalogId) : 0;\n\n    return new RefinersByTextInput(\n        searchInputData.q,\n        Number.isNaN(catalogId) ? 0 : catalogId,\n        QueryResultSettingsProxy.fromInputData(inputData),\n        inputData.requestContext.apiSettings\n    );\n};\n\n/**\n * Calls the Retail API and returns all refiners by text\n */\nexport async function getRefinersByTextAction(input: RefinersByTextInput, ctx: IActionContext): Promise<ProductRefiner[]> {\n    return getRefinersByTextAsync(\n        { callerContext: ctx, queryResultSettings: input.queryResultSettingsProxy.QueryResultSettings },\n        input.catalogId,\n        input.searchText);\n}\n\nexport default createObservableDataAction({\n    id: '@msdyn365-commerce-modules/retail-actions/get-refiners-by-text',\n    action: <IAction<ProductRefiner[]>>getRefinersByTextAction,\n    input: createRefinersByTextInput\n});\n"],"sourceRoot":""},"metadata":{},"sourceType":"module"}