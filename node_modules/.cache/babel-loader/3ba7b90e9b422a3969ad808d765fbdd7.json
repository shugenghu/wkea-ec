{"ast":null,"code":"import\"core-js/modules/es.regexp.to-string.js\";import\"core-js/modules/es.string.replace.js\";import\"core-js/modules/web.dom-collections.for-each.js\";import _defineProperty from\"@babel/runtime/helpers/esm/defineProperty\";function ownKeys(object,enumerableOnly){var keys=Object.keys(object);if(Object.getOwnPropertySymbols){var symbols=Object.getOwnPropertySymbols(object);if(enumerableOnly)symbols=symbols.filter(function(sym){return Object.getOwnPropertyDescriptor(object,sym).enumerable;});keys.push.apply(keys,symbols);}return keys;}function _objectSpread(target){for(var i=1;i<arguments.length;i++){var source=arguments[i]!=null?arguments[i]:{};if(i%2){ownKeys(Object(source),true).forEach(function(key){_defineProperty(target,key,source[key]);});}else if(Object.getOwnPropertyDescriptors){Object.defineProperties(target,Object.getOwnPropertyDescriptors(source));}else{ownKeys(Object(source)).forEach(function(key){Object.defineProperty(target,key,Object.getOwnPropertyDescriptor(source,key));});}}return target;}export function getQuantityError(stockLeft,resources){if(!stockLeft||stockLeft<=0){return resources.errorMessageOutOfStock;}else if(stockLeft===1){return resources.errorMessageOutOfRangeOneLeft;}else{return resources.errorMessageOutOfRangeFormat.replace('{numLeft}',stockLeft.toString());}}export function getGenericError(result,cart,resources,context,product,productAvailability,location){if(result.failureReason==='EMPTYINPUT'){return resources.addedToCartFailureMessage;}else if(result.failureReason==='CARTACTIONFAILED'){if(result.cartActionResult&&result.cartActionResult.substatus==='MAXQUANTITY'){let elementFoundAt=-1;const productIdToFind=product===null||product===void 0?void 0:product.RecordId;for(let i=0;i<cart.cart.CartLines.length;i++){var _context$actionContex;if(cart.cart.CartLines[i].ProductId===productIdToFind&&(cart.cart.CartLines[i].DeliveryMode||'')===(location&&((_context$actionContex=context.actionContext.requestContext.channel)===null||_context$actionContex===void 0?void 0:_context$actionContex.PickupDeliveryModeCode)||'')&&(cart.cart.CartLines[i].FulfillmentStoreId||'')===((location===null||location===void 0?void 0:location.OrgUnitNumber)||'')){elementFoundAt=i;break;}}let curQuantity=0;if(elementFoundAt!==-1){const cartLineToUpdate=_objectSpread({},cart.cart.CartLines[elementFoundAt]);curQuantity=cartLineToUpdate.Quantity||0;}const maxQuantityForCartLineItem=context.app.config.maxQuantityForCartLineItem;const availableQty=productAvailability===null||productAvailability===void 0?void 0:productAvailability.AvailableQuantity;let quantityLimit;if(maxQuantityForCartLineItem===undefined&&availableQty===undefined){quantityLimit=10;}else if(availableQty===undefined){quantityLimit=maxQuantityForCartLineItem;}else if(maxQuantityForCartLineItem===undefined){quantityLimit=availableQty;}else{quantityLimit=Math.min(maxQuantityForCartLineItem,availableQty);}return resources.maxQuantityLimitText.replace('{curQuantity}',curQuantity.toString()).replace('{maxQuantity}',quantityLimit.toString());}return resources.addedToCartFailureMessage;}return undefined;}export function getConfigureErrors(result,resources){if(!result){return{};}const dimensions={};result.forEach(dimension=>{dimensions[dimension.DimensionTypeValue]=getDimensionErrorString(dimension.DimensionTypeValue,resources);});return dimensions;}export function getDimensionErrorString(dimensionTypeValue,resources){switch(dimensionTypeValue){case 1:return resources.productDimensionTypeColorErrorMessage;case 2:return resources.productDimensionTypeConfigurationErrorMessage;case 3:return resources.productDimensionTypeSizeErrorMessage;case 4:return resources.productDimensionTypeStyleErrorMessage;default:return'';}}","map":{"version":3,"sources":["modules/buybox/utilities/error-utilities.ts"],"names":[],"mappings":"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","sourcesContent":["import { IAddToCartFailureResult } from '@msdyn365-commerce/components';\nimport { IAny, ICoreContext, IGeneric } from '@msdyn365-commerce/core';\nimport { ICartState } from '@msdyn365-commerce/global-state';\nimport { OrgUnitLocation, ProductAvailableQuantity , ProductDimension, SimpleProduct } from '@msdyn365-commerce/retail-proxy';\nimport { IBuyboxResources } from '../buybox.props.autogenerated';\n\nexport function getQuantityError(stockLeft: number | undefined, resources: IBuyboxResources): string | undefined {\n    if (!stockLeft || stockLeft <= 0) {\n        return resources.errorMessageOutOfStock;\n    } else if (stockLeft === 1) {\n        return resources.errorMessageOutOfRangeOneLeft;\n    } else {\n        return resources.errorMessageOutOfRangeFormat.replace('{numLeft}', stockLeft.toString());\n    }\n}\n\n// tslint:disable-next-line:cyclomatic-complexity\nexport function getGenericError(result: IAddToCartFailureResult, cart: ICartState | undefined, resources: IBuyboxResources, context: ICoreContext<IGeneric<IAny>>,\n                                product: SimpleProduct | undefined, productAvailability: ProductAvailableQuantity  | undefined, location: OrgUnitLocation | undefined): string | undefined {\n    if (result.failureReason === 'EMPTYINPUT') {\n        return resources.addedToCartFailureMessage;\n    } else if (result.failureReason === 'CARTACTIONFAILED') {\n        if (result.cartActionResult && result.cartActionResult.substatus === 'MAXQUANTITY') {\n\n            // get the quantity of the product in cart\n            let elementFoundAt:number = -1;\n            const productIdToFind = product?.RecordId;\n\n            for (let i = 0; i < cart!.cart.CartLines!.length; i++) {\n                if (cart!.cart.CartLines![i].ProductId === productIdToFind &&\n                    (cart!.cart.CartLines![i].DeliveryMode || '') === (location && context.actionContext.requestContext.channel?.PickupDeliveryModeCode || '') &&\n                    (cart!.cart.CartLines![i].FulfillmentStoreId || '') === (location?.OrgUnitNumber || '')) {\n                    elementFoundAt = i;\n\n                    break;\n                }\n            }\n\n            let curQuantity: number =  0;\n\n            if (elementFoundAt !== -1) {\n                const cartLineToUpdate = {...cart!.cart.CartLines![elementFoundAt]};\n                curQuantity = cartLineToUpdate.Quantity || 0;\n            }\n\n            // get the quantity limit for the product\n            const maxQuantityForCartLineItem = context.app.config.maxQuantityForCartLineItem;\n            const availableQty = productAvailability?.AvailableQuantity;\n\n            let quantityLimit: number;\n\n            if (maxQuantityForCartLineItem === undefined && availableQty === undefined) {\n                quantityLimit = 10;\n            } else if (availableQty === undefined) {\n                quantityLimit = maxQuantityForCartLineItem;\n            } else if (maxQuantityForCartLineItem === undefined) {\n                quantityLimit = availableQty;\n            } else {\n                quantityLimit = Math.min(maxQuantityForCartLineItem, availableQty);\n            }\n\n            return resources.maxQuantityLimitText.replace('{curQuantity}', curQuantity.toString()).replace('{maxQuantity}', quantityLimit.toString());\n        }\n\n        return resources.addedToCartFailureMessage;\n    }\n\n    return undefined;\n}\n\nexport function getConfigureErrors(result: ProductDimension[] | undefined, resources: IBuyboxResources):  { [configureId: string]: string | undefined } {\n    if (!result) {\n        return {};\n    }\n\n    const dimensions: { [configureId: string]: string | undefined } = {};\n\n    result.forEach(dimension => {\n        dimensions[dimension.DimensionTypeValue] = getDimensionErrorString(dimension.DimensionTypeValue, resources);\n    });\n\n    return dimensions;\n}\n\nexport function getDimensionErrorString(dimensionTypeValue: number, resources: IBuyboxResources): string {\n    switch (dimensionTypeValue) {\n        case 1: // ProductDimensionType.Color\n            return resources.productDimensionTypeColorErrorMessage;\n        case 2: // ProductDimensionType.Configuration\n            return resources.productDimensionTypeConfigurationErrorMessage;\n        case 3: // ProductDimensionType.Size\n            return resources.productDimensionTypeSizeErrorMessage;\n        case 4: // ProductDimensionType.Style\n            return resources.productDimensionTypeStyleErrorMessage;\n        default:\n            return '';\n    }\n}"],"sourceRoot":"./src/"},"metadata":{},"sourceType":"module"}