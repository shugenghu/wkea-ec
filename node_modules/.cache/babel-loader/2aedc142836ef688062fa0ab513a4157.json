{"ast":null,"code":"import\"core-js/modules/es.promise.js\";import{msdyn365Commerce}from'@msdyn365-commerce/core';import{createObservableDataAction}from'@msdyn365-commerce/core';import Cookie from'js-cookie';import{copyAsync}from'@msdyn365-commerce/retail-proxy/dist/DataActions/CartsDataActions.g';import{buildCacheKey}from'./utilities/utils';import{getCartState}from'@msdyn365-commerce/global-state';/**\r\n * Input class for getCheckoutCart data action\r\n */export class GetCheckoutCartInput{constructor(apiSettings){this.getCacheKey=()=>buildCacheKey(\"ActiveCheckoutCart\",this.apiSettings);this.getCacheObjectType=()=>'ActiveCheckoutCart';this.dataCacheType=()=>'request';this.apiSettings=apiSettings;}}const createInput=inputData=>{return new GetCheckoutCartInput(inputData.requestContext.apiSettings);};// @ts-ignore\nconst CartCookieName=msdyn365Commerce.CartCookie||'cart';/**\r\n * Data action to copy the cart for checkout actions\r\n */export async function getCheckoutCart(input,ctx){const cartId=Cookie.get(CartCookieName)||'';if(cartId){const currentCartState=await getCartState(ctx);const activeCart=currentCartState.cart;// check if there is an active cart and it isn't empty\nif(activeCart&&Object.keys(activeCart).length>0){const checkoutCart=await copyAsync({callerContext:ctx},activeCart.Id,2);if(checkoutCart){return Array.isArray(checkoutCart)?checkoutCart[0]:checkoutCart;}}else{ctx.trace(\"[get-checkout-cart] Can't create a checkout cart since active cart is empty\");}}return{};}export default createObservableDataAction({id:'@msdyn365-commerce-modules/retail-actions/get-checkout-cart',action:getCheckoutCart,input:createInput});","map":{"version":3,"sources":["../../src/get-checkout-cart.ts"],"names":[],"mappings":"sCAAA,OAAiF,gBAAjF,KAAyG,yBAAzG,CACA,OAAS,0BAAT,KAAiE,yBAAjE,CAEA,MAAO,CAAA,MAAP,KAAmB,WAAnB,CAEA,OAAS,SAAT,KAA0B,qEAA1B,CACA,OAAS,aAAT,KAA8B,mBAA9B,CAEA,OAAS,YAAT,KAA6B,iCAA7B,CAEA;;AAEG,GACH,MAAM,MAAO,CAAA,oBAAoB,CAG7B,WAAA,CAAY,WAAZ,CAA6C,CAItC,KAAA,WAAA,CAAc,IAAM,aAAa,sBAAuB,KAAK,WAA5B,CAAjC,CACA,KAAA,kBAAA,CAAqB,IAAM,oBAA3B,CACA,KAAA,aAAA,CAAgB,IAAiB,SAAjC,CALH,KAAK,WAAL,CAAmB,WAAnB,CACH,CAL4B,CAYjC,KAAM,CAAA,WAAW,CAAI,SAAD,EAAoC,CACpD,MAAO,IAAI,CAAA,oBAAJ,CAAyB,SAAS,CAAC,cAAV,CAAyB,WAAlD,CAAP,CACH,CAFD,CAIA;AACA,KAAM,CAAA,cAAc,CAAW,gBAAgB,CAAC,UAAjB,EAA+B,MAA9D,CAEA;;AAEG,GACH,MAAO,eAAe,CAAA,eAAf,CAA+B,KAA/B,CAA4D,GAA5D,CAA+E,CAClF,KAAM,CAAA,MAAM,CAAG,MAAM,CAAC,GAAP,CAAW,cAAX,GAA8B,EAA7C,CACA,GAAI,MAAJ,CAAY,CACR,KAAM,CAAA,gBAAgB,CAAG,KAAM,CAAA,YAAY,CAAC,GAAD,CAA3C,CACA,KAAM,CAAA,UAAU,CAAG,gBAAgB,CAAC,IAApC,CAEA;AACA,GAAI,UAAU,EAAI,MAAM,CAAC,IAAP,CAAY,UAAZ,EAAwB,MAAxB,CAAiC,CAAnD,CAAsD,CAClD,KAAM,CAAA,YAAY,CAAG,KAAM,CAAA,SAAS,CAAC,CAAE,aAAa,CAAE,GAAjB,CAAD,CAAyB,UAAU,CAAC,EAApC,CAAwC,CAAxC,CAApC,CAEA,GAAI,YAAJ,CAAkB,CACd,MAAO,CAAA,KAAK,CAAC,OAAN,CAAc,YAAd,EAA8B,YAAY,CAAC,CAAD,CAA1C,CAAgD,YAAvD,CACH,CACJ,CAND,IAMO,CACH,GAAG,CAAC,KAAJ,gFACH,CACJ,CAED,MAAa,EAAb,CACH,CAED,cAAe,CAAA,0BAA0B,CAAC,CACtC,EAAE,CAAE,6DADkC,CAEtC,MAAM,CAAiB,eAFe,CAGtC,KAAK,CAAE,WAH+B,CAAD,CAAzC","sourcesContent":["import { CacheType, IAction, IActionContext, IActionInput, ICommerceApiSettings, msdyn365Commerce } from '@msdyn365-commerce/core';\nimport { createObservableDataAction, ICreateActionContext } from '@msdyn365-commerce/core';\nimport { Cart } from '@msdyn365-commerce/retail-proxy';\nimport Cookie from 'js-cookie';\n\nimport { copyAsync } from '@msdyn365-commerce/retail-proxy/dist/DataActions/CartsDataActions.g';\nimport { buildCacheKey } from './utilities/utils';\n\nimport { getCartState } from '@msdyn365-commerce/global-state';\n\n/**\n * Input class for getCheckoutCart data action\n */\nexport class GetCheckoutCartInput implements IActionInput {\n    private apiSettings: ICommerceApiSettings;\n\n    constructor(apiSettings: ICommerceApiSettings) {\n        this.apiSettings = apiSettings;\n    }\n\n    public getCacheKey = () => buildCacheKey(`ActiveCheckoutCart`, this.apiSettings);\n    public getCacheObjectType = () => 'ActiveCheckoutCart';\n    public dataCacheType = (): CacheType => 'request';\n}\n\nconst createInput = (inputData: ICreateActionContext) => {\n    return new GetCheckoutCartInput(inputData.requestContext.apiSettings);\n};\n\n// @ts-ignore\nconst CartCookieName: string = msdyn365Commerce.CartCookie || 'cart';\n\n/**\n * Data action to copy the cart for checkout actions\n */\nexport async function getCheckoutCart(input: GetCheckoutCartInput, ctx: IActionContext): Promise<Cart> {\n    const cartId = Cookie.get(CartCookieName) || '';\n    if (cartId) {\n        const currentCartState = await getCartState(ctx);\n        const activeCart = currentCartState.cart;\n\n        // check if there is an active cart and it isn't empty\n        if (activeCart && Object.keys(activeCart).length > 0) {\n            const checkoutCart = await copyAsync({ callerContext: ctx }, activeCart.Id, 2);\n\n            if (checkoutCart) {\n                return Array.isArray(checkoutCart) ? checkoutCart[0] : checkoutCart;\n            }\n        } else {\n            ctx.trace(`[get-checkout-cart] Can't create a checkout cart since active cart is empty`);\n        }\n    }\n\n    return <Cart>{};\n}\n\nexport default createObservableDataAction({\n    id: '@msdyn365-commerce-modules/retail-actions/get-checkout-cart',\n    action: <IAction<Cart>>getCheckoutCart,\n    input: createInput\n});\n"],"sourceRoot":""},"metadata":{},"sourceType":"module"}