{"ast":null,"code":"import{getCacheKey}from'../utils/link-utils';/**\r\n * Input Class for ProductLink related actions\r\n */export class ProductLinkInput{constructor(apiSettings,categoryId,productId){this.getCacheKey=()=>\"\".concat(getCacheKey(this.apiSettings),\"-\").concat(this.categoryId,\"-\").concat(this.productId);this.getCacheObjectType=()=>'ProductLink';this.dataCacheType=()=>'application';this.categoryId=categoryId;this.productId=productId;this.channelId=apiSettings.channelId;this.apiSettings=apiSettings;}}/**\r\n * Input Class for CategoryLink related actions\r\n */export class CategoryLinkInput{constructor(apiSettings,categoryId){this.getCacheKey=()=>\"\".concat(getCacheKey(this.apiSettings),\"-\").concat(this.categoryId);this.getCacheObjectType=()=>'CategoryLink';this.dataCacheType=()=>'application';this.categoryId=categoryId;this.channelId=apiSettings.channelId;this.apiSettings=apiSettings;}}// Enum Representing all supported ProductList types\nexport var ProductListType;(function(ProductListType){ProductListType[ProductListType[\"algo\"]=0]=\"algo\";ProductListType[ProductListType[\"editorial\"]=1]=\"editorial\";ProductListType[ProductListType[\"productByCategory\"]=2]=\"productByCategory\";ProductListType[ProductListType[\"productBySearch\"]=3]=\"productBySearch\";ProductListType[ProductListType[\"recommendation\"]=4]=\"recommendation\";ProductListType[ProductListType[\"relatedProducts\"]=5]=\"relatedProducts\";})(ProductListType||(ProductListType={}));/**\r\n * Input Class for ProductList related actions\r\n */export class ProductListInput{constructor(listMetadata,actionContext){this.getCacheKey=()=>this._cacheKey;this.getCacheObjectType=()=>this._cacheObjectType;this.dataCacheType=()=>this._cacheType;const requestContext=actionContext.requestContext;this.listMetadata=listMetadata;this.catalogId=requestContext.apiSettings.catalogId;this.channelId=requestContext.apiSettings.channelId;this._cacheObjectType=\"ProductList-\".concat(listMetadata.listType);const query=requestContext.query||{};const skipToken=query.skip;const context=JSON.stringify(requestContext.urlTokens);const baseCacheKey=\"\".concat(this.channelId,\"-\").concat(this.catalogId,\"-\").concat(JSON.stringify(listMetadata),\"-\").concat(skipToken||'');switch(ProductListType[listMetadata.listType]){case ProductListType.productBySearch:// application cache if not reading from context\nthis._cacheType=listMetadata.searchText?'application':'request';this._cacheKey=listMetadata.searchText?baseCacheKey:\"\".concat(baseCacheKey,\"-\").concat(query.q||'');break;case ProductListType.productByCategory:this._cacheType='application';this._cacheKey=listMetadata.categoryIds&&listMetadata.categoryIds.length?baseCacheKey:\"\".concat(baseCacheKey,\"-\").concat(context);break;case ProductListType.relatedProducts:this._cacheType='application';this._cacheKey=listMetadata.productIds&&listMetadata.productIds.length?baseCacheKey:\"\".concat(baseCacheKey,\"-\").concat(context);break;case ProductListType.editorial:case ProductListType.algo:case ProductListType.recommendation:default:this._cacheType=listMetadata.includeCart||listMetadata.personalization?'request':'application';this._cacheKey=\"\".concat(baseCacheKey,\"-\").concat(context);}}}","map":{"version":3,"sources":["../../../src/hydrators/hydrator-action-inputs.ts"],"names":[],"mappings":"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","sourcesContent":["/*!\n * Copyright (c) Microsoft Corporation.\n * All rights reserved. See LICENSE in the project root for license information.\n */\nimport { CacheType, IActionContext, IActionInput, ICommerceApiSettings } from '@msdyn365-commerce/core-internal';\nimport { getCacheKey } from '../utils/link-utils';\n\n/**\n * Links coming from OneRF will have the following structure\n */\nexport interface IServerLink {\n    type: string;\n    productId?: number;\n    categoryId?: number;\n    destinationUrl?: string;\n    error?: string;\n    // tslint:disable-next-line: no-any\n    [x: string]: any;\n}\n\n/**\n * Used by the URL builder to construct the formatted\n * category or product link\n */\nexport interface IPageTypeContext {\n    category?: {\n        Slug: string;\n        RecordId: number;\n    };\n    product?: {\n        Name: string;\n        RecordId: number;\n    };\n    // tslint:disable-next-line: no-any needed because type pageTypeContext in url builder allows additional properties\n    [x: string]: any;\n}\n\n/**\n * Input Class for ProductLink related actions\n */\nexport class ProductLinkInput implements IActionInput {\n    public categoryId: number;\n    public productId: number | undefined;\n    public channelId: number;\n    private apiSettings: ICommerceApiSettings;\n\n    constructor(apiSettings: ICommerceApiSettings, categoryId: number, productId?: number) {\n        this.categoryId = categoryId;\n        this.productId = productId;\n        this.channelId = apiSettings.channelId;\n        this.apiSettings = apiSettings;\n    }\n\n    public getCacheKey = () => `${getCacheKey(this.apiSettings)}-${this.categoryId}-${this.productId}`;\n    public getCacheObjectType = () => 'ProductLink';\n    public dataCacheType = (): CacheType => 'application';\n}\n\n/**\n * Input Class for CategoryLink related actions\n */\nexport class CategoryLinkInput implements IActionInput {\n    public categoryId: number;\n    public channelId: number;\n    private apiSettings: ICommerceApiSettings;\n\n    constructor(apiSettings: ICommerceApiSettings, categoryId: number) {\n        this.categoryId = categoryId;\n        this.channelId = apiSettings.channelId;\n        this.apiSettings = apiSettings;\n    }\n\n    public getCacheKey = () => `${getCacheKey(this.apiSettings)}-${this.categoryId}`;\n    public getCacheObjectType = () => 'CategoryLink';\n    public dataCacheType = (): CacheType => 'application';\n}\n\n/**\n * ProductList metadata passed from CMS used to hydrate product list\n */\nexport interface IProductListMetaData {\n    listType: string;\n    productIds?: number[];\n    categoryIds?: number[];\n    searchText?: string;\n    includePageContext?: boolean;\n    includeDescendentCategoryChildren?: boolean;\n    includeCart?: boolean;\n    personalization?: boolean;\n    recommendationListId?: string;\n    relationshipId?: string;\n    pageSize?: number;\n}\n\n// Enum Representing all supported ProductList types\nexport enum ProductListType {\n    algo,\n    editorial,\n    productByCategory,\n    productBySearch,\n    recommendation,\n    relatedProducts\n}\n\n/**\n * Input Class for ProductList related actions\n */\nexport class ProductListInput implements IActionInput {\n    public listMetadata: IProductListMetaData;\n    public channelId: number;\n    public catalogId: number;\n    private _cacheType: CacheType;\n    private _cacheObjectType: string;\n    private _cacheKey: string;\n\n    constructor(listMetadata: IProductListMetaData, actionContext: IActionContext) {\n        const requestContext = actionContext.requestContext;\n\n        this.listMetadata = listMetadata;\n        this.catalogId = requestContext.apiSettings.catalogId;\n        this.channelId = requestContext.apiSettings.channelId;\n        this._cacheObjectType = `ProductList-${listMetadata.listType}`;\n\n        const query = requestContext.query || {};\n        const skipToken = query.skip;\n        const context = JSON.stringify(requestContext.urlTokens);\n        const baseCacheKey = `${this.channelId}-${this.catalogId}-${JSON.stringify(listMetadata)}-${skipToken || ''}`;\n\n        switch (ProductListType[listMetadata.listType]) {\n            case ProductListType.productBySearch:\n                // application cache if not reading from context\n                this._cacheType = listMetadata.searchText ? 'application' : 'request';\n                this._cacheKey = listMetadata.searchText ? baseCacheKey : `${baseCacheKey}-${query.q || ''}`;\n                break;\n            case ProductListType.productByCategory:\n                this._cacheType = 'application';\n                this._cacheKey = listMetadata.categoryIds && listMetadata.categoryIds.length ? baseCacheKey : `${baseCacheKey}-${context}`;\n                break;\n            case ProductListType.relatedProducts:\n                this._cacheType = 'application';\n                this._cacheKey = listMetadata.productIds && listMetadata.productIds.length ? baseCacheKey : `${baseCacheKey}-${context}`;\n                break;\n            case ProductListType.editorial:\n            case ProductListType.algo:\n            case ProductListType.recommendation:\n            default:\n                this._cacheType = listMetadata.includeCart || listMetadata.personalization ? 'request' : 'application';\n                this._cacheKey = `${baseCacheKey}-${context}`;\n        }\n    }\n\n    public getCacheKey = () => this._cacheKey;\n    public getCacheObjectType = () => this._cacheObjectType;\n    public dataCacheType = (): CacheType => this._cacheType;\n}\n"],"sourceRoot":""},"metadata":{},"sourceType":"module"}