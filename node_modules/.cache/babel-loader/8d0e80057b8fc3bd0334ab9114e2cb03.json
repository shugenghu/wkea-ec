{"ast":null,"code":"import{format}from'@msdyn365-commerce-modules/utilities';import*as React from'react';import{groupSalesLines}from'./utilities';export var getGroups=function getGroups(_ref){var moduleName=_ref.moduleName,salesLines=_ref.salesLines,_ref$resources=_ref.resources,orderItemLabel=_ref$resources.orderItemLabel,orderItemsLabel=_ref$resources.orderItemsLabel,pickupItemsHeader=_ref$resources.pickupItemsHeader,pickingItemsLabel=_ref$resources.pickingItemsLabel,shippingAddressTitle=_ref$resources.shippingAddressTitle,shippingItemToYouLabel=_ref$resources.shippingItemToYouLabel,showAddress=_ref.showAddress,isConfirmationView=_ref.isConfirmationView;var groups=groupSalesLines(salesLines).map(function(group){var deliveryType=group.deliveryType,salesStatus=group.salesStatus,count=group.count,_salesLines=group.salesLines;var itemLabel=count===1?orderItemLabel:orderItemsLabel;var pickingItemsLabelText=pickingItemsLabel&&format(pickingItemsLabel,count,itemLabel);var shippingItemsToYouText=shippingItemToYouLabel&&format(shippingItemToYouLabel,count,itemLabel);var groupProps={className:\"\".concat(moduleName,\"__group-deliveryType-\").concat(deliveryType,\" salesStatus-\").concat(salesStatus)};var salesLinesProps={className:\"\".concat(moduleName,\"__sales-lines\")};var address=_salesLines[0].address;var trackingInfo=_salesLines[0].trackingInfo;var isProcessing=_salesLines[0].data.salesStatus==='processing';var delivery={deliveryProps:{className:\"\".concat(moduleName,\"__group-delivery\")},heading:/*#__PURE__*/React.createElement(\"span\",{className:\"\".concat(moduleName,\"__group-delivery-heading\")},isProcessing?isConfirmationView?deliveryType==='pickUp'?pickupItemsHeader:shippingAddressTitle:_salesLines[0].deliveryType:_salesLines[0].salesStatus),processing:isProcessing?/*#__PURE__*/React.createElement(\"span\",{className:\"\".concat(moduleName,\"__group-delivery-processing-label\")},_salesLines[0].salesStatus):undefined,count:!isConfirmationView&&/*#__PURE__*/React.createElement(\"span\",{className:\"\".concat(moduleName,\"__group-delivery-total-items\")},\"(\".concat(count,\" \").concat(itemLabel,\")\")),shippingItemsToYou:isConfirmationView&&deliveryType==='ship'?/*#__PURE__*/React.createElement(\"span\",{className:\"\".concat(moduleName,\"__sales-lines-shipping-items-label\")},shippingItemsToYouText):/*#__PURE__*/React.createElement(\"span\",{className:\"\".concat(moduleName,\"__sales-lines-picking-items-label\")},pickingItemsLabelText),trackingInfo:trackingInfo,address:address};return{groupProps:groupProps,salesLinesProps:salesLinesProps,delivery:delivery,salesLines:_salesLines,address:showAddress&&address,data:{count:count,deliveryType:deliveryType,salesStatus:salesStatus}};});return{groupsProps:{className:\"\".concat(moduleName,\"__groups\")},groups:groups};};","map":{"version":3,"sources":["common/get-groups.tsx"],"names":[],"mappings":"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","sourcesContent":["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nimport { format, INodeProps } from '@msdyn365-commerce-modules/utilities';\nimport * as React from 'react';\nimport { ISalesLine } from './get-sales-line';\nimport { groupSalesLines, IDeliveryType, ISalesStatusCode } from './utilities';\n\nexport interface IGroupDelivery {\n    deliveryProps: INodeProps;\n    heading: React.ReactNode;\n    count: React.ReactNode;\n    processing: React.ReactNode;\n    trackingInfo: React.ReactNode;\n    address: React.ReactNode;\n    shippingItemsToYou?: React.ReactNode;\n}\n\nexport interface IGroup {\n    groupProps: INodeProps;\n    salesLinesProps: INodeProps;\n    delivery: IGroupDelivery;\n    salesLines: ISalesLine[];\n    address: React.ReactNode;\n    // row data\n    data: {\n        count: number;\n        deliveryType: IDeliveryType;\n        salesStatus: ISalesStatusCode;\n    };\n}\n\nexport interface IGroupsInput {\n    moduleName: string;\n    salesLines: ISalesLine[];\n    resources: {\n        orderItemLabel: string;\n        orderItemsLabel: string;\n        pickupItemsHeader?: string;\n        pickingItemsLabel?: string;\n        shippingAddressTitle?: string;\n        shippingItemToYouLabel?: string;\n    };\n    showAddress?: boolean;\n    isConfirmationView?: boolean;\n}\n\nexport interface IGroups {\n    groupsProps: INodeProps;\n    groups: IGroup[];\n}\n\nexport const getGroups = ({ moduleName, salesLines, resources: { orderItemLabel, orderItemsLabel, pickupItemsHeader, pickingItemsLabel, shippingAddressTitle, shippingItemToYouLabel }, showAddress, isConfirmationView }: IGroupsInput): IGroups => {\n    const groups = groupSalesLines(salesLines).map(group => {\n        const { deliveryType, salesStatus, count, salesLines: _salesLines } = group;\n        const itemLabel = count === 1 ? orderItemLabel : orderItemsLabel;\n        const pickingItemsLabelText = pickingItemsLabel && format(pickingItemsLabel, count, itemLabel);\n        const shippingItemsToYouText = shippingItemToYouLabel && format(shippingItemToYouLabel, count, itemLabel);\n        const groupProps = { className: `${moduleName}__group-deliveryType-${deliveryType} salesStatus-${salesStatus}` };\n        const salesLinesProps = { className: `${moduleName}__sales-lines` };\n        const address = _salesLines[0].address;\n        const trackingInfo = _salesLines[0].trackingInfo;\n        const isProcessing = _salesLines[0].data.salesStatus === 'processing';\n        const delivery = {\n            deliveryProps: { className: `${moduleName}__group-delivery` },\n            heading: (\n                <span className={`${moduleName}__group-delivery-heading`}>\n                    {isProcessing\n                        ? isConfirmationView\n                            ? deliveryType === 'pickUp' ? pickupItemsHeader : shippingAddressTitle\n                            : _salesLines[0].deliveryType\n                        : _salesLines[0].salesStatus}\n                </span>\n            ),\n            processing: isProcessing ? (\n                <span className={`${moduleName}__group-delivery-processing-label`}>{_salesLines[0].salesStatus}</span>\n            ) : (\n                    undefined\n                ),\n            count: !isConfirmationView && <span className={`${moduleName}__group-delivery-total-items`}>{`(${count} ${itemLabel})`}</span>,\n            shippingItemsToYou: isConfirmationView && deliveryType === 'ship'\n                ? <span className={`${moduleName}__sales-lines-shipping-items-label`}>{shippingItemsToYouText}</span>\n                : <span className={`${moduleName}__sales-lines-picking-items-label`}>{pickingItemsLabelText}</span>,\n            trackingInfo,\n            address\n        };\n        return {\n            groupProps,\n            salesLinesProps,\n            delivery,\n            salesLines: _salesLines,\n            address: (showAddress) && address,\n            data: {\n                count,\n                deliveryType,\n                salesStatus\n            }\n        };\n    });\n\n    return {\n        groupsProps: { className: `${moduleName}__groups` },\n        groups\n    };\n};\n"],"sourceRoot":"./src/"},"metadata":{},"sourceType":"module"}