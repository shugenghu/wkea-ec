{"ast":null,"code":"import _defineProperty from\"@babel/runtime/helpers/esm/defineProperty\";import _regeneratorRuntime from\"@babel/runtime/regenerator\";import _asyncToGenerator from\"@babel/runtime/helpers/esm/asyncToGenerator\";function ownKeys(object,enumerableOnly){var keys=Object.keys(object);if(Object.getOwnPropertySymbols){var symbols=Object.getOwnPropertySymbols(object);if(enumerableOnly)symbols=symbols.filter(function(sym){return Object.getOwnPropertyDescriptor(object,sym).enumerable;});keys.push.apply(keys,symbols);}return keys;}function _objectSpread(target){for(var i=1;i<arguments.length;i++){var source=arguments[i]!=null?arguments[i]:{};if(i%2){ownKeys(Object(source),true).forEach(function(key){_defineProperty(target,key,source[key]);});}else if(Object.getOwnPropertyDescriptors){Object.defineProperties(target,Object.getOwnPropertyDescriptors(source));}else{ownKeys(Object(source)).forEach(function(key){Object.defineProperty(target,key,Object.getOwnPropertyDescriptor(source,key));});}}return target;}/*!\r\n * Copyright (c) Microsoft Corporation.\r\n * All rights reserved. See LICENSE in the project root for license information.\r\n */import{createDataActionHook,TelemetryEvent}from'@msdyn365-commerce/core';import{getProductInfoFromCart}from'./telemetry.action.helper';var beforeRemoveFromCart=/*#__PURE__*/function(){var _ref=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee(inputs,actionContext){var actionInput,removeCartLinesParams;return _regeneratorRuntime.wrap(function _callee$(_context){while(1){switch(_context.prev=_context.next){case 0:_context.prev=0;actionInput=Array.isArray(inputs)?inputs[0]:inputs;if(!(actionInput.queryParams&&typeof actionInput.queryParams==='function')){_context.next=7;break;}removeCartLinesParams=actionInput.queryParams();if(!(removeCartLinesParams&&removeCartLinesParams.cartLineIds)){_context.next=7;break;}actionContext.requestContext.telemetryData[\"removedCartLineIds\"]=removeCartLinesParams.cartLineIds;return _context.abrupt(\"return\");case 7:actionContext.telemetry.debug('RemoveFromCart pre-data action hook failed - No removed cart lines found');_context.next=13;break;case 10:_context.prev=10;_context.t0=_context[\"catch\"](0);actionContext.telemetry.debug('RemoveFromCart pre-data action hook failed.',_context.t0);case 13:case\"end\":return _context.stop();}}},_callee,null,[[0,10]]);}));return function beforeRemoveFromCart(_x,_x2){return _ref.apply(this,arguments);};}();var afterRemoveFromCart=/*#__PURE__*/function(){var _ref2=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee2(_inputs,cart,actionContext){var removeCartLineIds,activeCart,productTransaction,removedCartLines;return _regeneratorRuntime.wrap(function _callee2$(_context2){while(1){switch(_context2.prev=_context2.next){case 0:if(window&&window._msdyn365&&window._msdyn365.telemetry){removeCartLineIds=actionContext.requestContext.telemetryData[\"removedCartLineIds\"];activeCart=actionContext.requestContext.telemetryData[\"activeCart\"];productTransaction=actionContext.requestContext.telemetryData[TelemetryEvent.Purchase];removedCartLines=[];if(removeCartLineIds&&activeCart&&activeCart.CartLines){activeCart.CartLines.forEach(function(cartLine){if(cartLine.ProductId&&removeCartLineIds.indexOf(cartLine.LineId?cartLine.LineId:'')!==-1&&!(productTransaction&&productTransaction.products&&productTransaction.products.some(function(product){return+product.productSku===cartLine.ProductId;}))){removedCartLines.push(cartLine);}});}if(removedCartLines&&removedCartLines.length>0){window._msdyn365.telemetry.logEvent(TelemetryEvent.RemoveFromCart,getProductInfoFromCart(_objectSpread(_objectSpread(_objectSpread({},{}),cart),{CartLines:removedCartLines}),actionContext.requestContext.telemetryData,actionContext.requestContext));}else{actionContext.telemetry.debug('No RemoveFromCart event fired, no removed cart lines found');}}case 1:case\"end\":return _context2.stop();}}},_callee2);}));return function afterRemoveFromCart(_x3,_x4,_x5){return _ref2.apply(this,arguments);};}();createDataActionHook({actionId:'@msdyn365-commerce/retail-proxy/Carts/RemoveCartLines',postReaderHook:afterRemoveFromCart,preReaderHook:beforeRemoveFromCart});","map":{"version":3,"sources":["actions/removeFromCart-telemetry.action.ts"],"names":[],"mappings":"0+BAAA;;;AAGG,GAEH,OAAS,oBAAT,CAA8E,cAA9E,KAAoG,yBAApG,CAGA,OAAS,sBAAT,KAAuC,2BAAvC,CASA,GAAM,CAAA,oBAAoB,0FAAG,iBAAO,MAAP,CAA8C,aAA9C,wKAEf,WAFe,CAED,KAAK,CAAC,OAAN,CAAc,MAAd,EAA6C,MAAM,CAAC,CAAD,CAAnD,CAA8E,MAF7E,MAKjB,WAAW,CAAC,WAAZ,EAA2B,MAAO,CAAA,WAAW,CAAC,WAAnB,GAAmC,UAL7C,0BAMX,qBANW,CAMa,WAAW,CAAC,WAAZ,EANb,MAOb,qBAAqB,EAAI,qBAAqB,CAAC,WAPlC,0BASb,aAAa,CAAC,cAAd,CAA6B,aAA7B,uBAAmE,qBAAqB,CAAC,WAAzF,CATa,wCAarB,aAAa,CAAC,SAAd,CAAwB,KAAxB,CAA8B,0EAA9B,EAbqB,iFAerB,aAAa,CAAC,SAAd,CAAwB,KAAxB,CAA8B,6CAA9B,cAfqB,qEAAH,kBAApB,CAAA,oBAAoB,gDAA1B,CAyBA,GAAM,CAAA,mBAAmB,2FAAG,kBAAO,OAAP,CAA+C,IAA/C,CAAoE,aAApE,2LACxB,GAAI,MAAM,EAAI,MAAM,CAAC,SAAjB,EAA8B,MAAM,CAAC,SAAP,CAAiB,SAAnD,CAA8D,CACpD,iBADoD,CACtB,aAAa,CAAC,cAAd,CAA6B,aAA7B,sBADsB,CAEpD,UAFoD,CAEjC,aAAa,CAAC,cAAd,CAA6B,aAA7B,cAFiC,CAGpD,kBAHoD,CAGV,aAAa,CAAC,cAAd,CAA6B,aAA7B,CAA2C,cAAc,CAAC,QAA1D,CAHU,CAIpD,gBAJoD,CAIrB,EAJqB,CAO1D,GAAI,iBAAiB,EAAI,UAArB,EAAmC,UAAU,CAAC,SAAlD,CAA6D,CACzD,UAAU,CAAC,SAAX,CAAqB,OAArB,CAA6B,SAAC,QAAD,CAAuB,CAChD,GACI,QAAQ,CAAC,SAAT,EACA,iBAAiB,CAAC,OAAlB,CAA0B,QAAQ,CAAC,MAAT,CAAkB,QAAQ,CAAC,MAA3B,CAAoC,EAA9D,IAAsE,CAAC,CADvE,EAEA,EACI,kBAAkB,EAClB,kBAAkB,CAAC,QADnB,EAEA,kBAAkB,CAAC,QAAnB,CAA4B,IAA5B,CAAiC,SAAA,OAAO,QAAI,CAAC,OAAO,CAAC,UAAT,GAAwB,QAAQ,CAAC,SAArC,EAAxC,CAHJ,CAHJ,CAQE,CACE,gBAAgB,CAAC,IAAjB,CAAsB,QAAtB,EACH,CACJ,CAZD,EAaH,CAGD,GAAI,gBAAgB,EAAI,gBAAgB,CAAC,MAAjB,CAA0B,CAAlD,CAAqD,CACjD,MAAM,CAAC,SAAP,CAAiB,SAAjB,CAA2B,QAA3B,CACI,cAAc,CAAC,cADnB,CAEI,sBAAsB,8CACb,EADa,EACN,IADM,EACG,CAAE,SAAS,CAAE,gBAAb,CADH,EAElB,aAAa,CAAC,cAAd,CAA6B,aAFX,CAGlB,aAAa,CAAC,cAHI,CAF1B,EAQH,CATD,IASO,CACH,aAAa,CAAC,SAAd,CAAwB,KAAxB,CAA8B,4DAA9B,EACH,CACJ,CArCuB,wDAAH,kBAAnB,CAAA,mBAAmB,sDAAzB,CAwCA,oBAAoB,CAAC,CACjB,QAAQ,CAAE,uDADO,CAEjB,cAAc,CAAE,mBAFC,CAGjB,aAAa,CAAE,oBAHE,CAAD,CAApB","sourcesContent":["/*!\n * Copyright (c) Microsoft Corporation.\n * All rights reserved. See LICENSE in the project root for license information.\n */\n\nimport { createDataActionHook, IActionContext, IActionInput, IMSDyn365Window, TelemetryEvent } from '@msdyn365-commerce/core';\nimport { Cart, CartLine, IDataServiceRequest, IRemoveCartLinesParam } from '@msdyn365-commerce/retail-proxy';\nimport { IProductTransaction } from '@msdyn365-commerce/telemetry-internal';\nimport { getProductInfoFromCart } from './telemetry.action.helper';\n\ndeclare var window: IMSDyn365Window;\n\n/**\n * Saves info on cart lines removed before calling data action\n * @param inputs Data action inputs\n * @param actionContext Action context\n */\nconst beforeRemoveFromCart = async (inputs: IActionInput | IActionInput[], actionContext: IActionContext) => {\n    try {\n        const actionInput = Array.isArray(inputs) ? <IDataServiceRequest>inputs[0] : <IDataServiceRequest>inputs;\n\n        // If cart lines were removed\n        if (actionInput.queryParams && typeof actionInput.queryParams === 'function') {\n            const removeCartLinesParams = actionInput.queryParams<IRemoveCartLinesParam>();\n            if (removeCartLinesParams && removeCartLinesParams.cartLineIds) {\n                // Save info on removed cart lines for post data action hook to pick up\n                actionContext.requestContext.telemetryData[`removedCartLineIds`] = removeCartLinesParams.cartLineIds;\n                return;\n            }\n        }\n        actionContext.telemetry.debug('RemoveFromCart pre-data action hook failed - No removed cart lines found');\n    } catch (e) {\n        actionContext.telemetry.debug('RemoveFromCart pre-data action hook failed.', e);\n    }\n};\n\n/**\n * Fires a RemoveFromCart event after data action completed\n * @param _inputs Data action inputs\n * @param cart New cart object after cart lines have been removed\n * @param actionContext Action context\n */\nconst afterRemoveFromCart = async (_inputs: IActionInput | IActionInput[], cart: Cart | Cart[], actionContext: IActionContext) => {\n    if (window && window._msdyn365 && window._msdyn365.telemetry) {\n        const removeCartLineIds = <string[]>actionContext.requestContext.telemetryData[`removedCartLineIds`];\n        const activeCart = <Cart>actionContext.requestContext.telemetryData[`activeCart`];\n        const productTransaction = <IProductTransaction>actionContext.requestContext.telemetryData[TelemetryEvent.Purchase];\n        const removedCartLines: CartLine[] = [];\n\n        // Collect info on products removed from cart\n        if (removeCartLineIds && activeCart && activeCart.CartLines) {\n            activeCart.CartLines.forEach((cartLine: CartLine) => {\n                if (\n                    cartLine.ProductId &&\n                    removeCartLineIds.indexOf(cartLine.LineId ? cartLine.LineId : '') !== -1 &&\n                    !(\n                        productTransaction &&\n                        productTransaction.products &&\n                        productTransaction.products.some(product => +product.productSku === cartLine.ProductId)\n                    )\n                ) {\n                    removedCartLines.push(cartLine);\n                }\n            });\n        }\n\n        // Fire RemoveFromCart event if cart lines were removed\n        if (removedCartLines && removedCartLines.length > 0) {\n            window._msdyn365.telemetry.logEvent(\n                TelemetryEvent.RemoveFromCart,\n                getProductInfoFromCart(\n                    { ...{}, ...cart, ...{ CartLines: removedCartLines } },\n                    actionContext.requestContext.telemetryData,\n                    actionContext.requestContext\n                )\n            );\n        } else {\n            actionContext.telemetry.debug('No RemoveFromCart event fired, no removed cart lines found');\n        }\n    }\n};\n\ncreateDataActionHook({\n    actionId: '@msdyn365-commerce/retail-proxy/Carts/RemoveCartLines',\n    postReaderHook: afterRemoveFromCart,\n    preReaderHook: beforeRemoveFromCart\n});\n"],"sourceRoot":"./src/"},"metadata":{},"sourceType":"module"}