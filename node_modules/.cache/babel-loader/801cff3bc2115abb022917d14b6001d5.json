{"ast":null,"code":"import{DataServiceQuery}from'../DataServiceQuery';import{CategoryClass,AttributeCategoryClass}from'../Entities/CommerceModels.g';import{executeAction}from'../retail-action';function categoriesQuery(recordId){var key=recordId?{RecordId:recordId}:null;return new DataServiceQuery(\"Categories\",\"Category\",CategoryClass,key);}export function createCreateInput(entity){return categoriesQuery().create(entity);}export function createCategoryAsync(context,entity){const request=createCreateInput(entity);return executeAction(request,context);}export function createUpdateInput(entity){return categoriesQuery(entity.RecordId).update(entity);}export function updateAsync(context,entity){const request=createUpdateInput(entity);return executeAction(request,context);}export function createDeleteAsync(entity){return categoriesQuery(entity.RecordId).delete();}export function deleteAsync(context,entity){const request=createDeleteAsync(entity);return executeAction(request,context);}export function createReadAsync(recordId){return categoriesQuery(recordId).read();}export function readAsync(context,recordId){const request=createReadAsync(recordId);return executeAction(request,context);}export function createReadAllAsync(queryResultSettings){return categoriesQuery().resultSettings(queryResultSettings).read();}export function readAllAsync(context){const request=createReadAllAsync(context.queryResultSettings);return executeAction(request,context);}export function createGetCategoriesInput(queryResultSettings,channelId){const query=categoriesQuery().resultSettings(queryResultSettings);return query.createDataServiceRequestForOperation('GetCategories',true,CategoryClass,'true',{bypassCache:'none',returnEntity:'Category'},{channelId:channelId});}export function getCategoriesAsync(context,channelId){const request=createGetCategoriesInput(context.queryResultSettings,channelId);return executeAction(request,context);}export function createGetAttributesInput(queryResultSettings,categoryId){const query=categoriesQuery().resultSettings(queryResultSettings);return query.createDataServiceRequestForOperation('GetAttributes',false,AttributeCategoryClass,'true',{bypassCache:'none',returnEntity:'AttributeCategory'},{categoryId:categoryId});}export function getAttributesAsync(context,categoryId){const request=createGetAttributesInput(context.queryResultSettings,categoryId);return executeAction(request,context);}export function createGetChildrenInput(queryResultSettings,channelId,categoryId){const query=categoriesQuery().resultSettings(queryResultSettings);return query.createDataServiceRequestForOperation('GetChildren',true,CategoryClass,'true',{bypassCache:'none',returnEntity:'Category'},{channelId:channelId,categoryId:categoryId});}export function getChildrenAsync(context,channelId,categoryId){const request=createGetChildrenInput(context.queryResultSettings,channelId,categoryId);return executeAction(request,context);}","map":{"version":3,"sources":["../../src/DataActions/CategoriesDataActions.g.ts"],"names":[],"mappings":"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","sourcesContent":["    // <auto-generated />\n    import { AsyncResult } from '../async-result';\n    import { DataServiceQuery } from '../DataServiceQuery';\n    import { Category, AttributeCategory } from '../Entities/CommerceTypes.g';\n    import { CategoryClass, AttributeCategoryClass } from '../Entities/CommerceModels.g';\n    import { IContext, IDataServiceRequest, IQueryResultSettings, NullResult } from '../Interfaces';\n    import { executeAction } from '../retail-action';\n    \n    \n    function categoriesQuery(recordId?: number): DataServiceQuery {\n      var key = (recordId) ? { RecordId: recordId } : null;\n      return new DataServiceQuery(\"Categories\", \"Category\", CategoryClass, key);\n    }\n    \n    export function createCreateInput(entity: Category): IDataServiceRequest {\n        return categoriesQuery().create(entity);\n    }\n    export function createCategoryAsync(context: IContext, entity: Category): AsyncResult<Category> {\n        const request = createCreateInput(entity, );\n        return executeAction<Category>(request, context);\n    }\n    export function createUpdateInput(entity: Category): IDataServiceRequest {\n        return categoriesQuery(entity.RecordId).update(entity);\n    }\n    export function updateAsync(context: IContext, entity: Category): AsyncResult<Category> {\n        const request = createUpdateInput(entity, );\n        return executeAction<Category>(request, context);\n    }\n    export function createDeleteAsync(entity: Category): IDataServiceRequest {\n        return categoriesQuery(entity.RecordId).delete();\n    }\n    export function deleteAsync(context: IContext, entity: Category): AsyncResult<NullResult> {\n        const request = createDeleteAsync(entity, );\n        return executeAction<NullResult>(request, context);\n    }\n    export function createReadAsync(recordId: number): IDataServiceRequest {\n        return categoriesQuery(recordId).read();\n    }\n    export function readAsync(context: IContext, recordId: number): AsyncResult<Category> {\n        const request = createReadAsync(recordId, );\n        return executeAction<Category>(request, context);\n    }\n    export function createReadAllAsync(queryResultSettings: IQueryResultSettings): IDataServiceRequest {\n        return categoriesQuery().resultSettings(queryResultSettings).read();\n    }\n    export function readAllAsync(context: IContext): AsyncResult<Category[]> {\n        const request = createReadAllAsync(context.queryResultSettings, );\n        return executeAction<Category[]>(request, context);\n    }\n    \n    export function createGetCategoriesInput(queryResultSettings: IQueryResultSettings, channelId: number): IDataServiceRequest {      \n        const query = categoriesQuery().resultSettings(queryResultSettings);\n        return query.createDataServiceRequestForOperation('GetCategories', true, CategoryClass, 'true', { bypassCache: 'none', returnEntity: 'Category'}, {channelId: channelId });\n    }    \n    \n    export function getCategoriesAsync(context: IContext, channelId: number):AsyncResult<Category[]> {\n        const request = createGetCategoriesInput(context.queryResultSettings, channelId, );\n        return executeAction<Category[]>(request, context);\n    }          \n          \n    export function createGetAttributesInput(queryResultSettings: IQueryResultSettings, categoryId: number): IDataServiceRequest {      \n        const query = categoriesQuery().resultSettings(queryResultSettings);\n        return query.createDataServiceRequestForOperation('GetAttributes', false, AttributeCategoryClass, 'true', { bypassCache: 'none', returnEntity: 'AttributeCategory'}, {categoryId: categoryId });\n    }    \n    \n    export function getAttributesAsync(context: IContext, categoryId: number):AsyncResult<AttributeCategory[]> {\n        const request = createGetAttributesInput(context.queryResultSettings, categoryId, );\n        return executeAction<AttributeCategory[]>(request, context);\n    }          \n          \n    export function createGetChildrenInput(queryResultSettings: IQueryResultSettings, channelId: number, categoryId: number): IDataServiceRequest {      \n        const query = categoriesQuery().resultSettings(queryResultSettings);\n        return query.createDataServiceRequestForOperation('GetChildren', true, CategoryClass, 'true', { bypassCache: 'none', returnEntity: 'Category'}, {channelId: channelId, categoryId: categoryId });\n    }    \n    \n    export function getChildrenAsync(context: IContext, channelId: number, categoryId: number):AsyncResult<Category[]> {\n        const request = createGetChildrenInput(context.queryResultSettings, channelId, categoryId, );\n        return executeAction<Category[]>(request, context);\n    }          \n          \n    "],"sourceRoot":""},"metadata":{},"sourceType":"module"}