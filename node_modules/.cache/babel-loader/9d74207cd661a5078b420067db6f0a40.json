{"ast":null,"code":"import _slicedToArray from\"@babel/runtime/helpers/esm/slicedToArray\";import _toConsumableArray from\"@babel/runtime/helpers/esm/toConsumableArray\";import _regeneratorRuntime from\"@babel/runtime/regenerator\";import _asyncToGenerator from\"@babel/runtime/helpers/esm/asyncToGenerator\";/*!\r\n * Copyright (c) Microsoft Corporation.\r\n * All rights reserved. See LICENSE in the project root for license information.\r\n */ // tslint:disable:max-func-body-length\nimport{ActionContext}from'@msdyn365-commerce/action-internal';import{readCachedExperimentsEntries,saveCachedExperimentsEntries}from'@msdyn365-commerce/cache-internal';import{CoreContext,CultureInfoFormatter,EXPERIMENTATION_DATAFILE_CACHE_TYPE,msdyn365Commerce,RefreshType}from'@msdyn365-commerce/core-internal';import{asSystemMetadata,EVENT_LOAD_DATA_START,EVENT_LOAD_DATA_STOP,EVENT_SERVER_RENDER_START,EVENT_SERVER_RENDER_STOP,EXCEPTION_PAGERENDERING,InternalTelemetry,LogLevel}from'@msdyn365-commerce/telemetry-internal';import{safeFileExists}from'@msdyn365-commerce/utilities-internal';import{Provider}from'mobx-react';import{join}from'path';import*as React from'react';import{ReportChunks}from'react-universal-component';import{basePageTemplate}from'../components/base-page';import SafeRenderModule from'../components/safe-render-module';import{RETAIL_SERVER_BASE_URL_HEADER_KEY}from'../consts';import{loadData}from'../data/load-data';import{processComplexDataTypesAsync}from'../hydrators/process-page-response';import{populateClientCache}from'../mock/action-mock-helper';import paths from'../paths';import{PageContext}from'../store/page-context';import{getCurrencyCodeFromContext,patchedRenderToString}from'../utils/helpers';import{processClientStatsForChunking}from'./chunking';import{generateAssetUrls}from'./statics-pipeline/statics-helpers';import{getTheme}from'./theming';// TODO: refactor based on how site css should be served\nvar getSiteCss=/*#__PURE__*/function(){var _ref=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee(context,telemetry){var siteCssFileName,filePath,siteCss;return _regeneratorRuntime.wrap(function _callee$(_context){while(1){switch(_context.prev=_context.next){case 0:// always check to include site-level css as site.css\nsiteCssFileName=\"css/site\".concat(context.params.isDebug?'':'.min',\".css\");filePath=join(paths.KEYSTONE_STATIC_DIR,siteCssFileName);_context.next=4;return safeFileExists(filePath);case 4:_context.t0=_context.sent;if(!_context.t0){_context.next=7;break;}_context.t0=siteCssFileName;case 7:siteCss=_context.t0;if(!siteCss){telemetry.log(LogLevel.Debug,'Unable to resolve SiteCSS {FilePath}, {SiteCssFileName}',{values:[asSystemMetadata(filePath),asSystemMetadata(siteCssFileName)]});}return _context.abrupt(\"return\",siteCss);case 10:case\"end\":return _context.stop();}}},_callee);}));return function getSiteCss(_x,_x2){return _ref.apply(this,arguments);};}();var makeLoadDataCalls=function makeLoadDataCalls(_ref2,complexPromise){var telemetry=_ref2.internalTelemetry,moduleTelemetry=_ref2.moduleTelemetry,content=_ref2.content,context=_ref2.context,requestCache=_ref2.requestCache,appCache=_ref2.appCache;try{var correlationId=InternalTelemetry.generateGuid();telemetry.startTimer(correlationId);telemetry.trackEvent(EVENT_LOAD_DATA_START,{id:correlationId,initiator:'MakeLoadDataCall'});return loadData(content.slots,context,telemetry,moduleTelemetry,requestCache,appCache,complexPromise).then(function(){telemetry.trackEvent(EVENT_LOAD_DATA_STOP,{id:correlationId,initiator:'MakeLoadDataCall'},{time:telemetry.stopTimer(correlationId)});});}catch(e){telemetry.log(LogLevel.Error,'',{exception:e});return Promise.resolve();}};/**\r\n * Performs a safe render module on each module defined inside a non-body slot\r\n * Returns the JSX from the safe render.\r\n *\r\n * @param coreContext The core context provided to the page\r\n * @param addChunk addChunk function\r\n * @param pageContext The page context object\r\n * @param currentModule The module that is being passed into safe render module\r\n */var getSafeRenderModuleResultForSlotItem=function getSafeRenderModuleResultForSlotItem(coreContext,pageContext,currentModule){// Use this method to perform a render for non body slots only\n// Setting isNotBodyModule true allows modules to have empty render results (valid for non body slots only)\nreturn/*#__PURE__*/React.createElement(CoreContext.Provider,{value:coreContext},/*#__PURE__*/React.createElement(SafeRenderModule,Object.assign({},currentModule,{store:pageContext,isNotBodyModule:true})));};/**\r\n * Performs the render result of all the modules in a given slot\r\n * and returns the result of the render as an html string\r\n *\r\n * @param coreContext The core context provided to the page\r\n * @param addChunk addChunk function\r\n * @param pageContext The page context object\r\n * @param slot The slot (htmlHead, bodyBegin, etc) for which you are expecting the render to string result\r\n */var getSlotRenderResult=function getSlotRenderResult(coreContext,pageContext,slot){var content='';var shouldDisableServerSideErrorChecking=coreContext.request&&coreContext.request.app&&coreContext.request.app.config&&coreContext.request.app.config.disableServerSideErrorChecking;if(pageContext.pageRoot.modules&&pageContext.pageRoot.modules[slot]){for(var i=0;i<pageContext.pageRoot.modules[slot].length;++i){content+=patchedRenderToString(getSafeRenderModuleResultForSlotItem(coreContext,pageContext,pageContext.pageRoot.modules[slot][i]),shouldDisableServerSideErrorChecking);}}return content;};// tslint:disable:no-any\nvar getClientInitialConfigWithCache=/*#__PURE__*/function(){var _ref3=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee2(retailServerBaseUrl,telemetry){var experimentConnector,refreshOption,cacheKey,expClientConfig,expClientConfigRaw;return _regeneratorRuntime.wrap(function _callee2$(_context2){while(1){switch(_context2.prev=_context2.next){case 0:experimentConnector=msdyn365Commerce.experimentationConnector&&msdyn365Commerce.experimentationConnector;if(!(!experimentConnector||!experimentConnector.provider)){_context2.next=3;break;}return _context2.abrupt(\"return\",'');case 3:refreshOption={refreshType:RefreshType.DataFile,parameters:[]};cacheKey={typeName:EXPERIMENTATION_DATAFILE_CACHE_TYPE,key:experimentConnector.name};_context2.next=7;return readCachedExperimentsEntries(cacheKey,refreshOption,experimentConnector.provider,experimentConnector.name,retailServerBaseUrl);case 7:expClientConfig=_context2.sent;if(expClientConfig){_context2.next=22;break;}_context2.prev=9;_context2.next=12;return experimentConnector.provider.getConfigForClientSideInit();case 12:expClientConfigRaw=_context2.sent;if(!expClientConfigRaw){_context2.next=17;break;}expClientConfig=JSON.stringify(expClientConfigRaw);_context2.next=17;return saveCachedExperimentsEntries(cacheKey,expClientConfig);case 17:_context2.next=22;break;case 19:_context2.prev=19;_context2.t0=_context2[\"catch\"](9);telemetry.log(LogLevel.Error,'Could not fetch exp data file for client side initalization',{exception:_context2.t0});case 22:return _context2.abrupt(\"return\",expClientConfig||{});case 23:case\"end\":return _context2.stop();}}},_callee2,null,[[9,19]]);}));return function getClientInitialConfigWithCache(_x3,_x4){return _ref3.apply(this,arguments);};}();var getBodyClassName=function getBodyClassName(pageConfig,context){var bodyClass=[];bodyClass.push(context.device.Type);pageConfig.className&&bodyClass.push(pageConfig.className);context.params.theme&&bodyClass.push(context.params.theme);return bodyClass.join(' ').toLowerCase();};var getPrefetchLinks=function getPrefetchLinks(context){var _context$app$platform;var apiSettings=context.apiSettings;var endpoints=[apiSettings.baseUrl,apiSettings.baseImageUrl,apiSettings.ratingsReviewsEndpoint].concat(_toConsumableArray((_context$app$platform=context.app.platform)!==null&&_context$app$platform!==void 0&&_context$app$platform.dnsPrefetchUrls?context.app.platform.dnsPrefetchUrls:[]));var linkEndpoints=endpoints.map(function(endpoint){try{var url=new URL(endpoint);return\"<link rel=\\\"preconnect\\\" href=\\\"\".concat(url.origin,\"\\\" />\\n                <link rel=\\\"dns-prefetch\\\" href=\\\"\").concat(url.origin,\"\\\"/>\");}catch(_unused){return'';}});return linkEndpoints.filter(function(link){return link!=='';}).join('\\n');};var serverRenderVnext=/*#__PURE__*/function(){var _ref5=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee3(_ref4){var content,context,clientStats,pageConfig,telemetry,moduleTelemetry,requestCache,serverRenderCorrelationId,correlationIdRequestPrep,chunkNames,isDebug,isEditor,theme,addChunk,appCache,actionContext,timerRequestPrep,correlationIdComplexTypes,LAZYLOAD_ALL_SWITCH,complexDataTypesPromises,timerComplexTypes,correlationIdloadData,timerLoadData,correlationIdRenderPage,pageContext,coreContext,pageRenderResult,timerRenderPage,bodyContent,correlationIdRenderToString,shouldDisableServerSideErrorChecking,timerRenderToString,correlationIdBasePageCreation,_yield$Promise$all,_yield$Promise$all2,processedChunkInfo,siteCss,css,bodyClass,prefetchLinks,retailServerBaseUrl,expDataFile,basePage,timerBasePageCreation;return _regeneratorRuntime.wrap(function _callee3$(_context3){while(1){switch(_context3.prev=_context3.next){case 0:content=_ref4.content,context=_ref4.context,clientStats=_ref4.options.clientStats,pageConfig=_ref4.pageConfig,telemetry=_ref4.telemetry,moduleTelemetry=_ref4.moduleTelemetry,requestCache=_ref4.requestCache;telemetry.trackEvent(EVENT_SERVER_RENDER_START);serverRenderCorrelationId=InternalTelemetry.generateGuid();telemetry.startTimer(serverRenderCorrelationId);correlationIdRequestPrep=InternalTelemetry.generateGuid();telemetry.startTimer(correlationIdRequestPrep);chunkNames={};isDebug=context.params&&context.params.isDebug;isEditor=context.params&&context.params.isEditor;theme=context.params.theme||pageConfig.pageTheme;addChunk=function addChunk(chunkName){if(!chunkNames[chunkName]){chunkNames[chunkName]=chunkName;}};_context3.next=13;return populateClientCache(context,content,requestCache,telemetry);case 13:// tslint:disable-next-line:no-any\nappCache=msdyn365Commerce.getAppCache(context);// Set the expected actionCount to 5000\n// this will wait for the actionCount to be 5000 before call goes out\n// this will give us control to parallelize these calls and avoid redundancy\nactionContext=new ActionContext({id:'Server Action Context',requestContext:context,requestCache:requestCache,telemetry:moduleTelemetry,appCache:appCache,expectedActionCount:5000});timerRequestPrep=telemetry.stopTimer(correlationIdRequestPrep);correlationIdComplexTypes=InternalTelemetry.generateGuid();telemetry.startTimer(correlationIdComplexTypes);LAZYLOAD_ALL_SWITCH=context.features.lazyload_all;try{complexDataTypesPromises=processComplexDataTypesAsync(LAZYLOAD_ALL_SWITCH,\"server\"/* server */,content.slots,actionContext);}catch(e){telemetry.log(LogLevel.Error,'Could not process data types',{exception:e});}timerComplexTypes=telemetry.stopTimer(correlationIdComplexTypes);correlationIdloadData=InternalTelemetry.generateGuid();telemetry.startTimer(correlationIdloadData);_context3.next=25;return makeLoadDataCalls({content:content,context:context,requestCache:requestCache,internalTelemetry:telemetry,moduleTelemetry:moduleTelemetry,appCache:appCache},complexDataTypesPromises);case 25:timerLoadData=telemetry.stopTimer(correlationIdloadData);correlationIdRenderPage=InternalTelemetry.generateGuid();telemetry.startTimer(correlationIdRenderPage);pageContext=new PageContext(content,context,requestCache,msdyn365Commerce.resourceManager);coreContext={actionContext:actionContext,app:context.app,telemetry:moduleTelemetry,// @ts-ignore\ninternalTelemetry:telemetry,request:context,cultureFormatter:new CultureInfoFormatter(context.locale,getCurrencyCodeFromContext(context))};pageRenderResult=/*#__PURE__*/React.createElement(CoreContext.Provider,{value:coreContext},/*#__PURE__*/React.createElement(ReportChunks,{report:addChunk},/*#__PURE__*/React.createElement(Provider,{store:pageContext},pageContext.pageRoot.modules&&pageContext.pageRoot.modules.body?/*#__PURE__*/React.createElement(SafeRenderModule,Object.assign({},pageContext.pageRoot.modules.body[0],{addChunk:addChunk,store:pageContext})):/*#__PURE__*/React.createElement(SafeRenderModule,Object.assign({},pageContext.pageRoot,{addChunk:addChunk,store:pageContext})))));timerRenderPage=telemetry.stopTimer(correlationIdRenderPage);bodyContent='';correlationIdRenderToString=InternalTelemetry.generateGuid();telemetry.startTimer(correlationIdRenderToString);try{shouldDisableServerSideErrorChecking=coreContext.request&&coreContext.request.app&&coreContext.request.app.config&&coreContext.request.app.config.disableServerSideErrorChecking;bodyContent=patchedRenderToString(pageRenderResult,shouldDisableServerSideErrorChecking);}catch(e){telemetry.log(LogLevel.Error,EXCEPTION_PAGERENDERING,{exception:e});bodyContent=e;}timerRenderToString=telemetry.stopTimer(correlationIdRenderToString);correlationIdBasePageCreation=InternalTelemetry.generateGuid();telemetry.startTimer(correlationIdBasePageCreation);_context3.next=41;return Promise.all([processClientStatsForChunking(context.url.staticCdnUrl,Object.keys(chunkNames),clientStats,telemetry,context),getSiteCss(context,telemetry)]);case 41:_yield$Promise$all=_context3.sent;_yield$Promise$all2=_slicedToArray(_yield$Promise$all,2);processedChunkInfo=_yield$Promise$all2[0];siteCss=_yield$Promise$all2[1];css=[siteCss].filter(Boolean);bodyClass=getBodyClassName(pageConfig,context);// generate links to construct pre-fetch links to all endpoints\nprefetchLinks=getPrefetchLinks(context);retailServerBaseUrl=coreContext.request&&coreContext.request.headers&&coreContext.request.headers[RETAIL_SERVER_BASE_URL_HEADER_KEY];// get experiment data file.\n_context3.next=51;return getClientInitialConfigWithCache(retailServerBaseUrl,telemetry);case 51:expDataFile=_context3.sent;// Need to pull the requestUrl from rendering context\nbasePage=basePageTemplate({baseUrl:context.url.staticCdnUrl,requestUrl:context.url.requestUrl,bodyContent:bodyContent,headContent:getSlotRenderResult(coreContext,pageContext,'htmlHead'),bodyBeginContent:getSlotRenderResult(coreContext,pageContext,'bodyBegin'),bodyEndContent:getSlotRenderResult(coreContext,pageContext,'bodyEnd'),chunks:processedChunkInfo,css:css,// @ts-ignore - ignore that the compiler complains types don't match\ninitialData:pageContext,isDebug:isDebug,isEditor:isEditor,context:context,jsHashedUrls:generateAssetUrls(context.url.staticCdnUrl,processedChunkInfo),themeCss:getTheme(isDebug,theme,context.textDirection),appData:{bv:msdyn365Commerce.buildVersion},telemetry:telemetry,bodyClassName:bodyClass,experimentClientInitConfig:expDataFile,prefetchLinks:prefetchLinks},telemetry);timerBasePageCreation=telemetry.stopTimer(correlationIdBasePageCreation);// stop render server timer\ntelemetry.trackEvent(EVENT_SERVER_RENDER_STOP,{},{ServerRender:telemetry.stopTimer(serverRenderCorrelationId),RequestPrep:timerRequestPrep,ComplexTypes:timerComplexTypes,LoadData:timerLoadData,RenderPage:timerRenderPage,RenderToString:timerRenderToString,BasePageCreation:timerBasePageCreation});return _context3.abrupt(\"return\",basePage);case 56:case\"end\":return _context3.stop();}}},_callee3);}));return function serverRenderVnext(_x5){return _ref5.apply(this,arguments);};}();export default serverRenderVnext;","map":{"version":3,"sources":["../../../src/_server/server-render.vnext.tsx"],"names":[],"mappings":"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","sourcesContent":["/*!\n * Copyright (c) Microsoft Corporation.\n * All rights reserved. See LICENSE in the project root for license information.\n */\n\n// tslint:disable:max-func-body-length\nimport { ActionContext } from '@msdyn365-commerce/action-internal';\nimport {\n    ICache,\n    ICacheKey,\n    readCachedExperimentsEntries,\n    RequestCache,\n    saveCachedExperimentsEntries\n} from '@msdyn365-commerce/cache-internal';\nimport {\n    CoreContext,\n    CultureInfoFormatter,\n    EXPERIMENTATION_DATAFILE_CACHE_TYPE,\n    ICoreContext,\n    IExperimentRefreshOptions,\n    IModuleContract,\n    IPageConfig,\n    IPageResponse,\n    IRequestContext,\n    msdyn365Commerce,\n    RefreshType\n} from '@msdyn365-commerce/core-internal';\nimport {\n    asSystemMetadata,\n    EVENT_LOAD_DATA_START,\n    EVENT_LOAD_DATA_STOP,\n    EVENT_SERVER_RENDER_START,\n    EVENT_SERVER_RENDER_STOP,\n    EXCEPTION_PAGERENDERING,\n    IEventLoadDataRenderProperties,\n    IEventTime,\n    InternalTelemetry,\n    ITelemetry,\n    LogLevel\n} from '@msdyn365-commerce/telemetry-internal';\nimport { safeFileExists } from '@msdyn365-commerce/utilities-internal';\nimport { Provider } from 'mobx-react';\nimport { join } from 'path';\nimport * as React from 'react';\nimport { ReportChunks } from 'react-universal-component';\nimport { basePageTemplate } from '../components/base-page';\nimport SafeRenderModule from '../components/safe-render-module';\nimport { PROCESS_TYPE, RETAIL_SERVER_BASE_URL_HEADER_KEY } from '../consts';\nimport { loadData } from '../data/load-data';\nimport { processComplexDataTypesAsync } from '../hydrators/process-page-response';\nimport { populateClientCache } from '../mock/action-mock-helper';\nimport paths from '../paths';\nimport { PageContext } from '../store/page-context';\nimport { getCurrencyCodeFromContext, patchedRenderToString } from '../utils/helpers';\nimport { processClientStatsForChunking } from './chunking';\nimport { generateAssetUrls } from './statics-pipeline/statics-helpers';\nimport { getTheme } from './theming';\n\n// allow named parameters\nexport interface IRenderDefaultRouterOptions {\n    content: IPageResponse;\n    options: { clientStats: {} };\n    context: IRequestContext;\n    telemetry: InternalTelemetry;\n    moduleTelemetry: ITelemetry;\n    pageConfig: IPageConfig;\n    requestCache: RequestCache;\n}\n\nexport interface IMakeLoadDataCallsOptions {\n    content: IPageResponse;\n    context: IRequestContext;\n    internalTelemetry: InternalTelemetry;\n    moduleTelemetry: ITelemetry;\n    requestCache: ICache;\n    appCache: ICache;\n}\n\n// TODO: refactor based on how site css should be served\nconst getSiteCss = async (context: IRequestContext, telemetry: InternalTelemetry) => {\n    // always check to include site-level css as site.css\n    const siteCssFileName = `css/site${context.params.isDebug ? '' : '.min'}.css`;\n    const filePath = join(paths.KEYSTONE_STATIC_DIR, siteCssFileName);\n    const siteCss = (await safeFileExists(filePath)) && siteCssFileName;\n\n    if (!siteCss) {\n        telemetry.log(LogLevel.Debug, 'Unable to resolve SiteCSS {FilePath}, {SiteCssFileName}', {\n            values: [asSystemMetadata(filePath), asSystemMetadata(siteCssFileName)]\n        });\n    }\n\n    return siteCss;\n};\n\nconst makeLoadDataCalls = (\n    { internalTelemetry: telemetry, moduleTelemetry: moduleTelemetry, content, context, requestCache, appCache }: IMakeLoadDataCallsOptions,\n    complexPromise?: Promise<void>[]\n): Promise<void> => {\n    try {\n        const correlationId = InternalTelemetry.generateGuid();\n        telemetry.startTimer(correlationId);\n\n        telemetry.trackEvent<IEventLoadDataRenderProperties, {}>(EVENT_LOAD_DATA_START, {\n            id: correlationId,\n            initiator: 'MakeLoadDataCall'\n        });\n        return loadData(content.slots, context, telemetry, moduleTelemetry, requestCache, appCache, complexPromise).then(() => {\n            telemetry.trackEvent<IEventLoadDataRenderProperties, IEventTime>(\n                EVENT_LOAD_DATA_STOP,\n                { id: correlationId, initiator: 'MakeLoadDataCall' },\n                { time: telemetry.stopTimer(correlationId) }\n            );\n        });\n    } catch (e) {\n        telemetry.log(LogLevel.Error, '', { exception: e });\n        return Promise.resolve();\n    }\n};\n\n/**\n * Performs a safe render module on each module defined inside a non-body slot\n * Returns the JSX from the safe render.\n *\n * @param coreContext The core context provided to the page\n * @param addChunk addChunk function\n * @param pageContext The page context object\n * @param currentModule The module that is being passed into safe render module\n */\nconst getSafeRenderModuleResultForSlotItem = (\n    coreContext: ICoreContext,\n    pageContext: PageContext,\n    currentModule: IModuleContract\n): JSX.Element => {\n    // Use this method to perform a render for non body slots only\n    // Setting isNotBodyModule true allows modules to have empty render results (valid for non body slots only)\n    return (\n        <CoreContext.Provider value={coreContext}>\n            <SafeRenderModule {...currentModule} store={pageContext} isNotBodyModule={true} />\n        </CoreContext.Provider>\n    );\n};\n\n/**\n * Performs the render result of all the modules in a given slot\n * and returns the result of the render as an html string\n *\n * @param coreContext The core context provided to the page\n * @param addChunk addChunk function\n * @param pageContext The page context object\n * @param slot The slot (htmlHead, bodyBegin, etc) for which you are expecting the render to string result\n */\nconst getSlotRenderResult = (coreContext: ICoreContext, pageContext: PageContext, slot: string): string => {\n    let content: string = '';\n    const shouldDisableServerSideErrorChecking =\n        coreContext.request &&\n        coreContext.request.app &&\n        coreContext.request.app.config &&\n        coreContext.request.app.config.disableServerSideErrorChecking;\n    if (pageContext.pageRoot.modules && pageContext.pageRoot.modules[slot]) {\n        for (let i = 0; i < pageContext.pageRoot.modules[slot].length; ++i) {\n            content += patchedRenderToString(\n                getSafeRenderModuleResultForSlotItem(coreContext, pageContext, pageContext.pageRoot.modules[slot][i]),\n                shouldDisableServerSideErrorChecking\n            );\n        }\n    }\n    return content;\n};\n// tslint:disable:no-any\nconst getClientInitialConfigWithCache = async (retailServerBaseUrl: string, telemetry: InternalTelemetry): Promise<any> => {\n    const experimentConnector = msdyn365Commerce.experimentationConnector && msdyn365Commerce.experimentationConnector;\n    if (!experimentConnector || !experimentConnector.provider) {\n        return '';\n    }\n\n    const refreshOption: IExperimentRefreshOptions = {\n        refreshType: RefreshType.DataFile,\n        parameters: []\n    };\n    const cacheKey: ICacheKey = {\n        typeName: EXPERIMENTATION_DATAFILE_CACHE_TYPE,\n        key: experimentConnector.name\n    };\n    let expClientConfig = await readCachedExperimentsEntries<any>(\n        cacheKey,\n        refreshOption,\n        experimentConnector.provider,\n        experimentConnector.name,\n        retailServerBaseUrl\n    );\n    if (!expClientConfig) {\n        try {\n            const expClientConfigRaw = await experimentConnector.provider.getConfigForClientSideInit();\n            if (expClientConfigRaw) {\n                expClientConfig = JSON.stringify(expClientConfigRaw);\n                await saveCachedExperimentsEntries<any>(cacheKey, expClientConfig);\n            }\n        } catch (err) {\n            telemetry.log(LogLevel.Error, 'Could not fetch exp data file for client side initalization', { exception: err });\n        }\n    }\n    return expClientConfig || {};\n};\n\nconst getBodyClassName = (pageConfig: IPageConfig, context: IRequestContext): string => {\n    const bodyClass: string[] = [];\n    bodyClass.push(context.device.Type);\n    pageConfig.className && bodyClass.push(pageConfig.className);\n    context.params.theme && bodyClass.push(context.params.theme);\n    return bodyClass.join(' ').toLowerCase();\n};\n\nconst getPrefetchLinks = (context: IRequestContext): string => {\n    const apiSettings = context.apiSettings;\n    const endpoints: string[] = [\n        apiSettings.baseUrl,\n        apiSettings.baseImageUrl,\n        apiSettings.ratingsReviewsEndpoint,\n        ...(context.app.platform?.dnsPrefetchUrls ? context.app.platform.dnsPrefetchUrls : [])\n    ];\n    const linkEndpoints = endpoints.map(endpoint => {\n        try {\n            const url = new URL(endpoint);\n            return `<link rel=\"preconnect\" href=\"${url.origin}\" />\n                <link rel=\"dns-prefetch\" href=\"${url.origin}\"/>`;\n        } catch {\n            return '';\n        }\n    });\n\n    return linkEndpoints.filter(link => link !== '').join('\\n');\n};\n\nconst serverRenderVnext = async ({\n    content,\n    context,\n    options: { clientStats },\n    pageConfig,\n    telemetry,\n    moduleTelemetry,\n    requestCache\n}: IRenderDefaultRouterOptions): Promise<string> => {\n    telemetry.trackEvent(EVENT_SERVER_RENDER_START);\n    const serverRenderCorrelationId = InternalTelemetry.generateGuid();\n    telemetry.startTimer(serverRenderCorrelationId);\n\n    const correlationIdRequestPrep = InternalTelemetry.generateGuid();\n    telemetry.startTimer(correlationIdRequestPrep);\n\n    const chunkNames: { [chunkName: string]: string } = {};\n    const isDebug = context.params && context.params.isDebug;\n    const isEditor = context.params && context.params.isEditor;\n    const theme = context.params.theme || pageConfig.pageTheme;\n\n    const addChunk = (chunkName: string) => {\n        if (!chunkNames[chunkName]) {\n            chunkNames[chunkName] = chunkName;\n        }\n    };\n\n    await populateClientCache(context, content, requestCache, telemetry);\n\n    // tslint:disable-next-line:no-any\n    const appCache = (msdyn365Commerce as any).getAppCache(context);\n\n    // Set the expected actionCount to 5000\n    // this will wait for the actionCount to be 5000 before call goes out\n    // this will give us control to parallelize these calls and avoid redundancy\n    const actionContext = new ActionContext({\n        id: 'Server Action Context',\n        requestContext: context,\n        requestCache: requestCache,\n        telemetry: moduleTelemetry,\n        appCache,\n        expectedActionCount: 5000\n    });\n    const timerRequestPrep = telemetry.stopTimer(correlationIdRequestPrep);\n\n    const correlationIdComplexTypes = InternalTelemetry.generateGuid();\n    telemetry.startTimer(correlationIdComplexTypes);\n\n    const LAZYLOAD_ALL_SWITCH: boolean = context.features.lazyload_all;\n\n    let complexDataTypesPromises: Promise<void>[] | undefined;\n\n    try {\n        complexDataTypesPromises = processComplexDataTypesAsync(LAZYLOAD_ALL_SWITCH, PROCESS_TYPE.server, content.slots, actionContext);\n    } catch (e) {\n        telemetry.log(LogLevel.Error, 'Could not process data types', { exception: e });\n    }\n    const timerComplexTypes = telemetry.stopTimer(correlationIdComplexTypes);\n\n    const correlationIdloadData = InternalTelemetry.generateGuid();\n    telemetry.startTimer(correlationIdloadData);\n\n    await makeLoadDataCalls(\n        { content, context, requestCache, internalTelemetry: telemetry, moduleTelemetry: moduleTelemetry, appCache },\n        complexDataTypesPromises\n    );\n    const timerLoadData = telemetry.stopTimer(correlationIdloadData);\n\n    const correlationIdRenderPage = InternalTelemetry.generateGuid();\n    telemetry.startTimer(correlationIdRenderPage);\n\n    const pageContext = new PageContext(content, context, requestCache, msdyn365Commerce.resourceManager);\n    const coreContext: ICoreContext = {\n        actionContext: actionContext,\n        app: context.app,\n        telemetry: moduleTelemetry,\n        // @ts-ignore\n        internalTelemetry: telemetry,\n        request: context,\n        cultureFormatter: new CultureInfoFormatter(context.locale, getCurrencyCodeFromContext(context))\n    };\n\n    const pageRenderResult = (\n        <CoreContext.Provider value={coreContext}>\n            <ReportChunks report={addChunk}>\n                <Provider store={pageContext}>\n                    {pageContext.pageRoot.modules && pageContext.pageRoot.modules.body ? (\n                        <SafeRenderModule {...pageContext.pageRoot.modules.body[0]} addChunk={addChunk} store={pageContext} />\n                    ) : (\n                        <SafeRenderModule {...pageContext.pageRoot} addChunk={addChunk} store={pageContext} />\n                    )}\n                </Provider>\n            </ReportChunks>\n        </CoreContext.Provider>\n    );\n    const timerRenderPage = telemetry.stopTimer(correlationIdRenderPage);\n\n    let bodyContent: string = '';\n    const correlationIdRenderToString = InternalTelemetry.generateGuid();\n    telemetry.startTimer(correlationIdRenderToString);\n    try {\n        const shouldDisableServerSideErrorChecking =\n            coreContext.request &&\n            coreContext.request.app &&\n            coreContext.request.app.config &&\n            coreContext.request.app.config.disableServerSideErrorChecking;\n        bodyContent = patchedRenderToString(pageRenderResult, shouldDisableServerSideErrorChecking);\n    } catch (e) {\n        telemetry.log(LogLevel.Error, EXCEPTION_PAGERENDERING, { exception: e });\n        bodyContent = e;\n    }\n    const timerRenderToString = telemetry.stopTimer(correlationIdRenderToString);\n\n    const correlationIdBasePageCreation = InternalTelemetry.generateGuid();\n    telemetry.startTimer(correlationIdBasePageCreation);\n\n    const [processedChunkInfo, siteCss] = await Promise.all([\n        processClientStatsForChunking(context.url.staticCdnUrl, Object.keys(chunkNames), clientStats, telemetry, context),\n        getSiteCss(context, telemetry)\n    ]);\n    const css: string[] = [siteCss].filter(Boolean) as string[];\n    const bodyClass = getBodyClassName(pageConfig, context);\n\n    // generate links to construct pre-fetch links to all endpoints\n    const prefetchLinks = getPrefetchLinks(context);\n\n    const retailServerBaseUrl =\n        coreContext.request && coreContext.request.headers && coreContext.request.headers[RETAIL_SERVER_BASE_URL_HEADER_KEY];\n    // get experiment data file.\n    const expDataFile = await getClientInitialConfigWithCache(retailServerBaseUrl, telemetry);\n    // Need to pull the requestUrl from rendering context\n    const basePage = basePageTemplate(\n        {\n            baseUrl: context.url.staticCdnUrl,\n            requestUrl: context.url.requestUrl,\n            bodyContent,\n            headContent: getSlotRenderResult(coreContext, pageContext, 'htmlHead'),\n            bodyBeginContent: getSlotRenderResult(coreContext, pageContext, 'bodyBegin'),\n            bodyEndContent: getSlotRenderResult(coreContext, pageContext, 'bodyEnd'),\n            chunks: processedChunkInfo,\n            css,\n            // @ts-ignore - ignore that the compiler complains types don't match\n            initialData: pageContext,\n            isDebug: isDebug,\n            isEditor: isEditor,\n            context: context,\n            jsHashedUrls: generateAssetUrls(context.url.staticCdnUrl, processedChunkInfo),\n            themeCss: getTheme(isDebug, theme, context.textDirection),\n            appData: { bv: msdyn365Commerce.buildVersion },\n            telemetry,\n            bodyClassName: bodyClass,\n            experimentClientInitConfig: expDataFile,\n            prefetchLinks: prefetchLinks\n        },\n        telemetry\n    );\n    const timerBasePageCreation = telemetry.stopTimer(correlationIdBasePageCreation);\n\n    // stop render server timer\n    telemetry.trackEvent<{}, {}>(\n        EVENT_SERVER_RENDER_STOP,\n        {},\n        {\n            ServerRender: telemetry.stopTimer(serverRenderCorrelationId),\n            RequestPrep: timerRequestPrep,\n            ComplexTypes: timerComplexTypes,\n            LoadData: timerLoadData,\n            RenderPage: timerRenderPage,\n            RenderToString: timerRenderToString,\n            BasePageCreation: timerBasePageCreation\n        }\n    );\n    return basePage;\n};\n\nexport default serverRenderVnext;\n"],"sourceRoot":""},"metadata":{},"sourceType":"module"}