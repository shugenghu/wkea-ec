{"ast":null,"code":"/*!\r\n * Copyright (c) Microsoft Corporation.\r\n * All rights reserved. See LICENSE in the project root for license information.\r\n */import{getModuleBinder}from'../utils/helpers';const dataActionCustimizedMerge=(originDataAction,newDataAction,customizer)=>originDataAction.filter(originAction=>!newDataAction.find(newAction=>originAction[customizer]===newAction[customizer])).concat(newDataAction);export const combineExtendedDataActionToModule=(originalModuleBinder,moduleName,themeName)=>{const themeBinder=getModuleBinder(themeName);if(!themeBinder||!originalModuleBinder){return originalModuleBinder;}if(themeBinder.dataActions.length===0){return originalModuleBinder;}const themeDataActionsForModule=themeBinder.dataActions.filter(dataAction=>dataAction.moduleName&&dataAction.moduleName===moduleName);const moduleDataActions=originalModuleBinder.dataActions?originalModuleBinder.dataActions:[];originalModuleBinder.dataActions=dataActionCustimizedMerge(moduleDataActions,themeDataActionsForModule,'name');return originalModuleBinder;};","map":{"version":3,"sources":["../../../src/utils/data-action-extension-helper.ts"],"names":[],"mappings":"AAAA;;;AAGG,GAGH,OAAS,eAAT,KAAgC,kBAAhC,CAEA,KAAM,CAAA,yBAAyB,CAAG,CAAC,gBAAD,CAAmB,aAAnB,CAAkC,UAAlC,GAC9B,gBAAgB,CACX,MADL,CACY,YAAY,EAAI,CAAC,aAAa,CAAC,IAAd,CAAmB,SAAS,EAAI,YAAY,CAAC,UAAD,CAAZ,GAA6B,SAAS,CAAC,UAAD,CAAtE,CAD7B,EAEK,MAFL,CAEY,aAFZ,CADJ,CAKA,MAAO,MAAM,CAAA,iCAAiC,CAAG,CAAC,oBAAD,CAAsC,UAAtC,CAA0D,SAA1D,GAA+E,CAC5H,KAAM,CAAA,WAAW,CAAG,eAAe,CAAC,SAAD,CAAnC,CACA,GAAI,CAAC,WAAD,EAAgB,CAAC,oBAArB,CAA2C,CACvC,MAAO,CAAA,oBAAP,CACH,CAED,GAAI,WAAW,CAAC,WAAZ,CAAwB,MAAxB,GAAmC,CAAvC,CAA0C,CACtC,MAAO,CAAA,oBAAP,CACH,CACD,KAAM,CAAA,yBAAyB,CAAG,WAAW,CAAC,WAAZ,CAAwB,MAAxB,CAC9B,UAAU,EAAI,UAAU,CAAC,UAAX,EAAyB,UAAU,CAAC,UAAX,GAA0B,UADnC,CAAlC,CAIA,KAAM,CAAA,iBAAiB,CAAG,oBAAoB,CAAC,WAArB,CAAmC,oBAAoB,CAAC,WAAxD,CAAsE,EAAhG,CACA,oBAAoB,CAAC,WAArB,CAAmC,yBAAyB,CAAC,iBAAD,CAAoB,yBAApB,CAA+C,MAA/C,CAA5D,CACA,MAAO,CAAA,oBAAP,CACH,CAhBM","sourcesContent":["/*!\n * Copyright (c) Microsoft Corporation.\n * All rights reserved. See LICENSE in the project root for license information.\n */\n\nimport { IModuleBinder } from '../app-initialization/models';\nimport { getModuleBinder } from '../utils/helpers';\n\nconst dataActionCustimizedMerge = (originDataAction, newDataAction, customizer) =>\n    originDataAction\n        .filter(originAction => !newDataAction.find(newAction => originAction[customizer] === newAction[customizer]))\n        .concat(newDataAction);\n\nexport const combineExtendedDataActionToModule = (originalModuleBinder: IModuleBinder, moduleName: string, themeName: string) => {\n    const themeBinder = getModuleBinder(themeName);\n    if (!themeBinder || !originalModuleBinder) {\n        return originalModuleBinder;\n    }\n\n    if (themeBinder.dataActions.length === 0) {\n        return originalModuleBinder;\n    }\n    const themeDataActionsForModule = themeBinder.dataActions.filter(\n        dataAction => dataAction.moduleName && dataAction.moduleName === moduleName\n    );\n\n    const moduleDataActions = originalModuleBinder.dataActions ? originalModuleBinder.dataActions : [];\n    originalModuleBinder.dataActions = dataActionCustimizedMerge(moduleDataActions, themeDataActionsForModule, 'name');\n    return originalModuleBinder;\n};\n"],"sourceRoot":""},"metadata":{},"sourceType":"module"}