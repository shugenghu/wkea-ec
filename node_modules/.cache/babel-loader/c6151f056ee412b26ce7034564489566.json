{"ast":null,"code":"import _regeneratorRuntime from\"@babel/runtime/regenerator\";import _asyncToGenerator from\"@babel/runtime/helpers/esm/asyncToGenerator\";import _classCallCheck from\"@babel/runtime/helpers/esm/classCallCheck\";import{createObservableDataAction}from'@msdyn365-commerce/core';import{FullProductInput,getFullProducts,getProductDetailsCriteriaFromActionInput}from'@msdyn365-commerce-modules/retail-actions';import{getByCustomerAsync}from'@msdyn365-commerce/retail-proxy/dist/DataActions/CommerceListsDataActions.g';export var ActiveWishlistInput=function ActiveWishlistInput(){_classCallCheck(this,ActiveWishlistInput);this.getCacheKey=function(){return\"ActiveWishlistItems\";};this.getCacheObjectType=function(){return'ActiveWishlistItems';};this.dataCacheType=function(){return'none';};};var createInput=function createInput(inputData){return new ActiveWishlistInput();};export function getActiveWishlistItems(_x,_x2){return _getActiveWishlistItems.apply(this,arguments);}function _getActiveWishlistItems(){_getActiveWishlistItems=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee(input,ctx){var wishlists,productInputs;return _regeneratorRuntime.wrap(function _callee$(_context){while(1){switch(_context.prev=_context.next){case 0:if(input){_context.next=2;break;}throw new Error('[getActiveWishlistItems]No valid Input was provided, failing');case 2:if(!ctx.requestContext.user.isAuthenticated){_context.next=18;break;}_context.next=5;return getByCustomerAsync({callerContext:ctx,queryResultSettings:{}},null);case 5:wishlists=_context.sent;if(!(wishlists&&wishlists.length>0)){_context.next=16;break;}productInputs=[];wishlists.forEach(function(currWishlist){if(currWishlist.CommerceListLines){currWishlist.CommerceListLines.forEach(function(commerceListLine){if(commerceListLine.ProductId){productInputs.push(new FullProductInput(commerceListLine.ProductId,ctx.requestContext.apiSettings,getProductDetailsCriteriaFromActionInput(ctx)));}});}});if(!(productInputs.length>0)){_context.next=13;break;}return _context.abrupt(\"return\",getFullProducts(productInputs,ctx).then(function(products){if(products){return products;}else{return[];}})[\"catch\"](function(error){ctx.trace(error);ctx.telemetry.error(error.message);ctx.telemetry.debug(\"[getActiveWishlistItems]Unable to hydrate cart with product information\");throw new Error('[getActiveWishlistItems]Unable to hydrate cart with product information');}));case 13:ctx.trace('No productIds found for wishlist');case 14:_context.next=18;break;case 16:ctx.trace('[getActiveWishlistItems]Not able to get wishlists for the customer');return _context.abrupt(\"return\",[]);case 18:ctx.trace('[getActiveWishlistItems]User token not found for wishlists');return _context.abrupt(\"return\",[]);case 20:case\"end\":return _context.stop();}}},_callee);}));return _getActiveWishlistItems.apply(this,arguments);}export default createObservableDataAction({id:'@msdyn365-commerce-modules/wishlist/wishlist-items/get-items-in-wishlist',action:getActiveWishlistItems,input:createInput});","map":{"version":3,"sources":["modules/wishlist-items/actions/get-items-in-wishlists.ts"],"names":[],"mappings":"8MACA,OAAoB,0BAApB,KAAmH,yBAAnH,CAGA,OAAS,gBAAT,CAA2B,eAA3B,CAA4C,wCAA5C,KAA4F,2CAA5F,CACA,OAAS,kBAAT,KAAmC,6EAAnC,CAKA,UAAa,CAAA,mBAAb,CAAA,8BAAA,2CACW,KAAA,WAAA,CAAc,wCAAd,CACA,KAAA,kBAAA,CAAqB,iBAAM,qBAAN,EAArB,CACA,KAAA,aAAA,CAAgB,iBAAiB,MAAjB,EAAhB,CACV,CAJD,CAMA,GAAM,CAAA,WAAW,CAAG,QAAd,CAAA,WAAc,CAAC,SAAD,CAAoC,CACpD,MAAO,IAAI,CAAA,mBAAJ,EAAP,CACH,CAFD,CAOA,eAAsB,CAAA,sBAAtB,+D,mHAAO,iBAAsC,KAAtC,CAAkE,GAAlE,iJAEE,KAFF,8BAGO,IAAI,CAAA,KAAJ,CAAU,8DAAV,CAHP,YAMC,GAAG,CAAC,cAAJ,CAAmB,IAAnB,CAAwB,eANzB,gDAOyB,CAAA,kBAAkB,CAAC,CAAE,aAAa,CAAE,GAAjB,CAAsB,mBAAmB,CAAE,EAA3C,CAAD,CAAkD,IAAlD,CAP3C,QAOO,SAPP,oBASK,SAAS,EAAI,SAAS,CAAC,MAAV,CAAmB,CATrC,2BAUW,aAVX,CAU+C,EAV/C,CAWK,SAAS,CAAC,OAAV,CAAkB,SAAC,YAAD,CAAiB,CAC/B,GAAI,YAAY,CAAC,iBAAjB,CAAoC,CAChC,YAAY,CAAC,iBAAb,CAA+B,OAA/B,CAAuC,SAAC,gBAAD,CAAuC,CAC1E,GAAI,gBAAgB,CAAC,SAArB,CAAgC,CAC5B,aAAa,CAAC,IAAd,CAAmB,GAAI,CAAA,gBAAJ,CAAqB,gBAAgB,CAAC,SAAtC,CAAiD,GAAG,CAAC,cAAJ,CAAmB,WAApE,CAAiF,wCAAwC,CAAC,GAAD,CAAzH,CAAnB,EACH,CACJ,CAJD,EAKH,CACJ,CARD,EAXL,KAqBS,aAAa,CAAC,MAAd,CAAuB,CArBhC,2DAsBgB,eAAe,CAAC,aAAD,CAAgB,GAAhB,CAAf,CACF,IADE,CACG,SAAA,QAAQ,CAAG,CACb,GAAI,QAAJ,CAAc,CACV,MAAO,CAAA,QAAP,CACH,CAFD,IAEO,CACH,MAAsB,EAAtB,CACH,CACJ,CAPE,WAQI,SAAA,KAAK,CAAG,CACX,GAAG,CAAC,KAAJ,CAAU,KAAV,EACA,GAAG,CAAC,SAAJ,CAAc,KAAd,CAAoB,KAAK,CAAC,OAA1B,EACA,GAAG,CAAC,SAAJ,CAAc,KAAd,4EACA,KAAM,IAAI,CAAA,KAAJ,CAAU,yEAAV,CAAN,CACH,CAbE,CAtBhB,UAqCS,GAAG,CAAC,KAAJ,CAAU,kCAAV,EArCT,uCAwCK,GAAG,CAAC,KAAJ,CAAU,oEAAV,EAxCL,gCAyC2B,EAzC3B,UA4CH,GAAG,CAAC,KAAJ,CAAU,4DAAV,EA5CG,gCA6CmB,EA7CnB,yD,yDAgDP,cAAe,CAAA,0BAA0B,CAAC,CACtC,EAAE,CAAE,0EADkC,CAEtC,MAAM,CAA0B,sBAFM,CAGtC,KAAK,CAAE,WAH+B,CAAD,CAAzC","sourcesContent":["import { FullProduct } from '@msdyn365-commerce/commerce-entities';\nimport { CacheType, createObservableDataAction, IAction, IActionContext, IActionInput, ICreateActionContext } from '@msdyn365-commerce/core';\nimport { CommerceListLine } from '@msdyn365-commerce/retail-proxy';\n\nimport { FullProductInput, getFullProducts, getProductDetailsCriteriaFromActionInput } from '@msdyn365-commerce-modules/retail-actions';\nimport { getByCustomerAsync } from '@msdyn365-commerce/retail-proxy/dist/DataActions/CommerceListsDataActions.g';\n\n/**\n * Input class for getActiveWishlistItems data action\n */\nexport class ActiveWishlistInput implements IActionInput {\n    public getCacheKey = () => `ActiveWishlistItems`;\n    public getCacheObjectType = () => 'ActiveWishlistItems';\n    public dataCacheType = (): CacheType => 'none';\n}\n\nconst createInput = (inputData: ICreateActionContext) => {\n    return new ActiveWishlistInput();\n};\n\n/**\n * Calls the Retail API and returns a CommerceList object based on the passed GetCartInput\n */\nexport async function getActiveWishlistItems(input: ActiveWishlistInput, ctx: IActionContext): Promise<FullProduct[]> {\n    // If no cart ID is provided in input, we need to create a cart object\n    if (!input) {\n        throw new Error('[getActiveWishlistItems]No valid Input was provided, failing');\n    }\n\n    if (ctx.requestContext.user.isAuthenticated) {\n        const wishlists = await getByCustomerAsync({ callerContext: ctx, queryResultSettings: {} }, null);\n\n        if (wishlists && wishlists.length > 0) {\n            const productInputs: FullProductInput[] = [];\n            wishlists.forEach((currWishlist) => {\n                if (currWishlist.CommerceListLines) {\n                    currWishlist.CommerceListLines.forEach((commerceListLine: CommerceListLine) => {\n                        if (commerceListLine.ProductId) {\n                            productInputs.push(new FullProductInput(commerceListLine.ProductId, ctx.requestContext.apiSettings, getProductDetailsCriteriaFromActionInput(ctx)));\n                        }\n                    });\n                }\n            });\n\n            if (productInputs.length > 0) {\n                return getFullProducts(productInputs, ctx)\n                    .then(products => {\n                        if (products) {\n                            return products;\n                        } else {\n                            return <FullProduct[]>[];\n                        }\n                    })\n                    .catch(error => {\n                        ctx.trace(error);\n                        ctx.telemetry.error(error.message);\n                        ctx.telemetry.debug(`[getActiveWishlistItems]Unable to hydrate cart with product information`);\n                        throw new Error('[getActiveWishlistItems]Unable to hydrate cart with product information');\n                    });\n            } else {\n                ctx.trace('No productIds found for wishlist');\n            }\n        } else {\n            ctx.trace('[getActiveWishlistItems]Not able to get wishlists for the customer');\n            return <FullProduct[]>[];\n        }\n    }\n    ctx.trace('[getActiveWishlistItems]User token not found for wishlists');\n    return <FullProduct[]>[];\n}\n\nexport default createObservableDataAction({\n    id: '@msdyn365-commerce-modules/wishlist/wishlist-items/get-items-in-wishlist',\n    action: <IAction<FullProduct[]>>getActiveWishlistItems,\n    input: createInput\n});\n"],"sourceRoot":"./src/"},"metadata":{},"sourceType":"module"}