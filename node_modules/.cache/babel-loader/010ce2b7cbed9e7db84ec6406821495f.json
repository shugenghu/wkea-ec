{"ast":null,"code":"import{createObservableDataAction}from'@msdyn365-commerce/core';import{refineSearchByTextAsync}from'@msdyn365-commerce/retail-proxy/dist/DataActions/ProductsDataActions.g';import{parseSearchData}from'./utilities/input-data-parser';import{QueryResultSettingsProxy}from'./utilities/QueryResultSettingsProxy';import{getRefinedFullProducts}from'./utilities/refiner-utils';import{getProductDetailsCriteriaFromActionInput}from'./utilities/utils';/**\r\n * Input for refining products returned by the search text.\r\n */export class FullProductsRefineSearchByTextInput{constructor(queryResultSettingsProxy,searchText,channelId,refinementCriteria,catalogId,criteria){this.getCacheKey=()=>\"FullProductsRefineSearchByTextInputCache\";this.getCacheObjectType=()=>'FullProductsRefineSearchByTextInput';this.dataCacheType=()=>'none';this.queryResultSettingsProxy=queryResultSettingsProxy;this.searchText=searchText||'';this.channelId=channelId;this.refinementCriteria=refinementCriteria||[];this.catalogId=catalogId||0;this.productDetailsCriteria=criteria;}}/**\r\n * Creates the input required to make the core action calls\r\n */export const createFullProductsRefineSearchByTextInput=inputData=>{const refinementCriteria=inputData.config&&inputData.config.refinementCriteria;const queryResultSettingsProxy=QueryResultSettingsProxy.fromInputData(inputData);if(!Array.isArray(refinementCriteria)){return new FullProductsRefineSearchByTextInput(queryResultSettingsProxy);}const searchInputData=parseSearchData(inputData);const catalogId=inputData.requestContext.apiSettings.catalogId;const productDetailsCriteria=getProductDetailsCriteriaFromActionInput(inputData);return new FullProductsRefineSearchByTextInput(queryResultSettingsProxy,searchInputData.q,searchInputData.channelId,refinementCriteria,catalogId,productDetailsCriteria);};/**\r\n * Calls the refine-search-by-text action.\r\n * Based on search result calls get-full-products to get all the product details.\r\n */export function getFullProductsByRefineSearchTextAction(input,ctx){return getRefinedFullProducts(input,ctx,// @ts-ignore: Promise.then typing conflict\n()=>{return refineSearchByTextAsync({callerContext:ctx,queryResultSettings:input.queryResultSettingsProxy.QueryResultSettings},input.channelId||0,input.catalogId,input.searchText,input.refinementCriteria);});}export default createObservableDataAction({id:'@msdyn365-commerce-modules/retail-actions/get-full-products-by-refine-search-text',action:getFullProductsByRefineSearchTextAction,input:createFullProductsRefineSearchByTextInput,isBatched:false});","map":{"version":3,"sources":["../../src/get-full-products-by-refine-search-text.ts"],"names":[],"mappings":"AAEA,OAAS,0BAAT,KAAiG,yBAAjG,CAEA,OAAS,uBAAT,KAAwC,wEAAxC,CAEA,OAAS,eAAT,KAAgC,+BAAhC,CACA,OAAS,wBAAT,KAAyC,sCAAzC,CACA,OAAS,sBAAT,KAAgE,2BAAhE,CACA,OAAS,wCAAT,KAAyD,mBAAzD,CAEA;;AAEG,GACH,MAAM,MAAO,CAAA,mCAAmC,CAU5C,WAAA,CACI,wBADJ,CAEI,UAFJ,CAGI,SAHJ,CAII,kBAJJ,CAKI,SALJ,CAMI,QANJ,CAMqC,CAU9B,KAAA,WAAA,CAAc,8CAAd,CACA,KAAA,kBAAA,CAAqB,IAAM,qCAA3B,CACA,KAAA,aAAA,CAAgB,IAAiB,MAAjC,CAVH,KAAK,wBAAL,CAAgC,wBAAhC,CACA,KAAK,UAAL,CAAkB,UAAU,EAAI,EAAhC,CACA,KAAK,SAAL,CAAiB,SAAjB,CACA,KAAK,kBAAL,CAA0B,kBAAkB,EAAI,EAAhD,CACA,KAAK,SAAL,CAAiB,SAAS,EAAI,CAA9B,CACA,KAAK,sBAAL,CAA8B,QAA9B,CACH,CAxB2C,CA+BhD;;AAEG,GACH,MAAO,MAAM,CAAA,yCAAyC,CAAI,SAAD,EAAkE,CACvH,KAAM,CAAA,kBAAkB,CAAG,SAAS,CAAC,MAAV,EAAoB,SAAS,CAAC,MAAV,CAAiB,kBAAhE,CACA,KAAM,CAAA,wBAAwB,CAAG,wBAAwB,CAAC,aAAzB,CAAuC,SAAvC,CAAjC,CACA,GAAI,CAAC,KAAK,CAAC,OAAN,CAAc,kBAAd,CAAL,CAAwC,CACpC,MAAO,IAAI,CAAA,mCAAJ,CAAwC,wBAAxC,CAAP,CACH,CAED,KAAM,CAAA,eAAe,CAAG,eAAe,CAAC,SAAD,CAAvC,CACA,KAAM,CAAA,SAAS,CAAG,SAAS,CAAC,cAAV,CAAyB,WAAzB,CAAqC,SAAvD,CACA,KAAM,CAAA,sBAAsB,CAAG,wCAAwC,CAAC,SAAD,CAAvE,CAEA,MAAO,IAAI,CAAA,mCAAJ,CACH,wBADG,CAEH,eAAe,CAAC,CAFb,CAGH,eAAe,CAAC,SAHb,CAIoB,kBAJpB,CAKH,SALG,CAMH,sBANG,CAAP,CAQH,CAnBM,CAqBP;;;AAGG,GACH,MAAM,SAAU,CAAA,uCAAV,CACF,KADE,CAEF,GAFE,CAEiB,CAEnB,MAAO,CAAA,sBAAsB,CACzB,KADyB,CAEzB,GAFyB,CAGzB;AACA,IAAK,CACD,MAAO,CAAA,uBAAuB,CAC1B,CAAE,aAAa,CAAE,GAAjB,CAAsB,mBAAmB,CAAE,KAAK,CAAC,wBAAN,CAA+B,mBAA1E,CAD0B,CAE1B,KAAK,CAAC,SAAN,EAAmB,CAFO,CAG1B,KAAK,CAAC,SAHoB,CAI1B,KAAK,CAAC,UAJoB,CAK1B,KAAK,CAAC,kBALoB,CAA9B,CAMH,CAXwB,CAA7B,CAaH,CAED,cAAe,CAAA,0BAA0B,CAAC,CACtC,EAAE,CAAE,mFADkC,CAEtC,MAAM,CAA2C,uCAFX,CAGtC,KAAK,CAAE,yCAH+B,CAItC,SAAS,CAAE,KAJ2B,CAAD,CAAzC","sourcesContent":["import { IRefineFullProductSearchOutput } from '@msdyn365-commerce/commerce-entities';\nimport { CacheType, IAction, IActionInput } from '@msdyn365-commerce/core';\nimport { createObservableDataAction, IActionContext, IAny, ICreateActionContext, IGeneric } from '@msdyn365-commerce/core';\nimport { ProductRefinerValue } from '@msdyn365-commerce/retail-proxy';\nimport { refineSearchByTextAsync } from '@msdyn365-commerce/retail-proxy/dist/DataActions/ProductsDataActions.g';\nimport { ProductDetailsCriteria } from './get-full-products';\nimport { parseSearchData } from './utilities/input-data-parser';\nimport { QueryResultSettingsProxy } from './utilities/QueryResultSettingsProxy';\nimport { getRefinedFullProducts, IRefinableProductsInput } from './utilities/refiner-utils';\nimport { getProductDetailsCriteriaFromActionInput } from './utilities/utils';\n\n/**\n * Input for refining products returned by the search text.\n */\nexport class FullProductsRefineSearchByTextInput implements IActionInput, IRefinableProductsInput {\n    public readonly searchText: string;\n    public readonly channelId?: number;\n    public readonly refinementCriteria: ProductRefinerValue[];\n    public readonly itemsPerPage?: number;\n    public readonly skipCount?: number;\n    public readonly catalogId: number;\n    public productDetailsCriteria?: ProductDetailsCriteria;\n    public readonly queryResultSettingsProxy: QueryResultSettingsProxy;\n\n    constructor(\n        queryResultSettingsProxy: QueryResultSettingsProxy,\n        searchText?: string,\n        channelId?: number,\n        refinementCriteria?: ProductRefinerValue[],\n        catalogId?: number,\n        criteria?: ProductDetailsCriteria\n    ) {\n        this.queryResultSettingsProxy = queryResultSettingsProxy;\n        this.searchText = searchText || '';\n        this.channelId = channelId;\n        this.refinementCriteria = refinementCriteria || [];\n        this.catalogId = catalogId || 0;\n        this.productDetailsCriteria = criteria;\n    }\n\n    public getCacheKey = () => `FullProductsRefineSearchByTextInputCache`;\n    public getCacheObjectType = () => 'FullProductsRefineSearchByTextInput';\n    public dataCacheType = (): CacheType => 'none';\n}\n\n/**\n * Creates the input required to make the core action calls\n */\nexport const createFullProductsRefineSearchByTextInput = (inputData: ICreateActionContext<IGeneric<IAny>>): IActionInput => {\n    const refinementCriteria = inputData.config && inputData.config.refinementCriteria;\n    const queryResultSettingsProxy = QueryResultSettingsProxy.fromInputData(inputData);\n    if (!Array.isArray(refinementCriteria)) {\n        return new FullProductsRefineSearchByTextInput(queryResultSettingsProxy);\n    }\n\n    const searchInputData = parseSearchData(inputData);\n    const catalogId = inputData.requestContext.apiSettings.catalogId;\n    const productDetailsCriteria = getProductDetailsCriteriaFromActionInput(inputData);\n\n    return new FullProductsRefineSearchByTextInput(\n        queryResultSettingsProxy,\n        searchInputData.q,\n        searchInputData.channelId,\n        <ProductRefinerValue[]>refinementCriteria,\n        catalogId,\n        productDetailsCriteria\n    );\n};\n\n/**\n * Calls the refine-search-by-text action.\n * Based on search result calls get-full-products to get all the product details.\n */\nexport function getFullProductsByRefineSearchTextAction(\n    input: FullProductsRefineSearchByTextInput,\n    ctx: IActionContext\n): Promise<IRefineFullProductSearchOutput> {\n    return getRefinedFullProducts(\n        input,\n        ctx,\n        // @ts-ignore: Promise.then typing conflict\n        () => {\n            return refineSearchByTextAsync(\n                { callerContext: ctx, queryResultSettings: input.queryResultSettingsProxy.QueryResultSettings },\n                input.channelId || 0,\n                input.catalogId,\n                input.searchText,\n                input.refinementCriteria);\n        }\n    );\n}\n\nexport default createObservableDataAction({\n    id: '@msdyn365-commerce-modules/retail-actions/get-full-products-by-refine-search-text',\n    action: <IAction<IRefineFullProductSearchOutput>>getFullProductsByRefineSearchTextAction,\n    input: createFullProductsRefineSearchByTextInput,\n    isBatched: false\n});\n"],"sourceRoot":""},"metadata":{},"sourceType":"module"}