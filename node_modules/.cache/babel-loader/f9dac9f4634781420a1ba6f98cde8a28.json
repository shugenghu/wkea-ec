{"ast":null,"code":"import{getProductUrlSync}from'@msdyn365-commerce-modules/retail-actions';import{Button,getPayloadObject,getTelemetryAttributes,TelemetryConstant}from'@msdyn365-commerce-modules/utilities';import{CartLineItemComponent}from'@msdyn365-commerce/components';import*as React from'react';var _getProduct=function _getProduct(productId,products){if(productId!==undefined&&products){return products.find(function(product){return productId===product.RecordId;});}return undefined;};var _getCartItemMaxQuantity=function _getCartItemMaxQuantity(outOfStockThreshold,maxCartlineQuantity,isStockCheckEnabled,productAvailability){if(isStockCheckEnabled){if(!productAvailability||!productAvailability.AvailableQuantity||productAvailability.AvailableQuantity<=0||productAvailability.AvailableQuantity<=outOfStockThreshold){return 0;}return productAvailability.AvailableQuantity-outOfStockThreshold;}return maxCartlineQuantity;};var _assembleNode=function _assembleNode(cartline,product,props,index,foundProductAvailability,foundProductDeliveryOptions){var imageSettings=props.imageSettings,gridSettings=props.gridSettings,id=props.id,typeName=props.typeName,context=props.context,resources=props.resources,removeButtonText=props.removeButtonText,removeItemClickHandler=props.removeItemClickHandler;var maxQuantity=_getCartItemMaxQuantity(props.outOfStockThreshold,props.maxCartlineQuantity,props.isStockCheckEnabled,foundProductAvailability);var PRODUCTASSERVICE=2;var isServiceItem=product.ItemTypeValue===PRODUCTASSERVICE;var onRemoveClickHandler=function onRemoveClickHandler(event){removeItemClickHandler(cartline);};var payLoad=getPayloadObject('click',props.telemetryContent,TelemetryConstant.RemoveCartItem);var removeCartItemAttribute=getTelemetryAttributes(props.telemetryContent,payLoad);return{data:{product:product,cartline:cartline},hasError:!isServiceItem&&props.isStockCheckEnabled?cartline.Quantity>maxQuantity:false,cartline:/*#__PURE__*/React.createElement(CartLineItemComponent,{data:{cartLine:cartline,product:product},currentQuantity:cartline.Quantity,maxQuantity:maxQuantity,isOutOfStock:!isServiceItem&&props.isStockCheckEnabled?maxQuantity<=0?true:false:false,gridSettings:gridSettings,imageSettings:imageSettings,id:id,typeName:typeName,productUrl:getProductUrlSync(product,props.context.actionContext,undefined),context:context,resources:resources,key:index,isQuantityEditable:false,primaryImageUrl:product.PrimaryImageUrl,displayMode:'COMPACT',telemetryContent:props.telemetryContent}),remove:/*#__PURE__*/React.createElement(Button,Object.assign({className:'msc-cart-line__remove-item',onClick:onRemoveClickHandler,title:removeButtonText},removeCartItemAttribute),removeButtonText),storeLocation:_renderStoreLocation(cartline,props)};};var _renderStoreLocation=function _renderStoreLocation(cartLine,props){if(cartLine&&cartLine.FulfillmentStoreId){var orgUnitName=_getOrgUnitName(cartLine.FulfillmentStoreId,props.orgUnitLocations);if(orgUnitName){return/*#__PURE__*/React.createElement(\"div\",{className:\"msc-cart-line__bopis-method\"},/*#__PURE__*/React.createElement(\"span\",{className:\"pick-up\"},orgUnitName));}}return null;};var _getOrgUnitName=function _getOrgUnitName(fulfillmentStoreId,orgUnitLocations){if(!orgUnitLocations||!fulfillmentStoreId||!(orgUnitLocations.length>0)){return'';}var foundLocation=orgUnitLocations.find(function(orgUnitLocation){return orgUnitLocation.OrgUnitNumber===fulfillmentStoreId;});if(foundLocation){return foundLocation.OrgUnitName;}else{return fulfillmentStoreId;}};var _assembleCartlines=function _assembleCartlines(cartlines,products,props){var reactNodes=[];if(!products||products.length===0){props.context.telemetry.error('Cartlines content is empty, module wont render');return null;}cartlines.map(function(cartline,index){var product=_getProduct(cartline.ProductId,products);var foundProductAvailability;if(props.productAvailabilites&&props.productAvailabilites.length>0){foundProductAvailability=props.productAvailabilites.find(function(productAvailability){var _productAvailability$;return((_productAvailability$=productAvailability.ProductAvailableQuantity)===null||_productAvailability$===void 0?void 0:_productAvailability$.ProductId)===cartline.ProductId;});}var foundProductDeliveryOption;if(props.productDeliveryOptions&&props.productDeliveryOptions.length>0){foundProductDeliveryOption=props.productDeliveryOptions.find(function(deliveryOption){return deliveryOption&&deliveryOption.ProductId===cartline.ProductId;});}if(product){var _foundProductAvailabi;reactNodes.push(_assembleNode(cartline,product,props,index,(_foundProductAvailabi=foundProductAvailability)===null||_foundProductAvailabi===void 0?void 0:_foundProductAvailabi.ProductAvailableQuantity,foundProductDeliveryOption));}});return reactNodes;};export var FlyoutCartLineItems=function FlyoutCartLineItems(props){var products=props.products,cartlines=props.cartlines;return _assembleCartlines(cartlines,products,props);};","map":{"version":3,"sources":["modules/cart-icon/components/flyout-cart-line-items.tsx"],"names":[],"mappings":"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","sourcesContent":["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { getProductUrlSync, IProductInventoryInformation } from '@msdyn365-commerce-modules/retail-actions';\nimport { Button, getPayloadObject, getTelemetryAttributes, ITelemetryContent, TelemetryConstant } from '@msdyn365-commerce-modules/utilities';\nimport { CartLineItemComponent, ICartlineResourceString } from '@msdyn365-commerce/components';\nimport { ICoreContext, IGridSettings, IImageSettings, ITelemetry } from '@msdyn365-commerce/core';\nimport { ICartState } from '@msdyn365-commerce/global-state';\nimport { CartLine, OrgUnitLocation, ProductAvailableQuantity, ProductDeliveryOptions, SimpleProduct } from '@msdyn365-commerce/retail-proxy';\nimport { ReleasedProductType } from '@msdyn365-commerce/retail-proxy/dist/Entities/CommerceTypes.g';\nimport * as React from 'react';\n\nexport interface IFlyoutCartLineItemsProps {\n    cartlines: CartLine[];\n    cartState: ICartState | undefined;\n    orgUnitLocations: OrgUnitLocation[] | undefined;\n    resources: ICartlineResourceString;\n    productAvailabilites: IProductInventoryInformation[] | undefined;\n    products: SimpleProduct[] | undefined;\n    productDeliveryOptions: ProductDeliveryOptions[] | undefined;\n    pickupDeliveryModeCode?: string;\n    /** GridSettings for the product image in cartline  */\n    gridSettings: IGridSettings;\n    /** ImageSettings for the product image in cartline  */\n    imageSettings: IImageSettings;\n    id: string;\n    typeName:string;\n    context: ICoreContext;\n    telemetry: ITelemetry;\n    removeButtonText: string;\n    outOfStockText: string;\n    outOfRangeOneText: string;\n    outOfRangeFormatText: string;\n    maxCartlineQuantity: number;\n\n    outOfStockThreshold: number;\n    isStockCheckEnabled: boolean;\n    telemetryContent?: ITelemetryContent;\n    removeItemClickHandler(cartlineToRemove: CartLine): void;\n}\n\nexport interface IFlyoutCartLineItemViewProps {\n    cartline: React.ReactNode;\n    remove: React.ReactNode;\n    storeLocation: React.ReactNode;\n    hasError: boolean;\n\n    data: {\n        product: SimpleProduct;\n        cartline: CartLine;\n    };\n}\n\nconst _getProduct = (productId: number | undefined, products: SimpleProduct[]): SimpleProduct | undefined => {\n    if (productId !== undefined && products) {\n        return products.find(product => {\n            return productId === product.RecordId;\n        });\n    }\n    return undefined;\n};\n\nconst _getCartItemMaxQuantity = (outOfStockThreshold: number, maxCartlineQuantity: number, isStockCheckEnabled: boolean, productAvailability?: ProductAvailableQuantity) => {\n    if(isStockCheckEnabled) {\n        if(!productAvailability || !productAvailability.AvailableQuantity || productAvailability.AvailableQuantity <= 0 || productAvailability.AvailableQuantity <= outOfStockThreshold) {\n            return 0;\n        }\n        return productAvailability.AvailableQuantity - outOfStockThreshold;\n    }\n\n    return maxCartlineQuantity;\n};\n\nconst _assembleNode = (\n    cartline: CartLine,\n    product: SimpleProduct,\n    props:IFlyoutCartLineItemsProps,\n    index:number,\n    foundProductAvailability?:ProductAvailableQuantity,\n    foundProductDeliveryOptions?:ProductDeliveryOptions,\n    ):IFlyoutCartLineItemViewProps => {\n    const {\n            imageSettings,\n            gridSettings,\n            id,\n            typeName,\n            context,\n            resources,\n            removeButtonText,\n            removeItemClickHandler } = props;\n\n    const maxQuantity = _getCartItemMaxQuantity(props.outOfStockThreshold,  props.maxCartlineQuantity, props.isStockCheckEnabled, foundProductAvailability);\n\n    // check if the product is service or not by product type\n    const PRODUCTASSERVICE = 2 as ReleasedProductType.Service;\n    const isServiceItem = product.ItemTypeValue === PRODUCTASSERVICE;\n\n    const onRemoveClickHandler = (event: React.MouseEvent<HTMLElement>) => { removeItemClickHandler(cartline); };\n    const payLoad = getPayloadObject('click', props.telemetryContent!, TelemetryConstant.RemoveCartItem);\n    const removeCartItemAttribute = getTelemetryAttributes(props.telemetryContent!, payLoad);\n\n    return {\n        data: {\n            product: product,\n            cartline: cartline\n        },\n        hasError: (!isServiceItem && props.isStockCheckEnabled) ? cartline.Quantity! > maxQuantity : false,\n        cartline: (\n            <CartLineItemComponent\n                    data={{\n                        cartLine: cartline,\n                        product: product\n                    }}\n                    currentQuantity = {cartline.Quantity!}\n                    maxQuantity = {maxQuantity}\n                    isOutOfStock = {(!isServiceItem && props.isStockCheckEnabled) ? (maxQuantity <= 0 ? true: false) : false}\n                    gridSettings={gridSettings}\n                    imageSettings={imageSettings}\n                    id={id}\n                    typeName={typeName}\n                    productUrl={getProductUrlSync(product, props.context.actionContext, undefined)}\n                    context={context}\n                    resources={resources}\n                    key={index}\n                    isQuantityEditable={false}\n                    primaryImageUrl={product.PrimaryImageUrl}\n                    displayMode='COMPACT'\n                    telemetryContent={props.telemetryContent!}\n            />),\n        remove: (\n            <Button\n                className='msc-cart-line__remove-item'\n                onClick={onRemoveClickHandler}\n                title={removeButtonText}\n                {...removeCartItemAttribute}\n            >\n                {removeButtonText}\n            </Button>\n        ),\n        storeLocation: (\n            _renderStoreLocation(cartline, props)\n        )\n    };\n};\n\nconst _renderStoreLocation = (cartLine: CartLine | null | undefined, props: IFlyoutCartLineItemsProps): JSX.Element | null => {\n    if(cartLine && cartLine.FulfillmentStoreId) {\n        const orgUnitName = _getOrgUnitName(cartLine.FulfillmentStoreId, props.orgUnitLocations);\n\n        if(orgUnitName) {\n            return (\n                <div className={`msc-cart-line__bopis-method`}>\n                    <span className={`pick-up`}>{orgUnitName}</span>\n                </div>\n            );\n        }\n    }\n\n    return null;\n};\n\nconst _getOrgUnitName = (fulfillmentStoreId: string | undefined, orgUnitLocations: OrgUnitLocation[] | undefined) => {\n    if(!orgUnitLocations || !fulfillmentStoreId || !(orgUnitLocations.length > 0)) {\n        return '';\n    }\n\n    const foundLocation = orgUnitLocations.find(orgUnitLocation => {\n        return orgUnitLocation.OrgUnitNumber === fulfillmentStoreId;\n    });\n\n    if(foundLocation) {\n        return foundLocation.OrgUnitName;\n    } else {\n        return fulfillmentStoreId;\n    }\n};\n\nconst _assembleCartlines = (\n    cartlines: CartLine[],\n    products: SimpleProduct[] | undefined,\n    props: IFlyoutCartLineItemsProps):IFlyoutCartLineItemViewProps[] | null => {\n    const reactNodes:IFlyoutCartLineItemViewProps[] = [];\n\n    if(!products || products.length === 0) {\n        props.context.telemetry.error('Cartlines content is empty, module wont render');\n        return null;\n    }\n\n    cartlines.map((cartline, index) => {\n        const product = _getProduct(cartline.ProductId, products);\n        let foundProductAvailability;\n        if(props.productAvailabilites && props.productAvailabilites.length > 0) {\n            foundProductAvailability = props.productAvailabilites.find((productAvailability) => {\n                return productAvailability.ProductAvailableQuantity?.ProductId! === cartline.ProductId;\n            });\n        }\n        let foundProductDeliveryOption;\n        if(props.productDeliveryOptions && props.productDeliveryOptions.length > 0) {\n            foundProductDeliveryOption = props.productDeliveryOptions.find((deliveryOption) => {\n                return deliveryOption && deliveryOption.ProductId === cartline.ProductId;\n            });\n        }\n        if(product) {\n            reactNodes.push(_assembleNode(cartline, product, props, index, foundProductAvailability?.ProductAvailableQuantity, foundProductDeliveryOption));\n        }\n    });\n\n    return reactNodes;\n};\n\n/**\n * CartLineItems component\n */\n\nexport const FlyoutCartLineItems = (props: IFlyoutCartLineItemsProps) => {\n    const { products, cartlines } = props;\n    return (\n        _assembleCartlines(cartlines, products, props)\n    );\n};"],"sourceRoot":"./src/"},"metadata":{},"sourceType":"module"}