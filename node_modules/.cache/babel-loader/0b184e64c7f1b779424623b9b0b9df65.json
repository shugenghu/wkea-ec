{"ast":null,"code":"import _regeneratorRuntime from\"@babel/runtime/regenerator\";import _asyncToGenerator from\"@babel/runtime/helpers/esm/asyncToGenerator\";import _classCallCheck from\"@babel/runtime/helpers/esm/classCallCheck\";import{createObservableDataAction}from'@msdyn365-commerce/core';import{updateAsync}from'@msdyn365-commerce/retail-proxy/dist/DataActions/ProductListsDataActions.g';/**\r\n *  Input class for the UpdateOrderTemplate data action.\r\n */export var UpdateOrderTemplateHeaderInput=function UpdateOrderTemplateHeaderInput(orderTemplate){_classCallCheck(this,UpdateOrderTemplateHeaderInput);this.getCacheKey=function(){return'UpdateOrderTemplateHeaderInput';};this.getCacheObjectType=function(){return'UpdateOrderTemplateHeaderInput';};this.dataCacheType=function(){return'none';};this.orderTemplate=orderTemplate;};/**\r\n * createInput method for the UpdateOrderTemplateHeader method.\r\n * @param {ICreateActionContext} inputData The input data passed to the createInput method.\r\n * @param {ProductList} orderTemplate The template header.\r\n */export var updateOrderTemplateHeaderInput=function updateOrderTemplateHeaderInput(inputData,orderTemplate){var requestContext=inputData.requestContext;if(!requestContext.user.isAuthenticated){throw new Error('Unable to update order template. User is not authenticated.');}return new UpdateOrderTemplateHeaderInput(orderTemplate);};/**\r\n * The action method for the UpdateOrderTemplate data action.\r\n * @param {UpdateOrderTemplateHeaderInput} input The action input.\r\n * @param {IActionContext} ctx The action context.\r\n */export function updateOrderTemplateHeaderAction(_x,_x2){return _updateOrderTemplateHeaderAction.apply(this,arguments);}/**\r\n * The UpdateOrderTemplate Data Action.\r\n * Returns updated order template.\r\n */function _updateOrderTemplateHeaderAction(){_updateOrderTemplateHeaderAction=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee(input,ctx){var orderTemplate,updatedProductList;return _regeneratorRuntime.wrap(function _callee$(_context){while(1){switch(_context.prev=_context.next){case 0:_context.prev=0;orderTemplate=input.orderTemplate;_context.next=4;return updateAsync({callerContext:ctx},orderTemplate);case 4:updatedProductList=_context.sent;if(!updatedProductList){_context.next=9;break;}return _context.abrupt(\"return\",updatedProductList);case 9:ctx.telemetry.error(\"Updated product list \".concat(orderTemplate.Id,\" came back as null.\"));throw Error('Updated product list was null.');case 11:_context.next=17;break;case 13:_context.prev=13;_context.t0=_context[\"catch\"](0);ctx.telemetry.error('Not able to update order template',_context.t0);throw _context.t0;case 17:case\"end\":return _context.stop();}}},_callee,null,[[0,13]]);}));return _updateOrderTemplateHeaderAction.apply(this,arguments);}export default createObservableDataAction({id:'@msdyn365-commerce-modules/retail-actions/order-templates/update-order-template-header',action:updateOrderTemplateHeaderAction,input:updateOrderTemplateHeaderInput});","map":{"version":3,"sources":["../../../src/order-templates/update-order-template-header.ts"],"names":[],"mappings":"8MAAA,OACI,0BADJ,KAKgC,yBALhC,CAMA,OAAS,WAAT,KAA4B,4EAA5B,CAGA;;AAEG,GACH,UAAa,CAAA,8BAAb,CAGI,wCAAY,aAAZ,CAAsC,sDAI/B,KAAA,WAAA,CAAc,iBAAM,gCAAN,EAAd,CACA,KAAA,kBAAA,CAAqB,iBAAM,gCAAN,EAArB,CACA,KAAA,aAAA,CAAgB,iBAAiB,MAAjB,EAAhB,CALH,KAAK,aAAL,CAAqB,aAArB,CACH,CALL,CAYA;;;;AAIG,GACH,MAAO,IAAM,CAAA,8BAA8B,CAAG,QAAjC,CAAA,8BAAiC,CAAC,SAAD,CAAkC,aAAlC,CAAgG,IAClI,CAAA,cADkI,CAC/G,SAD+G,CAClI,cADkI,CAE1I,GAAI,CAAC,cAAc,CAAC,IAAf,CAAoB,eAAzB,CAA0C,CACtC,KAAM,IAAI,CAAA,KAAJ,CAAU,6DAAV,CAAN,CACH,CACD,MAAO,IAAI,CAAA,8BAAJ,CAAmC,aAAnC,CAAP,CACH,CANM,CAQP;;;;AAIG,GACH,eAAsB,CAAA,+BAAtB,wEAkBA;;;AAGG,G,qIArBI,iBAA+C,KAA/C,CAAsF,GAAtF,uKAES,aAFT,CAE2B,KAF3B,CAES,aAFT,uBAGkC,CAAA,WAAW,CAAC,CACzC,aAAa,CAAE,GAD0B,CAAD,CAEzC,aAFyC,CAH7C,QAGO,kBAHP,mBAMK,kBANL,yDAOY,kBAPZ,SASK,GAAG,CAAC,SAAJ,CAAc,KAAd,gCAA4C,aAAa,CAAC,EAA1D,yBATL,KAUW,CAAA,KAAK,CAAC,gCAAD,CAVhB,0FAaC,GAAG,CAAC,SAAJ,CAAc,KAAd,CAAoB,mCAApB,cAbD,uF,kEAsBP,cAAe,CAAA,0BAA0B,CAAc,CACnD,EAAE,CAAE,wFAD+C,CAEnD,MAAM,CAAwB,+BAFqB,CAGnD,KAAK,CAAE,8BAH4C,CAAd,CAAzC","sourcesContent":["import { CacheType,\n    createObservableDataAction,\n    IAction,\n    IActionContext,\n    IActionInput,\n    ICreateActionContext } from '@msdyn365-commerce/core';\nimport { updateAsync } from '@msdyn365-commerce/retail-proxy/dist/DataActions/ProductListsDataActions.g';\nimport { ProductList } from '@msdyn365-commerce/retail-proxy/dist/Entities/CommerceTypes.g';\n\n/**\n *  Input class for the UpdateOrderTemplate data action.\n */\nexport class UpdateOrderTemplateHeaderInput implements IActionInput {\n    public readonly orderTemplate: ProductList;\n\n    constructor(orderTemplate: ProductList) {\n        this.orderTemplate = orderTemplate;\n    }\n\n    public getCacheKey = () => 'UpdateOrderTemplateHeaderInput';\n    public getCacheObjectType = () => 'UpdateOrderTemplateHeaderInput';\n    public dataCacheType = (): CacheType => 'none';\n}\n\n/**\n * createInput method for the UpdateOrderTemplateHeader method.\n * @param {ICreateActionContext} inputData The input data passed to the createInput method.\n * @param {ProductList} orderTemplate The template header.\n */\nexport const updateOrderTemplateHeaderInput = (inputData: ICreateActionContext, orderTemplate: ProductList): UpdateOrderTemplateHeaderInput => {\n    const { requestContext } = inputData;\n    if (!requestContext.user.isAuthenticated) {\n        throw new Error('Unable to update order template. User is not authenticated.');\n    }\n    return new UpdateOrderTemplateHeaderInput(orderTemplate);\n};\n\n/**\n * The action method for the UpdateOrderTemplate data action.\n * @param {UpdateOrderTemplateHeaderInput} input The action input.\n * @param {IActionContext} ctx The action context.\n */\nexport async function updateOrderTemplateHeaderAction(input: UpdateOrderTemplateHeaderInput, ctx: IActionContext): Promise<ProductList> {\n    try {\n        const { orderTemplate } = input;\n        const updatedProductList = await updateAsync({\n            callerContext: ctx\n        }, orderTemplate);\n        if (updatedProductList) {\n            return updatedProductList;\n        } else {\n            ctx.telemetry.error(`Updated product list ${orderTemplate.Id} came back as null.`);\n            throw Error('Updated product list was null.');\n        }\n    } catch (error) {\n        ctx.telemetry.error('Not able to update order template', error);\n        throw error;\n    }\n}\n\n/**\n * The UpdateOrderTemplate Data Action.\n * Returns updated order template.\n */\nexport default createObservableDataAction<ProductList>({\n    id: '@msdyn365-commerce-modules/retail-actions/order-templates/update-order-template-header',\n    action: <IAction<ProductList>>updateOrderTemplateHeaderAction,\n    input: updateOrderTemplateHeaderInput\n});"],"sourceRoot":""},"metadata":{},"sourceType":"module"}