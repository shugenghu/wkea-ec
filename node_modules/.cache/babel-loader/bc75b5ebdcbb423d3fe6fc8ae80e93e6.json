{"ast":null,"code":"import\"core-js/modules/es.object.assign.js\";import{PriceComponent}from'@msdyn365-commerce/components';import get from'lodash/get';import*as React from'react';import{countItems}from'./utilities';export const getOrderInformation=(_ref)=>{let{moduleName,channelReferenceId,channelName,channelAddress,showChannelInfo,receiptEmail,createdDate,amount,priceContext,salesId,receiptId,count,resources:{receiptEmailMessage,orderItemLabel,orderItemsLabel,orderIdLabel,receiptIdLabel,confirmationIdLabel,posChannelNameText,onlineStoreChannelNameText,orderPlacedOnLabel}}=_ref;return{orderInformationProps:{className:\"\".concat(moduleName,\"__order-information\")},channelName:showChannelInfo&&channelName&&(channelAddress?/*#__PURE__*/React.createElement(\"span\",{className:\"\".concat(moduleName,\"__order-information-channel-name\")},\"\".concat(posChannelNameText,\" \").concat(channelName)):/*#__PURE__*/React.createElement(\"span\",{className:\"\".concat(moduleName,\"__order-information-channel-name\")},onlineStoreChannelNameText)),channelAddress:showChannelInfo&&channelAddress&&/*#__PURE__*/React.createElement(\"span\",{className:\"\".concat(moduleName,\"__order-information-channel-address\")},channelAddress),salesId:salesId?/*#__PURE__*/React.createElement(\"span\",{className:\"\".concat(moduleName,\"__order-information-sales-id\")},\"\".concat(orderIdLabel,\" \").concat(salesId)):'',receiptId:receiptId?/*#__PURE__*/React.createElement(\"span\",{className:\"\".concat(moduleName,\"__order-information-receipt-id\")},\"\".concat(receiptIdLabel,\" \").concat(receiptId)):'',receiptEmail:receiptEmail&&/*#__PURE__*/React.createElement(\"span\",{className:\"\".concat(moduleName,\"__order-information-receipt-email\")},receiptEmailMessage,/*#__PURE__*/React.createElement(\"span\",null,receiptEmail)),createdDate:createdDate&&/*#__PURE__*/React.createElement(\"span\",{className:\"\".concat(moduleName,\"__order-information-created-date\")},orderPlacedOnLabel,\" \",createdDate),count:count!==undefined&&count>0&&/*#__PURE__*/React.createElement(\"span\",{className:\"\".concat(moduleName,\"__order-information-count\")},count===1?\"\".concat(count,\" \").concat(orderItemLabel):\"\".concat(count,\" \").concat(orderItemsLabel)),amount:(amount||amount===0)&&/*#__PURE__*/React.createElement(PriceComponent,Object.assign({},priceContext,{className:\"\".concat(moduleName,\"__order-information-amount\"),data:{price:{CustomerContextualPrice:amount}}})),channelReferenceId:channelReferenceId&&/*#__PURE__*/React.createElement(\"span\",{className:\"\".concat(moduleName,\"__order-information-channel-reference-id\")},\"\".concat(confirmationIdLabel,\" \"),/*#__PURE__*/React.createElement(\"span\",null,channelReferenceId))};};export const getOrderInfomationInput=(props,moduleName,order,priceContext,channelIdentities,orgUnitLocations,showChannelInfo)=>{const{resources,context:{request:{apiSettings:{channelId}}}}=props;const showTrackingInfo=!!order.ChannelId&&order.ChannelId===channelId;const locale=get(props,'context.request.locale')||'en-US';const count=order.SalesLines&&order.SalesLines.length?countItems(order.SalesLines):0;const orderChannel=channelIdentities?channelIdentities.filter(channel=>{return channel.RecordId===order.ChannelId;}):'';const orderOrgUnitLocation=orgUnitLocations?orgUnitLocations.filter(location=>{return location.ChannelId===order.ChannelId;}):'';return{moduleName:moduleName,createdDate:order.CreatedDateTime&&new Date(order.CreatedDateTime).toLocaleDateString(locale)||'',salesId:order.SalesId,receiptId:order.ReceiptId,showChannelInfo:showChannelInfo,receiptEmail:order.ReceiptEmail,channelReferenceId:order.ChannelReferenceId,channelName:orderChannel&&orderChannel.length>0?orderChannel[0].Name:'',channelAddress:orderOrgUnitLocation&&orderOrgUnitLocation.length>0?orderOrgUnitLocation[0].Address:'',amount:order.TotalAmount||0,priceContext:priceContext,count,resources};};","map":{"version":3,"sources":["common/get-order-information.tsx"],"names":[],"mappings":"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","sourcesContent":["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nimport { INodeProps } from '@msdyn365-commerce-modules/utilities';\nimport { PriceComponent } from '@msdyn365-commerce/components';\nimport { ChannelIdentity, OrderShipments, OrgUnitLocation, SalesOrder } from '@msdyn365-commerce/retail-proxy';\nimport get from 'lodash/get';\nimport * as React from 'react';\nimport { countItems, IModuleComponentProps, IPriceContext } from './utilities';\n\nexport interface IOrderInformationInputResources {\n    receiptEmailMessage?: string;\n    orderItemLabel: string;\n    orderItemsLabel: string;\n    processingLabel: string;\n    orderIdLabel: string;\n    receiptIdLabel: string;\n    confirmationIdLabel: string;\n    trackingLabel: string;\n    trackingAriaLabel: string;\n    trackingComingSoonLabel: string;\n    posChannelNameText?: string;\n    onlineStoreChannelNameText?: string;\n    orderPlacedOnLabel?: string;\n}\nexport interface IOrderInformationInput {\n    moduleName: string;\n    channelReferenceId?: string;\n    channelName?: string;\n    channelAddress?: string;\n    showChannelInfo?: boolean;\n    receiptEmail?: string;\n    createdDate?: string;\n    amount?: number;\n    priceContext: IPriceContext;\n    salesId?: string;\n    receiptId?: string;\n    hasTrackingInfo?: boolean;\n    count?: number;\n    resources: IOrderInformationInputResources;\n}\n\nexport interface IOrderInformation {\n    orderInformationProps: INodeProps;\n    channelName: React.ReactNode;\n    channelAddress: React.ReactNode;\n    salesId: React.ReactNode;\n    receiptId: React.ReactNode;\n    receiptEmail: React.ReactNode;\n    createdDate: React.ReactNode;\n    count: React.ReactNode;\n    amount: React.ReactNode;\n    channelReferenceId: React.ReactNode;\n}\n\nexport const getOrderInformation = ({\n    moduleName,\n    channelReferenceId,\n    channelName,\n    channelAddress,\n    showChannelInfo,\n    receiptEmail,\n    createdDate,\n    amount,\n    priceContext,\n    salesId,\n    receiptId,\n    count,\n    resources: { receiptEmailMessage, orderItemLabel, orderItemsLabel, orderIdLabel, receiptIdLabel, confirmationIdLabel, posChannelNameText, onlineStoreChannelNameText, orderPlacedOnLabel }\n}: IOrderInformationInput): IOrderInformation => ({\n    orderInformationProps: { className: `${moduleName}__order-information` },\n    channelName: showChannelInfo && channelName && (\n        channelAddress ? <span className={`${moduleName}__order-information-channel-name`}>{`${posChannelNameText} ${channelName}`}</span>\n            : <span className={`${moduleName}__order-information-channel-name`}>{onlineStoreChannelNameText}</span>),\n    channelAddress: showChannelInfo && channelAddress && <span className={`${moduleName}__order-information-channel-address`}>{channelAddress}</span>,\n    salesId: salesId ? <span className={`${moduleName}__order-information-sales-id`}>{`${orderIdLabel} ${salesId}`}</span> : '',\n    receiptId: receiptId ? <span className={`${moduleName}__order-information-receipt-id`}>{`${receiptIdLabel} ${receiptId}`}</span> : '',\n    receiptEmail: receiptEmail && (\n        <span className={`${moduleName}__order-information-receipt-email`}>\n            {receiptEmailMessage}\n            <span>{receiptEmail}</span>\n        </span>\n    ),\n    createdDate: createdDate && <span className={`${moduleName}__order-information-created-date`}>{orderPlacedOnLabel} {createdDate}</span>,\n    count: count !== undefined && count > 0 && (\n        <span className={`${moduleName}__order-information-count`}>\n            {count === 1 ? `${count} ${orderItemLabel}` : `${count} ${orderItemsLabel}`}\n        </span>\n    ),\n    amount: (amount || amount === 0) && (\n        <PriceComponent\n            {...priceContext}\n            className={`${moduleName}__order-information-amount`}\n            data={{ price: { CustomerContextualPrice: amount } }}\n        />\n    ),\n    channelReferenceId: channelReferenceId && (\n        <span className={`${moduleName}__order-information-channel-reference-id`}>{`${confirmationIdLabel} `}<span>{channelReferenceId}</span></span>\n    )\n});\n\ninterface IProps extends IModuleComponentProps {\n    resources: IOrderInformationInputResources;\n}\n\nexport const getOrderInfomationInput = (\n    props: IProps,\n    moduleName: string,\n    order: SalesOrder | OrderShipments,\n    priceContext: IPriceContext,\n    channelIdentities?: ChannelIdentity[],\n    orgUnitLocations?: OrgUnitLocation[],\n    showChannelInfo?: boolean\n): IOrderInformationInput => {\n    const {\n        resources,\n        context: {\n            request: {\n                apiSettings: { channelId }\n            }\n        }\n    } = props;\n\n    // @ts-ignore OrderShipments doesnt has ChannelId\n    const showTrackingInfo = !!order.ChannelId && order.ChannelId === channelId;\n\n    const locale = get(props, 'context.request.locale') || 'en-US';\n    const count = order.SalesLines && order.SalesLines.length ? countItems(order.SalesLines) : 0;\n\n    const orderChannel = channelIdentities ? channelIdentities.filter(channel => { return channel.RecordId === order.ChannelId; }) : '';\n    const orderOrgUnitLocation = orgUnitLocations ? orgUnitLocations.filter(location => { return location.ChannelId === order.ChannelId; }) : '';\n\n    return {\n        moduleName: moduleName,\n        createdDate: (order.CreatedDateTime && new Date(order.CreatedDateTime).toLocaleDateString(locale)) || '',\n        salesId: order.SalesId,\n        receiptId: order.ReceiptId,\n        showChannelInfo: showChannelInfo,\n        // @ts-ignore OrderShipments doesnt has ReceiptEmail\n        receiptEmail: order.ReceiptEmail,\n        channelReferenceId: order.ChannelReferenceId,\n        channelName: orderChannel && orderChannel.length > 0 ? orderChannel[0].Name : '',\n        channelAddress: orderOrgUnitLocation && orderOrgUnitLocation.length > 0 ? orderOrgUnitLocation[0].Address : '',\n        amount: order.TotalAmount || 0,\n        priceContext: priceContext,\n        count,\n        resources\n    };\n};\n"],"sourceRoot":"./src/"},"metadata":{},"sourceType":"module"}