{"ast":null,"code":"import\"core-js/modules/web.dom-collections.for-each.js\";import\"core-js/modules/web.dom-collections.iterator.js\";/*!\r\n * Copyright (c) Microsoft Corporation.\r\n * All rights reserved. See LICENSE in the project root for license information.\r\n */ // tslint:disable:no-any\nimport{EventEmitter}from'events';/**\r\n * Custom isomorphic event emitter implementation\r\n *\r\n * @export\r\n * @class CustomEventEmitter\r\n */class CustomEventEmitter{constructor(){this.listeners=new Map();this.eventEmitter=typeof window!==undefined?null:new EventEmitter();}on(event,callback){if(!!this.eventEmitter){this.eventEmitter.on(event,callback);}else{let listeners=this.listeners.get(event);if(!!!listeners){listeners=[];this.listeners.set(event,listeners);}listeners.push(callback);}}emit(event){for(var _len=arguments.length,args=new Array(_len>1?_len-1:0),_key=1;_key<_len;_key++){args[_key-1]=arguments[_key];}if(!!this.eventEmitter){return this.eventEmitter.emit(event,args);}const listeners=this.listeners.get(event);if(listeners&&listeners.length){listeners.forEach(listener=>{listener(...args);});return true;}return false;}removeAllListeners(event){if(!!this.eventEmitter){this.eventEmitter.removeAllListeners(event);}else{this.listeners.delete(event);}}}export default new CustomEventEmitter();","map":{"version":3,"sources":["../../src/event-emitter.ts"],"names":[],"mappings":"gHAAA;;;AAGG,G,CAEH;AACA,OAAS,YAAT,KAA6B,QAA7B,CAiBA;;;;;AAKG,GACH,KAAM,CAAA,kBAAkB,CAAxB,WAAA,EAAA,CACY,KAAA,SAAA,CAA6C,GAAI,CAAA,GAAJ,EAA7C,CACA,KAAA,YAAA,CAAoC,MAAO,CAAA,MAAP,GAAkB,SAAlB,CAA8B,IAA9B,CAAqC,GAAI,CAAA,YAAJ,EAAzE,CAwCX,CAtCU,EAAE,CAAkC,KAAlC,CAAiD,QAAjD,CAA8E,CACnF,GAAI,CAAC,CAAC,KAAK,YAAX,CAAyB,CACrB,KAAK,YAAL,CAAkB,EAAlB,CAAqB,KAArB,CAA6C,QAA7C,EACH,CAFD,IAEO,CACH,GAAI,CAAA,SAAS,CAAG,KAAK,SAAL,CAAe,GAAf,CAAmB,KAAnB,CAAhB,CACA,GAAI,CAAC,CAAC,CAAC,SAAP,CAAkB,CACd,SAAS,CAAG,EAAZ,CACA,KAAK,SAAL,CAAe,GAAf,CAAmB,KAAnB,CAA0B,SAA1B,EACH,CAED,SAAS,CAAC,IAAV,CAAiC,QAAjC,EACH,CACJ,CAEM,IAAI,CAA2B,KAA3B,CAAoD,+BAAP,IAAO,qDAAP,IAAO,0BAC3D,GAAI,CAAC,CAAC,KAAK,YAAX,CAAyB,CACrB,MAAO,MAAK,YAAL,CAAkB,IAAlB,CAAuB,KAAvB,CAA8B,IAA9B,CAAP,CACH,CAED,KAAM,CAAA,SAAS,CAAG,KAAK,SAAL,CAAe,GAAf,CAAmB,KAAnB,CAAlB,CAEA,GAAI,SAAS,EAAI,SAAS,CAAC,MAA3B,CAAmC,CAC/B,SAAS,CAAC,OAAV,CAAkB,QAAQ,EAAG,CACzB,QAAQ,CAAC,GAAG,IAAJ,CAAR,CACH,CAFD,EAGA,MAAO,KAAP,CACH,CAED,MAAO,MAAP,CACH,CAEM,kBAAkB,CAAC,KAAD,CAAc,CACnC,GAAI,CAAC,CAAC,KAAK,YAAX,CAAyB,CACrB,KAAK,YAAL,CAAkB,kBAAlB,CAAqC,KAArC,EACH,CAFD,IAEO,CACH,KAAK,SAAL,CAAe,MAAf,CAAsB,KAAtB,EACH,CACJ,CAzCmB,CA4CxB,cAAe,IAAI,CAAA,kBAAJ,EAAf","sourcesContent":["/*!\n * Copyright (c) Microsoft Corporation.\n * All rights reserved. See LICENSE in the project root for license information.\n */\n\n// tslint:disable:no-any\nimport { EventEmitter } from 'events';\n\n/** EventEmitter is available in node, but not on the browser,\n * this class attempts to polyfill that so the action context can remain Isomorphic\n */\n/*@internal*/\n\n/**\n * Type for event emitter listener callback\n */\nexport type ListenerCallback<T extends unknown[] = unknown[]> = (...args0: T) => void;\n\n/**\n * Generic cast type\n */\nexport type GenericCallback = (...args: any) => void;\n\n/**\n * Custom isomorphic event emitter implementation\n *\n * @export\n * @class CustomEventEmitter\n */\nclass CustomEventEmitter {\n    private listeners: Map<string, ListenerCallback[]> = new Map<string, ListenerCallback[]>();\n    private eventEmitter: EventEmitter | null = typeof window !== undefined ? null : new EventEmitter();\n\n    public on<T extends unknown[] = unknown[]>(event: string, callback: ListenerCallback<T>): void {\n        if (!!this.eventEmitter) {\n            this.eventEmitter.on(event, <GenericCallback>callback);\n        } else {\n            let listeners = this.listeners.get(event);\n            if (!!!listeners) {\n                listeners = [];\n                this.listeners.set(event, listeners);\n            }\n\n            listeners.push(<ListenerCallback>callback);\n        }\n    }\n\n    public emit<T extends unknown[] = []>(event: string, ...args: T): boolean {\n        if (!!this.eventEmitter) {\n            return this.eventEmitter.emit(event, args);\n        }\n\n        const listeners = this.listeners.get(event);\n\n        if (listeners && listeners.length) {\n            listeners.forEach(listener => {\n                listener(...args);\n            });\n            return true;\n        }\n\n        return false;\n    }\n\n    public removeAllListeners(event: string): void {\n        if (!!this.eventEmitter) {\n            this.eventEmitter.removeAllListeners(event);\n        } else {\n            this.listeners.delete(event);\n        }\n    }\n}\n\nexport default new CustomEventEmitter();\n"],"sourceRoot":""},"metadata":{},"sourceType":"module"}