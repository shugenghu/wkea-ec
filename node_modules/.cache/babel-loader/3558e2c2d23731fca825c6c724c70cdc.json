{"ast":null,"code":"import\"core-js/modules/es.promise.js\";import{createObservableDataAction}from'@msdyn365-commerce/core';import{searchAsync}from'@msdyn365-commerce/retail-proxy/dist/DataActions/ProductListsDataActions.g';/**\r\n *  Input class for the GetOrderTemplates data action\r\n */export class GetOrderTemplatesInput{constructor(productListId,queryResultSettings){this.getCacheKey=()=>{var _this$queryResultSett,_this$queryResultSett2,_this$queryResultSett3,_this$queryResultSett4;return\"\".concat(this.productListId,\"|\").concat((_this$queryResultSett=this.queryResultSettings)===null||_this$queryResultSett===void 0?void 0:(_this$queryResultSett2=_this$queryResultSett.Paging)===null||_this$queryResultSett2===void 0?void 0:_this$queryResultSett2.Top,\"|\").concat((_this$queryResultSett3=this.queryResultSettings)===null||_this$queryResultSett3===void 0?void 0:(_this$queryResultSett4=_this$queryResultSett3.Paging)===null||_this$queryResultSett4===void 0?void 0:_this$queryResultSett4.Skip);};this.getCacheObjectType=()=>'ProductList';this.dataCacheType=()=>'instance';this.shouldCacheOutput=()=>false;this.productListId=productListId||'';this.queryResultSettings=queryResultSettings;}}/**\r\n * createInput method for the GetOrderTemplate method\r\n * @param inputData The input data passed to the createInput method.\r\n * @param productListId? The product list identifier.\r\n * @param queryResultSettings? The query result setting required for pagination/ordering.\r\n */export const createGetOrderTemplatesInput=(inputData,productListId,queryResultSettings)=>{const{requestContext}=inputData;if(!requestContext.user.isAuthenticated){throw new Error('Unable to create get order template. User is not authenticated.');}return new GetOrderTemplatesInput(productListId||'',queryResultSettings);};/**\r\n * The action method for the GetOrderTemplates data action\r\n * @param input The action input\r\n * @param ctx The action context\r\n */export async function getOrderTemplatesAction(input,ctx){try{const productListSearchCriteria={ProductListId:input.productListId,CustomerId:ctx.requestContext.user.customerAccountNumber};return searchAsync({callerContext:ctx,queryResultSettings:input.queryResultSettings},productListSearchCriteria);}catch(error){ctx.telemetry.error('Not able to get order template(s)',error);throw error;}}/**\r\n * The GetOrderTemplates Data Action\r\n * Returns order templates\r\n */export default createObservableDataAction({id:'@msdyn365-commerce-modules/retail-actions/order-templates/get-order-templates',action:getOrderTemplatesAction,input:createGetOrderTemplatesInput});","map":{"version":3,"sources":["../../../src/order-templates/get-order-templates.ts"],"names":[],"mappings":"sCAAA,OACI,0BADJ,KAKgC,yBALhC,CAOA,OAAS,WAAT,KAA4B,4EAA5B,CAGA;;AAEG,GACH,MAAM,MAAO,CAAA,sBAAsB,CAI/B,WAAA,CAAY,aAAZ,CAAoC,mBAApC,CAA6E,CAKtE,KAAA,WAAA,CAAc,oHAAiB,KAAK,aAAtB,oCAAuC,KAAK,mBAA5C,wEAAuC,sBAA0B,MAAjE,iDAAuC,uBAAkC,GAAzE,qCAAgF,KAAK,mBAArF,yEAAgF,uBAA0B,MAA1G,iDAAgF,uBAAkC,IAAlH,GAAd,CACA,KAAA,kBAAA,CAAqB,IAAM,aAA3B,CACA,KAAA,aAAA,CAAgB,IAAiB,UAAjC,CACA,KAAA,iBAAA,CAAoB,IAAM,KAA1B,CAPH,KAAK,aAAL,CAAqB,aAAa,EAAI,EAAtC,CACA,KAAK,mBAAL,CAA2B,mBAA3B,CACH,CAP8B,CAenC;;;;;AAKG,GACH,MAAO,MAAM,CAAA,4BAA4B,CAAG,CAAC,SAAD,CAAkC,aAAlC,CAA0D,mBAA1D,GAA+H,CACvK,KAAM,CAAE,cAAF,EAAqB,SAA3B,CACA,GAAI,CAAC,cAAc,CAAC,IAAf,CAAoB,eAAzB,CAA0C,CACtC,KAAM,IAAI,CAAA,KAAJ,CAAU,iEAAV,CAAN,CACH,CAED,MAAO,IAAI,CAAA,sBAAJ,CAA2B,aAAa,EAAI,EAA5C,CAAgD,mBAAhD,CAAP,CACH,CAPM,CASP;;;;AAIG,GACH,MAAO,eAAe,CAAA,uBAAf,CAAuC,KAAvC,CAAsE,GAAtE,CAAyF,CAC5F,GAAI,CAEA,KAAM,CAAA,yBAAyB,CAA8B,CACzD,aAAa,CAAE,KAAK,CAAC,aADoC,CAEzD,UAAU,CAAE,GAAG,CAAC,cAAJ,CAAmB,IAAnB,CAAwB,qBAFqB,CAA7D,CAIA,MAAO,CAAA,WAAW,CACd,CACI,aAAa,CAAE,GADnB,CAEI,mBAAmB,CAAE,KAAK,CAAC,mBAF/B,CADc,CAKd,yBALc,CAAlB,CAOH,CAAC,MAAO,KAAP,CAAc,CACZ,GAAG,CAAC,SAAJ,CAAc,KAAd,CAAoB,mCAApB,CAAyD,KAAzD,EACA,KAAM,CAAA,KAAN,CACH,CACJ,CAED;;;AAGG,GACH,cAAe,CAAA,0BAA0B,CAAgB,CACrD,EAAE,CAAE,+EADiD,CAErD,MAAM,CAA0B,uBAFqB,CAGrD,KAAK,CAAE,4BAH8C,CAAhB,CAAzC","sourcesContent":["import { CacheType,\n    createObservableDataAction,\n    IAction,\n    IActionContext,\n    IActionInput,\n    ICreateActionContext } from '@msdyn365-commerce/core';\nimport { QueryResultSettings } from '@msdyn365-commerce/retail-proxy';\nimport { searchAsync } from '@msdyn365-commerce/retail-proxy/dist/DataActions/ProductListsDataActions.g';\nimport { ProductList, ProductListSearchCriteria } from '@msdyn365-commerce/retail-proxy/dist/Entities/CommerceTypes.g';\n\n/**\n *  Input class for the GetOrderTemplates data action\n */\nexport class GetOrderTemplatesInput implements IActionInput {\n    public readonly productListId: string;\n    public readonly queryResultSettings?: QueryResultSettings;\n\n    constructor(productListId?: string, queryResultSettings?: QueryResultSettings) {\n        this.productListId = productListId || '';\n        this.queryResultSettings = queryResultSettings;\n    }\n\n    public getCacheKey = (): string => `${this.productListId}|${this.queryResultSettings?.Paging?.Top}|${this.queryResultSettings?.Paging?.Skip}`;\n    public getCacheObjectType = () => 'ProductList';\n    public dataCacheType = (): CacheType => 'instance';\n    public shouldCacheOutput = () => false;\n}\n\n/**\n * createInput method for the GetOrderTemplate method\n * @param inputData The input data passed to the createInput method.\n * @param productListId? The product list identifier.\n * @param queryResultSettings? The query result setting required for pagination/ordering.\n */\nexport const createGetOrderTemplatesInput = (inputData: ICreateActionContext, productListId?: string, queryResultSettings?: QueryResultSettings): GetOrderTemplatesInput => {\n    const { requestContext } = inputData;\n    if (!requestContext.user.isAuthenticated) {\n        throw new Error('Unable to create get order template. User is not authenticated.');\n    }\n\n    return new GetOrderTemplatesInput(productListId || '', queryResultSettings);\n};\n\n/**\n * The action method for the GetOrderTemplates data action\n * @param input The action input\n * @param ctx The action context\n */\nexport async function getOrderTemplatesAction(input: GetOrderTemplatesInput, ctx: IActionContext): Promise<ProductList[]> {\n    try {\n\n        const productListSearchCriteria: ProductListSearchCriteria = {\n            ProductListId: input.productListId,\n            CustomerId: ctx.requestContext.user.customerAccountNumber\n        };\n        return searchAsync(\n            {\n                callerContext: ctx,\n                queryResultSettings: input.queryResultSettings\n            },\n            productListSearchCriteria\n        );\n    } catch (error) {\n        ctx.telemetry.error('Not able to get order template(s)', error);\n        throw error;\n    }\n}\n\n/**\n * The GetOrderTemplates Data Action\n * Returns order templates\n */\nexport default createObservableDataAction<ProductList[]>({\n    id: '@msdyn365-commerce-modules/retail-actions/order-templates/get-order-templates',\n    action: <IAction<ProductList[]>>getOrderTemplatesAction,\n    input: createGetOrderTemplatesInput\n});"],"sourceRoot":""},"metadata":{},"sourceType":"module"}