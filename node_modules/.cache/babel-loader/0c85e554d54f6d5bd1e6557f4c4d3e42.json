{"ast":null,"code":"import _classCallCheck from\"@babel/runtime/helpers/esm/classCallCheck\";import _createClass from\"@babel/runtime/helpers/esm/createClass\";function _createForOfIteratorHelper(o,allowArrayLike){var it;if(typeof Symbol===\"undefined\"||o[Symbol.iterator]==null){if(Array.isArray(o)||(it=_unsupportedIterableToArray(o))||allowArrayLike&&o&&typeof o.length===\"number\"){if(it)o=it;var i=0;var F=function F(){};return{s:F,n:function n(){if(i>=o.length)return{done:true};return{done:false,value:o[i++]};},e:function e(_e){throw _e;},f:F};}throw new TypeError(\"Invalid attempt to iterate non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");}var normalCompletion=true,didErr=false,err;return{s:function s(){it=o[Symbol.iterator]();},n:function n(){var step=it.next();normalCompletion=step.done;return step;},e:function e(_e2){didErr=true;err=_e2;},f:function f(){try{if(!normalCompletion&&it[\"return\"]!=null)it[\"return\"]();}finally{if(didErr)throw err;}}};}function _unsupportedIterableToArray(o,minLen){if(!o)return;if(typeof o===\"string\")return _arrayLikeToArray(o,minLen);var n=Object.prototype.toString.call(o).slice(8,-1);if(n===\"Object\"&&o.constructor)n=o.constructor.name;if(n===\"Map\"||n===\"Set\")return Array.from(o);if(n===\"Arguments\"||/^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n))return _arrayLikeToArray(o,minLen);}function _arrayLikeToArray(arr,len){if(len==null||len>arr.length)len=arr.length;for(var i=0,arr2=new Array(len);i<len;i++){arr2[i]=arr[i];}return arr2;}import{closedCaptionsPresetMap,closedCaptionsSettingsMap,closedCaptionsSettingsOptions,videoClosedCaptionsConstant}from'../closed-captions/video-closed-captions-settings';import{MenuCategories}from'../data/player-constants';import{ClosedCaptionTypes}from'../data/player-metadata';import{format}from'../utilities/stringExtensions';import{ccCultureLocStrings,PlayerLocKeys}from'./localization-helper';var ClosedCaptionHelper=/*#__PURE__*/function(){function ClosedCaptionHelper(props,playerHelper,localizationHelper){_classCallCheck(this,ClosedCaptionHelper);this.playerMetaData=props;this.playerHelper=playerHelper;this.localizationHelper=localizationHelper;}_createClass(ClosedCaptionHelper,[{key:\"checkClosedCaptionsFiles\",value:function checkClosedCaptionsFiles(){if(this.playerMetaData.ccFiles&&this.playerMetaData.ccFiles.length>0){return true;}return false;}},{key:\"getClosedCaptionMenu\",value:function getClosedCaptionMenu(){if(this.playerMetaData.ccFiles&&this.playerMetaData.ccFiles.length>0){var ccFiles=this.playerMetaData.ccFiles;var ccMenuItems=[];var _iterator=_createForOfIteratorHelper(ccFiles),_step;try{for(_iterator.s();!(_step=_iterator.n()).done;){var ccFile=_step.value;if(!ccFile.ccType||ccFile.ccType===ClosedCaptionTypes.TTML){var lang=this.localizationHelper.getLanguageCodeFromLocale(ccFile.locale.toLowerCase());var ccMenuItem={id:this.playerHelper.addIdPrefix(ccFile.locale),label:ccCultureLocStrings[ccFile.locale],language:lang,data:ccFile.locale,selected:false,selectable:true,persistOnClick:true,ariaLabel:\"\".concat(ccCultureLocStrings[ccFile.locale],\" \").concat(this.localizationHelper.getLocalizedValue(PlayerLocKeys.closecaption))};ccMenuItems.push(ccMenuItem);}}}catch(err){_iterator.e(err);}finally{_iterator.f();}ccMenuItems.push({id:this.playerHelper.addIdPrefix('appearance'),label:this.localizationHelper.getLocalizedValue(PlayerLocKeys.cc_appearance),selected:false,selectable:false,subMenu:this._getClosedCaptionsSettingsMenu()});ccMenuItems.unshift({id:this.playerHelper.addIdPrefix('off'),label:this.localizationHelper.getLocalizedValue(PlayerLocKeys.closecaption_off),selected:false,data:'off',selectable:true,persistOnClick:true,ariaLabel:\"\".concat(this.localizationHelper.getLocalizedValue(PlayerLocKeys.closecaption_off),\" \").concat(this.localizationHelper.getLocalizedValue(PlayerLocKeys.closecaption))});return{category:MenuCategories.ClosedCaption,id:this.playerHelper.addIdPrefix(MenuCategories.ClosedCaption),label:this.localizationHelper.getLocalizedValue(PlayerLocKeys.closecaption),items:ccMenuItems};}else{return null;}}},{key:\"getUpdatedClosedCaptionSetting\",value:function getUpdatedClosedCaptionSetting(currentClosedCaptionsSetting,settingKey,optionKey){if(settingKey===videoClosedCaptionsConstant.presetKey){var presetValue=closedCaptionsPresetMap[optionKey];return{window_color:currentClosedCaptionsSetting.window_color,window_opacity:currentClosedCaptionsSetting.window_opacity,text_background_color:presetValue.text_background_color,text_background_opacity:presetValue.text_background_opacity,text_color:presetValue.text_color,text_edge_style:presetValue.text_edge_style,text_font:presetValue.text_font,text_opacity:presetValue.text_opacity,text_size:presetValue.text_size,preset:optionKey};}else{if(this._getOptionValue(settingKey,optionKey)){currentClosedCaptionsSetting[videoClosedCaptionsConstant.presetKey]='none';currentClosedCaptionsSetting[settingKey]=optionKey;return currentClosedCaptionsSetting;}else{return currentClosedCaptionsSetting;}}}},{key:\"getClosedCaptionURLFromLocale\",value:function getClosedCaptionURLFromLocale(locale){var url='';var ccFiles=this.playerMetaData.ccFiles;var _iterator2=_createForOfIteratorHelper(ccFiles),_step2;try{for(_iterator2.s();!(_step2=_iterator2.n()).done;){var ccFile=_step2.value;if(ccFile.locale===locale){url=ccFile.url;}}}catch(err){_iterator2.e(err);}finally{_iterator2.f();}return url;}},{key:\"_getOptionValue\",value:function _getOptionValue(settingKey,optionKey){var setting=closedCaptionsSettingsMap[settingKey];if(setting){var option=closedCaptionsSettingsOptions[setting.option];return option&&option.map[optionKey];}return'';}},{key:\"_getClosedCaptionsSettingsMenu\",value:function _getClosedCaptionsSettingsMenu(){var settingsMenuItems=[];for(var _i=0,_Object$keys=Object.keys(closedCaptionsSettingsMap);_i<_Object$keys.length;_i++){var settingKey=_Object$keys[_i];var setting=closedCaptionsSettingsMap[settingKey];var option=closedCaptionsSettingsOptions[setting.option];var optionMenuItem=[];for(var optionKey in option.map){optionMenuItem.push({id:this._getCCMenuItemId(settingKey,optionKey),label:this.localizationHelper.getLocalizedValue(\"\".concat(option.pre).concat(optionKey)),selectable:true,selected:false,persistOnClick:true,data:\"\".concat(settingKey,\":\").concat(optionKey)});}optionMenuItem.unshift({id:'',label:this.localizationHelper.getLocalizedValue(\"cc_\".concat(settingKey)),ariaLabel:\"\".concat(settingKey,\" - go back to previous menu\"),selectable:false,selected:false,persistOnClick:false,isBackButton:true});settingsMenuItems.push({id:this.playerHelper.addIdPrefix(\"\".concat(settingKey,\"_item\")),label:this.localizationHelper.getLocalizedValue(\"cc_\".concat(settingKey)),selectable:false,subMenu:{id:this._getCCSettingsMenuId(settingKey),category:MenuCategories.ClosedCaptionSettings,items:optionMenuItem,label:this.localizationHelper.getLocalizedValue(\"cc_\".concat(settingKey))}});}settingsMenuItems.unshift({id:'',label:this.localizationHelper.getLocalizedValue(PlayerLocKeys.cc_customize),ariaLabel:'Customize - go back to previous menu',selectable:false,selected:false,persistOnClick:false,isBackButton:true});var settingsMenu={id:this.playerHelper.addIdPrefix(MenuCategories.ClosedCaptionSettings),label:this.localizationHelper.getLocalizedValue(PlayerLocKeys.cc_customize),category:MenuCategories.ClosedCaptionSettings,items:settingsMenuItems};var presetItems=[];for(var _i2=0,_Object$keys2=Object.keys(closedCaptionsPresetMap);_i2<_Object$keys2.length;_i2++){var preset=_Object$keys2[_i2];var presetSetting=closedCaptionsPresetMap[preset];var font=presetSetting.text_font;var color=presetSetting.text_color;var ariaLabelValue=format(this.localizationHelper.getLocalizedValue(PlayerLocKeys.cc_presettings),'',this.localizationHelper.getLocalizedValue(PlayerLocKeys.cc_text_font),this.localizationHelper.getLocalizedValue(\"cc_font_name_\".concat(font)),this.localizationHelper.getLocalizedValue(PlayerLocKeys.cc_text_color),this.localizationHelper.getLocalizedValue(\"cc_color_\".concat(color)));presetItems.push({id:this._getCCMenuItemId(videoClosedCaptionsConstant.presetKey,preset),label:this.localizationHelper.getLocalizedValue(\"cc_\".concat(preset)),data:\"preset:\".concat(preset),selectable:true,selected:false,persistOnClick:true,ariaLabel:ariaLabelValue,hasMouseHoverEvents:true});}presetItems.push({id:this.playerHelper.addIdPrefix('cc-customize'),label:this.localizationHelper.getLocalizedValue(PlayerLocKeys.cc_customize),subMenu:settingsMenu,hasMouseHoverEvents:true});presetItems.push({id:'reset',label:this.localizationHelper.getLocalizedValue(PlayerLocKeys.cc_reset),data:'reset',persistOnClick:true,hasMouseHoverEvents:true});presetItems.unshift({id:'',label:this.localizationHelper.getLocalizedValue(PlayerLocKeys.cc_appearance),ariaLabel:'Appreance - go back to previous menu',selectable:false,selected:false,persistOnClick:false,isBackButton:true,hasMouseHoverEvents:true});return{id:this._getCCSettingsMenuId(videoClosedCaptionsConstant.presetKey),label:this.localizationHelper.getLocalizedValue(PlayerLocKeys.cc_appearance),category:MenuCategories.ClosedCaptionSettings,items:presetItems};}},{key:\"_getCCMenuItemId\",value:function _getCCMenuItemId(settingId,optionId){return this.playerHelper.addIdPrefix(\"cc-\".concat(settingId,\"-\").concat(optionId));}},{key:\"_getCCSettingsMenuId\",value:function _getCCSettingsMenuId(settingId){return this.playerHelper.addIdPrefix(\"cc-\".concat(settingId));}}]);return ClosedCaptionHelper;}();export{ClosedCaptionHelper as default};","map":{"version":3,"sources":["videoplayer/components/helper/closedCaptionHelper.ts"],"names":[],"mappings":"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","sourcesContent":["import { IVideoMetadata } from '../../components/data/player-metadata';\nimport { closedCaptionsPresetMap, closedCaptionsSettingsMap, closedCaptionsSettingsOptions, videoClosedCaptionsConstant } from '../closed-captions/video-closed-captions-settings';\nimport { ICurrentClosedCaptionsSettings, IPlayerMenu, IPlayerMenuItem, MenuCategories } from '../data/player-constants';\nimport { ClosedCaptionTypes } from '../data/player-metadata';\nimport { format } from '../utilities/stringExtensions';\nimport LocalizationHelper, { ccCultureLocStrings, PlayerLocKeys } from './localization-helper';\nimport PlayerHelper from './playerHelper';\n\n/**\n *\n * Closed Caption helper class\n *\n */\nexport default class ClosedCaptionHelper {\n\n    private playerMetaData: IVideoMetadata;\n    private playerHelper: PlayerHelper;\n    private localizationHelper: LocalizationHelper;\n\n    constructor(props: IVideoMetadata, playerHelper: PlayerHelper, localizationHelper: LocalizationHelper) {\n        this.playerMetaData = props;\n        this.playerHelper = playerHelper;\n        this.localizationHelper = localizationHelper;\n    }\n\n    public checkClosedCaptionsFiles(): boolean {\n        if(this.playerMetaData.ccFiles && this.playerMetaData.ccFiles.length > 0) {\n            return true;\n        }\n        return false;\n    }\n\n    public getClosedCaptionMenu(): IPlayerMenu | null {\n        if(this.playerMetaData.ccFiles && this.playerMetaData.ccFiles.length > 0) {\n            const ccFiles = this.playerMetaData.ccFiles;\n\n            const ccMenuItems: IPlayerMenuItem[] = [];\n\n            for (const ccFile of ccFiles) {\n                // if ccType is not provided we default to TTML\n                if (!ccFile.ccType || ccFile.ccType === ClosedCaptionTypes.TTML) {\n\n                    const lang = this.localizationHelper.getLanguageCodeFromLocale(ccFile.locale.toLowerCase());\n\n                    const ccMenuItem: IPlayerMenuItem = {\n                        id: this.playerHelper.addIdPrefix(ccFile.locale),\n                        label: ccCultureLocStrings[ccFile.locale],\n                        language: lang,\n                        data: ccFile.locale,\n                        selected: false,\n                        selectable: true,\n                        persistOnClick: true,\n                        ariaLabel: `${ccCultureLocStrings[ccFile.locale]} ${this.localizationHelper.getLocalizedValue(PlayerLocKeys.closecaption)}`\n                    };\n                    ccMenuItems.push(ccMenuItem);\n                }\n            }\n\n            ccMenuItems.push({\n                id: this.playerHelper.addIdPrefix('appearance'),\n                label: this.localizationHelper.getLocalizedValue(PlayerLocKeys.cc_appearance),\n                selected: false,\n                selectable: false,\n                subMenu: this._getClosedCaptionsSettingsMenu()\n            });\n\n            // add 'off' option to the top of the list\n            ccMenuItems.unshift({\n                id: this.playerHelper.addIdPrefix('off'),\n                label: this.localizationHelper.getLocalizedValue(PlayerLocKeys.closecaption_off),\n                selected: false,\n                data: 'off',\n                selectable: true,\n                persistOnClick: true,\n                ariaLabel: `${this.localizationHelper.getLocalizedValue(PlayerLocKeys.closecaption_off)} ${this.localizationHelper.getLocalizedValue(PlayerLocKeys.closecaption)}`\n            });\n\n            return {\n                category: MenuCategories.ClosedCaption,\n                id: this.playerHelper.addIdPrefix(MenuCategories.ClosedCaption),\n                label: this.localizationHelper.getLocalizedValue(PlayerLocKeys.closecaption),\n                items: ccMenuItems,\n            };\n\n        } else {\n            return null;\n        }\n    }\n\n    public getUpdatedClosedCaptionSetting(currentClosedCaptionsSetting: ICurrentClosedCaptionsSettings, settingKey:string, optionKey:string): ICurrentClosedCaptionsSettings {\n        if (settingKey === videoClosedCaptionsConstant.presetKey) {\n            const presetValue = closedCaptionsPresetMap[optionKey];\n\n            return {\n                window_color: currentClosedCaptionsSetting.window_color,\n                window_opacity: currentClosedCaptionsSetting.window_opacity,\n                text_background_color:  presetValue.text_background_color,\n                text_background_opacity: presetValue.text_background_opacity,\n                text_color: presetValue.text_color,\n                text_edge_style: presetValue.text_edge_style,\n                text_font: presetValue.text_font,\n                text_opacity: presetValue.text_opacity,\n                text_size: presetValue.text_size,\n                preset: optionKey\n            };\n        } else {\n            if (this._getOptionValue(settingKey, optionKey)) {\n                currentClosedCaptionsSetting[videoClosedCaptionsConstant.presetKey] = 'none';\n                currentClosedCaptionsSetting[settingKey] = optionKey;\n                return currentClosedCaptionsSetting;\n            } else {\n                return currentClosedCaptionsSetting;\n            }\n        }\n    }\n\n    /**\n     * @name - getClosedCaptionURLFromLocale\n     * @description - Gets the value of closed captions URL from the locale.\n     * @private\n     * @param {string} locale - locale.\n     * @returns {string} - Returns the closed caption URL\n     */\n    public getClosedCaptionURLFromLocale(locale: string): string {\n        let url: string = '';\n        const ccFiles = this.playerMetaData.ccFiles!;\n        for (const ccFile of ccFiles) {\n            if(ccFile.locale === locale) {\n                url = ccFile.url;\n            }\n        }\n        return url;\n    }\n\n    /**\n     * @name - getOptionValue\n     * @description - Gets the value of closed captions settings option.\n     * @private\n     * @param {string} settingKey - The closed ceptions settings key.\n     * @param {string} optionKey - The closed captions option key.\n     * @returns {void}\n     */\n    private _getOptionValue(settingKey: string, optionKey: string): string {\n        const setting = closedCaptionsSettingsMap[settingKey];\n        if (setting) {\n            const option = closedCaptionsSettingsOptions[setting.option];\n            return option && option.map[optionKey];\n        }\n        return '';\n    }\n    /**\n     * @name - getClosedCaptionsSettingsMenu\n     * @description - Gets the closed captions settings menu to be added to options menu.\n     * @private\n     * @returns {IPlayerMenu}\n     */\n    // tslint:disable-next-line: max-func-body-length\n    private _getClosedCaptionsSettingsMenu(): IPlayerMenu {\n\n        // const currentSettings = currentClosedCaptionsSetting;\n\n        // create customize settings menu\n        const settingsMenuItems: IPlayerMenuItem[] = [];\n\n        for (const settingKey of Object.keys(closedCaptionsSettingsMap)) {\n            const setting = closedCaptionsSettingsMap[settingKey];\n\n            const option = closedCaptionsSettingsOptions[setting.option];\n            const optionMenuItem: IPlayerMenuItem[] = [];\n\n            // tslint:disable-next-line: forin no-for-in\n            for (const optionKey in option.map) {\n                optionMenuItem.push({\n                    id: this._getCCMenuItemId(settingKey, optionKey),\n                    label: this.localizationHelper.getLocalizedValue(`${option.pre}${optionKey}`),\n                    selectable: true,\n                    selected: false,\n                    persistOnClick: true,\n                    data: `${settingKey}:${optionKey}`\n                });\n            }\n\n            // Add back button\n            optionMenuItem.unshift({\n                id: '',\n                label: this.localizationHelper.getLocalizedValue(`cc_${settingKey}`),\n                ariaLabel: `${settingKey} - go back to previous menu`,\n                selectable: false,\n                selected: false,\n                persistOnClick: false,\n                isBackButton: true\n            });\n\n            settingsMenuItems.push({\n                id: this.playerHelper.addIdPrefix(`${settingKey}_item`),\n                label: this.localizationHelper.getLocalizedValue(`cc_${settingKey}`),\n                selectable: false,\n                subMenu: {\n                    id: this._getCCSettingsMenuId(settingKey),\n                    category: MenuCategories.ClosedCaptionSettings,\n                    items: optionMenuItem,\n                    label: this.localizationHelper.getLocalizedValue(`cc_${settingKey}`)\n                }\n            });\n\n        }\n\n        settingsMenuItems.unshift({\n            id: '',\n            label: this.localizationHelper.getLocalizedValue(PlayerLocKeys.cc_customize),\n            ariaLabel: 'Customize - go back to previous menu',\n            selectable: false,\n            selected: false,\n            persistOnClick: false,\n            isBackButton: true\n        });\n\n        const settingsMenu: IPlayerMenu = {\n            id: this.playerHelper.addIdPrefix(MenuCategories.ClosedCaptionSettings),\n            label: this.localizationHelper.getLocalizedValue(PlayerLocKeys.cc_customize),\n            category: MenuCategories.ClosedCaptionSettings,\n            items: settingsMenuItems\n        };\n\n        // create preset items menu\n        const presetItems: IPlayerMenuItem[] = [];\n\n        for (const preset of Object.keys(closedCaptionsPresetMap)) {\n            // tslint:disable-next-line: no-any\n            const presetSetting: any = closedCaptionsPresetMap[preset];\n            const font: string = presetSetting.text_font;\n            const color: string = presetSetting.text_color;\n\n            const ariaLabelValue = format(this.localizationHelper.getLocalizedValue(PlayerLocKeys.cc_presettings), '',\n                                          this.localizationHelper.getLocalizedValue(PlayerLocKeys.cc_text_font),\n                                          this.localizationHelper.getLocalizedValue(`cc_font_name_${font}`),\n                                          this.localizationHelper.getLocalizedValue(PlayerLocKeys.cc_text_color),\n                                          this.localizationHelper.getLocalizedValue(`cc_color_${color}`));\n\n            presetItems.push({\n                id: this._getCCMenuItemId(videoClosedCaptionsConstant.presetKey, preset),\n                label: this.localizationHelper.getLocalizedValue(`cc_${preset}`),\n                data: `preset:${preset}`,\n                selectable: true,\n                selected: false,\n                persistOnClick: true,\n                ariaLabel: ariaLabelValue,\n                hasMouseHoverEvents: true\n            });\n        }\n\n        presetItems.push({\n            id: this.playerHelper.addIdPrefix('cc-customize'),\n            label: this.localizationHelper.getLocalizedValue(PlayerLocKeys.cc_customize),\n            subMenu: settingsMenu,\n            hasMouseHoverEvents: true\n        });\n\n        presetItems.push({\n            id: 'reset',\n            label:this.localizationHelper.getLocalizedValue(PlayerLocKeys.cc_reset),\n            data: 'reset',\n            persistOnClick: true,\n            hasMouseHoverEvents: true\n        });\n\n        presetItems.unshift({\n            id: '',\n            label: this.localizationHelper.getLocalizedValue(PlayerLocKeys.cc_appearance),\n            ariaLabel: 'Appreance - go back to previous menu',\n            selectable: false,\n            selected: false,\n            persistOnClick: false,\n            isBackButton: true,\n            hasMouseHoverEvents: true\n        });\n\n        return {\n            id: this._getCCSettingsMenuId(videoClosedCaptionsConstant.presetKey),\n            label: this.localizationHelper.getLocalizedValue(PlayerLocKeys.cc_appearance),\n            category: MenuCategories.ClosedCaptionSettings,\n            items: presetItems\n        };\n    }\n\n    /**\n     * @name - getCCMenuItemId\n     * @description - Gets the close captions setting menu item id.\n     * @private\n     * @param {string} settingKey - The setting key.\n     * @param {string} optionsKey - The option key.\n     * @returns {string}\n     */\n    private _getCCMenuItemId(settingId: string, optionId: string): string {\n        return this.playerHelper.addIdPrefix(`cc-${settingId}-${optionId}`);\n    }\n\n    /**\n     * @name - getCCSettingsMenuId\n     * @description - Gets the close captions setting menu id.\n     * @private\n     * @param {string} settingKey - The setting key.\n     * @returns {string}\n     */\n    private _getCCSettingsMenuId(settingId: string): string {\n    return this.playerHelper.addIdPrefix(`cc-${settingId}`);\n}\n\n}"],"sourceRoot":"./src/"},"metadata":{},"sourceType":"module"}