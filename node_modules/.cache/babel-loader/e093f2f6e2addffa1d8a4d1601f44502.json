{"ast":null,"code":"import _defineProperty from\"@babel/runtime/helpers/esm/defineProperty\";import _classCallCheck from\"@babel/runtime/helpers/esm/classCallCheck\";import _createClass from\"@babel/runtime/helpers/esm/createClass\";import _inherits from\"@babel/runtime/helpers/esm/inherits\";import _possibleConstructorReturn from\"@babel/runtime/helpers/esm/possibleConstructorReturn\";import _getPrototypeOf from\"@babel/runtime/helpers/esm/getPrototypeOf\";function ownKeys(object,enumerableOnly){var keys=Object.keys(object);if(Object.getOwnPropertySymbols){var symbols=Object.getOwnPropertySymbols(object);if(enumerableOnly)symbols=symbols.filter(function(sym){return Object.getOwnPropertyDescriptor(object,sym).enumerable;});keys.push.apply(keys,symbols);}return keys;}function _objectSpread(target){for(var i=1;i<arguments.length;i++){var source=arguments[i]!=null?arguments[i]:{};if(i%2){ownKeys(Object(source),true).forEach(function(key){_defineProperty(target,key,source[key]);});}else if(Object.getOwnPropertyDescriptors){Object.defineProperties(target,Object.getOwnPropertyDescriptors(source));}else{ownKeys(Object(source)).forEach(function(key){Object.defineProperty(target,key,Object.getOwnPropertyDescriptor(source,key));});}}return target;}function _createSuper(Derived){var hasNativeReflectConstruct=_isNativeReflectConstruct();return function _createSuperInternal(){var Super=_getPrototypeOf(Derived),result;if(hasNativeReflectConstruct){var NewTarget=_getPrototypeOf(this).constructor;result=Reflect.construct(Super,arguments,NewTarget);}else{result=Super.apply(this,arguments);}return _possibleConstructorReturn(this,result);};}function _isNativeReflectConstruct(){if(typeof Reflect===\"undefined\"||!Reflect.construct)return false;if(Reflect.construct.sham)return false;if(typeof Proxy===\"function\")return true;try{Date.prototype.toString.call(Reflect.construct(Date,[],function(){}));return true;}catch(e){return false;}}import{__decorate}from\"tslib\";import{getTelemetryObject,Heading}from'@msdyn365-commerce-modules/utilities';import classnames from'classnames';import _get from'lodash/get';import{computed,reaction}from'mobx';import*as React from'react';import{CreditComponent,ErrorComponent}from'./components/account-customer-balance-tile-info';import LinksComponent from'./components/account-customer-balance-tile-links';var AccountCustomerBalanceTile=/*#__PURE__*/function(_React$Component){_inherits(AccountCustomerBalanceTile,_React$Component);var _super=_createSuper(AccountCustomerBalanceTile);function AccountCustomerBalanceTile(props){var _this;_classCallCheck(this,AccountCustomerBalanceTile);_this=_super.call(this,props);_this.telemetryContent=getTelemetryObject(_this.props.context.request.telemetryPageName,_this.props.friendlyName,_this.props.telemetry);_this.state=_objectSpread({},_this._initState());reaction(function(){return _this.hasError;},function(){_this.props.context.telemetry.error('Error retrieving customer account balance');_this.setState({content:/*#__PURE__*/React.createElement(ErrorComponent,{value:_this.props.resources.apiGenericErrorMessage})});});return _this;}_createClass(AccountCustomerBalanceTile,[{key:\"render\",value:function render(){if(!this.isCustomerAccountPaymentEnabled){return/*#__PURE__*/React.createElement(React.Fragment,null);}var _this$props$config=this.props.config,className=_this$props$config.className,heading=_this$props$config.heading,links=_this$props$config.links;var viewProps=_objectSpread(_objectSpread({},this.props),{},{AccountCustomerBalanceTile:{moduleProps:this.props,className:classnames('ms-account-customer-balance-tile',className)},heading:heading&&/*#__PURE__*/React.createElement(Heading,{className:'ms-account-customer-balance-tile__heading',headingTag:heading.tag,text:heading.text}),content:this.state.content,links:this.state.isDetailsLinkDisplayed&&/*#__PURE__*/React.createElement(LinksComponent,Object.assign({},{links:links,onTextChange:function onTextChange(index){return function(event){return void 0;};},requestContext:this.props.context.request,telemetryContent:this.telemetryContent}))});return this.props.renderView(viewProps);}},{key:\"_initState\",value:function _initState(){var account=_get(this.props,'data.balance.result');var content;var isDetailsLinkDisplayed=false;if(this.hasError){this.props.telemetry.error('Error retrieving customer account balance');content=/*#__PURE__*/React.createElement(ErrorComponent,{error:this.props.resources.apiGenericErrorMessage});}else if(account.Balance===0&&account.CreditLimit===0){content=/*#__PURE__*/React.createElement(ErrorComponent,{error:this.props.resources.noCreditErrorMessage});}else{var _this$props$resources=this.props.resources,accountCreditVerbagePrefix=_this$props$resources.accountCreditVerbagePrefix,accountCreditVerbagePostfix=_this$props$resources.accountCreditVerbagePostfix;var currencyCode=_get(this.props,'context.request.channel.Currency');var formatCurrency=_get(this.props,'context.cultureFormatter.formatCurrency');var customerBalanceFormatted=\"\".concat(formatCurrency(account.Balance.toFixed(2),currencyCode));isDetailsLinkDisplayed=true;content=/*#__PURE__*/React.createElement(CreditComponent,{verbagePrefix:accountCreditVerbagePrefix,value:customerBalanceFormatted,verbagePostfix:accountCreditVerbagePostfix,className:'ms-account-customer-balance-tile__balance'});}return{content:content,isDetailsLinkDisplayed:isDetailsLinkDisplayed};}},{key:\"hasError\",get:function get(){return _get(this.props,'data.balance.status')!=='SUCCESS';}},{key:\"isCustomerAccountPaymentEnabled\",get:function get(){var customerResult=_get(this.props,'data.customerInformation.result');var allowOnAccountPayment=customerResult?customerResult.AllowOnAccountPayment:false;var isB2BCustomer=customerResult?customerResult.IsB2B:false;var enableCustomerAccountPayment=_get(this.props,'context.request.app.platform.enableCustomerAccountPayment');return allowOnAccountPayment&&(enableCustomerAccountPayment==='all'||enableCustomerAccountPayment==='b2b'&&isB2BCustomer||enableCustomerAccountPayment==='b2c'&&!isB2BCustomer);}}]);return AccountCustomerBalanceTile;}(React.Component);__decorate([computed],AccountCustomerBalanceTile.prototype,\"hasError\",null);__decorate([computed],AccountCustomerBalanceTile.prototype,\"isCustomerAccountPaymentEnabled\",null);export default AccountCustomerBalanceTile;","map":{"version":3,"sources":["modules/account-customer-balance-tile/account-customer-balance-tile.tsx"],"names":[],"mappings":"q5DAIA,OAAS,kBAAT,CAA6B,OAA7B,KAA6E,sCAA7E,CAEA,MAAO,CAAA,UAAP,KAAuB,YAAvB,CACA,MAAO,CAAA,IAAP,KAAgB,YAAhB,CACA,OAAS,QAAT,CAAmB,QAAnB,KAAmC,MAAnC,CACA,MAAO,GAAK,CAAA,KAAZ,KAAuB,OAAvB,CAGA,OAAS,eAAT,CAA0B,cAA1B,KAAgD,iDAAhD,CACA,MAAO,CAAA,cAAP,KAA2B,kDAA3B,C,GAoBM,CAAA,0B,oJAUF,oCAAY,KAAZ,CAAoF,4DAChF,uBAAM,KAAN,EAEA,MAAK,gBAAL,CAAwB,kBAAkB,CAAC,MAAK,KAAL,CAAW,OAAX,CAAmB,OAAnB,CAA2B,iBAA5B,CAAgD,MAAK,KAAL,CAAW,YAA3D,CAAyE,MAAK,KAAL,CAAW,SAApF,CAA1C,CAGA,MAAK,KAAL,kBAAkB,MAAK,UAAL,EAAlB,EAEA,QAAQ,CACJ,iBAAM,OAAK,QAAX,EADI,CAEJ,UAAK,CACD,MAAK,KAAL,CAAW,OAAX,CAAmB,SAAnB,CAA6B,KAA7B,CAAmC,2CAAnC,EACA,MAAK,QAAL,CAAc,CACV,OAAO,cAAE,KAAA,CAAA,aAAA,CAAC,cAAD,CAAe,CAAC,KAAK,CAAE,MAAK,KAAL,CAAW,SAAX,CAAqB,sBAA7B,CAAf,CADC,CAAd,EAGH,CAPG,CAAR,CARgF,aAiBnF,C,8EAiBY,CACT,GAAI,CAAC,KAAK,+BAAV,CAA2C,CACvC,mBAAO,KAAA,CAAA,aAAA,CAAC,KAAK,CAAC,QAAP,CAAe,IAAf,CAAP,CACH,CAHQ,uBAK6B,KAAK,KAAL,CAAW,MALxC,CAKD,SALC,oBAKD,SALC,CAKU,OALV,oBAKU,OALV,CAKmB,KALnB,oBAKmB,KALnB,CAMT,GAAM,CAAA,SAAS,gCACR,KAAK,KADG,MAEX,0BAA0B,CAAE,CACxB,WAAW,CAAE,KAAK,KADM,CAExB,SAAS,CAAE,UAAU,CAAC,kCAAD,CAAqC,SAArC,CAFG,CAFjB,CAMX,OAAO,CAAE,OAAO,eACZ,KAAA,CAAA,aAAA,CAAC,OAAD,CAAQ,CAAC,SAAS,CAAC,2CAAX,CAAuD,UAAU,CAAE,OAAO,CAAC,GAA3E,CAAgF,IAAI,CAAE,OAAO,CAAC,IAA9F,CAAR,CAPO,CASX,OAAO,CAAE,KAAK,KAAL,CAAW,OATT,CAUX,KAAK,CAAE,KAAK,KAAL,CAAW,sBAAX,eACH,KAAA,CAAA,aAAA,CAAC,cAAD,CAAe,MAAA,CAAA,MAAA,CAAA,EAAA,CACP,CACA,KAAK,CAAE,KADP,CAEA,YAAY,CAAE,sBAAC,KAAD,QAAmB,UAAC,KAAD,QAA0C,KAAK,EAA/C,EAAnB,EAFd,CAGA,cAAc,CAAE,KAAK,KAAL,CAAW,OAAX,CAAmB,OAHnC,CAIA,gBAAgB,CAAE,KAAK,gBAJvB,CADO,CAAf,CAXO,EAAf,CAsBA,MAAO,MAAK,KAAL,CAAW,UAAX,CAAsB,SAAtB,CAAP,CACH,C,+CAEiB,CACd,GAAM,CAAA,OAAO,CAAG,IAAG,CAAC,KAAK,KAAN,CAAa,qBAAb,CAAnB,CAEA,GAAI,CAAA,OAAJ,CACA,GAAI,CAAA,sBAAsB,CAAG,KAA7B,CAEA,GAAI,KAAK,QAAT,CAAmB,CACf,KAAK,KAAL,CAAW,SAAX,CAAqB,KAArB,CAA2B,2CAA3B,EACA,OAAO,cAAG,KAAA,CAAA,aAAA,CAAC,cAAD,CAAe,CAAC,KAAK,CAAE,KAAK,KAAL,CAAW,SAAX,CAAqB,sBAA7B,CAAf,CAAV,CACH,CAHD,IAGO,IAAI,OAAO,CAAC,OAAR,GAAoB,CAApB,EAAyB,OAAO,CAAC,WAAR,GAAwB,CAArD,CAAwD,CAE3D,OAAO,cAAG,KAAA,CAAA,aAAA,CAAC,cAAD,CAAe,CAAC,KAAK,CAAE,KAAK,KAAL,CAAW,SAAX,CAAqB,oBAA7B,CAAf,CAAV,CACH,CAHM,IAGA,2BAEiE,KAAK,KAAL,CAAW,SAF5E,CAEK,0BAFL,uBAEK,0BAFL,CAEiC,2BAFjC,uBAEiC,2BAFjC,CAGH,GAAM,CAAA,YAAY,CAAG,IAAG,CAAC,KAAK,KAAN,CAAa,kCAAb,CAAxB,CACA,GAAM,CAAA,cAAc,CAAG,IAAG,CAAC,KAAK,KAAN,CAAa,yCAAb,CAA1B,CACA,GAAM,CAAA,wBAAwB,WAAM,cAAc,CAAC,OAAO,CAAC,OAAR,CAAgB,OAAhB,CAAwB,CAAxB,CAAD,CAA6B,YAA7B,CAApB,CAA9B,CAEA,sBAAsB,CAAG,IAAzB,CACA,OAAO,cACH,KAAA,CAAA,aAAA,CAAC,eAAD,CAAgB,CACZ,aAAa,CAAE,0BADH,CAEZ,KAAK,CAAE,wBAFK,CAGZ,cAAc,CAAE,2BAHJ,CAIZ,SAAS,CAAE,2CAJC,CAAhB,CADJ,CAQH,CAED,MAAO,CAAE,OAAO,CAAP,OAAF,CAAW,sBAAsB,CAAtB,sBAAX,CAAP,CACH,C,oCAtGqB,CAClB,MAAO,CAAA,IAAG,CAAC,KAAK,KAAN,CAAa,qBAAb,CAAH,GAA2C,SAAlD,CACH,C,2DAuB4C,CACzC,GAAM,CAAA,cAAc,CAAG,IAAG,CAAC,KAAK,KAAN,CAAa,iCAAb,CAA1B,CAEA,GAAM,CAAA,qBAAqB,CAAG,cAAc,CAAG,cAAc,CAAC,qBAAlB,CAA0C,KAAtF,CACA,GAAM,CAAA,aAAa,CAAG,cAAc,CAAG,cAAc,CAAC,KAAlB,CAA0B,KAA9D,CACA,GAAM,CAAA,4BAA4B,CAAG,IAAG,CAAC,KAAK,KAAN,CAAa,2DAAb,CAAxC,CAEA,MACI,CAAA,qBAAqB,GACpB,4BAA4B,GAAK,KAAjC,EACI,4BAA4B,GAAK,KAAjC,EAA0C,aAD9C,EAEI,4BAA4B,GAAK,KAAjC,EAA0C,CAAC,aAH3B,CADzB,CAMH,C,wCA1CoC,KAAK,CAAC,S,EAIjC,UAAA,CAAA,CAAT,QAAS,CAAA,C,oCAAA,C,UAAA,CAET,IAFS,CAAA,CAyBA,UAAA,CAAA,CAAT,QAAS,CAAA,C,oCAAA,C,iCAAA,CAaT,IAbS,CAAA,CAgFd,cAAe,CAAA,0BAAf","sourcesContent":["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nimport { getTelemetryObject, Heading, IModuleProps, ITelemetryContent } from '@msdyn365-commerce-modules/utilities';\nimport * as Msdyn365 from '@msdyn365-commerce/core';\nimport classnames from 'classnames';\nimport get from 'lodash/get';\nimport { computed, reaction } from 'mobx';\nimport * as React from 'react';\nimport { IAccountCustomerBalanceTileData } from './account-customer-balance-tile.data';\nimport { IAccountCustomerBalanceTileProps } from './account-customer-balance-tile.props.autogenerated';\nimport { CreditComponent, ErrorComponent } from './components/account-customer-balance-tile-info';\nimport LinksComponent from './components/account-customer-balance-tile-links';\n\nexport interface IAccountCustomerBalanceTileViewProps extends IAccountCustomerBalanceTileProps<IAccountCustomerBalanceTileData> {\n    AccountCustomerBalanceTile: IModuleProps;\n    className: string;\n    heading?: React.ReactNode;\n    content: React.ReactNode;\n    links: React.ReactNode;\n}\n\nexport interface IAccountCustomerBalanceTileViewState {\n    isDetailsLinkDisplayed: boolean;\n    content: React.ReactNode;\n}\n\n/**\n *\n * AccountCustomerBalanceTile component\n * @extends {React.Component<IAccountCustomerBalanceTileProps<IAccountCustomerBalanceTileData>>}\n */\nclass AccountCustomerBalanceTile extends React.Component<\n    IAccountCustomerBalanceTileProps<IAccountCustomerBalanceTileData>,\n    IAccountCustomerBalanceTileViewState\n> {\n    @computed get hasError(): boolean {\n        return get(this.props, 'data.balance.status') !== 'SUCCESS';\n    }\n\n    private telemetryContent: ITelemetryContent;\n\n    constructor(props: IAccountCustomerBalanceTileProps<IAccountCustomerBalanceTileData>) {\n        super(props);\n\n        this.telemetryContent = getTelemetryObject(this.props.context.request.telemetryPageName!, this.props.friendlyName, this.props.telemetry);\n\n        // @ts-ignore\n        this.state = { ...this._initState() };\n\n        reaction(\n            () => this.hasError,\n            () => {\n                this.props.context.telemetry.error('Error retrieving customer account balance');\n                this.setState({\n                    content: <ErrorComponent value={this.props.resources.apiGenericErrorMessage} />\n                });\n            }\n        );\n    }\n\n    @computed get isCustomerAccountPaymentEnabled(): boolean {\n        const customerResult = get(this.props, 'data.customerInformation.result');\n\n        const allowOnAccountPayment = customerResult ? customerResult.AllowOnAccountPayment : false;\n        const isB2BCustomer = customerResult ? customerResult.IsB2B : false;\n        const enableCustomerAccountPayment = get(this.props, 'context.request.app.platform.enableCustomerAccountPayment');\n\n        return (\n            allowOnAccountPayment &&\n            (enableCustomerAccountPayment === 'all' ||\n                (enableCustomerAccountPayment === 'b2b' && isB2BCustomer) ||\n                (enableCustomerAccountPayment === 'b2c' && !isB2BCustomer))\n        );\n    }\n\n    public render(): JSX.Element {\n        if (!this.isCustomerAccountPaymentEnabled) {\n            return <React.Fragment />;\n        }\n\n        const { className, heading, links } = this.props.config;\n        const viewProps = {\n            ...this.props,\n            AccountCustomerBalanceTile: {\n                moduleProps: this.props,\n                className: classnames('ms-account-customer-balance-tile', className)\n            },\n            heading: heading && (\n                <Heading className='ms-account-customer-balance-tile__heading' headingTag={heading.tag} text={heading.text} />\n            ),\n            content: this.state.content,\n            links: this.state.isDetailsLinkDisplayed && (\n                <LinksComponent\n                    {...{\n                        links: links,\n                        onTextChange: (index: number) => (event: Msdyn365.ContentEditableEvent) => void 0,\n                        requestContext: this.props.context.request,\n                        telemetryContent: this.telemetryContent\n                    }}\n                />\n            )\n        };\n\n        return this.props.renderView(viewProps) as React.ReactElement;\n    }\n\n    private _initState(): IAccountCustomerBalanceTileViewState {\n        const account = get(this.props, 'data.balance.result');\n\n        let content: React.ReactNode;\n        let isDetailsLinkDisplayed = false;\n\n        if (this.hasError) {\n            this.props.telemetry.error('Error retrieving customer account balance');\n            content = <ErrorComponent error={this.props.resources.apiGenericErrorMessage} />;\n        } else if (account.Balance === 0 && account.CreditLimit === 0) {\n            // non-established credit\n            content = <ErrorComponent error={this.props.resources.noCreditErrorMessage} />;\n        } else {\n            // successfully retrieved balance\n            const { accountCreditVerbagePrefix, accountCreditVerbagePostfix } = this.props.resources;\n            const currencyCode = get(this.props, 'context.request.channel.Currency');\n            const formatCurrency = get(this.props, 'context.cultureFormatter.formatCurrency');\n            const customerBalanceFormatted = `${formatCurrency(account.Balance.toFixed(2), currencyCode)}`;\n\n            isDetailsLinkDisplayed = true;\n            content = (\n                <CreditComponent\n                    verbagePrefix={accountCreditVerbagePrefix}\n                    value={customerBalanceFormatted}\n                    verbagePostfix={accountCreditVerbagePostfix}\n                    className={'ms-account-customer-balance-tile__balance'}\n                />\n            );\n        }\n\n        return { content, isDetailsLinkDisplayed };\n    }\n}\n\nexport default AccountCustomerBalanceTile;\n"],"sourceRoot":"./src/"},"metadata":{},"sourceType":"module"}