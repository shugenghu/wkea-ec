{"ast":null,"code":"import _defineProperty from\"@babel/runtime/helpers/esm/defineProperty\";import _regeneratorRuntime from\"@babel/runtime/regenerator\";import _asyncToGenerator from\"@babel/runtime/helpers/esm/asyncToGenerator\";function ownKeys(object,enumerableOnly){var keys=Object.keys(object);if(Object.getOwnPropertySymbols){var symbols=Object.getOwnPropertySymbols(object);if(enumerableOnly)symbols=symbols.filter(function(sym){return Object.getOwnPropertyDescriptor(object,sym).enumerable;});keys.push.apply(keys,symbols);}return keys;}function _objectSpread(target){for(var i=1;i<arguments.length;i++){var source=arguments[i]!=null?arguments[i]:{};if(i%2){ownKeys(Object(source),true).forEach(function(key){_defineProperty(target,key,source[key]);});}else if(Object.getOwnPropertyDescriptors){Object.defineProperties(target,Object.getOwnPropertyDescriptors(source));}else{ownKeys(Object(source)).forEach(function(key){Object.defineProperty(target,key,Object.getOwnPropertyDescriptor(source,key));});}}return target;}function _createForOfIteratorHelper(o,allowArrayLike){var it;if(typeof Symbol===\"undefined\"||o[Symbol.iterator]==null){if(Array.isArray(o)||(it=_unsupportedIterableToArray(o))||allowArrayLike&&o&&typeof o.length===\"number\"){if(it)o=it;var i=0;var F=function F(){};return{s:F,n:function n(){if(i>=o.length)return{done:true};return{done:false,value:o[i++]};},e:function e(_e){throw _e;},f:F};}throw new TypeError(\"Invalid attempt to iterate non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");}var normalCompletion=true,didErr=false,err;return{s:function s(){it=o[Symbol.iterator]();},n:function n(){var step=it.next();normalCompletion=step.done;return step;},e:function e(_e2){didErr=true;err=_e2;},f:function f(){try{if(!normalCompletion&&it[\"return\"]!=null)it[\"return\"]();}finally{if(didErr)throw err;}}};}function _unsupportedIterableToArray(o,minLen){if(!o)return;if(typeof o===\"string\")return _arrayLikeToArray(o,minLen);var n=Object.prototype.toString.call(o).slice(8,-1);if(n===\"Object\"&&o.constructor)n=o.constructor.name;if(n===\"Map\"||n===\"Set\")return Array.from(o);if(n===\"Arguments\"||/^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n))return _arrayLikeToArray(o,minLen);}function _arrayLikeToArray(arr,len){if(len==null||len>arr.length)len=arr.length;for(var i=0,arr2=new Array(len);i<len;i++){arr2[i]=arr[i];}return arr2;}import{addCartLinesAsync,addCouponsAsync,createCartAsync,readAsync,removeCartLinesAsync,searchAsync,updateAsync}from'@msdyn365-commerce/retail-proxy/dist/DataActions/CartsDataActions.g';import{getCustomerLoyaltyCardsAsync}from'@msdyn365-commerce/retail-proxy/dist/DataActions/StoreOperationsDataActions.g';export default function getOrCreateActiveCart(_x){return _getOrCreateActiveCart.apply(this,arguments);}function _getOrCreateActiveCart(){_getOrCreateActiveCart=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee(ctx){var cart,cartCookie,cartCookieParts,wasReadFromCookie,anonCart,card;return _regeneratorRuntime.wrap(function _callee$(_context){while(1){switch(_context.prev=_context.next){case 0:cartCookie=ctx.requestContext.cookies.getCartCookie();cartCookieParts=cartCookie.split(':');_context.prev=2;_context.next=5;return getCartFromCookie(cartCookieParts,ctx);case 5:cart=_context.sent;wasReadFromCookie=!!cart&&cart.Id;// If the customer is authenticated, and the auth cookie didn't give us a cart OR doesn't have a cookie, search for the customer's cart\nif(cart&&cart.Id){_context.next=11;break;}_context.next=10;return getCartFromCustomer(ctx);case 10:cart=_context.sent;case 11:_context.next=13;return claimAnonCart(cartCookieParts,cart,ctx);case 13:anonCart=_context.sent;if(anonCart){cart=anonCart;}// If there is no cookie or everything else fails, create an empty cart and return that for the customer\nif(cart&&cart.Id){_context.next=19;break;}_context.next=18;return createNewCart(ctx);case 18:cart=_context.sent;case 19:if(!(!wasReadFromCookie&&ctx.requestContext.user.isAuthenticated&&cart&&!cart.LoyaltyCardId)){_context.next=27;break;}_context.next=22;return getCustomerLoyaltyCardsAsync({callerContext:ctx,queryResultSettings:{}},null);case 22:card=_context.sent;if(!(card&&card.length>0)){_context.next=27;break;}_context.next=26;return updateAsync({callerContext:ctx},{Id:cart.Id,LoyaltyCardId:card[0].CardNumber});case 26:cart=_context.sent;case 27:_context.next=35;break;case 29:_context.prev=29;_context.t0=_context[\"catch\"](2);ctx.telemetry.error(\"Caught exception in getting cart: \".concat(_context.t0));_context.next=34;return createNewCart(ctx);case 34:cart=_context.sent;case 35:return _context.abrupt(\"return\",cart);case 36:case\"end\":return _context.stop();}}},_callee,null,[[2,29]]);}));return _getOrCreateActiveCart.apply(this,arguments);}export function createNewCart(_x2){return _createNewCart.apply(this,arguments);}function _createNewCart(){_createNewCart=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee2(ctx){var newCart;return _regeneratorRuntime.wrap(function _callee2$(_context2){while(1){switch(_context2.prev=_context2.next){case 0:_context2.next=2;return createCartAsync({callerContext:ctx},{});case 2:newCart=_context2.sent;if(!(newCart&&newCart.Id)){_context2.next=6;break;}ctx.requestContext.cookies.setCartCookie(newCart,ctx.requestContext.user.isAuthenticated);return _context2.abrupt(\"return\",newCart);case 6:return _context2.abrupt(\"return\",undefined);case 7:case\"end\":return _context2.stop();}}},_callee2);}));return _createNewCart.apply(this,arguments);}export function getCartFromCookie(_x3,_x4){return _getCartFromCookie.apply(this,arguments);}function _getCartFromCookie(){_getCartFromCookie=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee3(cartCookieParts,ctx){var readCart;return _regeneratorRuntime.wrap(function _callee3$(_context3){while(1){switch(_context3.prev=_context3.next){case 0:if(!(cartCookieParts&&cartCookieParts.length===2)){_context3.next=8;break;}if(!(ctx.requestContext.user.isAuthenticated&&cartCookieParts[0]===\"t\"/* Auth */||!ctx.requestContext.user.isAuthenticated&&cartCookieParts[0]===\"p\"/* Anon */)){_context3.next=8;break;}_context3.next=4;return readAsync({callerContext:ctx,bypassCache:'none'},cartCookieParts[1]);case 4:readCart=_context3.sent;if(!(readCart&&readCart.Id)){_context3.next=8;break;}ctx.requestContext.cookies.setCartCookie(readCart,ctx.requestContext.user.isAuthenticated);return _context3.abrupt(\"return\",readCart);case 8:return _context3.abrupt(\"return\",undefined);case 9:case\"end\":return _context3.stop();}}},_callee3);}));return _getCartFromCookie.apply(this,arguments);}export function getCartFromCustomer(_x5){return _getCartFromCustomer.apply(this,arguments);}function _getCartFromCustomer(){_getCartFromCustomer=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee4(ctx){var authCarts;return _regeneratorRuntime.wrap(function _callee4$(_context4){while(1){switch(_context4.prev=_context4.next){case 0:if(!ctx.requestContext.user.isAuthenticated){_context4.next=7;break;}_context4.next=3;return searchCarts(ctx);case 3:authCarts=_context4.sent;if(!(authCarts&&authCarts.length>0)){_context4.next=7;break;}ctx.requestContext.cookies.setCartCookie(authCarts[0],ctx.requestContext.user.isAuthenticated);return _context4.abrupt(\"return\",authCarts[0]);case 7:return _context4.abrupt(\"return\",undefined);case 8:case\"end\":return _context4.stop();}}},_callee4);}));return _getCartFromCustomer.apply(this,arguments);}export function claimAnonCart(_x6,_x7,_x8){return _claimAnonCart.apply(this,arguments);}/**\r\n * Function that copies a cartline for giftcard\r\n * @param cartline Source CartLine you want to copy\r\n */function _claimAnonCart(){_claimAnonCart=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee5(cartCookieParts,currentCart,ctx){var anonCurrentCart,newCart,mergedCart;return _regeneratorRuntime.wrap(function _callee5$(_context5){while(1){switch(_context5.prev=_context5.next){case 0:if(!(ctx.requestContext.user.isAuthenticated&&cartCookieParts&&cartCookieParts.length===2&&cartCookieParts[0]===\"p\"/* Anon */)){_context5.next=18;break;}_context5.next=3;return readAsync({callerContext:ctx,bypassCache:'none'},cartCookieParts[1]);case 3:anonCurrentCart=_context5.sent;if(!(anonCurrentCart&&!currentCart)){_context5.next=11;break;}_context5.next=7;return claimCart(anonCurrentCart.Id,ctx);case 7:newCart=_context5.sent;if(!(newCart&&newCart.Id)){_context5.next=11;break;}ctx.requestContext.cookies.setCartCookie(newCart,ctx.requestContext.user.isAuthenticated);return _context5.abrupt(\"return\",newCart);case 11:if(!(anonCurrentCart&&anonCurrentCart.Id&&currentCart)){_context5.next=18;break;}_context5.next=14;return addCartLines(anonCurrentCart,currentCart,ctx);case 14:mergedCart=_context5.sent;if(!(!(mergedCart instanceof Error)&&mergedCart.Id)){_context5.next=18;break;}ctx.requestContext.cookies.setCartCookie(mergedCart,ctx.requestContext.user.isAuthenticated);return _context5.abrupt(\"return\",mergedCart);case 18:return _context5.abrupt(\"return\",undefined);case 19:case\"end\":return _context5.stop();}}},_callee5);}));return _claimAnonCart.apply(this,arguments);}function buildGiftCardLine(cartline){return{DeliveryMode:cartline.DeliveryMode,CatalogId:cartline.CatalogId,Description:cartline.Description,EntryMethodTypeValue:cartline.EntryMethodTypeValue||3,ItemId:cartline.ItemId,ProductId:cartline.ProductId,Quantity:cartline.Quantity,Price:cartline.Price,NetPrice:cartline.NetPrice,GiftCardBalance:cartline.GiftCardBalance,TrackingId:'',UnitOfMeasureSymbol:cartline.UnitOfMeasureSymbol,IsPriceKeyedIn:true,IsGiftCardLine:true,ExtensionProperties:cartline.ExtensionProperties};}/**\r\n * Function that adds cart lines from source cart to destination cart\r\n * @param sourceCart Source cart you want to add cart lines from\r\n * @param destinationCart Destination cart that you want to add cart lines to\r\n * @param ctx Request context\r\n */export function addCartLines(_x9,_x10,_x11){return _addCartLines.apply(this,arguments);}/**\r\n * Function to claim a cart as auth cart and set the browser cookie accordingly\r\n *\r\n * @param cartId Cart Id to claim as auth cart\r\n * @param ctx Request Context\r\n */function _addCartLines(){_addCartLines=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee6(sourceCart,destinationCart,ctx){var updatedCart,cartLines,cartLinesToDelete,channelConfiguration,_iterator,_step,cartline,newCartLine,coupons;return _regeneratorRuntime.wrap(function _callee6$(_context6){while(1){switch(_context6.prev=_context6.next){case 0:cartLines=[];cartLinesToDelete=[];channelConfiguration=ctx.requestContext.channel;if(!destinationCart.Version){_context6.next=34;break;}if(sourceCart.CartLines&&sourceCart.CartLines.length>0){_iterator=_createForOfIteratorHelper(sourceCart.CartLines);try{for(_iterator.s();!(_step=_iterator.n()).done;){cartline=_step.value;newCartLine=void 0;if(cartline.IsGiftCardLine){newCartLine=buildGiftCardLine(cartline);}else{newCartLine={};// Copy over BOPIS information from sourceCart to destination cart\nif(cartline.DeliveryMode&&cartline.DeliveryMode!==''&&channelConfiguration&&cartline.DeliveryMode===channelConfiguration.PickupDeliveryModeCode){newCartLine.DeliveryMode=channelConfiguration.PickupDeliveryModeCode;newCartLine.FulfillmentStoreId=cartline.FulfillmentStoreId;newCartLine.ShippingAddress=cartline.ShippingAddress;}newCartLine.ProductId=cartline.ProductId;newCartLine.Quantity=cartline.Quantity;newCartLine.ExtensionProperties=cartline.ExtensionProperties;newCartLine.Description=cartline.Description;}cartLines.push(_objectSpread({},newCartLine));if(cartline.LineId){cartLinesToDelete.push(cartline.LineId);}}}catch(err){_iterator.e(err);}finally{_iterator.f();}}if(!(cartLines.length>0)){_context6.next=21;break;}_context6.prev=6;_context6.next=9;return addCartLinesAsync({callerContext:ctx},destinationCart.Id,cartLines,destinationCart.Version);case 9:updatedCart=_context6.sent;if(!(cartLinesToDelete.length>0)){_context6.next=14;break;}_context6.next=13;return removeCartLinesAsync({callerContext:ctx},sourceCart.Id,cartLinesToDelete);case 13:sourceCart=_context6.sent;case 14:_context6.next=21;break;case 16:_context6.prev=16;_context6.t0=_context6[\"catch\"](6);ctx.telemetry.error('Error adding cart lines to desination cart');ctx.telemetry.exception(_context6.t0);return _context6.abrupt(\"return\",destinationCart);case 21:if(!(sourceCart.Coupons&&sourceCart.Coupons.length>0)){_context6.next=34;break;}coupons=sourceCart.Coupons.map(function(coupon){return coupon.Code;});_context6.prev=23;_context6.next=26;return addCouponsAsync({callerContext:ctx},destinationCart.Id,coupons,false);case 26:updatedCart=_context6.sent;_context6.next=34;break;case 29:_context6.prev=29;_context6.t1=_context6[\"catch\"](23);ctx.telemetry.error('Error adding existing coupon codes to the cart');ctx.telemetry.exception(_context6.t1);return _context6.abrupt(\"return\",destinationCart);case 34:return _context6.abrupt(\"return\",updatedCart||destinationCart);case 35:case\"end\":return _context6.stop();}}},_callee6,null,[[6,16],[23,29]]);}));return _addCartLines.apply(this,arguments);}export function claimCart(_x12,_x13){return _claimCart.apply(this,arguments);}/**\r\n * Function to search carts that belong to a customer\r\n *\r\n * @param ctx Request context\r\n */function _claimCart(){_claimCart=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee7(cartId,ctx){var claimAuthCart;return _regeneratorRuntime.wrap(function _callee7$(_context7){while(1){switch(_context7.prev=_context7.next){case 0:_context7.next=2;return updateAsync({callerContext:ctx},{Id:cartId});case 2:claimAuthCart=_context7.sent;if(!(!(claimAuthCart instanceof Error)&&claimAuthCart&&claimAuthCart.Id)){_context7.next=7;break;}return _context7.abrupt(\"return\",claimAuthCart);case 7:return _context7.abrupt(\"return\",{});case 8:case\"end\":return _context7.stop();}}},_callee7);}));return _claimCart.apply(this,arguments);}export function searchCarts(_x14){return _searchCarts.apply(this,arguments);}function _searchCarts(){_searchCarts=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee8(ctx){var cartSearchCriteria,queryResultSettings;return _regeneratorRuntime.wrap(function _callee8$(_context8){while(1){switch(_context8.prev=_context8.next){case 0:cartSearchCriteria={IncludeAnonymous:false,CartTypeValue:1};queryResultSettings={Paging:{Top:1,Skip:0},Sorting:{Columns:[{ColumnName:'ModifiedDateTime'}]}};return _context8.abrupt(\"return\",searchAsync({callerContext:ctx,queryResultSettings:queryResultSettings},cartSearchCriteria));case 3:case\"end\":return _context8.stop();}}},_callee8);}));return _searchCarts.apply(this,arguments);}","map":{"version":3,"sources":["cart-state/get-or-create-active-cart.ts"],"names":[],"mappings":"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","sourcesContent":["import { IActionContext } from '@msdyn365-commerce/core';\nimport { addCartLinesAsync, addCouponsAsync, createCartAsync, readAsync, removeCartLinesAsync, searchAsync, updateAsync } from '@msdyn365-commerce/retail-proxy/dist/DataActions/CartsDataActions.g';\nimport { getCustomerLoyaltyCardsAsync } from '@msdyn365-commerce/retail-proxy/dist/DataActions/StoreOperationsDataActions.g';\nimport { Cart, CartLine, CartSearchCriteria, Coupon, QueryResultSettings } from '@msdyn365-commerce/retail-proxy/dist/Entities/CommerceTypes.g';\n\nconst enum CartTokenPrefix {\n    Auth = 't',\n    Anon = 'p'\n}\n\nexport default async function getOrCreateActiveCart(ctx: IActionContext): Promise<Cart | undefined> {\n    let cart: Cart | undefined;\n    const cartCookie: string = ctx.requestContext.cookies.getCartCookie();\n    const cartCookieParts: string[] = cartCookie.split(':');\n    try {\n        // Check if there are already is a cart cookie and it is in the format we understand\n        cart = await getCartFromCookie(cartCookieParts, ctx);\n        const wasReadFromCookie = !!cart && cart.Id;\n\n        // If the customer is authenticated, and the auth cookie didn't give us a cart OR doesn't have a cookie, search for the customer's cart\n        if (!(cart && cart.Id)) {\n            cart = await getCartFromCustomer(ctx);\n        }\n\n        // if the customer just went from anon to signed in state then get that anon cart\n        // if the search of carts didn't result in a cart, claim the current anon cart as a new auth cart for the customer\n        // if the search resulted in a cart, and the read also resulted in cart, then go ahead an merge the carts\n        const anonCart = await claimAnonCart(cartCookieParts, cart, ctx);\n        if (anonCart) {\n            cart = anonCart;\n        }\n\n        // If there is no cookie or everything else fails, create an empty cart and return that for the customer\n        if (!(cart && cart.Id)) {\n            cart = await createNewCart(ctx);\n        }\n        if (!wasReadFromCookie && ctx.requestContext.user.isAuthenticated && cart && !cart.LoyaltyCardId) {\n            const card = await getCustomerLoyaltyCardsAsync({ callerContext: ctx, queryResultSettings: {} }, null);\n            if (card && card.length > 0) {\n\n                cart = await updateAsync(\n                    { callerContext: ctx },\n                    {\n                        Id: cart.Id,\n                        LoyaltyCardId: card[0].CardNumber\n                    }\n                );\n            }\n        }\n\n    } catch (ex) {\n        ctx.telemetry.error(`Caught exception in getting cart: ${ex}`);\n        cart = await createNewCart(ctx);\n    }\n    return cart;\n}\n\nexport async function createNewCart(ctx: IActionContext): Promise<Cart | undefined> {\n    const newCart = await createCartAsync({ callerContext: ctx }, <Cart>{});\n    if (newCart && newCart.Id) {\n        ctx.requestContext.cookies.setCartCookie(newCart, ctx.requestContext.user.isAuthenticated);\n\n        return newCart;\n    }\n\n    return undefined;\n}\n\nexport async function getCartFromCookie(cartCookieParts: string[], ctx: IActionContext): Promise<Cart | undefined> {\n    if (cartCookieParts && cartCookieParts.length === 2) {\n        // If the customer is authenticated and they have an auth cookie\n        // OR if the customer is not authenticated and then have an anon cookie\n        // just get the cart and return that\n\n        if ((ctx.requestContext.user.isAuthenticated && cartCookieParts[0] === CartTokenPrefix.Auth) ||\n            (!ctx.requestContext.user.isAuthenticated && cartCookieParts[0] === CartTokenPrefix.Anon)) {\n            const readCart = await readAsync({ callerContext: ctx, bypassCache: 'none' }, cartCookieParts[1]);\n\n            if (readCart && readCart.Id) {\n                ctx.requestContext.cookies.setCartCookie(readCart, ctx.requestContext.user.isAuthenticated);\n                return readCart;\n            }\n        }\n    }\n\n    return undefined;\n}\n\nexport async function getCartFromCustomer(ctx: IActionContext): Promise<Cart | undefined> {\n    if (ctx.requestContext.user.isAuthenticated) {\n        const authCarts = await searchCarts(ctx);\n        if (authCarts && authCarts.length > 0) {\n            ctx.requestContext.cookies.setCartCookie(authCarts[0], ctx.requestContext.user.isAuthenticated);\n            return authCarts[0];\n        }\n    }\n\n    return undefined;\n}\n\nexport async function claimAnonCart(cartCookieParts: string[], currentCart: Cart | undefined, ctx: IActionContext): Promise<Cart | undefined> {\n    if (ctx.requestContext.user.isAuthenticated && cartCookieParts && cartCookieParts.length === 2 && cartCookieParts[0] === CartTokenPrefix.Anon) {\n        const anonCurrentCart = await readAsync({ callerContext: ctx, bypassCache: 'none' }, cartCookieParts[1]);\n\n        if (anonCurrentCart && !currentCart) {\n            const newCart = await claimCart(anonCurrentCart.Id, ctx);\n            if (newCart && newCart.Id) {\n                ctx.requestContext.cookies.setCartCookie(newCart, ctx.requestContext.user.isAuthenticated);\n                return newCart;\n            }\n        }\n\n        if (anonCurrentCart && anonCurrentCart.Id && currentCart) {\n            const mergedCart = await addCartLines(anonCurrentCart, currentCart, ctx);\n            // Once updated, take that merged cart ID and store the cart ID in the cookie\n            if (!(mergedCart instanceof Error) && mergedCart.Id) {\n                ctx.requestContext.cookies.setCartCookie(mergedCart, ctx.requestContext.user.isAuthenticated);\n                return mergedCart;\n            }\n        }\n    }\n\n    return undefined;\n}\n\n/**\n * Function that copies a cartline for giftcard\n * @param cartline Source CartLine you want to copy\n */\nfunction buildGiftCardLine(cartline: CartLine): CartLine {\n    return {\n        DeliveryMode: cartline.DeliveryMode,\n        CatalogId: cartline.CatalogId,\n        Description: cartline.Description,\n        EntryMethodTypeValue: cartline.EntryMethodTypeValue || 3,\n        ItemId: cartline.ItemId,\n        ProductId: cartline.ProductId,\n        Quantity: cartline.Quantity,\n        Price: cartline.Price,\n        NetPrice: cartline.NetPrice,\n        GiftCardBalance: cartline.GiftCardBalance,\n        TrackingId: '',\n        UnitOfMeasureSymbol: cartline.UnitOfMeasureSymbol,\n        IsPriceKeyedIn: true,\n        IsGiftCardLine: true,\n        ExtensionProperties: cartline.ExtensionProperties\n    };\n}\n\n/**\n * Function that adds cart lines from source cart to destination cart\n * @param sourceCart Source cart you want to add cart lines from\n * @param destinationCart Destination cart that you want to add cart lines to\n * @param ctx Request context\n */\nexport async function addCartLines(sourceCart: Cart, destinationCart: Cart, ctx: IActionContext): Promise<Cart> {\n    let updatedCart;\n    const cartLines: CartLine[] = [];\n    const cartLinesToDelete: string[] = [];\n\n    const channelConfiguration = ctx.requestContext.channel;\n\n    if (destinationCart.Version) {\n        if (sourceCart.CartLines && sourceCart.CartLines.length > 0) {\n            for (const cartline of sourceCart.CartLines) {\n                let newCartLine: CartLine;\n\n                if (cartline.IsGiftCardLine) {\n                    newCartLine = buildGiftCardLine(cartline);\n                } else {\n                    newCartLine = {};\n                    // Copy over BOPIS information from sourceCart to destination cart\n                    if (cartline.DeliveryMode && cartline.DeliveryMode !== '' && channelConfiguration && cartline.DeliveryMode === channelConfiguration.PickupDeliveryModeCode) {\n                        newCartLine.DeliveryMode = channelConfiguration.PickupDeliveryModeCode;\n                        newCartLine.FulfillmentStoreId = cartline.FulfillmentStoreId;\n                        newCartLine.ShippingAddress = cartline.ShippingAddress;\n                    }\n\n                    newCartLine.ProductId = cartline.ProductId;\n                    newCartLine.Quantity = cartline.Quantity;\n                    newCartLine.ExtensionProperties = cartline.ExtensionProperties;\n                    newCartLine.Description = cartline.Description;\n                }\n\n                cartLines.push({ ...newCartLine });\n                if (cartline.LineId) {\n                    cartLinesToDelete.push(cartline.LineId);\n                }\n            }\n        }\n\n        if (cartLines.length > 0) {\n            try {\n                updatedCart = await addCartLinesAsync({ callerContext: ctx }, destinationCart.Id, cartLines, destinationCart.Version);\n\n                if (cartLinesToDelete.length > 0) {\n                    sourceCart = await removeCartLinesAsync({ callerContext: ctx }, sourceCart.Id, cartLinesToDelete);\n                }\n            } catch (e) {\n                ctx.telemetry.error('Error adding cart lines to desination cart');\n                ctx.telemetry.exception(e);\n                return destinationCart;\n            }\n        }\n\n        // Copy over coupon codes from source cart to destination cart so that the customer doesn't lose couponCodes while migration\n        if (sourceCart.Coupons && sourceCart.Coupons.length > 0) {\n            const coupons = sourceCart.Coupons.map((coupon: Coupon) => {\n                return coupon.Code!;\n            });\n\n            try {\n                updatedCart = await addCouponsAsync({ callerContext: ctx }, destinationCart.Id, coupons, false);\n            } catch (e) {\n                ctx.telemetry.error('Error adding existing coupon codes to the cart');\n                ctx.telemetry.exception(e);\n                return destinationCart;\n            }\n        }\n    }\n\n    return updatedCart || destinationCart;\n}\n\n/**\n * Function to claim a cart as auth cart and set the browser cookie accordingly\n *\n * @param cartId Cart Id to claim as auth cart\n * @param ctx Request Context\n */\nexport async function claimCart(cartId: string, ctx: IActionContext): Promise<Cart> {\n    const claimAuthCart = await updateAsync(\n        { callerContext: ctx },\n        {\n            Id: cartId\n        }\n    );\n    if (!(claimAuthCart instanceof Error) && claimAuthCart && claimAuthCart.Id) {\n        return claimAuthCart;\n    } else {\n        return <Cart>{};\n    }\n}\n\n/**\n * Function to search carts that belong to a customer\n *\n * @param ctx Request context\n */\nexport async function searchCarts(ctx: IActionContext): Promise<Cart[]> {\n    const cartSearchCriteria: CartSearchCriteria = {\n        IncludeAnonymous: false,\n        CartTypeValue: 1\n    };\n\n    const queryResultSettings: QueryResultSettings = {\n        Paging: {\n            Top: 1,\n            Skip: 0\n        },\n        Sorting: {\n            Columns: [\n                {\n                    ColumnName: 'ModifiedDateTime'\n                }\n            ]\n        }\n    };\n\n    return searchAsync({ callerContext: ctx, queryResultSettings: queryResultSettings }, cartSearchCriteria);\n}"],"sourceRoot":"./src/"},"metadata":{},"sourceType":"module"}