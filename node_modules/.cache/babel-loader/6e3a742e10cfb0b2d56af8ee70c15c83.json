{"ast":null,"code":"import\"core-js/modules/es.promise.js\";import{__decorate}from\"tslib\";import{computed,observable}from'mobx';/**\r\n * Base global state that handles common global state behavior that other state can extend from\r\n */export class GlobalState{constructor(actionContext){this.isInitialized=false;this.actionContext=actionContext;this._status='UPDATING';}get status(){return this._status;}async initialize(){this.isInitialized=true;this._status='READY';return;}async _doAsyncAction(lambda){this._status='UPDATING';return lambda().then(result=>{this._status='READY';return result;}).catch(error=>{console.log(error);this._status='ERROR';return Promise.reject(error);});}}__decorate([observable],GlobalState.prototype,\"_status\",void 0);__decorate([computed],GlobalState.prototype,\"status\",null);","map":{"version":3,"sources":["global-state/global-state.ts"],"names":[],"mappings":"oEACA,OAAS,QAAT,CAAmB,UAAnB,KAAqC,MAArC,CAIA;;AAEG,GACH,MAAM,MAAO,CAAA,WAAW,CASpB,WAAA,CAAY,aAAZ,CAAyC,CAR/B,KAAA,aAAA,CAAyB,KAAzB,CASN,KAAK,aAAL,CAAqB,aAArB,CACA,KAAK,OAAL,CAAe,UAAf,CACH,CAPS,GAAW,CAAA,MAAX,EAAiB,CACvB,MAAO,MAAK,OAAZ,CACH,CAOM,KAAM,CAAA,UAAN,EAAgB,CACnB,KAAK,aAAL,CAAqB,IAArB,CACA,KAAK,OAAL,CAAe,OAAf,CAEA,OACH,CAES,KAAM,CAAA,cAAN,CAA2B,MAA3B,CAAsD,CAC5D,KAAK,OAAL,CAAe,UAAf,CAEA,MAAO,CAAA,MAAM,GAAG,IAAT,CAAc,MAAM,EAAG,CAC1B,KAAK,OAAL,CAAe,OAAf,CACA,MAAO,CAAA,MAAP,CACH,CAHM,EAGJ,KAHI,CAGE,KAAK,EAAG,CACb,OAAO,CAAC,GAAR,CAAY,KAAZ,EACA,KAAK,OAAL,CAAe,OAAf,CAEA,MAAO,CAAA,OAAO,CAAC,MAAR,CAAe,KAAf,CAAP,CACH,CARM,CAAP,CASH,CAjCmB,CAIR,UAAA,CAAA,CAAX,UAAW,CAAA,C,qBAAA,C,SAAA,C,IAAqC,EAArC,CAAA,CACF,UAAA,CAAA,CAAT,QAAS,CAAA,C,qBAAA,C,QAAA,CAET,IAFS,CAAA","sourcesContent":["import { IActionContext } from '@msdyn365-commerce/core';\nimport { computed, observable } from 'mobx';\n\nimport { GlobalStateStatus, IGlobalState } from './i-global-state';\n\n/**\n * Base global state that handles common global state behavior that other state can extend from\n */\nexport class GlobalState implements IGlobalState {\n    protected isInitialized: boolean = false;\n    protected actionContext: IActionContext;\n\n    @observable protected _status: GlobalStateStatus;\n    @computed public get status(): Readonly<GlobalStateStatus> {\n        return this._status;\n    }\n\n    constructor(actionContext: IActionContext) {\n        this.actionContext = actionContext;\n        this._status = 'UPDATING';\n    }\n\n    public async initialize(): Promise<void> {\n        this.isInitialized = true;\n        this._status = 'READY';\n\n        return;\n    }\n\n    protected async _doAsyncAction<TOut>(lambda: () => Promise<TOut>): Promise<TOut> {\n        this._status = 'UPDATING';\n\n        return lambda().then(result => {\n            this._status = 'READY';\n            return result;\n        }).catch(error => {\n            console.log(error);\n            this._status = 'ERROR';\n\n            return Promise.reject(error);\n        });\n    }\n}\n"],"sourceRoot":"./src/"},"metadata":{},"sourceType":"module"}