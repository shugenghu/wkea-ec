{"ast":null,"code":"import\"core-js/modules/es.object.assign.js\";import\"core-js/modules/es.regexp.to-string.js\";import*as React from'react';import{AddressItemType}from'../../common/address-format.data';import AddressDetailItemComponent from'./address-detail-item';export const AddressShow=props=>{const{addressFormat,addressPurposes,address}=props;return{AddressDetail:{className:'msc-address-detail'},items:addressFormat.map(item=>{if(item.name===AddressItemType[AddressItemType.AddressTypeValue]){const addressType=addressPurposes.find(addressTypeValue=>addressTypeValue.AddressType.toString()===(address[item.name]||'').toString());if(addressType){const value=addressType.Name||'';return{key:item.name,description:/*#__PURE__*/React.createElement(AddressDetailItemComponent,Object.assign({},{isNewLine:item.isNewLine,isShowLabel:item.type===AddressItemType.Phone,labelText:item.label,name:item.name,value:value}))};}}return{key:item.name,description:/*#__PURE__*/React.createElement(AddressDetailItemComponent,Object.assign({},{isNewLine:item.isNewLine,isShowLabel:item.type===AddressItemType.Phone,labelText:item.label,name:item.name,value:(address[item.name]||'').toString()}))};})};};","map":{"version":3,"sources":["common/components/address-show.tsx"],"names":[],"mappings":"2FAIA,MAAO,GAAK,CAAA,KAAZ,KAAuB,OAAvB,CAKA,OAAS,eAAT,KAA8C,kCAA9C,CACA,MAAO,CAAA,0BAAP,KAAuC,uBAAvC,CAkBA,MAAO,MAAM,CAAA,WAAW,CAAI,KAAD,EAAqD,CAC5E,KAAM,CAAE,aAAF,CAAiB,eAAjB,CAAkC,OAAlC,EAA8C,KAApD,CAEA,MAAO,CACH,aAAa,CAAE,CAAE,SAAS,CAAE,oBAAb,CADZ,CAEH,KAAK,CAAE,aAAa,CAAC,GAAd,CAAmB,IAAD,EAAS,CAC9B,GAAI,IAAI,CAAC,IAAL,GAAc,eAAe,CAAC,eAAe,CAAC,gBAAjB,CAAjC,CAAqE,CACjE,KAAM,CAAA,WAAW,CAAG,eAAe,CAAC,IAAhB,CAAsB,gBAAD,EAAsB,gBAAgB,CAAC,WAAjB,CAA6B,QAA7B,KAA4C,CAAC,OAAO,CAAC,IAAI,CAAC,IAAN,CAAP,EAAsB,EAAvB,EAA2B,QAA3B,EAAvF,CAApB,CACA,GAAI,WAAJ,CAAiB,CACb,KAAM,CAAA,KAAK,CAAG,WAAW,CAAC,IAAZ,EAAoB,EAAlC,CACA,MAAO,CACH,GAAG,CAAE,IAAI,CAAC,IADP,CAEH,WAAW,cAAE,KAAA,CAAA,aAAA,CAAC,0BAAD,CAA2B,MAAA,CAAA,MAAA,CAAA,EAAA,CAAK,CAAE,SAAS,CAAE,IAAI,CAAC,SAAlB,CAA6B,WAAW,CAAE,IAAI,CAAC,IAAL,GAAc,eAAe,CAAC,KAAxE,CAA+E,SAAS,CAAE,IAAI,CAAC,KAA/F,CAAsG,IAAI,CAAE,IAAI,CAAC,IAAjH,CAAuH,KAAK,CAAE,KAA9H,CAAL,CAA3B,CAFV,CAAP,CAIH,CACJ,CACD,MAAO,CACH,GAAG,CAAE,IAAI,CAAC,IADP,CAEH,WAAW,cAAE,KAAA,CAAA,aAAA,CAAC,0BAAD,CAA2B,MAAA,CAAA,MAAA,CAAA,EAAA,CAAK,CAAE,SAAS,CAAE,IAAI,CAAC,SAAlB,CAA6B,WAAW,CAAE,IAAI,CAAC,IAAL,GAAc,eAAe,CAAC,KAAxE,CAA+E,SAAS,CAAE,IAAI,CAAC,KAA/F,CAAsG,IAAI,CAAE,IAAI,CAAC,IAAjH,CAAuH,KAAK,CAAE,CAAC,OAAO,CAAC,IAAI,CAAC,IAAN,CAAP,EAAsB,EAAvB,EAA2B,QAA3B,EAA9H,CAAL,CAA3B,CAFV,CAAP,CAIH,CAfM,CAFJ,CAAP,CAmBH,CAtBM","sourcesContent":["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nimport * as React from 'react';\n\nimport { INodeProps } from '@msdyn365-commerce-modules/utilities';\nimport { Address, AddressPurpose } from '@msdyn365-commerce/retail-proxy/dist/Entities/CommerceTypes.g';\n\nimport { AddressItemType, IAddressItem } from '../../common/address-format.data';\nimport AddressDetailItemComponent from './address-detail-item';\n\nexport interface IAddressShowItem {\n    key: string;\n    description: React.ReactNode;\n}\n\nexport interface IAddressShowProps {\n    AddressDetail: INodeProps;\n    items: IAddressShowItem[];\n}\n\nexport interface IAddressShowInputProps {\n    addressFormat: IAddressItem[];\n    address: Address;\n    addressPurposes: AddressPurpose[];\n}\n\nexport const AddressShow = (props: IAddressShowInputProps): IAddressShowProps => {\n    const { addressFormat, addressPurposes, address } = props;\n\n    return {\n        AddressDetail: { className: 'msc-address-detail' },\n        items: addressFormat.map((item) => {\n            if (item.name === AddressItemType[AddressItemType.AddressTypeValue]) {\n                const addressType = addressPurposes.find((addressTypeValue) => addressTypeValue.AddressType.toString() === (address[item.name] || '').toString());\n                if (addressType) {\n                    const value = addressType.Name || '';\n                    return {\n                        key: item.name,\n                        description: <AddressDetailItemComponent {...{ isNewLine: item.isNewLine, isShowLabel: item.type === AddressItemType.Phone, labelText: item.label, name: item.name, value: value }} />\n                    };\n                }\n            }\n            return {\n                key: item.name,\n                description: <AddressDetailItemComponent {...{ isNewLine: item.isNewLine, isShowLabel: item.type === AddressItemType.Phone, labelText: item.label, name: item.name, value: (address[item.name] || '').toString() }} />\n            };\n        })\n    };\n};"],"sourceRoot":"./src/"},"metadata":{},"sourceType":"module"}