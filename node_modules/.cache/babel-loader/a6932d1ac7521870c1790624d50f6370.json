{"ast":null,"code":"import _regeneratorRuntime from\"@babel/runtime/regenerator\";import _asyncToGenerator from\"@babel/runtime/helpers/esm/asyncToGenerator\";import _classCallCheck from\"@babel/runtime/helpers/esm/classCallCheck\";import{createObservableDataAction}from'@msdyn365-commerce/core';import getCurrentCategory,{CurrentCategoryInput}from'./get-current-category';import getProducts,{ProductInput}from'./get-simple-products';import{searchByCategoryAsync}from'@msdyn365-commerce/retail-proxy/dist/DataActions/ProductsDataActions.g';import{QueryResultSettingsProxy}from'./utilities/QueryResultSettingsProxy';import{buildCacheKey}from'./utilities/utils';/**\r\n * Product by category ID Input action\r\n */export var ProductsByCategoryInput=function ProductsByCategoryInput(category,apiSettings,queryResultSettingsProxy){var _this=this;_classCallCheck(this,ProductsByCategoryInput);this.getCacheKey=function(){return buildCacheKey(\"\".concat(_this.categoryId||_this.categorySlug,\"|\").concat(_this.catalogId,\"|\").concat(_this.queryResultSettingsProxy.cacheKeyHint),_this.apiSettings);};this.getCacheObjectType=function(){return'Products-From-Search';};this.dataCacheType=function(){return'application';};this.apiSettings=apiSettings;this.currentCategory=category;this.queryResultSettingsProxy=queryResultSettingsProxy;this.catalogId=apiSettings.catalogId;this.categoryId=category.categoryId;this.categorySlug=category.categorySlug;};/**\r\n * createInput method for the getProductsByCategory data aciton\r\n */export var createGetProductsByCategoryInput=function createGetProductsByCategoryInput(inputData){if(inputData&&inputData.requestContext){var currentCategory=new CurrentCategoryInput(inputData.requestContext);var queryResultSettingsProxy=QueryResultSettingsProxy.fromInputData(inputData);return new ProductsByCategoryInput(currentCategory,inputData.requestContext.apiSettings,queryResultSettingsProxy);}throw new Error('Please specify categoryId query string in request.');};/**\r\n * Action method for the getProductsByCategory data action\r\n */export function getProductsByCategoryAction(_x,_x2){return _getProductsByCategoryAction.apply(this,arguments);}/**\r\n * The getProductsByCategory data action\r\n * Retrieves the current category of the request via the getCurrentCategory data action\r\n * Then calls the searchByCategory RetailServer API to get a list of products associated with\r\n * the current category, and finally fully hydrates the data for those prodcuts via the\r\n * getProducts data action, returning a list of SimpleProducts within the current category.\r\n */function _getProductsByCategoryAction(){_getProductsByCategoryAction=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee(input,ctx){var apiSettings,categoryId,category,productInputs;return _regeneratorRuntime.wrap(function _callee$(_context){while(1){switch(_context.prev=_context.next){case 0:apiSettings=ctx.requestContext.apiSettings;categoryId=input.currentCategory.categoryId;if(!(input.currentCategory.categorySlug&&!categoryId)){_context.next=10;break;}_context.next=5;return getCurrentCategory(input.currentCategory,ctx);case 5:category=_context.sent;if(category){_context.next=9;break;}ctx.trace('[getProductsByCategoryAction] Unable to find category');return _context.abrupt(\"return\",[]);case 9:categoryId=category.RecordId;case 10:_context.next=12;return searchByCategoryAsync({callerContext:ctx,queryResultSettings:input.queryResultSettingsProxy.QueryResultSettings},+apiSettings.channelId,input.catalogId,categoryId||0).then(function(productSearchResults){return productSearchResults.map(function(product){return new ProductInput(product.RecordId,apiSettings);});});case 12:productInputs=_context.sent;if(!(productInputs.length>0)){_context.next=19;break;}_context.next=16;return getProducts(productInputs,ctx);case 16:return _context.abrupt(\"return\",_context.sent);case 19:return _context.abrupt(\"return\",[]);case 20:case\"end\":return _context.stop();}}},_callee);}));return _getProductsByCategoryAction.apply(this,arguments);}export default createObservableDataAction({id:'@msdyn365-commerce-modules/retail-actions/get-products-by-category',action:getProductsByCategoryAction,input:createGetProductsByCategoryInput});","map":{"version":3,"sources":["../../src/get-products-by-category.ts"],"names":[],"mappings":"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","sourcesContent":["import { CacheType, IAction, IActionInput, ICommerceApiSettings } from '@msdyn365-commerce/core';\nimport { createObservableDataAction, IActionContext, IAny, ICreateActionContext, IGeneric } from '@msdyn365-commerce/core';\nimport { ProductSearchResult, SimpleProduct } from '@msdyn365-commerce/retail-proxy';\nimport getCurrentCategory, { CurrentCategoryInput } from './get-current-category';\nimport getProducts, { ProductInput } from './get-simple-products';\n\nimport { searchByCategoryAsync } from '@msdyn365-commerce/retail-proxy/dist/DataActions/ProductsDataActions.g';\nimport { QueryResultSettingsProxy } from './utilities/QueryResultSettingsProxy';\nimport { buildCacheKey } from './utilities/utils';\n\n/**\n * Product by category ID Input action\n */\nexport class ProductsByCategoryInput implements IActionInput {\n    public categoryId?: number;\n    public categorySlug?: string;\n    public categoryName?: string;\n    public catalogId: number;\n    public currentCategory: CurrentCategoryInput;\n    public readonly queryResultSettingsProxy: QueryResultSettingsProxy;\n    private apiSettings: ICommerceApiSettings;\n\n    constructor(category: CurrentCategoryInput, apiSettings: ICommerceApiSettings, queryResultSettingsProxy: QueryResultSettingsProxy) {\n        this.apiSettings = apiSettings;\n        this.currentCategory = category;\n        this.queryResultSettingsProxy = queryResultSettingsProxy;\n        this.catalogId = apiSettings.catalogId;\n        this.categoryId = category.categoryId;\n        this.categorySlug = category.categorySlug;\n    }\n\n    public getCacheKey = () => buildCacheKey(`${this.categoryId || this.categorySlug}|${this.catalogId}|${this.queryResultSettingsProxy.cacheKeyHint}`, this.apiSettings);\n    public getCacheObjectType = () => 'Products-From-Search';\n    public dataCacheType = (): CacheType => 'application';\n}\n\n/**\n * createInput method for the getProductsByCategory data aciton\n */\nexport const createGetProductsByCategoryInput = (inputData: ICreateActionContext<IGeneric<IAny>>): IActionInput => {\n    if (inputData && inputData.requestContext) {\n        const currentCategory = new CurrentCategoryInput(inputData.requestContext);\n        const queryResultSettingsProxy = QueryResultSettingsProxy.fromInputData(inputData);\n        return new ProductsByCategoryInput(\n            currentCategory,\n            inputData.requestContext.apiSettings,\n            queryResultSettingsProxy\n        );\n    }\n\n    throw new Error('Please specify categoryId query string in request.');\n};\n\n/**\n * Action method for the getProductsByCategory data action\n */\nexport async function getProductsByCategoryAction(input: ProductsByCategoryInput, ctx: IActionContext): Promise<SimpleProduct[]> {\n    const { apiSettings } = ctx.requestContext;\n    let categoryId = input.currentCategory.categoryId;\n    if (input.currentCategory.categorySlug && !categoryId) {\n        const category = await getCurrentCategory(input.currentCategory, ctx);\n        if (!category) {\n            ctx.trace('[getProductsByCategoryAction] Unable to find category');\n            return <SimpleProduct[]>[];\n        }\n        categoryId = category.RecordId;\n    }\n\n    const productInputs = await searchByCategoryAsync(\n        { callerContext: ctx, queryResultSettings: input.queryResultSettingsProxy.QueryResultSettings },\n        +apiSettings.channelId,\n        input.catalogId,\n        categoryId || 0\n    ).then(productSearchResults => {\n        return productSearchResults.map(\n            (product: ProductSearchResult): ProductInput => {\n                return new ProductInput(product.RecordId, apiSettings);\n            }\n        );\n    });\n\n    if (productInputs.length > 0) {\n        return <SimpleProduct[]>await getProducts(productInputs, ctx);\n    } else {\n        return <SimpleProduct[]>[];\n    }\n}\n\n/**\n * The getProductsByCategory data action\n * Retrieves the current category of the request via the getCurrentCategory data action\n * Then calls the searchByCategory RetailServer API to get a list of products associated with\n * the current category, and finally fully hydrates the data for those prodcuts via the\n * getProducts data action, returning a list of SimpleProducts within the current category.\n */\nexport default createObservableDataAction({\n    id: '@msdyn365-commerce-modules/retail-actions/get-products-by-category',\n    action: <IAction<SimpleProduct[]>>getProductsByCategoryAction,\n    input: createGetProductsByCategoryInput\n});\n"],"sourceRoot":""},"metadata":{},"sourceType":"module"}