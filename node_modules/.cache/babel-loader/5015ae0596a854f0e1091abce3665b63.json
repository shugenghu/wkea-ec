{"ast":null,"code":"import _slicedToArray from\"@babel/runtime/helpers/esm/slicedToArray\";import{Button,Modal,ModalBody,ModalFooter,ModalHeader}from'@msdyn365-commerce-modules/utilities';import classnames from'classnames';import React,{useState}from'react';import{OrderTemplateNameDialog}from'../order-template-name-dialog/order-template-name-dialog.component';import{OrderTemplateComponent}from'../order-templates-list/order-template-list';var renderAddToOrderTemplatesWhenEmptyOrderTemplatesDialog=function renderAddToOrderTemplatesWhenEmptyOrderTemplatesDialog(dialogProps,className,closeDialog,showOrderTemplateNameDialog){var addToOrderTemplateDialogResources=dialogProps.addToOrderTemplateDialogResources,modalOpen=dialogProps.modalOpen;return/*#__PURE__*/React.createElement(React.Fragment,null,/*#__PURE__*/React.createElement(Modal,{isOpen:modalOpen,className:\"\".concat(className)},/*#__PURE__*/React.createElement(ModalHeader,{className:\"\".concat(className,\"__dialog__header\"),toggle:closeDialog},/*#__PURE__*/React.createElement(\"span\",null,addToOrderTemplateDialogResources.addToOrderTemplateHeader)),/*#__PURE__*/React.createElement(ModalBody,{className:\"\".concat(className,\"__dialog__body\")},/*#__PURE__*/React.createElement(\"div\",{className:\"\".concat(className,\"__dialog__content\")},/*#__PURE__*/React.createElement(\"div\",{className:\"\".concat(className,\"__dialog__create-order-template-image-container\")},/*#__PURE__*/React.createElement(\"div\",{className:classnames('msc-create-order-template-icon',\"\".concat(className,\"__dialog__create-order-template-image\"))})),/*#__PURE__*/React.createElement(\"div\",{className:\"\".concat(className,\"__dialog__no-order-templates\")},addToOrderTemplateDialogResources.noOrderTemplatesMessage),/*#__PURE__*/React.createElement(\"div\",{className:\"\".concat(className,\"__dialog__no-order-templates-description\")},addToOrderTemplateDialogResources.noOrderTemplatesDescription))),/*#__PURE__*/React.createElement(ModalFooter,{className:\"\".concat(className,\"__dialog__footer\")},/*#__PURE__*/React.createElement(Button,{className:\"\".concat(className,\"__dialog__create-order-template-button\"),title:addToOrderTemplateDialogResources.createAnOrderTemplateButtonText,onClick:showOrderTemplateNameDialog},addToOrderTemplateDialogResources.createAnOrderTemplateButtonText),/*#__PURE__*/React.createElement(Button,{className:\"\".concat(className,\"__dialog__cancel-button\"),title:addToOrderTemplateDialogResources.cancelOrderTemplateCreationButtonText,onClick:closeDialog},addToOrderTemplateDialogResources.cancelOrderTemplateCreationButtonText))));};var formatBold=function formatBold(text,boldText){var patternToFind='{0}';return/*#__PURE__*/React.createElement(React.Fragment,null,text.slice(0,text.indexOf(patternToFind)),/*#__PURE__*/React.createElement(\"b\",null,boldText),text.slice(text.indexOf(patternToFind)+patternToFind.length));};var renderAddToOrderTemplatesForExistingOrderTemplatesDialog=function renderAddToOrderTemplatesForExistingOrderTemplatesDialog(dialogProps,className,closeDialog,showOrderTemplateNameDialog,onAddToOrderTemplateButtonClick){var addToOrderTemplateDialogResources=dialogProps.addToOrderTemplateDialogResources,modalOpen=dialogProps.modalOpen,orderTemplates=dialogProps.data.orderTemplates;return/*#__PURE__*/React.createElement(React.Fragment,null,/*#__PURE__*/React.createElement(Modal,{isOpen:modalOpen,className:\"\".concat(className)},/*#__PURE__*/React.createElement(ModalHeader,{className:\"\".concat(className,\"__dialog__header\"),toggle:closeDialog},/*#__PURE__*/React.createElement(\"span\",null,addToOrderTemplateDialogResources.addToOrderTemplateHeader)),/*#__PURE__*/React.createElement(ModalBody,{className:\"\".concat(className,\"__dialog__body\")},/*#__PURE__*/React.createElement(\"div\",{className:\"\".concat(className,\"__dialog__content\")},/*#__PURE__*/React.createElement(\"div\",{className:\"\".concat(className,\"__dialog__order-templates-description\")},formatBold(addToOrderTemplateDialogResources.selectTemplatesText,orderTemplates.length.toString())),/*#__PURE__*/React.createElement(\"div\",{className:\"\".concat(className,\"__dialog__order-templates-container\")},/*#__PURE__*/React.createElement(\"div\",{role:'button',className:classnames(\"\".concat(className,\"__dialog__order-templates-line__container\"),\"\".concat(className,\"__dialog__order-templates-line__container__create-new-line\")),onClick:showOrderTemplateNameDialog},/*#__PURE__*/React.createElement(\"span\",{className:classnames(\"\".concat(className,\"__dialog__order-templates-line__container__create-new-line__image\"),'msc-create-order-template-icon')}),/*#__PURE__*/React.createElement(\"span\",{className:\"\".concat(className,\"__dialog__order-templates-line__container__create-new-line__text\")},addToOrderTemplateDialogResources.createNewOrderTemplateButtonText)),orderTemplates.map(function(orderTemplate,index){return/*#__PURE__*/React.createElement(OrderTemplateComponent,{key:index,className:\"\".concat(className,\"__dialog__order-templates-line\"),orderTemplate:orderTemplate,context:dialogProps.context,actionButtonText:addToOrderTemplateDialogResources.addToTemplateButtonText,lineItemsText:addToOrderTemplateDialogResources.lineItemsText,orderTemplateAction:onAddToOrderTemplateButtonClick});}))))));};export var AddToOrderTemplateDialog=function AddToOrderTemplateDialog(dialogProps){var setModalOpen=dialogProps.setModalOpen,orderTemplates=dialogProps.data.orderTemplates,className=dialogProps.className;var closeDialog=function closeDialog(){setModalOpen(false);};var _useState=useState(false),_useState2=_slicedToArray(_useState,2),createOrderTemplateDialogOpen=_useState2[0],setOrderTemplateNameDialogOpen=_useState2[1];var showOrderTemplateNameDialog=function showOrderTemplateNameDialog(){setModalOpen(false);setTimeout(function(){setOrderTemplateNameDialogOpen(true);},500);};var onCreateOrderTemplateCancel=function onCreateOrderTemplateCancel(){setTimeout(function(){setModalOpen(true);},500);};var addToOrderTemplateDialog;if(orderTemplates.length!==0){addToOrderTemplateDialog=renderAddToOrderTemplatesForExistingOrderTemplatesDialog(dialogProps,\"\".concat(className,\"__existing\"),closeDialog,showOrderTemplateNameDialog,dialogProps.onOrderTemplateSelected);}else{addToOrderTemplateDialog=renderAddToOrderTemplatesWhenEmptyOrderTemplatesDialog(dialogProps,\"\".concat(className,\"__empty\"),closeDialog,showOrderTemplateNameDialog);}return/*#__PURE__*/React.createElement(React.Fragment,null,addToOrderTemplateDialog,/*#__PURE__*/React.createElement(OrderTemplateNameDialog,{className:'msc-order-template-name-dialog',modalOpen:createOrderTemplateDialogOpen,isUpdateDialog:false,setModalOpen:setOrderTemplateNameDialogOpen,context:dialogProps.context,id:dialogProps.id,data:{},typeName:dialogProps.typeName,dialogStrings:dialogProps.createOrderTemplateDialogResources,onCancel:onCreateOrderTemplateCancel,onSuccess:dialogProps.onOrderTemplateSelected}));};","map":{"version":3,"sources":["order-template/add-to-order-template-dialog/add-to-order-template-dialog.component.tsx"],"names":[],"mappings":"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","sourcesContent":["import { OrderTemplate } from '@msdyn365-commerce-modules/retail-actions';\nimport { Button, Modal, ModalBody, ModalFooter, ModalHeader } from '@msdyn365-commerce-modules/utilities';\nimport { IComponentProps } from '@msdyn365-commerce/core';\nimport { ProductList } from '@msdyn365-commerce/retail-proxy';\nimport classnames from 'classnames';\nimport React, { useState } from 'react';\nimport { IOrderTemplateNameDialogResources, OrderTemplateNameDialog } from '../order-template-name-dialog/order-template-name-dialog.component';\nimport { OrderTemplateComponent } from '../order-templates-list/order-template-list';\n\nexport interface IAddToOrderTemplateDialogData {\n    orderTemplates: OrderTemplate[];\n}\n\nexport interface IAddToOrderTemplateDialogResources {\n    addToOrderTemplateHeader: string;\n\n    noOrderTemplatesMessage: string;\n    noOrderTemplatesDescription: string;\n\n    createAnOrderTemplateButtonText: string;\n    createNewOrderTemplateButtonText: string;\n    cancelOrderTemplateCreationButtonText: string;\n\n    selectTemplatesText: string;\n    addToTemplateButtonText: string;\n    lineItemsText: string;\n}\n\nexport interface IAddToOrderTemplateDialogProps extends IComponentProps<IAddToOrderTemplateDialogData> {\n    className: string;\n\n    addToOrderTemplateDialogResources: IAddToOrderTemplateDialogResources;\n    createOrderTemplateDialogResources: IOrderTemplateNameDialogResources;\n\n    modalOpen: boolean | undefined;\n    setModalOpen(newValue: boolean): void;\n    onOrderTemplateSelected(orderTemplate: ProductList): Promise<void>;\n}\n\nconst renderAddToOrderTemplatesWhenEmptyOrderTemplatesDialog = (\n    dialogProps: IAddToOrderTemplateDialogProps,\n    className: string,\n    closeDialog: () => void,\n    showOrderTemplateNameDialog: () => void) => {\n\n    const {\n        addToOrderTemplateDialogResources,\n        modalOpen\n    } = dialogProps;\n    return (\n        <React.Fragment>\n            <Modal isOpen={modalOpen} className={`${className}`}>\n                <ModalHeader className={`${className}__dialog__header`} toggle={closeDialog}>\n                    <span>{addToOrderTemplateDialogResources.addToOrderTemplateHeader}</span>\n                </ModalHeader>\n                <ModalBody className={`${className}__dialog__body`}>\n                    <div className={`${className}__dialog__content`}>\n                        <div className={`${className}__dialog__create-order-template-image-container`}>\n                            <div\n                                className={classnames('msc-create-order-template-icon', `${className}__dialog__create-order-template-image`)}\n                            />\n                        </div>\n                        <div className={`${className}__dialog__no-order-templates`}>{addToOrderTemplateDialogResources.noOrderTemplatesMessage}</div>\n                        <div className={`${className}__dialog__no-order-templates-description`}>{addToOrderTemplateDialogResources.noOrderTemplatesDescription}</div>\n                    </div>\n                </ModalBody>\n                <ModalFooter\n                    className={`${className}__dialog__footer`}\n                >\n                    <Button\n                        className={`${className}__dialog__create-order-template-button`}\n                        title={addToOrderTemplateDialogResources.createAnOrderTemplateButtonText}\n                        onClick={showOrderTemplateNameDialog}\n                    >\n                        {addToOrderTemplateDialogResources.createAnOrderTemplateButtonText}\n                    </Button>\n                    <Button\n                        className={`${className}__dialog__cancel-button`}\n                        title={addToOrderTemplateDialogResources.cancelOrderTemplateCreationButtonText}\n                        onClick={closeDialog}\n                    >\n                        {addToOrderTemplateDialogResources.cancelOrderTemplateCreationButtonText}\n                    </Button>\n                </ModalFooter>\n            </Modal>\n        </React.Fragment>\n    );\n};\n\nconst formatBold = (text: string, boldText: string) => {\n    const patternToFind = '{0}';\n    return (\n        <>{text.slice(0, text.indexOf(patternToFind))}<b>{boldText}</b>{text.slice(text.indexOf(patternToFind) + patternToFind.length)}</>\n    );\n};\n\nconst renderAddToOrderTemplatesForExistingOrderTemplatesDialog = (\n    dialogProps: IAddToOrderTemplateDialogProps,\n    className: string,\n    closeDialog: () => void,\n    showOrderTemplateNameDialog: () => void,\n    onAddToOrderTemplateButtonClick: (orderTemplate: ProductList) => Promise<void>) => {\n\n    const {\n        addToOrderTemplateDialogResources,\n        modalOpen,\n        data: { orderTemplates }\n    } = dialogProps;\n    return (\n        <React.Fragment>\n            <Modal isOpen={modalOpen} className={`${className}`}>\n                <ModalHeader className={`${className}__dialog__header`} toggle={closeDialog}>\n                    <span>{addToOrderTemplateDialogResources.addToOrderTemplateHeader}</span>\n                </ModalHeader>\n                <ModalBody className={`${className}__dialog__body`}>\n                    <div className={`${className}__dialog__content`}>\n                        <div className={`${className}__dialog__order-templates-description`}>\n                            {formatBold(addToOrderTemplateDialogResources.selectTemplatesText, orderTemplates.length.toString())}\n                        </div>\n                        <div className={`${className}__dialog__order-templates-container`}>\n                            <div\n                                role='button'\n                                className={\n                                    classnames(\n                                        `${className}__dialog__order-templates-line__container`,\n                                        `${className}__dialog__order-templates-line__container__create-new-line`)\n                                }\n                                onClick={showOrderTemplateNameDialog}\n                            >\n                                <span\n                                    className={classnames(`${className}__dialog__order-templates-line__container__create-new-line__image`, 'msc-create-order-template-icon')}\n                                />\n                                <span className={`${className}__dialog__order-templates-line__container__create-new-line__text`}>{addToOrderTemplateDialogResources.createNewOrderTemplateButtonText}</span>\n                            </div>\n                            {\n                                orderTemplates.map((orderTemplate, index) => {\n                                    return (\n                                        <OrderTemplateComponent\n                                            key={index}\n                                            className={`${className}__dialog__order-templates-line`}\n                                            orderTemplate={orderTemplate}\n                                            context={dialogProps.context}\n                                            actionButtonText={addToOrderTemplateDialogResources.addToTemplateButtonText}\n                                            lineItemsText={addToOrderTemplateDialogResources.lineItemsText}\n                                            orderTemplateAction={onAddToOrderTemplateButtonClick}\n                                        />\n                                    );\n                                })\n                            }\n                        </div>\n                    </div>\n                </ModalBody>\n            </Modal>\n        </React.Fragment>\n    );\n};\n\nexport const AddToOrderTemplateDialog = (dialogProps: IAddToOrderTemplateDialogProps) => {\n    const {\n        setModalOpen, data: { orderTemplates }, className\n    } = dialogProps;\n\n    const closeDialog = () => {\n        setModalOpen(false);\n    };\n\n    const [createOrderTemplateDialogOpen, setOrderTemplateNameDialogOpen] = useState(false);\n    const showOrderTemplateNameDialog = () => {\n        setModalOpen(false);\n        setTimeout(() => {\n            setOrderTemplateNameDialogOpen(true);\n        }, 500); // tslint:disable-line:align\n    };\n    const onCreateOrderTemplateCancel = () => {\n        setTimeout(() => {\n            setModalOpen(true);\n        }, 500); // tslint:disable-line:align\n    };\n\n    let addToOrderTemplateDialog: JSX.Element;\n    if (orderTemplates.length !== 0) {\n        addToOrderTemplateDialog = renderAddToOrderTemplatesForExistingOrderTemplatesDialog(\n            dialogProps,\n            `${className}__existing`,\n            closeDialog,\n            showOrderTemplateNameDialog,\n            dialogProps.onOrderTemplateSelected);\n    } else {\n        addToOrderTemplateDialog = renderAddToOrderTemplatesWhenEmptyOrderTemplatesDialog(\n            dialogProps,\n            `${className}__empty`,\n            closeDialog,\n            showOrderTemplateNameDialog);\n    }\n\n    return (\n        <>\n            {addToOrderTemplateDialog}\n            <OrderTemplateNameDialog\n                className={'msc-order-template-name-dialog'}\n                modalOpen={createOrderTemplateDialogOpen}\n                isUpdateDialog={false}\n                setModalOpen={setOrderTemplateNameDialogOpen}\n                context={dialogProps.context}\n                id={dialogProps.id}\n                data={{}}\n                typeName={dialogProps.typeName}\n                dialogStrings={dialogProps.createOrderTemplateDialogResources}\n                onCancel={onCreateOrderTemplateCancel}\n                onSuccess={dialogProps.onOrderTemplateSelected}\n            />\n        </>\n    );\n};"],"sourceRoot":"./src/"},"metadata":{},"sourceType":"module"}