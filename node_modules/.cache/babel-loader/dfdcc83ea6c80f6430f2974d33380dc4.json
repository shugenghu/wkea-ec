{"ast":null,"code":"/*!\r\n * Copyright (c) Microsoft Corporation.\r\n * All rights reserved. See LICENSE in the project root for license information.\r\n */ // Following reference is added to fix the build dependency between CommerceContxt and DataServiceQuery.\n// This will eventually be moved to CommerceContext.ts when MPOS proxy and Commerce Proxy are merged.\n'use strict';/**\r\n * Class for representing an error.\r\n */export class ProxyError{constructor(errorCode,errorMessage,localizedErrorMessage,canRetry,extraData){this._canRetry=false;this._errorCode=errorCode;this._errorMessage=errorMessage;this._localizedErrorMessage=localizedErrorMessage;this._canRetry=canRetry;this._commerceException=null;for(var _len=arguments.length,formatData=new Array(_len>5?_len-5:0),_key=5;_key<_len;_key++){formatData[_key-5]=arguments[_key];}this._formatData=formatData;this._extraData=extraData;}/**\r\n     * Takes a proxy error and returns a proper JS error version of it\r\n     * @param proxyError The proxyError\r\n     */static toError(proxyError){const e=new Error();e.name=proxyError.ErrorCode||'Proxy Error';e.message=proxyError.ErrorMessage||proxyError.LocalizedErrorMessage;// Assign extra error details to error.\n// ts-ignoring as the standard error contract only supports name and message\nif(proxyError.extraData){// @ts-ignore\ne.requestUri=proxyError.extraData.requestUri;// @ts-ignore\ne.data=proxyError.extraData.data;// @ts-ignore\ne.statusCode=proxyError.extraData.statusCode;}return e;}/**\r\n     * Gets the commerce exception that caused this error.\r\n     *\r\n     * @return {any} The commerce exception.\r\n     */get commerceException(){return this._commerceException;}/**\r\n     * Sets the commerce exception that caused this error.\r\n     *\r\n     * @param {any} exception The commerce exception.\r\n     */set commerceException(exception){this._commerceException=exception;}/**\r\n     * Gets the error code.\r\n     *\r\n     * @return {string} The error code.\r\n     */get ErrorCode(){return this._errorCode;}/**\r\n     * Gets the error message.\r\n     *\r\n     * @return {string} The error message.\r\n     */get ErrorMessage(){return this._errorMessage;}/**\r\n     * Gets the localized error message.\r\n     *\r\n     * @return {string} The localized error message.\r\n     */get LocalizedErrorMessage(){return this._localizedErrorMessage;}/**\r\n     * Gets the format data used on formatted error messages.\r\n     *\r\n     * @return {any[]} The format data.\r\n     */get formatData(){return this._formatData;}/**\r\n     * Gets the additional information the might be supplied by the error.\r\n     *\r\n     * @return {any} The extra data.\r\n     */get extraData(){return this._extraData;}/**\r\n     * Gets the error title. Defaults to the resource string string_29004 for the error title if\r\n     * no error title is mapped for the error.\r\n     */get ErrorTitleResourceId(){const errorTitleResourceId='string_29004';// Error string: There is a problem with the server\nreturn errorTitleResourceId;}/**\r\n     * Gets whether the action that generated the error can be retried.\r\n     *\r\n     * @return {string} Whether the action that generated the error can be retried.\r\n     */get CanRetry(){return this._canRetry;}}","map":{"version":3,"sources":["../../src/exceptions/ProxyError.ts"],"names":[],"mappings":"AAAA;;;AAGG,G,CAEH;AACA;AAEA,aAEA;;AAEG,GACH,MAAM,MAAO,CAAA,UAAU,CASnB,WAAA,CACI,SADJ,CAEI,YAFJ,CAGI,qBAHJ,CAII,QAJJ,CAKI,SALJ,CAMwB,CAXhB,KAAA,SAAA,CAAqB,KAArB,CAaJ,KAAK,UAAL,CAAkB,SAAlB,CACA,KAAK,aAAL,CAAqB,YAArB,CACA,KAAK,sBAAL,CAA8B,qBAA9B,CACA,KAAK,SAAL,CAAiB,QAAjB,CACA,KAAK,kBAAL,CAA0B,IAA1B,CANoB,8BAAjB,UAAiB,qDAAjB,UAAiB,0BAOpB,KAAK,WAAL,CAAmB,UAAnB,CACA,KAAK,UAAL,CAAkB,SAAlB,CACH,CAED;;;AAGG,OACI,MAAO,CAAA,OAAP,CAAe,UAAf,CAAqC,CACxC,KAAM,CAAA,CAAC,CAAG,GAAI,CAAA,KAAJ,EAAV,CACA,CAAC,CAAC,IAAF,CAAS,UAAU,CAAC,SAAX,EAAwB,aAAjC,CACA,CAAC,CAAC,OAAF,CAAY,UAAU,CAAC,YAAX,EAA2B,UAAU,CAAC,qBAAlD,CAEA;AACA;AACA,GAAI,UAAU,CAAC,SAAf,CAA0B,CACtB;AACA,CAAC,CAAC,UAAF,CAAe,UAAU,CAAC,SAAX,CAAqB,UAApC,CAEA;AACA,CAAC,CAAC,IAAF,CAAS,UAAU,CAAC,SAAX,CAAqB,IAA9B,CAEA;AACA,CAAC,CAAC,UAAF,CAAe,UAAU,CAAC,SAAX,CAAqB,UAApC,CACH,CAED,MAAO,CAAA,CAAP,CACH,CAED;;;;AAIG,OACH,GAAW,CAAA,iBAAX,EAA4B,CACxB,MAAO,MAAK,kBAAZ,CACH,CAED;;;;AAIG,OACH,GAAW,CAAA,iBAAX,CAA6B,SAA7B,CAA2C,CACvC,KAAK,kBAAL,CAA0B,SAA1B,CACH,CAED;;;;AAIG,OACH,GAAW,CAAA,SAAX,EAAoB,CAChB,MAAO,MAAK,UAAZ,CACH,CAED;;;;AAIG,OACH,GAAW,CAAA,YAAX,EAAuB,CACnB,MAAO,MAAK,aAAZ,CACH,CAED;;;;AAIG,OACH,GAAW,CAAA,qBAAX,EAAgC,CAC5B,MAAO,MAAK,sBAAZ,CACH,CAED;;;;AAIG,OACH,GAAW,CAAA,UAAX,EAAqB,CACjB,MAAO,MAAK,WAAZ,CACH,CAED;;;;AAIG,OACH,GAAW,CAAA,SAAX,EAAoB,CAChB,MAAO,MAAK,UAAZ,CACH,CAED;;;AAGG,OACH,GAAW,CAAA,oBAAX,EAA+B,CAC3B,KAAM,CAAA,oBAAoB,CAAG,cAA7B,CAA6C;AAC7C,MAAO,CAAA,oBAAP,CACH,CAED;;;;AAIG,OACH,GAAW,CAAA,QAAX,EAAmB,CACf,MAAO,MAAK,SAAZ,CACH,CAlIkB","sourcesContent":["/*!\n * Copyright (c) Microsoft Corporation.\n * All rights reserved. See LICENSE in the project root for license information.\n */\n\n// Following reference is added to fix the build dependency between CommerceContxt and DataServiceQuery.\n// This will eventually be moved to CommerceContext.ts when MPOS proxy and Commerce Proxy are merged.\n\n'use strict';\n\n/**\n * Class for representing an error.\n */\nexport class ProxyError {\n    private _errorCode: string;\n    private _errorMessage: string;\n    private _localizedErrorMessage: string;\n    private _canRetry: boolean = false;\n    private _commerceException: any;\n    private _formatData: any[];\n    private _extraData: any;\n\n    constructor(\n        errorCode: string,\n        errorMessage: string,\n        localizedErrorMessage,\n        canRetry: boolean,\n        extraData: any,\n        ...formatData: any[]\n    ) {\n        this._errorCode = errorCode;\n        this._errorMessage = errorMessage;\n        this._localizedErrorMessage = localizedErrorMessage;\n        this._canRetry = canRetry;\n        this._commerceException = null;\n        this._formatData = formatData;\n        this._extraData = extraData;\n    }\n\n    /**\n     * Takes a proxy error and returns a proper JS error version of it\n     * @param proxyError The proxyError\n     */\n    public static toError(proxyError: ProxyError): Error {\n        const e = new Error();\n        e.name = proxyError.ErrorCode || 'Proxy Error';\n        e.message = proxyError.ErrorMessage || proxyError.LocalizedErrorMessage;\n\n        // Assign extra error details to error.\n        // ts-ignoring as the standard error contract only supports name and message\n        if (proxyError.extraData) {\n            // @ts-ignore\n            e.requestUri = proxyError.extraData.requestUri;\n\n            // @ts-ignore\n            e.data = proxyError.extraData.data;\n\n            // @ts-ignore\n            e.statusCode = proxyError.extraData.statusCode;\n        }\n\n        return e;\n    }\n\n    /**\n     * Gets the commerce exception that caused this error.\n     *\n     * @return {any} The commerce exception.\n     */\n    public get commerceException(): any {\n        return this._commerceException;\n    }\n\n    /**\n     * Sets the commerce exception that caused this error.\n     *\n     * @param {any} exception The commerce exception.\n     */\n    public set commerceException(exception: any) {\n        this._commerceException = exception;\n    }\n\n    /**\n     * Gets the error code.\n     *\n     * @return {string} The error code.\n     */\n    public get ErrorCode(): string {\n        return this._errorCode;\n    }\n\n    /**\n     * Gets the error message.\n     *\n     * @return {string} The error message.\n     */\n    public get ErrorMessage(): string {\n        return this._errorMessage;\n    }\n\n    /**\n     * Gets the localized error message.\n     *\n     * @return {string} The localized error message.\n     */\n    public get LocalizedErrorMessage(): string {\n        return this._localizedErrorMessage;\n    }\n\n    /**\n     * Gets the format data used on formatted error messages.\n     *\n     * @return {any[]} The format data.\n     */\n    public get formatData(): any[] {\n        return this._formatData;\n    }\n\n    /**\n     * Gets the additional information the might be supplied by the error.\n     *\n     * @return {any} The extra data.\n     */\n    public get extraData(): any {\n        return this._extraData;\n    }\n\n    /**\n     * Gets the error title. Defaults to the resource string string_29004 for the error title if\n     * no error title is mapped for the error.\n     */\n    public get ErrorTitleResourceId(): string {\n        const errorTitleResourceId = 'string_29004'; // Error string: There is a problem with the server\n        return errorTitleResourceId;\n    }\n\n    /**\n     * Gets whether the action that generated the error can be retried.\n     *\n     * @return {string} Whether the action that generated the error can be retried.\n     */\n    public get CanRetry(): boolean {\n        return this._canRetry;\n    }\n}\n"],"sourceRoot":""},"metadata":{},"sourceType":"module"}