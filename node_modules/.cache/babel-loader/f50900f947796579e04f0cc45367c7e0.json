{"ast":null,"code":"import _classCallCheck from\"@babel/runtime/helpers/esm/classCallCheck\";import _createClass from\"@babel/runtime/helpers/esm/createClass\";import _assertThisInitialized from\"@babel/runtime/helpers/esm/assertThisInitialized\";import _inherits from\"@babel/runtime/helpers/esm/inherits\";import _possibleConstructorReturn from\"@babel/runtime/helpers/esm/possibleConstructorReturn\";import _getPrototypeOf from\"@babel/runtime/helpers/esm/getPrototypeOf\";function _createForOfIteratorHelper(o,allowArrayLike){var it;if(typeof Symbol===\"undefined\"||o[Symbol.iterator]==null){if(Array.isArray(o)||(it=_unsupportedIterableToArray(o))||allowArrayLike&&o&&typeof o.length===\"number\"){if(it)o=it;var i=0;var F=function F(){};return{s:F,n:function n(){if(i>=o.length)return{done:true};return{done:false,value:o[i++]};},e:function e(_e){throw _e;},f:F};}throw new TypeError(\"Invalid attempt to iterate non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");}var normalCompletion=true,didErr=false,err;return{s:function s(){it=o[Symbol.iterator]();},n:function n(){var step=it.next();normalCompletion=step.done;return step;},e:function e(_e2){didErr=true;err=_e2;},f:function f(){try{if(!normalCompletion&&it[\"return\"]!=null)it[\"return\"]();}finally{if(didErr)throw err;}}};}function _unsupportedIterableToArray(o,minLen){if(!o)return;if(typeof o===\"string\")return _arrayLikeToArray(o,minLen);var n=Object.prototype.toString.call(o).slice(8,-1);if(n===\"Object\"&&o.constructor)n=o.constructor.name;if(n===\"Map\"||n===\"Set\")return Array.from(o);if(n===\"Arguments\"||/^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n))return _arrayLikeToArray(o,minLen);}function _arrayLikeToArray(arr,len){if(len==null||len>arr.length)len=arr.length;for(var i=0,arr2=new Array(len);i<len;i++){arr2[i]=arr[i];}return arr2;}function _createSuper(Derived){var hasNativeReflectConstruct=_isNativeReflectConstruct();return function _createSuperInternal(){var Super=_getPrototypeOf(Derived),result;if(hasNativeReflectConstruct){var NewTarget=_getPrototypeOf(this).constructor;result=Reflect.construct(Super,arguments,NewTarget);}else{result=Super.apply(this,arguments);}return _possibleConstructorReturn(this,result);};}function _isNativeReflectConstruct(){if(typeof Reflect===\"undefined\"||!Reflect.construct)return false;if(Reflect.construct.sham)return false;if(typeof Proxy===\"function\")return true;try{Date.prototype.toString.call(Reflect.construct(Date,[],function(){}));return true;}catch(e){return false;}}import{getPayloadObject,onTelemetryClick,Waiting}from'@msdyn365-commerce-modules/utilities';import*as React from'react';import*as MsDyn365 from'@msdyn365-commerce/core';import AgeGate from'../../components/age-gate/AgeGate';import ClosedCaptions from'../../components/closed-captions/video-closed-captions';import{closedCaptionsSettingDefaults,videoClosedCaptionsConstant}from'../../components/closed-captions/video-closed-captions-settings';import{MediaEvents,MenuCategories,PlayerConstants,VideoErrorCodes,VideoPlayerNames}from'../../components/data/player-constants';import{ClosedCaptionTypes}from'../../components/data/player-metadata';import ClosedCaptionHelper from'../../components/helper/closedCaptionHelper';import LocalizationHelper,{LocalizationConstants}from'../../components/helper/localization-helper';import PlayerHelper from'../../components/helper/playerHelper';import PlayPauseTrigger from'../../components/play-pause-trigger/PlayPauseTrigger';import{format,isNullOrWhiteSpace}from'../../components/utilities/stringExtensions';import VideoControls from'../../components/video-controls/VideoControls';var Player=/*#__PURE__*/function(_React$Component){_inherits(Player,_React$Component);var _super=_createSuper(Player);function Player(props){var _this;_classCallCheck(this,Player);_this=_super.call(this,props);_this.controlPanelTimer=0;_this.player=/*#__PURE__*/React.createRef();_this.audio=/*#__PURE__*/React.createRef();_this.playerContainer=/*#__PURE__*/React.createRef();_this.videoControl=/*#__PURE__*/React.createRef();_this.ClosedCaptions=/*#__PURE__*/React.createRef();_this.ageGateContainer=/*#__PURE__*/React.createRef();_this.videoUrl='';_this.posterFrameUrl='';_this.seekFrom=null;_this.closedCaptionHelper=null;_this.closedCaptionMenu=null;_this.optionsMenu=null;_this.selectedClosedCaptionsLocale='';_this.isPlayerManuallyPaused=false;_this.isPlayerLoaded=false;_this._renderClosedCaptions=function(){return/*#__PURE__*/React.createElement(ClosedCaptions,{ref:_this.ClosedCaptions,className:\"\".concat(VideoPlayerNames.videoplayerContainer,\"__ccoverlay\"),showClosedCaptions:_this.state.showClosedCaptions,currentTime:_this.state.playPosition.currentTime,ccLanguage:_this.state.closedCaptionLanguage,ccURL:_this.state.closedCaptionsURL,errorCallback:_this.playerHelper.onErrorCallback,isVideoControlVisible:_this.state.isControlPanelVisible||_this.state.doControlsHaveFocus,currentClosedCaptionsSettings:_this.state.currentClosedCaptionsSettings,tempClosedCaptionsSettings:_this.state.tempClosedCaptionsSettings,onClosedCaptionClick:_this._onTriggerClicked});};_this._renderPlayPauseTrigger=function(playAriaLabel,maskLevelStyle){return/*#__PURE__*/React.createElement(PlayPauseTrigger,{className:\"\".concat(VideoPlayerNames.videoplayerContainer,\"__playpausetrigger\"),style:maskLevelStyle,onChange:_this._onTriggerClicked,toggled:_this.state.playing,\"aria-hidden\":!_this.state.mouseHovered,playAriaLabel:playAriaLabel,pauseAriaLabel:_this.localizationHelper.getLocalizedValue('pauseAriaLabel'),onFocus:_this._onTriggerFocus,onBlur:_this._onTriggerBlur,telemetryContent:_this.props.telemetryContent});};_this._renderVideoControls=function(playAriaLabel){return/*#__PURE__*/React.createElement(VideoControls,{ref:_this.videoControl,className:\"\".concat(VideoPlayerNames.videoplayerContainer,\"__controls \").concat(_this.state.isControlPanelVisible||_this.state.doControlsHaveFocus?'show':'hide'),\"aria-hidden\":!(_this.state.isControlPanelVisible||_this.state.doControlsHaveFocus),onPlayClick:_this._onTriggerClicked,playing:_this.state.playing,closedCaptionMenu:_this.closedCaptionMenu,optionMenu:_this.optionsMenu,videoSeekSteps:PlayerConstants.defaultVideoSliderSteps,volumeSeekSteps:PlayerConstants.defaultVolumeSliderSteps,isMuted:_this.state.isMuted,onMuteClick:_this._setMuted,onVolumeChange:_this._onVolumeChange,onProgressChange:_this._onProgressChange,playPosition:_this.state.playPosition,currentClosedCaptionLanguage:_this.state.closedCaptionLanguage,currentVolume:_this.state.currentVolume,isInFullScreen:_this.state.isInFullScreen,toggleFullScreen:_this._toggleFullScreen,handleControlsKeyDownHandler:_this._handleControlsKeyDownEvent,isControlPanelVisible:_this.state.isControlPanelVisible||_this.state.doControlsHaveFocus,onFocus:_this._onVideoControlsFocus,onBlur:_this._onVideoControlsBlur,onMenuItemClick:_this._onPlayerMenuItemClick,onMenuItemFocus:_this._onPlayerMenuItemFocus,onMenuItemBlur:_this._onPlayerMenuItemBlur,currentAudioTrack:_this.state.currentAudioTrack,currentAudioTrackURL:_this.state.currentAudioTrackURL,currentClosedCaptionsSetting:_this.state.currentClosedCaptionsSettings,isMobileDevice:_this.isMobileDevice,telemetryContent:_this.props.telemetryContent,resources:{playAriaLabel:playAriaLabel,pauseAriaLabel:_this.localizationHelper.getLocalizedValue('pauseAriaLabel'),muteAriaLabel:_this.localizationHelper.getLocalizedValue('muteAriaLabel'),unMuteAriaLabel:_this.localizationHelper.getLocalizedValue('unMuteAriaLabel'),fullScreenAriaLabel:_this.localizationHelper.getLocalizedValue('fullScreenAriaLabel'),exitFullScreenAriaLabel:_this.localizationHelper.getLocalizedValue('exitFullScreenAriaLabel'),seekBarLabel:_this.localizationHelper.getLocalizedValue('seekBarLabel'),videoTimeDurationLabel:_this.localizationHelper.getLocalizedValue('videoTimeDurationLabel'),closedCaptionLabel:_this.localizationHelper.getLocalizedValue('closedCaptionLabel'),optionButtonLabel:_this.localizationHelper.getLocalizedValue('optionAriaLabel')}});};_this._renderAgeGate=function(){return/*#__PURE__*/React.createElement(AgeGate,{ref:_this.ageGateContainer,onSubmitClick:_this._validateAgeSubmitHandler,\"aria-hidden\":!_this.state.isAgegateEnabled,minmumAge:_this.playerMetaData.minimumAge});};_this.isMobileDevice=_this._isMobile();var state={playing:false,mouseHovered:_this.props.playerData.options.playPauseTrigger||!_this.props.playerData.options.autoplay,isControlPanelVisible:!_this.props.playerData.options.playPauseTrigger,doControlsHaveFocus:false,isTriggerEnabled:_this.props.playerData.options.playPauseTrigger&&!_this.props.playerData.options.autoplay&&_this.props.playerData.options.controls,currentVolume:_this.props.playerData.options.mute&&!_this.isMobileDevice?0:PlayerConstants.defaultVolume*100,previousVolume:0,isMuted:_this.props.playerData.options.mute||false,isInFullScreen:false,showSpinner:false,isAgegateEnabled:_this.props.playerData.options.ageGate&&!_this.props.playerData.options.autoplay,showErrorMessage:false,screenReaderText:'',closedCaptionLanguage:'off',currentAudioTrack:'default',currentAudioTrackURL:'',showClosedCaptions:false,mounted:false,currentClosedCaptionsSettings:{preset:closedCaptionsSettingDefaults.preset,text_font:closedCaptionsSettingDefaults.text_font,text_color:closedCaptionsSettingDefaults.text_color,text_opacity:closedCaptionsSettingDefaults.text_opacity,text_size:closedCaptionsSettingDefaults.text_size,text_edge_style:closedCaptionsSettingDefaults.text_edge_style,text_background_color:closedCaptionsSettingDefaults.text_background_color,text_background_opacity:closedCaptionsSettingDefaults.text_background_opacity,window_color:closedCaptionsSettingDefaults.window_color,window_opacity:closedCaptionsSettingDefaults.window_opacity},closedCaptionsURL:'',videoErrorMessage:{title:'',message:''},playPosition:{currentTime:0,startTime:0,endTime:0,bufferedDuration:0},tempClosedCaptionsSettings:undefined};_this.playerState='init';_this._onTriggerClicked=_this._onTriggerClicked.bind(_assertThisInitialized(_this));_this._onMouseEvent=_this._onMouseEvent.bind(_assertThisInitialized(_this));_this._onPlay=_this._onPlay.bind(_assertThisInitialized(_this));_this._onPause=_this._onPause.bind(_assertThisInitialized(_this));_this._triggerEvents=_this._triggerEvents.bind(_assertThisInitialized(_this));_this._triggerAudioEvents=_this._triggerAudioEvents.bind(_assertThisInitialized(_this));_this._onProgressChange=_this._onProgressChange.bind(_assertThisInitialized(_this));_this._setMuted=_this._setMuted.bind(_assertThisInitialized(_this));_this._onVolumeChange=_this._onVolumeChange.bind(_assertThisInitialized(_this));_this._onFullScreenChanged=_this._onFullScreenChanged.bind(_assertThisInitialized(_this));_this._toggleFullScreen=_this._toggleFullScreen.bind(_assertThisInitialized(_this));_this._showControlBar=_this._showControlBar.bind(_assertThisInitialized(_this));_this._handleControlsKeyDownEvent=_this._handleControlsKeyDownEvent.bind(_assertThisInitialized(_this));_this._onFullscreenError=_this._onFullscreenError.bind(_assertThisInitialized(_this));_this._onPlayerKeyDown=_this._onPlayerKeyDown.bind(_assertThisInitialized(_this));_this._onTriggerFocus=_this._onTriggerFocus.bind(_assertThisInitialized(_this));_this._onTriggerBlur=_this._onTriggerBlur.bind(_assertThisInitialized(_this));_this._onVideoControlsFocus=_this._onVideoControlsFocus.bind(_assertThisInitialized(_this));_this._onVideoControlsBlur=_this._onVideoControlsBlur.bind(_assertThisInitialized(_this));_this._onPlayerMenuItemClick=_this._onPlayerMenuItemClick.bind(_assertThisInitialized(_this));_this._onPlayerMenuItemFocus=_this._onPlayerMenuItemFocus.bind(_assertThisInitialized(_this));_this._onPlayerMenuItemBlur=_this._onPlayerMenuItemBlur.bind(_assertThisInitialized(_this));_this._validateAgeSubmitHandler=_this._validateAgeSubmitHandler.bind(_assertThisInitialized(_this));_this._onContextMenuClicked=_this._onContextMenuClicked.bind(_assertThisInitialized(_this));_this.localizationHelper=new LocalizationHelper(_this.props.playerResources);_this.playerHelper=new PlayerHelper(_this.props,_this.localizationHelper);_this.playerId=_this.playerHelper.isEmptyOrUndefined(_this.props.playerId)?'vid-0':_this.props.playerId;_this.playerMetaData=_this.playerHelper.getMetadata();_this.state=state;_this.posterFrameUrl=_this.playerHelper.getPosterFrameUrl();_this.payLoad=getPayloadObject('click',_this.props.telemetryContent,'');return _this;}_createClass(Player,[{key:\"render\",value:function render(){var maskLevelStyle={};if(this.state.isTriggerEnabled){maskLevelStyle.backgroundColor=this._getMaskLevelStyle();}if(this.props.isEditor){this.playerHelper.updatePlayerProps(this.props);this.playerMetaData=this.playerHelper.getMetadata();if(this.posterFrameUrl!==this.playerHelper.getPosterFrameUrl()){this.posterFrameUrl=this.playerHelper.getPosterFrameUrl();}if(this.isPlayerLoaded&&this.videoUrl!==this.playerHelper.getVideoFileToPlay().url){this._loadPlayer();}}var playAriaLabel='';if(this.playerMetaData.title){playAriaLabel=\"\".concat(this.localizationHelper.getLocalizedValue('playAriaLabel'),\" \").concat(this.playerMetaData.title);}else{playAriaLabel=LocalizationConstants.playVideoAriaLabel;}return/*#__PURE__*/React.createElement(\"div\",{role:'none',className:\"\".concat(VideoPlayerNames.videoplayerContainer),ref:this.playerContainer,onKeyDown:this._onPlayerKeyDown,onMouseEnter:this._onMouseEvent,onMouseLeave:this._onMouseEvent,\"data-playerid\":this.playerId},/*#__PURE__*/React.createElement(\"div\",{className:\"\".concat(VideoPlayerNames.videoplayerContainer,\"__wrapper\")},this.state.currentAudioTrack!==''&&this.state.currentAudioTrackURL!==''&&/*#__PURE__*/React.createElement(\"audio\",{ref:this.audio,preload:'auto',src:this.state.currentAudioTrackURL,muted:this.state.isMuted,loop:this.props.playerData.options.loop}),/*#__PURE__*/React.createElement(\"video\",{className:\"\".concat(VideoPlayerNames.videoplayerContainer,\"__video\"),ref:this.player,preload:'metadata',autoPlay:this.props.playerData.options.autoplay,muted:this.state.isMuted,loop:this.props.playerData.options.loop,onPlay:this._onPlay,onPause:this._onPause,onClick:!this.state.isAgegateEnabled?this._onTriggerClicked:this._onPause,role:'none',src:this.state.mounted?this.videoUrl:'',onContextMenu:this._onContextMenuClicked,poster:this.state.mounted?this.posterFrameUrl:'',playsInline:true}),/*#__PURE__*/React.createElement(\"div\",{className:\"\".concat(VideoPlayerNames.videoplayerContainer,\"__errormessage\"),role:'status',\"aria-hidden\":!this.state.showErrorMessage},/*#__PURE__*/React.createElement(\"div\",{className:\"\".concat(VideoPlayerNames.videoplayerContainer,\"__errormessage__wrapper\")},/*#__PURE__*/React.createElement(\"p\",{className:\"\".concat(VideoPlayerNames.videoplayerContainer,\"__errormessage__heading\")},this.state.videoErrorMessage.title))),/*#__PURE__*/React.createElement(\"div\",{className:\"\".concat(VideoPlayerNames.videoplayerContainer,\"__screenreader\"),\"aria-live\":'assertive'},this.state.screenReaderText),/*#__PURE__*/React.createElement(\"div\",{className:\"\".concat(VideoPlayerNames.videoplayerContainer,\"__spinner\"),role:'status',\"aria-hidden\":!this.state.showSpinner},/*#__PURE__*/React.createElement(Waiting,{className:\"\".concat(VideoPlayerNames.videoplayerContainer,\"__waiting\")})),this.props.playerData.options.ageGate&&this._renderAgeGate(),(this.props.playerData.options.playPauseTrigger&&!this.props.playerData.options.controls||this.state.isTriggerEnabled&&!this.state.isAgegateEnabled)&&this._renderPlayPauseTrigger(playAriaLabel,maskLevelStyle),this.state.showClosedCaptions&&this._renderClosedCaptions(),this.props.playerData.options.controls&&!this.state.isTriggerEnabled&&!this.state.isAgegateEnabled&&this._renderVideoControls(playAriaLabel)));}},{key:\"play\",value:function play(){var _this2=this;this.player.current.play()[\"catch\"](function(){_this2._onVideoError();});if(this.audio.current){this.audio.current.play()[\"catch\"](function(){_this2._onAudioError();});}}},{key:\"pause\",value:function pause(){this.player.current.pause();if(this.audio.current){this.audio.current.pause();}}},{key:\"componentDidMount\",value:function componentDidMount(){this.setState({mounted:true});if(this.props.playerData.options.autoplay||this.props.playerData.options.lazyLoad&&!this.props.playerData.options.playPauseTrigger||!this.props.playerData.options.lazyLoad){this._loadPlayer();}document.addEventListener('fullscreenchange',this._onFullScreenChanged);document.addEventListener('mozfullscreenchange',this._onFullScreenChanged);document.addEventListener('webkitfullscreenchange',this._onFullScreenChanged);document.addEventListener('MSFullscreenChange',this._onFullScreenChanged);document.addEventListener('fullscreenerror',this._onFullscreenError);document.addEventListener('mozfullscreenerror',this._onFullscreenError);document.addEventListener('webkitfullscreenerror',this._onFullscreenError);document.addEventListener('MSFullscreenError',this._onFullscreenError);}},{key:\"componentWillUnmount\",value:function componentWillUnmount(){if(this.player.current){var _iterator=_createForOfIteratorHelper(MediaEvents),_step;try{for(_iterator.s();!(_step=_iterator.n()).done;){var mediaEvent=_step.value;this.player.current.removeEventListener(mediaEvent,this._triggerEvents);}}catch(err){_iterator.e(err);}finally{_iterator.f();}}document.removeEventListener('fullscreenchange',this._onFullScreenChanged);document.removeEventListener('mozfullscreenchange',this._onFullScreenChanged);document.removeEventListener('webkitfullscreenchange',this._onFullScreenChanged);document.removeEventListener('MSFullscreenChange',this._onFullScreenChanged);document.removeEventListener('fullscreenerror',this._onFullscreenError);document.removeEventListener('mozfullscreenerror',this._onFullscreenError);document.removeEventListener('webkitfullscreenerror',this._onFullscreenError);document.removeEventListener('MSFullscreenError',this._onFullscreenError);}},{key:\"_loadPlayer\",value:function _loadPlayer(){if(this.player.current){this.player.current.volume=this.state.currentVolume/100;var _iterator2=_createForOfIteratorHelper(MediaEvents),_step2;try{for(_iterator2.s();!(_step2=_iterator2.n()).done;){var mediaEvent=_step2.value;this.player.current.addEventListener(mediaEvent,this._triggerEvents);}}catch(err){_iterator2.e(err);}finally{_iterator2.f();}}this.videoUrl=this.playerHelper.getVideoFileToPlay().url;this.player.current.load();this.isPlayerLoaded=true;if(this.props.playerData.options.controls){this.closedCaptionHelper=new ClosedCaptionHelper(this.playerMetaData,this.playerHelper,this.localizationHelper);this.closedCaptionMenu=this.closedCaptionHelper.getClosedCaptionMenu();this.optionsMenu=this.playerHelper.getOptionMenu();var ccFiles=this.playerMetaData.ccFiles;if(ccFiles!==undefined&&ccFiles.length>0){var autoCaptionsLang=this.props.playerData&&this.props.playerData.options.autoCaptions;var autoCaptionsLocale=null;var _iterator3=_createForOfIteratorHelper(ccFiles),_step3;try{for(_iterator3.s();!(_step3=_iterator3.n()).done;){var ccFile=_step3.value;if(!autoCaptionsLocale&&autoCaptionsLang&&ccFile.locale.indexOf(autoCaptionsLang)>-1){autoCaptionsLocale=ccFile.locale;}}}catch(err){_iterator3.e(err);}finally{_iterator3.f();}this.selectedClosedCaptionsLocale=autoCaptionsLocale;if(!isNullOrWhiteSpace(this.selectedClosedCaptionsLocale)){this.setState({closedCaptionLanguage:this.selectedClosedCaptionsLocale,closedCaptionsURL:this.closedCaptionHelper.getClosedCaptionURLFromLocale(this.selectedClosedCaptionsLocale),showClosedCaptions:true});}}}}},{key:\"_validateAgeSubmitHandler\",value:function _validateAgeSubmitHandler(){if(this.ageGateContainer.current.getCalculatedAge()){this.videoUrl=this.playerHelper.getVideoFileToPlay().url;this.setState({isAgegateEnabled:false});}else{this.setState({isAgegateEnabled:true});this._displayErrorMessage({title:'you are not allowed to watch video'});}}},{key:\"_onVideoControlsFocus\",value:function _onVideoControlsFocus(){this.setState({doControlsHaveFocus:true});}},{key:\"_onVideoControlsBlur\",value:function _onVideoControlsBlur(){this._showControlBar(true);this.setState({doControlsHaveFocus:false});}},{key:\"_onPlayerMenuItemFocus\",value:function _onPlayerMenuItemFocus(notification){var _this3=this;if(notification.data&&notification.data.indexOf(':')>0){var dataSplit=notification.data.split(':');var settingKey=dataSplit[0];if(settingKey===videoClosedCaptionsConstant.presetKey){if(this.state.closedCaptionLanguage==='off'){this.setState({showClosedCaptions:true},function(){_this3.ClosedCaptions.current.showSampleCaptions();_this3._setCCSettings(notification,false);});}else{this._setCCSettings(notification,false);}}}else{if(this.state.closedCaptionLanguage==='off'){this.setState({showClosedCaptions:false});}}}},{key:\"_onPlayerMenuItemBlur\",value:function _onPlayerMenuItemBlur(){this._setCCSettings({category:MenuCategories.ClosedCaptionSettings,id:'',data:'current'});}},{key:\"_onPlayerMenuItemClick\",value:function _onPlayerMenuItemClick(notification){switch(notification.category){case MenuCategories.ClosedCaption:{this._setCC(notification.id);break;}case MenuCategories.ClosedCaptionSettings:{this._setCCSettings(notification);break;}case MenuCategories.AudioTracks:{this._setAudioTracks(notification);}}}},{key:\"_setCC\",value:function _setCC(ccLanguageId){ccLanguageId=this.playerHelper.removeIdPrefix(ccLanguageId);var selectedOption=null;if(ccLanguageId&&this.playerMetaData.ccFiles){var _iterator4=_createForOfIteratorHelper(this.playerMetaData.ccFiles),_step4;try{for(_iterator4.s();!(_step4=_iterator4.n()).done;){var ccFile=_step4.value;if(ccFile.locale===ccLanguageId&&(!ccFile.ccType||ccFile.ccType===ClosedCaptionTypes.TTML)){selectedOption=ccFile;break;}}}catch(err){_iterator4.e(err);}finally{_iterator4.f();}}if(ccLanguageId==='off'){this.setState({closedCaptionLanguage:'off',closedCaptionsURL:'',showClosedCaptions:false});}else{this.setState({closedCaptionLanguage:selectedOption.locale,closedCaptionsURL:selectedOption.url,showClosedCaptions:true});}}},{key:\"_setCCSettings\",value:function _setCCSettings(notification,updatePreferences){var _this4=this;if(notification.data==='reset'){this.setState({currentClosedCaptionsSettings:closedCaptionsSettingDefaults},function(){if(_this4.ClosedCaptions.current!==null){_this4.ClosedCaptions.current.applySettings();_this4.ClosedCaptions.current.resetCaptions();_this4.ClosedCaptions.current.updateCaptions(_this4.state.playPosition.currentTime);}});}else if(notification.data==='current'){this.setState({tempClosedCaptionsSettings:undefined});if(this.state.closedCaptionLanguage==='off'){this.setState({showClosedCaptions:false});}}else{var dataSplit=notification.data.split(':');if(!dataSplit){return;}var settingKey=dataSplit[0];var optionKey=dataSplit[1];var currentSetting=this.closedCaptionHelper.getUpdatedClosedCaptionSetting(this.state.currentClosedCaptionsSettings,settingKey,optionKey);if(updatePreferences===undefined||updatePreferences){this.setState({tempClosedCaptionsSettings:undefined,currentClosedCaptionsSettings:currentSetting},function(){if(_this4.ClosedCaptions.current){_this4.ClosedCaptions.current.applySettings();_this4.ClosedCaptions.current.resetCaptions();_this4.ClosedCaptions.current.updateCaptions(_this4.state.playPosition.currentTime);}});}else{this.setState({tempClosedCaptionsSettings:currentSetting});}}}},{key:\"_setAudioTracks\",value:function _setAudioTracks(notification){var _this5=this;var data=JSON.parse(notification.data);if(data.lang==='default'){this.setState({currentAudioTrack:'default',currentAudioTrackURL:''},function(){_this5.player.current.volume=_this5.state.currentVolume/100;});}else{this.setState({currentAudioTrack:data.lang,currentAudioTrackURL:data.url},function(){_this5.audio.current.currentTime=_this5.player.current.currentTime;_this5.audio.current.volume=_this5.state.currentVolume/100;_this5.player.current.volume=0;if(!_this5.player.current.paused){_this5.audio.current.load();var _iterator5=_createForOfIteratorHelper(MediaEvents),_step5;try{for(_iterator5.s();!(_step5=_iterator5.n()).done;){var mediaEvent=_step5.value;_this5.audio.current.addEventListener(mediaEvent,_this5._triggerAudioEvents);}}catch(err){_iterator5.e(err);}finally{_iterator5.f();}}});}}},{key:\"_triggerAudioEvents\",value:function _triggerAudioEvents(event){switch(event.type.toLowerCase()){case'error':this._onAudioError();break;case'waiting':if(this.playerState==='playing'){this.isPlayerManuallyPaused=true;this.pause();}break;case'loadeddata':if(this.isPlayerManuallyPaused){this.isPlayerManuallyPaused=false;this.play();}if(!this.player.current.paused){this.play();}break;default:}}},{key:\"_triggerEvents\",value:function _triggerEvents(event){switch(event.type.toLowerCase()){case'canplay':case'canplaythrough':break;case'error':this._onVideoError();break;case'play':break;case'pause':this._updateState('paused');if(this.props.playerData.options.playPauseTrigger){this.setState({mouseHovered:true});}break;case'seeking':if(this.playerState!=='ended'&&this.player.current.seeking){this.seekFrom=this.player.current.currentTime;this._updateState('seeking');}break;case'seeked':var currentPlayer=this.player.current;var currentTime=currentPlayer.currentTime;if(this.playerState!=='ended'&&this.player.current.seeking&&this.seekFrom!==currentTime){this.seekFrom=null;}this._updateState(currentPlayer.paused?'paused':'playing');break;case'waiting':this._updateState('buffering');break;case'loadedmetadata':break;case'loadeddata':this._onVideoLoadedData();if(!this.props.playerData.options.autoplay){this._showControlBar(false);}break;case'timeupdate':this._onTimeUpdate();break;case'ended':this._updateState('ended');this._stop();break;case'playing':this._updateState('playing');break;case'volumechange':break;default:}}},{key:\"_onAudioError\",value:function _onAudioError(){var _this6=this;this.pause();var errorMessage={title:'Error while playing audio Track. Switching back to default track'};this._displayErrorMessage(errorMessage);this._setAudioTracks({category:'audioTracks',data:'{ \"lang\": \"default\", \"url\": \"\"}',id:''});setTimeout(function(){_this6.setState({showErrorMessage:false},function(){_this6.play();});},2000);}},{key:\"_onVideoError\",value:function _onVideoError(){this._updateState('error');var error=this._getError();var errorMessage='';if(error&&error.errorCode){switch(error.errorCode){case VideoErrorCodes.MediaErrorAborted:errorMessage='video playback was aborted';break;case VideoErrorCodes.MediaErrorNetwork:errorMessage='video failed to download';break;case VideoErrorCodes.MediaErrorDecode:errorMessage='video is not readable';break;case VideoErrorCodes.MediaErrorSourceNotSupported:errorMessage='video format is not supported';break;default:errorMessage='unknown error occurred';}this._stopMedia(errorMessage);}else{this._stopMedia();}}},{key:\"_stopMedia\",value:function _stopMedia(msgToDisplay){if(msgToDisplay){this._displayErrorMessage({title:msgToDisplay});this._updateState('stopped');}}},{key:\"_displayErrorMessage\",value:function _displayErrorMessage(errorMessage){this.setState({videoErrorMessage:{title:errorMessage.title,message:errorMessage.message}});this.setState({showErrorMessage:true});}},{key:\"_getError\",value:function _getError(){var contentErrorCode;if(this.player.current.error){switch(this.player.current.error.code){case this.player.current.error.MEDIA_ERR_ABORTED:contentErrorCode=VideoErrorCodes.MediaErrorAborted;break;case this.player.current.error.MEDIA_ERR_NETWORK:contentErrorCode=VideoErrorCodes.MediaErrorNetwork;break;case this.player.current.error.MEDIA_ERR_DECODE:contentErrorCode=VideoErrorCodes.MediaErrorDecode;break;case this.player.current.error.MEDIA_ERR_SRC_NOT_SUPPORTED:contentErrorCode=VideoErrorCodes.MediaErrorSourceNotSupported;break;default:contentErrorCode=VideoErrorCodes.MediaErrorUnknown;}return{errorCode:contentErrorCode};}return null;}},{key:\"_handleControlsKeyDownEvent\",value:function _handleControlsKeyDownEvent(e){var keyBrdEvent=e;var keycode=keyBrdEvent.keyCode;this._showControlBar(true);switch(keycode){case 36:e.stopPropagation();e.preventDefault();this.player.current.currentTime=0;if(this.audio.current){this.audio.current.currentTime=0;}break;case 35:e.stopPropagation();e.preventDefault();this.player.current.currentTime=this.state.playPosition.endTime;if(this.audio.current){this.audio.current.currentTime=this.state.playPosition.endTime;}break;case 37:case 39:e.stopPropagation();e.preventDefault();var jumpToTime=keycode===37?this.state.playPosition.currentTime-PlayerConstants.defaultVideoSliderSteps:this.state.playPosition.currentTime+PlayerConstants.defaultVideoSliderSteps;jumpToTime=Math.min(Math.max(this.state.playPosition.startTime,jumpToTime),this.state.playPosition.endTime);this.player.current.currentTime=jumpToTime;if(this.audio.current){this.audio.current.currentTime=jumpToTime;}break;case 38:case 40:e.stopPropagation();e.preventDefault();this.videoControl.current.showVolumeControl(true).call(this);var volume=keycode===40?Math.max((this.state.currentVolume-PlayerConstants.defaultVolumeSliderSteps)/100,0):Math.min((this.state.currentVolume+PlayerConstants.defaultVolumeSliderSteps)/100,1);this.setState({currentVolume:Math.round(volume*100)});if(this.audio.current){this.audio.current.volume=volume;}else{this.player.current.volume=volume;}if(volume===0){this.setState({isMuted:true});}else{this.setState({isMuted:false});}break;default:}}},{key:\"_onPlay\",value:function _onPlay(){this.setState({playing:true});}},{key:\"_onPause\",value:function _onPause(){this.setState({playing:false});}},{key:\"_onVolumeChange\",value:function _onVolumeChange(notification){this.setState({currentVolume:notification.firstThumbValue});if(this.audio.current){this.audio.current.volume=notification.firstThumbValue/100;}else{this.player.current.volume=notification.firstThumbValue/100;}if(notification.firstThumbValue===0){this.setState({isMuted:true});}else{if(this.state.isMuted&&notification.firstThumbValue>0){this.setState({isMuted:false});}}}},{key:\"_setMuted\",value:function _setMuted(){if(this.state.isMuted){var newVolume=this.state.previousVolume===0?PlayerConstants.defaultVolume*100:this.state.previousVolume;if(this.audio.current){this.audio.current.volume=newVolume/100;}else{this.player.current.volume=newVolume/100;}this.setState({isMuted:false,currentVolume:newVolume});this._updateScreenReaderElement(this.localizationHelper.getLocalizedValue('unMuteAriaLabel'));onTelemetryClick(this.props.telemetryContent,this.payLoad,LocalizationConstants.unMuteAriaLabel).call(this);}else{this.setState({isMuted:true,previousVolume:this.player.current.volume*100,currentVolume:0});this._updateScreenReaderElement(this.localizationHelper.getLocalizedValue('muteAriaLabel'));onTelemetryClick(this.props.telemetryContent,this.payLoad,LocalizationConstants.muteAriaLabel).call(this);}}},{key:\"_onPlayerKeyDown\",value:function _onPlayerKeyDown(e){var keyBrdEvent=e;var keycode=keyBrdEvent.keyCode;switch(keycode){case 9:this._showControlsBasedOnState();}}},{key:\"_onMouseEvent\",value:function _onMouseEvent(event){if(this.props.playerData.options.controls){this._showControlBar();}if(!this.state.isTriggerEnabled&&this.state.playing){this.setState({mouseHovered:event.type==='mouseenter'});}}},{key:\"_showControlBar\",value:function _showControlBar(){var _this7=this;var autoHide=arguments.length>0&&arguments[0]!==undefined?arguments[0]:true;if(!this.state.isTriggerEnabled&&!this.state.isAgegateEnabled){if(!this.state.isControlPanelVisible){this.setState({isControlPanelVisible:true});}if(!!this.controlPanelTimer){window&&window.clearTimeout(this.controlPanelTimer);this.controlPanelTimer=0;}if(autoHide){this.controlPanelTimer=window&&window.setTimeout(function(){_this7._hideControlBar();},PlayerConstants.defaultControlPanelTimeout);}}}},{key:\"_hideControlBar\",value:function _hideControlBar(){window&&window.clearTimeout(this.controlPanelTimer);this.controlPanelTimer=0;this.setState({isControlPanelVisible:false});}},{key:\"_onFullScreenChanged\",value:function _onFullScreenChanged(){this.state.isInFullScreen?this._onFullscreenExit():this._onFullscreenEnter();}},{key:\"_onFullscreenEnter\",value:function _onFullscreenEnter(){this.setState({isInFullScreen:true});}},{key:\"_onFullscreenExit\",value:function _onFullscreenExit(){this.setState({isInFullScreen:false});}},{key:\"_toggleFullScreen\",value:function _toggleFullScreen(){this.state.isInFullScreen?this._exitFullScreen():this._enterFullScreen();}},{key:\"_onFullscreenError\",value:function _onFullscreenError(){this.setState({isInFullScreen:false});}},{key:\"_enterFullScreen\",value:function _enterFullScreen(){if(!Player._isNativeFullscreenEnabled()){return;}var fullscreenElement=this.playerContainer.current;var elementInFullScreen=Player._getElementInFullScreen();if(!!fullscreenElement&&!elementInFullScreen){var enterFullScreen=fullscreenElement.requestFullscreen||fullscreenElement.msRequestFullscreen||fullscreenElement.mozRequestFullScreen||fullscreenElement.webkitRequestFullscreen||fullscreenElement.webkitEnterFullScreen;enterFullScreen.call(fullscreenElement);this._updateScreenReaderElement(this.localizationHelper.getLocalizedValue('fullScreenLabel'));onTelemetryClick(this.props.telemetryContent,this.payLoad,LocalizationConstants.fullScreenAriaLabel).call(this);}}},{key:\"_exitFullScreen\",value:function _exitFullScreen(){if(!Player._isNativeFullscreenEnabled()){return;}var fullscreenElement=this.playerContainer.current;var elementInFullScreen=Player._getElementInFullScreen();if(!!fullscreenElement&&fullscreenElement===elementInFullScreen){var doc=document;var cancelFullScreen=doc.cancelFullScreen||doc.msExitFullscreen||doc.mozCancelFullScreen||doc.webkitCancelFullScreen;cancelFullScreen.call(doc);this._updateScreenReaderElement(this.localizationHelper.getLocalizedValue('exitFullScreenLabel'));onTelemetryClick(this.props.telemetryContent,this.payLoad,LocalizationConstants.exitFullScreenAriaLabel).call(this);}}},{key:\"_onVideoLoadedData\",value:function _onVideoLoadedData(){this._updateState('ready');if(this.props.playerData.options.controls){var position=this._getPlayPosition();this.setState({playPosition:position});}}},{key:\"_onTimeUpdate\",value:function _onTimeUpdate(){if(this.props.playerData.options.controls){var position=this._getPlayPosition();position.endTime=this.state.playPosition.endTime;this.setState({playPosition:position});if(this.state.playing){if(this.playerState==='buffering'){this._updateState('playing');}}}}},{key:\"_getBufferedDuration\",value:function _getBufferedDuration(){var buffered=0;if(this.player.current.buffered&&this.player.current.buffered.length){buffered=this.player.current.buffered.end(this.player.current.buffered.length-1);}return buffered;}},{key:\"_getPlayPosition\",value:function _getPlayPosition(){var bufferedDuration=this._getBufferedDuration();return{currentTime:this.player.current.currentTime,startTime:0,endTime:this.player.current.duration,bufferedDuration:bufferedDuration};}},{key:\"_onProgressChange\",value:function _onProgressChange(notification){var time=notification.firstThumbValue;var position=this._getPlayPosition();time=Math.max(position.startTime,Math.min(time,position.endTime));if(Math.abs(time-position.currentTime)>=PlayerConstants.defaultPositionUpdateThreshold){this.player.current.currentTime=time;if(this.audio.current){this.audio.current.currentTime=time;}}}},{key:\"_onTriggerClicked\",value:function _onTriggerClicked(){var _this8=this;var currentPlayer=this.player.current;if(!this.isPlayerLoaded){this._loadPlayer();this.player.current.autoplay=true;}else{if(currentPlayer.paused){this.play();this._updateScreenReaderElement(this.localizationHelper.getLocalizedValue('playingAriaLabel'));onTelemetryClick(this.props.telemetryContent,this.payLoad,LocalizationConstants.playAriaLabel).call(this);}else{this.pause();this._updateScreenReaderElement(this.localizationHelper.getLocalizedValue('pausedAriaLabel'));onTelemetryClick(this.props.telemetryContent,this.payLoad,LocalizationConstants.pauseAriaLabel).call(this);}}if(this.state.isTriggerEnabled){this.setState({isTriggerEnabled:false},function(){_this8.videoControl.current.setFocusOnPlay();});onTelemetryClick(this.props.telemetryContent,this.payLoad,LocalizationConstants.pauseAriaLabel).call(this);if(this.props.playerData.options.playFullScreen){this._enterFullScreen();}}}},{key:\"_stop\",value:function _stop(){this._seek(0);if(this.props.playerData.options.controls){this.pause();var playPosition=this._getPlayPosition();playPosition.endTime=this.state.playPosition.endTime;this.setState({playPosition:playPosition});if(this.audio.current){this.audio.current.pause();}}}},{key:\"_seek\",value:function _seek(time){var position=this._getPlayPosition();time=Math.max(position.startTime,Math.min(time,position.endTime));if(Math.abs(time-position.currentTime)>=PlayerConstants.defaultPositionUpdateThreshold){this.seekFrom=position.currentTime;this.player.current.currentTime=time;if(this.audio.current){this.audio.current.currentTime=time;}}}},{key:\"_getMaskLevelStyle\",value:function _getMaskLevelStyle(){var result;var maskLevel=this.props.playerData.options.maskLevel||PlayerConstants.defaultMaskLevel;result=format('rgba(0,0,0,{0})',Number(maskLevel)/100);return result;}},{key:\"_updateState\",value:function _updateState(newState){if(!newState||newState===this.playerState){return;}this.playerState=newState;this._showControlsBasedOnState();this._showSpinnerBasedOnState();}},{key:\"_showSpinnerBasedOnState\",value:function _showSpinnerBasedOnState(){switch(this.playerState){case'ready':case'playing':case'paused':case'ended':case'stopped':case'error':this._hideSpinner();break;default:this._showSpinner();}}},{key:\"_showControlsBasedOnState\",value:function _showControlsBasedOnState(){switch(this.playerState){case'error':case'loading':case'init':this._hideControlBar();break;case'ended':this._showControlBar(false);break;case'ready':case'paused':case'stopped':this._showControlBar(false);break;default:this._showControlBar(true);}}},{key:\"_hideSpinner\",value:function _hideSpinner(){this.setState({showSpinner:false});}},{key:\"_showSpinner\",value:function _showSpinner(){this.setState({showSpinner:true});}},{key:\"_onTriggerFocus\",value:function _onTriggerFocus(){this.setState({mouseHovered:true});}},{key:\"_onTriggerBlur\",value:function _onTriggerBlur(){if(!this.state.isTriggerEnabled&&this.state.playing){this.setState({mouseHovered:false});}}},{key:\"_updateScreenReaderElement\",value:function _updateScreenReaderElement(text){this.setState({screenReaderText:text});}},{key:\"_onContextMenuClicked\",value:function _onContextMenuClicked(e){e.preventDefault();}},{key:\"_isMobile\",value:function _isMobile(){if(MsDyn365.msdyn365Commerce.isBrowser){var userAgent=window.navigator.userAgent;var isIphone=!!userAgent.match(/iPhone/i);var isSilk=!!userAgent.match(/Silk/i);var isWindowsPhone=!!userAgent.match(/Windows Phone/i);var isAndroid=!isWindowsPhone&&(isSilk||!!userAgent.match(/Android/i));return isIphone||isWindowsPhone||isAndroid;}return false;}}],[{key:\"_isNativeFullscreenEnabled\",value:function _isNativeFullscreenEnabled(){var doc=document;return doc.fullscreenEnabled||doc.mozFullScreenEnabled||doc.webkitFullscreenEnabled||doc.webkitSupportsFullscreen||doc.msFullscreenEnabled;}},{key:\"_getElementInFullScreen\",value:function _getElementInFullScreen(){var doc=document;return doc.fullscreenElement||doc.mozFullScreenElement||doc.webkitFullscreenElement||doc.msFullscreenElement;}}]);return Player;}(React.Component);export{Player as default};Player.defaultProps={playerData:{options:{autoplay:true,ageGate:false,mute:true,loop:false,playPauseTrigger:false,controls:true,hidePosterFrame:false,lazyLoad:true},metaData:{playerName:'videoPlayer',videoId:'',title:'',description:'',duration:0,posterframeUrl:'',shareUrl:'',videoFiles:[],externalPlayerUrl:'',externalSourceId:'',videoBinaryReferences:[]}},playerResources:{playAriaLabel:LocalizationConstants.playAriaLabel,pauseAriaLabel:LocalizationConstants.pauseAriaLabel,closeAriaLabel:LocalizationConstants.closeAriaLabel,muteAriaLabel:LocalizationConstants.muteAriaLabel,unMuteAriaLabel:LocalizationConstants.unMuteAriaLabel,fullScreenAriaLabel:LocalizationConstants.fullScreenAriaLabel,exitFullScreenAriaLabel:LocalizationConstants.exitFullScreenAriaLabel,pausedAriaLabel:LocalizationConstants.pausedAriaLabel,playingAriaLabel:LocalizationConstants.playingAriaLabel,seekBarLabel:LocalizationConstants.seekBarLabel,videoTimeDurationLabel:LocalizationConstants.videoTimeDurationLabel,closedCaptionLabel:LocalizationConstants.closedCaptionLabel}};","map":{"version":3,"sources":["videoplayer/players/player/Player.tsx"],"names":[],"mappings":"u9EAGA,OAAS,gBAAT,CAAgE,gBAAhE,CAAkF,OAAlF,KAAiG,sCAAjG,CACA,MAAO,GAAK,CAAA,KAAZ,KAAuB,OAAvB,CACA,MAAO,GAAK,CAAA,QAAZ,KAA0B,yBAA1B,CACA,MAAO,CAAA,OAAP,KAAoB,mCAApB,CACA,MAAO,CAAA,cAAP,KAA2B,wDAA3B,CACA,OAAS,6BAAT,CAAwC,2BAAxC,KAA2E,iEAA3E,CACA,OAOI,WAPJ,CAQI,cARJ,CASI,eATJ,CAWI,eAXJ,CAYI,gBAZJ,KAaO,wCAbP,CAcA,OAAS,kBAAT,KAA4D,uCAA5D,CACA,MAAO,CAAA,mBAAP,KAAgC,6CAAhC,CACA,MAAO,CAAA,kBAAP,EAA6B,qBAA7B,KAA0D,6CAA1D,CACA,MAAO,CAAA,YAAP,KAAyB,sCAAzB,CACA,MAAO,CAAA,gBAAP,KAA6B,sDAA7B,CAEA,OAAS,MAAT,CAAiB,kBAAjB,KAA2C,6CAA3C,CACA,MAAO,CAAA,aAAP,KAA0B,+CAA1B,C,GAqCqB,CAAA,M,4GA+FjB,gBAAY,KAAZ,CAA+B,wCAC3B,uBAAM,KAAN,EArDI,MAAA,iBAAA,CAA4B,CAA5B,CAEA,MAAA,MAAA,cAA4C,KAAK,CAAC,SAAN,EAA5C,CACA,MAAA,KAAA,cAA2C,KAAK,CAAC,SAAN,EAA3C,CACA,MAAA,eAAA,cAAmD,KAAK,CAAC,SAAN,EAAnD,CACA,MAAA,YAAA,cAA+C,KAAK,CAAC,SAAN,EAA/C,CACA,MAAA,cAAA,cAAkD,KAAK,CAAC,SAAN,EAAlD,CACA,MAAA,gBAAA,cAA6C,KAAK,CAAC,SAAN,EAA7C,CACA,MAAA,QAAA,CAAmB,EAAnB,CACA,MAAA,cAAA,CAAyB,EAAzB,CACA,MAAA,QAAA,CAA0B,IAA1B,CAIA,MAAA,mBAAA,CAAkD,IAAlD,CACA,MAAA,iBAAA,CAAwC,IAAxC,CACA,MAAA,WAAA,CAAkC,IAAlC,CACA,MAAA,4BAAA,CAA8C,EAA9C,CACA,MAAA,sBAAA,CAAkC,KAAlC,CACA,MAAA,cAAA,CAA0B,KAA1B,CAgRA,MAAA,qBAAA,CAAwB,UAAmB,CAC/C,mBACI,KAAA,CAAA,aAAA,CAAC,cAAD,CAAe,CACX,GAAG,CAAE,MAAK,cADC,CAEX,SAAS,WAAK,gBAAgB,CAAC,oBAAtB,eAFE,CAGX,kBAAkB,CAAE,MAAK,KAAL,CAAW,kBAHpB,CAIX,WAAW,CAAE,MAAK,KAAL,CAAW,YAAX,CAAwB,WAJ1B,CAKX,UAAU,CAAE,MAAK,KAAL,CAAW,qBALZ,CAMX,KAAK,CAAE,MAAK,KAAL,CAAW,iBANP,CAOX,aAAa,CAAE,MAAK,YAAL,CAAkB,eAPtB,CAQX,qBAAqB,CAAE,MAAK,KAAL,CAAW,qBAAX,EAAoC,MAAK,KAAL,CAAW,mBAR3D,CASX,6BAA6B,CAAE,MAAK,KAAL,CAAW,6BAT/B,CAUX,0BAA0B,CAAE,MAAK,KAAL,CAAW,0BAV5B,CAWX,oBAAoB,CAAE,MAAK,iBAXhB,CAAf,CADJ,CAeH,CAhBO,CAkBA,MAAA,uBAAA,CAA0B,SAAC,aAAD,CAAwB,cAAxB,CAA4E,CAC1G,mBACI,KAAA,CAAA,aAAA,CAAC,gBAAD,CAAiB,CACb,SAAS,WAAK,gBAAgB,CAAC,oBAAtB,sBADI,CAEb,KAAK,CAAE,cAFM,CAGb,QAAQ,CAAE,MAAK,iBAHF,CAIb,OAAO,CAAE,MAAK,KAAL,CAAW,OAJP,CAIc,cACd,CAAC,MAAK,KAAL,CAAW,YALZ,CAMb,aAAa,CAAE,aANF,CAOb,cAAc,CAAE,MAAK,kBAAL,CAAwB,iBAAxB,CAA0C,gBAA1C,CAPH,CAQb,OAAO,CAAE,MAAK,eARD,CASb,MAAM,CAAE,MAAK,cATA,CAUb,gBAAgB,CAAE,MAAK,KAAL,CAAW,gBAVhB,CAAjB,CADJ,CAcH,CAfO,CAiBA,MAAA,oBAAA,CAAuB,SAAC,aAAD,CAAuC,CAClE,mBACI,KAAA,CAAA,aAAA,CAAC,aAAD,CAAc,CACN,GAAG,CAAE,MAAK,YADJ,CAEN,SAAS,WAAK,gBAAgB,CAAC,oBAAtB,uBACJ,MAAK,KAAL,CAAW,qBAAX,EAAoC,MAAK,KAAL,CAAW,mBAAhD,CAAuE,MAAvE,CAAgF,MAD3E,CAFH,CAIJ,cACW,EAAE,MAAK,KAAL,CAAW,qBAAX,EAAoC,MAAK,KAAL,CAAW,mBAAjD,CALP,CAMN,WAAW,CAAE,MAAK,iBANZ,CAON,OAAO,CAAE,MAAK,KAAL,CAAW,OAPd,CAQN,iBAAiB,CAAE,MAAK,iBARlB,CASN,UAAU,CAAI,MAAK,WATb,CAUN,cAAc,CAAE,eAAe,CAAC,uBAV1B,CAWN,eAAe,CAAE,eAAe,CAAC,wBAX3B,CAYN,OAAO,CAAE,MAAK,KAAL,CAAW,OAZd,CAaN,WAAW,CAAE,MAAK,SAbZ,CAcN,cAAc,CAAE,MAAK,eAdf,CAeN,gBAAgB,CAAE,MAAK,iBAfjB,CAgBN,YAAY,CAAE,MAAK,KAAL,CAAW,YAhBnB,CAiBN,4BAA4B,CAAE,MAAK,KAAL,CAAW,qBAjBnC,CAkBN,aAAa,CAAE,MAAK,KAAL,CAAW,aAlBpB,CAmBN,cAAc,CAAE,MAAK,KAAL,CAAW,cAnBrB,CAoBN,gBAAgB,CAAE,MAAK,iBApBjB,CAqBN,4BAA4B,CAAE,MAAK,2BArB7B,CAsBN,qBAAqB,CAAE,MAAK,KAAL,CAAW,qBAAX,EAAoC,MAAK,KAAL,CAAW,mBAtBhE,CAuBN,OAAO,CAAE,MAAK,qBAvBR,CAwBN,MAAM,CAAE,MAAK,oBAxBP,CAyBN,eAAe,CAAE,MAAK,sBAzBhB,CA0BN,eAAe,CAAE,MAAK,sBA1BhB,CA2BN,cAAc,CAAE,MAAK,qBA3Bf,CA4BN,iBAAiB,CAAE,MAAK,KAAL,CAAW,iBA5BxB,CA6BN,oBAAoB,CAAE,MAAK,KAAL,CAAW,oBA7B3B,CA8BN,4BAA4B,CAAE,MAAK,KAAL,CAAW,6BA9BnC,CA+BN,cAAc,CAAE,MAAK,cA/Bf,CAgCN,gBAAgB,CAAE,MAAK,KAAL,CAAW,gBAhCvB,CAiCN,SAAS,CAAE,CACP,aAAa,CAAE,aADR,CAEP,cAAc,CAAE,MAAK,kBAAL,CAAwB,iBAAxB,CAA0C,gBAA1C,CAFT,CAGP,aAAa,CAAE,MAAK,kBAAL,CAAwB,iBAAxB,CAA0C,eAA1C,CAHR,CAIP,eAAe,CAAE,MAAK,kBAAL,CAAwB,iBAAxB,CAA0C,iBAA1C,CAJV,CAKP,mBAAmB,CAAE,MAAK,kBAAL,CAAwB,iBAAxB,CAA0C,qBAA1C,CALd,CAMP,uBAAuB,CAAE,MAAK,kBAAL,CAAwB,iBAAxB,CAA0C,yBAA1C,CANlB,CAOP,YAAY,CAAE,MAAK,kBAAL,CAAwB,iBAAxB,CAA0C,cAA1C,CAPP,CAQP,sBAAsB,CAAE,MAAK,kBAAL,CAAwB,iBAAxB,CAA0C,wBAA1C,CARjB,CASP,kBAAkB,CAAE,MAAK,kBAAL,CAAwB,iBAAxB,CAA0C,oBAA1C,CATb,CAUP,iBAAiB,CAAE,MAAK,kBAAL,CAAwB,iBAAxB,CAA0C,iBAA1C,CAVZ,CAjCL,CAAd,CADJ,CAiDH,CAlDO,CA0DD,MAAA,cAAA,CAAiB,UAAkB,CACtC,mBACA,KAAA,CAAA,aAAA,CAAC,OAAD,CAAQ,CAAC,GAAG,CAAE,MAAK,gBAAX,CAA6B,aAAa,CAAE,MAAK,yBAAjD,CAA0E,cAAe,CAAC,MAAK,KAAL,CAAW,gBAArG,CAAuH,SAAS,CAAE,MAAK,cAAL,CAAoB,UAAtJ,CAAR,CADA,CAGH,CAJM,CA1UH,MAAK,cAAL,CAAsB,MAAK,SAAL,EAAtB,CACA,GAAM,CAAA,KAAK,CAAG,CACV,OAAO,CAAE,KADC,CAEV,YAAY,CAAE,MAAK,KAAL,CAAW,UAAX,CAAsB,OAAtB,CAA8B,gBAA9B,EAAmD,CAAC,MAAK,KAAL,CAAW,UAAX,CAAsB,OAAtB,CAA8B,QAFtF,CAGV,qBAAqB,CAAE,CAAC,MAAK,KAAL,CAAW,UAAX,CAAsB,OAAtB,CAA8B,gBAH5C,CAIV,mBAAmB,CAAE,KAJX,CAKV,gBAAgB,CAAE,MAAK,KAAL,CAAW,UAAX,CAAsB,OAAtB,CAA8B,gBAA9B,EAAmD,CAAC,MAAK,KAAL,CAAW,UAAX,CAAsB,OAAtB,CAA8B,QAAlF,EAA+F,MAAK,KAAL,CAAW,UAAX,CAAsB,OAAtB,CAA8B,QALrI,CAMV,aAAa,CAAE,MAAK,KAAL,CAAW,UAAX,CAAsB,OAAtB,CAA8B,IAA9B,EAAsC,CAAC,MAAK,cAA5C,CAA6D,CAA7D,CAAiE,eAAe,CAAC,aAAhB,CAAgC,GANtG,CAOV,cAAc,CAAE,CAPN,CAQV,OAAO,CAAE,MAAK,KAAL,CAAW,UAAX,CAAsB,OAAtB,CAA8B,IAA9B,EAAsC,KARrC,CASV,cAAc,CAAE,KATN,CAUV,WAAW,CAAE,KAVH,CAWV,gBAAgB,CAAE,MAAK,KAAL,CAAW,UAAX,CAAsB,OAAtB,CAA8B,OAA9B,EAA0C,CAAC,MAAK,KAAL,CAAW,UAAX,CAAsB,OAAtB,CAA8B,QAXjF,CAYV,gBAAgB,CAAE,KAZR,CAaV,gBAAgB,CAAE,EAbR,CAcV,qBAAqB,CAAE,KAdb,CAeV,iBAAiB,CAAE,SAfT,CAgBV,oBAAoB,CAAE,EAhBZ,CAiBV,kBAAkB,CAAE,KAjBV,CAkBV,OAAO,CAAE,KAlBC,CAmBV,6BAA6B,CAAG,CAC5B,MAAM,CAAE,6BAA6B,CAAC,MADV,CAE5B,SAAS,CAAE,6BAA6B,CAAC,SAFb,CAG5B,UAAU,CAAE,6BAA6B,CAAC,UAHd,CAI5B,YAAY,CAAE,6BAA6B,CAAC,YAJhB,CAK5B,SAAS,CAAE,6BAA6B,CAAC,SALb,CAM5B,eAAe,CAAE,6BAA6B,CAAC,eANnB,CAO5B,qBAAqB,CAAE,6BAA6B,CAAC,qBAPzB,CAQ5B,uBAAuB,CAAE,6BAA6B,CAAC,uBAR3B,CAS5B,YAAY,CAAE,6BAA6B,CAAC,YAThB,CAU5B,cAAc,CAAE,6BAA6B,CAAC,cAVlB,CAnBtB,CA+BV,iBAAiB,CAAE,EA/BT,CAgCV,iBAAiB,CAAE,CACf,KAAK,CAAE,EADQ,CAEf,OAAO,CAAE,EAFM,CAhCT,CAoCV,YAAY,CAAE,CACV,WAAW,CAAE,CADH,CAEV,SAAS,CAAE,CAFD,CAGV,OAAO,CAAE,CAHC,CAIV,gBAAgB,CAAE,CAJR,CApCJ,CA0CV,0BAA0B,CAAE,SA1ClB,CAAd,CA6CA,MAAK,WAAL,CAAmB,MAAnB,CACA,MAAK,iBAAL,CAAyB,MAAK,iBAAL,CAAuB,IAAvB,+BAAzB,CACA,MAAK,aAAL,CAAqB,MAAK,aAAL,CAAmB,IAAnB,+BAArB,CACA,MAAK,OAAL,CAAe,MAAK,OAAL,CAAa,IAAb,+BAAf,CACA,MAAK,QAAL,CAAgB,MAAK,QAAL,CAAc,IAAd,+BAAhB,CACA,MAAK,cAAL,CAAsB,MAAK,cAAL,CAAoB,IAApB,+BAAtB,CACA,MAAK,mBAAL,CAA2B,MAAK,mBAAL,CAAyB,IAAzB,+BAA3B,CACA,MAAK,iBAAL,CAAyB,MAAK,iBAAL,CAAuB,IAAvB,+BAAzB,CACA,MAAK,SAAL,CAAiB,MAAK,SAAL,CAAe,IAAf,+BAAjB,CACA,MAAK,eAAL,CAAuB,MAAK,eAAL,CAAqB,IAArB,+BAAvB,CACA,MAAK,oBAAL,CAA4B,MAAK,oBAAL,CAA0B,IAA1B,+BAA5B,CACA,MAAK,iBAAL,CAAyB,MAAK,iBAAL,CAAuB,IAAvB,+BAAzB,CACA,MAAK,eAAL,CAAuB,MAAK,eAAL,CAAqB,IAArB,+BAAvB,CACA,MAAK,2BAAL,CAAmC,MAAK,2BAAL,CAAiC,IAAjC,+BAAnC,CACA,MAAK,kBAAL,CAA0B,MAAK,kBAAL,CAAwB,IAAxB,+BAA1B,CACA,MAAK,gBAAL,CAAwB,MAAK,gBAAL,CAAsB,IAAtB,+BAAxB,CACA,MAAK,eAAL,CAAuB,MAAK,eAAL,CAAqB,IAArB,+BAAvB,CACA,MAAK,cAAL,CAAsB,MAAK,cAAL,CAAoB,IAApB,+BAAtB,CACA,MAAK,qBAAL,CAA6B,MAAK,qBAAL,CAA2B,IAA3B,+BAA7B,CACA,MAAK,oBAAL,CAA4B,MAAK,oBAAL,CAA0B,IAA1B,+BAA5B,CACA,MAAK,sBAAL,CAA8B,MAAK,sBAAL,CAA4B,IAA5B,+BAA9B,CACA,MAAK,sBAAL,CAA8B,MAAK,sBAAL,CAA4B,IAA5B,+BAA9B,CACA,MAAK,qBAAL,CAA6B,MAAK,qBAAL,CAA2B,IAA3B,+BAA7B,CACA,MAAK,yBAAL,CAAiC,MAAK,yBAAL,CAA+B,IAA/B,+BAAjC,CACA,MAAK,qBAAL,CAA6B,MAAK,qBAAL,CAA2B,IAA3B,+BAA7B,CACA,MAAK,kBAAL,CAA0B,GAAI,CAAA,kBAAJ,CAAuB,MAAK,KAAL,CAAW,eAAlC,CAA1B,CACA,MAAK,YAAL,CAAoB,GAAI,CAAA,YAAJ,CAAiB,MAAK,KAAtB,CAA8B,MAAK,kBAAnC,CAApB,CACA,MAAK,QAAL,CAAgB,MAAK,YAAL,CAAkB,kBAAlB,CAAqC,MAAK,KAAL,CAAW,QAAhD,EAA4D,OAA5D,CAAsE,MAAK,KAAL,CAAW,QAAjG,CACA,MAAK,cAAL,CAAsB,MAAK,YAAL,CAAkB,WAAlB,EAAtB,CACA,MAAK,KAAL,CAAa,KAAb,CACA,MAAK,cAAL,CAAsB,MAAK,YAAL,CAAkB,iBAAlB,EAAtB,CACA,MAAK,OAAL,CAAe,gBAAgB,CAAC,OAAD,CAAU,MAAK,KAAL,CAAW,gBAArB,CAAwC,EAAxC,CAA/B,CA/E2B,aAgF9B,C,0DAGY,CACT,GAAM,CAAA,cAAc,CAAG,EAAvB,CACA,GAAG,KAAK,KAAL,CAAW,gBAAd,CAAgC,CAC5B,cAAc,CAAC,eAAf,CAAiC,KAAK,kBAAL,EAAjC,CACH,CAED,GAAI,KAAK,KAAL,CAAW,QAAf,CAAyB,CACrB,KAAK,YAAL,CAAkB,iBAAlB,CAAoC,KAAK,KAAzC,EACA,KAAK,cAAL,CAAsB,KAAK,YAAL,CAAkB,WAAlB,EAAtB,CACA,GAAI,KAAK,cAAL,GAAwB,KAAK,YAAL,CAAkB,iBAAlB,EAA5B,CAAmE,CAC/D,KAAK,cAAL,CAAsB,KAAK,YAAL,CAAkB,iBAAlB,EAAtB,CACH,CACD,GAAI,KAAK,cAAL,EAAuB,KAAK,QAAL,GAAkB,KAAK,YAAL,CAAkB,kBAAlB,GAAuC,GAApF,CAAyF,CACrF,KAAK,WAAL,GACH,CACJ,CAED,GAAI,CAAA,aAAa,CAAW,EAA5B,CACA,GAAG,KAAK,cAAL,CAAoB,KAAvB,CAA8B,CAC1B,aAAa,WAAM,KAAK,kBAAL,CAAwB,iBAAxB,CAA0C,eAA1C,CAAN,aAAoE,KAAK,cAAL,CAAoB,KAAxF,CAAb,CACH,CAFD,IAEO,CACH,aAAa,CAAG,qBAAqB,CAAC,kBAAtC,CACH,CAED,mBACI,KAAA,CAAA,aAAA,CAAA,KAAA,CAAA,CACI,IAAI,CAAC,MADT,CAEI,SAAS,WAAK,gBAAgB,CAAC,oBAAtB,CAFb,CAGI,GAAG,CAAE,KAAK,eAHd,CAII,SAAS,CAAE,KAAK,gBAJpB,CAKI,YAAY,CAAE,KAAK,aALvB,CAMI,YAAY,CAAE,KAAK,aANvB,CAMoC,gBACjB,KAAK,QAPxB,CAAA,cASI,KAAA,CAAA,aAAA,CAAA,KAAA,CAAA,CAAK,SAAS,WAAK,gBAAgB,CAAC,oBAAtB,aAAd,CAAA,CACE,KAAK,KAAL,CAAW,iBAAX,GAAiC,EAAjC,EAAuC,KAAK,KAAL,CAAW,oBAAX,GAAoC,EAA5E,eACO,KAAA,CAAA,aAAA,CAAA,OAAA,CAAA,CACI,GAAG,CAAE,KAAK,KADd,CAEI,OAAO,CAAC,MAFZ,CAGI,GAAG,CAAE,KAAK,KAAL,CAAW,oBAHpB,CAII,KAAK,CAAE,KAAK,KAAL,CAAW,OAJtB,CAKI,IAAI,CAAE,KAAK,KAAL,CAAW,UAAX,CAAsB,OAAtB,CAA8B,IALxC,CAAA,CAFR,cAUI,KAAA,CAAA,aAAA,CAAA,OAAA,CAAA,CACI,SAAS,WAAK,gBAAgB,CAAC,oBAAtB,WADb,CAEI,GAAG,CAAE,KAAK,MAFd,CAGI,OAAO,CAAE,UAHb,CAII,QAAQ,CAAE,KAAK,KAAL,CAAW,UAAX,CAAsB,OAAtB,CAA8B,QAJ5C,CAKI,KAAK,CAAE,KAAK,KAAL,CAAW,OALtB,CAMI,IAAI,CAAE,KAAK,KAAL,CAAW,UAAX,CAAsB,OAAtB,CAA8B,IANxC,CAOI,MAAM,CAAE,KAAK,OAPjB,CAQI,OAAO,CAAE,KAAK,QARlB,CASI,OAAO,CAAE,CAAC,KAAK,KAAL,CAAW,gBAAZ,CAA+B,KAAK,iBAApC,CAAwD,KAAK,QAT1E,CAUI,IAAI,CAAC,MAVT,CAWI,GAAG,CAAE,KAAK,KAAL,CAAW,OAAX,CAAqB,KAAK,QAA1B,CAAqC,EAX9C,CAYI,aAAa,CAAE,KAAK,qBAZxB,CAaI,MAAM,CAAE,KAAK,KAAL,CAAW,OAAX,CAAqB,KAAK,cAA1B,CAA2C,EAbvD,CAcI,WAAW,CAAE,IAdjB,CAAA,CAVJ,cA0BI,KAAA,CAAA,aAAA,CAAA,KAAA,CAAA,CAAK,SAAS,WAAK,gBAAgB,CAAC,oBAAtB,kBAAd,CAA0E,IAAI,CAAC,QAA/E,CAAuF,cAAc,CAAC,KAAK,KAAL,CAAW,gBAAjH,CAAA,cACI,KAAA,CAAA,aAAA,CAAA,KAAA,CAAA,CAAK,SAAS,WAAK,gBAAgB,CAAC,oBAAtB,2BAAd,CAAA,cACI,KAAA,CAAA,aAAA,CAAA,GAAA,CAAA,CAAG,SAAS,WAAK,gBAAgB,CAAC,oBAAtB,2BAAZ,CAAA,CAAkF,KAAK,KAAL,CAAW,iBAAX,CAA6B,KAA/G,CADJ,CADJ,CA1BJ,cA+BI,KAAA,CAAA,aAAA,CAAA,KAAA,CAAA,CAAK,SAAS,WAAK,gBAAgB,CAAC,oBAAtB,kBAAd,CAAwE,YAAY,WAApF,CAAA,CACK,KAAK,KAAL,CAAW,gBADhB,CA/BJ,cAkCI,KAAA,CAAA,aAAA,CAAA,KAAA,CAAA,CACI,SAAS,WAAK,gBAAgB,CAAC,oBAAtB,aADb,CAEI,IAAI,CAAC,QAFT,CAEiB,cACA,CAAC,KAAK,KAAL,CAAW,WAH7B,CAAA,cAKI,KAAA,CAAA,aAAA,CAAC,OAAD,CAAQ,CAAC,SAAS,WAAK,gBAAgB,CAAC,oBAAtB,aAAV,CAAR,CALJ,CAlCJ,CAyCM,KAAK,KAAL,CAAW,UAAX,CAAsB,OAAtB,CAA8B,OAA/B,EACO,KAAK,cAAL,EA1CZ,CA4CK,CAAC,KAAK,KAAL,CAAW,UAAX,CAAsB,OAAtB,CAA8B,gBAA9B,EAAkD,CAAC,KAAK,KAAL,CAAW,UAAX,CAAsB,OAAtB,CAA8B,QAAjF,EACG,KAAK,KAAL,CAAW,gBAAX,EAA+B,CAAC,KAAK,KAAL,CAAW,gBAD/C,GAEO,KAAK,uBAAL,CAA6B,aAA7B,CAA4C,cAA5C,CA9CZ,CAgDM,KAAK,KAAL,CAAW,kBAAZ,EAAmC,KAAK,qBAAL,EAhDxC,CAiDM,KAAK,KAAL,CAAW,UAAX,CAAsB,OAAtB,CAA8B,QAA9B,EACG,CAAC,KAAK,KAAL,CAAW,gBADf,EACmC,CAAC,KAAK,KAAL,CAAW,gBADhD,EAEG,KAAK,oBAAL,CAA0B,aAA1B,CAnDR,CATJ,CADJ,CAkEH,C,mCAQS,iBACN,KAAK,MAAL,CAAY,OAAZ,CAAqB,IAArB,YAAkC,UAAK,CACnC,MAAI,CAAC,aAAL,GACH,CAFD,EAGA,GAAG,KAAK,KAAL,CAAW,OAAd,CAAuB,CACnB,KAAK,KAAL,CAAW,OAAX,CAAmB,IAAnB,YAAgC,UAAK,CACjC,MAAI,CAAC,aAAL,GACH,CAFD,EAGH,CACJ,C,qCAQU,CACP,KAAK,MAAL,CAAY,OAAZ,CAAqB,KAArB,GACA,GAAG,KAAK,KAAL,CAAW,OAAd,CAAuB,CACnB,KAAK,KAAL,CAAW,OAAX,CAAmB,KAAnB,GACH,CACJ,C,6DAEuB,CACpB,KAAK,QAAL,CAAc,CAAC,OAAO,CAAE,IAAV,CAAd,EACA,GAAI,KAAK,KAAL,CAAW,UAAX,CAAsB,OAAtB,CAA8B,QAA/B,EAA6C,KAAK,KAAL,CAAW,UAAX,CAAsB,OAAtB,CAA8B,QAA9B,EAA0C,CAAC,KAAK,KAAL,CAAW,UAAX,CAAsB,OAAtB,CAA8B,gBAAtH,EACA,CAAC,KAAK,KAAL,CAAW,UAAX,CAAsB,OAAtB,CAA8B,QADlC,CAC4C,CACxC,KAAK,WAAL,GACH,CACD,QAAQ,CAAC,gBAAT,CAA0B,kBAA1B,CAA8C,KAAK,oBAAnD,EACA,QAAQ,CAAC,gBAAT,CAA0B,qBAA1B,CAAiD,KAAK,oBAAtD,EACA,QAAQ,CAAC,gBAAT,CAA0B,wBAA1B,CAAoD,KAAK,oBAAzD,EACA,QAAQ,CAAC,gBAAT,CAA0B,oBAA1B,CAAgD,KAAK,oBAArD,EAEA,QAAQ,CAAC,gBAAT,CAA0B,iBAA1B,CAA6C,KAAK,kBAAlD,EACA,QAAQ,CAAC,gBAAT,CAA0B,oBAA1B,CAAgD,KAAK,kBAArD,EACA,QAAQ,CAAC,gBAAT,CAA0B,uBAA1B,CAAmD,KAAK,kBAAxD,EACA,QAAQ,CAAC,gBAAT,CAA0B,mBAA1B,CAA+C,KAAK,kBAApD,EACH,C,mEAE0B,CACvB,GAAI,KAAK,MAAL,CAAY,OAAhB,CAAyB,0CACI,WADJ,YACrB,+CAAsC,IAA3B,CAAA,UAA2B,aAClC,KAAK,MAAL,CAAY,OAAZ,CAAoB,mBAApB,CAAwC,UAAxC,CAAoD,KAAK,cAAzD,EACH,CAHoB,qDAIxB,CACD,QAAQ,CAAC,mBAAT,CAA6B,kBAA7B,CAAiD,KAAK,oBAAtD,EACA,QAAQ,CAAC,mBAAT,CAA6B,qBAA7B,CAAoD,KAAK,oBAAzD,EACA,QAAQ,CAAC,mBAAT,CAA6B,wBAA7B,CAAuD,KAAK,oBAA5D,EACA,QAAQ,CAAC,mBAAT,CAA6B,oBAA7B,CAAmD,KAAK,oBAAxD,EAEA,QAAQ,CAAC,mBAAT,CAA6B,iBAA7B,CAAgD,KAAK,kBAArD,EACA,QAAQ,CAAC,mBAAT,CAA6B,oBAA7B,CAAmD,KAAK,kBAAxD,EACA,QAAQ,CAAC,mBAAT,CAA6B,uBAA7B,CAAsD,KAAK,kBAA3D,EACA,QAAQ,CAAC,mBAAT,CAA6B,mBAA7B,CAAkD,KAAK,kBAAvD,EACH,C,iDAqGkB,CACf,GAAI,KAAK,MAAL,CAAY,OAAhB,CAAyB,CACrB,KAAK,MAAL,CAAY,OAAZ,CAAoB,MAApB,CAA6B,KAAK,KAAL,CAAW,aAAX,CAA2B,GAAxD,CADqB,0CAGI,WAHJ,aAGrB,kDAAsC,IAA3B,CAAA,UAA2B,cAClC,KAAK,MAAL,CAAY,OAAZ,CAAoB,gBAApB,CAAqC,UAArC,CAAiD,KAAK,cAAtD,EACH,CALoB,uDAMxB,CACD,KAAK,QAAL,CAAgB,KAAK,YAAL,CAAkB,kBAAlB,GAAuC,GAAvD,CACA,KAAK,MAAL,CAAY,OAAZ,CAAqB,IAArB,GACA,KAAK,cAAL,CAAsB,IAAtB,CAEA,GAAG,KAAK,KAAL,CAAW,UAAX,CAAsB,OAAtB,CAA8B,QAAjC,CAA2C,CACvC,KAAK,mBAAL,CAA2B,GAAI,CAAA,mBAAJ,CAAwB,KAAK,cAA7B,CAA6C,KAAK,YAAlD,CAAgE,KAAK,kBAArE,CAA3B,CACA,KAAK,iBAAL,CAAyB,KAAK,mBAAL,CAAyB,oBAAzB,EAAzB,CACA,KAAK,WAAL,CAAmB,KAAK,YAAL,CAAkB,aAAlB,EAAnB,CACA,GAAM,CAAA,OAAO,CAAG,KAAK,cAAL,CAAoB,OAApC,CACA,GAAG,OAAO,GAAK,SAAZ,EAAyB,OAAO,CAAC,MAAR,CAAiB,CAA7C,CAAgD,CAC5C,GAAM,CAAA,gBAAgB,CAAG,KAAK,KAAL,CAAW,UAAX,EAAyB,KAAK,KAAL,CAAW,UAAX,CAAsB,OAAtB,CAA8B,YAAhF,CACA,GAAI,CAAA,kBAAkB,CAAkB,IAAxC,CAF4C,0CAGvB,OAHuB,aAG5C,kDAA8B,IAAnB,CAAA,MAAmB,cAE1B,GAAI,CAAC,kBAAD,EAAuB,gBAAvB,EAA2C,MAAM,CAAC,MAAP,CAAc,OAAd,CAAsB,gBAAtB,EAA0C,CAAC,CAA1F,CAA6F,CACzF,kBAAkB,CAAG,MAAM,CAAC,MAA5B,CACH,CAEJ,CAT2C,uDAU5C,KAAK,4BAAL,CAAoC,kBAApC,CACA,GAAG,CAAC,kBAAkB,CAAC,KAAK,4BAAN,CAAtB,CAA4D,CACxD,KAAK,QAAL,CAAc,CACV,qBAAqB,CAAE,KAAK,4BADlB,CAEV,iBAAiB,CAAE,KAAK,mBAAL,CAAyB,6BAAzB,CAAuD,KAAK,4BAA5D,CAFT,CAGV,kBAAkB,CAAE,IAHV,CAAd,EAKH,CACJ,CACJ,CACJ,C,6EAQgC,CAC7B,GAAG,KAAK,gBAAL,CAAsB,OAAtB,CAA+B,gBAA/B,EAAH,CAAsD,CAClD,KAAK,QAAL,CAAgB,KAAK,YAAL,CAAkB,kBAAlB,GAAuC,GAAvD,CACA,KAAK,QAAL,CAAc,CAAE,gBAAgB,CAAE,KAApB,CAAd,EACH,CAHD,IAGO,CACH,KAAK,QAAL,CAAc,CAAE,gBAAgB,CAAE,IAApB,CAAd,EACA,KAAK,oBAAL,CAA0B,CAAE,KAAK,CAAE,oCAAT,CAA1B,EACH,CACJ,C,qEAE4B,CAEzB,KAAK,QAAL,CAAc,CAAE,mBAAmB,CAAE,IAAvB,CAAd,EACH,C,mEAE2B,CAExB,KAAK,eAAL,CAAqB,IAArB,EAEA,KAAK,QAAL,CAAc,CAAE,mBAAmB,CAAE,KAAvB,CAAd,EACH,C,sEAE8B,Y,CAA8C,iBAEzE,GAAG,YAAY,CAAC,IAAb,EAAqB,YAAY,CAAC,IAAb,CAAkB,OAAlB,CAA0B,GAA1B,EAAiC,CAAzD,CAA4D,CACxD,GAAM,CAAA,SAAS,CAAG,YAAY,CAAC,IAAb,CAAkB,KAAlB,CAAwB,GAAxB,CAAlB,CACA,GAAM,CAAA,UAAU,CAAG,SAAS,CAAC,CAAD,CAA5B,CACA,GAAG,UAAU,GAAK,2BAA2B,CAAC,SAA9C,CAAyD,CACrD,GAAG,KAAK,KAAL,CAAW,qBAAX,GAAqC,KAAxC,CAA+C,CAC3C,KAAK,QAAL,CAAc,CACV,kBAAkB,CAAE,IADV,CAAd,CAEc,UAAK,CAAG,MAAI,CAAC,cAAL,CAAoB,OAApB,CAA6B,kBAA7B,GACA,MAAI,CAAC,cAAL,CAAoB,YAApB,CAAkC,KAAlC,EACD,CAJrB,EAKH,CAND,IAMO,CACH,KAAK,cAAL,CAAoB,YAApB,CAAkC,KAAlC,EACH,CACJ,CACJ,CAdD,IAcO,CACH,GAAG,KAAK,KAAL,CAAW,qBAAX,GAAqC,KAAxC,CAA+C,CAC3C,KAAK,QAAL,CAAc,CACV,kBAAkB,CAAE,KADV,CAAd,EAGH,CACJ,CACJ,C,qEAE4B,CACzB,KAAK,cAAL,CAAoB,CACjB,QAAQ,CAAE,cAAc,CAAC,qBADR,CAEjB,EAAE,CAAE,EAFa,CAGjB,IAAI,CAAE,SAHW,CAApB,EAMH,C,sEAE8B,Y,CAA8C,CAEzE,OAAQ,YAAY,CAAC,QAArB,EACI,IAAK,CAAA,cAAc,CAAC,aAApB,CAAmC,CAC/B,KAAK,MAAL,CAAY,YAAY,CAAC,EAAzB,EACA,MACH,CAED,IAAK,CAAA,cAAc,CAAC,qBAApB,CAA2C,CACvC,KAAK,cAAL,CAAoB,YAApB,EACA,MACH,CAED,IAAK,CAAA,cAAc,CAAC,WAApB,CAAiC,CAC7B,KAAK,eAAL,CAAqB,YAArB,EACH,CAbL,CAeH,C,sCAUc,Y,CAAoB,CAC/B,YAAY,CAAG,KAAK,YAAL,CAAkB,cAAlB,CAAiC,YAAjC,CAAf,CACA,GAAI,CAAA,cAAc,CAAmB,IAArC,CAEA,GAAI,YAAY,EAAI,KAAK,cAAL,CAAoB,OAAxC,CAAiD,2CACxB,KAAK,cAAL,CAAoB,OADI,aAC7C,kDAAkD,IAAvC,CAAA,MAAuC,cAC9C,GAAK,MAAM,CAAC,MAAP,GAAkB,YAAnB,GAAqC,CAAC,MAAM,CAAC,MAAR,EAAkB,MAAM,CAAC,MAAP,GAAkB,kBAAkB,CAAC,IAA5F,CAAJ,CAAuG,CACnG,cAAc,CAAG,MAAjB,CACA,MACH,CACJ,CAN4C,uDAOhD,CAED,GAAG,YAAY,GAAK,KAApB,CAA2B,CACvB,KAAK,QAAL,CAAc,CACV,qBAAqB,CAAE,KADb,CAEV,iBAAiB,CAAE,EAFT,CAGV,kBAAkB,CAAE,KAHV,CAAd,EAKH,CAND,IAMO,CACH,KAAK,QAAL,CAAc,CACV,qBAAqB,CAAE,cAAe,CAAC,MAD7B,CAEV,iBAAiB,CAAE,cAAe,CAAC,GAFzB,CAGV,kBAAkB,CAAE,IAHV,CAAd,EAKH,CACJ,C,sDASsB,Y,CAAgD,iB,CAA2B,iBAC9F,GAAI,YAAY,CAAC,IAAb,GAAsB,OAA1B,CAAmC,CAC/B,KAAK,QAAL,CAAc,CACV,6BAA6B,CAAE,6BADrB,CAAd,CAEc,UAAK,CACf,GAAG,MAAI,CAAC,cAAL,CAAoB,OAApB,GAAgC,IAAnC,CAAyC,CACrC,MAAI,CAAC,cAAL,CAAoB,OAApB,CAA4B,aAA5B,GACA,MAAI,CAAC,cAAL,CAAoB,OAApB,CAA4B,aAA5B,GACA,MAAI,CAAC,cAAL,CAAoB,OAApB,CAA4B,cAA5B,CAA2C,MAAI,CAAC,KAAL,CAAW,YAAX,CAAwB,WAAnE,EACH,CACJ,CARD,EASH,CAVD,IAUO,IAAG,YAAY,CAAC,IAAb,GAAsB,SAAzB,CAAoC,CACvC,KAAK,QAAL,CAAc,CACV,0BAA0B,CAAE,SADlB,CAAd,EAIA,GAAG,KAAK,KAAL,CAAW,qBAAX,GAAqC,KAAxC,CAA+C,CAC3C,KAAK,QAAL,CAAc,CACV,kBAAkB,CAAE,KADV,CAAd,EAGH,CACJ,CAVM,IAUA,CACH,GAAM,CAAA,SAAS,CAAG,YAAY,CAAC,IAAb,CAAmB,KAAnB,CAAyB,GAAzB,CAAlB,CACA,GAAI,CAAC,SAAL,CAAgB,CACZ,OACH,CACD,GAAM,CAAA,UAAU,CAAG,SAAS,CAAC,CAAD,CAA5B,CACA,GAAM,CAAA,SAAS,CAAG,SAAS,CAAC,CAAD,CAA3B,CACA,GAAM,CAAA,cAAc,CAAG,KAAK,mBAAL,CAA0B,8BAA1B,CAAyD,KAAK,KAAL,CAAW,6BAApE,CAAmG,UAAnG,CAA+G,SAA/G,CAAvB,CACA,GAAG,iBAAiB,GAAK,SAAtB,EAAmC,iBAAtC,CAAyD,CACrD,KAAK,QAAL,CAAc,CACV,0BAA0B,CAAE,SADlB,CAEV,6BAA6B,CAAE,cAFrB,CAAd,CAGc,UAAK,CACX,GAAG,MAAI,CAAC,cAAL,CAAoB,OAAvB,CAAgC,CAC5B,MAAI,CAAC,cAAL,CAAoB,OAApB,CAA4B,aAA5B,GACA,MAAI,CAAC,cAAL,CAAoB,OAApB,CAA4B,aAA5B,GACA,MAAI,CAAC,cAAL,CAAoB,OAApB,CAA4B,cAA5B,CAA2C,MAAI,CAAC,KAAL,CAAW,YAAX,CAAwB,WAAnE,EACH,CACR,CATD,EAUH,CAXD,IAWO,CACH,KAAK,QAAL,CAAc,CACV,0BAA0B,CAAE,cADlB,CAAd,EAGH,CACJ,CACJ,C,wDAEuB,Y,CAA8C,iBAClE,GAAM,CAAA,IAAI,CAAG,IAAI,CAAC,KAAL,CAAW,YAAY,CAAC,IAAxB,CAAb,CACA,GAAG,IAAI,CAAC,IAAL,GAAc,SAAjB,CAA4B,CACxB,KAAK,QAAL,CAAc,CACV,iBAAiB,CAAE,SADT,CAEV,oBAAoB,CAAE,EAFZ,CAAd,CAGc,UAAK,CACf,MAAI,CAAC,MAAL,CAAY,OAAZ,CAAqB,MAArB,CAA8B,MAAI,CAAC,KAAL,CAAW,aAAX,CAA2B,GAAzD,CACH,CALD,EAMH,CAPD,IAOO,CACH,KAAK,QAAL,CAAc,CACV,iBAAiB,CAAE,IAAI,CAAC,IADd,CAEV,oBAAoB,CAAE,IAAI,CAAC,GAFjB,CAAd,CAGc,UAAK,CACP,MAAI,CAAC,KAAL,CAAW,OAAX,CAAoB,WAApB,CAAkC,MAAI,CAAC,MAAL,CAAY,OAAZ,CAAqB,WAAvD,CACA,MAAI,CAAC,KAAL,CAAW,OAAX,CAAoB,MAApB,CAA6B,MAAI,CAAC,KAAL,CAAW,aAAX,CAA2B,GAAxD,CACA,MAAI,CAAC,MAAL,CAAY,OAAZ,CAAqB,MAArB,CAA8B,CAA9B,CACA,GAAG,CAAC,MAAI,CAAC,MAAL,CAAY,OAAZ,CAAqB,MAAzB,CAAiC,CAC7B,MAAI,CAAC,KAAL,CAAW,OAAX,CAAoB,IAApB,GAD6B,0CAEL,WAFK,aAE7B,kDAAqC,IAA3B,CAAA,UAA2B,cACjC,MAAI,CAAC,KAAL,CAAW,OAAX,CAAoB,gBAApB,CAAqC,UAArC,CAAiD,MAAI,CAAC,mBAAtD,EACH,CAJ4B,uDAKhC,CACZ,CAbD,EAcH,CACJ,C,gEAG2B,K,CAAY,CACpC,OAAQ,KAAK,CAAC,IAAN,CAAW,WAAX,EAAR,EAEI,IAAK,OAAL,CACI,KAAK,aAAL,GACA,MACJ,IAAK,SAAL,CACI,GAAG,KAAK,WAAL,GAAqB,SAAxB,CAAmC,CAC/B,KAAK,sBAAL,CAA8B,IAA9B,CACA,KAAK,KAAL,GACH,CACD,MAEJ,IAAK,YAAL,CACI,GAAG,KAAK,sBAAR,CAAgC,CAC5B,KAAK,sBAAL,CAA8B,KAA9B,CACA,KAAK,IAAL,GACH,CACD,GAAG,CAAC,KAAK,MAAL,CAAY,OAAZ,CAAqB,MAAzB,CAAiC,CAC7B,KAAK,IAAL,GACH,CACD,MAEJ,QAtBJ,CAwBH,C,sDAGsB,K,CAAY,CAC/B,OAAQ,KAAK,CAAC,IAAN,CAAW,WAAX,EAAR,EACI,IAAK,SAAL,CACA,IAAK,gBAAL,CACI,MAEJ,IAAK,OAAL,CACI,KAAK,aAAL,GACA,MAEJ,IAAK,MAAL,CACI,MAEJ,IAAK,OAAL,CACI,KAAK,YAAL,CAAkB,QAAlB,EACA,GAAG,KAAK,KAAL,CAAW,UAAX,CAAsB,OAAtB,CAA8B,gBAAjC,CAAmD,CAC/C,KAAK,QAAL,CAAc,CACV,YAAY,CAAE,IADJ,CAAd,EAGH,CACD,MAEJ,IAAK,SAAL,CACI,GAAI,KAAK,WAAL,GAAqB,OAArB,EAAgC,KAAK,MAAL,CAAY,OAAZ,CAAqB,OAAzD,CAAkE,CAC9D,KAAK,QAAL,CAAgB,KAAK,MAAL,CAAY,OAAZ,CAAqB,WAArC,CACA,KAAK,YAAL,CAAkB,SAAlB,EACH,CACD,MAEJ,IAAK,QAAL,CACI,GAAM,CAAA,aAAa,CAAG,KAAK,MAAL,CAAY,OAAlC,CACA,GAAM,CAAA,WAAW,CAAG,aAAc,CAAC,WAAnC,CACA,GAAI,KAAK,WAAL,GAAqB,OAArB,EAAgC,KAAK,MAAL,CAAY,OAAZ,CAAqB,OAArD,EAAgE,KAAK,QAAL,GAAkB,WAAtF,CAAmG,CAC/F,KAAK,QAAL,CAAgB,IAAhB,CACH,CACD,KAAK,YAAL,CAAkB,aAAc,CAAC,MAAf,CAAwB,QAAxB,CAAmC,SAArD,EACA,MAEJ,IAAK,SAAL,CACI,KAAK,YAAL,CAAkB,WAAlB,EACA,MAEJ,IAAK,gBAAL,CACI,MAEJ,IAAK,YAAL,CACI,KAAK,kBAAL,GACA,GAAI,CAAC,KAAK,KAAL,CAAW,UAAX,CAAsB,OAAtB,CAA8B,QAAnC,CAA6C,CACzC,KAAK,eAAL,CAAqB,KAArB,EACH,CACD,MAEJ,IAAK,YAAL,CACI,KAAK,aAAL,GACA,MAEJ,IAAK,OAAL,CACI,KAAK,YAAL,CAAkB,OAAlB,EACA,KAAK,KAAL,GACA,MAEJ,IAAK,SAAL,CACI,KAAK,YAAL,CAAkB,SAAlB,EACA,MAEJ,IAAK,cAAL,CACI,MAEJ,QAnEJ,CAqEH,C,qDAEoB,iBACjB,KAAK,KAAL,GACA,GAAM,CAAA,YAAY,CAA2B,CAAE,KAAK,CAAE,kEAAT,CAA7C,CACA,KAAK,oBAAL,CAA0B,YAA1B,EACA,KAAK,eAAL,CAAqB,CAAC,QAAQ,CAAE,aAAX,CAA0B,IAAI,CAAE,iCAAhC,CAAoE,EAAE,CAAE,EAAxE,CAArB,EACA,UAAU,CAAC,UAAK,CACZ,MAAI,CAAC,QAAL,CAAc,CACV,gBAAgB,CAAE,KADR,CAAd,CAEc,UAAK,CAAG,MAAI,CAAC,IAAL,GAAc,CAFpC,EAGH,CAJS,CAIC,IAJD,CAAV,CAKH,C,qDAGoB,CACjB,KAAK,YAAL,CAAkB,OAAlB,EACA,GAAM,CAAA,KAAK,CAA2B,KAAK,SAAL,EAAtC,CACA,GAAI,CAAA,YAAY,CAAG,EAAnB,CACA,GAAI,KAAK,EAAI,KAAK,CAAC,SAAnB,CAA8B,CAC1B,OAAQ,KAAK,CAAC,SAAd,EACI,IAAK,CAAA,eAAe,CAAC,iBAArB,CACI,YAAY,CAAG,4BAAf,CACA,MACJ,IAAK,CAAA,eAAe,CAAC,iBAArB,CACI,YAAY,CAAG,0BAAf,CACA,MACJ,IAAK,CAAA,eAAe,CAAC,gBAArB,CACI,YAAY,CAAG,uBAAf,CACA,MACJ,IAAK,CAAA,eAAe,CAAC,4BAArB,CACI,YAAY,CAAG,+BAAf,CACA,MACJ,QACI,YAAY,CAAG,wBAAf,CAdR,CAiBA,KAAK,UAAL,CAAgB,YAAhB,EACH,CAnBD,IAmBO,CACH,KAAK,UAAL,GACH,CACJ,C,8CAEkB,Y,CAAqB,CACpC,GAAI,YAAJ,CAAkB,CACd,KAAK,oBAAL,CAA0B,CAAE,KAAK,CAAE,YAAT,CAA1B,EACA,KAAK,YAAL,CAAkB,SAAlB,EACH,CACJ,C,kEAS4B,Y,CAAoC,CAC7D,KAAK,QAAL,CAAc,CAAE,iBAAiB,CAAE,CAAE,KAAK,CAAE,YAAY,CAAC,KAAtB,CAA6B,OAAO,CAAE,YAAY,CAAC,OAAnD,CAArB,CAAd,EACA,KAAK,QAAL,CAAc,CAAE,gBAAgB,CAAE,IAApB,CAAd,EACH,C,6CAQgB,CACb,GAAI,CAAA,gBAAJ,CACA,GAAG,KAAK,MAAL,CAAY,OAAZ,CAAqB,KAAxB,CAA+B,CAE3B,OAAQ,KAAK,MAAL,CAAY,OAAZ,CAAqB,KAArB,CAA2B,IAAnC,EACI,IAAK,MAAK,MAAL,CAAY,OAAZ,CAAqB,KAArB,CAA2B,iBAAhC,CACI,gBAAgB,CAAG,eAAe,CAAC,iBAAnC,CACA,MACJ,IAAK,MAAK,MAAL,CAAY,OAAZ,CAAqB,KAArB,CAA2B,iBAAhC,CACI,gBAAgB,CAAG,eAAe,CAAC,iBAAnC,CACA,MACJ,IAAK,MAAK,MAAL,CAAY,OAAZ,CAAqB,KAArB,CAA2B,gBAAhC,CACI,gBAAgB,CAAG,eAAe,CAAC,gBAAnC,CACA,MACJ,IAAK,MAAK,MAAL,CAAY,OAAZ,CAAqB,KAArB,CAA2B,2BAAhC,CACI,gBAAgB,CAAG,eAAe,CAAC,4BAAnC,CACA,MACJ,QACI,gBAAgB,CAAG,eAAe,CAAC,iBAAnC,CAdR,CAgBA,MAAO,CAAE,SAAS,CAAE,gBAAb,CAAP,CACH,CACD,MAAO,KAAP,CACH,C,gFAEmC,C,CAAsB,CACtD,GAAM,CAAA,WAAW,CAAI,CAArB,CACA,GAAM,CAAA,OAAO,CAAG,WAAW,CAAC,OAA5B,CACA,KAAK,eAAL,CAAqB,IAArB,EAGA,OAAQ,OAAR,EACI,IAAA,GAAA,CACI,CAAC,CAAC,eAAF,GACA,CAAC,CAAC,cAAF,GACA,KAAK,MAAL,CAAY,OAAZ,CAAqB,WAArB,CAAmC,CAAnC,CACA,GAAG,KAAK,KAAL,CAAW,OAAd,CAAuB,CACnB,KAAK,KAAL,CAAW,OAAX,CAAmB,WAAnB,CAAiC,CAAjC,CACH,CACD,MACJ,IAAA,GAAA,CACI,CAAC,CAAC,eAAF,GACA,CAAC,CAAC,cAAF,GACA,KAAK,MAAL,CAAY,OAAZ,CAAqB,WAArB,CAAmC,KAAK,KAAL,CAAW,YAAX,CAAwB,OAA3D,CACA,GAAG,KAAK,KAAL,CAAW,OAAd,CAAuB,CACnB,KAAK,KAAL,CAAW,OAAX,CAAmB,WAAnB,CAAiC,KAAK,KAAL,CAAW,YAAX,CAAwB,OAAzD,CACH,CACD,MACJ,IAAA,GAAA,CACA,IAAA,GAAA,CACI,CAAC,CAAC,eAAF,GACA,CAAC,CAAC,cAAF,GACA,GAAI,CAAA,UAAU,CACV,OAAO,GAAA,EAAP,CACM,KAAK,KAAL,CAAW,YAAX,CAAwB,WAAxB,CAAsC,eAAe,CAAC,uBAD5D,CAEM,KAAK,KAAL,CAAW,YAAX,CAAwB,WAAxB,CAAsC,eAAe,CAAC,uBAHhE,CAIA,UAAU,CAAG,IAAI,CAAC,GAAL,CAAS,IAAI,CAAC,GAAL,CAAS,KAAK,KAAL,CAAW,YAAX,CAAwB,SAAjC,CAA4C,UAA5C,CAAT,CAAkE,KAAK,KAAL,CAAW,YAAX,CAAwB,OAA1F,CAAb,CACA,KAAK,MAAL,CAAY,OAAZ,CAAqB,WAArB,CAAmC,UAAnC,CACA,GAAG,KAAK,KAAL,CAAW,OAAd,CAAuB,CACnB,KAAK,KAAL,CAAW,OAAX,CAAmB,WAAnB,CAAiC,UAAjC,CACH,CACD,MACJ,IAAA,GAAA,CACA,IAAA,GAAA,CACI,CAAC,CAAC,eAAF,GACA,CAAC,CAAC,cAAF,GACA,KAAK,YAAL,CAAkB,OAAlB,CAA2B,iBAA3B,CAA6C,IAA7C,EAAmD,IAAnD,CAAwD,IAAxD,EACA,GAAM,CAAA,MAAM,CACR,OAAO,GAAA,EAAP,CACM,IAAI,CAAC,GAAL,CAAS,CAAC,KAAK,KAAL,CAAW,aAAX,CAA2B,eAAe,CAAC,wBAA5C,EAAwE,GAAjF,CAAsF,CAAtF,CADN,CAEM,IAAI,CAAC,GAAL,CAAS,CAAC,KAAK,KAAL,CAAW,aAAX,CAA2B,eAAe,CAAC,wBAA5C,EAAwE,GAAjF,CAAsF,CAAtF,CAHV,CAIA,KAAK,QAAL,CAAc,CAAE,aAAa,CAAE,IAAI,CAAC,KAAL,CAAW,MAAM,CAAG,GAApB,CAAjB,CAAd,EACA,GAAG,KAAK,KAAL,CAAW,OAAd,CAAuB,CACnB,KAAK,KAAL,CAAW,OAAX,CAAmB,MAAnB,CAA4B,MAA5B,CACH,CAFD,IAEO,CACH,KAAK,MAAL,CAAY,OAAZ,CAAqB,MAArB,CAA8B,MAA9B,CACH,CACD,GAAI,MAAM,GAAK,CAAf,CAAkB,CACd,KAAK,QAAL,CAAc,CAAE,OAAO,CAAE,IAAX,CAAd,EACH,CAFD,IAEO,CACH,KAAK,QAAL,CAAc,CAAE,OAAO,CAAE,KAAX,CAAd,EACH,CACD,MACJ,QApDJ,CAsDH,C,yCAEc,CACX,KAAK,QAAL,CAAc,CAAE,OAAO,CAAE,IAAX,CAAd,EACH,C,2CAEe,CACZ,KAAK,QAAL,CAAc,CAAE,OAAO,CAAE,KAAX,CAAd,EACH,C,wDAEuB,Y,CAAuC,CAC3D,KAAK,QAAL,CAAc,CAAE,aAAa,CAAE,YAAY,CAAC,eAA9B,CAAd,EACA,GAAG,KAAK,KAAL,CAAW,OAAd,CAAuB,CACnB,KAAK,KAAL,CAAW,OAAX,CAAmB,MAAnB,CAA4B,YAAY,CAAC,eAAb,CAA+B,GAA3D,CACH,CAFD,IAEO,CACH,KAAK,MAAL,CAAY,OAAZ,CAAqB,MAArB,CAA8B,YAAY,CAAC,eAAb,CAA+B,GAA7D,CACH,CAED,GAAI,YAAY,CAAC,eAAb,GAAiC,CAArC,CAAwC,CACpC,KAAK,QAAL,CAAc,CAAE,OAAO,CAAE,IAAX,CAAd,EACH,CAFD,IAEO,CACH,GAAI,KAAK,KAAL,CAAW,OAAX,EAAsB,YAAY,CAAC,eAAb,CAA+B,CAAzD,CAA4D,CACxD,KAAK,QAAL,CAAc,CAAE,OAAO,CAAE,KAAX,CAAd,EACH,CACJ,CACJ,C,6CAEgB,CACb,GAAI,KAAK,KAAL,CAAW,OAAf,CAAwB,CACpB,GAAM,CAAA,SAAS,CAAG,KAAK,KAAL,CAAW,cAAX,GAA8B,CAA9B,CAAkC,eAAe,CAAC,aAAhB,CAAgC,GAAlE,CAAwE,KAAK,KAAL,CAAW,cAArG,CAEA,GAAG,KAAK,KAAL,CAAW,OAAd,CAAuB,CACnB,KAAK,KAAL,CAAW,OAAX,CAAmB,MAAnB,CAA4B,SAAS,CAAG,GAAxC,CACH,CAFD,IAEO,CACH,KAAK,MAAL,CAAY,OAAZ,CAAqB,MAArB,CAA8B,SAAS,CAAG,GAA1C,CACH,CACD,KAAK,QAAL,CAAc,CAAE,OAAO,CAAE,KAAX,CAAkB,aAAa,CAAE,SAAjC,CAAd,EACA,KAAK,0BAAL,CAAgC,KAAK,kBAAL,CAAwB,iBAAxB,CAA0C,iBAA1C,CAAhC,EACA,gBAAgB,CAAC,KAAK,KAAL,CAAW,gBAAZ,CAA+B,KAAK,OAApC,CAA6C,qBAAqB,CAAC,eAAnE,CAAhB,CAAoG,IAApG,CAAyG,IAAzG,EACH,CAXD,IAWO,CACH,KAAK,QAAL,CAAc,CAAE,OAAO,CAAE,IAAX,CAAiB,cAAc,CAAE,KAAK,MAAL,CAAY,OAAZ,CAAqB,MAArB,CAA8B,GAA/D,CAAoE,aAAa,CAAE,CAAnF,CAAd,EACA,KAAK,0BAAL,CAAgC,KAAK,kBAAL,CAAwB,iBAAxB,CAA0C,eAA1C,CAAhC,EACA,gBAAgB,CAAC,KAAK,KAAL,CAAW,gBAAZ,CAA+B,KAAK,OAApC,CAA6C,qBAAqB,CAAC,aAAnE,CAAhB,CAAkG,IAAlG,CAAuG,IAAvG,EACH,CACJ,C,0DAEwB,C,CAAsB,CAC3C,GAAM,CAAA,WAAW,CAAI,CAArB,CACA,GAAM,CAAA,OAAO,CAAG,WAAW,CAAC,OAA5B,CAEA,OAAQ,OAAR,EACI,IAAA,EAAA,CACI,KAAK,yBAAL,GAFR,CAIH,C,oDAEqB,K,CAAuC,CACzD,GAAI,KAAK,KAAL,CAAW,UAAX,CAAsB,OAAtB,CAA8B,QAAlC,CAA4C,CACxC,KAAK,eAAL,GACH,CACD,GAAG,CAAC,KAAK,KAAL,CAAW,gBAAZ,EAAgC,KAAK,KAAL,CAAW,OAA9C,CAAuD,CACnD,KAAK,QAAL,CAAc,CAAE,YAAY,CAAE,KAAK,CAAC,IAAN,GAAe,YAA/B,CAAd,EACH,CACJ,C,yDAE+C,oBAAxB,CAAA,QAAwB,2DAAJ,IAAI,CAC5C,GAAG,CAAC,KAAK,KAAL,CAAW,gBAAZ,EAAgC,CAAC,KAAK,KAAL,CAAW,gBAA/C,CAAiE,CAC7D,GAAI,CAAC,KAAK,KAAL,CAAW,qBAAhB,CAAuC,CACnC,KAAK,QAAL,CAAc,CAAE,qBAAqB,CAAE,IAAzB,CAAd,EACH,CACD,GAAI,CAAC,CAAC,KAAK,iBAAX,CAA8B,CAC1B,MAAM,EAAI,MAAM,CAAC,YAAP,CAAoB,KAAK,iBAAzB,CAAV,CACA,KAAK,iBAAL,CAAyB,CAAzB,CACH,CACD,GAAI,QAAJ,CAAc,CACV,KAAK,iBAAL,CAAyB,MAAM,EAAI,MAAM,CAAC,UAAP,CAAkB,UAAK,CACtD,MAAI,CAAC,eAAL,GACH,CAFkC,CAEkB,eAAe,CAAC,0BAFlC,CAAnC,CAGH,CACJ,CACJ,C,yDAEsB,CACnB,MAAM,EAAI,MAAM,CAAC,YAAP,CAAoB,KAAK,iBAAzB,CAAV,CACA,KAAK,iBAAL,CAAyB,CAAzB,CACA,KAAK,QAAL,CAAc,CAAE,qBAAqB,CAAE,KAAzB,CAAd,EACH,C,mEAE2B,CACxB,KAAK,KAAL,CAAW,cAAX,CAA4B,KAAK,iBAAL,EAA5B,CAAuD,KAAK,kBAAL,EAAvD,CACH,C,+DAQwB,CACtB,KAAK,QAAL,CAAc,CACV,cAAc,CAAE,IADN,CAAd,EAGF,C,6DAQuB,CACpB,KAAK,QAAL,CAAc,CACV,cAAc,CAAE,KADN,CAAd,EAGH,C,6DAEwB,CACrB,KAAK,KAAL,CAAW,cAAX,CAA4B,KAAK,eAAL,EAA5B,CAAqD,KAAK,gBAAL,EAArD,CACH,C,+DAEyB,CACtB,KAAK,QAAL,CAAc,CACV,cAAc,CAAE,KADN,CAAd,EAGH,C,2DAEuB,CACpB,GAAG,CAAC,MAAM,CAAC,0BAAP,EAAJ,CAAyC,CACrC,OACH,CAGD,GAAM,CAAA,iBAAiB,CAAG,KAAK,eAAL,CAAqB,OAA/C,CACA,GAAM,CAAA,mBAAmB,CAAG,MAAM,CAAC,uBAAP,EAA5B,CAGA,GAAI,CAAC,CAAC,iBAAF,EAAuB,CAAC,mBAA5B,CAAiD,CAC7C,GAAM,CAAA,eAAe,CAAG,iBAAiB,CAAC,iBAAlB,EACpB,iBAAiB,CAAC,mBADE,EAEpB,iBAAiB,CAAC,oBAFE,EAGpB,iBAAiB,CAAC,uBAHE,EAIpB,iBAAiB,CAAC,qBAJtB,CAMA,eAAe,CAAC,IAAhB,CAAqB,iBAArB,EACA,KAAK,0BAAL,CAAgC,KAAK,kBAAL,CAAwB,iBAAxB,CAA0C,iBAA1C,CAAhC,EACA,gBAAgB,CAAC,KAAK,KAAL,CAAW,gBAAZ,CAA+B,KAAK,OAApC,CAA6C,qBAAqB,CAAC,mBAAnE,CAAhB,CAAwG,IAAxG,CAA6G,IAA7G,EACH,CACJ,C,yDAEsB,CACnB,GAAG,CAAC,MAAM,CAAC,0BAAP,EAAJ,CAAyC,CACrC,OACH,CAGD,GAAM,CAAA,iBAAiB,CAAG,KAAK,eAAL,CAAqB,OAA/C,CACA,GAAM,CAAA,mBAAmB,CAAG,MAAM,CAAC,uBAAP,EAA5B,CAIA,GAAI,CAAC,CAAC,iBAAF,EAAuB,iBAAiB,GAAK,mBAAjD,CAAsE,CAElE,GAAM,CAAA,GAAG,CAAG,QAAZ,CACA,GAAM,CAAA,gBAAgB,CAAG,GAAG,CAAC,gBAAJ,EACrB,GAAG,CAAC,gBADiB,EAErB,GAAG,CAAC,mBAFiB,EAGrB,GAAG,CAAC,sBAHR,CAKA,gBAAgB,CAAC,IAAjB,CAAsB,GAAtB,EACA,KAAK,0BAAL,CAAgC,KAAK,kBAAL,CAAwB,iBAAxB,CAA0C,qBAA1C,CAAhC,EACA,gBAAgB,CAAC,KAAK,KAAL,CAAW,gBAAZ,CAA+B,KAAK,OAApC,CAA6C,qBAAqB,CAAC,uBAAnE,CAAhB,CAA4G,IAA5G,CAAiH,IAAjH,EACH,CACJ,C,+DAEyB,CACtB,KAAK,YAAL,CAAkB,OAAlB,EACA,GAAI,KAAK,KAAL,CAAW,UAAX,CAAsB,OAAtB,CAA8B,QAAlC,CAA4C,CACxC,GAAM,CAAA,QAAQ,CAAG,KAAK,gBAAL,EAAjB,CACA,KAAK,QAAL,CAAc,CAAE,YAAY,CAAE,QAAhB,CAAd,EACH,CACJ,C,qDAEoB,CACjB,GAAI,KAAK,KAAL,CAAW,UAAX,CAAsB,OAAtB,CAA8B,QAAlC,CAA4C,CACxC,GAAM,CAAA,QAAQ,CAAG,KAAK,gBAAL,EAAjB,CAEA,QAAQ,CAAC,OAAT,CAAmB,KAAK,KAAL,CAAW,YAAX,CAAwB,OAA3C,CACA,KAAK,QAAL,CAAc,CAAE,YAAY,CAAE,QAAhB,CAAd,EACA,GAAG,KAAK,KAAL,CAAW,OAAd,CAAuB,CACnB,GAAG,KAAK,WAAL,GAAqB,WAAxB,CAAqC,CACjC,KAAK,YAAL,CAAkB,SAAlB,EACH,CACJ,CACJ,CACJ,C,mEAE2B,CACxB,GAAI,CAAA,QAAQ,CAAG,CAAf,CACA,GAAI,KAAK,MAAL,CAAY,OAAZ,CAAqB,QAArB,EAAiC,KAAK,MAAL,CAAY,OAAZ,CAAqB,QAArB,CAA8B,MAAnE,CAA2E,CACvE,QAAQ,CAAG,KAAK,MAAL,CAAY,OAAZ,CAAqB,QAArB,CAA8B,GAA9B,CAAkC,KAAK,MAAL,CAAY,OAAZ,CAAqB,QAArB,CAA8B,MAA9B,CAAuC,CAAzE,CAAX,CACH,CACD,MAAO,CAAA,QAAP,CACH,C,2DAEuB,CACpB,GAAM,CAAA,gBAAgB,CAAG,KAAK,oBAAL,EAAzB,CACA,MAAO,CACH,WAAW,CAAE,KAAK,MAAL,CAAY,OAAZ,CAAqB,WAD/B,CAEH,SAAS,CAAE,CAFR,CAGH,OAAO,CAAE,KAAK,MAAL,CAAY,OAAZ,CAAqB,QAH3B,CAIH,gBAAgB,CAAE,gBAJf,CAAP,CAMH,C,4DAEyB,Y,CAAuC,CAC7D,GAAI,CAAA,IAAI,CAAG,YAAY,CAAC,eAAxB,CACA,GAAM,CAAA,QAAQ,CAAG,KAAK,gBAAL,EAAjB,CACA,IAAI,CAAG,IAAI,CAAC,GAAL,CAAS,QAAQ,CAAC,SAAlB,CAA6B,IAAI,CAAC,GAAL,CAAS,IAAT,CAAe,QAAQ,CAAC,OAAxB,CAA7B,CAAP,CAEA,GAAI,IAAI,CAAC,GAAL,CAAS,IAAI,CAAG,QAAQ,CAAC,WAAzB,GAAyC,eAAe,CAAC,8BAA7D,CAA6F,CACzF,KAAK,MAAL,CAAY,OAAZ,CAAqB,WAArB,CAAmC,IAAnC,CACA,GAAG,KAAK,KAAL,CAAW,OAAd,CAAuB,CACnB,KAAK,KAAL,CAAW,OAAX,CAAmB,WAAnB,CAAiC,IAAjC,CACH,CACJ,CACJ,C,6DAEwB,iBACrB,GAAM,CAAA,aAAa,CAAG,KAAK,MAAL,CAAY,OAAlC,CACA,GAAG,CAAC,KAAK,cAAT,CAAyB,CACrB,KAAK,WAAL,GACA,KAAK,MAAL,CAAY,OAAZ,CAAqB,QAArB,CAAgC,IAAhC,CACH,CAHD,IAGO,CACH,GAAI,aAAc,CAAC,MAAnB,CAA2B,CACvB,KAAK,IAAL,GACA,KAAK,0BAAL,CAAgC,KAAK,kBAAL,CAAwB,iBAAxB,CAA0C,kBAA1C,CAAhC,EACA,gBAAgB,CAAC,KAAK,KAAL,CAAW,gBAAZ,CAA+B,KAAK,OAApC,CAA6C,qBAAqB,CAAC,aAAnE,CAAhB,CAAkG,IAAlG,CAAuG,IAAvG,EACH,CAJD,IAIO,CACH,KAAK,KAAL,GACA,KAAK,0BAAL,CAAgC,KAAK,kBAAL,CAAwB,iBAAxB,CAA0C,iBAA1C,CAAhC,EACA,gBAAgB,CAAC,KAAK,KAAL,CAAW,gBAAZ,CAA+B,KAAK,OAApC,CAA6C,qBAAqB,CAAC,cAAnE,CAAhB,CAAmG,IAAnG,CAAwG,IAAxG,EACH,CACJ,CAED,GAAG,KAAK,KAAL,CAAW,gBAAd,CAAgC,CAC5B,KAAK,QAAL,CAAc,CAAE,gBAAgB,CAAE,KAApB,CAAd,CAA2C,UAAK,CAAG,MAAI,CAAC,YAAL,CAAkB,OAAlB,CAA2B,cAA3B,GAA8C,CAAjG,EACA,gBAAgB,CAAC,KAAK,KAAL,CAAW,gBAAZ,CAA+B,KAAK,OAApC,CAA6C,qBAAqB,CAAC,cAAnE,CAAhB,CAAmG,IAAnG,CAAwG,IAAxG,EACA,GAAG,KAAK,KAAL,CAAW,UAAX,CAAsB,OAAtB,CAA8B,cAAjC,CAAiD,CAC7C,KAAK,gBAAL,GACH,CACJ,CACJ,C,qCAEY,CACT,KAAK,KAAL,CAAW,CAAX,EACA,GAAI,KAAK,KAAL,CAAW,UAAX,CAAsB,OAAtB,CAA8B,QAAlC,CAA4C,CACxC,KAAK,KAAL,GACA,GAAM,CAAA,YAAY,CAAG,KAAK,gBAAL,EAArB,CACA,YAAY,CAAC,OAAb,CAAuB,KAAK,KAAL,CAAW,YAAX,CAAwB,OAA/C,CACA,KAAK,QAAL,CAAc,CAAE,YAAY,CAAE,YAAhB,CAAd,EACA,GAAG,KAAK,KAAL,CAAW,OAAd,CAAuB,CACnB,KAAK,KAAL,CAAW,OAAX,CAAmB,KAAnB,GACH,CACJ,CACJ,C,oCAEa,I,CAAY,CACtB,GAAM,CAAA,QAAQ,CAAG,KAAK,gBAAL,EAAjB,CACA,IAAI,CAAG,IAAI,CAAC,GAAL,CAAS,QAAQ,CAAC,SAAlB,CAA6B,IAAI,CAAC,GAAL,CAAS,IAAT,CAAe,QAAQ,CAAC,OAAxB,CAA7B,CAAP,CAEA,GAAI,IAAI,CAAC,GAAL,CAAS,IAAI,CAAG,QAAQ,CAAC,WAAzB,GAAyC,eAAe,CAAC,8BAA7D,CAA6F,CACzF,KAAK,QAAL,CAAgB,QAAQ,CAAC,WAAzB,CACA,KAAK,MAAL,CAAY,OAAZ,CAAqB,WAArB,CAAmC,IAAnC,CACA,GAAG,KAAK,KAAL,CAAW,OAAd,CAAuB,CACnB,KAAK,KAAL,CAAW,OAAX,CAAmB,WAAnB,CAAiC,IAAjC,CACH,CACJ,CACJ,C,+DAQyB,CACtB,GAAI,CAAA,MAAJ,CACA,GAAM,CAAA,SAAS,CAAG,KAAK,KAAL,CAAW,UAAX,CAAsB,OAAtB,CAA8B,SAA9B,EAA2C,eAAe,CAAC,gBAA7E,CACA,MAAM,CAAG,MAAM,CAAC,iBAAD,CAAoB,MAAM,CAAC,SAAD,CAAN,CAAoB,GAAxC,CAAf,CACA,MAAO,CAAA,MAAP,CACH,C,kDASoB,Q,CAAsB,CACvC,GAAI,CAAC,QAAD,EAAa,QAAQ,GAAK,KAAK,WAAnC,CAAgD,CAC5C,OACH,CAED,KAAK,WAAL,CAAmB,QAAnB,CAEA,KAAK,yBAAL,GACA,KAAK,wBAAL,GACH,C,2EAQ+B,CAC5B,OAAQ,KAAK,WAAb,EACI,IAAK,OAAL,CACA,IAAK,SAAL,CACA,IAAK,QAAL,CACA,IAAK,OAAL,CACA,IAAK,SAAL,CACA,IAAK,OAAL,CACI,KAAK,YAAL,GACA,MACJ,QACI,KAAK,YAAL,GAVR,CAYH,C,6EAQgC,CAC7B,OAAQ,KAAK,WAAb,EACI,IAAK,OAAL,CACA,IAAK,SAAL,CACA,IAAK,MAAL,CACI,KAAK,eAAL,GACA,MACJ,IAAK,OAAL,CACI,KAAK,eAAL,CAAqB,KAArB,EACA,MACJ,IAAK,OAAL,CACA,IAAK,QAAL,CACA,IAAK,SAAL,CACI,KAAK,eAAL,CAAqB,KAArB,EACA,MACJ,QACA,KAAK,eAAL,CAAqB,IAArB,EAfJ,CAiBH,C,mDAEmB,CAChB,KAAK,QAAL,CAAc,CAAE,WAAW,CAAE,KAAf,CAAd,EACH,C,mDAEmB,CAChB,KAAK,QAAL,CAAc,CAAE,WAAW,CAAE,IAAf,CAAd,EACH,C,yDAQsB,CACnB,KAAK,QAAL,CAAc,CAAE,YAAY,CAAE,IAAhB,CAAd,EACH,C,uDAQqB,CAClB,GAAG,CAAC,KAAK,KAAL,CAAW,gBAAZ,EAAgC,KAAK,KAAL,CAAW,OAA9C,CAAuD,CACnD,KAAK,QAAL,CAAc,CAAE,YAAY,CAAE,KAAhB,CAAd,EACH,CACJ,C,8EAQiC,I,CAAY,CAC1C,KAAK,QAAL,CAAc,CACV,gBAAgB,CAAE,IADR,CAAd,EAIH,C,oEAQ6B,C,CAAmB,CAC7C,CAAC,CAAC,cAAF,GACH,C,6CAQgB,CACb,GAAI,QAAQ,CAAC,gBAAT,CAA0B,SAA9B,CAAyC,CACrC,GAAM,CAAA,SAAS,CAAG,MAAM,CAAC,SAAP,CAAiB,SAAnC,CACA,GAAM,CAAA,QAAQ,CAAG,CAAC,CAAC,SAAS,CAAC,KAAV,CAAgB,SAAhB,CAAnB,CACA,GAAM,CAAA,MAAM,CAAG,CAAC,CAAC,SAAS,CAAC,KAAV,CAAgB,OAAhB,CAAjB,CACA,GAAM,CAAA,cAAc,CAAG,CAAC,CAAC,SAAS,CAAC,KAAV,CAAgB,gBAAhB,CAAzB,CACA,GAAM,CAAA,SAAS,CAAG,CAAC,cAAD,GAAoB,MAAM,EACxC,CAAC,CAAC,SAAS,CAAC,KAAV,CAAgB,UAAhB,CADY,CAAlB,CAEA,MAAO,CAAA,QAAQ,EAAI,cAAZ,EAA8B,SAArC,CACH,CACD,MAAO,MAAP,CACH,C,iFA5vCwC,CAEzC,GAAM,CAAA,GAAG,CAAG,QAAZ,CACA,MAAO,CAAA,GAAG,CAAC,iBAAJ,EAAyB,GAAG,CAAC,oBAA7B,EAAqD,GAAG,CAAC,uBAAzD,EAAoF,GAAG,CAAC,wBAAxF,EACH,GAAG,CAAC,mBADR,CAEC,C,yEASqC,CAElC,GAAM,CAAA,GAAG,CAAG,QAAZ,CACA,MAAO,CAAA,GAAG,CAAC,iBAAJ,EAAyB,GAAG,CAAC,oBAA7B,EAAqD,GAAG,CAAC,uBAAzD,EAAoF,GAAG,CAAC,mBAA/F,CACH,C,oBA5F+B,KAAK,CAAC,S,SAArB,M,aACH,MAAA,CAAA,YAAA,CAAsC,CAChD,UAAU,CAAE,CACR,OAAO,CAAE,CACL,QAAQ,CAAE,IADL,CAEL,OAAO,CAAE,KAFJ,CAGL,IAAI,CAAE,IAHD,CAIL,IAAI,CAAE,KAJD,CAKL,gBAAgB,CAAE,KALb,CAML,QAAQ,CAAE,IANL,CAOL,eAAe,CAAE,KAPZ,CAQL,QAAQ,CAAE,IARL,CADD,CAWR,QAAQ,CAAE,CACN,UAAU,CAAE,aADN,CAEN,OAAO,CAAE,EAFH,CAGN,KAAK,CAAE,EAHD,CAIN,WAAW,CAAE,EAJP,CAKN,QAAQ,CAAE,CALJ,CAMN,cAAc,CAAE,EANV,CAON,QAAQ,CAAE,EAPJ,CAQN,UAAU,CAAE,EARN,CASN,iBAAiB,CAAE,EATb,CAUN,gBAAgB,CAAE,EAVZ,CAWN,qBAAqB,CAAE,EAXjB,CAXF,CADoC,CA0BhD,eAAe,CAAE,CACb,aAAa,CAAE,qBAAqB,CAAC,aADxB,CAEb,cAAc,CAAE,qBAAqB,CAAC,cAFzB,CAGb,cAAc,CAAE,qBAAqB,CAAC,cAHzB,CAIb,aAAa,CAAE,qBAAqB,CAAC,aAJxB,CAKb,eAAe,CAAE,qBAAqB,CAAC,eAL1B,CAMb,mBAAmB,CAAE,qBAAqB,CAAC,mBAN9B,CAOb,uBAAuB,CAAE,qBAAqB,CAAC,uBAPlC,CAQb,eAAe,CAAE,qBAAqB,CAAC,eAR1B,CASb,gBAAgB,CAAE,qBAAqB,CAAC,gBAT3B,CAUb,YAAY,CAAE,qBAAqB,CAAC,YAVvB,CAWb,sBAAsB,CAAE,qBAAqB,CAAC,sBAXjC,CAYb,kBAAkB,CAAE,qBAAqB,CAAC,kBAZ7B,CA1B+B,CAAtC","sourcesContent":["/**\n * Copyright (c) 2018 Microsoft Corporation\n */\nimport { getPayloadObject, IPayLoad, ISliderChangeNotification, onTelemetryClick, Waiting } from '@msdyn365-commerce-modules/utilities';\nimport * as React from 'react';\nimport * as MsDyn365 from '@msdyn365-commerce/core';\nimport AgeGate from '../../components/age-gate/AgeGate';\nimport ClosedCaptions from '../../components/closed-captions/video-closed-captions';\nimport { closedCaptionsSettingDefaults, videoClosedCaptionsConstant } from '../../components/closed-captions/video-closed-captions-settings';\nimport {\n    ICurrentClosedCaptionsSettings,\n    IPlayerMenu,\n    IPlayerMenuItemClickNotification,\n    IPlayPosition,\n    IVideoErrorData,\n    IVideoErrorMessageData,\n    MediaEvents,\n    MenuCategories,\n    PlayerConstants,\n    PlayerStates,\n    VideoErrorCodes,\n    VideoPlayerNames\n} from '../../components/data/player-constants';\nimport { ClosedCaptionTypes, ICCFile, IVideoMetadata } from '../../components/data/player-metadata';\nimport ClosedCaptionHelper from '../../components/helper/closedCaptionHelper';\nimport LocalizationHelper, { LocalizationConstants } from '../../components/helper/localization-helper';\nimport PlayerHelper from '../../components/helper/playerHelper';\nimport PlayPauseTrigger from '../../components/play-pause-trigger/PlayPauseTrigger';\nimport { KeyCodes } from '../../components/utilities/KeyCodes';\nimport { format, isNullOrWhiteSpace } from '../../components/utilities/stringExtensions';\nimport VideoControls from '../../components/video-controls/VideoControls';\nimport { IPlayerProps } from './Player.props';\n\n/**\n * Player state interface\n */\nexport interface IPlayerState {\n    playing: boolean;\n    mouseHovered: boolean;\n    isControlPanelVisible: boolean;\n    doControlsHaveFocus: boolean;\n    playPosition: IPlayPosition;\n    currentVolume: number;\n    isTriggerEnabled: boolean;\n    previousVolume: number;\n    isMuted: boolean;\n    isInFullScreen: boolean;\n    showSpinner: boolean;\n    showErrorMessage: boolean;\n    videoErrorMessage: IVideoErrorMessageData;\n    screenReaderText: string;\n    showClosedCaptions: boolean;\n    isAgegateEnabled: boolean;\n    currentAudioTrack: string;\n    currentAudioTrackURL: string;\n    closedCaptionLanguage: string;\n    closedCaptionsURL: string;\n    currentClosedCaptionsSettings: ICurrentClosedCaptionsSettings;\n    mounted: boolean;\n    tempClosedCaptionsSettings?: {};\n}\n\n/**\n *\n * Player component\n *\n */\nexport default class Player extends React.Component<IPlayerProps, IPlayerState> {\n    public static defaultProps: Partial<IPlayerProps> = {\n        playerData: {\n            options: {\n                autoplay: true,\n                ageGate: false,\n                mute: true,\n                loop: false,\n                playPauseTrigger: false,\n                controls: true,\n                hidePosterFrame: false,\n                lazyLoad: true,\n            },\n            metaData: {\n                playerName: 'videoPlayer',\n                videoId: '',\n                title: '',\n                description: '',\n                duration: 0,\n                posterframeUrl: '',\n                shareUrl: '',\n                videoFiles: [],\n                externalPlayerUrl: '',\n                externalSourceId: '',\n                videoBinaryReferences: []\n            }\n        },\n        playerResources: {\n            playAriaLabel: LocalizationConstants.playAriaLabel,\n            pauseAriaLabel: LocalizationConstants.pauseAriaLabel,\n            closeAriaLabel: LocalizationConstants.closeAriaLabel,\n            muteAriaLabel: LocalizationConstants.muteAriaLabel,\n            unMuteAriaLabel: LocalizationConstants.unMuteAriaLabel,\n            fullScreenAriaLabel: LocalizationConstants.fullScreenAriaLabel,\n            exitFullScreenAriaLabel: LocalizationConstants.exitFullScreenAriaLabel,\n            pausedAriaLabel: LocalizationConstants.pausedAriaLabel,\n            playingAriaLabel: LocalizationConstants.playingAriaLabel,\n            seekBarLabel: LocalizationConstants.seekBarLabel,\n            videoTimeDurationLabel: LocalizationConstants.videoTimeDurationLabel,\n            closedCaptionLabel: LocalizationConstants.closedCaptionLabel\n        },\n    };\n\n    private controlPanelTimer: number = 0;\n    private playerId: string;\n    private player: React.RefObject<HTMLVideoElement> = React.createRef<HTMLVideoElement>();\n    private audio: React.RefObject<HTMLAudioElement> = React.createRef<HTMLAudioElement>();\n    private playerContainer: React.RefObject<HTMLDivElement> = React.createRef<HTMLDivElement>();\n    private videoControl: React.RefObject<VideoControls> = React.createRef<VideoControls>();\n    private ClosedCaptions: React.RefObject<ClosedCaptions> = React.createRef<ClosedCaptions>();\n    private ageGateContainer: React.RefObject<AgeGate> = React.createRef<AgeGate>();\n    private videoUrl: string = '';\n    private posterFrameUrl: string = '';\n    private seekFrom: number | null = null;\n    private playerState: PlayerStates;\n    private playerHelper: PlayerHelper;\n    private localizationHelper: LocalizationHelper;\n    private closedCaptionHelper: ClosedCaptionHelper | null = null;\n    private closedCaptionMenu: IPlayerMenu | null = null;\n    private optionsMenu: IPlayerMenu | null = null;\n    private selectedClosedCaptionsLocale: string | null = '';\n    private isPlayerManuallyPaused: boolean = false;\n    private isPlayerLoaded: boolean = false;\n    private playerMetaData: IVideoMetadata;\n    private isMobileDevice: boolean;\n    private payLoad: IPayLoad;\n\n    /*\n    * @name - isNativeFullscreenEnabled\n    * @description - Checks if fullscreen is supported by browser or not.\n    * @private\n    * @static\n    * @returns {boolean}\n    */\n    private static _isNativeFullscreenEnabled(): boolean {\n    // tslint:disable-next-line:no-any\n    const doc = document as any;\n    return doc.fullscreenEnabled || doc.mozFullScreenEnabled || doc.webkitFullscreenEnabled || doc.webkitSupportsFullscreen ||\n        doc.msFullscreenEnabled;\n    }\n\n    /*\n    * @name - getElementInFullScreen\n    * @description - gets the current fullscreen element.\n    * @private\n    * @returns {any}\n    */\n    // tslint:disable-next-line:no-any\n    private static _getElementInFullScreen(): any {\n        // tslint:disable-next-line:no-any\n        const doc = document as any;\n        return doc.fullscreenElement || doc.mozFullScreenElement || doc.webkitFullscreenElement || doc.msFullscreenElement;\n    }\n\n    // tslint:disable-next-line: cyclomatic-complexity max-func-body-length\n    constructor(props: IPlayerProps) {\n        super(props);\n        this.isMobileDevice = this._isMobile();\n        const state = {\n            playing: false,\n            mouseHovered: this.props.playerData.options.playPauseTrigger! || !this.props.playerData.options.autoplay!,\n            isControlPanelVisible: !this.props.playerData.options.playPauseTrigger,\n            doControlsHaveFocus: false,\n            isTriggerEnabled: this.props.playerData.options.playPauseTrigger! && !this.props.playerData.options.autoplay! && this.props.playerData.options.controls!,\n            currentVolume: this.props.playerData.options.mute && !this.isMobileDevice ? 0 : PlayerConstants.defaultVolume * 100,\n            previousVolume: 0,\n            isMuted: this.props.playerData.options.mute || false,\n            isInFullScreen: false,\n            showSpinner: false,\n            isAgegateEnabled: this.props.playerData.options.ageGate! && !this.props.playerData.options.autoplay!,\n            showErrorMessage: false,\n            screenReaderText: '',\n            closedCaptionLanguage: 'off',\n            currentAudioTrack: 'default',\n            currentAudioTrackURL: '',\n            showClosedCaptions: false,\n            mounted: false,\n            currentClosedCaptionsSettings : {\n                preset: closedCaptionsSettingDefaults.preset,\n                text_font: closedCaptionsSettingDefaults.text_font,\n                text_color: closedCaptionsSettingDefaults.text_color,\n                text_opacity: closedCaptionsSettingDefaults.text_opacity,\n                text_size: closedCaptionsSettingDefaults.text_size,\n                text_edge_style: closedCaptionsSettingDefaults.text_edge_style,\n                text_background_color: closedCaptionsSettingDefaults.text_background_color,\n                text_background_opacity: closedCaptionsSettingDefaults.text_background_opacity,\n                window_color: closedCaptionsSettingDefaults.window_color,\n                window_opacity: closedCaptionsSettingDefaults.window_opacity\n            } ,\n            closedCaptionsURL: '',\n            videoErrorMessage: {\n                title: '',\n                message: ''\n            },\n            playPosition: {\n                currentTime: 0,\n                startTime: 0,\n                endTime: 0,\n                bufferedDuration: 0\n            },\n            tempClosedCaptionsSettings: undefined\n        };\n\n        this.playerState = 'init';\n        this._onTriggerClicked = this._onTriggerClicked.bind(this);\n        this._onMouseEvent = this._onMouseEvent.bind(this);\n        this._onPlay = this._onPlay.bind(this);\n        this._onPause = this._onPause.bind(this);\n        this._triggerEvents = this._triggerEvents.bind(this);\n        this._triggerAudioEvents = this._triggerAudioEvents.bind(this);\n        this._onProgressChange = this._onProgressChange.bind(this);\n        this._setMuted = this._setMuted.bind(this);\n        this._onVolumeChange = this._onVolumeChange.bind(this);\n        this._onFullScreenChanged = this._onFullScreenChanged.bind(this);\n        this._toggleFullScreen = this._toggleFullScreen.bind(this);\n        this._showControlBar = this._showControlBar.bind(this);\n        this._handleControlsKeyDownEvent = this._handleControlsKeyDownEvent.bind(this);\n        this._onFullscreenError = this._onFullscreenError.bind(this);\n        this._onPlayerKeyDown = this._onPlayerKeyDown.bind(this);\n        this._onTriggerFocus = this._onTriggerFocus.bind(this);\n        this._onTriggerBlur = this._onTriggerBlur.bind(this);\n        this._onVideoControlsFocus = this._onVideoControlsFocus.bind(this);\n        this._onVideoControlsBlur = this._onVideoControlsBlur.bind(this);\n        this._onPlayerMenuItemClick = this._onPlayerMenuItemClick.bind(this);\n        this._onPlayerMenuItemFocus = this._onPlayerMenuItemFocus.bind(this);\n        this._onPlayerMenuItemBlur = this._onPlayerMenuItemBlur.bind(this);\n        this._validateAgeSubmitHandler = this._validateAgeSubmitHandler.bind(this);\n        this._onContextMenuClicked = this._onContextMenuClicked.bind(this);\n        this.localizationHelper = new LocalizationHelper(this.props.playerResources!);\n        this.playerHelper = new PlayerHelper(this.props,  this.localizationHelper);\n        this.playerId = this.playerHelper.isEmptyOrUndefined(this.props.playerId) ? 'vid-0' : this.props.playerId!;\n        this.playerMetaData = this.playerHelper.getMetadata();\n        this.state = state;\n        this.posterFrameUrl = this.playerHelper.getPosterFrameUrl();\n        this.payLoad = getPayloadObject('click', this.props.telemetryContent!, '');\n    }\n\n    // tslint:disable-next-line: cyclomatic-complexity\n    public render(): JSX.Element {\n        const maskLevelStyle = {} as React.CSSProperties;\n        if(this.state.isTriggerEnabled) {\n            maskLevelStyle.backgroundColor = this._getMaskLevelStyle();\n        }\n\n        if (this.props.isEditor) {\n            this.playerHelper.updatePlayerProps(this.props);\n            this.playerMetaData = this.playerHelper.getMetadata();\n            if (this.posterFrameUrl !== this.playerHelper.getPosterFrameUrl()) {\n                this.posterFrameUrl = this.playerHelper.getPosterFrameUrl();\n            }\n            if (this.isPlayerLoaded && this.videoUrl !== this.playerHelper.getVideoFileToPlay().url) {\n                this._loadPlayer();\n            }\n        }\n        // Set play aria label\n        let playAriaLabel: string = '';\n        if(this.playerMetaData.title) {\n            playAriaLabel = `${this.localizationHelper.getLocalizedValue('playAriaLabel')} ${this.playerMetaData.title}`;\n        } else {\n            playAriaLabel = LocalizationConstants.playVideoAriaLabel;\n        }\n\n        return (\n            <div\n                role='none'\n                className={`${VideoPlayerNames.videoplayerContainer}`}\n                ref={this.playerContainer}\n                onKeyDown={this._onPlayerKeyDown}\n                onMouseEnter={this._onMouseEvent}\n                onMouseLeave={this._onMouseEvent}\n                data-playerid={this.playerId}\n            >\n                <div className={`${VideoPlayerNames.videoplayerContainer}__wrapper`}>\n                {(this.state.currentAudioTrack !== '' && this.state.currentAudioTrackURL !== '') && (\n                        <audio\n                            ref={this.audio}\n                            preload='auto'\n                            src={this.state.currentAudioTrackURL}\n                            muted={this.state.isMuted}\n                            loop={this.props.playerData.options.loop}\n                        />\n                    )}\n                    <video\n                        className={`${VideoPlayerNames.videoplayerContainer}__video`}\n                        ref={this.player}\n                        preload={'metadata'}\n                        autoPlay={this.props.playerData.options.autoplay}\n                        muted={this.state.isMuted}\n                        loop={this.props.playerData.options.loop}\n                        onPlay={this._onPlay}\n                        onPause={this._onPause}\n                        onClick={!this.state.isAgegateEnabled ? this._onTriggerClicked : this._onPause}\n                        role='none'\n                        src={this.state.mounted ? this.videoUrl : ''}\n                        onContextMenu={this._onContextMenuClicked}\n                        poster={this.state.mounted ? this.posterFrameUrl : ''}\n                        playsInline={true}\n                    />\n                    <div className={`${VideoPlayerNames.videoplayerContainer}__errormessage`} role='status' aria-hidden={!this.state.showErrorMessage}>\n                        <div className={`${VideoPlayerNames.videoplayerContainer}__errormessage__wrapper`}>\n                            <p className={`${VideoPlayerNames.videoplayerContainer}__errormessage__heading`}>{this.state.videoErrorMessage.title}</p>\n                        </div>\n                    </div>\n                    <div className={`${VideoPlayerNames.videoplayerContainer}__screenreader`} aria-live='assertive'>\n                        {this.state.screenReaderText}\n                    </div>\n                    <div\n                        className={`${VideoPlayerNames.videoplayerContainer}__spinner`}\n                        role='status'\n                        aria-hidden={!this.state.showSpinner}\n                    >\n                        <Waiting className={`${VideoPlayerNames.videoplayerContainer}__waiting`}/>\n                    </div>\n                    {(this.props.playerData.options.ageGate) && (\n                            this._renderAgeGate()\n                    )}\n                    {(this.props.playerData.options.playPauseTrigger && !this.props.playerData.options.controls ||\n                         this.state.isTriggerEnabled && !this.state.isAgegateEnabled) && (\n                            this._renderPlayPauseTrigger(playAriaLabel, maskLevelStyle)\n                    )}\n                    {(this.state.showClosedCaptions) && this._renderClosedCaptions()}\n                    {(this.props.playerData.options.controls &&\n                         !this.state.isTriggerEnabled && !this.state.isAgegateEnabled) && (\n                        this._renderVideoControls(playAriaLabel)\n                    )}\n                </div>\n            </div>\n        );\n    }\n\n    /*\n     * @name - play\n     * description - play the video\n     * @public\n     * @returns {void}\n    */\n   public play(): void {\n        this.player.current!.play().catch(() => {\n            this._onVideoError();\n        });\n        if(this.audio.current) {\n            this.audio.current.play().catch(() => {\n                this._onAudioError();\n            });\n        }\n    }\n\n    /*\n     * @name - pause\n     * description - pause the video\n     * @public\n     * @returns {void}\n    */\n   public pause(): void {\n        this.player.current!.pause();\n        if(this.audio.current) {\n            this.audio.current.pause();\n        }\n    }\n\n    public componentDidMount(): void {\n        this.setState({mounted: true});\n        if((this.props.playerData.options.autoplay) || (this.props.playerData.options.lazyLoad && !this.props.playerData.options.playPauseTrigger)\n        || !this.props.playerData.options.lazyLoad) {\n            this._loadPlayer();\n        }\n        document.addEventListener('fullscreenchange', this._onFullScreenChanged);\n        document.addEventListener('mozfullscreenchange', this._onFullScreenChanged);\n        document.addEventListener('webkitfullscreenchange', this._onFullScreenChanged);\n        document.addEventListener('MSFullscreenChange', this._onFullScreenChanged);\n\n        document.addEventListener('fullscreenerror', this._onFullscreenError);\n        document.addEventListener('mozfullscreenerror', this._onFullscreenError);\n        document.addEventListener('webkitfullscreenerror', this._onFullscreenError);\n        document.addEventListener('MSFullscreenError', this._onFullscreenError);\n    }\n\n    public componentWillUnmount(): void {\n        if (this.player.current) {\n            for (const mediaEvent of MediaEvents) {\n                this.player.current.removeEventListener(mediaEvent, this._triggerEvents);\n            }\n        }\n        document.removeEventListener('fullscreenchange', this._onFullScreenChanged);\n        document.removeEventListener('mozfullscreenchange', this._onFullScreenChanged);\n        document.removeEventListener('webkitfullscreenchange', this._onFullScreenChanged);\n        document.removeEventListener('MSFullscreenChange', this._onFullScreenChanged);\n\n        document.removeEventListener('fullscreenerror', this._onFullscreenError);\n        document.removeEventListener('mozfullscreenerror', this._onFullscreenError);\n        document.removeEventListener('webkitfullscreenerror', this._onFullscreenError);\n        document.removeEventListener('MSFullscreenError', this._onFullscreenError);\n    }\n\n    private _renderClosedCaptions = ():  JSX.Element => {\n        return (\n            <ClosedCaptions\n                ref={this.ClosedCaptions}\n                className={`${VideoPlayerNames.videoplayerContainer}__ccoverlay`}\n                showClosedCaptions={this.state.showClosedCaptions}\n                currentTime={this.state.playPosition.currentTime}\n                ccLanguage={this.state.closedCaptionLanguage}\n                ccURL={this.state.closedCaptionsURL}\n                errorCallback={this.playerHelper.onErrorCallback}\n                isVideoControlVisible={this.state.isControlPanelVisible || this.state.doControlsHaveFocus}\n                currentClosedCaptionsSettings={this.state.currentClosedCaptionsSettings}\n                tempClosedCaptionsSettings={this.state.tempClosedCaptionsSettings}\n                onClosedCaptionClick={this._onTriggerClicked}\n            />\n        );\n    }\n\n    private _renderPlayPauseTrigger = (playAriaLabel: string, maskLevelStyle: React.CSSProperties): JSX.Element => {\n        return (\n            <PlayPauseTrigger\n                className={`${VideoPlayerNames.videoplayerContainer}__playpausetrigger`}\n                style={maskLevelStyle}\n                onChange={this._onTriggerClicked}\n                toggled={this.state.playing}\n                aria-hidden={!this.state.mouseHovered}\n                playAriaLabel={playAriaLabel}\n                pauseAriaLabel={this.localizationHelper.getLocalizedValue('pauseAriaLabel')}\n                onFocus={this._onTriggerFocus}\n                onBlur={this._onTriggerBlur}\n                telemetryContent={this.props.telemetryContent}\n            />\n        );\n    }\n\n    private _renderVideoControls = (playAriaLabel: string): JSX.Element => {\n        return (\n            <VideoControls\n                    ref={this.videoControl}\n                    className={`${VideoPlayerNames.videoplayerContainer}__controls ${\n                        (this.state.isControlPanelVisible || this.state.doControlsHaveFocus) ? 'show' : 'hide'\n                    }`}\n                    aria-hidden={!(this.state.isControlPanelVisible || this.state.doControlsHaveFocus)}\n                    onPlayClick={this._onTriggerClicked}\n                    playing={this.state.playing}\n                    closedCaptionMenu={this.closedCaptionMenu!}\n                    optionMenu = {this.optionsMenu!}\n                    videoSeekSteps={PlayerConstants.defaultVideoSliderSteps}\n                    volumeSeekSteps={PlayerConstants.defaultVolumeSliderSteps}\n                    isMuted={this.state.isMuted}\n                    onMuteClick={this._setMuted}\n                    onVolumeChange={this._onVolumeChange}\n                    onProgressChange={this._onProgressChange}\n                    playPosition={this.state.playPosition}\n                    currentClosedCaptionLanguage={this.state.closedCaptionLanguage}\n                    currentVolume={this.state.currentVolume}\n                    isInFullScreen={this.state.isInFullScreen}\n                    toggleFullScreen={this._toggleFullScreen}\n                    handleControlsKeyDownHandler={this._handleControlsKeyDownEvent}\n                    isControlPanelVisible={this.state.isControlPanelVisible || this.state.doControlsHaveFocus}\n                    onFocus={this._onVideoControlsFocus}\n                    onBlur={this._onVideoControlsBlur}\n                    onMenuItemClick={this._onPlayerMenuItemClick}\n                    onMenuItemFocus={this._onPlayerMenuItemFocus}\n                    onMenuItemBlur={this._onPlayerMenuItemBlur}\n                    currentAudioTrack={this.state.currentAudioTrack}\n                    currentAudioTrackURL={this.state.currentAudioTrackURL}\n                    currentClosedCaptionsSetting={this.state.currentClosedCaptionsSettings}\n                    isMobileDevice={this.isMobileDevice}\n                    telemetryContent={this.props.telemetryContent}\n                    resources={{\n                        playAriaLabel: playAriaLabel,\n                        pauseAriaLabel: this.localizationHelper.getLocalizedValue('pauseAriaLabel'),\n                        muteAriaLabel: this.localizationHelper.getLocalizedValue('muteAriaLabel'),\n                        unMuteAriaLabel: this.localizationHelper.getLocalizedValue('unMuteAriaLabel'),\n                        fullScreenAriaLabel: this.localizationHelper.getLocalizedValue('fullScreenAriaLabel'),\n                        exitFullScreenAriaLabel: this.localizationHelper.getLocalizedValue('exitFullScreenAriaLabel'),\n                        seekBarLabel: this.localizationHelper.getLocalizedValue('seekBarLabel'),\n                        videoTimeDurationLabel: this.localizationHelper.getLocalizedValue('videoTimeDurationLabel'),\n                        closedCaptionLabel: this.localizationHelper.getLocalizedValue('closedCaptionLabel'),\n                        optionButtonLabel: this.localizationHelper.getLocalizedValue('optionAriaLabel')\n                    }}\n\n            />\n        );\n    }\n\n    /*\n    * @name - _renderAgeGate\n    * @description - Renders the age gate module\n    * @private\n    * @returns {void}\n    */\n   private _renderAgeGate = (): JSX.Element => {\n        return (\n        <AgeGate ref={this.ageGateContainer} onSubmitClick={this._validateAgeSubmitHandler} aria-hidden={!this.state.isAgegateEnabled} minmumAge={this.playerMetaData.minimumAge}/>\n        );\n    }\n\n    private _loadPlayer(): void {\n        if (this.player.current) {\n            this.player.current.volume = this.state.currentVolume / 100;\n            // Register the media events\n            for (const mediaEvent of MediaEvents) {\n                this.player.current.addEventListener(mediaEvent, this._triggerEvents);\n            }\n        }\n        this.videoUrl = this.playerHelper.getVideoFileToPlay().url;\n        this.player.current!.load();\n        this.isPlayerLoaded = true;\n\n        if(this.props.playerData.options.controls) {\n            this.closedCaptionHelper = new ClosedCaptionHelper(this.playerMetaData, this.playerHelper, this.localizationHelper);\n            this.closedCaptionMenu = this.closedCaptionHelper.getClosedCaptionMenu()!;\n            this.optionsMenu = this.playerHelper.getOptionMenu();\n            const ccFiles = this.playerMetaData.ccFiles!;\n            if(ccFiles !== undefined && ccFiles.length > 0) {\n                const autoCaptionsLang = this.props.playerData && this.props.playerData.options.autoCaptions;\n                let autoCaptionsLocale: string | null = null;\n                for (const ccFile of ccFiles) {\n\n                    if (!autoCaptionsLocale && autoCaptionsLang && ccFile.locale.indexOf(autoCaptionsLang) > -1) {\n                        autoCaptionsLocale = ccFile.locale;\n                    }\n\n                }\n                this.selectedClosedCaptionsLocale = autoCaptionsLocale;\n                if(!isNullOrWhiteSpace(this.selectedClosedCaptionsLocale!)) {\n                    this.setState({\n                        closedCaptionLanguage: this.selectedClosedCaptionsLocale!,\n                        closedCaptionsURL: this.closedCaptionHelper.getClosedCaptionURLFromLocale(this.selectedClosedCaptionsLocale!),\n                        showClosedCaptions: true\n                    });\n                }\n            }\n        }\n    }\n\n    /*\n    * @name - _validateAgeSubmitHandler\n    * @description - Validates the age submitted by the user\n    * @private\n    * @returns {void}\n    */\n    private _validateAgeSubmitHandler(): void {\n        if(this.ageGateContainer.current!.getCalculatedAge()) {\n            this.videoUrl = this.playerHelper.getVideoFileToPlay().url;\n            this.setState({ isAgegateEnabled: false });\n        } else {\n            this.setState({ isAgegateEnabled: true });\n            this._displayErrorMessage({ title: 'you are not allowed to watch video' });\n        }\n    }\n\n    private _onVideoControlsFocus(): void {\n        // No need to call showControlBar, this will make sure it shows\n        this.setState({ doControlsHaveFocus: true});\n    }\n\n    private _onVideoControlsBlur(): void {\n        // Call showControlBar to give it the 6 second timeout\n        this._showControlBar(true);\n\n        this.setState({ doControlsHaveFocus: false});\n    }\n\n    private _onPlayerMenuItemFocus(notification: IPlayerMenuItemClickNotification): void {\n\n        if(notification.data && notification.data.indexOf(':') > 0) {\n            const dataSplit = notification.data.split(':');\n            const settingKey = dataSplit[0];\n            if(settingKey === videoClosedCaptionsConstant.presetKey) {\n                if(this.state.closedCaptionLanguage === 'off') {\n                    this.setState({\n                        showClosedCaptions: true\n                    },            () => { this.ClosedCaptions.current!.showSampleCaptions();\n                                          this._setCCSettings(notification, false);\n                                        });\n                } else {\n                    this._setCCSettings(notification, false);\n                }\n            }\n        } else {\n            if(this.state.closedCaptionLanguage === 'off') {\n                this.setState({\n                    showClosedCaptions: false\n                });\n            }\n        }\n    }\n\n    private _onPlayerMenuItemBlur(): void {\n        this._setCCSettings({\n           category: MenuCategories.ClosedCaptionSettings,\n           id: '',\n           data: 'current'\n        });\n\n    }\n\n    private _onPlayerMenuItemClick(notification: IPlayerMenuItemClickNotification): void {\n        // tslint:disable-next-line: switch-default\n        switch (notification.category) {\n            case MenuCategories.ClosedCaption: {\n                this._setCC(notification.id);\n                break;\n            }\n\n            case MenuCategories.ClosedCaptionSettings: {\n                this._setCCSettings(notification);\n                break;\n            }\n\n            case MenuCategories.AudioTracks: {\n                this._setAudioTracks(notification);\n            }\n        }\n    }\n\n    /**\n     * @name - setCC\n     * @description - Sets the close captioning language/locale.\n     * @public\n     * @param {string} ccLanguageId - The desired new cc value.\n     * @param {boolean} isUserInitiated - Value indicating if the action was trigger by user.\n     * @returns {void}\n     */\n    private _setCC(ccLanguageId: string): void {\n        ccLanguageId = this.playerHelper.removeIdPrefix(ccLanguageId);\n        let selectedOption: ICCFile | null = null;\n\n        if (ccLanguageId && this.playerMetaData.ccFiles) {\n            for (const ccFile of this.playerMetaData.ccFiles) {\n                if ((ccFile.locale === ccLanguageId) && (!ccFile.ccType || ccFile.ccType === ClosedCaptionTypes.TTML)) {\n                    selectedOption = ccFile;\n                    break;\n                }\n            }\n        }\n\n        if(ccLanguageId === 'off') {\n            this.setState({\n                closedCaptionLanguage: 'off',\n                closedCaptionsURL: '',\n                showClosedCaptions: false\n            });\n        } else {\n            this.setState({\n                closedCaptionLanguage: selectedOption!.locale,\n                closedCaptionsURL: selectedOption!.url,\n                showClosedCaptions: true\n            });\n        }\n    }\n\n    /**\n     * @name - setCCSettings\n     * @description - Sets the close caption settings.\n     * @private\n     * @param {IPlayerMenuItemClickNotification} notification - The desired new cc value.\n     * @returns {void}\n     */\n    private _setCCSettings(notification: IPlayerMenuItemClickNotification, updatePreferences?: Boolean): void {\n        if (notification.data === 'reset') {\n            this.setState({\n                currentClosedCaptionsSettings: closedCaptionsSettingDefaults\n            },            () => {\n                if(this.ClosedCaptions.current !== null) {\n                    this.ClosedCaptions.current.applySettings();\n                    this.ClosedCaptions.current.resetCaptions();\n                    this.ClosedCaptions.current.updateCaptions(this.state.playPosition.currentTime);\n                }\n            });\n        } else if(notification.data === 'current') {\n            this.setState({\n                tempClosedCaptionsSettings: undefined\n            });\n\n            if(this.state.closedCaptionLanguage === 'off') {\n                this.setState({\n                    showClosedCaptions: false\n                });\n            }\n        } else {\n            const dataSplit = notification.data!.split(':');\n            if (!dataSplit) {\n                return;\n            }\n            const settingKey = dataSplit[0];\n            const optionKey = dataSplit[1];\n            const currentSetting = this.closedCaptionHelper!.getUpdatedClosedCaptionSetting(this.state.currentClosedCaptionsSettings, settingKey, optionKey);\n            if(updatePreferences === undefined || updatePreferences) {\n                this.setState({\n                    tempClosedCaptionsSettings: undefined,\n                    currentClosedCaptionsSettings: currentSetting\n                },            () => {\n                        if(this.ClosedCaptions.current) {\n                            this.ClosedCaptions.current.applySettings();\n                            this.ClosedCaptions.current.resetCaptions();\n                            this.ClosedCaptions.current.updateCaptions(this.state.playPosition.currentTime);\n                        }\n                });\n            } else {\n                this.setState({\n                    tempClosedCaptionsSettings: currentSetting\n                });\n            }\n        }\n    }\n\n    private _setAudioTracks(notification: IPlayerMenuItemClickNotification): void {\n        const data = JSON.parse(notification.data!);\n        if(data.lang === 'default') {\n            this.setState({\n                currentAudioTrack: 'default',\n                currentAudioTrackURL: ''\n            },            () => {\n                this.player.current!.volume = this.state.currentVolume / 100;\n            });\n        } else {\n            this.setState({\n                currentAudioTrack: data.lang,\n                currentAudioTrackURL: data.url\n            },            () => {\n                        this.audio.current!.currentTime = this.player.current!.currentTime;\n                        this.audio.current!.volume = this.state.currentVolume / 100;\n                        this.player.current!.volume = 0;\n                        if(!this.player.current!.paused) {\n                            this.audio.current!.load();\n                            for(const mediaEvent of MediaEvents) {\n                                this.audio.current!.addEventListener(mediaEvent, this._triggerAudioEvents);\n                            }\n                        }\n            });\n        }\n    }\n\n    // tslint:disable-next-line:cyclomatic-complexity\n    private _triggerAudioEvents(event: Event): void {\n        switch (event.type.toLowerCase()) {\n\n            case 'error':\n                this._onAudioError();\n                break;\n            case 'waiting':\n                if(this.playerState === 'playing') {\n                    this.isPlayerManuallyPaused = true;\n                    this.pause();\n                }\n                break;\n\n            case 'loadeddata':\n                if(this.isPlayerManuallyPaused) {\n                    this.isPlayerManuallyPaused = false;\n                    this.play();\n                }\n                if(!this.player.current!.paused) {\n                    this.play();\n                }\n                break;\n\n            default:\n        }\n    }\n\n    // tslint:disable-next-line:cyclomatic-complexity\n    private _triggerEvents(event: Event): void {\n        switch (event.type.toLowerCase()) {\n            case 'canplay':\n            case 'canplaythrough':\n                break;\n\n            case 'error':\n                this._onVideoError();\n                break;\n\n            case 'play':\n                break;\n\n            case 'pause':\n                this._updateState('paused');\n                if(this.props.playerData.options.playPauseTrigger) {\n                    this.setState({\n                        mouseHovered: true\n                    });\n                }\n                break;\n\n            case 'seeking':\n                if (this.playerState !== 'ended' && this.player.current!.seeking) {\n                    this.seekFrom = this.player.current!.currentTime;\n                    this._updateState('seeking');\n                }\n                break;\n\n            case 'seeked':\n                const currentPlayer = this.player.current;\n                const currentTime = currentPlayer!.currentTime;\n                if (this.playerState !== 'ended' && this.player.current!.seeking && this.seekFrom !== currentTime) {\n                    this.seekFrom = null;\n                }\n                this._updateState(currentPlayer!.paused ? 'paused' : 'playing');\n                break;\n\n            case 'waiting':\n                this._updateState('buffering');\n                break;\n\n            case 'loadedmetadata':\n                break;\n\n            case 'loadeddata':\n                this._onVideoLoadedData();\n                if (!this.props.playerData.options.autoplay) {\n                    this._showControlBar(false);\n                }\n                break;\n\n            case 'timeupdate':\n                this._onTimeUpdate();\n                break;\n\n            case 'ended':\n                this._updateState('ended');\n                this._stop();\n                break;\n\n            case 'playing':\n                this._updateState('playing');\n                break;\n\n            case 'volumechange':\n                break;\n\n            default:\n        }\n    }\n\n    private _onAudioError(): void {\n        this.pause();\n        const errorMessage: IVideoErrorMessageData = { title: 'Error while playing audio Track. Switching back to default track' };\n        this._displayErrorMessage(errorMessage);\n        this._setAudioTracks({category: 'audioTracks', data: '{ \"lang\": \"default\", \"url\": \"\"}' , id: ''});\n        setTimeout(() => {\n            this.setState({\n                showErrorMessage: false\n            },            () => { this.play(); });\n        },         2000);\n    }\n\n    // TODO : Need to localized the Error strings\n    private _onVideoError(): void {\n        this._updateState('error');\n        const error: IVideoErrorData | null = this._getError();\n        let errorMessage = '';\n        if (error && error.errorCode) {\n            switch (error.errorCode) {\n                case VideoErrorCodes.MediaErrorAborted:\n                    errorMessage = 'video playback was aborted';\n                    break;\n                case VideoErrorCodes.MediaErrorNetwork:\n                    errorMessage = 'video failed to download';\n                    break;\n                case VideoErrorCodes.MediaErrorDecode:\n                    errorMessage = 'video is not readable';\n                    break;\n                case VideoErrorCodes.MediaErrorSourceNotSupported:\n                    errorMessage = 'video format is not supported';\n                    break;\n                default:\n                    errorMessage = 'unknown error occurred';\n            }\n\n            this._stopMedia(errorMessage);\n        } else {\n            this._stopMedia();\n        }\n    }\n\n    private _stopMedia(msgToDisplay?: string): void {\n        if (msgToDisplay) {\n            this._displayErrorMessage({ title: msgToDisplay });\n            this._updateState('stopped');\n        }\n    }\n\n    /*\n    * @name - displayErrorMessage\n    * @description - Create an error message overlay\n    * @private\n    * @param {IVideoErrorMessageData} - Error message content\n    * @returns {void}\n    */\n    private _displayErrorMessage(errorMessage: IVideoErrorMessageData): void {\n        this.setState({ videoErrorMessage: { title: errorMessage.title, message: errorMessage.message }});\n        this.setState({ showErrorMessage: true});\n    }\n\n    /*\n     * @name - getErrorCode\n     * @description - gets the video error code of the current error.\n     * @private\n     * @returns {IVideoErrorData}\n     */\n    private _getError(): IVideoErrorData | null {\n        let contentErrorCode: VideoErrorCodes;\n        if(this.player.current!.error) {\n            // video playback failed - show a message saying why\n            switch (this.player.current!.error.code) {\n                case this.player.current!.error.MEDIA_ERR_ABORTED:\n                    contentErrorCode = VideoErrorCodes.MediaErrorAborted;\n                    break;\n                case this.player.current!.error.MEDIA_ERR_NETWORK:\n                    contentErrorCode = VideoErrorCodes.MediaErrorNetwork;\n                    break;\n                case this.player.current!.error.MEDIA_ERR_DECODE:\n                    contentErrorCode = VideoErrorCodes.MediaErrorDecode;\n                    break;\n                case this.player.current!.error.MEDIA_ERR_SRC_NOT_SUPPORTED:\n                    contentErrorCode = VideoErrorCodes.MediaErrorSourceNotSupported;\n                    break;\n                default:\n                    contentErrorCode = VideoErrorCodes.MediaErrorUnknown;\n            }\n            return { errorCode: contentErrorCode };\n        }\n        return null;\n    }\n\n    private _handleControlsKeyDownEvent(e: React.KeyboardEvent): void {\n        const keyBrdEvent = (e as unknown) as KeyboardEvent;\n        const keycode = keyBrdEvent.keyCode;\n        this._showControlBar(true);\n        // const castTarget = e.target as HTMLElement;\n\n        switch (keycode) {\n            case KeyCodes.Home:\n                e.stopPropagation();\n                e.preventDefault();\n                this.player.current!.currentTime = 0;\n                if(this.audio.current) {\n                    this.audio.current.currentTime = 0;\n                }\n                break;\n            case KeyCodes.End:\n                e.stopPropagation();\n                e.preventDefault();\n                this.player.current!.currentTime = this.state.playPosition.endTime;\n                if(this.audio.current) {\n                    this.audio.current.currentTime = this.state.playPosition.endTime;\n                }\n                break;\n            case KeyCodes.ArrowLeft:\n            case KeyCodes.ArrowRight:\n                e.stopPropagation();\n                e.preventDefault();\n                let jumpToTime =\n                    keycode === KeyCodes.ArrowLeft\n                        ? this.state.playPosition.currentTime - PlayerConstants.defaultVideoSliderSteps\n                        : this.state.playPosition.currentTime + PlayerConstants.defaultVideoSliderSteps;\n                jumpToTime = Math.min(Math.max(this.state.playPosition.startTime, jumpToTime), this.state.playPosition.endTime);\n                this.player.current!.currentTime = jumpToTime;\n                if(this.audio.current) {\n                    this.audio.current.currentTime = jumpToTime;\n                }\n                break;\n            case KeyCodes.ArrowUp:\n            case KeyCodes.ArrowDown:\n                e.stopPropagation();\n                e.preventDefault();\n                this.videoControl.current!.showVolumeControl(true).call(this);\n                const volume =\n                    keycode === KeyCodes.ArrowDown\n                        ? Math.max((this.state.currentVolume - PlayerConstants.defaultVolumeSliderSteps) / 100, 0)\n                        : Math.min((this.state.currentVolume + PlayerConstants.defaultVolumeSliderSteps) / 100, 1);\n                this.setState({ currentVolume: Math.round(volume * 100) });\n                if(this.audio.current) {\n                    this.audio.current.volume = volume;\n                } else {\n                    this.player.current!.volume = volume;\n                }\n                if (volume === 0) {\n                    this.setState({ isMuted: true });\n                } else {\n                    this.setState({ isMuted: false });\n                }\n                break;\n            default:\n        }\n    }\n\n    private _onPlay(): void {\n        this.setState({ playing: true });\n    }\n\n    private _onPause(): void {\n        this.setState({ playing: false });\n    }\n\n    private _onVolumeChange(notification: ISliderChangeNotification): void {\n        this.setState({ currentVolume: notification.firstThumbValue });\n        if(this.audio.current) {\n            this.audio.current.volume = notification.firstThumbValue / 100;\n        } else {\n            this.player.current!.volume = notification.firstThumbValue / 100;\n        }\n\n        if (notification.firstThumbValue === 0) {\n            this.setState({ isMuted: true });\n        } else {\n            if (this.state.isMuted && notification.firstThumbValue > 0) {\n                this.setState({ isMuted: false });\n            }\n        }\n    }\n\n    private _setMuted(): void {\n        if (this.state.isMuted) {\n            const newVolume = this.state.previousVolume === 0 ? PlayerConstants.defaultVolume * 100 : this.state.previousVolume;\n\n            if(this.audio.current) {\n                this.audio.current.volume = newVolume / 100;\n            } else {\n                this.player.current!.volume = newVolume / 100;\n            }\n            this.setState({ isMuted: false, currentVolume: newVolume });\n            this._updateScreenReaderElement(this.localizationHelper.getLocalizedValue('unMuteAriaLabel'));\n            onTelemetryClick(this.props.telemetryContent!, this.payLoad, LocalizationConstants.unMuteAriaLabel).call(this);\n        } else {\n            this.setState({ isMuted: true, previousVolume: this.player.current!.volume * 100, currentVolume: 0 });\n            this._updateScreenReaderElement(this.localizationHelper.getLocalizedValue('muteAriaLabel'));\n            onTelemetryClick(this.props.telemetryContent!, this.payLoad, LocalizationConstants.muteAriaLabel).call(this);\n        }\n    }\n\n    private _onPlayerKeyDown(e: React.KeyboardEvent): void {\n        const keyBrdEvent = (e as unknown) as KeyboardEvent;\n        const keycode = keyBrdEvent.keyCode;\n        // tslint:disable-next-line:switch-default\n        switch (keycode) {\n            case KeyCodes.Tab:\n                this._showControlsBasedOnState();\n        }\n    }\n\n    private _onMouseEvent(event: React.MouseEvent<HTMLDivElement>): void {\n        if (this.props.playerData.options.controls) {\n            this._showControlBar();\n        }\n        if(!this.state.isTriggerEnabled && this.state.playing) {\n            this.setState({ mouseHovered: event.type === 'mouseenter' });\n        }\n    }\n\n    private _showControlBar(autoHide: boolean = true): void {\n        if(!this.state.isTriggerEnabled && !this.state.isAgegateEnabled) {\n            if (!this.state.isControlPanelVisible) {\n                this.setState({ isControlPanelVisible: true });\n            }\n            if (!!this.controlPanelTimer) {\n                window && window.clearTimeout(this.controlPanelTimer);\n                this.controlPanelTimer = 0;\n            }\n            if (autoHide) {\n                this.controlPanelTimer = window && window.setTimeout(() => {\n                    this._hideControlBar();\n                },                                                   PlayerConstants.defaultControlPanelTimeout);\n            }\n        }\n    }\n\n    private _hideControlBar(): void {\n        window && window.clearTimeout(this.controlPanelTimer);\n        this.controlPanelTimer = 0;\n        this.setState({ isControlPanelVisible: false });\n    }\n\n    private _onFullScreenChanged(): void {\n        this.state.isInFullScreen ? this._onFullscreenExit() : this._onFullscreenEnter();\n    }\n\n    /*\n    * @name - onFullscreenEnter\n    * @description - Event handler for fullscreen enter.\n    * @private\n    * @returns {void}\n    */\n   private _onFullscreenEnter(): void {\n       this.setState({\n           isInFullScreen: true\n       });\n    }\n\n    /*\n    * @name - onFullscreenExit\n    * @description - Event handler for fullscreen exit.\n    * @private\n    * @returns {void}\n    */\n   private _onFullscreenExit(): void {\n        this.setState({\n            isInFullScreen: false\n        });\n    }\n\n    private _toggleFullScreen(): void {\n        this.state.isInFullScreen ? this._exitFullScreen() : this._enterFullScreen();\n    }\n\n    private _onFullscreenError(): void {\n        this.setState({\n            isInFullScreen: false\n        });\n    }\n\n    private _enterFullScreen(): void {\n        if(!Player._isNativeFullscreenEnabled()) {\n            return;\n        }\n\n        // tslint:disable-next-line:no-any\n        const fullscreenElement = this.playerContainer.current! as any;\n        const elementInFullScreen = Player._getElementInFullScreen();\n\n        // We go to fullscreen only when there is no other element in fullscreen and browser supports fullscreen\n        if (!!fullscreenElement && !elementInFullScreen) {\n            const enterFullScreen = fullscreenElement.requestFullscreen ||\n                fullscreenElement.msRequestFullscreen ||\n                fullscreenElement.mozRequestFullScreen ||\n                fullscreenElement.webkitRequestFullscreen ||\n                fullscreenElement.webkitEnterFullScreen;\n\n            enterFullScreen.call(fullscreenElement);\n            this._updateScreenReaderElement(this.localizationHelper.getLocalizedValue('fullScreenLabel'));\n            onTelemetryClick(this.props.telemetryContent!, this.payLoad, LocalizationConstants.fullScreenAriaLabel).call(this);\n        }\n    }\n\n    private _exitFullScreen(): void {\n        if(!Player._isNativeFullscreenEnabled()) {\n            return;\n        }\n\n        // tslint:disable-next-line:no-any\n        const fullscreenElement = this.playerContainer.current! as any;\n        const elementInFullScreen = Player._getElementInFullScreen();\n\n        // we only call cancel if we are in fullscreen. If another element went fullscreen that took the player with it then\n        // we shouldn't call cancel fullscreen\n        if (!!fullscreenElement && fullscreenElement === elementInFullScreen) {\n            // tslint:disable-next-line:no-any\n            const doc = document as any;\n            const cancelFullScreen = doc.cancelFullScreen ||\n                doc.msExitFullscreen ||\n                doc.mozCancelFullScreen ||\n                doc.webkitCancelFullScreen;\n\n            cancelFullScreen.call(doc);\n            this._updateScreenReaderElement(this.localizationHelper.getLocalizedValue('exitFullScreenLabel'));\n            onTelemetryClick(this.props.telemetryContent!, this.payLoad, LocalizationConstants.exitFullScreenAriaLabel).call(this);\n        }\n    }\n\n    private _onVideoLoadedData(): void {\n        this._updateState('ready');\n        if (this.props.playerData.options.controls) {\n            const position = this._getPlayPosition();\n            this.setState({ playPosition: position });\n        }\n    }\n\n    private _onTimeUpdate(): void {\n        if (this.props.playerData.options.controls) {\n            const position = this._getPlayPosition();\n            // EndTime changes after playing video for certain time. Keeping this constant.\n            position.endTime = this.state.playPosition.endTime;\n            this.setState({ playPosition: position});\n            if(this.state.playing) {\n                if(this.playerState === 'buffering') {\n                    this._updateState('playing');\n                }\n            }\n        }\n    }\n\n    private _getBufferedDuration(): number {\n        let buffered = 0;\n        if (this.player.current!.buffered && this.player.current!.buffered.length) {\n            buffered = this.player.current!.buffered.end(this.player.current!.buffered.length - 1);\n        }\n        return buffered;\n    }\n\n    private _getPlayPosition(): IPlayPosition {\n        const bufferedDuration = this._getBufferedDuration();\n        return {\n            currentTime: this.player.current!.currentTime,\n            startTime: 0,\n            endTime: this.player.current!.duration,\n            bufferedDuration: bufferedDuration\n        };\n    }\n\n    private _onProgressChange(notification: ISliderChangeNotification): void {\n        let time = notification.firstThumbValue;\n        const position = this._getPlayPosition();\n        time = Math.max(position.startTime, Math.min(time, position.endTime));\n\n        if (Math.abs(time - position.currentTime) >= PlayerConstants.defaultPositionUpdateThreshold) {\n            this.player.current!.currentTime = time;\n            if(this.audio.current) {\n                this.audio.current.currentTime = time;\n            }\n        }\n    }\n\n    private _onTriggerClicked(): void {\n        const currentPlayer = this.player.current;\n        if(!this.isPlayerLoaded) {\n            this._loadPlayer();\n            this.player.current!.autoplay = true;\n        } else {\n            if (currentPlayer!.paused) {\n                this.play();\n                this._updateScreenReaderElement(this.localizationHelper.getLocalizedValue('playingAriaLabel'));\n                onTelemetryClick(this.props.telemetryContent!, this.payLoad, LocalizationConstants.playAriaLabel).call(this);\n            } else {\n                this.pause();\n                this._updateScreenReaderElement(this.localizationHelper.getLocalizedValue('pausedAriaLabel'));\n                onTelemetryClick(this.props.telemetryContent!, this.payLoad, LocalizationConstants.pauseAriaLabel).call(this);\n            }\n        }\n\n        if(this.state.isTriggerEnabled) {\n            this.setState({ isTriggerEnabled: false }, () => { this.videoControl.current!.setFocusOnPlay(); });\n            onTelemetryClick(this.props.telemetryContent!, this.payLoad, LocalizationConstants.pauseAriaLabel).call(this);\n            if(this.props.playerData.options.playFullScreen) {\n                this._enterFullScreen();\n            }\n        }\n    }\n\n    private _stop(): void {\n        this._seek(0);\n        if (this.props.playerData.options.controls) {\n            this.pause();\n            const playPosition = this._getPlayPosition();\n            playPosition.endTime = this.state.playPosition.endTime;\n            this.setState({ playPosition: playPosition});\n            if(this.audio.current) {\n                this.audio.current.pause();\n            }\n        }\n    }\n\n    private _seek(time: number): void {\n        const position = this._getPlayPosition();\n        time = Math.max(position.startTime, Math.min(time, position.endTime));\n\n        if (Math.abs(time - position.currentTime) >= PlayerConstants.defaultPositionUpdateThreshold) {\n            this.seekFrom = position.currentTime;\n            this.player.current!.currentTime = time;\n            if(this.audio.current) {\n                this.audio.current.currentTime = time;\n            }\n        }\n    }\n\n    /*\n     * @name - _getMaskLevelStyle\n     * @description - Returns the mask level style\n     * @private\n     * @returns {string}\n     */\n    private _getMaskLevelStyle(): string {\n        let result: string;\n        const maskLevel = this.props.playerData.options.maskLevel || PlayerConstants.defaultMaskLevel;\n        result = format('rgba(0,0,0,{0})', Number(maskLevel) / 100);\n        return result;\n    }\n\n    /*\n     * @name - updateState\n     * @description - updates the current player state\n     * @private\n     * @param {string} newState - player state\n     * @returns {void}\n     */\n    private _updateState(newState: PlayerStates): void {\n        if (!newState || newState === this.playerState) {\n            return;\n        }\n\n        this.playerState = newState;\n\n        this._showControlsBasedOnState();\n        this._showSpinnerBasedOnState();\n    }\n\n    /*\n     * @name - showSpinnerBasedOnState\n     * @description - Shows or hides the spinner based on player state\n     * @private\n     * @returns {void}\n     */\n    private _showSpinnerBasedOnState(): void {\n        switch (this.playerState) {\n            case 'ready':\n            case 'playing':\n            case 'paused':\n            case 'ended':\n            case 'stopped':\n            case 'error':\n                this._hideSpinner();\n                break;\n            default:\n                this._showSpinner();\n        }\n    }\n\n    /*\n    * @name - showControlsBasedOnState\n    * @description - Shows or hides the player controls based on player state\n    * @private\n    * @returns {void}\n    */\n    private _showControlsBasedOnState(): void {\n        switch (this.playerState) {\n            case 'error':\n            case 'loading':\n            case 'init':\n                this._hideControlBar();\n                break;\n            case 'ended':\n                this._showControlBar(false);\n                break;\n            case 'ready':\n            case 'paused':\n            case 'stopped':\n                this._showControlBar(false);\n                break;\n            default:\n            this._showControlBar(true);\n        }\n    }\n\n    private _hideSpinner(): void {\n        this.setState({ showSpinner: false });\n    }\n\n    private _showSpinner(): void {\n        this.setState({ showSpinner: true });\n    }\n\n    /*\n     * @name - _onTriggerFocus\n     * description - Play Trigger focus event\n     * @private\n     * @returns {void}\n    */\n    private _onTriggerFocus(): void {\n        this.setState({ mouseHovered: true});\n    }\n\n    /*\n     * @name - _onTriggerBlur\n     * description - Play Trigger Blur event\n     * @private\n     * @returns {void}\n    */\n    private _onTriggerBlur(): void {\n        if(!this.state.isTriggerEnabled && this.state.playing) {\n            this.setState({ mouseHovered: false});\n        }\n    }\n\n    /*\n     * @name - updateScreenReaderElement\n     * description - updates the screen reader element\n     * @private\n     * @returns {void}\n    */\n   private _updateScreenReaderElement(text: string): void {\n        this.setState({\n            screenReaderText: text\n        });\n\n    }\n\n     /*\n     * @name - onContextMenuClicked\n     * description - avoid opening context menu on righ click\n     * @private\n     * @returns {void}\n    */\n    private _onContextMenuClicked(e: React.MouseEvent): void {\n        e.preventDefault();\n    }\n\n    /*\n     * @name - _isMobile\n     * description - check for mobile devices\n     * @private\n     * @returns {void}\n    */\n    private _isMobile(): boolean {\n        if (MsDyn365.msdyn365Commerce.isBrowser) {\n            const userAgent = window.navigator.userAgent;\n            const isIphone = !!userAgent.match(/iPhone/i);\n            const isSilk = !!userAgent.match(/Silk/i);\n            const isWindowsPhone = !!userAgent.match(/Windows Phone/i);\n            const isAndroid = !isWindowsPhone && (isSilk ||\n                !!userAgent.match(/Android/i));\n            return isIphone || isWindowsPhone || isAndroid;\n        }\n        return false;\n    }\n}"],"sourceRoot":"./src/"},"metadata":{},"sourceType":"module"}