{"ast":null,"code":"\"use strict\";Object.defineProperty(exports,\"__esModule\",{value:true});var tslib_1=require(\"tslib\");var React=tslib_1.__importStar(require(\"react\"));var __1=require(\"..\");var Flipper=function(_super){tslib_1.__extends(Flipper,_super);function Flipper(props){var _this=_super.call(this,props)||this;_this.payLoad=__1.getPayloadObject('click',_this.props.telemetryContent,_this.props.telemetryLabel);return _this;}Flipper.prototype.render=function(){var _a=this.props,className=_a.className,glyphProps=_a.glyphProps,size=_a.size,displayTooltip=_a.displayTooltip,disabled=_a.disabled,telemetryContent=_a.telemetryContent,telemetryLabel=_a.telemetryLabel,props=tslib_1.__rest(_a,[\"className\",\"glyphProps\",\"size\",\"displayTooltip\",\"disabled\",\"telemetryContent\",\"telemetryLabel\"]);var sizeClass=size==='small'?'msc-flipper__small':size==='large'?'msc-flipper__large':'';var classNames=className?\"msc-flipper \"+sizeClass+\" \"+className:\"msc-flipper \"+sizeClass;var attribute=__1.getTelemetryAttributes(telemetryContent,this.payLoad);glyphProps.className=glyphProps.className+\" msc-no-rtl-flip-required\";return React.createElement(React.Fragment,null,React.createElement(\"button\",tslib_1.__assign({id:props.id,disabled:disabled,className:classNames},props,attribute),React.createElement(\"i\",tslib_1.__assign({},glyphProps,{\"aria-hidden\":true}))),displayTooltip&&!disabled&&React.createElement(__1.UncontrolledTooltip,{trigger:'hover',target:props.id},\" \",props['aria-label']));};return Flipper;}(React.PureComponent);exports.default=Flipper;","map":{"version":3,"sources":["/Users/User/Documents/wkea-ec/Msdyn365.Commerce.Online/node_modules/@msdyn365-commerce-modules/utilities/src/flipper/Flipper.tsx"],"names":[],"mappings":"mGAAA,GAAA,CAAA,KAAA,CAAA,OAAA,CAAA,YAAA,CAAA,OAAA,CAAA,OAAA,CAAA,CAAA,CACA,GAAA,CAAA,GAAA,CAAA,OAAA,CAAA,IAAA,CAAA,CASA,GAAA,CAAA,OAAA,CAAA,SAAA,MAAA,CAAA,CAAqC,OAAA,CAAA,SAAA,CAAA,OAAA,CAAA,MAAA,EAEjC,QAAA,CAAA,OAAA,CAAY,KAAZ,CAAgC,CAAhC,GAAA,CAAA,KAAA,CACI,MAAA,CAAA,IAAA,CAAA,IAAA,CAAM,KAAN,GAAY,IADhB,CAEI,KAAI,CAAC,OAAL,CAAe,GAAA,CAAA,gBAAA,CAAiB,OAAjB,CAA0B,KAAI,CAAC,KAAL,CAAW,gBAArC,CAAwD,KAAI,CAAC,KAAL,CAAW,cAAnE,CAAf,C,aACH,CACM,OAAA,CAAA,SAAA,CAAA,MAAA,CAAP,UAAA,CACI,GAAM,CAAA,EAAA,CAAA,KAAA,KAAN,CAAQ,SAAA,CAAA,EAAA,CAAA,SAAR,CAAmB,UAAA,CAAA,EAAA,CAAA,UAAnB,CAA+B,IAAA,CAAA,EAAA,CAAA,IAA/B,CAAqC,cAAA,CAAA,EAAA,CAAA,cAArC,CAAqD,QAAA,CAAA,EAAA,CAAA,QAArD,CAA+D,gBAAA,CAAA,EAAA,CAAA,gBAA/D,CAAiF,cAAA,CAAA,EAAA,CAAA,cAAjF,CAAiG,KAAA,CAAA,OAAA,CAAA,MAAA,CAAA,EAAA,CAAA,CAAA,WAAA,CAAA,YAAA,CAAA,MAAA,CAAA,gBAAA,CAAA,UAAA,CAAA,kBAAA,CAAA,gBAAA,CAAA,CAAjG,CACA,GAAM,CAAA,SAAS,CAAG,IAAI,GAAK,OAAT,CAAmB,oBAAnB,CAA0C,IAAI,GAAK,OAAT,CAAmB,oBAAnB,CAA0C,EAAtG,CACA,GAAM,CAAA,UAAU,CAAG,SAAS,CAAG,eAAe,SAAf,CAAwB,GAAxB,CAA4B,SAA/B,CAA6C,eAAe,SAAxF,CACA,GAAM,CAAA,SAAS,CAAG,GAAA,CAAA,sBAAA,CAAuB,gBAAvB,CAA0C,KAAK,OAA/C,CAAlB,CAEA,UAAU,CAAC,SAAX,CAA0B,UAAU,CAAC,SAAX,CAAoB,2BAA9C,CAEA,MACI,CAAA,KAAA,CAAA,aAAA,CAAC,KAAK,CAAC,QAAP,CAAe,IAAf,CACI,KAAA,CAAA,aAAA,CAAA,QAAA,CAAA,OAAA,CAAA,QAAA,CAAA,CAAQ,EAAE,CAAE,KAAK,CAAC,EAAlB,CAAsB,QAAQ,CAAE,QAAhC,CAA0C,SAAS,CAAE,UAArD,CAAA,CAAqE,KAArE,CAAgF,SAAhF,CAAA,CACI,KAAA,CAAA,aAAA,CAAA,GAAA,CAAA,OAAA,CAAA,QAAA,CAAA,EAAA,CAAO,UAAP,CAAiB,CAAA,cAAe,IAAf,CAAjB,CAAA,CADJ,CADJ,CAIK,cAAc,EAAI,CAAC,QAAnB,EAA+B,KAAA,CAAA,aAAA,CAAC,GAAA,CAAA,mBAAD,CAAoB,CAAC,OAAO,CAAC,OAAT,CAAiB,MAAM,CAAE,KAAK,CAAC,EAA/B,CAApB,C,GAAA,CAAyD,KAAK,CAAC,YAAD,CAA9D,CAJpC,CADJ,CAQH,CAhBM,CAiBX,MAAA,CAAA,OAAA,CAAC,CAvBD,CAAqC,KAAK,CAAC,aAA3C,CAAA,C","sourcesContent":["import * as React from 'react';\nimport { getPayloadObject, getTelemetryAttributes, IPayLoad, UncontrolledTooltip } from '..';\nimport { IFlipperProps } from './Flipper.props';\n\nexport type FlipperSize = 'small' | 'medium' | 'large';\n\n/**\n * Flipper Component - This component is used to add\n * flippers to a carousel/jumbotron\n */\nexport default class Flipper extends React.PureComponent<IFlipperProps> {\n    private payLoad: IPayLoad;\n    constructor(props: IFlipperProps) {\n        super(props);\n        this.payLoad = getPayloadObject('click', this.props.telemetryContent!, this.props.telemetryLabel!);\n    }\n    public render(): JSX.Element {\n        const { className, glyphProps, size, displayTooltip, disabled, telemetryContent, telemetryLabel, ...props } = this.props;\n        const sizeClass = size === 'small' ? 'msc-flipper__small' : size === 'large' ? 'msc-flipper__large' : '';\n        const classNames = className ? `msc-flipper ${sizeClass} ${className}` : `msc-flipper ${sizeClass}`;\n        const attribute = getTelemetryAttributes(telemetryContent!, this.payLoad);\n        // do not flip next/previous glyphs in RTL (commonly chevron-left and chevron-right)\n        glyphProps.className = `${glyphProps.className} msc-no-rtl-flip-required`;\n\n        return (\n            <React.Fragment>\n                <button id={props.id} disabled={disabled} className={classNames} {...props} {...attribute}>\n                    <i {...glyphProps} aria-hidden={true}/>\n                </button>\n                {displayTooltip && !disabled && <UncontrolledTooltip trigger='hover' target={props.id}> {props['aria-label']}</UncontrolledTooltip>}\n            </React.Fragment>\n        );\n    }\n}\n"]},"metadata":{},"sourceType":"script"}