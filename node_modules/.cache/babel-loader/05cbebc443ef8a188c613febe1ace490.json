{"ast":null,"code":"import\"core-js/modules/es.symbol.description.js\";import\"core-js/modules/es.object.assign.js\";import\"core-js/modules/es.promise.js\";import _defineProperty from\"@babel/runtime/helpers/esm/defineProperty\";function ownKeys(object,enumerableOnly){var keys=Object.keys(object);if(Object.getOwnPropertySymbols){var symbols=Object.getOwnPropertySymbols(object);if(enumerableOnly)symbols=symbols.filter(function(sym){return Object.getOwnPropertyDescriptor(object,sym).enumerable;});keys.push.apply(keys,symbols);}return keys;}function _objectSpread(target){for(var i=1;i<arguments.length;i++){var source=arguments[i]!=null?arguments[i]:{};if(i%2){ownKeys(Object(source),true).forEach(function(key){_defineProperty(target,key,source[key]);});}else if(Object.getOwnPropertyDescriptors){Object.defineProperties(target,Object.getOwnPropertyDescriptors(source));}else{ownKeys(Object(source)).forEach(function(key){Object.defineProperty(target,key,Object.getOwnPropertyDescriptor(source,key));});}}return target;}import{__decorate}from\"tslib\";import classname from'classnames';import{action,computed,observable,reaction,when}from'mobx';import{observer}from'mobx-react';import*as React from'react';import{withModuleState}from'@msdyn365-commerce-modules/checkout-utilities';import{Button,getTelemetryObject}from'@msdyn365-commerce-modules/utilities';import*as MsDyn365 from'@msdyn365-commerce/core';import CheckboxComponent from'./components/checkout-terms-and-conditions.check-box';import ErrorMessageComponent from'./components/checkout-terms-and-conditions.error-message';import ErrorTitleComponent from'./components/checkout-terms-and-conditions.error-title';let CheckoutTermsAndConditions=class CheckoutTermsAndConditions extends React.Component{constructor(props){super(props);this.isTermsAccepted=true;this.getTermsAndConditions=()=>{const{moduleState:{isReady},config:{showCheckbox,description}}=this.props;const isDisabled=isReady&&!this.isAutoSave;const isTermsAndConditionAccepted=this.isTermsAccepted;return{termsAndConditionAcceptance:{className:'ms-checkout-terms-and-conditions__container'},checkBox:showCheckbox&&/*#__PURE__*/React.createElement(CheckboxComponent,Object.assign({},{isChecked:isTermsAndConditionAccepted,disabled:isDisabled,onChange:this.onChange,id:this.props.id,telemetryContent:this.telemetryContent})),description:/*#__PURE__*/React.createElement(MsDyn365.RichTextComponent,{text:description})};};this.init=async()=>{var _data$checkout$result;const{data,config:{showCheckbox}}=this.props;if((_data$checkout$result=data.checkout.result)!==null&&_data$checkout$result!==void 0&&_data$checkout$result.isTermsAndConditionAccepted||!showCheckbox){await this.updateTermsAndConditionsAcceptance(true);this.isTermsAccepted=true;}else if(showCheckbox){await this.updateTermsAndConditionsAcceptance(false);this.isTermsAccepted=false;}this.props.moduleState.init({onEdit:this.onEdit,onCancel:this.onCancel,onSubmit:this.onSubmit,status:this.isTermsAccepted?'ready':'updating'});};this.getErrorMessage=()=>{const{errorMessageTitle}=this.props.resources;return{error:{tag:'div',className:'ms-checkout-terms-and-conditions__error',role:'alert','aria-live':'assertive'},title:/*#__PURE__*/React.createElement(ErrorTitleComponent,Object.assign({},{title:errorMessageTitle})),message:/*#__PURE__*/React.createElement(ErrorMessageComponent,Object.assign({},{message:this.errorMessage}))};};this.getCancelButton=()=>{const{cancelBtnLabel='Cancel',cancelBtnAriaLabel}=this.props.resources;return/*#__PURE__*/React.createElement(Button,{className:'ms-checkout-terms-and-conditions__button-cancel',title:cancelBtnLabel,\"aria-label\":cancelBtnAriaLabel,color:'secondary',onClick:this.onCancel},cancelBtnLabel);};this.getSaveButton=()=>{const{saveBtnLabel='Save',saveBtnAriaLabel}=this.props.resources;return/*#__PURE__*/React.createElement(Button,{className:'ms-checkout-terms-and-conditions__button-save',title:saveBtnLabel,\"aria-label\":saveBtnAriaLabel,color:'primary',onClick:this.onSubmit},saveBtnLabel);};this.getEditButton=()=>{const{editBtnLabel='Change',editBtnAriaLabel}=this.props.resources;return/*#__PURE__*/React.createElement(Button,{className:'ms-checkout-terms-and-conditions__button-edit',title:editBtnLabel,\"aria-label\":editBtnAriaLabel,color:'primary',onClick:this.onEdit},editBtnLabel);};this.onEdit=()=>{this.onUpdating();};this.onSubmit=async()=>{if(!this.isTermsAccepted){if(this.isAutoSave){await this.updateTermsAndConditionsAcceptance(this.isTermsAccepted);}else{this.setError(this.props.resources.errorMessage);this.props.moduleState.setHasError(true);}}else{this.clearError();await this.updateTermsAndConditionsAcceptance(this.isTermsAccepted);this.props.moduleState.onReady();}};this.onUpdating=()=>{this.props.moduleState.onUpdating();};this.setError=errorMessage=>{this.props.telemetry.error(errorMessage);this.props.moduleState.setHasError(true);this.props.moduleState.onUpdating();this.errorMessage=errorMessage;};this.onCancel=()=>{if(!this.props.data.checkout.result){return;}const isTermsAccepted=this.props.data.checkout.result.isTermsAndConditionAccepted;if(!isTermsAccepted){this.props.moduleState.onUpdating();return;}else{this.isTermsAccepted=true;this.props.moduleState.setHasError(false);this.props.moduleState.onReady();}};this.updateTermsAndConditionsAcceptance=async isTermsAccepted=>{if(this.props.data.checkout.result){await this.props.data.checkout.result.updateTermsAndConditionsAcceptance({newIsTermsAndConditionAccepted:isTermsAccepted});}};this.clearError=()=>{this.props.moduleState.setHasError(false);this.errorMessage=undefined;};this.onChange=async event=>{const checked=event.target.checked;this.isTermsAccepted=checked;if(this.isAutoSave){await this.onSubmit();}};this.telemetryContent=getTelemetryObject(this.props.context.request.telemetryPageName,this.props.friendlyName,this.props.telemetry);}get isDataReady(){return(this.props.data.checkout.result&&this.props.data.checkout.status)==='SUCCESS';}get isShowButtons(){const{showControlButtons}=this.props.config;return!this.props.moduleState.hasExternalSubmitGroup&&(showControlButtons||false);}get isAutoSave(){const{showControlButtons}=this.props.config;return!this.props.moduleState.hasExternalSubmitGroup&&!showControlButtons;}get defaultTermsAndConditionAcceptedValue(){const{showCheckbox}=this.props.config;return showCheckbox?false:true;}async componentDidMount(){when(()=>this.isDataReady,async()=>{await this.init();});reaction(()=>this.props.data.checkout.result&&this.props.data.checkout.result.isTermsAndConditionAccepted,async()=>{var _this$props$data$chec;this.isTermsAccepted=((_this$props$data$chec=this.props.data.checkout.result)===null||_this$props$data$chec===void 0?void 0:_this$props$data$chec.isTermsAndConditionAccepted)||this.defaultTermsAndConditionAcceptedValue;});}render(){var _this$props$data$chec2;const{moduleState:{isReady,hasError},config:{className}}=this.props;const isTermsAndConditionAccepted=(_this$props$data$chec2=this.props.data.checkout.result)===null||_this$props$data$chec2===void 0?void 0:_this$props$data$chec2.isTermsAndConditionAccepted;const isError=hasError;const isShowContent=!isReady;const isShowSelected=!hasError&&isReady;const viewProps=_objectSpread(_objectSpread(_objectSpread({},this.props),this.state),{},{isTermsAccepted:this.isTermsAccepted,errorMessageData:this.errorMessage,viewState:{isError:isError,isShowSaveButton:isShowContent&&this.isShowButtons,isShowEditButton:isShowSelected&&this.isShowButtons,isShowCancelButton:isShowContent&&this.isShowButtons&&isTermsAndConditionAccepted},checkoutTermsAndConditions:{moduleProps:this.props,className:classname('ms-checkout-terms-and-conditions',className)},termsAndConditionsContent:this.getTermsAndConditions(),errorMessage:this.getErrorMessage(),saveButton:this.getSaveButton(),editButton:this.getEditButton(),cancelButton:this.getCancelButton(),onSave:this.onSubmit,onEdit:this.onEdit,onCancel:this.onCancel,onChange:this.onChange});return this.props.renderView(viewProps);}};__decorate([observable],CheckoutTermsAndConditions.prototype,\"isTermsAccepted\",void 0);__decorate([observable],CheckoutTermsAndConditions.prototype,\"errorMessage\",void 0);__decorate([computed],CheckoutTermsAndConditions.prototype,\"isDataReady\",null);__decorate([computed],CheckoutTermsAndConditions.prototype,\"isShowButtons\",null);__decorate([computed],CheckoutTermsAndConditions.prototype,\"isAutoSave\",null);__decorate([computed],CheckoutTermsAndConditions.prototype,\"defaultTermsAndConditionAcceptedValue\",null);__decorate([action],CheckoutTermsAndConditions.prototype,\"init\",void 0);CheckoutTermsAndConditions=__decorate([withModuleState,observer],CheckoutTermsAndConditions);export default CheckoutTermsAndConditions;","map":{"version":3,"sources":["modules/checkout-terms-and-conditions/checkout-terms-and-conditions.tsx"],"names":[],"mappings":"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","sourcesContent":["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nimport classname from 'classnames';\nimport { action, computed, observable, reaction, when } from 'mobx';\nimport { observer } from 'mobx-react';\nimport * as React from 'react';\n\nimport { IModuleStateProps, withModuleState } from '@msdyn365-commerce-modules/checkout-utilities';\nimport { Button, getTelemetryObject, IModuleProps, INodeProps, ITelemetryContent } from '@msdyn365-commerce-modules/utilities';\nimport * as MsDyn365 from '@msdyn365-commerce/core';\n\nimport { ICheckoutTermsAndConditionsData } from './checkout-terms-and-conditions.data';\nimport {\n    ICheckoutTermsAndConditionsProps\n} from './checkout-terms-and-conditions.props.autogenerated';\nimport CheckboxComponent from './components/checkout-terms-and-conditions.check-box';\nimport ErrorMessageComponent from './components/checkout-terms-and-conditions.error-message';\nimport ErrorTitleComponent from './components/checkout-terms-and-conditions.error-title';\n\nexport interface ICheckoutTermsAndConditionsModuleProps extends ICheckoutTermsAndConditionsProps<ICheckoutTermsAndConditionsData>, IModuleStateProps { }\n\nexport interface ICheckoutTermsAndConditions {\n    termsAndConditionAcceptance: INodeProps;\n    checkBox: React.ReactNode;\n    description: React.ReactNode;\n}\n\nexport interface ICheckoutTermsAndConditionsError {\n    error: INodeProps;\n    title: React.ReactNode;\n    message: React.ReactNode;\n}\n\nexport interface ICheckoutTermsAndConditionsViewState {\n    isError: boolean;\n    isShowSaveButton: boolean;\n    isShowEditButton: boolean;\n    isShowCancelButton: boolean;\n}\n\nexport interface ICheckoutTermsAndConditionsViewProps extends ICheckoutTermsAndConditionsProps<{}> {\n    checkoutTermsAndConditions: IModuleProps;\n    isTermsAccepted: boolean;\n    errorMessageData: string;\n    viewState: ICheckoutTermsAndConditionsViewState;\n    termsAndConditionsContent: ICheckoutTermsAndConditions;\n    errorMessage?: ICheckoutTermsAndConditionsError;\n    saveButton?: React.ReactNode;\n    editButton?: React.ReactNode;\n    cancelButton?: React.ReactNode;\n    onChange(event: React.ChangeEvent<HTMLInputElement>): void;\n    onSave(): void;\n    onEdit(): void;\n    onCancel(): void;\n}\n\n/**\n *\n * CheckoutTermsAndConditions component\n * @extends {React.Component<ICheckoutTermsAndConditionsProps<ICheckoutTermsAndConditionsData>>}\n */\n// @ts-ignore\n@withModuleState\n@observer\nclass CheckoutTermsAndConditions extends React.Component<ICheckoutTermsAndConditionsModuleProps> {\n    private telemetryContent: ITelemetryContent;\n    @observable private isTermsAccepted: boolean = true;\n    @observable private errorMessage?: string;\n\n    constructor(props: ICheckoutTermsAndConditionsModuleProps) {\n        super(props);\n        this.telemetryContent = getTelemetryObject(this.props.context.request.telemetryPageName!, this.props.friendlyName, this.props.telemetry);\n    }\n\n    @computed get isDataReady(): boolean {\n        return (this.props.data.checkout.result && this.props.data.checkout.status) === 'SUCCESS';\n    }\n\n    @computed get isShowButtons(): boolean {\n        const { showControlButtons } = this.props.config;\n        return !this.props.moduleState.hasExternalSubmitGroup && (showControlButtons || false);\n    }\n\n    @computed get isAutoSave(): boolean {\n        const { showControlButtons } = this.props.config;\n        return !this.props.moduleState.hasExternalSubmitGroup && !showControlButtons;\n    }\n\n    @computed get defaultTermsAndConditionAcceptedValue(): boolean {\n        const { showCheckbox } = this.props.config;\n        return showCheckbox ? false : true;\n    }\n\n    public async componentDidMount(): Promise<void> {\n        // @ts-ignore: Compiler not reconizing condition check for function params\n        when(\n            () => this.isDataReady,\n            async () => {\n                await this.init();\n            }\n        );\n\n        reaction(\n            () => this.props.data.checkout.result && this.props.data.checkout.result.isTermsAndConditionAccepted,\n            async () => {\n                this.isTermsAccepted = this.props.data.checkout.result?.isTermsAndConditionAccepted || this.defaultTermsAndConditionAcceptedValue;\n            }\n        );\n    }\n\n    public render(): JSX.Element | null {\n        const {\n            moduleState: { isReady, hasError },\n            config: { className }\n        } = this.props;\n        const isTermsAndConditionAccepted = this.props.data.checkout.result?.isTermsAndConditionAccepted;\n        const isError = hasError;\n        const isShowContent = !isReady;\n        const isShowSelected = !hasError && isReady;\n\n        const viewProps = {\n            ...this.props,\n            ...this.state,\n            isTermsAccepted: this.isTermsAccepted,\n            errorMessageData: this.errorMessage,\n            viewState: {\n                isError: isError,\n                isShowSaveButton: isShowContent && this.isShowButtons,\n                isShowEditButton: isShowSelected && this.isShowButtons,\n                isShowCancelButton: isShowContent && this.isShowButtons && isTermsAndConditionAccepted,\n            },\n            checkoutTermsAndConditions: {\n                moduleProps: this.props,\n                className: classname('ms-checkout-terms-and-conditions', className)\n            },\n            termsAndConditionsContent: this.getTermsAndConditions(),\n            errorMessage: this.getErrorMessage(),\n            saveButton: this.getSaveButton(),\n            editButton: this.getEditButton(),\n            cancelButton: this.getCancelButton(),\n            onSave: this.onSubmit,\n            onEdit: this.onEdit,\n            onCancel: this.onCancel,\n            onChange: this.onChange\n        };\n        return this.props.renderView(viewProps) as React.ReactElement;\n    }\n\n    private getTermsAndConditions = (): ICheckoutTermsAndConditions => {\n        const {\n            moduleState: { isReady },\n            config: { showCheckbox, description }\n        } = this.props;\n        const isDisabled = isReady && !this.isAutoSave;\n        const isTermsAndConditionAccepted = this.isTermsAccepted;\n\n        return {\n            termsAndConditionAcceptance: { className: 'ms-checkout-terms-and-conditions__container' },\n            checkBox: showCheckbox && <CheckboxComponent {...{ isChecked: isTermsAndConditionAccepted, disabled: isDisabled, onChange: this.onChange, id: this.props.id, telemetryContent: this.telemetryContent }} />,\n            description: <MsDyn365.RichTextComponent text={description} />\n        };\n    }\n\n    @action\n    private init = async (): Promise<void> => {\n        const {\n            data,\n            config: { showCheckbox }\n        } = this.props;\n\n        if (data.checkout.result?.isTermsAndConditionAccepted || !showCheckbox) {\n            await this.updateTermsAndConditionsAcceptance(true);\n            this.isTermsAccepted = true;\n        } else if (showCheckbox) {\n            await this.updateTermsAndConditionsAcceptance(false);\n            this.isTermsAccepted = false;\n        }\n\n        this.props.moduleState.init({\n            onEdit: this.onEdit,\n            onCancel: this.onCancel,\n            onSubmit: this.onSubmit,\n            status: this.isTermsAccepted ? 'ready' : 'updating'\n        });\n    };\n\n    private getErrorMessage = (): ICheckoutTermsAndConditionsError => {\n        const { errorMessageTitle } = this.props.resources;\n        return {\n            error: { tag: 'div', className: 'ms-checkout-terms-and-conditions__error', role: 'alert', 'aria-live': 'assertive' },\n            title: <ErrorTitleComponent {...{ title: errorMessageTitle }} />,\n            message: <ErrorMessageComponent {...{ message: this.errorMessage }} />\n        };\n    };\n\n    private getCancelButton = (): React.ReactNode => {\n        const { cancelBtnLabel = 'Cancel', cancelBtnAriaLabel } = this.props.resources;\n        return (\n            <Button\n                className='ms-checkout-terms-and-conditions__button-cancel'\n                title={cancelBtnLabel}\n                aria-label={cancelBtnAriaLabel}\n                color='secondary'\n                onClick={this.onCancel}\n            >\n                {cancelBtnLabel}\n            </Button>\n        );\n    };\n\n    private getSaveButton = (): React.ReactNode => {\n        const { saveBtnLabel = 'Save', saveBtnAriaLabel } = this.props.resources;\n        return (\n            <Button\n                className='ms-checkout-terms-and-conditions__button-save'\n                title={saveBtnLabel}\n                aria-label={saveBtnAriaLabel}\n                color='primary'\n                onClick={this.onSubmit}\n            >\n                {saveBtnLabel}\n            </Button>\n        );\n    };\n\n    private getEditButton = (): React.ReactNode => {\n        const { editBtnLabel = 'Change', editBtnAriaLabel } = this.props.resources;\n        return (\n            <Button\n                className='ms-checkout-terms-and-conditions__button-edit'\n                title={editBtnLabel}\n                aria-label={editBtnAriaLabel}\n                color='primary'\n                onClick={this.onEdit}\n            >\n                {editBtnLabel}\n            </Button>\n        );\n    };\n\n    private onEdit = (): void => {\n        this.onUpdating();\n    };\n\n    private onSubmit = async (): Promise<void> => {\n        if (!this.isTermsAccepted) {\n            if (this.isAutoSave) {\n                await this.updateTermsAndConditionsAcceptance(this.isTermsAccepted);\n            } else {\n                this.setError(this.props.resources.errorMessage);\n                this.props.moduleState.setHasError(true);\n            }\n        } else {\n            this.clearError();\n            await this.updateTermsAndConditionsAcceptance(this.isTermsAccepted);\n            this.props.moduleState.onReady();\n        }\n    };\n\n    private onUpdating = () => {\n        this.props.moduleState.onUpdating();\n    };\n\n    private setError = (errorMessage: string): void => {\n        this.props.telemetry.error(errorMessage);\n        this.props.moduleState.setHasError(true);\n        this.props.moduleState.onUpdating();\n        this.errorMessage = errorMessage;\n    };\n\n    private onCancel = (): void => {\n        // Reset to the saved value\n        if (!this.props.data.checkout.result) {\n            return;\n        }\n\n        const isTermsAccepted = this.props.data.checkout.result.isTermsAndConditionAccepted;\n        if (!isTermsAccepted) {\n            // It has no saved email, set to status updating and request user to fill the email form\n            this.props.moduleState.onUpdating();\n            return;\n        } else {\n            // It has saved email, set to status ready\n            this.isTermsAccepted = true;\n            this.props.moduleState.setHasError(false);\n            this.props.moduleState.onReady();\n        }\n    };\n\n    private updateTermsAndConditionsAcceptance = async (isTermsAccepted: boolean): Promise<void> => {\n        if (this.props.data.checkout.result) {\n            await this.props.data.checkout.result.updateTermsAndConditionsAcceptance({ newIsTermsAndConditionAccepted: isTermsAccepted });\n        }\n    };\n\n    private clearError = (): void => {\n        this.props.moduleState.setHasError(false);\n        this.errorMessage = undefined;\n    };\n\n    private onChange = async (event: React.ChangeEvent<HTMLInputElement>) => {\n        const checked = event.target.checked;\n        this.isTermsAccepted = checked;\n        if (this.isAutoSave) {\n            await this.onSubmit();\n        }\n    };\n\n}\n\nexport default CheckoutTermsAndConditions;\n"],"sourceRoot":"./src/"},"metadata":{},"sourceType":"module"}