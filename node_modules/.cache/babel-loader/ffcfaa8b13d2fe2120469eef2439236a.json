{"ast":null,"code":"import\"core-js/modules/es.object.assign.js\";import\"core-js/modules/es.promise.js\";import _defineProperty from\"@babel/runtime/helpers/esm/defineProperty\";function ownKeys(object,enumerableOnly){var keys=Object.keys(object);if(Object.getOwnPropertySymbols){var symbols=Object.getOwnPropertySymbols(object);if(enumerableOnly)symbols=symbols.filter(function(sym){return Object.getOwnPropertyDescriptor(object,sym).enumerable;});keys.push.apply(keys,symbols);}return keys;}function _objectSpread(target){for(var i=1;i<arguments.length;i++){var source=arguments[i]!=null?arguments[i]:{};if(i%2){ownKeys(Object(source),true).forEach(function(key){_defineProperty(target,key,source[key]);});}else if(Object.getOwnPropertyDescriptors){Object.defineProperties(target,Object.getOwnPropertyDescriptors(source));}else{ownKeys(Object(source)).forEach(function(key){Object.defineProperty(target,key,Object.getOwnPropertyDescriptor(source,key));});}}return target;}import{__decorate}from\"tslib\";import*as Msdyn365 from'@msdyn365-commerce/core';import{reaction}from'mobx';import{observer}from'mobx-react';import*as React from'react';import{StoreSelectorEmptyMessage,StoreSelectorFoundLocationsMessage,StoreSelectorLocationLines,StoreSelectorSearchForm,StoreSelectorTermsOfService,StoreSelectorWaiting}from'./components';import{getFullAvailableInventoryNearby,GetFullAvailableInventoryNearbyInput,getOrgUnitLocationsByArea,GetOrgUnitLocationsByAreaInput}from'@msdyn365-commerce-modules/retail-actions';import{getTelemetryObject,Modal,ModalBody,ModalFooter,ModalHeader}from'@msdyn365-commerce-modules/utilities';import classname from'classnames';let StoreSelector=class StoreSelector extends React.Component{constructor(props){super(props);this.preferredStoreLocalStorageKey='_msdyn365__preferredStore_';this.handleLinkTextChange=event=>{if(this.props.config.termsOfServiceLink){this.props.config.termsOfServiceLink.linkText=event.target.value;}};this.handleHeadingChange=event=>this.props.config.heading=event.target.value;this._attachMapAutoSuggest=async()=>{const{config:{autoSuggestOptions},context:{telemetry,actionContext:{requestContext:{channel}}},data:{storeSelectorStateManager:{result:storeSelectorStateManager}}}=this.props;if(storeSelectorStateManager!==null&&storeSelectorStateManager!==void 0&&storeSelectorStateManager.isMapApiLoaded&&!this.autoSuggestManager){Microsoft.Maps.loadModule('Microsoft.Maps.AutoSuggest',{callback:()=>{const options=_objectSpread(_objectSpread({},autoSuggestOptions),{},{countryCode:channel===null||channel===void 0?void 0:channel.ChannelCountryRegionISOCode});this.autoSuggestManager=new Microsoft.Maps.AutosuggestManager(options);this.autoSuggestManager.attachAutosuggest('#ms-store-select__search-box','#ms-store-select__search-box-container',this._onSuggestionSelected);},errorCallback:()=>{if(telemetry){telemetry.debug('Unable to attach map auto suggest.');}},credentials:channel===null||channel===void 0?void 0:channel.BingMapsApiKey});}};this._onSuggestionSelected=async result=>{await this._searchTermChanged(result.formattedSuggestion);await this._performSearch(result.formattedSuggestion);};this._setPreferredStore=async storeId=>{var _window;const localStorage=(_window=window)===null||_window===void 0?void 0:_window.localStorage;if(!storeId||!localStorage){return;}const{context:{actionContext:{requestContext:{cookies}}},data:{storeSelectorStateManager:{result:storeSelectorStateManager}}}=this.props;if(!storeSelectorStateManager||!(cookies!==null&&cookies!==void 0&&cookies.isConsentGiven())){return;}localStorage.setItem(this.preferredStoreLocalStorageKey,storeId);await storeSelectorStateManager.setPreferredStoreLocationId(storeId);};this._removePreferredStore=async()=>{var _window2;const localStorage=(_window2=window)===null||_window2===void 0?void 0:_window2.localStorage;if(!localStorage){return;}const{context:{actionContext:{requestContext:{cookies}}},data:{storeSelectorStateManager:{result:storeSelectorStateManager}}}=this.props;if(!storeSelectorStateManager||!(cookies!==null&&cookies!==void 0&&cookies.isConsentGiven())){return;}localStorage.removeItem(this.preferredStoreLocalStorageKey);await storeSelectorStateManager.setPreferredStoreLocationId(undefined);};this._setSelectedStore=async storeId=>{const{data:{storeSelectorStateManager:{result:storeSelectorStateManager}}}=this.props;if(!storeSelectorStateManager){return;}await storeSelectorStateManager.setSelectedStoreLocationId(storeId);};this._performSearch=async searchTerm=>{const{context:{actionContext},data:{storeSelectorStateManager:{result:storeSelectorStateManager}}}=this.props;if(!searchTerm||!storeSelectorStateManager){return;}this.setState({isSearchInProgress:true,isSeeAllStoreValue:false});const location=await storeSelectorStateManager.geoLocate(searchTerm.trim()!==''?searchTerm:'0',actionContext);if(location){await this._updateLocations(location.latitude,location.longitude);}this.setState({isSearchInProgress:false});};this._searchTermChanged=async searchTerm=>{this.setState({searchTerm:searchTerm});};this._getAndUpdateStoreLocation=showAllStores=>{const{config:{style},data:{storeSelectorStateManager:{result:storeSelectorStateManager}}}=this.props;const styleDefault=style!==undefined?style:\"dialog\";if(styleDefault!==\"inline\"&&(!storeSelectorStateManager||!storeSelectorStateManager.isDialogOpen)){return;}this.setState({isSearchInProgress:true,isSeeAllStoreValue:false});if(navigator&&navigator.geolocation){navigator.geolocation.getCurrentPosition(async position=>{if(showAllStores){this.setState({isSeeAllStoreValue:true});await this._searchTermChanged('');await this._updateLocations(position.coords.latitude,position.coords.longitude,0);}else{await this._updateLocations(position.coords.latitude,position.coords.longitude);}this.setState({isSearchInProgress:false});},async error=>{if(error.PERMISSION_DENIED){this.setState({isLocationDisabled:true});if(showAllStores){this.setState({isSeeAllStoreValue:true});await this._searchTermChanged('');await this._updateLocations(void 0,void 0,0);}else{await this._updateLocations();}}this.setState({isSearchInProgress:false});},{timeout:2000});}else{this.setState({isSearchInProgress:false});}};this._closeDialog=async()=>{const{data:{storeSelectorStateManager:{result:storeSelectorStateManager}}}=this.props;this.setState({searchTerm:''});if(storeSelectorStateManager){return storeSelectorStateManager.closeDialog();}};this._setOrgUnitStoreInformation=async orgUnitStoreInformation=>{const{data:{storeSelectorStateManager:{result:storeSelectorStateManager}},telemetry}=this.props;if(!storeSelectorStateManager){return;}await storeSelectorStateManager.setOrgUnitStoreInformation({orgUnitStoreInformation,onLocationSelected:orgUnitLocation=>{return Promise.resolve();}}).catch(error=>{if(telemetry){telemetry.error(error.message);telemetry.debug('Unable to Update store location state');}return;});return;};this._updateLocations=async(latitude,longitude,radius)=>{const{telemetry,config:{mode,lookupRadius},context:{actionContext},data:{storeSelectorStateManager:{result:storeSelectorStateManager}}}=this.props;const calRadius=radius||radius===0?radius:lookupRadius||50;const distanceUnitValue=this.props.config.searchRadiusUnit===\"kilometers\"?1:0;const modeDefault=mode!==undefined?mode:\"pickupInStore\";if(modeDefault===\"findStores\"){const orgUnitLocationsInput=new GetOrgUnitLocationsByAreaInput(latitude,longitude,calRadius,distanceUnitValue,this.state.isLocationDisabled);const orgUnitLocations=await getOrgUnitLocationsByArea(orgUnitLocationsInput,actionContext);if(orgUnitLocations){await this._setOrgUnitStoreInformation(orgUnitLocations);await this._setSelectedStore(undefined);}return;}if(!storeSelectorStateManager||!storeSelectorStateManager.context){return;}if(!storeSelectorStateManager.context.product){return;}const input=new GetFullAvailableInventoryNearbyInput(storeSelectorStateManager.context.product.RecordId,latitude||0,longitude||0,calRadius,distanceUnitValue,this.state.isLocationDisabled);await getFullAvailableInventoryNearby(input,actionContext).catch(error=>{telemetry.warning(error);telemetry.error(error.message);telemetry.debug(\"Unable to get full available inventory near by\");});};this._onOrgUnitLocationSelected=async location=>{const{telemetry,data:{storeSelectorStateManager:{result:storeSelectorStateManager}}}=this.props;if(storeSelectorStateManager){if(location&&storeSelectorStateManager.context){await storeSelectorStateManager.context.onLocationSelected(location).catch(error=>{telemetry.warning(error);telemetry.error(error.message);telemetry.debug(\"Unable to get on org unit location selected\");});}await storeSelectorStateManager.closeDialog();}};this.state={isSearchInProgress:true,searchTerm:'',isSeeAllStoreValue:false};this.telemetryContent=getTelemetryObject(this.props.context.request.telemetryPageName,this.props.friendlyName,this.props.telemetry);}componentDidMount(){const{context:{telemetry,actionContext:{requestContext:{channel}}},config:{autoSuggestionEnabled}}=this.props;this._getAndUpdateStoreLocation();reaction(()=>this.props.data.storeSelectorStateManager.result&&this.props.data.storeSelectorStateManager.result.isDialogOpen,()=>{this._getAndUpdateStoreLocation();});if(channel&&!channel.BingMapsApiKey){telemetry.error('BingMapsApiKey is missing.');return;}if(channel&&!channel.BingMapsEnabled){telemetry.error('Map is disabled from HQ.');return;}reaction(()=>{var _this$props$data$stor;return(_this$props$data$stor=this.props.data.storeSelectorStateManager.result)===null||_this$props$data$stor===void 0?void 0:_this$props$data$stor.loadMapApi;},()=>{var _this$props$data$stor2,_this$props$context,_this$props$context$a,_this$props$context$a2,_this$props$context$a3,_this$props$context2,_this$props$context2$,_this$props$context2$2,_this$props$context2$3;(_this$props$data$stor2=this.props.data.storeSelectorStateManager.result)===null||_this$props$data$stor2===void 0?void 0:_this$props$data$stor2.loadMapApi({key:channel===null||channel===void 0?void 0:channel.BingMapsApiKey,lang:(_this$props$context=this.props.context)===null||_this$props$context===void 0?void 0:(_this$props$context$a=_this$props$context.actionContext)===null||_this$props$context$a===void 0?void 0:(_this$props$context$a2=_this$props$context$a.requestContext)===null||_this$props$context$a2===void 0?void 0:(_this$props$context$a3=_this$props$context$a2.channel)===null||_this$props$context$a3===void 0?void 0:_this$props$context$a3.ChannelCountryRegionISOCode,market:(_this$props$context2=this.props.context)===null||_this$props$context2===void 0?void 0:(_this$props$context2$=_this$props$context2.actionContext)===null||_this$props$context2$===void 0?void 0:(_this$props$context2$2=_this$props$context2$.requestContext)===null||_this$props$context2$2===void 0?void 0:(_this$props$context2$3=_this$props$context2$2.channel)===null||_this$props$context2$3===void 0?void 0:_this$props$context2$3.DefaultLanguageId});});if(autoSuggestionEnabled){reaction(()=>{var _this$props$data$stor3;return(_this$props$data$stor3=this.props.data.storeSelectorStateManager.result)===null||_this$props$data$stor3===void 0?void 0:_this$props$data$stor3.isMapApiLoaded;},async()=>{await this._attachMapAutoSuggest();});}}render(){var _window3,_window3$localStorage,_storeSelectorStateMa;const{config:{termsOfServiceLink,className,heading,mode,style,setAsPreferredStore,showAllStores,lookupRadius},context:{telemetry,app:{config:appConfig},actionContext:{requestContext:{channel,cookies}}},resources,data:{availabilitiesWithHours:{result:availabilitiesWithHours},storeSelectorStateManager:{result:storeSelectorStateManager},storeLocations:{result:storeLocations}}}=this.props;const isMapDisabled=channel&&channel.BingMapsApiKey&&channel.BingMapsEnabled?false:true;const context=storeSelectorStateManager?storeSelectorStateManager.context:undefined;const isDialogOpen=storeSelectorStateManager?storeSelectorStateManager.isDialogOpen:false;const styleDefault=style!==undefined?style:\"dialog\";const modeDefault=mode!==undefined?mode:\"pickupInStore\";const inlineView=styleDefault===\"inline\";const locatorView=modeDefault===\"findStores\";const hideInventory=locatorView;const selectedStoreLocationId=storeSelectorStateManager===null||storeSelectorStateManager===void 0?void 0:storeSelectorStateManager.selectedStoreLocationId;const preferredStoreLocationId=(storeSelectorStateManager===null||storeSelectorStateManager===void 0?void 0:storeSelectorStateManager.preferredStoreLocationId)||((_window3=window)===null||_window3===void 0?void 0:(_window3$localStorage=_window3.localStorage)===null||_window3$localStorage===void 0?void 0:_window3$localStorage.getItem('_msdyn365__preferredStore_'));const displayList=storeSelectorStateManager===null||storeSelectorStateManager===void 0?void 0:(_storeSelectorStateMa=storeSelectorStateManager.listMapViewState)===null||_storeSelectorStateMa===void 0?void 0:_storeSelectorStateMa.displayList;const isPreferredStoreEnabled=setAsPreferredStore&&(cookies===null||cookies===void 0?void 0:cookies.isConsentGiven());const StoreSelectorActions={toggleListMapViewState(){storeSelectorStateManager===null||storeSelectorStateManager===void 0?void 0:storeSelectorStateManager.toggleListMapViewState();}};if(!(channel&&channel.BingMapsApiKey)){telemetry.error('BingMapsApiKey is missing.');}const configHeading=heading?heading:locatorView?resources.storeLocatorHeaderText:resources.storeSelectorHeaderText;const preferredDistanceUnit=this.props.config.searchRadiusUnit===\"kilometers\"?resources.kilometersShortText:resources.milesShortText;const viewProps=_objectSpread(_objectSpread({},this.props),{},{state:this.state,ModuleProps:{tag:inlineView?'div':Modal,moduleProps:this.props,className:classname(\"ms-store-\".concat(inlineView?'locate':'select'),className),autoFocus:true,fade:true,isOpen:isDialogOpen,onClosed:this._closeDialog,horizontalPosition:'center',verticalPosition:'center'},HeaderContainerProps:{tag:inlineView?'div':ModalHeader,className:\"ms-store-select__\".concat(inlineView?'header':'modal-header'),toggle:this._closeDialog},HeaderProps:configHeading&&/*#__PURE__*/React.createElement(Msdyn365.Text,Object.assign({className:'msc-modal__title'},configHeading,{tag:'h2',text:configHeading,editProps:{onEdit:this.handleHeadingChange,requestContext:this.props.context.request}})),FooterContainerProps:{tag:inlineView?'div':ModalFooter,className:\"ms-store-select__\".concat(inlineView?'footer':'modal-footer',\" \").concat(!displayList?'map-only-view':'')},BodyContainerProps:{tag:inlineView?'div':ModalBody,className:\"ms-store-select__\".concat(inlineView?'body':'modal-body')},locationsMessage:!this.state.isLocationDisabled&&/*#__PURE__*/React.createElement(StoreSelectorFoundLocationsMessage,{resources:resources,locations:hideInventory?storeLocations:availabilitiesWithHours,searchRadius:lookupRadius||50,preferredDistanceUnit:preferredDistanceUnit,isSeeAllStore:this.state.isSeeAllStoreValue}),search:/*#__PURE__*/React.createElement(StoreSelectorSearchForm,{value:this.state.searchTerm||'',resources:resources,performSearch:this._performSearch,searchTermChanged:this._searchTermChanged,isMapDisabled:isMapDisabled,showAllStores:showAllStores,onShowAllStores:()=>this._getAndUpdateStoreLocation(true),onToggleListMapViewState:StoreSelectorActions.toggleListMapViewState,displayList:displayList,locatorView:locatorView,telemetryContent:this.telemetryContent}),spinner:/*#__PURE__*/React.createElement(StoreSelectorWaiting,null),locationsList:(availabilitiesWithHours&&availabilitiesWithHours.length||storeLocations&&storeLocations.length)&&/*#__PURE__*/React.createElement(StoreSelectorLocationLines,{locations:hideInventory?storeLocations:availabilitiesWithHours,resources:resources,preferredDistanceUnit:preferredDistanceUnit,alreadySelectedLocation:context?context.alreadySelectedLocation:undefined,outOfStockThreshold:appConfig.outOfStockThreshold||0,enableOutOfStockCheck:appConfig.enableStockCheck||false,onLocationSelected:this._onOrgUnitLocationSelected,storeLocatorView:locatorView,selectedStoreLocationId:selectedStoreLocationId,onClick:this._setSelectedStore,preferredStoreLocationId:preferredStoreLocationId,onSetAsPreferredStore:this._setPreferredStore,onRemovePreferredStore:this._removePreferredStore,isPreferredStoreEnabled:isPreferredStoreEnabled,displayList:displayList,telemetryContent:this.telemetryContent,isLocationDisabled:this.state.isLocationDisabled}),noLocationsMessage:/*#__PURE__*/React.createElement(StoreSelectorEmptyMessage,{resources:resources}),terms:/*#__PURE__*/React.createElement(StoreSelectorTermsOfService,{link:termsOfServiceLink,onTextChange:this.handleLinkTextChange,requestContext:this.props.context.request}),headerText:/*#__PURE__*/React.createElement(\"span\",null,heading?heading:locatorView?resources.storeLocatorHeaderText:resources.storeSelectorHeaderText),callbacks:{searchTermChanged:this._searchTermChanged,performSearch:this._performSearch,closeDialog:this._closeDialog,selectedLocation:this._onOrgUnitLocationSelected,getAndUpdateUserLocation:()=>{this._getAndUpdateStoreLocation();return Promise.resolve();},attachMapAutoSuggest:this._attachMapAutoSuggest,onSuggestionSelected:this._onOrgUnitLocationSelected,setPreferredStore:this._setPreferredStore,removePreferredStore:this._removePreferredStore,setSelectedStore:this._setSelectedStore,setOrgUnitStoreInformation:this._setOrgUnitStoreInformation}});return this.props.renderView(viewProps);}};StoreSelector=__decorate([observer],StoreSelector);export default StoreSelector;","map":{"version":3,"sources":["modules/store-selector/store-selector.tsx"],"names":[],"mappings":"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","sourcesContent":["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\n// tslint:disable:no-reference\n/// <reference path=\"types/MicrosoftMaps/Microsoft.Maps.All.d.ts\" />\n\nimport * as Msdyn365 from '@msdyn365-commerce/core';\nimport { reaction } from 'mobx';\nimport { observer } from 'mobx-react';\nimport * as React from 'react';\nimport { IStoreSelectorData } from './store-selector.data';\nimport { IStoreSelectorProps, mode as modeEnum, searchRadiusUnit, style as stylyEnum } from './store-selector.props.autogenerated';\n\nimport {\n    StoreSelectorEmptyMessage,\n    StoreSelectorFoundLocationsMessage,\n    StoreSelectorLocationLines,\n    StoreSelectorSearchForm,\n    StoreSelectorTermsOfService,\n    StoreSelectorWaiting\n} from './components';\n\nimport { getFullAvailableInventoryNearby, GetFullAvailableInventoryNearbyInput, getOrgUnitLocationsByArea, GetOrgUnitLocationsByAreaInput, IFullOrgUnitAvailability } from '@msdyn365-commerce-modules/retail-actions';\n\nimport { getTelemetryObject, IModuleProps, INodeProps, ITelemetryContent, Modal, ModalBody, ModalFooter, ModalHeader, NodeTag } from '@msdyn365-commerce-modules/utilities';\nimport { OrgUnitLocation } from '@msdyn365-commerce/retail-proxy';\nimport classname from 'classnames';\nexport interface IStoreSelectorState {\n    isSearchInProgress: boolean;\n    searchTerm?: string;\n    isSeeAllStoreValue: boolean;\n    isLocationDisabled?: boolean;\n}\n\nexport interface IStoreSelectorViewProps extends IStoreSelectorProps<IStoreSelectorData> {\n    state: IStoreSelectorState;\n\n    // Containers:\n    ModuleProps: IModuleProps;\n    BodyContainerProps: INodeProps;\n    FooterContainerProps: INodeProps;\n    HeaderContainerProps: INodeProps;\n    HeaderProps?: React.ReactNode;\n\n    // Components\n    locationsMessage?: React.ReactNode;\n    search?: React.ReactNode;\n    spinner?: React.ReactNode;\n    locationsList?: React.ReactNode;\n    noLocationsMessage?: React.ReactNode;\n    terms?: React.ReactNode;\n    headerText?: React.ReactNode;\n\n    callbacks: {\n        closeDialog(): Promise<void>;\n        searchTermChanged(searchTerm: string): Promise<void>;\n        performSearch(searchTerm: string): Promise<void>;\n        selectedLocation(location: OrgUnitLocation | undefined): Promise<void>;\n        getAndUpdateUserLocation(): Promise<void>;\n        attachMapAutoSuggest(): Promise<void>;\n        onSuggestionSelected(result: Microsoft.Maps.ISuggestionResult): Promise<void>;\n        setPreferredStore(storeId: string | undefined): Promise<void>;\n        removePreferredStore(): Promise<void>;\n        setSelectedStore(storeId: string | undefined): Promise<void>;\n        setOrgUnitStoreInformation(location: OrgUnitLocation | undefined): Promise<void>;\n    };\n}\n\n/**\n *\n * Pick Up In Store module\n * @extends React.Component<IPickUpInStoreProps<IPickUpInStoreData>>}\n */\n@observer\nclass StoreSelector extends React.Component<IStoreSelectorProps<IStoreSelectorData>, IStoreSelectorState> {\n    private autoSuggestManager: Microsoft.Maps.AutosuggestManager | undefined;\n    private preferredStoreLocalStorageKey: string = '_msdyn365__preferredStore_';\n    private telemetryContent: ITelemetryContent;\n\n    constructor(props: IStoreSelectorProps<IStoreSelectorData>) {\n        super(props);\n        this.state = { isSearchInProgress: true, searchTerm: '',isSeeAllStoreValue:false};\n        this.telemetryContent = getTelemetryObject(this.props.context.request.telemetryPageName!,\n                                                   this.props.friendlyName,\n                                                   this.props.telemetry);\n    }\n\n    public componentDidMount(): void {\n        const {\n            context: {\n                telemetry,\n                actionContext: {\n                    requestContext: {\n                        channel\n                    }\n                }\n            },\n            config: {\n                autoSuggestionEnabled\n            }\n        } = this.props;\n\n        this._getAndUpdateStoreLocation();\n\n        reaction(\n            () => this.props.data.storeSelectorStateManager.result && this.props.data.storeSelectorStateManager.result.isDialogOpen,\n            () => {\n                this._getAndUpdateStoreLocation();\n            }\n        );\n\n        if (channel && !channel.BingMapsApiKey) {\n            telemetry.error('BingMapsApiKey is missing.');\n            return;\n        }\n\n        if (channel && !channel.BingMapsEnabled) {\n            telemetry.error('Map is disabled from HQ.');\n            return;\n        }\n\n        reaction(\n            () => this.props.data.storeSelectorStateManager.result?.loadMapApi,\n            () => {\n                this.props.data.storeSelectorStateManager.result?.loadMapApi({\n                    key: channel?.BingMapsApiKey,\n                    lang: this.props.context?.actionContext?.requestContext?.channel?.ChannelCountryRegionISOCode,\n                    market: this.props.context?.actionContext?.requestContext?.channel?.DefaultLanguageId\n                });\n            }\n        );\n\n        if (autoSuggestionEnabled) {\n            reaction(\n                () => this.props.data.storeSelectorStateManager.result?.isMapApiLoaded,\n                async () => {\n                    await this._attachMapAutoSuggest();\n                }\n            );\n        }\n    }\n\n    // tslint:disable-next-line:max-func-body-length cyclomatic-complexity\n    public render(): JSX.Element {\n        const {\n            config: {\n                termsOfServiceLink,\n                className,\n                heading,\n                mode,\n                style,\n                setAsPreferredStore,\n                showAllStores,\n                lookupRadius\n            },\n            context: {\n                telemetry,\n                app: {\n                    config: appConfig\n                },\n                actionContext: {\n                    requestContext: {\n                        channel,\n                        cookies\n                    }\n                }\n            },\n            resources,\n            data: {\n                availabilitiesWithHours: { result: availabilitiesWithHours },\n                storeSelectorStateManager: { result: storeSelectorStateManager },\n                storeLocations: { result: storeLocations }\n            }\n        } = this.props;\n\n        const isMapDisabled = (channel && channel.BingMapsApiKey && channel.BingMapsEnabled) ? false : true;\n        const context = storeSelectorStateManager ? storeSelectorStateManager.context : undefined;\n        const isDialogOpen: boolean = storeSelectorStateManager ? storeSelectorStateManager.isDialogOpen : false;\n        const styleDefault = style !== undefined ? style : stylyEnum.dialog;\n        const modeDefault = mode !== undefined ? mode : modeEnum.pickupInStore;\n        const inlineView = styleDefault === stylyEnum.inline;\n        const locatorView = modeDefault === modeEnum.findStores;\n        const hideInventory = locatorView;\n        const selectedStoreLocationId = storeSelectorStateManager?.selectedStoreLocationId;\n        const preferredStoreLocationId = storeSelectorStateManager?.preferredStoreLocationId || window?.localStorage?.getItem('_msdyn365__preferredStore_');\n        const displayList = storeSelectorStateManager?.listMapViewState?.displayList;\n        const isPreferredStoreEnabled = setAsPreferredStore && cookies?.isConsentGiven();\n\n        const StoreSelectorActions = {\n            toggleListMapViewState(): void {\n                storeSelectorStateManager?.toggleListMapViewState();\n            }\n        };\n\n        if (!(channel && channel.BingMapsApiKey)) {\n            telemetry.error('BingMapsApiKey is missing.');\n        }\n\n        const configHeading = heading ? heading : locatorView ? resources.storeLocatorHeaderText : resources.storeSelectorHeaderText;\n        const preferredDistanceUnit = this.props.config.searchRadiusUnit === searchRadiusUnit.kilometers ? resources.kilometersShortText : resources.milesShortText ;\n\n        const viewProps = {\n            ...(this.props as IStoreSelectorProps<IStoreSelectorData>),\n            state: this.state,\n\n            ModuleProps: {\n                tag: inlineView ? 'div' as NodeTag : Modal,\n                moduleProps: this.props,\n                className: classname(`ms-store-${inlineView ? 'locate' : 'select'}`, className),\n                autoFocus: true,\n                fade: true,\n                isOpen: isDialogOpen,\n                onClosed: this._closeDialog,\n                horizontalPosition: 'center',\n                verticalPosition: 'center'\n            },\n            HeaderContainerProps: {\n                tag: inlineView ? 'div' as NodeTag : ModalHeader,\n                className: `ms-store-select__${inlineView ? 'header' : 'modal-header'}`,\n                toggle: this._closeDialog\n            },\n            HeaderProps: configHeading && (\n                <Msdyn365.Text\n                    className='msc-modal__title'\n                    {...configHeading}\n                    tag={'h2'}\n                    text={configHeading}\n                    editProps={{ onEdit: this.handleHeadingChange, requestContext: this.props.context.request }}\n                />\n            ),\n            FooterContainerProps: {\n                tag: inlineView ? 'div' as NodeTag : ModalFooter,\n                className: `ms-store-select__${inlineView ? 'footer' : 'modal-footer'} ${!displayList ? 'map-only-view' : ''}`\n            },\n            BodyContainerProps: {\n                tag: inlineView ? 'div' as NodeTag : ModalBody,\n                className: `ms-store-select__${inlineView ? 'body' : 'modal-body'}`\n            },\n            locationsMessage: !this.state.isLocationDisabled && (\n                <StoreSelectorFoundLocationsMessage\n                    resources={resources}\n                    locations={hideInventory ? storeLocations : availabilitiesWithHours}\n                    searchRadius={lookupRadius || 50}\n                    preferredDistanceUnit={preferredDistanceUnit}\n                    isSeeAllStore={this.state.isSeeAllStoreValue}\n                />\n            ),\n            search: (\n                <StoreSelectorSearchForm\n                    value={this.state.searchTerm || ''}\n                    resources={resources}\n                    performSearch={this._performSearch}\n                    searchTermChanged={this._searchTermChanged}\n                    isMapDisabled={isMapDisabled}\n                    showAllStores={showAllStores}\n                    // tslint:disable-next-line:react-this-binding-issue jsx-no-lambda\n                    onShowAllStores={() => this._getAndUpdateStoreLocation(true)}\n                    onToggleListMapViewState={StoreSelectorActions.toggleListMapViewState}\n                    displayList={displayList}\n                    locatorView={locatorView}\n                    telemetryContent={this.telemetryContent}\n                />\n            ),\n            spinner: <StoreSelectorWaiting />,\n            locationsList: ((availabilitiesWithHours && availabilitiesWithHours.length) || (storeLocations && storeLocations.length)) && (\n                <StoreSelectorLocationLines\n                    locations={hideInventory ? storeLocations : availabilitiesWithHours}\n                    resources={resources}\n                    preferredDistanceUnit={preferredDistanceUnit}\n                    alreadySelectedLocation={context ? context.alreadySelectedLocation : undefined}\n                    outOfStockThreshold={appConfig.outOfStockThreshold || 0}\n                    enableOutOfStockCheck={appConfig.enableStockCheck || false}\n                    onLocationSelected={this._onOrgUnitLocationSelected}\n                    storeLocatorView={locatorView}\n                    selectedStoreLocationId={selectedStoreLocationId}\n                    onClick={this._setSelectedStore}\n                    preferredStoreLocationId={preferredStoreLocationId}\n                    onSetAsPreferredStore={this._setPreferredStore}\n                    onRemovePreferredStore={this._removePreferredStore}\n                    isPreferredStoreEnabled={isPreferredStoreEnabled}\n                    displayList={displayList}\n                    telemetryContent={this.telemetryContent}\n                    isLocationDisabled={this.state.isLocationDisabled}\n                />\n            ),\n            noLocationsMessage: <StoreSelectorEmptyMessage resources={resources} />,\n            terms: <StoreSelectorTermsOfService link={termsOfServiceLink} onTextChange={this.handleLinkTextChange} requestContext={this.props.context.request} />,\n            // Not being used in current context, we can use it here to pass more props.\n            headerText: <span>{heading ? heading : locatorView ? resources.storeLocatorHeaderText : resources.storeSelectorHeaderText}</span>,\n\n            callbacks: {\n                searchTermChanged: this._searchTermChanged,\n                performSearch: this._performSearch,\n                closeDialog: this._closeDialog,\n                selectedLocation: this._onOrgUnitLocationSelected,\n                getAndUpdateUserLocation: () => { this._getAndUpdateStoreLocation(); return Promise.resolve(); },\n                attachMapAutoSuggest: this._attachMapAutoSuggest,\n                onSuggestionSelected: this._onOrgUnitLocationSelected,\n                setPreferredStore: this._setPreferredStore,\n                removePreferredStore: this._removePreferredStore,\n                setSelectedStore: this._setSelectedStore,\n                setOrgUnitStoreInformation: this._setOrgUnitStoreInformation\n            }\n        } as IStoreSelectorViewProps;\n\n        return this.props.renderView(viewProps) as React.ReactElement;\n    }\n\n    public handleLinkTextChange = (event: Msdyn365.ContentEditableEvent) => {\n        if (this.props.config.termsOfServiceLink) {\n            this.props.config.termsOfServiceLink.linkText = event.target.value;\n        }\n    };\n    public handleHeadingChange = (event: Msdyn365.ContentEditableEvent) => this.props.config.heading = event.target.value;\n\n    private _attachMapAutoSuggest = async (): Promise<void> => {\n        const {\n            config: {\n                autoSuggestOptions\n            },\n            context: {\n                telemetry,\n                actionContext: {\n                    requestContext: {\n                        channel\n                    }\n                }\n            },\n            data: {\n                storeSelectorStateManager: { result: storeSelectorStateManager }\n            }\n        } = this.props;\n\n        if (storeSelectorStateManager?.isMapApiLoaded && !this.autoSuggestManager) {\n            Microsoft.Maps.loadModule('Microsoft.Maps.AutoSuggest', {\n                callback: () => {\n                    const options = { ...autoSuggestOptions, countryCode: channel?.ChannelCountryRegionISOCode };\n                    this.autoSuggestManager = new Microsoft.Maps.AutosuggestManager(options);\n                    this.autoSuggestManager.attachAutosuggest('#ms-store-select__search-box', '#ms-store-select__search-box-container', this._onSuggestionSelected);\n                },\n                errorCallback: () => {\n                    if (telemetry) {\n                        telemetry.debug('Unable to attach map auto suggest.');\n                    }\n                },\n                credentials: channel?.BingMapsApiKey\n            });\n        }\n    }\n\n    private _onSuggestionSelected = async (result: Microsoft.Maps.ISuggestionResult): Promise<void> => {\n        await this._searchTermChanged(result.formattedSuggestion);\n        await this._performSearch(result.formattedSuggestion);\n    }\n\n    private _setPreferredStore = async (storeId: string | undefined): Promise<void> => {\n        const localStorage = window?.localStorage;\n\n        if (!storeId || !localStorage) {\n            return;\n        }\n\n        const {\n            context: {\n                actionContext: {\n                    requestContext: {\n                        cookies\n                    }\n                }\n            },\n            data: {\n                storeSelectorStateManager: { result: storeSelectorStateManager }\n            }\n        } = this.props;\n\n        if (!storeSelectorStateManager || !cookies?.isConsentGiven()) { return; }\n\n        localStorage.setItem(this.preferredStoreLocalStorageKey, storeId);\n        await storeSelectorStateManager.setPreferredStoreLocationId(storeId);\n    }\n\n    private _removePreferredStore = async (): Promise<void> => {\n        const localStorage = window?.localStorage;\n\n        if (!localStorage) {\n            return;\n        }\n\n        const {\n            context: {\n                actionContext: {\n                    requestContext: {\n                        cookies\n                    }\n                }\n            },\n            data: {\n                storeSelectorStateManager: { result: storeSelectorStateManager }\n            }\n        } = this.props;\n\n        if (!storeSelectorStateManager || !cookies?.isConsentGiven()) { return; }\n\n        localStorage.removeItem(this.preferredStoreLocalStorageKey);\n        await storeSelectorStateManager.setPreferredStoreLocationId(undefined);\n    }\n\n    private _setSelectedStore = async (storeId: string | undefined): Promise<void> => {\n        const {\n            data: {\n                storeSelectorStateManager: { result: storeSelectorStateManager }\n            }\n        } = this.props;\n\n        if (!storeSelectorStateManager) { return; }\n\n        await storeSelectorStateManager.setSelectedStoreLocationId(storeId);\n    }\n\n    private _performSearch = async (searchTerm: string): Promise<void> => {\n        const {\n            context: {\n                actionContext\n            },\n            data: {\n                storeSelectorStateManager: { result: storeSelectorStateManager }\n            }\n        } = this.props;\n\n        if (!searchTerm || !storeSelectorStateManager) {\n            return;\n        }\n\n        this.setState({ isSearchInProgress: true, isSeeAllStoreValue: false });\n\n        const location = await storeSelectorStateManager.geoLocate(searchTerm.trim() !== '' ? searchTerm : '0', actionContext);\n\n        if (location) {\n            await this._updateLocations(location.latitude, location.longitude);\n        }\n\n        this.setState({ isSearchInProgress: false });\n    }\n\n    private _searchTermChanged = async (searchTerm: string): Promise<void> => {\n        this.setState({ searchTerm: searchTerm });\n    }\n\n    private _getAndUpdateStoreLocation = (showAllStores?: boolean): void => {\n        const {\n            config: {\n                style\n            },\n            data: {\n                storeSelectorStateManager: { result: storeSelectorStateManager }\n            }\n        } = this.props;\n\n        const styleDefault = style !== undefined ? style : stylyEnum.dialog;\n\n        if (styleDefault !== stylyEnum.inline && (!storeSelectorStateManager || !storeSelectorStateManager.isDialogOpen)) {\n            // Store selector dialog isn't open yet, so don't try and update anything\n            return;\n        }\n\n        this.setState({ isSearchInProgress: true, isSeeAllStoreValue: false });\n\n        if (navigator && navigator.geolocation) {\n            navigator.geolocation.getCurrentPosition(\n                async position => {\n                    if (showAllStores) {\n                        this.setState({ isSeeAllStoreValue: true });\n                        await this._searchTermChanged('');\n                        await this._updateLocations(position.coords.latitude, position.coords.longitude, 0);\n                    } else {\n                        await this._updateLocations(position.coords.latitude, position.coords.longitude);\n                    }\n\n                    this.setState({ isSearchInProgress: false });\n                },\n                async error => {\n                    // If the location setting is turned off\n                    if (error.PERMISSION_DENIED) {\n                        this.setState({ isLocationDisabled: true });\n                        if (showAllStores) {\n                            this.setState({ isSeeAllStoreValue: true });\n                            await this._searchTermChanged('');\n                            await this._updateLocations(void 0, void 0, 0);\n                        } else {\n                            await this._updateLocations();\n                        }\n                    }\n\n                    this.setState({ isSearchInProgress: false });\n                },\n                { timeout: 2000 }\n            );\n        } else {\n            this.setState({ isSearchInProgress: false });\n        }\n    }\n\n    private _closeDialog = async (): Promise<void> => {\n        const {\n            data: {\n                storeSelectorStateManager: { result: storeSelectorStateManager }\n            }\n        } = this.props;\n\n        this.setState({ searchTerm: '' });\n\n        if (storeSelectorStateManager) {\n            return storeSelectorStateManager.closeDialog();\n        }\n    }\n\n    private _setOrgUnitStoreInformation = async (orgUnitStoreInformation: IFullOrgUnitAvailability[]): Promise<void> => {\n        const {\n            data: {\n                storeSelectorStateManager: { result: storeSelectorStateManager }\n            },\n            telemetry\n        } = this.props;\n\n        if (!storeSelectorStateManager) { return; }\n\n        await storeSelectorStateManager.setOrgUnitStoreInformation({\n            orgUnitStoreInformation,\n            onLocationSelected: orgUnitLocation => {\n                // TO-DO handle event for when location in selected\n                return Promise.resolve();\n            }\n        })\n            .catch((error: Error) => {\n                if (telemetry) {\n                    telemetry.error(error.message);\n                    telemetry.debug('Unable to Update store location state');\n                }\n                return;\n            });\n        return;\n    }\n\n    private _updateLocations = async (latitude?: number, longitude?: number, radius?: number): Promise<void> => {\n        const {\n            telemetry,\n            config: {\n                mode,\n                lookupRadius\n            },\n            context: {\n                actionContext\n            },\n            data: {\n                storeSelectorStateManager: { result: storeSelectorStateManager }\n            }\n        } = this.props;\n\n        const calRadius = (radius || radius === 0) ? radius : (lookupRadius || 50);\n        const distanceUnitValue = this.props.config.searchRadiusUnit === searchRadiusUnit.kilometers ? 1 : 0;\n        const modeDefault = mode !== undefined ? mode : modeEnum.pickupInStore;\n\n        if (modeDefault === modeEnum.findStores) {\n            const orgUnitLocationsInput = new GetOrgUnitLocationsByAreaInput(\n                latitude,\n                longitude,\n                calRadius,\n                distanceUnitValue,\n                this.state.isLocationDisabled\n            );\n\n            const orgUnitLocations = await getOrgUnitLocationsByArea(orgUnitLocationsInput, actionContext);\n            if (orgUnitLocations) {\n                await this._setOrgUnitStoreInformation(orgUnitLocations);\n                await this._setSelectedStore(undefined);\n            }\n            return;\n        }\n\n        if (!storeSelectorStateManager || !storeSelectorStateManager.context) {\n            // Store selector dialog isn't open yet, so don't try and update anything\n            return;\n        }\n\n        if (!storeSelectorStateManager.context.product) {\n            // TODO: Use alternative search method here to not make inventory check\n            return;\n        }\n\n        const input = new GetFullAvailableInventoryNearbyInput(\n            storeSelectorStateManager.context.product.RecordId,\n            latitude || 0,\n            longitude || 0,\n            calRadius,\n            distanceUnitValue,\n            this.state.isLocationDisabled\n        );\n\n        await getFullAvailableInventoryNearby(input, actionContext).catch((error) => {\n            telemetry.warning(error);\n            telemetry.error(error.message);\n            telemetry.debug(`Unable to get full available inventory near by`);\n        });\n    }\n\n    private _onOrgUnitLocationSelected = async (location: OrgUnitLocation | undefined): Promise<void> => {\n        const {\n            telemetry,\n            data: {\n                storeSelectorStateManager: { result: storeSelectorStateManager }\n            }\n        } = this.props;\n\n        if (storeSelectorStateManager) {\n            if (location && storeSelectorStateManager.context) {\n                // Want to eat exceptions here so that the dialog still closes even if the onLocationSelected call goes wrong\n                await storeSelectorStateManager.context.onLocationSelected(location).catch(error => {\n                    telemetry.warning(error);\n                    telemetry.error(error.message);\n                    telemetry.debug(`Unable to get on org unit location selected`);\n                });\n            }\n\n            await storeSelectorStateManager.closeDialog();\n        }\n    };\n}\n\nexport default StoreSelector;\n"],"sourceRoot":"./src/"},"metadata":{},"sourceType":"module"}