{"ast":null,"code":"export var AddressItemDisplayType;(function(AddressItemDisplayType){AddressItemDisplayType[\"Input\"]=\"Input\";AddressItemDisplayType[\"Dropdown\"]=\"Dropdown\";AddressItemDisplayType[\"Checkbox\"]=\"Checkbox\";})(AddressItemDisplayType||(AddressItemDisplayType={}));export var AddressValidationRuleType;(function(AddressValidationRuleType){AddressValidationRuleType[\"Required\"]=\"Required\";AddressValidationRuleType[\"Format\"]=\"Format\";})(AddressValidationRuleType||(AddressValidationRuleType={}));export var AddressItemType;(function(AddressItemType){AddressItemType[AddressItemType[\"Name\"]=1001]=\"Name\";AddressItemType[AddressItemType[\"Phone\"]=1002]=\"Phone\";AddressItemType[AddressItemType[\"IsPrimary\"]=1003]=\"IsPrimary\";AddressItemType[AddressItemType[\"AddressTypeValue\"]=1004]=\"AddressTypeValue\";AddressItemType[AddressItemType[\"ZipCode\"]=1]=\"ZipCode\";AddressItemType[AddressItemType[\"City\"]=2]=\"City\";AddressItemType[AddressItemType[\"County\"]=3]=\"County\";AddressItemType[AddressItemType[\"State\"]=4]=\"State\";AddressItemType[AddressItemType[\"ThreeLetterISORegionName\"]=5]=\"ThreeLetterISORegionName\";AddressItemType[AddressItemType[\"Street\"]=6]=\"Street\";AddressItemType[AddressItemType[\"District\"]=7]=\"District\";AddressItemType[AddressItemType[\"StreetNumber\"]=8]=\"StreetNumber\";AddressItemType[AddressItemType[\"BuildingCompliment\"]=9]=\"BuildingCompliment\";AddressItemType[AddressItemType[\"Postbox\"]=10]=\"Postbox\";AddressItemType[AddressItemType[\"House_RU\"]=21]=\"House_RU\";AddressItemType[AddressItemType[\"Flat_RU\"]=22]=\"Flat_RU\";AddressItemType[AddressItemType[\"CountryOKSMCode_RU\"]=23]=\"CountryOKSMCode_RU\";})(AddressItemType||(AddressItemType={}));","map":{"version":3,"sources":["common/address-format.data.ts"],"names":[],"mappings":"AAAA,MAAA,IAAY,CAAA,sBAAZ,CAAA,CAAA,SAAY,sBAAZ,CAAkC,CAC9B,sBAAA,CAAA,OAAA,CAAA,CAAA,OAAA,CACA,sBAAA,CAAA,UAAA,CAAA,CAAA,UAAA,CACA,sBAAA,CAAA,UAAA,CAAA,CAAA,UAAA,CACH,CAJD,EAAY,sBAAsB,GAAtB,sBAAsB,CAAA,EAAA,CAAlC,EAMA,MAAA,IAAY,CAAA,yBAAZ,CAAA,CAAA,SAAY,yBAAZ,CAAqC,CACjC,yBAAA,CAAA,UAAA,CAAA,CAAA,UAAA,CACA,yBAAA,CAAA,QAAA,CAAA,CAAA,QAAA,CACH,CAHD,EAAY,yBAAyB,GAAzB,yBAAyB,CAAA,EAAA,CAArC,EAKA,MAAA,IAAY,CAAA,eAAZ,CAAA,CAAA,SAAY,eAAZ,CAA2B,CACvB,eAAA,CAAA,eAAA,CAAA,MAAA,CAAA,CAAA,IAAA,CAAA,CAAA,MAAA,CACA,eAAA,CAAA,eAAA,CAAA,OAAA,CAAA,CAAA,IAAA,CAAA,CAAA,OAAA,CACA,eAAA,CAAA,eAAA,CAAA,WAAA,CAAA,CAAA,IAAA,CAAA,CAAA,WAAA,CACA,eAAA,CAAA,eAAA,CAAA,kBAAA,CAAA,CAAA,IAAA,CAAA,CAAA,kBAAA,CACA,eAAA,CAAA,eAAA,CAAA,SAAA,CAAA,CAAA,CAAA,CAAA,CAAA,SAAA,CACA,eAAA,CAAA,eAAA,CAAA,MAAA,CAAA,CAAA,CAAA,CAAA,CAAA,MAAA,CACA,eAAA,CAAA,eAAA,CAAA,QAAA,CAAA,CAAA,CAAA,CAAA,CAAA,QAAA,CACA,eAAA,CAAA,eAAA,CAAA,OAAA,CAAA,CAAA,CAAA,CAAA,CAAA,OAAA,CACA,eAAA,CAAA,eAAA,CAAA,0BAAA,CAAA,CAAA,CAAA,CAAA,CAAA,0BAAA,CACA,eAAA,CAAA,eAAA,CAAA,QAAA,CAAA,CAAA,CAAA,CAAA,CAAA,QAAA,CACA,eAAA,CAAA,eAAA,CAAA,UAAA,CAAA,CAAA,CAAA,CAAA,CAAA,UAAA,CACA,eAAA,CAAA,eAAA,CAAA,cAAA,CAAA,CAAA,CAAA,CAAA,CAAA,cAAA,CACA,eAAA,CAAA,eAAA,CAAA,oBAAA,CAAA,CAAA,CAAA,CAAA,CAAA,oBAAA,CACA,eAAA,CAAA,eAAA,CAAA,SAAA,CAAA,CAAA,EAAA,CAAA,CAAA,SAAA,CACA,eAAA,CAAA,eAAA,CAAA,UAAA,CAAA,CAAA,EAAA,CAAA,CAAA,UAAA,CACA,eAAA,CAAA,eAAA,CAAA,SAAA,CAAA,CAAA,EAAA,CAAA,CAAA,SAAA,CACA,eAAA,CAAA,eAAA,CAAA,oBAAA,CAAA,CAAA,EAAA,CAAA,CAAA,oBAAA,CACH,CAlBD,EAAY,eAAe,GAAf,eAAe,CAAA,EAAA,CAA3B","sourcesContent":["export enum AddressItemDisplayType {\n    Input = 'Input',\n    Dropdown = 'Dropdown',\n    Checkbox = 'Checkbox'\n}\n\nexport enum AddressValidationRuleType {\n    Required = 'Required',\n    Format = 'Format'\n}\n\nexport enum AddressItemType {\n    Name = 1001,\n    Phone = 1002,\n    IsPrimary = 1003,\n    AddressTypeValue = 1004,\n    ZipCode = 1,\n    City = 2,\n    County = 3,\n    State = 4,\n    ThreeLetterISORegionName = 5,\n    Street = 6,\n    District = 7,\n    StreetNumber = 8,\n    BuildingCompliment = 9,\n    Postbox = 10,\n    House_RU = 21,\n    Flat_RU = 22,\n    CountryOKSMCode_RU = 23\n}\n\nexport interface IAddressItem {\n    name: string;\n    type: AddressItemType;\n    label: string;\n    maxLength: number;\n    displayType: AddressItemDisplayType;\n    validationRules?: IAddressValidationRule[];\n    isNewLine: boolean;\n}\n\nexport interface IAddressValidationRule {\n    type: AddressValidationRuleType;\n    regEx: string;\n    message: string;\n}\n\nexport interface IAddressDropdownsData {\n    [index: string]: { key?: string | number; value?: string }[];\n}"],"sourceRoot":"./src/"},"metadata":{},"sourceType":"module"}