{"ast":null,"code":"import _defineProperty from\"@babel/runtime/helpers/esm/defineProperty\";import _regeneratorRuntime from\"@babel/runtime/regenerator\";import _slicedToArray from\"@babel/runtime/helpers/esm/slicedToArray\";import _asyncToGenerator from\"@babel/runtime/helpers/esm/asyncToGenerator\";import _get2 from\"lodash/get\";import _flatten2 from\"lodash/flatten\";import _each2 from\"lodash/each\";function _createForOfIteratorHelper(o,allowArrayLike){var it;if(typeof Symbol===\"undefined\"||o[Symbol.iterator]==null){if(Array.isArray(o)||(it=_unsupportedIterableToArray(o))||allowArrayLike&&o&&typeof o.length===\"number\"){if(it)o=it;var i=0;var F=function F(){};return{s:F,n:function n(){if(i>=o.length)return{done:true};return{done:false,value:o[i++]};},e:function e(_e){throw _e;},f:F};}throw new TypeError(\"Invalid attempt to iterate non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");}var normalCompletion=true,didErr=false,err;return{s:function s(){it=o[Symbol.iterator]();},n:function n(){var step=it.next();normalCompletion=step.done;return step;},e:function e(_e2){didErr=true;err=_e2;},f:function f(){try{if(!normalCompletion&&it[\"return\"]!=null)it[\"return\"]();}finally{if(didErr)throw err;}}};}function _unsupportedIterableToArray(o,minLen){if(!o)return;if(typeof o===\"string\")return _arrayLikeToArray(o,minLen);var n=Object.prototype.toString.call(o).slice(8,-1);if(n===\"Object\"&&o.constructor)n=o.constructor.name;if(n===\"Map\"||n===\"Set\")return Array.from(o);if(n===\"Arguments\"||/^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n))return _arrayLikeToArray(o,minLen);}function _arrayLikeToArray(arr,len){if(len==null||len>arr.length)len=arr.length;for(var i=0,arr2=new Array(len);i<len;i++){arr2[i]=arr[i];}return arr2;}function ownKeys(object,enumerableOnly){var keys=Object.keys(object);if(Object.getOwnPropertySymbols){var symbols=Object.getOwnPropertySymbols(object);if(enumerableOnly)symbols=symbols.filter(function(sym){return Object.getOwnPropertyDescriptor(object,sym).enumerable;});keys.push.apply(keys,symbols);}return keys;}function _objectSpread(target){for(var i=1;i<arguments.length;i++){var source=arguments[i]!=null?arguments[i]:{};if(i%2){ownKeys(Object(source),true).forEach(function(key){_defineProperty(target,key,source[key]);});}else if(Object.getOwnPropertyDescriptors){Object.defineProperties(target,Object.getOwnPropertyDescriptors(source));}else{ownKeys(Object(source)).forEach(function(key){Object.defineProperty(target,key,Object.getOwnPropertyDescriptor(source,key));});}}return target;}/*!\r\n * Copyright (c) Microsoft Corporation.\r\n * All rights reserved. See LICENSE in the project root for license information.\r\n */import{safeFileExists,safeGetAllFilesPath,safeReadJson}from'@msdyn365-commerce/utilities-internal';import{resolve}from'path';import{EXCEPTION_NO_MOCKS_FOUND,LogLevel}from'@msdyn365-commerce/telemetry-internal';import keystonePaths from'../paths';/**\r\n * Searches a module contract for all listed action mocks\r\n * @param module module or array of modules to search for\r\n * @param mocks Array of mocks that have been found. This array will be modified\r\n */export var searchPage=function searchPage(module,mocks){if(Array.isArray(module)){_each2(module,function(value){return searchPage(value,mocks);});}else if(module.modules){_each2(module.modules,function(value){if(Array.isArray(value)){searchPage(value,mocks);}});}else if(module.actionMock){mocks.push(module.actionMock);}};/**\r\n * Captures all action mocks from a page context\r\n * @param pageResponse Current page context\r\n */export var getMockPathPageResponse=function getMockPathPageResponse(pageResponse){var mocks=[];pageResponse.slots.forEach(function(moduleContract){var actionMock=_get2(pageResponse,['modules',moduleContract.id,'actionMock']);if(actionMock){mocks.concat(actionMock.split(','));}});return mocks;};/**\r\n * Formats the correct path and mock based from query string\r\n *  Looks for requestMock=moduleName:mockName,moduleName:mockName,moduleName\r\n *  where mock name is either a file or a directory\r\n */export var getMockPathQuery=function getMockPathQuery(query){var actionMock=query.actionMock;if(!actionMock){return[];}return actionMock.split(',');};/**\r\n * Searches file system for mocks\r\n * mockTuple = 'moduleName:mockName'\r\n */export var findMockPaths=/*#__PURE__*/function(){var _ref=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee(mockTuple){var _mockTuple$split,_mockTuple$split2,moduleName,mockName,partnerModuleMockPath,moduleRoot,mockPattern,opts,mocks;return _regeneratorRuntime.wrap(function _callee$(_context){while(1){switch(_context.prev=_context.next){case 0:// tslint:disable-next-line:prefer-const -- tsc is confused about us having a const & a var on the same destruct\n_mockTuple$split=mockTuple.split(':'),_mockTuple$split2=_slicedToArray(_mockTuple$split,2),moduleName=_mockTuple$split2[0],mockName=_mockTuple$split2[1];if(!mockName){mockName=moduleName;}partnerModuleMockPath=resolve(keystonePaths.KEYSTONE_MODULE_MOCKS_DIR,\"\".concat(moduleName,\"/\"),\"\".concat(mockName,\".actionmock.json\"));_context.next=5;return safeFileExists(partnerModuleMockPath);case 5:if(!_context.sent){_context.next=7;break;}return _context.abrupt(\"return\",partnerModuleMockPath);case 7:moduleRoot=resolve(keystonePaths.KEYSTONE_NODE_MODULES_DIR,moduleName);mockPattern=\"@(dist|build|src)/**/\".concat(mockName,\".actionmock.json\");opts={cwd:moduleRoot};_context.next=12;return safeGetAllFilesPath(mockPattern,opts);case 12:mocks=_context.sent;if(!mocks.length){_context.next=15;break;}return _context.abrupt(\"return\",resolve(keystonePaths.KEYSTONE_NODE_MODULES_DIR,\"\".concat(moduleName),mocks[0]));case 15:return _context.abrupt(\"return\",false);case 16:case\"end\":return _context.stop();}}},_callee);}));return function findMockPaths(_x){return _ref.apply(this,arguments);};}();/**\r\n * Pulls mock data\r\n */export var populateClientCache=/*#__PURE__*/function(){var _ref2=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee2(context,pageResponse,clientCache,telemetry){var mocks,mockPaths,_iterator,_step,mockPath,path,actionMocks;return _regeneratorRuntime.wrap(function _callee2$(_context2){while(1){switch(_context2.prev=_context2.next){case 0:mocks=getMockPathQuery(_objectSpread(_objectSpread({},context.params),context.query));if(context.query&&context.query.mock){mocks=mocks.concat(getMockPathPageResponse(pageResponse));}if(!(!mocks||!mocks.length)){_context2.next=4;break;}return _context2.abrupt(\"return\");case 4:mockPaths=[];_iterator=_createForOfIteratorHelper(mocks);_context2.prev=6;_iterator.s();case 8:if((_step=_iterator.n()).done){_context2.next=16;break;}mockPath=_step.value;_context2.next=12;return findMockPaths(mockPath);case 12:path=_context2.sent;if(path){mockPaths.push(path);}case 14:_context2.next=8;break;case 16:_context2.next=21;break;case 18:_context2.prev=18;_context2.t0=_context2[\"catch\"](6);_iterator.e(_context2.t0);case 21:_context2.prev=21;_iterator.f();return _context2.finish(21);case 24:if(mockPaths.length){_context2.next=27;break;}// no file found\ntelemetry.log(LogLevel.Error,EXCEPTION_NO_MOCKS_FOUND);return _context2.abrupt(\"return\");case 27:_context2.next=29;return Promise.all(mockPaths.map(safeReadJson));case 29:actionMocks=_context2.sent;_flatten2(actionMocks).forEach(function(mock){if(mock){clientCache.put({typeName:'__MOCK',key:\"\".concat(mock.id||mock.CacheObjectType,\":\").concat(mock.CacheKey||'*')},{item:mock.Mock});}});return _context2.abrupt(\"return\");case 32:case\"end\":return _context2.stop();}}},_callee2,null,[[6,18,21,24]]);}));return function populateClientCache(_x2,_x3,_x4,_x5){return _ref2.apply(this,arguments);};}();","map":{"version":3,"sources":["../../../src/mock/action-mock-helper.ts"],"names":[],"mappings":"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","sourcesContent":["/*!\n * Copyright (c) Microsoft Corporation.\n * All rights reserved. See LICENSE in the project root for license information.\n */\n\nimport { ICache } from '@msdyn365-commerce/cache-internal';\nimport { IAny, IGeneric, IModuleContract, IPageResponse, IRequestContext } from '@msdyn365-commerce/core-internal';\nimport { safeFileExists, safeGetAllFilesPath, safeReadJson } from '@msdyn365-commerce/utilities-internal';\nimport { IOptions } from 'glob';\nimport { each as _each, flatten as _flatten, get as _get } from 'lodash';\nimport { resolve } from 'path';\n\nimport { AsyncResult, createObservableDataAction } from '@msdyn365-commerce/core';\nimport { EXCEPTION_NO_MOCKS_FOUND, IInternalTelemetry, LogLevel, MESSAGE_NO_MOCK_FOUND } from '@msdyn365-commerce/telemetry-internal';\nimport keystonePaths from '../paths';\n\ninterface IActionMock {\n    id?: string;\n    CacheObjectType: string;\n    CacheKey?: string;\n    Mock: IGeneric<IAny>;\n}\n\ninterface IModuleContractWithMock extends IModuleContract {\n    actionMock?: string;\n}\n\n/**\n * Searches a module contract for all listed action mocks\n * @param module module or array of modules to search for\n * @param mocks Array of mocks that have been found. This array will be modified\n */\nexport const searchPage = (module: IModuleContractWithMock | IModuleContractWithMock[], mocks: string[]) => {\n    if (Array.isArray(module)) {\n        _each(module, value => searchPage(value, mocks));\n    } else if (module.modules) {\n        _each(module.modules, value => {\n            if (Array.isArray(value)) {\n                searchPage(value, mocks);\n            }\n        });\n    } else if (module.actionMock) {\n        mocks.push(module.actionMock);\n    }\n};\n\n/**\n * Captures all action mocks from a page context\n * @param pageResponse Current page context\n */\nexport const getMockPathPageResponse = (pageResponse: IPageResponse): string[] => {\n    const mocks: string[] = [];\n    pageResponse.slots.forEach((moduleContract: IModuleContract) => {\n        const actionMock = _get(pageResponse, ['modules', moduleContract.id, 'actionMock']);\n        if (actionMock) {\n            mocks.concat(actionMock.split(','));\n        }\n    });\n\n    return mocks;\n};\n\n/**\n * Formats the correct path and mock based from query string\n *  Looks for requestMock=moduleName:mockName,moduleName:mockName,moduleName\n *  where mock name is either a file or a directory\n */\nexport const getMockPathQuery = (query: IGeneric<IAny>): string[] => {\n    const { actionMock } = query;\n    if (!actionMock) {\n        return [];\n    }\n    return actionMock.split(',');\n};\n\n/**\n * Searches file system for mocks\n * mockTuple = 'moduleName:mockName'\n */\nexport const findMockPaths = async (mockTuple: string): Promise<string | false> => {\n    // tslint:disable-next-line:prefer-const -- tsc is confused about us having a const & a var on the same destruct\n    let [moduleName, mockName] = mockTuple.split(':');\n\n    if (!mockName) {\n        mockName = moduleName;\n    }\n\n    const partnerModuleMockPath = resolve(keystonePaths.KEYSTONE_MODULE_MOCKS_DIR, `${moduleName}/`, `${mockName}.actionmock.json`);\n    if (await safeFileExists(partnerModuleMockPath)) {\n        return partnerModuleMockPath;\n    }\n\n    const moduleRoot = resolve(keystonePaths.KEYSTONE_NODE_MODULES_DIR, moduleName);\n    const mockPattern = `@(dist|build|src)/**/${mockName}.actionmock.json`;\n    const opts: Partial<IOptions> = {\n        cwd: moduleRoot\n    };\n    const mocks = await safeGetAllFilesPath(mockPattern, opts);\n    if (mocks.length) {\n        // file has been found\n        return resolve(keystonePaths.KEYSTONE_NODE_MODULES_DIR, `${moduleName}`, mocks[0]);\n    }\n    return false;\n};\n\n/**\n * Pulls mock data\n */\nexport const populateClientCache = async (\n    context: IRequestContext,\n    pageResponse: IPageResponse,\n    clientCache: ICache,\n    telemetry: IInternalTelemetry\n): Promise<void> => {\n    let mocks: string[] = getMockPathQuery({ ...context.params, ...context.query });\n    if (context.query && context.query.mock) {\n        mocks = mocks.concat(getMockPathPageResponse(pageResponse));\n    }\n\n    if (!mocks || !mocks.length) {\n        return;\n    }\n\n    const mockPaths: string[] = [];\n\n    for (const mockPath of mocks) {\n        const path = await findMockPaths(mockPath);\n        if (path) {\n            mockPaths.push(path);\n        }\n    }\n\n    if (!mockPaths.length) {\n        // no file found\n        telemetry.log(LogLevel.Error, EXCEPTION_NO_MOCKS_FOUND);\n        return;\n    }\n\n    // @ts-ignore\n    const actionMocks: (IActionMock | null)[] = await Promise.all(mockPaths.map(safeReadJson));\n\n    _flatten(actionMocks).forEach((mock: IActionMock | null) => {\n        if (mock) {\n            clientCache.put({ typeName: '__MOCK', key: `${mock.id || mock.CacheObjectType}:${mock.CacheKey || '*'}` }, { item: mock.Mock });\n        }\n    });\n    return;\n};\n"],"sourceRoot":""},"metadata":{},"sourceType":"module"}