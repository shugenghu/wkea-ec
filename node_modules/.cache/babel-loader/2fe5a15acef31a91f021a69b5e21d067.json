{"ast":null,"code":"import msdyn365Commerce from'@msdyn365-commerce/core';export function parameterize(){var name=arguments.length>0&&arguments[0]!==undefined?arguments[0]:'';var sep=arguments.length>1&&arguments[1]!==undefined?arguments[1]:'-';var parameterizeFeatureFlags=arguments.length>2&&arguments[2]!==undefined?arguments[2]:{};var neutralizedName=arguments.length>3?arguments[3]:undefined;// if neutralizedName flag enabled, we use neutralizedName to construct string\nvar candidateName=msdyn365Commerce.platformSettings&&msdyn365Commerce.platformSettings.enableUrlLocalization||parameterizeFeatureFlags.enableUrlLocalization?name:neutralizedName||name;/*\r\n    1\t‘ ‘ (space)\t-> (single dash)\r\n    3\tAny character disallowed in URLs -> URL-encode\r\n    5\t‘ & ‘ (space ampersand space) -> (single dash)\r\n    6\t‘ - ‘ (space dash space) -> (single dash)\r\n    7\t‘  ‘ (2+ spaces) -> (single dash)\r\n    10\t[A-Z] (capital letters) -> [a-z] (lower-case)\r\n    12\tAny non-ASCII character outside of the set of disallowed  characters -> URL-encode\r\n    */if(parameterizeFeatureFlags.enableUrlEncoding||msdyn365Commerce.platformSettings&&msdyn365Commerce.platformSettings.enableUrlEncoding){// replace url reserved characters with dash, and remove front and end dash;\n// &*!() reserved characters that can not be encoded by encodeURIComponent()\nreturn encodeURIComponent(candidateName.toLowerCase().replace(/[\\s&*!()']+/g,'-').trim().replace(/\\-+/g,'-').replace(/^\\-+|\\-+$/g,''));}return name.toLowerCase().replace(/[^a-z0-9\\-_]+/g,' ').trim().replace(/\\s+/g,sep);}","map":{"version":3,"sources":["../../../../src/utilities/Url-builder/parameterize.ts"],"names":[],"mappings":"AAAA,MAAO,CAAA,gBAAP,KAA4D,yBAA5D,CAEA,MAAM,SAAU,CAAA,YAAV,EAAqI,IAA9G,CAAA,IAA8G,2DAA/F,EAA+F,IAA3F,CAAA,GAA2F,2DAArF,GAAqF,IAAhF,CAAA,wBAAgF,2DAA3B,EAA2B,IAAvB,CAAA,eAAuB,2CACvI;AACA,GAAM,CAAA,aAAa,CAAI,gBAAgB,CAAC,gBAAjB,EAAqC,gBAAgB,CAAC,gBAAjB,CAAkC,qBAAvE,EAAgG,wBAAwB,CAAC,qBAA1H,CAAkJ,IAAlJ,CAAwJ,eAAe,EAAI,IAAjM,CACA;;;;;;;;AAQE,MACF,GAAI,wBAAwB,CAAC,iBAAzB,EAA8C,gBAAgB,CAAC,gBAAjB,EAAqC,gBAAgB,CAAC,gBAAjB,CAAkC,iBAAzH,CAA4I,CACxI;AACA;AACA,MAAO,CAAA,kBAAkB,CAAC,aAAa,CAAC,WAAd,GAA4B,OAA5B,CAAoC,cAApC,CAAoD,GAApD,EAAyD,IAAzD,GAAgE,OAAhE,CAAwE,MAAxE,CAAgF,GAAhF,EAAqF,OAArF,CAA6F,YAA7F,CAA2G,EAA3G,CAAD,CAAzB,CACH,CACD,MAAO,CAAA,IAAI,CACN,WADE,GAEF,OAFE,CAEM,gBAFN,CAEwB,GAFxB,EAGF,IAHE,GAIF,OAJE,CAIM,MAJN,CAIc,GAJd,CAAP,CAKH","sourcesContent":["import msdyn365Commerce, { IParameterizeFeatureFlags } from '@msdyn365-commerce/core';\n\nexport function parameterize(name: string = '', sep = '-', parameterizeFeatureFlags:IParameterizeFeatureFlags = {}, neutralizedName?:string) {\n    // if neutralizedName flag enabled, we use neutralizedName to construct string\n    const candidateName = (msdyn365Commerce.platformSettings && msdyn365Commerce.platformSettings.enableUrlLocalization || parameterizeFeatureFlags.enableUrlLocalization)? name: neutralizedName || name;\n    /*\n    1\t‘ ‘ (space)\t-> (single dash)\n    3\tAny character disallowed in URLs -> URL-encode\n    5\t‘ & ‘ (space ampersand space) -> (single dash)\n    6\t‘ - ‘ (space dash space) -> (single dash)\n    7\t‘  ‘ (2+ spaces) -> (single dash)\n    10\t[A-Z] (capital letters) -> [a-z] (lower-case)\n    12\tAny non-ASCII character outside of the set of disallowed  characters -> URL-encode\n    */\n    if (parameterizeFeatureFlags.enableUrlEncoding || msdyn365Commerce.platformSettings && msdyn365Commerce.platformSettings.enableUrlEncoding) {\n        // replace url reserved characters with dash, and remove front and end dash;\n        // &*!() reserved characters that can not be encoded by encodeURIComponent()\n        return encodeURIComponent(candidateName.toLowerCase().replace(/[\\s&*!()']+/g, '-').trim().replace(/\\-+/g, '-').replace(/^\\-+|\\-+$/g, ''));\n    }\n    return name\n        .toLowerCase()\n        .replace(/[^a-z0-9\\-_]+/g, ' ')\n        .trim()\n        .replace(/\\s+/g, sep);\n}\n"],"sourceRoot":""},"metadata":{},"sourceType":"module"}