{"ast":null,"code":"import _regeneratorRuntime from\"@babel/runtime/regenerator\";import _asyncToGenerator from\"@babel/runtime/helpers/esm/asyncToGenerator\";import _classCallCheck from\"@babel/runtime/helpers/esm/classCallCheck\";import{createObservableDataAction}from'@msdyn365-commerce/core';import{buildCacheKey}from'./utilities/utils';import getCustomer,{GetCustomerInput}from'./get-customer';/**\r\n *  Input class for the getAddress data action\r\n */export var AddressInput=function AddressInput(apiSettings,userAccountNumber){var _this=this;_classCallCheck(this,AddressInput);this.getCacheKey=function(){return buildCacheKey(\"GetAddress-\".concat(_this.userAccountNumber),_this.apiSettings);};this.getCacheObjectType=function(){return'GetAddress';};this.dataCacheType=function(){return'request';};this.userAccountNumber=userAccountNumber;this.apiSettings=apiSettings;};/**\r\n * createInput method for the getAddress method\r\n * @param inputData The input data passed to the createInput method\r\n */export var createGetAddressInput=function createGetAddressInput(inputData){var requestContext=inputData.requestContext;if(!requestContext.user.isAuthenticated){throw new Error('Unable to create address input.  User is not authenticated.');}return new AddressInput(inputData.requestContext.apiSettings);};/**\r\n * The action method for the getAddress data action\r\n * @param input The action input\r\n * @param ctx The action context\r\n */export function getAddressAction(_x,_x2){return _getAddressAction.apply(this,arguments);}/**\r\n * The getAddress data action\r\n * Gets a customers information via the read RetailServer API\r\n * Returns address information associated with the retrieved customer\r\n */function _getAddressAction(){_getAddressAction=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee(input,ctx){var customerInput,customer;return _regeneratorRuntime.wrap(function _callee$(_context){while(1){switch(_context.prev=_context.next){case 0:customerInput=new GetCustomerInput(ctx.requestContext.apiSettings,input.userAccountNumber);_context.next=3;return getCustomer(customerInput,ctx);case 3:customer=_context.sent;if(customer){_context.next=6;break;}throw new Error('Not able to get customer');case 6:return _context.abrupt(\"return\",customer.Addresses||[]);case 7:case\"end\":return _context.stop();}}},_callee);}));return _getAddressAction.apply(this,arguments);}export default createObservableDataAction({id:'@msdyn365-commerce-modules/retail-actions/get-address',action:getAddressAction,input:createGetAddressInput});","map":{"version":3,"sources":["../../src/get-address.ts"],"names":[],"mappings":"8MACA,OAAS,0BAAT,KAAiE,yBAAjE,CAGA,OAAS,aAAT,KAA8B,mBAA9B,CACA,MAAO,CAAA,WAAP,EAAsB,gBAAtB,KAA8C,gBAA9C,CAEA;;AAEG,GACH,UAAa,CAAA,YAAb,CAII,sBAAY,WAAZ,CAA+C,iBAA/C,CAAyE,mDAKlE,KAAA,WAAA,CAAc,iBAAM,CAAA,aAAa,sBAAe,KAAI,CAAC,iBAApB,EAAyC,KAAI,CAAC,WAA9C,CAAnB,EAAd,CACA,KAAA,kBAAA,CAAqB,iBAAM,YAAN,EAArB,CACA,KAAA,aAAA,CAAgB,iBAAiB,SAAjB,EAAhB,CANH,KAAK,iBAAL,CAAyB,iBAAzB,CACA,KAAK,WAAL,CAAmB,WAAnB,CACH,CAPL,CAcA;;;AAGG,GACH,MAAO,IAAM,CAAA,qBAAqB,CAAG,QAAxB,CAAA,qBAAwB,CAAC,SAAD,CAAkD,IAC3E,CAAA,cAD2E,CACxD,SADwD,CAC3E,cAD2E,CAEnF,GAAI,CAAC,cAAc,CAAC,IAAf,CAAoB,eAAzB,CAA0C,CACtC,KAAM,IAAI,CAAA,KAAJ,CAAU,6DAAV,CAAN,CACH,CAED,MAAO,IAAI,CAAA,YAAJ,CAAiB,SAAS,CAAC,cAAV,CAAyB,WAA1C,CAAP,CACH,CAPM,CASP;;;;AAIG,GACH,eAAsB,CAAA,gBAAtB,yDAWA;;;;AAIG,G,uGAfI,iBAAgC,KAAhC,CAAqD,GAArD,6IACG,aADH,CACmB,GAAI,CAAA,gBAAJ,CAAqB,GAAG,CAAC,cAAJ,CAAmB,WAAxC,CAAqD,KAAK,CAAC,iBAA3D,CADnB,uBAEoB,CAAA,WAAW,CAAC,aAAD,CAAgB,GAAhB,CAF/B,QAEG,QAFH,kBAIE,QAJF,8BAKO,IAAI,CAAA,KAAJ,CAAU,0BAAV,CALP,wCAQI,QAAQ,CAAC,SAAT,EAAsB,EAR1B,wD,mDAgBP,cAAe,CAAA,0BAA0B,CAAY,CACjD,EAAE,CAAE,uDAD6C,CAEjD,MAAM,CAAsB,gBAFqB,CAGjD,KAAK,CAAgD,qBAHJ,CAAZ,CAAzC","sourcesContent":["import { CacheType, IAction, IActionContext, IActionInput, ICommerceApiSettings } from '@msdyn365-commerce/core';\nimport { createObservableDataAction, ICreateActionContext } from '@msdyn365-commerce/core';\nimport { Address } from '@msdyn365-commerce/retail-proxy';\n\nimport { buildCacheKey } from './utilities/utils';\nimport getCustomer, { GetCustomerInput } from './get-customer';\n\n/**\n *  Input class for the getAddress data action\n */\nexport class AddressInput implements IActionInput {\n    public userAccountNumber?: string;\n    private apiSettings: ICommerceApiSettings;\n\n    constructor(apiSettings: ICommerceApiSettings, userAccountNumber?: string) {\n        this.userAccountNumber = userAccountNumber;\n        this.apiSettings = apiSettings;\n    }\n\n    public getCacheKey = () => buildCacheKey(`GetAddress-${this.userAccountNumber}`, this.apiSettings);\n    public getCacheObjectType = () => 'GetAddress';\n    public dataCacheType = (): CacheType => 'request';\n}\n\n/**\n * createInput method for the getAddress method\n * @param inputData The input data passed to the createInput method\n */\nexport const createGetAddressInput = (inputData: ICreateActionContext): IActionInput => {\n    const { requestContext } = inputData;\n    if (!requestContext.user.isAuthenticated) {\n        throw new Error('Unable to create address input.  User is not authenticated.');\n    }\n\n    return new AddressInput(inputData.requestContext.apiSettings);\n};\n\n/**\n * The action method for the getAddress data action\n * @param input The action input\n * @param ctx The action context\n */\nexport async function getAddressAction(input: AddressInput, ctx: IActionContext): Promise<Address[]> {\n    const customerInput = new GetCustomerInput(ctx.requestContext.apiSettings, input.userAccountNumber);\n    const customer = await getCustomer(customerInput, ctx);\n\n    if (!customer) {\n        throw new Error('Not able to get customer');\n    }\n\n    return customer.Addresses || [];\n}\n\n/**\n * The getAddress data action\n * Gets a customers information via the read RetailServer API\n * Returns address information associated with the retrieved customer\n */\nexport default createObservableDataAction<Address[]>({\n    id: '@msdyn365-commerce-modules/retail-actions/get-address',\n    action: <IAction<Address[]>>getAddressAction,\n    input: <(args: ICreateActionContext) => IActionInput>createGetAddressInput\n});"],"sourceRoot":""},"metadata":{},"sourceType":"module"}