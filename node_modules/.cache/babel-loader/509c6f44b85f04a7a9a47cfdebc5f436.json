{"ast":null,"code":"/*!\r\n * Copyright (c) Microsoft Corporation.\r\n * All rights reserved. See LICENSE in the project root for license information.\r\n */import{EVENT_STATICRESOURCE_FAILURE,EVENT_STATICRESOURCETYPE_CSS,EVENT_STATICRESOURCETYPE_IMAGE,EVENT_STATICRESOURCETYPE_JS,EVENT_STATICRESOURCETYPE_OTHER,EXCEPTION_GENERIC_EXPRESS,LogLevel}from'@msdyn365-commerce/telemetry-internal';import{HttpRedirectException}from'../error';import{parseRequest}from'../parse-request';export var preProcessRequest=function preProcessRequest(req,res,computerName,telemetry){return parseRequest(req);};export var handleServerException=function handleServerException(res,message,error,telemetry){var status=arguments.length>4&&arguments[4]!==undefined?arguments[4]:500;if(telemetry){telemetry.log(LogLevel.Error,'',{exception:error});}res.status(status);if(process.env.NODE_ENV==='development'){var formattedStack=error.stack&&error.stack.split(\"\\n\");return res.json({name:error.name,message:EXCEPTION_GENERIC_EXPRESS,stack:formattedStack,originalStack:error.stack});}else{return res.json({name:error.name,message:message});}};/**\r\n * Express middleware function for error handling.\r\n * @param error javascript Error object that was thrown by the server\r\n * @param req Express request object\r\n * @param res Express response object\r\n * @param next Express Next function\r\n */export var serverExceptionParser=function serverExceptionParser(error,req,res,next){if(!error){return next();}if(error.name===HttpRedirectException.Name){return res.redirect(error.location);}var httpException=error;handleServerException(res,EXCEPTION_GENERIC_EXPRESS,error,res.locals.telemetry,httpException.statusCode||httpException.statusCode!==200?httpException.statusCode:undefined);};export var prepareErrorResponse=function prepareErrorResponse(request,response,error,telemetry){var staticsType=EVENT_STATICRESOURCETYPE_OTHER;try{var index=(request.originalUrl||'').lastIndexOf('.');if(index!==-1){var suffix=request.originalUrl.substr(index+1).toLocaleLowerCase();switch(suffix){case'js':staticsType=EVENT_STATICRESOURCETYPE_JS;break;case'css':staticsType=EVENT_STATICRESOURCETYPE_CSS;break;case'png':case'jpg':case'jpeg':case'gif':staticsType=EVENT_STATICRESOURCETYPE_IMAGE;break;default:staticsType=EVENT_STATICRESOURCETYPE_OTHER;}}telemetry.trackEvent(EVENT_STATICRESOURCE_FAILURE,{type:staticsType});telemetry.log(LogLevel.Error,'',{exception:error});// try change content type\nif(!response.headersSent){response.status(404).contentType('text/plain');}response.write(\"The requested URL \".concat(request.originalUrl,\" was not found on this server\"));response.end();}catch(e){telemetry.log(LogLevel.Error,'',{exception:e});}};","map":{"version":3,"sources":["../../../../src/_server/request-routers/request-router-helper.ts"],"names":[],"mappings":"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","sourcesContent":["/*!\n * Copyright (c) Microsoft Corporation.\n * All rights reserved. See LICENSE in the project root for license information.\n */\n\nimport {\n    EVENT_STATICRESOURCE_FAILURE,\n    EVENT_STATICRESOURCETYPE_CSS,\n    EVENT_STATICRESOURCETYPE_IMAGE,\n    EVENT_STATICRESOURCETYPE_JS,\n    EVENT_STATICRESOURCETYPE_OTHER,\n    EXCEPTION_GENERIC_EXPRESS,\n    IEventStaticResourceTypeProperties,\n    IInternalTelemetry,\n    InternalTelemetry,\n    LogLevel\n} from '@msdyn365-commerce/telemetry-internal';\nimport { NextFunction, Request, Response } from 'express';\nimport { HttpException, HttpRedirectException } from '../error';\nimport { parseRequest } from '../parse-request';\n\nexport const preProcessRequest = (req: Request, res: Response, computerName: string | undefined, telemetry: IInternalTelemetry) => {\n    return parseRequest(req);\n};\n\nexport const handleServerException = (res: Response, message: string, error: Error, telemetry: InternalTelemetry, status: number = 500) => {\n    if (telemetry) {\n        telemetry.log(LogLevel.Error, '', { exception: error });\n    }\n    res.status(status);\n    if (process.env.NODE_ENV === 'development') {\n        const formattedStack = error.stack && error.stack.split(`\\n`);\n        return res.json({\n            name: error.name,\n            message: EXCEPTION_GENERIC_EXPRESS,\n            stack: formattedStack,\n            originalStack: error.stack\n        });\n    } else {\n        return res.json({ name: error.name, message });\n    }\n};\n\n/**\n * Express middleware function for error handling.\n * @param error javascript Error object that was thrown by the server\n * @param req Express request object\n * @param res Express response object\n * @param next Express Next function\n */\nexport const serverExceptionParser = (error: Error, req: Request, res: Response, next: NextFunction) => {\n    if (!error) {\n        return next();\n    }\n    if (error.name === HttpRedirectException.Name) {\n        return res.redirect((<HttpRedirectException>error).location);\n    }\n    const httpException = <HttpException>error;\n    handleServerException(\n        res,\n        EXCEPTION_GENERIC_EXPRESS,\n        error,\n        res.locals.telemetry,\n        httpException.statusCode || httpException.statusCode !== 200 ? httpException.statusCode : undefined\n    );\n};\n\nexport const prepareErrorResponse = (request: Request, response: Response, error: Error, telemetry: IInternalTelemetry): void => {\n    let staticsType: string = EVENT_STATICRESOURCETYPE_OTHER;\n    try {\n        const index = (request.originalUrl || '').lastIndexOf('.');\n        if (index !== -1) {\n            const suffix = request.originalUrl.substr(index + 1).toLocaleLowerCase();\n            switch (suffix) {\n                case 'js':\n                    staticsType = EVENT_STATICRESOURCETYPE_JS;\n                    break;\n                case 'css':\n                    staticsType = EVENT_STATICRESOURCETYPE_CSS;\n                    break;\n                case 'png':\n                case 'jpg':\n                case 'jpeg':\n                case 'gif':\n                    staticsType = EVENT_STATICRESOURCETYPE_IMAGE;\n                    break;\n                default:\n                    staticsType = EVENT_STATICRESOURCETYPE_OTHER;\n            }\n        }\n        telemetry.trackEvent<IEventStaticResourceTypeProperties, {}>(EVENT_STATICRESOURCE_FAILURE, {\n            type: staticsType\n        });\n        telemetry.log(LogLevel.Error, '', { exception: error });\n        // try change content type\n        if (!response.headersSent) {\n            response.status(404).contentType('text/plain');\n        }\n        response.write(`The requested URL ${request.originalUrl} was not found on this server`);\n        response.end();\n    } catch (e) {\n        telemetry.log(LogLevel.Error, '', { exception: e });\n    }\n};\n"],"sourceRoot":""},"metadata":{},"sourceType":"module"}