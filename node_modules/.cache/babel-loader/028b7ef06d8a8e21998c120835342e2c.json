{"ast":null,"code":"import\"core-js/modules/es.promise.js\";import{removeCartLinesAsync}from'@msdyn365-commerce/retail-proxy/dist/DataActions/CartsDataActions.g';export default async function removeCartLinesInternal(cart,cartLineIds,actionContext){if(!cart){return{cart:undefined,status:'FAILED'};}return removeCartLinesAsync({callerContext:actionContext},cart.Id,cartLineIds).then(newCart=>{// This is because of a TSProxy typing error\nconst returnedCart=Array.isArray(newCart)?newCart[0]:newCart;return{cart:returnedCart,status:'SUCCESS'};}).catch(error=>{actionContext.telemetry.warning(error);actionContext.telemetry.debug('Unable to Remove Cart Line');return{cart:undefined,status:'FAILED'};});}","map":{"version":3,"sources":["cart-state/remove-cart-lines.ts"],"names":[],"mappings":"sCACA,OAAS,oBAAT,KAAqC,qEAArC,CAIA,cAAe,eAAe,CAAA,uBAAf,CAAuC,IAAvC,CAAyE,WAAzE,CAAgG,aAAhG,CAA6H,CACxI,GAAI,CAAC,IAAL,CAAW,CACP,MAAO,CAAE,IAAI,CAAE,SAAR,CAAmB,MAAM,CAAE,QAA3B,CAAP,CACH,CAED,MAAO,CAAA,oBAAoB,CAAC,CAAE,aAAa,CAAE,aAAjB,CAAD,CAAkC,IAAI,CAAC,EAAvC,CAA2C,WAA3C,CAApB,CACF,IADE,CACG,OAAO,EAAG,CACZ;AACA,KAAM,CAAA,YAAY,CAAG,KAAK,CAAC,OAAN,CAAc,OAAd,EAAyB,OAAO,CAAC,CAAD,CAAhC,CAAsC,OAA3D,CAEA,MAAmC,CAAE,IAAI,CAAE,YAAR,CAAsB,MAAM,CAAE,SAA9B,CAAnC,CACH,CANE,EAOF,KAPE,CAOI,KAAK,EAAG,CACX,aAAa,CAAC,SAAd,CAAwB,OAAxB,CAAgC,KAAhC,EACA,aAAa,CAAC,SAAd,CAAwB,KAAxB,CAA8B,4BAA9B,EAEA,MAAmC,CAAE,IAAI,CAAE,SAAR,CAAmB,MAAM,CAAE,QAA3B,CAAnC,CACH,CAZE,CAAP,CAaH","sourcesContent":["import { IActionContext } from '@msdyn365-commerce/core';\nimport { removeCartLinesAsync } from '@msdyn365-commerce/retail-proxy/dist/DataActions/CartsDataActions.g';\nimport { Cart } from '@msdyn365-commerce/retail-proxy/dist/Entities/CommerceTypes.g';\nimport { ICartActionResultWithCart } from './cart-action-result';\n\nexport default async function removeCartLinesInternal(cart: Readonly<Cart | undefined>, cartLineIds: string[], actionContext: IActionContext): Promise<ICartActionResultWithCart> {\n    if (!cart) {\n        return { cart: undefined, status: 'FAILED' };\n    }\n\n    return removeCartLinesAsync({ callerContext: actionContext}, cart.Id, cartLineIds)\n        .then(newCart => {\n            // This is because of a TSProxy typing error\n            const returnedCart = Array.isArray(newCart) ? newCart[0] : newCart;\n\n            return <ICartActionResultWithCart> { cart: returnedCart, status: 'SUCCESS' };\n        })\n        .catch(error => {\n            actionContext.telemetry.warning(error);\n            actionContext.telemetry.debug('Unable to Remove Cart Line');\n\n            return <ICartActionResultWithCart> { cart: undefined, status: 'FAILED' };\n        });\n}"],"sourceRoot":"./src/"},"metadata":{},"sourceType":"module"}