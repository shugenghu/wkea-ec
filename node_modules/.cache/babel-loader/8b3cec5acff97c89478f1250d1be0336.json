{"ast":null,"code":"import{SDK_FRAGMENT_NAME}from'@msdyn365-commerce/core-internal';import*as path from'path';import*as React from'react';import{isAbsoluteUrl,isRelativeUrl,logDebug,logError}from'../../utils/script-utils';class DefaultExternalScript extends React.PureComponent{constructor(props){super(props);}render(){const{config}=this.props;logDebug(\"Adding script tags for '\".concat(this.props.id,\"/\").concat(this.props.typeName,\"'\"),this.props.telemetry);let source=config.scriptSource;let relativeBaseUrl='';if(this.props.context){relativeBaseUrl+=this.props.context.request.url.staticCdnUrl;relativeBaseUrl+=process.env.SUBMISSIONID||'';}if(isRelativeUrl(source)){source=\"\".concat(relativeBaseUrl,\"/\").concat(path.join(source));}else if(source===''||!isAbsoluteUrl(source)){logError('Invalid external script - not a url. The external source is not an external or relative url, please use default-inline-script if you wish to load inline scripts',this.props.telemetry);return null;}const scriptHtml=\"<script src=\\\"\".concat(source,\"\\\" async=\").concat(!!config.async,\" defer=\").concat(!!config.defer,\" ></script>\");return/*#__PURE__*/React.createElement(SDK_FRAGMENT_NAME,{key:this.props.id,dangerouslySetInnerHTML:{__html:scriptHtml}});}}export default DefaultExternalScript;","map":{"version":3,"sources":["modules/default-external-script/default-external-script.tsx"],"names":[],"mappings":"AAKA,OAAS,iBAAT,KAAkC,kCAAlC,CACA,MAAO,GAAK,CAAA,IAAZ,KAAsB,MAAtB,CACA,MAAO,GAAK,CAAA,KAAZ,KAAuB,OAAvB,CACA,OAAS,aAAT,CAAwB,aAAxB,CAAuC,QAAvC,CAAiD,QAAjD,KAAiE,0BAAjE,CAQA,KAAM,CAAA,qBAAN,QAAoC,CAAA,KAAK,CAAC,aAA8C,CACpF,WAAA,CAAY,KAAZ,CAAkD,CAC9C,MAAM,KAAN,EACH,CAEM,MAAM,EAAA,CACT,KAAM,CAAE,MAAF,EAAa,KAAK,KAAxB,CACA,QAAQ,mCAA4B,KAAK,KAAL,CAAW,EAAvC,aAA6C,KAAK,KAAL,CAAW,QAAxD,MAAqE,KAAK,KAAL,CAAW,SAAhF,CAAR,CACA,GAAI,CAAA,MAAM,CAAG,MAAM,CAAC,YAApB,CAEA,GAAI,CAAA,eAAe,CAAW,EAA9B,CAEA,GAAI,KAAK,KAAL,CAAW,OAAf,CAAwB,CACpB,eAAe,EAAI,KAAK,KAAL,CAAW,OAAX,CAAmB,OAAnB,CAA2B,GAA3B,CAA+B,YAAlD,CACA,eAAe,EAAI,OAAO,CAAC,GAAR,CAAY,YAAZ,EAA4B,EAA/C,CACH,CAED,GAAI,aAAa,CAAC,MAAD,CAAjB,CAA2B,CAEvB,MAAM,WAAM,eAAN,aAAyB,IAAI,CAAC,IAAL,CAAU,MAAV,CAAzB,CAAN,CACH,CAHD,IAGO,IAAI,MAAM,GAAK,EAAX,EAAiB,CAAC,aAAa,CAAC,MAAD,CAAnC,CAA6C,CAChD,QAAQ,CACJ,kKADI,CAEJ,KAAK,KAAL,CAAW,SAFP,CAAR,CAIA,MAAO,KAAP,CACH,CACD,KAAM,CAAA,UAAU,yBAAmB,MAAnB,qBAAoC,CAAC,CAAC,MAAM,CAAC,KAA7C,mBAA4D,CAAC,CAAC,MAAM,CAAC,KAArE,eAAhB,CAGA,mBAAO,KAAK,CAAC,aAAN,CAAoB,iBAApB,CAAuC,CAAE,GAAG,CAAE,KAAK,KAAL,CAAW,EAAlB,CAAsB,uBAAuB,CAAE,CAAE,MAAM,CAAE,UAAV,CAA/C,CAAvC,CAAP,CACH,CA/BmF,CAkCxF,cAAe,CAAA,qBAAf","sourcesContent":["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { SDK_FRAGMENT_NAME } from '@msdyn365-commerce/core-internal';\nimport * as path from 'path';\nimport * as React from 'react';\nimport { isAbsoluteUrl, isRelativeUrl, logDebug, logError } from '../../utils/script-utils';\nimport { IDefaultExternalScriptProps } from './default-external-script.props.autogenerated';\n\n/**\n *\n * DefaultExternalScript component\n * @extends {React.PureComponent<IDefaultExternalScriptProps<{}>>}\n */\nclass DefaultExternalScript extends React.PureComponent<IDefaultExternalScriptProps<{}>> {\n    constructor(props: IDefaultExternalScriptProps<{}>) {\n        super(props);\n    }\n\n    public render(): JSX.Element | null {\n        const { config } = this.props;\n        logDebug(`Adding script tags for '${this.props.id}/${this.props.typeName}'`, this.props.telemetry);\n        let source = config.scriptSource;\n\n        let relativeBaseUrl: string = '';\n        // Construct the relative base url, i.e. the base url from which statics will be served\n        if (this.props.context) {\n            relativeBaseUrl += this.props.context.request.url.staticCdnUrl;\n            relativeBaseUrl += process.env.SUBMISSIONID || '';\n        }\n\n        if (isRelativeUrl(source)) {\n            // If the source is a relative URL prepend the relative base url to the resolved source url for the actual source\n            source = `${relativeBaseUrl}/${path.join(source)}`;\n        } else if (source === '' || !isAbsoluteUrl(source)) {\n            logError(\n                'Invalid external script - not a url. The external source is not an external or relative url, please use default-inline-script if you wish to load inline scripts',\n                this.props.telemetry\n            );\n            return null;\n        }\n        const scriptHtml = `<script src=\"${source}\" async=${!!config.async} defer=${!!config.defer} ></script>`;\n\n        // tslint:disable:react-no-dangerous-html -- intentionally set inner html\n        return React.createElement(SDK_FRAGMENT_NAME, { key: this.props.id, dangerouslySetInnerHTML: { __html: scriptHtml } });\n    }\n}\n\nexport default DefaultExternalScript;\n"],"sourceRoot":"./src/"},"metadata":{},"sourceType":"module"}