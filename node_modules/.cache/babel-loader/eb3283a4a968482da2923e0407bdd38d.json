{"ast":null,"code":"import\"core-js/modules/es.promise.js\";import _defineProperty from\"@babel/runtime/helpers/esm/defineProperty\";function ownKeys(object,enumerableOnly){var keys=Object.keys(object);if(Object.getOwnPropertySymbols){var symbols=Object.getOwnPropertySymbols(object);if(enumerableOnly)symbols=symbols.filter(function(sym){return Object.getOwnPropertyDescriptor(object,sym).enumerable;});keys.push.apply(keys,symbols);}return keys;}function _objectSpread(target){for(var i=1;i<arguments.length;i++){var source=arguments[i]!=null?arguments[i]:{};if(i%2){ownKeys(Object(source),true).forEach(function(key){_defineProperty(target,key,source[key]);});}else if(Object.getOwnPropertyDescriptors){Object.defineProperties(target,Object.getOwnPropertyDescriptors(source));}else{ownKeys(Object(source)).forEach(function(key){Object.defineProperty(target,key,Object.getOwnPropertyDescriptor(source,key));});}}return target;}import{getDeliveryOptionsForSelectedVariant,GetDeliveryOptionsForSelectedVariantInput,getDimensionsForSelectedVariant,GetDimensionsForSelectedVariantInput,getPriceForSelectedVariant,getProductAvailabilitiesForSelectedVariant,getSelectedVariant,PriceForSelectedVariantInput,ProductAvailabilitiesForSelectedVariantInput,SelectedVariantInput}from'@msdyn365-commerce-modules/retail-actions';import{getTelemetryObject}from'@msdyn365-commerce-modules/utilities';import classnames from'classnames';import*as React from'react';import{getBuyboxAddToCart,getBuyboxFindInStore,getBuyBoxInventoryLabel,getBuyboxProductAddToOrderTemplate,getBuyboxProductAddToWishlist,getBuyboxProductConfigure,getBuyboxProductDescription,getBuyboxProductPrice,getBuyboxProductQuantity,getBuyboxProductRating,getBuyboxProductTitle,getBuyboxShopSimilarLook}from'./components';class Buybox extends React.PureComponent{constructor(props,state){super(props);this.buyboxCallbacks={updateQuantity:newQuantity=>{const errorState=_objectSpread({},this.state.errorState);errorState.quantityError=undefined;errorState.otherError=undefined;this.setState({quantity:newQuantity,errorState:errorState});},updateErrorState:newErrorState=>{this.setState({errorState:newErrorState});},updateSelectedProduct:(newSelectedProduct,newInventory,newPrice,newDeliveryOptions)=>{this.setState({selectedProduct:newSelectedProduct,productAvailableQuantity:newInventory,productPrice:newPrice,productDeliveryOptions:newDeliveryOptions});},dimensionSelectedAsync:(selectedDimensionId,selectedDimensionValueId)=>{return this._dimensionSelected(selectedDimensionId,selectedDimensionValueId);},getDropdownName:(dimensionType,resources)=>{return this._getDropdownName(dimensionType,resources);},changeModalOpen:isModalOpen=>{this.setState({modalOpen:isModalOpen});},changeUpdatingDimension:isUpdatingDimension=>{this.setState({isUpdatingDimension:isUpdatingDimension});}};this._dimensionSelected=async(selectedDimensionId,selectedDimensionValue)=>{const{data:{product:{result:product},productDimensions:{result:productDimensions}},context:{actionContext,request:{apiSettings:{channelId}}}}=this.props;const{selectedDimensions}=this.state;if(!product||!productDimensions){return;}if(this.state.errorState.otherError){const clearOtherErrorState=_objectSpread({},this.state.errorState);clearOtherErrorState.otherError=undefined;this.setState({errorState:clearOtherErrorState});}const newSelectedDimensions=_objectSpread({},selectedDimensions);newSelectedDimensions[selectedDimensionId]=selectedDimensionValue;this.setState({selectedDimensions:newSelectedDimensions,isUpdatingDimension:true});if(this.state.errorState.configureErrors[selectedDimensionId]){const errorState=_objectSpread({},this.state.errorState);errorState.configureErrors[selectedDimensionId]=undefined;this.setState({errorState:errorState});}const mappedDimensions=productDimensions.map(dimension=>{return{DimensionTypeValue:dimension.DimensionTypeValue,DimensionValue:this._updateDimensionValue(dimension,newSelectedDimensions[dimension.DimensionTypeValue])||dimension.DimensionValue,ExtensionProperties:dimension.ExtensionProperties};}).filter(dimension=>{return dimension&&dimension.DimensionValue;});const selectedProduct=new Promise(async(resolve,reject)=>{const newProduct=await getSelectedVariant(new SelectedVariantInput(product.MasterProductId?product.MasterProductId:product.RecordId,channelId,mappedDimensions),actionContext);if(newProduct){await getDimensionsForSelectedVariant(new GetDimensionsForSelectedVariantInput(newProduct.MasterProductId?newProduct.MasterProductId:newProduct.RecordId,channelId,mappedDimensions),actionContext);}resolve(newProduct);});this.setState({selectedProduct:selectedProduct});const variantProduct=await selectedProduct;if(variantProduct){const newAvailableQuantity=await getProductAvailabilitiesForSelectedVariant(new ProductAvailabilitiesForSelectedVariantInput(variantProduct.RecordId,channelId),actionContext);const PRODUCTASSERVICE=2;if(variantProduct.ItemTypeValue===PRODUCTASSERVICE){this.setState({isServiceItem:true});}if(newAvailableQuantity&&newAvailableQuantity.length){this.setState({productAvailableQuantity:newAvailableQuantity[0]});}else{this.setState({productAvailableQuantity:undefined});}const newPrice=await getPriceForSelectedVariant(new PriceForSelectedVariantInput(variantProduct.RecordId,channelId),actionContext);if(newPrice){this.setState({productPrice:newPrice});}const newDeliveryOptions=await getDeliveryOptionsForSelectedVariant(new GetDeliveryOptionsForSelectedVariantInput(variantProduct.RecordId,channelId),actionContext);if(newDeliveryOptions){this.setState({productDeliveryOptions:newDeliveryOptions});}}};this._updateDimensionValue=(productDimensionFull,newValueId)=>{if(newValueId&&productDimensionFull.DimensionValues){return productDimensionFull.DimensionValues.find(dimension=>dimension.RecordId===+newValueId);}return undefined;};this._getDropdownName=(dimensionType,resources)=>{switch(dimensionType){case 1:return resources.productDimensionTypeColor;case 2:return resources.productDimensionTypeConfiguration;case 3:return resources.productDimensionTypeSize;case 4:return resources.productDimensionTypeStyle;default:return'';}};this.state={errorState:{configureErrors:{}},quantity:1,selectedProduct:undefined,selectedDimensions:{},productPrice:undefined,productDeliveryOptions:undefined,modalOpen:false,isUpdatingDimension:false};this.telemetryContent=getTelemetryObject(props.context.request.telemetryPageName,props.friendlyName,props.telemetry);}render(){const{slots:{mediaGallery},data:{product:{result:product}},config:{className=''}}=this.props;if(!product){this.props.context.telemetry.error('Product content is empty, module wont render');return null;}const viewProps=_objectSpread(_objectSpread({},this.props),{},{state:this.state,mediaGallery:mediaGallery&&mediaGallery.length>0?mediaGallery[0]:undefined,ModuleProps:{moduleProps:this.props,className:classnames('ms-buybox',className)},ProductInfoContainerProps:{className:'ms-buybox__content'},MediaGalleryContainerProps:{className:'ms-buybox__media-gallery'},telemetryContent:this.telemetryContent,callbacks:this.buyboxCallbacks,title:getBuyboxProductTitle(this.props),description:getBuyboxProductDescription(this.props),configure:getBuyboxProductConfigure(this.props,this.state,this.buyboxCallbacks),findInStore:getBuyboxFindInStore(this.props,this.state,this.buyboxCallbacks),price:getBuyboxProductPrice(this.props),addToCart:getBuyboxAddToCart(this.props,this.state,this.buyboxCallbacks),addToOrderTemplate:getBuyboxProductAddToOrderTemplate(this.props,this.state,this.buyboxCallbacks),addToWishlist:getBuyboxProductAddToWishlist(this.props,this.state,this.buyboxCallbacks),rating:!this.props.context.app.config.hideRating&&getBuyboxProductRating(this.props),quantity:getBuyboxProductQuantity(this.props,this.state,this.buyboxCallbacks),inventoryLabel:getBuyBoxInventoryLabel(this.props),shopSimilarLook:this.props.config.enableShopSimilarLooks?getBuyboxShopSimilarLook(this.props,this.state,this.buyboxCallbacks):undefined});return this.props.renderView(viewProps);}}export default Buybox;","map":{"version":3,"sources":["modules/buybox/buybox.tsx"],"names":[],"mappings":"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","sourcesContent":["import {\n    getDeliveryOptionsForSelectedVariant,\n    GetDeliveryOptionsForSelectedVariantInput,\n    getDimensionsForSelectedVariant,\n    GetDimensionsForSelectedVariantInput,\n    getPriceForSelectedVariant,\n    getProductAvailabilitiesForSelectedVariant,\n    getSelectedVariant,\n    IProductInventoryInformation,\n    PriceForSelectedVariantInput,\n    ProductAvailabilitiesForSelectedVariantInput,\n    SelectedVariantInput } from '@msdyn365-commerce-modules/retail-actions';\nimport { getTelemetryObject, IModuleProps, INodeProps, ITelemetryContent } from '@msdyn365-commerce-modules/utilities';\nimport { ProductDimensionFull } from '@msdyn365-commerce/commerce-entities';\nimport { ProductDeliveryOptions, ProductDimensionValue, ProductPrice, SimpleProduct } from '@msdyn365-commerce/retail-proxy';\nimport { ReleasedProductType } from '@msdyn365-commerce/retail-proxy/dist/Entities/CommerceTypes.g';\nimport classnames from 'classnames';\nimport * as React from 'react';\nimport { IBuyboxData, IBuyboxProps } from '../..';\nimport { IBuyboxResources } from './buybox.props.autogenerated';\nimport {\n    getBuyboxAddToCart,\n    getBuyboxFindInStore,\n    getBuyBoxInventoryLabel,\n    getBuyboxProductAddToOrderTemplate,\n    getBuyboxProductAddToWishlist,\n    getBuyboxProductConfigure,\n    getBuyboxProductDescription,\n    getBuyboxProductPrice,\n    getBuyboxProductQuantity,\n    getBuyboxProductRating,\n    getBuyboxProductTitle,\n    getBuyboxShopSimilarLook,\n    IBuyboxAddToCartViewProps,\n    IBuyboxAddToOrderTemplateViewProps,\n    IBuyboxAddToWishlistViewProps,\n    IBuyboxFindInStoreViewProps,\n    IBuyboxProductConfigureViewProps,\n    IBuyboxProductQuantityViewProps,\n    IBuyboxShopSimilarLookViewProps } from './components';\n\nexport declare type IBuyboxErrorHost = 'ADDTOCART' | 'FINDINSTORE' | 'WISHLIST' | 'SHOPSIMILARITEM' | 'ORDER_TEMPLATE';\n\nexport interface IErrorState {\n    errorHost?: IBuyboxErrorHost;\n\n    configureErrors: { [configureId: string]: string | undefined };\n    quantityError?: string;\n    otherError?: string;\n}\n\nexport interface IBuyboxCallbacks {\n    updateQuantity(newQuantity: number): void;\n    updateErrorState(newErrorState: IErrorState): void;\n    updateSelectedProduct(\n        selectedProduct: Promise<SimpleProduct | null>,\n        newInventory: IProductInventoryInformation | undefined,\n        newPrice: ProductPrice | undefined,\n        newDeliveryOptions: ProductDeliveryOptions | undefined): void;\n    getDropdownName(dimensionType: number, resources: IBuyboxResources): string;\n    dimensionSelectedAsync(selectedDimensionId: number, selectedDimensionValueId: string): Promise<void>;\n    changeModalOpen(isModalOpen: boolean): void;\n    changeUpdatingDimension(isUpdatingDimension: boolean): void;\n}\n\nexport interface IBuyboxState {\n    quantity: number;\n    errorState: IErrorState;\n    selectedDimensions: { [id: number]: string | undefined };\n    selectedProduct?: Promise<SimpleProduct | null>;\n    productAvailableQuantity?: IProductInventoryInformation;\n    productPrice?: ProductPrice;\n    productDeliveryOptions?: ProductDeliveryOptions;\n    modalOpen?: boolean;\n    isUpdatingDimension?: boolean;\n    isServiceItem?: boolean;\n}\n\nexport interface IBuyboxViewProps extends IBuyboxProps<IBuyboxData> {\n    state: IBuyboxState;\n\n    ModuleProps: IModuleProps;\n    ProductInfoContainerProps: INodeProps;\n    MediaGalleryContainerProps: INodeProps;\n\n    callbacks: IBuyboxCallbacks;\n\n    mediaGallery?: React.ReactNode;\n\n    title?: React.ReactNode;\n    description?: React.ReactNode;\n    rating?: React.ReactNode;\n    price?: React.ReactNode;\n    addToOrderTemplate?: IBuyboxAddToOrderTemplateViewProps;\n    addToWishlist?: IBuyboxAddToWishlistViewProps;\n\n    addToCart: IBuyboxAddToCartViewProps;\n    findInStore?: IBuyboxFindInStoreViewProps;\n    quantity?: IBuyboxProductQuantityViewProps;\n    configure?: IBuyboxProductConfigureViewProps;\n    inventoryLabel?: React.ReactNode;\n    shopSimilarLook?: IBuyboxShopSimilarLookViewProps;\n    telemetryContent?: ITelemetryContent;\n}\n\n/**\n * Buybox Module\n */\nclass Buybox extends React.PureComponent<IBuyboxProps<IBuyboxData>, IBuyboxState> {\n    private buyboxCallbacks: IBuyboxCallbacks = {\n        updateQuantity: (newQuantity: number): void => {\n            const errorState = {...this.state.errorState};\n            errorState.quantityError = undefined;\n            errorState.otherError = undefined;\n\n            this.setState({quantity: newQuantity, errorState: errorState});\n        },\n        updateErrorState: (newErrorState: IErrorState): void => {\n            this.setState({errorState: newErrorState});\n        },\n        updateSelectedProduct: (\n            newSelectedProduct: Promise<SimpleProduct | null>,\n            newInventory: IProductInventoryInformation | undefined,\n            newPrice: ProductPrice | undefined,\n            newDeliveryOptions: ProductDeliveryOptions | undefined\n        ): void => {\n            this.setState({\n                selectedProduct: newSelectedProduct,\n                productAvailableQuantity: newInventory,\n                productPrice: newPrice,\n                productDeliveryOptions: newDeliveryOptions});\n        },\n        dimensionSelectedAsync: (selectedDimensionId: number, selectedDimensionValueId: string): Promise<void> => {\n            return this._dimensionSelected(selectedDimensionId, selectedDimensionValueId);\n        },\n        getDropdownName:  (dimensionType: number, resources: IBuyboxResources): string => {\n            return this._getDropdownName(dimensionType, resources);\n        },\n        changeModalOpen: (isModalOpen: boolean): void => {\n            this.setState({modalOpen: isModalOpen});\n        },\n        changeUpdatingDimension: (isUpdatingDimension: boolean): void => {\n            this.setState({isUpdatingDimension: isUpdatingDimension});\n        }\n    };\n\n    private telemetryContent: ITelemetryContent;\n\n    constructor(props: IBuyboxProps<IBuyboxData>, state: IBuyboxState) {\n        super(props);\n        this.state = {\n            errorState: {\n                configureErrors: {}\n            },\n            quantity: 1,\n            selectedProduct: undefined,\n            selectedDimensions: {},\n            productPrice: undefined,\n            productDeliveryOptions: undefined,\n\n            modalOpen: false,\n            isUpdatingDimension: false\n        };\n        this.telemetryContent = getTelemetryObject(props.context.request.telemetryPageName!, props.friendlyName, props.telemetry);\n    }\n\n    public render(): JSX.Element | null {\n        const {\n            slots: {\n                mediaGallery,\n            },\n            data: {\n                product: { result: product }\n            },\n            config: { className = '' }\n        } = this.props;\n\n        if (!product) {\n            this.props.context.telemetry.error('Product content is empty, module wont render');\n            return null;\n        }\n\n        const viewProps: IBuyboxViewProps = {\n            ...(this.props as IBuyboxProps<IBuyboxData>),\n            state: this.state,\n            mediaGallery: mediaGallery && mediaGallery.length > 0 ? mediaGallery[0] : undefined,\n            ModuleProps: {\n                moduleProps: this.props,\n                className: classnames('ms-buybox', className)\n            },\n            ProductInfoContainerProps: {\n                className: 'ms-buybox__content'\n            },\n            MediaGalleryContainerProps: {\n                className: 'ms-buybox__media-gallery'\n            },\n            telemetryContent: this.telemetryContent,\n            callbacks: this.buyboxCallbacks,\n            title: getBuyboxProductTitle(this.props),\n            description: getBuyboxProductDescription(this.props),\n            configure: getBuyboxProductConfigure(this.props, this.state, this.buyboxCallbacks),\n            findInStore: getBuyboxFindInStore(this.props, this.state, this.buyboxCallbacks),\n            price: getBuyboxProductPrice(this.props),\n            addToCart: getBuyboxAddToCart(this.props, this.state, this.buyboxCallbacks),\n            addToOrderTemplate: getBuyboxProductAddToOrderTemplate(this.props, this.state, this.buyboxCallbacks),\n            addToWishlist: getBuyboxProductAddToWishlist(this.props, this.state, this.buyboxCallbacks),\n            rating: !this.props.context.app.config.hideRating && getBuyboxProductRating(this.props),\n            quantity: getBuyboxProductQuantity(this.props, this.state, this.buyboxCallbacks),\n            inventoryLabel: getBuyBoxInventoryLabel(this.props),\n            shopSimilarLook: this.props.config.enableShopSimilarLooks ? getBuyboxShopSimilarLook(this.props, this.state, this.buyboxCallbacks) : undefined\n        };\n\n        return this.props.renderView(viewProps) as React.ReactElement;\n    }\n\n    // tslint:disable-next-line:max-func-body-length\n    private _dimensionSelected = async (selectedDimensionId: number, selectedDimensionValue?: string): Promise<void> => {\n        const {\n            data: {\n                product: {result: product },\n                productDimensions: {result: productDimensions },\n            },\n            context: {\n                actionContext,\n                request: {\n                    apiSettings: {\n                        channelId\n                    }\n                }\n            }\n        } = this.props;\n        const\n        {\n            selectedDimensions\n        } = this.state;\n\n        if (!product || !productDimensions) {\n            return;\n        }\n        // Step 1: Update state to indicate which dimensions are selected\n        if (this.state.errorState.otherError) {\n            const clearOtherErrorState = {...this.state.errorState};\n            clearOtherErrorState.otherError = undefined;\n            this.setState({errorState: clearOtherErrorState});\n        }\n\n        const newSelectedDimensions: { [id: number]: string | undefined } = {...selectedDimensions};\n        newSelectedDimensions[selectedDimensionId] = selectedDimensionValue;\n        this.setState({selectedDimensions: newSelectedDimensions, isUpdatingDimension: true});\n\n        // Step 2: Clear any errors indicating the dimension wasn't selected\n        if (this.state.errorState.configureErrors[selectedDimensionId]) {\n            const errorState = {...this.state.errorState};\n            errorState.configureErrors[selectedDimensionId] = undefined;\n\n            this.setState({errorState: errorState});\n        }\n        // Step 3, Build the actually selected dimensions, prioritizing the information in state\n        // over the information in data\n        const mappedDimensions = productDimensions.map(dimension => {\n            return {\n                DimensionTypeValue: dimension.DimensionTypeValue,\n                DimensionValue: this._updateDimensionValue(dimension, newSelectedDimensions[dimension.DimensionTypeValue]) || dimension.DimensionValue,\n                ExtensionProperties: dimension.ExtensionProperties\n            };\n        }).filter(dimension => {\n            return dimension && dimension.DimensionValue;\n        });\n        // Step 4. Use these dimensions hydrate the product. Wrap this in a promise\n        // so that places like add to cart can await it\n        const selectedProduct = new Promise<SimpleProduct | null>(async (resolve, reject) => {\n            const newProduct = (await getSelectedVariant(\n                new SelectedVariantInput(\n                    product.MasterProductId ? product.MasterProductId : product.RecordId,\n                    channelId,\n                    mappedDimensions\n                ),\n                actionContext\n            ));\n            if (newProduct) {\n                await getDimensionsForSelectedVariant(\n                    new GetDimensionsForSelectedVariantInput(\n                        newProduct.MasterProductId ? newProduct.MasterProductId : newProduct.RecordId,\n                        channelId,\n                        mappedDimensions\n                    ),\n                    actionContext\n                );\n            }\n\n            resolve(newProduct);\n        });\n        this.setState({selectedProduct: selectedProduct});\n        const variantProduct = await selectedProduct;\n\n        if(variantProduct) {\n            // Step 5. Use these dimensions hydrate the inventory. Wrap this in a promise\n            // so that places like add to cart can await it\n            const newAvailableQuantity = await getProductAvailabilitiesForSelectedVariant(\n                new ProductAvailabilitiesForSelectedVariantInput(\n                    variantProduct.RecordId,\n                    channelId\n                ),\n                actionContext\n            );\n\n            // check if the product is service or not by product type\n            const PRODUCTASSERVICE = 2 as ReleasedProductType.Service;\n            if (variantProduct.ItemTypeValue === PRODUCTASSERVICE) {\n                this.setState({isServiceItem: true});\n            }\n\n            if(newAvailableQuantity && newAvailableQuantity.length) {\n                this.setState({productAvailableQuantity: newAvailableQuantity[0]});\n            } else {\n                this.setState({productAvailableQuantity: undefined});\n            }\n\n            // Step 6. Use these dimensions hydrate the product price.\n            const newPrice = await getPriceForSelectedVariant(\n                new PriceForSelectedVariantInput(\n                    variantProduct.RecordId,\n                    channelId\n                ),\n                actionContext\n            );\n\n            if(newPrice) {\n                this.setState({productPrice: newPrice});\n            }\n\n            // Step 7. Use these dimensions hydrate the product delivery options.\n            const newDeliveryOptions = await getDeliveryOptionsForSelectedVariant(\n                new GetDeliveryOptionsForSelectedVariantInput(\n                    variantProduct.RecordId,\n                    channelId\n                ),\n                actionContext\n            );\n\n            if(newDeliveryOptions) {\n                this.setState({productDeliveryOptions: newDeliveryOptions});\n            }\n        }\n    }\n\n    private _updateDimensionValue = (productDimensionFull: ProductDimensionFull, newValueId: string | undefined): ProductDimensionValue | undefined => {\n        if (newValueId && productDimensionFull.DimensionValues) {\n            return productDimensionFull.DimensionValues.find(dimension => dimension.RecordId === +newValueId);\n        }\n\n        return undefined;\n    };\n\n    private _getDropdownName = (dimensionType: number, resources: IBuyboxResources): string => {\n        switch (dimensionType) {\n            case 1: // ProductDimensionType.Color\n                return resources.productDimensionTypeColor;\n            case 2: // ProductDimensionType.Configuration\n                return resources.productDimensionTypeConfiguration;\n            case 3: // ProductDimensionType.Size\n                return resources.productDimensionTypeSize;\n            case 4: // ProductDimensionType.Style\n                return resources.productDimensionTypeStyle;\n            default:\n                return '';\n        }\n    };\n}\n\nexport default Buybox;\n"],"sourceRoot":"./src/"},"metadata":{},"sourceType":"module"}