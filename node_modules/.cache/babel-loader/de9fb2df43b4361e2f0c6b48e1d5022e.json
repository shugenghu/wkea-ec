{"ast":null,"code":"import _classCallCheck from \"@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/esm/createClass\";\nimport _inherits from \"@babel/runtime/helpers/esm/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/esm/getPrototypeOf\";\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Date.prototype.toString.call(Reflect.construct(Date, [], function () {})); return true; } catch (e) { return false; } }\n\n/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nimport * as React from 'react';\n/**\n *\n * Helloworld component\n * @extends {React.PureComponent<IHelloworldProps<IHelloworldData>>}\n */\n\nvar Helloworld = /*#__PURE__*/function (_React$PureComponent) {\n  _inherits(Helloworld, _React$PureComponent);\n\n  var _super = _createSuper(Helloworld);\n\n  function Helloworld() {\n    _classCallCheck(this, Helloworld);\n\n    return _super.apply(this, arguments);\n  }\n\n  _createClass(Helloworld, [{\n    key: \"render\",\n    value: function render() {\n      var config = this.props.config;\n      return /*#__PURE__*/React.createElement(\"div\", {\n        className: 'row'\n      }, /*#__PURE__*/React.createElement(\"div\", {\n        className: 'col'\n      }, /*#__PURE__*/React.createElement(\"h2\", null, \"Config Value: \", config.title)));\n    }\n  }]);\n\n  return Helloworld;\n}(React.PureComponent);\n\nexport default Helloworld;","map":{"version":3,"sources":["/Users/User/Documents/wkea-ec/Msdyn365.Commerce.Online/node_modules/source-map-loader/index.js!/Users/User/Documents/wkea-ec/Msdyn365.Commerce.Online/src/modules/helloworld/helloworld.tsx"],"names":[],"mappings":";;;;;;;;;;AAAA;;;AAGgG;AAEhG,OAAO,KAAK,KAAZ,MAAuB,OAAvB;AAKA;;;;AAIG;;IACG,U;;;;;;;;;;;;;6BACW;AAAA,UACD,MADC,GACU,KAAK,KADf,CACD,MADC;AAGT,0BACI,KAAA,CAAA,aAAA,CAAA,KAAA,EAAA;AAAK,QAAA,SAAS,EAAC;AAAf,OAAA,eACI,KAAA,CAAA,aAAA,CAAA,KAAA,EAAA;AAAK,QAAA,SAAS,EAAC;AAAf,OAAA,eACI,KAAA,CAAA,aAAA,CAAA,IAAA,EAAA,IAAA,E,gBAAA,EAAmB,MAAM,CAAC,KAA1B,CADJ,CADJ,CADJ;AAOH;;;;EAXoB,KAAK,CAAC,a;;AAc/B,eAAe,UAAf","sourcesContent":["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport * as React from 'react';\n\nimport { IHelloworldData } from './helloworld.data';\nimport { IHelloworldProps } from './helloworld.props.autogenerated';\n\n/**\n *\n * Helloworld component\n * @extends {React.PureComponent<IHelloworldProps<IHelloworldData>>}\n */\nclass Helloworld extends React.PureComponent<IHelloworldProps<IHelloworldData>> {\n    public render(): JSX.Element {\n        const { config } = this.props;\n\n        return (\n            <div className='row'>\n                <div className='col'>\n                    <h2>Config Value: {config.title}</h2>\n                </div>\n            </div>\n        );\n    }\n}\n\nexport default Helloworld;\n"],"sourceRoot":""},"metadata":{},"sourceType":"module"}