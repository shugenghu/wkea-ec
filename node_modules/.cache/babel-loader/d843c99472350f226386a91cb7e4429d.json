{"ast":null,"code":"import _regeneratorRuntime from\"@babel/runtime/regenerator\";import _asyncToGenerator from\"@babel/runtime/helpers/esm/asyncToGenerator\";import _classCallCheck from\"@babel/runtime/helpers/esm/classCallCheck\";import{getPaginatedOrderTemplateLinesAction,GetPaginatedOrderTemplateLinesInput}from'./get-paginated-order-template-lines';import{createObservableDataAction}from'@msdyn365-commerce/core';import{getCartState}from'@msdyn365-commerce/global-state';import{addCartLinesAsync}from'@msdyn365-commerce/retail-proxy/dist/DataActions/CartsDataActions.g';/**\r\n *  Input class for the AddOrderTemplateToCart data action.\r\n */export var AddOrderTemplateToCartInput=function AddOrderTemplateToCartInput(orderTemplateId){_classCallCheck(this,AddOrderTemplateToCartInput);this.getCacheKey=function(){return'AddOrderTemplateToCartInput';};this.getCacheObjectType=function(){return'AddOrderTemplateToCartInput';};this.dataCacheType=function(){return'none';};this.orderTemplateId=orderTemplateId;};/**\r\n * createInput method for the AddOrderTemplateToCart method.\r\n * @param {ICreateActionContext} inputData The input data passed to the createInput method.\r\n * @param {string} orderTemplateId The id of template.\r\n */export var addOrderTemplateToCartInput=function addOrderTemplateToCartInput(inputData,orderTemplateId){var requestContext=inputData.requestContext;if(!requestContext.user.isAuthenticated){throw new Error('Unable to create order template. User is not authenticated.');}return new AddOrderTemplateToCartInput(orderTemplateId);};/**\r\n * The action method for the AddOrderTemplateToCart data action.\r\n * @param {AddOrderTemplateToCartInput} input The action input.\r\n * @param {IActionContext} ctx The action context.\r\n */export function addOrderTemplateToCartAction(_x,_x2){return _addOrderTemplateToCartAction.apply(this,arguments);}/**\r\n * The AddOrderTemplateToCart Data Action.\r\n * Returns created order template.\r\n */function _addOrderTemplateToCartAction(){_addOrderTemplateToCartAction=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee(input,context){var cartState,chunkCount,queryResultSettings,getPaginatedOrderTemplateLinesInput,orderTemplateLines,addedCartLines,skip,cartLines;return _regeneratorRuntime.wrap(function _callee$(_context){while(1){switch(_context.prev=_context.next){case 0:_context.next=2;return getCartState(context);case 2:cartState=_context.sent;chunkCount=1000;queryResultSettings={Paging:{Top:chunkCount,Skip:0}};getPaginatedOrderTemplateLinesInput=new GetPaginatedOrderTemplateLinesInput(input.orderTemplateId,queryResultSettings);_context.next=8;return getPaginatedOrderTemplateLinesAction(getPaginatedOrderTemplateLinesInput,context);case 8:orderTemplateLines=_context.sent;addedCartLines=[];skip=chunkCount;case 11:if(!(orderTemplateLines.lines.length!==0)){_context.next=23;break;}cartLines=orderTemplateLines.lines.map(function(productLine){var _productLine$fullProd;// tslint:disable-next-line:no-unnecessary-local-variable\nvar cartLine={ItemId:(_productLine$fullProd=productLine.fullProduct)===null||_productLine$fullProd===void 0?void 0:_productLine$fullProd.ProductDetails.ItemId,ProductId:productLine.productListLine.ProductId,Quantity:productLine.productListLine.Quantity,TrackingId:'',UnitOfMeasureSymbol:productLine.productListLine.UnitOfMeasure};return cartLine;});_context.next=15;return addCartLinesAsync({callerContext:context},cartState.cart.Id,cartLines,cartState.cart.Version)[\"catch\"](function(error){context.telemetry.trace(error);context.telemetry.trace('Unable to add order template to cart.');throw error;});case 15:addedCartLines=addedCartLines.concat(cartLines);getPaginatedOrderTemplateLinesInput.queryResultSettings.Paging.Skip=skip;_context.next=19;return getPaginatedOrderTemplateLinesAction(getPaginatedOrderTemplateLinesInput,context);case 19:orderTemplateLines=_context.sent;case 20:skip+=chunkCount;_context.next=11;break;case 23:_context.next=25;return cartState.refreshCart({});case 25:return _context.abrupt(\"return\",addedCartLines);case 26:case\"end\":return _context.stop();}}},_callee);}));return _addOrderTemplateToCartAction.apply(this,arguments);}export default createObservableDataAction({id:'@msdyn365-commerce-modules/retail-actions/order-templates/add-order-template-to-cart',action:addOrderTemplateToCartAction,input:addOrderTemplateToCartInput});","map":{"version":3,"sources":["../../../src/order-templates/add-order-template-to-cart.ts"],"names":[],"mappings":"8MAAA,OAAS,oCAAT,CAA+C,mCAA/C,KAA0F,sCAA1F,CACA,OAEI,0BAFJ,KAOO,yBAPP,CAQA,OAAS,YAAT,KAA6B,iCAA7B,CAEA,OAAS,iBAAT,KAAkC,qEAAlC,CAEA;;AAEG,GACH,UAAa,CAAA,2BAAb,CAGI,qCAAY,eAAZ,CAAmC,mDAI5B,KAAA,WAAA,CAAc,iBAAM,6BAAN,EAAd,CACA,KAAA,kBAAA,CAAqB,iBAAM,6BAAN,EAArB,CACA,KAAA,aAAA,CAAgB,iBAAiB,MAAjB,EAAhB,CALH,KAAK,eAAL,CAAuB,eAAvB,CACH,CALL,CAYA;;;;AAIG,GACH,MAAO,IAAM,CAAA,2BAA2B,CAAG,QAA9B,CAAA,2BAA8B,CAAC,SAAD,CAAkC,eAAlC,CAA0F,IACzH,CAAA,cADyH,CACtG,SADsG,CACzH,cADyH,CAEjI,GAAI,CAAC,cAAc,CAAC,IAAf,CAAoB,eAAzB,CAA0C,CACtC,KAAM,IAAI,CAAA,KAAJ,CAAU,6DAAV,CAAN,CACH,CACD,MAAO,IAAI,CAAA,2BAAJ,CAAgC,eAAhC,CAAP,CACH,CANM,CAQP;;;;AAIG,GACH,eAAsB,CAAA,4BAAtB,qEAqCA;;;AAGG,G,+HAxCI,iBAA4C,KAA5C,CAAgF,OAAhF,0QACqB,CAAA,YAAY,CAAC,OAAD,CADjC,QACG,SADH,eAEG,UAFH,CAEgB,IAFhB,CAGG,mBAHH,CAG8C,CAC7C,MAAM,CAAE,CACJ,GAAG,CAAE,UADD,CAEJ,IAAI,CAAE,CAFF,CADqC,CAH9C,CASG,mCATH,CASyC,GAAI,CAAA,mCAAJ,CAAwC,KAAK,CAAC,eAA9C,CAA+D,mBAA/D,CATzC,uBAU4B,CAAA,oCAAoC,CAAC,mCAAD,CAAsC,OAAtC,CAVhE,QAUC,kBAVD,eAWC,cAXD,CAW8B,EAX9B,CAYM,IAZN,CAYa,UAZb,cAYyB,kBAAkB,CAAC,KAAnB,CAAyB,MAAzB,GAAoC,CAZ7D,2BAaO,SAbP,CAa+B,kBAAkB,CAAC,KAAnB,CAAyB,GAAzB,CAA6B,SAAA,WAAW,CAAG,2BACrE;AACA,GAAM,CAAA,QAAQ,CAAa,CACvB,MAAM,wBAAE,WAAW,CAAC,WAAd,gDAAE,sBAAyB,cAAzB,CAAwC,MADzB,CAEvB,SAAS,CAAE,WAAW,CAAC,eAAZ,CAA4B,SAFhB,CAGvB,QAAQ,CAAE,WAAW,CAAC,eAAZ,CAA4B,QAHf,CAIvB,UAAU,CAAE,EAJW,CAKvB,mBAAmB,CAAE,WAAW,CAAC,eAAZ,CAA4B,aAL1B,CAA3B,CAOA,MAAO,CAAA,QAAP,CACH,CAV6B,CAb/B,wBAwBO,CAAA,iBAAiB,CAAC,CAAE,aAAa,CAAE,OAAjB,CAAD,CAA6B,SAAS,CAAC,IAAV,CAAe,EAA5C,CAAgD,SAAhD,CAA2D,SAAS,CAAC,IAAV,CAAe,OAA1E,CAAjB,UAA2G,SAAA,KAAK,CAAG,CACrH,OAAO,CAAC,SAAR,CAAkB,KAAlB,CAAwB,KAAxB,EACA,OAAO,CAAC,SAAR,CAAkB,KAAlB,CAAwB,uCAAxB,EACA,KAAM,CAAA,KAAN,CACH,CAJK,CAxBP,SA6BC,cAAc,CAAG,cAAc,CAAC,MAAf,CAAsB,SAAtB,CAAjB,CACA,mCAAmC,CAAC,mBAApC,CAAwD,MAAxD,CAAgE,IAAhE,CAAuE,IAAvE,CA9BD,uBA+B4B,CAAA,oCAAoC,CAAC,mCAAD,CAAsC,OAAtC,CA/BhE,SA+BC,kBA/BD,uBAYgE,IAAI,EAAI,UAZxE,uDAiCG,CAAA,SAAS,CAAC,WAAV,CAAsB,EAAtB,CAjCH,yCAkCI,cAlCJ,yD,+DAyCP,cAAe,CAAA,0BAA0B,CAAa,CAClD,EAAE,CAAE,sFAD8C,CAElD,MAAM,CAAuB,4BAFqB,CAGlD,KAAK,CAAE,2BAH2C,CAAb,CAAzC","sourcesContent":["import { getPaginatedOrderTemplateLinesAction, GetPaginatedOrderTemplateLinesInput } from './get-paginated-order-template-lines'\nimport {\n    CacheType,\n    createObservableDataAction,\n    IAction,\n    IActionContext,\n    IActionInput,\n    ICreateActionContext\n} from '@msdyn365-commerce/core';\nimport { getCartState } from '@msdyn365-commerce/global-state';\nimport { CartLine, QueryResultSettings } from '@msdyn365-commerce/retail-proxy';\nimport { addCartLinesAsync } from '@msdyn365-commerce/retail-proxy/dist/DataActions/CartsDataActions.g';\n\n/**\n *  Input class for the AddOrderTemplateToCart data action.\n */\nexport class AddOrderTemplateToCartInput implements IActionInput {\n    public readonly orderTemplateId: string;\n\n    constructor(orderTemplateId: string) {\n        this.orderTemplateId = orderTemplateId;\n    }\n\n    public getCacheKey = () => 'AddOrderTemplateToCartInput';\n    public getCacheObjectType = () => 'AddOrderTemplateToCartInput';\n    public dataCacheType = (): CacheType => 'none';\n}\n\n/**\n * createInput method for the AddOrderTemplateToCart method.\n * @param {ICreateActionContext} inputData The input data passed to the createInput method.\n * @param {string} orderTemplateId The id of template.\n */\nexport const addOrderTemplateToCartInput = (inputData: ICreateActionContext, orderTemplateId: string): AddOrderTemplateToCartInput => {\n    const { requestContext } = inputData;\n    if (!requestContext.user.isAuthenticated) {\n        throw new Error('Unable to create order template. User is not authenticated.');\n    }\n    return new AddOrderTemplateToCartInput(orderTemplateId);\n};\n\n/**\n * The action method for the AddOrderTemplateToCart data action.\n * @param {AddOrderTemplateToCartInput} input The action input.\n * @param {IActionContext} ctx The action context.\n */\nexport async function addOrderTemplateToCartAction(input: AddOrderTemplateToCartInput, context: IActionContext): Promise<CartLine[]> {\n    const cartState = await getCartState(context);\n    const chunkCount = 1000;\n    const queryResultSettings: QueryResultSettings = {\n        Paging: {\n            Top: chunkCount,\n            Skip: 0\n        }\n    };\n    const getPaginatedOrderTemplateLinesInput = new GetPaginatedOrderTemplateLinesInput(input.orderTemplateId, queryResultSettings);\n    let orderTemplateLines = await getPaginatedOrderTemplateLinesAction(getPaginatedOrderTemplateLinesInput, context);\n    let addedCartLines: CartLine[] = [];\n    for (let skip = chunkCount; orderTemplateLines.lines.length !== 0; skip += chunkCount) {\n        const cartLines: CartLine[] = orderTemplateLines.lines.map(productLine => {\n            // tslint:disable-next-line:no-unnecessary-local-variable\n            const cartLine: CartLine = {\n                ItemId: productLine.fullProduct?.ProductDetails.ItemId,\n                ProductId: productLine.productListLine.ProductId,\n                Quantity: productLine.productListLine.Quantity,\n                TrackingId: '',\n                UnitOfMeasureSymbol: productLine.productListLine.UnitOfMeasure\n            };\n            return cartLine;\n        });\n        await addCartLinesAsync({ callerContext: context }, cartState.cart.Id, cartLines, cartState.cart.Version!).catch(error => {\n            context.telemetry.trace(error);\n            context.telemetry.trace('Unable to add order template to cart.');\n            throw error;\n        });\n        addedCartLines = addedCartLines.concat(cartLines);\n        getPaginatedOrderTemplateLinesInput.queryResultSettings.Paging!.Skip = skip;\n        orderTemplateLines = await getPaginatedOrderTemplateLinesAction(getPaginatedOrderTemplateLinesInput, context);\n    }\n    await cartState.refreshCart({});\n    return addedCartLines;\n}\n\n/**\n * The AddOrderTemplateToCart Data Action.\n * Returns created order template.\n */\nexport default createObservableDataAction<CartLine[]>({\n    id: '@msdyn365-commerce-modules/retail-actions/order-templates/add-order-template-to-cart',\n    action: <IAction<CartLine[]>>addOrderTemplateToCartAction,\n    input: addOrderTemplateToCartInput\n});"],"sourceRoot":""},"metadata":{},"sourceType":"module"}