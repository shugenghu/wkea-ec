{"ast":null,"code":"import \"core-js/modules/es.object.assign.js\";\nimport \"core-js/modules/es.regexp.constructor.js\";\nimport \"core-js/modules/es.regexp.to-string.js\";\nimport \"core-js/modules/es.string.replace.js\";\n\n/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nimport * as React from 'react';\nimport { getPayloadObject, getTelemetryAttributes } from '@msdyn365-commerce-modules/utilities';\nimport { getRichTextHtml } from '@msdyn365-commerce/core';\nlet payLoad;\n/**\n *\n * KeywordSuggestionsComponent\n */\n\nexport const KeywordSuggestionsComponent = props => {\n  const {\n    suggestions,\n    hitPrefix,\n    hitSuffix\n  } = props;\n\n  if (!suggestions) {\n    return undefined;\n  }\n\n  payLoad = getPayloadObject('click', props.telemetryContent, '');\n  const reactNodes = [];\n  suggestions.map(item => {\n    reactNodes.push(_assembleNode(item, hitPrefix, hitSuffix, props));\n  });\n  return {\n    text: reactNodes\n  };\n};\n\nconst _assembleNode = (item, hitPrefix, hitSuffix, props) => {\n  const ariaLabel = item.Value && item.Value.replace(new RegExp(\"[\".concat(hitPrefix, \"]\"), 'gi'), '').replace(new RegExp(\"[\".concat(hitSuffix, \"]\"), 'gi'), '');\n  payLoad.contentAction.etext = ariaLabel;\n  const attribute = getTelemetryAttributes(props.telemetryContent, payLoad);\n  return /*#__PURE__*/React.createElement(\"li\", {\n    className: 'msc-autoSuggest__keywordResults-item',\n    key: item.Id\n  }, /*#__PURE__*/React.createElement(\"a\", Object.assign({\n    \"aria-label\": ariaLabel,\n    href: _generateLink(item, hitPrefix, hitSuffix, props)\n  }, attribute), _generateLink(item, hitPrefix, hitSuffix, props) && _getHighlightedText(item.Value ? item.Value : '', hitPrefix, hitSuffix)));\n};\n\nconst _generateLink = (suggestion, hitPrefix, hitSuffix, props) => {\n  const {\n    searchPageURL,\n    searchQsp\n  } = props;\n  const formattedLink = suggestion.Value.replace(new RegExp(\"[\".concat(hitPrefix, \"]\"), 'gi'), '').replace(new RegExp(\"[\".concat(hitSuffix, \"]\"), 'gi'), '');\n  const route = searchPageURL || '';\n  return formattedLink && formattedLink.length > 0 ? \"\".concat(route).concat(route.indexOf('?') === -1 ? '?' : '&').concat(searchQsp, \"=\").concat(formattedLink) : route;\n};\n\nconst _getHighlightedText = (suggestion, hitPrefix, hitSuffix) => {\n  const formattedText = suggestion.replace(new RegExp(\"[\".concat(hitPrefix, \"]\"), 'gi'), '<strong>').replace(new RegExp(\"[\".concat(hitSuffix, \"]\"), 'gi'), '</strong>'); // tslint:disable:react-no-dangerous-html\n\n  return /*#__PURE__*/React.createElement(\"span\", {\n    dangerouslySetInnerHTML: getRichTextHtml(formattedText)\n  });\n};","map":{"version":3,"sources":["/Users/User/Documents/wkea-ec/Msdyn365.Commerce.Online/node_modules/source-map-loader/index.js!/Users/User/Documents/wkea-ec/Msdyn365.Commerce.Online/src/modules/search/components/search.keywordsuggest.tsx"],"names":[],"mappings":"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","sourcesContent":["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport * as React from 'react';\n\nimport { getPayloadObject, getTelemetryAttributes, IPayLoad, ITelemetryContent } from '@msdyn365-commerce-modules/utilities';\nimport { getRichTextHtml } from '@msdyn365-commerce/core';\nimport { SearchSuggestion } from '@msdyn365-commerce/retail-proxy';\n\nimport { ISearchData } from '../search.data';\nimport { ISearchProps } from '../search.props.autogenerated';\n\nexport interface ISearchKeywordSuggestProps {\n    searchKeywordSuggestClass: string;\n    searchPageURL: string;\n    searchQsp: string | undefined;\n    hitPrefix: string;\n    hitSuffix: string;\n    autoSuggestProps: ISearchProps<ISearchData>;\n    searchText: string;\n    suggestions: SearchSuggestion[] | undefined;\n    telemetryContent?: ITelemetryContent;\n}\n\nexport interface ISearchKeywordViewProps {\n    text: React.ReactNode[];\n}\n\nlet payLoad: IPayLoad;\n\n/**\n *\n * KeywordSuggestionsComponent\n */\nexport const KeywordSuggestionsComponent = (props: ISearchKeywordSuggestProps): ISearchKeywordViewProps | undefined => {\n    const {\n        suggestions,\n        hitPrefix,\n        hitSuffix\n    } = props;\n\n    if (!suggestions) {\n        return undefined;\n    }\n\n    payLoad = getPayloadObject('click', props.telemetryContent!, '');\n\n    const reactNodes: React.ReactNode[] = [];\n\n    suggestions.map(item => {\n        reactNodes.push(_assembleNode(item, hitPrefix, hitSuffix, props));\n    });\n\n    return { text: reactNodes };\n};\n\nconst _assembleNode = (item: SearchSuggestion, hitPrefix: string, hitSuffix: string, props: ISearchKeywordSuggestProps) => {\n    const ariaLabel = item.Value &&\n    (item.Value).replace(new RegExp(`[${hitPrefix}]`, 'gi'), '').replace(new RegExp(`[${hitSuffix}]`, 'gi'), '');\n    payLoad.contentAction.etext = ariaLabel;\n    const attribute = getTelemetryAttributes(props.telemetryContent!, payLoad);\n    return (\n        <li className='msc-autoSuggest__keywordResults-item' key={item.Id}>\n            <a\n                aria-label={ariaLabel}\n                href={_generateLink(item, hitPrefix, hitSuffix, props)}\n                {...attribute}\n            >\n                {_generateLink(item, hitPrefix, hitSuffix, props) &&\n                    _getHighlightedText(item.Value ? item.Value : '', hitPrefix, hitSuffix)}\n            </a>\n        </li>\n    );\n};\n\nconst _generateLink = (suggestion: SearchSuggestion, hitPrefix: string, hitSuffix: string, props: ISearchKeywordSuggestProps): string => {\n    const { searchPageURL, searchQsp } = props;\n\n    const formattedLink = (suggestion.Value as string)\n        .replace(new RegExp(`[${hitPrefix}]`, 'gi'), '')\n        .replace(new RegExp(`[${hitSuffix}]`, 'gi'), '');\n    const route = searchPageURL || '';\n    return formattedLink && formattedLink.length > 0\n        ? `${route}${route.indexOf('?') === -1 ? '?' : '&'}${searchQsp}=${formattedLink}`\n        : route;\n};\n\nconst _getHighlightedText = (suggestion: string, hitPrefix: string, hitSuffix: string): JSX.Element => {\n    const formattedText = suggestion\n        .replace(new RegExp(`[${hitPrefix}]`, 'gi'), '<strong>')\n        .replace(new RegExp(`[${hitSuffix}]`, 'gi'), '</strong>');\n\n    // tslint:disable:react-no-dangerous-html\n    return <span dangerouslySetInnerHTML={getRichTextHtml(formattedText)} />;\n};\n"],"sourceRoot":""},"metadata":{},"sourceType":"module"}