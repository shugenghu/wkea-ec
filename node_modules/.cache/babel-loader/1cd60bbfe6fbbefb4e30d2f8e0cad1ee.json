{"ast":null,"code":"import _regeneratorRuntime from\"@babel/runtime/regenerator\";import _asyncToGenerator from\"@babel/runtime/helpers/esm/asyncToGenerator\";import _classCallCheck from\"@babel/runtime/helpers/esm/classCallCheck\";import{createObservableDataAction}from'@msdyn365-commerce/core';import{readAsync}from'@msdyn365-commerce/retail-proxy/dist/DataActions/CustomersDataActions.g';import{buildCacheKey}from'./utilities/utils';/**\r\n * Input class for get customer data action\r\n */export var GetCustomerInput=function GetCustomerInput(apiSettings,accountNumber){var _this=this;_classCallCheck(this,GetCustomerInput);this.getCacheKey=function(){return buildCacheKey(\"Customer-\".concat(_this.customerAccountNumber),_this.apiSettings);};this.getCacheObjectType=function(){return'Customer';};this.dataCacheType=function(){return'request';};this.customerAccountNumber=accountNumber;this.apiSettings=apiSettings;};/**\r\n * Creates the input required to make the retail api call\r\n */var createInput=function createInput(inputData){var _inputData$requestCon=inputData.requestContext,user=_inputData$requestCon.user,apiSettings=_inputData$requestCon.apiSettings;if(!user.token||!user.isAuthenticated){throw new Error('[getCustomer][createInput]: User is not Authenticated.');}return new GetCustomerInput(apiSettings);};var getCustomerAction=/*#__PURE__*/function(){var _ref=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee(input,ctx){return _regeneratorRuntime.wrap(function _callee$(_context){while(1){switch(_context.prev=_context.next){case 0:if(!(input&&ctx.requestContext.user.isAuthenticated)){_context.next=2;break;}return _context.abrupt(\"return\",readAsync({callerContext:ctx},input.customerAccountNumber||'').then(function(response){return Array.isArray(response)?response[0]:response;}));case 2:ctx.trace('[getCustomer]Invalid input passed to action');return _context.abrupt(\"return\",{});case 4:case\"end\":return _context.stop();}}},_callee);}));return function getCustomerAction(_x,_x2){return _ref.apply(this,arguments);};}();export default createObservableDataAction({id:'@msdyn365-commerce-modules/retail-actions/get-customer',action:getCustomerAction,input:createInput});","map":{"version":3,"sources":["../../src/get-customer.ts"],"names":[],"mappings":"8MACA,OAAS,0BAAT,KAAiG,yBAAjG,CAEA,OAAS,SAAT,KAA0B,yEAA1B,CACA,OAAS,aAAT,KAA8B,mBAA9B,CAEA;;AAEG,GACH,UAAa,CAAA,gBAAb,CAII,0BAAY,WAAZ,CAA+C,aAA/C,CAAqE,uDAK9D,KAAA,WAAA,CAAc,iBAAM,CAAA,aAAa,oBAAa,KAAI,CAAC,qBAAlB,EAA2C,KAAI,CAAC,WAAhD,CAAnB,EAAd,CACA,KAAA,kBAAA,CAAqB,iBAAM,UAAN,EAArB,CACA,KAAA,aAAA,CAAgB,iBAAiB,SAAjB,EAAhB,CANH,KAAK,qBAAL,CAA6B,aAA7B,CACA,KAAK,WAAL,CAAmB,WAAnB,CACH,CAPL,CAcA;;AAEG,GACH,GAAM,CAAA,WAAW,CAAG,QAAd,CAAA,WAAc,CAAC,SAAD,CAAsE,2BACxD,SAAS,CAAC,cAD8C,CAC9E,IAD8E,uBAC9E,IAD8E,CACxE,WADwE,uBACxE,WADwE,CAEtF,GAAI,CAAC,IAAI,CAAC,KAAN,EAAe,CAAC,IAAI,CAAC,eAAzB,CAA0C,CACtC,KAAM,IAAI,CAAA,KAAJ,CAAU,wDAAV,CAAN,CACH,CAED,MAAO,IAAI,CAAA,gBAAJ,CAAqB,WAArB,CAAP,CACH,CAPD,CASA,GAAM,CAAA,iBAAiB,0FAAG,iBAAO,KAAP,CAAgC,GAAhC,uHAClB,KAAK,EAAI,GAAG,CAAC,cAAJ,CAAmB,IAAnB,CAAwB,eADf,0DAGX,SAAS,CAAC,CAAE,aAAa,CAAE,GAAjB,CAAD,CAAyB,KAAK,CAAC,qBAAN,EAA+B,EAAxD,CAAT,CAAqE,IAArE,CAA0E,SAAA,QAAQ,CAAG,CACxF,MAAO,CAAA,KAAK,CAAC,OAAN,CAAc,QAAd,EAA0B,QAAQ,CAAC,CAAD,CAAlC,CAAwC,QAA/C,CACH,CAFM,CAHW,SAQtB,GAAG,CAAC,KAAJ,CAAU,6CAAV,EARsB,gCASL,EATK,wDAAH,kBAAjB,CAAA,iBAAiB,gDAAvB,CAYA,cAAe,CAAA,0BAA0B,CAAC,CACtC,EAAE,CAAE,wDADkC,CAEtC,MAAM,CAAqB,iBAFW,CAGtC,KAAK,CAAE,WAH+B,CAAD,CAAzC","sourcesContent":["import { CacheType, IAction, IActionInput, ICommerceApiSettings } from '@msdyn365-commerce/core';\nimport { createObservableDataAction, IActionContext, IAny, ICreateActionContext, IGeneric } from '@msdyn365-commerce/core';\nimport { Customer } from '@msdyn365-commerce/retail-proxy';\nimport { readAsync } from '@msdyn365-commerce/retail-proxy/dist/DataActions/CustomersDataActions.g';\nimport { buildCacheKey } from './utilities/utils';\n\n/**\n * Input class for get customer data action\n */\nexport class GetCustomerInput implements IActionInput {\n    public customerAccountNumber?: string;\n    private apiSettings: ICommerceApiSettings;\n\n    constructor(apiSettings: ICommerceApiSettings, accountNumber?: string) {\n        this.customerAccountNumber = accountNumber;\n        this.apiSettings = apiSettings;\n    }\n\n    public getCacheKey = () => buildCacheKey(`Customer-${this.customerAccountNumber}`, this.apiSettings);\n    public getCacheObjectType = () => 'Customer';\n    public dataCacheType = (): CacheType => 'request';\n}\n\n/**\n * Creates the input required to make the retail api call\n */\nconst createInput = (inputData: ICreateActionContext<IGeneric<IAny>>): GetCustomerInput => {\n    const { user, apiSettings } = inputData.requestContext;\n    if (!user.token || !user.isAuthenticated) {\n        throw new Error('[getCustomer][createInput]: User is not Authenticated.');\n    }\n\n    return new GetCustomerInput(apiSettings);\n};\n\nconst getCustomerAction = async (input: GetCustomerInput, ctx: IActionContext): Promise<Customer> => {\n    if (input && ctx.requestContext.user.isAuthenticated) {\n        // TO-DO- Need to clean up this code once SDK releases new proxy that handles null.\n        return readAsync({ callerContext: ctx }, input.customerAccountNumber || '').then(response => {\n            return Array.isArray(response) ? response[0] : response;\n        });\n    }\n\n    ctx.trace('[getCustomer]Invalid input passed to action');\n    return <Customer>{};\n};\n\nexport default createObservableDataAction({\n    id: '@msdyn365-commerce-modules/retail-actions/get-customer',\n    action: <IAction<Customer>>getCustomerAction,\n    input: createInput\n});\n"],"sourceRoot":""},"metadata":{},"sourceType":"module"}