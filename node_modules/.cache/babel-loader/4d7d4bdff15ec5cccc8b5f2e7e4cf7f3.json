{"ast":null,"code":"import\"core-js/modules/es.object.assign.js\";import\"core-js/modules/es.promise.js\";import\"core-js/modules/es.promise.finally.js\";import\"core-js/modules/web.dom-collections.for-each.js\";import\"core-js/modules/web.dom-collections.iterator.js\";import\"core-js/modules/web.url.js\";import _partition2 from\"lodash/partition\";/*!\r\n * Copyright (c) Microsoft Corporation.\r\n * All rights reserved. See LICENSE in the project root for license information.\r\n */import{ActionContext}from'@msdyn365-commerce/action-internal';import{CoreContext,CultureInfoFormatter,msdyn365Commerce}from'@msdyn365-commerce/core-internal';// tslint:enable:no-import-side-effect\nimport{AppInsightsJSLogger,EVENT_CLIENT_RENDER_START,EVENT_CLIENT_RENDER_STOP,EVENT_LOAD_DATA_START,EXCEPTION_CLIENT_CACHE_HYDRATE,EXCEPTION_LOAD_DATA_EXCEPTION,EXCEPTION_PRODUCT_LIST_CLIENTSIDE_HYDRATION,expAttributeRenderer,GenericConsoleLogger,LogLevel,MESSAGE_CLIENT_RENDER_ERROR,StaticTelemetry,Telemetry,TelemetryEvent}from'@msdyn365-commerce/telemetry-internal';import axios from'axios';// tslint:disable:no-import-side-effect\nimport'lazysizes';import'lazysizes/plugins/attrchange/ls.attrchange';import*as React from'react';import*as ReactDOM from'react-dom';import{RSRequestInterceptor,RSRequestInterceptorErrorHandler,RSResponseInterceptor,RSResponseInterceptorErrorHandler}from'../_server/inteceptors/rs-logging-interceptor';import SafeRenderModule from'../components/safe-render-module';import{CLIENT_RENDER_COMPLETE_EVENT,CLIENT_RENDER_START_EVENT,DEPRECATED_CLIENT_RENDER_COMPLETE_EVENT,LAYOUT_MOUNT_POINT}from'../consts';import{loadData}from'../data/load-data';import{processComplexDataTypes}from'../hydrators/process-page-response';import{PageContext}from'../store/page-context';import{getCurrencyCodeFromContext}from'../utils/helpers';import{SessionStorageContext}from'../utils/session-storage-utils';import{AuthoringToolsHelper}from'./../utils/authoring-tools-helper';import{CookieContext}from'./../utils/cookie-utils';axios.interceptors.request.use(RSRequestInterceptor,RSRequestInterceptorErrorHandler);axios.interceptors.response.use(RSResponseInterceptor,RSResponseInterceptorErrorHandler);export const getRequestContext=storeData=>{const requestContext=storeData.requestContext;// See if cookie compliance is disabled at the site level\nconst disableCookieCompliance=requestContext.app&&requestContext.app.platform&&requestContext.app.platform.disableCookieCompliance||false;const cartSessionExpiration=requestContext.app&&requestContext.app.config&&requestContext.app.config.cartSessionExpiration||0;const cookies=new CookieContext({isConsentRequired:!disableCookieCompliance,cartExpirationInDays:cartSessionExpiration,sameSiteRequired:requestContext.sameSiteRequired});requestContext.cookies=cookies;requestContext.sessionStorage=new SessionStorageContext(cookies);requestContext.headers=Object.freeze({});requestContext.url.requestUrl=typeof requestContext.url.requestUrl==='string'?new URL(requestContext.url.requestUrl):requestContext.url.requestUrl;return requestContext;};const getPathName=requestContextUrl=>{if(requestContextUrl&&requestContextUrl.requestUrl&&requestContextUrl.requestUrl.pathname){return requestContextUrl.requestUrl.pathname;}return'';};const isPaymentVerification=requestContext=>{var _requestContext$query;return((_requestContext$query=requestContext.query)===null||_requestContext$query===void 0?void 0:_requestContext$query.pv)==='1';};const isCheckoutRoute=requestContext=>{return requestContext.app&&requestContext.app.routes&&requestContext.app.routes.checkout&&requestContext.app.routes.checkout.destinationUrl&&getPathName(requestContext.url)===requestContext.app.routes.checkout.destinationUrl;};const activateExperiments=requestContext=>{// Activate experiment if an experimentation connector has been registered and active experiments are provided\n// In a preview scenario, OneRF will not send a user ID and which we will not active the experiment\nif(msdyn365Commerce.experimentationConnector&&requestContext.features.experimentation&&requestContext.experiments&&requestContext.experiments.userId&&requestContext.experiments.activeExperiments&&requestContext.experiments.activeExperiments.length>0){const experimentInfo=requestContext.experiments;// Split the experiment list into two lists, one whose experiments are coupled with a module and one whose experiments are not\nconst[experimentsWithoutModuleId,experimentsWithModuleId]=_partition2(experimentInfo.activeExperiments,value=>{return!value.moduleId;});// Activate experiments not tied to a module id\nmsdyn365Commerce.experimentationConnector.provider.activateExperiment(experimentInfo.userId,experimentsWithoutModuleId,{Type:requestContext.device.Type});// Activate experiments once 30% of the module is visible\nconst options={threshold:0.3};const experimentMap={};const experimentObserver=new IntersectionObserver((entries,observer)=>{entries.forEach(entry=>{if(entry.isIntersecting&&entry.intersectionRatio>=0.3){const activatedExpId=entry.target.getAttribute(\"data-exp\");if(activatedExpId){var _msdyn365Commerce$exp;// Find the experiment/variant combo associated with the experiment to activate\n(_msdyn365Commerce$exp=msdyn365Commerce.experimentationConnector)===null||_msdyn365Commerce$exp===void 0?void 0:_msdyn365Commerce$exp.provider.activateExperiment(experimentInfo.userId,[experimentMap[activatedExpId]],{Type:requestContext.device.Type});}// Once we the element has come into the view for the first time, we can stop observing it\nobserver.unobserve(entry.target);}});// tslint:disable-next-line: align\n},options);for(let i=0;i<experimentsWithModuleId.length;i++){const currentExperiment=experimentsWithModuleId[i];const target=document.querySelector(\"[data-exp=\\\"id:\".concat(currentExperiment.experimentId,\"\\\"]\"));if(target){experimentMap[\"id:\".concat(currentExperiment.experimentId)]=currentExperiment;experimentObserver.observe(target);}}}};// tslint:disable:max-func-body-length\nexport function clientRender(){var _msdyn365Commerce$exp2;const storeData=window.___initialData___;if(!storeData||typeof storeData!=='object'){console.error(MESSAGE_CLIENT_RENDER_ERROR);return;}const removePlaceholderModules=modulesDictionary=>{Object.keys(modulesDictionary||{}).forEach(slot=>{modulesDictionary[slot]=modulesDictionary[slot].filter(a=>a.typeName!=='place-holder-for-container-preview');modulesDictionary[slot].forEach(module=>module.modules&&removePlaceholderModules(module.modules));});};const requestContext=getRequestContext(storeData);if(requestContext.params.isEditor){removePlaceholderModules(storeData.pageRoot.modules);}// if request is not POST or is not a checkout route or is not a payment verification, clear all checkout session storage data.\n// TODO: Explore a way to move this logic to SSK\nif(!requestContext.requestFormData||!isCheckoutRoute(requestContext)||!isPaymentVerification(requestContext)){requestContext.sessionStorage.removeCheckoutCartData();}// tslint:disable-next-line:no-any\nconst appCache=msdyn365Commerce.getAppCache(requestContext);const pageContext=new PageContext(storeData,requestContext,appCache);// Get the 1DS instance from the browser client. Initialized as part of base-page\n// tslint:disable-next-line:no-any no-string-literal\nconst oneDSWeb=window['oneDSWeb'];// Get the registered experiment listener\nconst expListener=(_msdyn365Commerce$exp2=msdyn365Commerce.experimentationConnector)===null||_msdyn365Commerce$exp2===void 0?void 0:_msdyn365Commerce$exp2.listener;// Set up internal SDK telemetry\nconst internalTelemetry=StaticTelemetry;internalTelemetry.enableDataAnalytics(requestContext.features.enableDataAnalytics);internalTelemetry.registerWebAnalyticsPlugin(oneDSWeb);internalTelemetry.registerAttributeRenderer(expAttributeRenderer);internalTelemetry.registerTraceLogger({traceLogger:new AppInsightsJSLogger()});internalTelemetry.setTelemetryRequestContext({siteId:'[[Placeholder]]',pageType:requestContext.urlTokens.pageType,pageId:pageContext.pageRoot.id});// Set up external module telemetry\nconst moduleTelemetry=new Telemetry();moduleTelemetry.enableDataAnalytics(requestContext.features.enableDataAnalytics);moduleTelemetry.registerWebAnalyticsPlugin(oneDSWeb);moduleTelemetry.registerAttributeRenderer(expAttributeRenderer);// If experimentaiton listener set up, add to event logging framework\nif(expListener&&requestContext.features.experimentation){internalTelemetry.registerExpLogger(expListener);moduleTelemetry.registerExpLogger(expListener);}// If in debug mode, add console loggers\nif(requestContext.params.isDebug){internalTelemetry.registerTraceLogger({traceLogger:GenericConsoleLogger,options:{isDebug:requestContext.params.isDebug}});moduleTelemetry.registerTraceLogger({traceLogger:GenericConsoleLogger,options:{isDebug:requestContext.params.isDebug}});}pageContext.putRequestedModulesInCacheOnClient(storeData,moduleTelemetry).catch(error=>{internalTelemetry.log(LogLevel.Error,EXCEPTION_CLIENT_CACHE_HYDRATE,{exception:error});}).finally(()=>{window._msdyn365={requestContext:requestContext,telemetry:internalTelemetry};const actionContext=new ActionContext({id:'Client Action Context',requestContext:requestContext,requestCache:pageContext.requestCache,telemetry:moduleTelemetry,appCache:null,spawnChildOnExecute:true});if(requestContext.params.isDebug){// @ts-ignore\nwindow._msdyn365.cache=pageContext.requestCache;}const coreContext={actionContext:actionContext,app:requestContext.app,// @ts-ignore\ninternalTelemetry:internalTelemetry,telemetry:moduleTelemetry,request:requestContext,cultureFormatter:new CultureInfoFormatter(requestContext.locale,getCurrencyCodeFromContext(requestContext))};if(requestContext.params.isEditor){const themeSettings=window.___initialData___.themeSettings?window.___initialData___.themeSettings:{};const authoringHelper=new AuthoringToolsHelper(actionContext,themeSettings,coreContext,pageContext,moduleTelemetry);// @ts-ignore\nwindow._msdyn365.authoringHelper=authoringHelper;// @ts-ignore\ndocument.addEventListener('_msdyn365_client_disabled_properties',dpEvent=>{if(dpEvent&&dpEvent.detail&&dpEvent.detail){Object.keys(dpEvent.detail.modules).map(key=>{authoringHelper.updateDisabledProperties(key,dpEvent.detail.modules[key]);});}});}const correlationId=Telemetry.generateGuid();// Fire event to let tooling know render starts. Tools on receiving this event, calls\n// initialziation and passes the rendering helper class instance that can be used by SDK to\n// get any information/context w.r.t tools\nconst event=new Event(CLIENT_RENDER_START_EVENT);document.dispatchEvent(event);internalTelemetry.trackEvent(EVENT_CLIENT_RENDER_START,{id:correlationId});internalTelemetry.startTimer(correlationId);internalTelemetry.trackEvent(EVENT_LOAD_DATA_START,{id:correlationId,initiator:'ClientRender'});let initialPromise=Promise.resolve();const LAZYLOAD_ALL_SWITCH=requestContext.features.lazyload_all;initialPromise=initialPromise.then(async()=>{try{return processComplexDataTypes(LAZYLOAD_ALL_SWITCH,\"client\"/* client */,pageContext.allModules,actionContext);}catch(error){internalTelemetry.log(LogLevel.Error,EXCEPTION_PRODUCT_LIST_CLIENTSIDE_HYDRATION,{exception:error});}});initialPromise.finally(()=>{// tslint:disable-next-line:no-floating-promises -- we don't care about awaiting here on purpose\nloadData(pageContext.allModules,requestContext,internalTelemetry,moduleTelemetry,pageContext.requestCache,null).then(()=>{internalTelemetry.trackEvent(EVENT_CLIENT_RENDER_STOP,{id:correlationId},{success:1,time:internalTelemetry.stopTimer(correlationId)});}).catch(error=>{internalTelemetry.trackEvent(EVENT_CLIENT_RENDER_STOP,{id:correlationId},{success:0,time:internalTelemetry.stopTimer(correlationId)});internalTelemetry.log(LogLevel.Error,EXCEPTION_LOAD_DATA_EXCEPTION,{exception:error});}).finally(()=>{var _document$getElementB;// Gets a reference to the same Telemetry, so that we can route existing log calls to new back-end without changing front-end API\nconst pageRoot=pageContext.pageRoot;const body=pageRoot.modules&&pageRoot.modules.body;const props=body&&body.length>0?body[0]:pageRoot;try{ReactDOM.hydrate(/*#__PURE__*/React.createElement(CoreContext.Provider,{value:coreContext},/*#__PURE__*/React.createElement(SafeRenderModule,Object.assign({},props,{store:pageContext,root:true}))),document.getElementById(LAYOUT_MOUNT_POINT));}catch(err){// If in dev mode or debug mode, throw the error so it's visible on the page.\nif((process.env.NODE_ENV==='development'||requestContext.params.isDebug)&&!requestContext.params.isEditor){throw err;// In editor mode, catch the error but don't throw so that the page doesn't freeze up\n}else if(requestContext.params.isEditor){console.log(\"Error running editor (client) render: \".concat(err));}}// Add the page view exp event id to the page level div\nconst pageName=requestContext.telemetryPageName||requestContext.url.requestUrl.pathname;(_document$getElementB=document.getElementById(LAYOUT_MOUNT_POINT))===null||_document$getElementB===void 0?void 0:_document$getElementB.setAttribute('data-exp-event-id',\"\".concat(pageName,\".PageView\"));// Activate any active experiments on the page\nactivateExperiments(requestContext);// TODO (matt, 6/15/20): Manually firing page view event, undo once 1DS forwarding to framework implemented\ninternalTelemetry.logEvent(TelemetryEvent.PageView,{title:requestContext.telemetryPageName||requestContext.url.requestUrl.pathname});// Fire event to let tooling know render is complete\nconst deprecatedEvent=new Event(DEPRECATED_CLIENT_RENDER_COMPLETE_EVENT);document.dispatchEvent(deprecatedEvent);document.dispatchEvent(new Event(CLIENT_RENDER_COMPLETE_EVENT));});});});}","map":{"version":3,"sources":["../../../src/_client/client-render.tsx"],"names":[],"mappings":"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","sourcesContent":["/*!\n * Copyright (c) Microsoft Corporation.\n * All rights reserved. See LICENSE in the project root for license information.\n */\n\nimport { ActionContext } from '@msdyn365-commerce/action-internal';\nimport { RequestCache } from '@msdyn365-commerce/cache-internal';\nimport {\n    CoreContext,\n    CultureInfoFormatter,\n    IAny,\n    ICoreContext,\n    IDictionary,\n    IGeneric,\n    IModuleContract,\n    IMSDyn365Window,\n    IPartnerThemeSettings,\n    IRequestContext,\n    IRequestContextUrl,\n    IVariants,\n    msdyn365Commerce\n} from '@msdyn365-commerce/core-internal';\n// tslint:enable:no-import-side-effect\nimport {\n    AppInsightsJSLogger,\n    EVENT_CLIENT_RENDER_START,\n    EVENT_CLIENT_RENDER_STOP,\n    EVENT_LOAD_DATA_START,\n    EXCEPTION_CLIENT_CACHE_HYDRATE,\n    EXCEPTION_LOAD_DATA_EXCEPTION,\n    EXCEPTION_PRODUCT_LIST_CLIENTSIDE_HYDRATION,\n    expAttributeRenderer,\n    GenericConsoleLogger,\n    IEventClientRenderMetrics,\n    IEventClientRenderProperties,\n    IEventLoadDataRenderProperties,\n    LogLevel,\n    MESSAGE_CLIENT_RENDER_ERROR,\n    StaticTelemetry,\n    Telemetry,\n    TelemetryEvent\n} from '@msdyn365-commerce/telemetry-internal';\nimport axios from 'axios';\n// tslint:disable:no-import-side-effect\nimport 'lazysizes';\nimport 'lazysizes/plugins/attrchange/ls.attrchange';\nimport { partition as _partition } from 'lodash';\nimport * as React from 'react';\nimport * as ReactDOM from 'react-dom';\nimport {\n    RSRequestInterceptor,\n    RSRequestInterceptorErrorHandler,\n    RSResponseInterceptor,\n    RSResponseInterceptorErrorHandler\n} from '../_server/inteceptors/rs-logging-interceptor';\nimport SafeRenderModule from '../components/safe-render-module';\nimport {\n    CLIENT_RENDER_COMPLETE_EVENT,\n    CLIENT_RENDER_START_EVENT,\n    DEPRECATED_CLIENT_RENDER_COMPLETE_EVENT,\n    LAYOUT_MOUNT_POINT,\n    PROCESS_TYPE\n} from '../consts';\nimport { loadData } from '../data/load-data';\nimport { processComplexDataTypes } from '../hydrators/process-page-response';\nimport { IDisabledProperties } from '../store/authoring-edit-helper';\nimport { PageContext } from '../store/page-context';\nimport { getCurrencyCodeFromContext } from '../utils/helpers';\nimport { SessionStorageContext } from '../utils/session-storage-utils';\nimport { AuthoringToolsHelper } from './../utils/authoring-tools-helper';\nimport { CookieContext } from './../utils/cookie-utils';\n\ntype windowinitialData = IGeneric<IAny>;\n\ndeclare global {\n    // tslint:disable-next-line:interface-name\n    interface ClientWindow extends IMSDyn365Window {\n        ___initialData___: windowinitialData;\n        cache: RequestCache;\n    }\n}\n\ndeclare var window: ClientWindow;\n\naxios.interceptors.request.use(RSRequestInterceptor, RSRequestInterceptorErrorHandler);\naxios.interceptors.response.use(RSResponseInterceptor, RSResponseInterceptorErrorHandler);\n\nexport const getRequestContext = (storeData: windowinitialData): IRequestContext => {\n    const requestContext: IRequestContext = storeData.requestContext;\n\n    // See if cookie compliance is disabled at the site level\n    const disableCookieCompliance =\n        (requestContext.app && requestContext.app.platform && requestContext.app.platform.disableCookieCompliance) || false;\n    const cartSessionExpiration = (requestContext.app && requestContext.app.config && requestContext.app.config.cartSessionExpiration) || 0;\n    const cookies = new CookieContext({\n        isConsentRequired: !disableCookieCompliance,\n        cartExpirationInDays: cartSessionExpiration,\n        sameSiteRequired: requestContext.sameSiteRequired\n    });\n    requestContext.cookies = cookies;\n    requestContext.sessionStorage = new SessionStorageContext(cookies);\n    requestContext.headers = Object.freeze({});\n    requestContext.url.requestUrl =\n        typeof requestContext.url.requestUrl === 'string' ? new URL(requestContext.url.requestUrl) : requestContext.url.requestUrl;\n    return requestContext;\n};\n\nconst getPathName = (requestContextUrl: IRequestContextUrl): string => {\n    if (requestContextUrl && requestContextUrl.requestUrl && requestContextUrl.requestUrl.pathname) {\n        return requestContextUrl.requestUrl.pathname;\n    }\n    return '';\n};\n\nconst isPaymentVerification = (requestContext: IRequestContext): boolean => {\n    return requestContext.query?.pv === '1';\n};\n\nconst isCheckoutRoute = (requestContext: IRequestContext): boolean => {\n    return (\n        requestContext.app &&\n        requestContext.app.routes &&\n        requestContext.app.routes.checkout &&\n        requestContext.app.routes.checkout.destinationUrl &&\n        getPathName(requestContext.url) === requestContext.app.routes.checkout.destinationUrl\n    );\n};\n\nconst activateExperiments = (requestContext: IRequestContext): void => {\n    // Activate experiment if an experimentation connector has been registered and active experiments are provided\n    // In a preview scenario, OneRF will not send a user ID and which we will not active the experiment\n    if (\n        msdyn365Commerce.experimentationConnector &&\n        requestContext.features.experimentation &&\n        requestContext.experiments &&\n        requestContext.experiments.userId &&\n        requestContext.experiments.activeExperiments &&\n        requestContext.experiments.activeExperiments.length > 0\n    ) {\n        const experimentInfo = requestContext.experiments;\n        // Split the experiment list into two lists, one whose experiments are coupled with a module and one whose experiments are not\n        const [experimentsWithoutModuleId, experimentsWithModuleId] = _partition(experimentInfo.activeExperiments, (value: IVariants) => {\n            return !value.moduleId;\n        });\n        // Activate experiments not tied to a module id\n        msdyn365Commerce.experimentationConnector.provider.activateExperiment(experimentInfo.userId, experimentsWithoutModuleId, {\n            Type: requestContext.device.Type\n        });\n\n        // Activate experiments once 30% of the module is visible\n        const options: IntersectionObserverInit = {\n            threshold: 0.3\n        };\n        const experimentMap: IDictionary<IVariants> = {};\n        const experimentObserver = new IntersectionObserver((entries: IntersectionObserverEntry[], observer: IntersectionObserver) => {\n            entries.forEach((entry: IntersectionObserverEntry) => {\n                if (entry.isIntersecting && entry.intersectionRatio >= 0.3) {\n                    const activatedExpId = entry.target.getAttribute(`data-exp`);\n                    if (activatedExpId) {\n                        // Find the experiment/variant combo associated with the experiment to activate\n                        msdyn365Commerce.experimentationConnector?.provider.activateExperiment(\n                            experimentInfo.userId,\n                            [experimentMap[activatedExpId]],\n                            {\n                                Type: requestContext.device.Type\n                            }\n                        );\n                    }\n                    // Once we the element has come into the view for the first time, we can stop observing it\n                    observer.unobserve(entry.target);\n                }\n            });\n            // tslint:disable-next-line: align\n        }, options);\n        for (let i = 0; i < experimentsWithModuleId.length; i++) {\n            const currentExperiment = experimentsWithModuleId[i];\n            const target = document.querySelector(`[data-exp=\"id:${currentExperiment.experimentId}\"]`);\n            if (target) {\n                experimentMap[`id:${currentExperiment.experimentId}`] = currentExperiment;\n                experimentObserver.observe(target);\n            }\n        }\n    }\n};\n\n// tslint:disable:max-func-body-length\nexport function clientRender(): void {\n    const storeData = window.___initialData___;\n    if (!storeData || typeof storeData !== 'object') {\n        console.error(MESSAGE_CLIENT_RENDER_ERROR);\n        return;\n    }\n    const removePlaceholderModules = (modulesDictionary: { [slot: string]: IModuleContract[] }) => {\n        Object.keys(modulesDictionary || {}).forEach(slot => {\n            modulesDictionary[slot] = modulesDictionary[slot].filter(a => a.typeName !== 'place-holder-for-container-preview');\n            modulesDictionary[slot].forEach(module => module.modules && removePlaceholderModules(module.modules));\n        });\n    };\n    const requestContext = getRequestContext(storeData);\n    if (requestContext.params.isEditor) {\n        removePlaceholderModules(storeData.pageRoot.modules);\n    }\n\n    // if request is not POST or is not a checkout route or is not a payment verification, clear all checkout session storage data.\n    // TODO: Explore a way to move this logic to SSK\n    if (!requestContext.requestFormData || !isCheckoutRoute(requestContext) || !isPaymentVerification(requestContext)) {\n        requestContext.sessionStorage.removeCheckoutCartData();\n    }\n\n    // tslint:disable-next-line:no-any\n    const appCache = (msdyn365Commerce as any).getAppCache(requestContext);\n    const pageContext = new PageContext(storeData, requestContext, appCache);\n\n    // Get the 1DS instance from the browser client. Initialized as part of base-page\n    // tslint:disable-next-line:no-any no-string-literal\n    const oneDSWeb: any = window['oneDSWeb'];\n\n    // Get the registered experiment listener\n    const expListener = msdyn365Commerce.experimentationConnector?.listener;\n\n    // Set up internal SDK telemetry\n    const internalTelemetry = StaticTelemetry;\n    internalTelemetry.enableDataAnalytics(requestContext.features.enableDataAnalytics);\n    internalTelemetry.registerWebAnalyticsPlugin(oneDSWeb);\n    internalTelemetry.registerAttributeRenderer(expAttributeRenderer);\n    internalTelemetry.registerTraceLogger({ traceLogger: new AppInsightsJSLogger() });\n    internalTelemetry.setTelemetryRequestContext({\n        siteId: '[[Placeholder]]',\n        pageType: requestContext.urlTokens.pageType,\n        pageId: pageContext.pageRoot.id\n    });\n\n    // Set up external module telemetry\n    const moduleTelemetry = new Telemetry();\n    moduleTelemetry.enableDataAnalytics(requestContext.features.enableDataAnalytics);\n    moduleTelemetry.registerWebAnalyticsPlugin(oneDSWeb);\n    moduleTelemetry.registerAttributeRenderer(expAttributeRenderer);\n\n    // If experimentaiton listener set up, add to event logging framework\n    if (expListener && requestContext.features.experimentation) {\n        internalTelemetry.registerExpLogger(expListener);\n\n        moduleTelemetry.registerExpLogger(expListener);\n    }\n\n    // If in debug mode, add console loggers\n    if (requestContext.params.isDebug) {\n        internalTelemetry.registerTraceLogger({ traceLogger: GenericConsoleLogger, options: { isDebug: requestContext.params.isDebug } });\n        moduleTelemetry.registerTraceLogger({ traceLogger: GenericConsoleLogger, options: { isDebug: requestContext.params.isDebug } });\n    }\n\n    pageContext\n        .putRequestedModulesInCacheOnClient(storeData, moduleTelemetry)\n        .catch(error => {\n            internalTelemetry.log(LogLevel.Error, EXCEPTION_CLIENT_CACHE_HYDRATE, { exception: error });\n        })\n        .finally(() => {\n            window._msdyn365 = {\n                requestContext: requestContext,\n                telemetry: internalTelemetry\n            };\n\n            const actionContext = new ActionContext({\n                id: 'Client Action Context',\n                requestContext: requestContext,\n                requestCache: pageContext.requestCache,\n                telemetry: moduleTelemetry,\n                appCache: null,\n                spawnChildOnExecute: true\n            });\n\n            if (requestContext.params.isDebug) {\n                // @ts-ignore\n                window._msdyn365.cache = pageContext.requestCache;\n            }\n            const coreContext: ICoreContext = {\n                actionContext: actionContext,\n                app: requestContext.app,\n                // @ts-ignore\n                internalTelemetry: internalTelemetry,\n                telemetry: moduleTelemetry,\n                request: requestContext,\n                cultureFormatter: new CultureInfoFormatter(requestContext.locale, getCurrencyCodeFromContext(requestContext))\n            };\n\n            if (requestContext.params.isEditor) {\n                const themeSettings: IPartnerThemeSettings = window.___initialData___.themeSettings\n                    ? window.___initialData___.themeSettings\n                    : {};\n\n                const authoringHelper = new AuthoringToolsHelper(actionContext, themeSettings, coreContext, pageContext, moduleTelemetry);\n                // @ts-ignore\n                window._msdyn365.authoringHelper = authoringHelper;\n\n                // @ts-ignore\n                document.addEventListener('_msdyn365_client_disabled_properties', (dpEvent: { detail: IDisabledProperties }) => {\n                    if (dpEvent && dpEvent.detail && dpEvent.detail) {\n                        Object.keys(dpEvent.detail.modules).map(key => {\n                            authoringHelper.updateDisabledProperties(key, dpEvent.detail.modules[key]);\n                        });\n                    }\n                });\n            }\n\n            const correlationId = Telemetry.generateGuid();\n\n            // Fire event to let tooling know render starts. Tools on receiving this event, calls\n            // initialziation and passes the rendering helper class instance that can be used by SDK to\n            // get any information/context w.r.t tools\n            const event = new Event(CLIENT_RENDER_START_EVENT);\n            document.dispatchEvent(event);\n\n            internalTelemetry.trackEvent<IEventClientRenderProperties, {}>(EVENT_CLIENT_RENDER_START, {\n                id: correlationId\n            });\n            internalTelemetry.startTimer(correlationId);\n            internalTelemetry.trackEvent<IEventLoadDataRenderProperties, {}>(EVENT_LOAD_DATA_START, {\n                id: correlationId,\n                initiator: 'ClientRender'\n            });\n\n            let initialPromise: Promise<void> = Promise.resolve();\n            const LAZYLOAD_ALL_SWITCH: boolean = requestContext.features.lazyload_all;\n\n            initialPromise = initialPromise.then(async () => {\n                try {\n                    return processComplexDataTypes(LAZYLOAD_ALL_SWITCH, PROCESS_TYPE.client, pageContext.allModules, actionContext);\n                } catch (error) {\n                    internalTelemetry.log(LogLevel.Error, EXCEPTION_PRODUCT_LIST_CLIENTSIDE_HYDRATION, { exception: error });\n                }\n            });\n\n            initialPromise.finally(() => {\n                // tslint:disable-next-line:no-floating-promises -- we don't care about awaiting here on purpose\n                loadData(pageContext.allModules, requestContext, internalTelemetry, moduleTelemetry, pageContext.requestCache, null)\n                    .then(() => {\n                        internalTelemetry.trackEvent<IEventClientRenderProperties, IEventClientRenderMetrics>(\n                            EVENT_CLIENT_RENDER_STOP,\n                            {\n                                id: correlationId\n                            },\n                            {\n                                success: 1,\n                                time: internalTelemetry.stopTimer(correlationId)\n                            }\n                        );\n                    })\n                    .catch(error => {\n                        internalTelemetry.trackEvent<IEventClientRenderProperties, IEventClientRenderMetrics>(\n                            EVENT_CLIENT_RENDER_STOP,\n                            {\n                                id: correlationId\n                            },\n                            {\n                                success: 0,\n                                time: internalTelemetry.stopTimer(correlationId)\n                            }\n                        );\n                        internalTelemetry.log(LogLevel.Error, EXCEPTION_LOAD_DATA_EXCEPTION, { exception: error });\n                    })\n                    .finally(() => {\n                        // Gets a reference to the same Telemetry, so that we can route existing log calls to new back-end without changing front-end API\n\n                        const pageRoot = pageContext.pageRoot;\n                        const body = pageRoot.modules && pageRoot.modules.body;\n                        const props = body && body.length > 0 ? body[0] : pageRoot;\n                        try {\n                            ReactDOM.hydrate(\n                                <CoreContext.Provider value={coreContext}>\n                                    <SafeRenderModule {...props} store={pageContext} root={true} />\n                                </CoreContext.Provider>,\n                                document.getElementById(LAYOUT_MOUNT_POINT)\n                            );\n                        } catch (err) {\n                            // If in dev mode or debug mode, throw the error so it's visible on the page.\n                            if (\n                                (process.env.NODE_ENV === 'development' || requestContext.params.isDebug) &&\n                                !requestContext.params.isEditor\n                            ) {\n                                throw err;\n                                // In editor mode, catch the error but don't throw so that the page doesn't freeze up\n                            } else if (requestContext.params.isEditor) {\n                                console.log(`Error running editor (client) render: ${err}`);\n                            }\n                        }\n                        // Add the page view exp event id to the page level div\n                        const pageName = requestContext.telemetryPageName || requestContext.url.requestUrl.pathname;\n                        document.getElementById(LAYOUT_MOUNT_POINT)?.setAttribute('data-exp-event-id', `${pageName}.PageView`);\n                        // Activate any active experiments on the page\n                        activateExperiments(requestContext);\n\n                        // TODO (matt, 6/15/20): Manually firing page view event, undo once 1DS forwarding to framework implemented\n                        internalTelemetry.logEvent(TelemetryEvent.PageView, {\n                            title: requestContext.telemetryPageName || requestContext.url.requestUrl.pathname\n                        });\n\n                        // Fire event to let tooling know render is complete\n                        const deprecatedEvent = new Event(DEPRECATED_CLIENT_RENDER_COMPLETE_EVENT);\n                        document.dispatchEvent(deprecatedEvent);\n\n                        document.dispatchEvent(new Event(CLIENT_RENDER_COMPLETE_EVENT));\n                    });\n            });\n        });\n}\n"],"sourceRoot":""},"metadata":{},"sourceType":"module"}