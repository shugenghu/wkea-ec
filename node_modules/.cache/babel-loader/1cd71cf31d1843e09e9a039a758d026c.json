{"ast":null,"code":"import _regeneratorRuntime from\"@babel/runtime/regenerator\";import _asyncToGenerator from\"@babel/runtime/helpers/esm/asyncToGenerator\";import _classCallCheck from\"@babel/runtime/helpers/esm/classCallCheck\";import{createObservableDataAction}from'@msdyn365-commerce/core';import{getCurrentAsync}from'@msdyn365-commerce/retail-proxy/dist/DataActions/BusinessPartnersDataActions.g';import{createBusinessPartnerUserAsync}from'@msdyn365-commerce/retail-proxy/dist/DataActions/BusinessPartnerUsersDataActions.g';/**\r\n * Input class for addOrganizationUser data action\r\n */export var AddOrganizationUserInput=function AddOrganizationUserInput(newUser){_classCallCheck(this,AddOrganizationUserInput);this.getCacheKey=function(){return\"AddOrganizationUser\";};this.getCacheObjectType=function(){return'AddOrganizationUser';};this.dataCacheType=function(){return'none';};this.user=newUser;};/**\r\n * Input class for addOrganizationUser data action\r\n */export var createAddOrganizationUserInput=function createAddOrganizationUserInput(inputData,newUser){var requestContext=inputData.requestContext;// Check if the user is authenticated.\nif(!requestContext.user.isAuthenticated){throw new Error('User is not logged in.');}return new AddOrganizationUserInput(newUser);};/**\r\n * The addOrganizationUser data action\r\n * Calls getCurrent() to get a businessPartnerId from the user requesting the action.\r\n * It then maps the newUsers' businessPartnerId to the same as the above user.\r\n * Calls the createBusinessPartner to then create a new entitiy in the database with the\r\n * information passed into through newUser\r\n */export function addOrganizationUser(_x,_x2){return _addOrganizationUser.apply(this,arguments);}/**\r\n * The addOrganizationUser data action\r\n * Calls the read RetailServer API to get the BusinessPartnerId from the admin\r\n * account and adds that businessPartner to the recieved input (new User)/\r\n * We then send this new User through the RetailServer API so that the database\r\n * is updated.\r\n */function _addOrganizationUser(){_addOrganizationUser=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee(input,ctx){var user;return _regeneratorRuntime.wrap(function _callee$(_context){while(1){switch(_context.prev=_context.next){case 0:user=input.user;return _context.abrupt(\"return\",getCurrentAsync({callerContext:ctx}).then(function(businessPartner){// set the new accounts businessPartnerId from the admin account\nuser.BusinessPartnerId=businessPartner.BusinessPartnerId;return createBusinessPartnerUserAsync({callerContext:ctx},user).then(function(newUser){return newUser;})[\"catch\"](function(){ctx.telemetry.debug('[add-organization-user] Unable to create BusinessPartnerUser account');throw new Error('[add-organization-user] Unable to create BusinessPartnerUser account');});})[\"catch\"](function(error){ctx.telemetry.exception(error);ctx.telemetry.debug('[add-organization-user] Unable to get BusinessPartner Admin account');throw new Error('[add-organization-user] Unable to get BusinessPartner Admin account');}));case 2:case\"end\":return _context.stop();}}},_callee);}));return _addOrganizationUser.apply(this,arguments);}export default createObservableDataAction({id:'@msdyn365-commerce-modules/retail-actions/add-organization-user',action:addOrganizationUser,input:createAddOrganizationUserInput});","map":{"version":3,"sources":["../../src/add-organization-user.ts"],"names":[],"mappings":"8MAAA,OAAoB,0BAApB,KAAmI,yBAAnI,CAEA,OAAS,eAAT,KAAgC,gFAAhC,CACA,OAAS,8BAAT,KAA+C,oFAA/C,CACA;;AAEG,GACH,UAAa,CAAA,wBAAb,CAGI,kCAAY,OAAZ,CAAwC,gDAIjC,KAAA,WAAA,CAAc,wCAAd,CACA,KAAA,kBAAA,CAAqB,iBAAM,qBAAN,EAArB,CACA,KAAA,aAAA,CAAgB,iBAAiB,MAAjB,EAAhB,CALH,KAAK,IAAL,CAAY,OAAZ,CACH,CALL,CAYA;;AAEG,GACH,MAAO,IAAM,CAAA,8BAA8B,CAAG,QAAjC,CAAA,8BAAiC,CAAC,SAAD,CAAkD,OAAlD,CAAgG,IAClI,CAAA,cADkI,CAC/G,SAD+G,CAClI,cADkI,CAG1I;AACA,GAAI,CAAC,cAAc,CAAC,IAAf,CAAoB,eAAzB,CAA0C,CACtC,KAAM,IAAI,CAAA,KAAJ,CAAU,wBAAV,CAAN,CACH,CAED,MAAO,IAAI,CAAA,wBAAJ,CAA6B,OAA7B,CAAP,CACH,CATM,CAWP;;;;;;AAMG,GACH,eAAsB,CAAA,mBAAtB,4DAwBA;;;;;;AAMG,G,6GA9BI,iBAAmC,KAAnC,CAAoE,GAApE,2HACK,IADL,CACc,KADd,CACK,IADL,iCAGI,eAAe,CAAC,CAAE,aAAa,CAAE,GAAjB,CAAD,CAAf,CACF,IADE,CACG,SAAC,eAAD,CAAqC,CACvC;AACA,IAAI,CAAC,iBAAL,CAAyB,eAAe,CAAC,iBAAzC,CAEA,MAAO,CAAA,8BAA8B,CAAC,CAAE,aAAa,CAAE,GAAjB,CAAD,CAAwB,IAAxB,CAA9B,CACF,IADE,CACG,SAAA,OAAO,CAAG,CACZ,MAAO,CAAA,OAAP,CACH,CAHE,WAII,UAAK,CACR,GAAG,CAAC,SAAJ,CAAc,KAAd,CAAoB,sEAApB,EACA,KAAM,IAAI,CAAA,KAAJ,CAAU,sEAAV,CAAN,CACH,CAPE,CAAP,CAQH,CAbE,WAcI,SAAA,KAAK,CAAG,CACX,GAAG,CAAC,SAAJ,CAAc,SAAd,CAAwB,KAAxB,EACA,GAAG,CAAC,SAAJ,CAAc,KAAd,CAAoB,qEAApB,EACA,KAAM,IAAI,CAAA,KAAJ,CAAU,qEAAV,CAAN,CACH,CAlBE,CAHJ,wD,sDA+BP,cAAe,CAAA,0BAA0B,CAAsB,CAC3D,EAAE,CAAE,iEADuD,CAE3D,MAAM,CAAgC,mBAFqB,CAG3D,KAAK,CAAuD,8BAHD,CAAtB,CAAzC","sourcesContent":["import { CacheType, createObservableDataAction, IAction, IActionContext, IActionInput, IAny, ICreateActionContext, IGeneric } from '@msdyn365-commerce/core';\nimport { BusinessPartner, BusinessPartnerUser } from '@msdyn365-commerce/retail-proxy';\nimport { getCurrentAsync } from '@msdyn365-commerce/retail-proxy/dist/DataActions/BusinessPartnersDataActions.g';\nimport { createBusinessPartnerUserAsync } from '@msdyn365-commerce/retail-proxy/dist/DataActions/BusinessPartnerUsersDataActions.g';\n/**\n * Input class for addOrganizationUser data action\n */\nexport class AddOrganizationUserInput implements IActionInput {\n    public user: BusinessPartnerUser;\n\n    constructor(newUser: BusinessPartnerUser) {\n        this.user = newUser;\n    }\n\n    public getCacheKey = () => `AddOrganizationUser`;\n    public getCacheObjectType = () => 'AddOrganizationUser';\n    public dataCacheType = (): CacheType => 'none';\n}\n\n/**\n * Input class for addOrganizationUser data action\n */\nexport const createAddOrganizationUserInput = (inputData: ICreateActionContext<IGeneric<IAny>>, newUser: BusinessPartnerUser): IActionInput => {\n    const { requestContext } = inputData;\n\n    // Check if the user is authenticated.\n    if (!requestContext.user.isAuthenticated) {\n        throw new Error('User is not logged in.');\n    }\n\n    return new AddOrganizationUserInput(newUser);\n};\n\n/**\n * The addOrganizationUser data action\n * Calls getCurrent() to get a businessPartnerId from the user requesting the action.\n * It then maps the newUsers' businessPartnerId to the same as the above user.\n * Calls the createBusinessPartner to then create a new entitiy in the database with the\n * information passed into through newUser\n */\nexport async function addOrganizationUser(input: AddOrganizationUserInput, ctx: IActionContext): Promise<BusinessPartnerUser> {\n    const { user } = input;\n\n    return getCurrentAsync({ callerContext: ctx })\n        .then((businessPartner: BusinessPartner) => {\n            // set the new accounts businessPartnerId from the admin account\n            user.BusinessPartnerId = businessPartner.BusinessPartnerId;\n\n            return createBusinessPartnerUserAsync({ callerContext: ctx}, user)\n                .then(newUser => {\n                    return newUser;\n                })\n                .catch(() => {\n                    ctx.telemetry.debug('[add-organization-user] Unable to create BusinessPartnerUser account');\n                    throw new Error('[add-organization-user] Unable to create BusinessPartnerUser account');\n                });\n        })\n        .catch(error => {\n            ctx.telemetry.exception(error);\n            ctx.telemetry.debug('[add-organization-user] Unable to get BusinessPartner Admin account');\n            throw new Error('[add-organization-user] Unable to get BusinessPartner Admin account');\n        });\n}\n\n/**\n * The addOrganizationUser data action\n * Calls the read RetailServer API to get the BusinessPartnerId from the admin\n * account and adds that businessPartner to the recieved input (new User)/\n * We then send this new User through the RetailServer API so that the database\n * is updated.\n */\nexport default createObservableDataAction<BusinessPartnerUser>({\n    id: '@msdyn365-commerce-modules/retail-actions/add-organization-user',\n    action: <IAction<BusinessPartnerUser>>addOrganizationUser,\n    input: <(args: ICreateActionContext) => IActionInput>(<IAny>createAddOrganizationUserInput),\n});"],"sourceRoot":""},"metadata":{},"sourceType":"module"}