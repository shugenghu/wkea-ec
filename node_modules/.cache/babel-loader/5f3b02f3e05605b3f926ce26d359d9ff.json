{"ast":null,"code":"import*as React from'react';import{Button,getPayloadObject,getTelemetryAttributes}from'@msdyn365-commerce-modules/utilities';import classnames from'classnames';export var FormInput=function FormInput(_ref){var id=_ref.id,type=_ref.type,value=_ref.value,pattern=_ref.pattern,className=_ref.className,maxLength=_ref.maxLength,isRequired=_ref.isRequired,isDisabled=_ref.isDisabled,onChange=_ref.onChange;return/*#__PURE__*/React.createElement(\"input\",{id:id,type:type,value:value,className:\"\".concat(className,\"-input\"),pattern:pattern!==''?pattern:undefined,\"aria-required\":isRequired,required:isRequired,maxLength:GetMaxLength(maxLength),onChange:onChange,disabled:isDisabled});};export var FormLabel=function FormLabel(_ref2){var id=_ref2.id,forId=_ref2.forId,className=_ref2.className,text=_ref2.text;return/*#__PURE__*/React.createElement(\"label\",{id:\"\".concat(id,\"_label\"),className:\"\".concat(className,\"-label\"),htmlFor:forId},text);};export var FormButton=function FormButton(_ref3){var id=_ref3.id,className=_ref3.className,text=_ref3.text,ariaLabel=_ref3.ariaLabel,telemetryContent=_ref3.telemetryContent,disabled=_ref3.disabled,onClick=_ref3.onClick;var payLoad=getPayloadObject('click',telemetryContent,text);var attributes=getTelemetryAttributes(telemetryContent,payLoad);return/*#__PURE__*/React.createElement(Button,Object.assign({id:id,className:className,\"aria-label\":ariaLabel,disabled:disabled,onClick:onClick},attributes),text);};export var FormFieldError=function FormFieldError(_ref4){var id=_ref4.id,className=_ref4.className,_ref4$type=_ref4.type,type=_ref4$type===void 0?'page':_ref4$type,message=_ref4.message;var errorClassName=\"\".concat(className,\"__\").concat(type,\"-error\");return/*#__PURE__*/React.createElement(\"div\",{id:id,className:classnames(errorClassName,'error',\"\".concat(type,\"Level\")),role:'alert',\"aria-live\":'assertive',\"aria-hidden\":'true'},/*#__PURE__*/React.createElement(\"p\",{className:\"\".concat(errorClassName,\"-text\")},message));};var GetMaxLength=function GetMaxLength(maxLength){if(maxLength){var parsedMaxLength=parseInt(maxLength,10);if(!isNaN(parsedMaxLength)){return parsedMaxLength;}}return undefined;};","map":{"version":3,"sources":["modules/business-organization-list/components/small-components.tsx"],"names":[],"mappings":"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","sourcesContent":["import * as React from 'react';\n\nimport { Button, getPayloadObject, getTelemetryAttributes, INodeProps, ITelemetryContent } from '@msdyn365-commerce-modules/utilities';\nimport classnames from 'classnames';\nimport { InputType } from '../business-organization-list';\n\nexport interface IBusinessForm {\n    FormWrapper: INodeProps;\n    message?: React.ReactNode;\n    items: IBusinessFormItem[];\n    buttons: React.ReactNode[];\n    errorMessage: React.ReactNode[];\n}\n\nexport interface IBusinessFormItem {\n    wrapper: INodeProps;\n    key: string;\n    label: React.ReactNode;\n    errorMessage: React.ReactNode;\n    input: React.ReactNode;\n}\n\nexport interface IBusinessFormInput {\n    label: React.ReactNode;\n    alert: React.ReactNode;\n    input: React.ReactNode;\n}\n\nexport interface IUserFormItem {\n    id: string;\n    type: InputType;\n    label: string;\n    value: string;\n    maxChars?: string;\n    isRequired: boolean;\n    pattern?: string;\n    isDisabled?: boolean;\n    customClass?: string;\n}\n\nexport interface IBusinessFormInputProps {\n    id?: string;\n    type: string;\n    value?: string;\n    pattern?: string;\n    className: string;\n    maxLength?: string;\n    isRequired: boolean;\n    isDisabled?: boolean;\n    onChange?(event: React.ChangeEvent<HTMLInputElement | HTMLTextAreaElement>): void;\n}\n\nexport const FormInput: React.FC<IBusinessFormInputProps> = ({ id, type, value, pattern, className, maxLength, isRequired, isDisabled, onChange }) =>\n       (\n        <input\n            id={id}\n            type={type}\n            value={value}\n            className={`${className}-input`}\n            pattern={pattern !== '' ? pattern : undefined}\n            aria-required={isRequired}\n            required={isRequired}\n            maxLength={GetMaxLength(maxLength)}\n            onChange={onChange}\n            disabled={isDisabled}\n        />\n    );\n\nexport interface IBusinessFormLabel {\n    id: string;\n    forId: string;\n    className: string;\n    text: string;\n}\n\nexport const FormLabel: React.FC<IBusinessFormLabel> = ({ id, forId, className, text }) => (\n    <label id={`${id}_label`} className={`${className}-label`} htmlFor={forId}>\n        {text}\n    </label>\n);\n\nexport interface IBusinessFormButton {\n    id?: string;\n    className: string;\n    text: string;\n    ariaLabel: string;\n    disabled?: boolean;\n    telemetryContent?: ITelemetryContent;\n    onClick?(event: React.MouseEvent<HTMLElement>): void;\n}\n\nexport const FormButton: React.FC<IBusinessFormButton> = ({ id, className, text, ariaLabel, telemetryContent, disabled, onClick }) => {\n    const payLoad = getPayloadObject('click', telemetryContent!, text);\n    const attributes = getTelemetryAttributes(telemetryContent!, payLoad);\n    return (\n    <Button\n        id={id}\n        className={className}\n        aria-label={ariaLabel}\n        disabled={disabled}\n        onClick={onClick}\n        {...attributes}\n    >\n        {text}\n    </Button>\n    );\n};\n\nexport interface IBusinessFormErrorProps {\n    id?: string;\n    className: string;\n    type?: string;\n    message?: string;\n}\n\nexport const FormFieldError: React.FC<IBusinessFormErrorProps> = ({ id, className, type = 'page', message }) => {\n      const errorClassName = `${className}__${type}-error`;\n\n      return (\n        <div id={id} className={classnames(errorClassName, 'error', `${type}Level`)} role='alert' aria-live='assertive' aria-hidden='true'>\n            {\n                <p className={`${errorClassName}-text`}>\n                    {message}\n                </p>\n            }\n        </div>\n    );\n\n};\n\nconst GetMaxLength = (maxLength?: string): number | undefined => {\n    if (maxLength) {\n        const parsedMaxLength = parseInt(maxLength, 10);\n        if (!isNaN(parsedMaxLength)) {\n            return parsedMaxLength;\n        }\n    }\n\n    return undefined;\n};"],"sourceRoot":"./src/"},"metadata":{},"sourceType":"module"}