{"ast":null,"code":"import _regeneratorRuntime from\"@babel/runtime/regenerator\";import _asyncToGenerator from\"@babel/runtime/helpers/esm/asyncToGenerator\";import _merge2 from\"lodash/merge\";/*!\r\n * Copyright (c) Microsoft Corporation.\r\n * All rights reserved. See LICENSE in the project root for license information.\r\n */import{ActionContext}from'@msdyn365-commerce/action-internal';import{DEFAULT_EXPERIMENT_DATAFILE_TTL,DEFAULT_EXPERIMENT_DATAFILE_TTR,DEFAULT_EXPERIMENT_TTL,DEFAULT_EXPERIMENT_TTR,RequestCache}from'@msdyn365-commerce/cache-internal';import{EXPERIMENTATION_CACHE_TYPE,EXPERIMENTATION_DATAFILE_CACHE_TYPE,msdyn365Commerce}from'@msdyn365-commerce/core-internal';import{getCategoriesAsync}from'@msdyn365-commerce/retail-proxy/dist/DataActions/CategoriesDataActions.g';import{getOrgUnitConfigurationAsync}from'@msdyn365-commerce/retail-proxy/dist/DataActions/OrgUnitsDataActions.g';import{getByIdAsync}from'@msdyn365-commerce/retail-proxy/dist/DataActions/ProductsDataActions.g';import{expAttributeRenderer,GenericConsoleLogger,InternalTelemetry,LogLevel,PageLogger,RetainLogger,StaticTelemetry,Telemetry}from'@msdyn365-commerce/telemetry-internal';import{AppInsightsNodeLogger}from'@msdyn365-commerce/telemetry-internal/dist/lib/server';import{safeReadJsonSync}from'@msdyn365-commerce/utilities-internal';import axios from'axios';import{resolve}from'path';import{parseRequest}from'../_server/parse-request';import{handleServerException,renderDefaultRouter}from'../_server/request-routers';import{CATEGORY_PAGE_NAME,DEFAULT_PROXY_HOST,DEFAULT_PROXY_PORT,GLIMPSE_LOGGER_NAME,LIST_PAGE_NAME,PAGE_LOGGER_NAME,PDP_PAGE_NAME}from'../consts';import keystonePaths from'../paths';import defaultCacheSettings from'../settings/cache.settings.json';import{ACCESS_TOKEN_SECRET_CACHE_TYPE,DEFAULT_ACCESS_TOKEN_SECRET_TTL,DEFAULT_ACCESS_TOKEN_SECRET_TTR,DEFAULT_KV_SECRET_TTL,DEFAULT_KV_SECRET_TTR,KEY_VAULT_SECRET_CACHE_TYPE}from'../utils/secret-manager';var CONNECTOR_SETTINGS='connector.settings';var cacheSettingsPath=resolve(keystonePaths.KEYSTONE_APP_SETTINGS_DIR,'cache.settings.json');var overrideCacheSettings=safeReadJsonSync(cacheSettingsPath,console);var experimentsSettings=safeReadJsonSync(resolve(keystonePaths.KEYSTONE_APP_SETTINGS_DIR,\"\".concat(CONNECTOR_SETTINGS,\".json\")));var DESTINATIONURL='destinationUrl';export var KEYSTONE_ENVIRONMENT=Object.keys(process.env).filter(function(processKeyName){return processKeyName.startsWith('MSDyn365_');}).reduce(function(env,key){env[key]=process.env[key];return env;},{NODE_ENV:process.env.NODE_ENV,HOST:process.env.HOST,PORT:process.env.PORT,PUBLIC_PATH:process.env.PUBLIC_PATH,PUBLIC_DIR:process.env.PUBLIC_DIR,Views:process.env.Dynamic_View});export var loadFeatureFlags=function loadFeatureFlags(req,res,next){// initialize pageResponse default to request.body\nres.locals.pageResponse=req.body;if(req.body&&req.body.renderingContext&&req.body.renderingContext.features){res.locals.features=req.body.renderingContext.features;}else{res.locals.features={};}next();};export var setCorsHeaders=function setCorsHeaders(req,res,next){// FEATURE FLAG TO ALLOW ALL CORS REQUESTS\nvar allowAllCors=res.locals&&res.locals.features&&res.locals.features.allowAllCors;if(allowAllCors){res.setHeader('Access-Control-Allow-Origin','*');res.setHeader('Access-Control-Allow-Methods','GET, POST, OPTIONS, PUT, PATCH, DELETE');res.setHeader('Access-Control-Allow-Headers','X-Requested-With,content-type');res.setHeader('Access-Control-Allow-Credentials','true');}next();};export var setResponseHeaders=function setResponseHeaders(req,res,next){if(process.env.NODE_ENV==='development'){// cache bust in local dev scenarios without passing build #\nres.setHeader('Cache-Control','max-age=1');}next();};export var getPlatformSettingsSync=function getPlatformSettingsSync(){var platFormSettings=safeReadJsonSync(resolve(keystonePaths.KEYSTONE_APP_SETTINGS_DIR,\"platform.settings.json\"));return platFormSettings?platFormSettings:{};};export var registerAttributeRenderers=function registerAttributeRenderers(instanceTelemetryClient,moduleInstanceTelemetryClient,requestContext){// If enable data analytics is turned on, update telemetry objects accordingly\ninstanceTelemetryClient.enableDataAnalytics(requestContext.features.enableDataAnalytics);moduleInstanceTelemetryClient.enableDataAnalytics(requestContext.features.enableDataAnalytics);// Register the exp attribute renderers\ninstanceTelemetryClient.registerAttributeRenderer(expAttributeRenderer);moduleInstanceTelemetryClient.registerAttributeRenderer(expAttributeRenderer);};export var setTelemetryObject=function setTelemetryObject(appInsightsTelemetryClient){var hasRun=false;return function(req,res,next){var requestContext=parseRequest(req);var isDebug=requestContext.params.isDebug;var options={isDebug:isDebug};// initialize the static telemetry object only once\nif(!hasRun){hasRun=true;StaticTelemetry.registerTraceLogger({traceLogger:new AppInsightsNodeLogger(appInsightsTelemetryClient)});}var instanceTelemetryClient=new InternalTelemetry();var moduleInstanceTelemetryClient=new Telemetry();instanceTelemetryClient.registerTraceLogger({traceLogger:new AppInsightsNodeLogger(appInsightsTelemetryClient)});if(process.env.NODE_ENV==='development'){instanceTelemetryClient.registerTraceLogger({traceLogger:GenericConsoleLogger,options:options});moduleInstanceTelemetryClient.registerTraceLogger({traceLogger:GenericConsoleLogger,options:options});}if(isDebug){instanceTelemetryClient.registerTraceLogger({traceLogger:new RetainLogger(),name:GLIMPSE_LOGGER_NAME});var pageLogger=new PageLogger();moduleInstanceTelemetryClient.registerTraceLogger({traceLogger:pageLogger,options:options,name:PAGE_LOGGER_NAME});instanceTelemetryClient.registerTraceLogger({traceLogger:pageLogger,options:options,name:PAGE_LOGGER_NAME});}res.locals.telemetry=instanceTelemetryClient;res.locals.moduleTelemetry=moduleInstanceTelemetryClient;next();};};/**\r\n * Page render method, used on pageResponse and request context have been parsed/calulated\r\n */export var renderPage=function renderPage(req,res,next,_ref){var clientStats=_ref.clientStats;try{return renderDefaultRouter(req,res,next,res.locals.pageResponse,res.locals.requestContext,{clientStats:clientStats});}catch(e){handleServerException(res,'Server Exception',e,res.locals.telemetry);}};/**\r\n * Helper function to await a promise and wrap in try/catch - used for getting channel configuration. Also sets the\r\n * `res.local.getOrgUnitConfigurationAsyncResult` property with the actual channel config so it can be retrieved as part\r\n * of this request\r\n * @param promiseToAwait\r\n */export var awaitChannelConfigPromise=/*#__PURE__*/function(){var _ref2=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee(res,promiseToAwait,telemetry){return _regeneratorRuntime.wrap(function _callee$(_context){while(1){switch(_context.prev=_context.next){case 0:_context.prev=0;_context.next=3;return promiseToAwait;case 3:res.locals.getOrgUnitConfigurationAsyncResult=_context.sent;_context.next=9;break;case 6:_context.prev=6;_context.t0=_context[\"catch\"](0);if(telemetry&&typeof telemetry.log==='function'){telemetry.log(LogLevel.Error,'error in getting channel configuration',{exception:_context.t0});}case 9:case\"end\":return _context.stop();}}},_callee,null,[[0,6]]);}));return function awaitChannelConfigPromise(_x,_x2,_x3){return _ref2.apply(this,arguments);};}();/**\r\n * Logs an error to application insights and terminates the request\r\n * @param res               - Express response object\r\n * @param httpErrorCode     - Http Error code\r\n * @param message           - Http message\r\n * @param telemetry         - current internal telemetry\r\n * @param error             - optional Error object\r\n */var sendErrorAndLogToTelemetry=function sendErrorAndLogToTelemetry(res,httpErrorCode,message,telemetry,error){telemetry.log(LogLevel.Error,message,{exception:error});res.status(httpErrorCode).send(message);};/**\r\n * Middleware that performs validation logic based on the type of page being rendered\r\n * @param pageResponse The page response\r\n */ // tslint:disable-next-line:max-func-body-length cyclomatic-complexity\nexport var validateRouteAndChannelConfig=/*#__PURE__*/function(){var _ref3=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee3(_req,res,next){var requestContext,actionContext,getOrgUnitConfigurationAsyncPromise,internalTelemetry,product,activeCategoryRecordId,requestedCategory,listData;return _regeneratorRuntime.wrap(function _callee3$(_context3){while(1){switch(_context3.prev=_context3.next){case 0:requestContext=res.locals.requestContext;// re-use the request cache for any lookups we do here\nres.locals.requestCache=new RequestCache();actionContext=new ActionContext({id:'Validation Context',requestContext:requestContext,requestCache:res.locals.requestCache,telemetry:res.locals.telemetry,// tslint:disable-next-line:no-any\nappCache:msdyn365Commerce.getAppCache(requestContext)});// kick off the call but dont await it yet\ngetOrgUnitConfigurationAsyncPromise=getOrgUnitConfigurationAsync({callerContext:actionContext});if(requestContext.urlTokens.pageType){_context3.next=8;break;}_context3.next=7;return awaitChannelConfigPromise(res,getOrgUnitConfigurationAsyncPromise,res.locals.telemetry);case 7:return _context3.abrupt(\"return\",next());case 8:// Validate the page has a page type\ninternalTelemetry=res.locals.telemetry;_context3.t0=requestContext.urlTokens.pageType.toLowerCase();_context3.next=_context3.t0===PDP_PAGE_NAME?12:_context3.t0===CATEGORY_PAGE_NAME?32:_context3.t0===LIST_PAGE_NAME?50:55;break;case 12:if(!requestContext.urlTokens.recordId){_context3.next=30;break;}_context3.prev=13;_context3.next=16;return getByIdAsync({callerContext:actionContext},// @ts-ignore: recordId URLToken not yet typed\n+requestContext.urlTokens.recordId,requestContext.apiSettings.channelId);case 16:product=_context3.sent;// Array Bug\nproduct=Array.isArray(product)?product[0]:product;if(!(!(product instanceof Error)&&product&&product.RecordId)){_context3.next=22;break;}_context3.next=21;return awaitChannelConfigPromise(res,getOrgUnitConfigurationAsyncPromise,res.locals.telemetry);case 21:return _context3.abrupt(\"return\",next());case 22:// Bad Product Response from Retail Server\nsendErrorAndLogToTelemetry(res,404,'Invalid PDP Route: Product Not Found.',internalTelemetry);return _context3.abrupt(\"return\");case 26:_context3.prev=26;_context3.t1=_context3[\"catch\"](13);sendErrorAndLogToTelemetry(res,500,'Invalid PDP Route: Error Validating Product',internalTelemetry,_context3.t1);return _context3.abrupt(\"return\");case 30:sendErrorAndLogToTelemetry(res,404,'Invalid PDP Route: No ProductId Detected',internalTelemetry);return _context3.abrupt(\"return\");case 32:// @ts-ignore: recordId URLToken not yet typed\nactiveCategoryRecordId=+requestContext.urlTokens.recordId;if(!activeCategoryRecordId){_context3.next=48;break;}_context3.prev=34;_context3.next=37;return getCategoriesAsync({callerContext:actionContext},requestContext.apiSettings.channelId).then(/*#__PURE__*/function(){var _ref4=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee2(response){var result;return _regeneratorRuntime.wrap(function _callee2$(_context2){while(1){switch(_context2.prev=_context2.next){case 0:result=response.find(function(category){if(category.RecordId){return category.RecordId===activeCategoryRecordId;}return false;});if(!result){_context2.next=3;break;}return _context2.abrupt(\"return\",awaitChannelConfigPromise(res,getOrgUnitConfigurationAsyncPromise,res.locals.telemetry).then(function(){return result;}));case 3:case\"end\":return _context2.stop();}}},_callee2);}));return function(_x7){return _ref4.apply(this,arguments);};}())[\"catch\"](function(e){res.locals.telemetry.log(LogLevel.Error,\"Error validating category\",{exception:e});throw e;});case 37:requestedCategory=_context3.sent;if(requestedCategory){_context3.next=41;break;}sendErrorAndLogToTelemetry(res,404,'Invalid Category Route: Category Not Found',internalTelemetry);return _context3.abrupt(\"return\");case 41:return _context3.abrupt(\"return\",next());case 44:_context3.prev=44;_context3.t2=_context3[\"catch\"](34);sendErrorAndLogToTelemetry(res,500,'Invalid Category Route: Error Validating Category',internalTelemetry,_context3.t2);return _context3.abrupt(\"return\");case 48:sendErrorAndLogToTelemetry(res,404,'Invalid Category Route: No Categories Found In URL',internalTelemetry);return _context3.abrupt(\"return\");case 50:listData=requestContext.pageData.list;if(!(listData&&listData.content&&listData.content.items&&listData.content.title&&listData._id)){_context3.next=53;break;}return _context3.abrupt(\"return\",awaitChannelConfigPromise(res,getOrgUnitConfigurationAsyncPromise,res.locals.telemetry).then(function(){return next();}));case 53:sendErrorAndLogToTelemetry(res,404,'Invalid List Route: List Data Invalid',internalTelemetry);return _context3.abrupt(\"return\");case 55:return _context3.abrupt(\"return\",awaitChannelConfigPromise(res,getOrgUnitConfigurationAsyncPromise,res.locals.telemetry).then(function(){return next();}));case 56:case\"end\":return _context3.stop();}}},_callee3,null,[[13,26],[34,44]]);}));return function validateRouteAndChannelConfig(_x4,_x5,_x6){return _ref3.apply(this,arguments);};}();/**\r\n * Checks if a proxy is available while in debug mode and routes all outgoing requests to proxy if possible\r\n * @param req The Request Object\r\n * @param res The Response Object\r\n * @param next The next function\r\n */export var detectProxy=function detectProxy(req,res,next){// Only allow proxy rerouting when in debug mode\nif(process.env.NODE_ENV==='development'&&req.query.debug){axios.get(\"\".concat(DEFAULT_PROXY_HOST,\":\").concat(DEFAULT_PROXY_PORT)).then(function(response){if(response.status===200){console.log('Debug Proxy Detected and Enabled for External Requests');// This Env variable allows to go through proxy\n// ONLY ENABLE THIS IN DEBUG\nprocess.env.NODE_TLS_REJECT_UNAUTHORIZED='0';process.env.NODE_USE_DEBUG_PROXY='1';}next();})[\"catch\"](function(error){// Reset to defaults if no proxy is detected\nprocess.env.NODE_TLS_REJECT_UNAUTHORIZED='1';process.env.NODE_USE_DEBUG_PROXY='0';next();});}else{// Reset to defaults if debug flag turned off\nprocess.env.NODE_TLS_REJECT_UNAUTHORIZED='1';process.env.NODE_USE_DEBUG_PROXY='0';next();}};/**\r\n * Creates and returns the app cache settings to be used to cache app and key vault secrets\r\n */export var getAppSecretsCacheSetings=function getAppSecretsCacheSetings(){var appSecretsCacheSettings={ttlInSeconds:{},ttrInSeconds:{}};if(appSecretsCacheSettings.ttlInSeconds){appSecretsCacheSettings.ttlInSeconds[ACCESS_TOKEN_SECRET_CACHE_TYPE]=DEFAULT_ACCESS_TOKEN_SECRET_TTL;appSecretsCacheSettings.ttlInSeconds[KEY_VAULT_SECRET_CACHE_TYPE]=DEFAULT_KV_SECRET_TTL;}if(appSecretsCacheSettings.ttrInSeconds){appSecretsCacheSettings.ttrInSeconds[ACCESS_TOKEN_SECRET_CACHE_TYPE]=DEFAULT_ACCESS_TOKEN_SECRET_TTR;appSecretsCacheSettings.ttrInSeconds[KEY_VAULT_SECRET_CACHE_TYPE]=DEFAULT_KV_SECRET_TTR;}return appSecretsCacheSettings;};export var getExperimentsCacheSettings=function getExperimentsCacheSettings(){var experimentsCacheSettings=experimentsSettings&&experimentsSettings.experimentation&&experimentsSettings.experimentation.cacheConfig||{};if(experimentsCacheSettings.ttlInSeconds){var upperCasedTTLSettings={};Object.keys(experimentsCacheSettings.ttlInSeconds).forEach(function(entity){// @ts-ignore: TS Compiler not recognizing if check correctly\nupperCasedTTLSettings[entity.toUpperCase()]=experimentsCacheSettings.ttlInSeconds[entity];});experimentsCacheSettings.ttlInSeconds=upperCasedTTLSettings;}if(experimentsCacheSettings.ttrInSeconds){var upperCasedTTRSettings={};Object.keys(experimentsCacheSettings.ttrInSeconds).forEach(function(entity){// @ts-ignore: TS Compiler not recognizing if check correctly\nupperCasedTTRSettings[entity.toUpperCase()]=experimentsCacheSettings.ttrInSeconds[entity];});experimentsCacheSettings.ttrInSeconds=upperCasedTTRSettings;}// make sure ttrInSeconds and ttlInSeconds property exist in cache setting with default value\nexperimentsCacheSettings.ttlInSeconds=experimentsCacheSettings.ttlInSeconds?experimentsCacheSettings.ttlInSeconds:{};experimentsCacheSettings.ttrInSeconds=experimentsCacheSettings.ttrInSeconds?experimentsCacheSettings.ttrInSeconds:{};experimentsCacheSettings.ttlInSeconds[EXPERIMENTATION_CACHE_TYPE]=experimentsCacheSettings.ttlInSeconds[EXPERIMENTATION_CACHE_TYPE]||DEFAULT_EXPERIMENT_TTL;experimentsCacheSettings.ttrInSeconds[EXPERIMENTATION_CACHE_TYPE]=experimentsCacheSettings.ttrInSeconds[EXPERIMENTATION_CACHE_TYPE]||DEFAULT_EXPERIMENT_TTR;experimentsCacheSettings.ttlInSeconds[EXPERIMENTATION_DATAFILE_CACHE_TYPE]=experimentsCacheSettings.ttlInSeconds[EXPERIMENTATION_DATAFILE_CACHE_TYPE]||DEFAULT_EXPERIMENT_DATAFILE_TTL;experimentsCacheSettings.ttrInSeconds[EXPERIMENTATION_DATAFILE_CACHE_TYPE]=experimentsCacheSettings.ttrInSeconds[EXPERIMENTATION_DATAFILE_CACHE_TYPE]||DEFAULT_EXPERIMENT_DATAFILE_TTR;return experimentsCacheSettings;};export var getCacheSettings=function getCacheSettings(){var cacheSettings=_merge2({},defaultCacheSettings,overrideCacheSettings);if(cacheSettings.ttlInSeconds){var upperCasedTTLSettings={};Object.keys(cacheSettings.ttlInSeconds).forEach(function(entity){// @ts-ignore: TS Compiler not recognizing if check correctly\nupperCasedTTLSettings[entity.toUpperCase()]=cacheSettings.ttlInSeconds[entity];});cacheSettings.ttlInSeconds=upperCasedTTLSettings;}if(cacheSettings.ttrInSeconds){var upperCasedTTRSettings={};Object.keys(cacheSettings.ttrInSeconds).forEach(function(entity){// @ts-ignore: TS Compiler not recognizing if check correctly\nupperCasedTTRSettings[entity.toUpperCase()]=cacheSettings.ttrInSeconds[entity];});cacheSettings.ttrInSeconds=upperCasedTTRSettings;}// make sure ttrInSeconds and ttlInSeconds property exist in cache setting\ncacheSettings.ttlInSeconds=cacheSettings.ttlInSeconds?cacheSettings.ttlInSeconds:{};cacheSettings.ttrInSeconds=cacheSettings.ttrInSeconds?cacheSettings.ttrInSeconds:{};return cacheSettings;};export var getRequestUrl=function getRequestUrl(res){try{if(res.locals&&res.locals.pageResponse&&res.locals.pageResponse.renderingContext&&res.locals.pageResponse.renderingContext.requestUrl){return new URL(res.locals.pageResponse.renderingContext.requestUrl);}// tslint:disable-next-line:no-empty\n}catch(_unused){}return undefined;};export var sanitizeUrlForLogging=function sanitizeUrlForLogging(requestUrl){if(!requestUrl){return'';}if(requestUrl.pathname.endsWith('.p')){return\"\".concat(requestUrl.hostname,\"/~.p\");}else if(requestUrl.pathname.endsWith('.c')){return\"\".concat(requestUrl.hostname,\"~/.c\");}return requestUrl.href;};export var resolveRouteInformation=function resolveRouteInformation(res,requestUrl){var pageType=res.locals.requestContext.urlTokens&&res.locals.requestContext.urlTokens.pageType;var pageTypeLower=!!pageType?pageType.toLowerCase():undefined;var originalUrl=requestUrl?requestUrl.href:'';if(originalUrl.endsWith('.p')||pageTypeLower===PDP_PAGE_NAME){return'PRODUCT_ROUTE';}else if(originalUrl.endsWith('.c')||pageTypeLower===CATEGORY_PAGE_NAME){return'CATEGORY_ROUTE';}else{var routeMap=res.locals.pageResponse&&res.locals.pageResponse.appContext&&res.locals.pageResponse.appContext.routes;if(routeMap&&requestUrl&&requestUrl.pathname){var routeUrl=requestUrl.pathname.toLowerCase();for(var _i=0,_Object$keys=Object.keys(routeMap);_i<_Object$keys.length;_i++){var key=_Object$keys[_i];var routeDestinationUrl=(routeMap[key][DESTINATIONURL]||'').toLowerCase();if(routeUrl===routeDestinationUrl){// Processing request for {route} route\nreturn key;}}}return'UNKNOWN_ROUTE';}};export var getCheckoutRoute=function getCheckoutRoute(res){var routeMap=res.locals.pageResponse&&res.locals.pageResponse.appContext&&res.locals.pageResponse.appContext.routes;if(routeMap&&routeMap.checkout&&routeMap.checkout[DESTINATIONURL]){return routeMap.checkout[DESTINATIONURL];}return'CHECKOUT_ROUTE_UNAVAILABLE';};","map":{"version":3,"sources":["../../../src/utils/platform-utils.ts"],"names":[],"mappings":"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","sourcesContent":["/*!\n * Copyright (c) Microsoft Corporation.\n * All rights reserved. See LICENSE in the project root for license information.\n */\n\nimport { ActionContext } from '@msdyn365-commerce/action-internal';\nimport {\n    DEFAULT_EXPERIMENT_DATAFILE_TTL,\n    DEFAULT_EXPERIMENT_DATAFILE_TTR,\n    DEFAULT_EXPERIMENT_TTL,\n    DEFAULT_EXPERIMENT_TTR,\n    ICacheSettings,\n    RequestCache\n} from '@msdyn365-commerce/cache-internal';\nimport {\n    EXPERIMENTATION_CACHE_TYPE,\n    EXPERIMENTATION_DATAFILE_CACHE_TYPE,\n    IConnectorSettings,\n    IDictionary,\n    IPlatformSettings,\n    IRequestContext,\n    msdyn365Commerce\n} from '@msdyn365-commerce/core-internal';\nimport { AsyncResult, Category, ChannelConfiguration } from '@msdyn365-commerce/retail-proxy';\nimport { getCategoriesAsync } from '@msdyn365-commerce/retail-proxy/dist/DataActions/CategoriesDataActions.g';\nimport { getOrgUnitConfigurationAsync } from '@msdyn365-commerce/retail-proxy/dist/DataActions/OrgUnitsDataActions.g';\nimport { getByIdAsync } from '@msdyn365-commerce/retail-proxy/dist/DataActions/ProductsDataActions.g';\nimport {\n    expAttributeRenderer,\n    GenericConsoleLogger,\n    InternalTelemetry,\n    LogLevel,\n    PageLogger,\n    RetainLogger,\n    StaticTelemetry,\n    Telemetry\n} from '@msdyn365-commerce/telemetry-internal';\nimport { AppInsightsNodeLogger, TelemetryClient } from '@msdyn365-commerce/telemetry-internal/dist/lib/server';\nimport { safeReadJsonSync } from '@msdyn365-commerce/utilities-internal';\nimport axios, { AxiosError, AxiosResponse } from 'axios';\nimport { NextFunction, Request, Response } from 'express';\nimport { merge as _merge } from 'lodash';\nimport { resolve } from 'path';\nimport { parseRequest } from '../_server/parse-request';\nimport { handleServerException, renderDefaultRouter } from '../_server/request-routers';\nimport {\n    CATEGORY_PAGE_NAME,\n    DEFAULT_PROXY_HOST,\n    DEFAULT_PROXY_PORT,\n    GLIMPSE_LOGGER_NAME,\n    LIST_PAGE_NAME,\n    PAGE_LOGGER_NAME,\n    PDP_PAGE_NAME\n} from '../consts';\nimport keystonePaths from '../paths';\nimport defaultCacheSettings from '../settings/cache.settings.json';\nimport {\n    ACCESS_TOKEN_SECRET_CACHE_TYPE,\n    DEFAULT_ACCESS_TOKEN_SECRET_TTL,\n    DEFAULT_ACCESS_TOKEN_SECRET_TTR,\n    DEFAULT_KV_SECRET_TTL,\n    DEFAULT_KV_SECRET_TTR,\n    KEY_VAULT_SECRET_CACHE_TYPE\n} from '../utils/secret-manager';\n\nconst CONNECTOR_SETTINGS = 'connector.settings';\n\nconst cacheSettingsPath = resolve(keystonePaths.KEYSTONE_APP_SETTINGS_DIR, 'cache.settings.json');\nconst overrideCacheSettings = safeReadJsonSync<ICacheSettings>(cacheSettingsPath, console);\nconst experimentsSettings = safeReadJsonSync<IConnectorSettings>(\n    resolve(keystonePaths.KEYSTONE_APP_SETTINGS_DIR, `${CONNECTOR_SETTINGS}.json`)\n);\nconst DESTINATIONURL = 'destinationUrl';\n\nexport const KEYSTONE_ENVIRONMENT = Object.keys(process.env)\n    .filter((processKeyName: string) => processKeyName.startsWith('MSDyn365_'))\n    .reduce(\n        (env: IDictionary<string>, key: string) => {\n            env[key] = <string>process.env[key];\n\n            return env;\n        },\n        {\n            NODE_ENV: <string>process.env.NODE_ENV,\n            HOST: <string>process.env.HOST,\n            PORT: <string>process.env.PORT,\n            PUBLIC_PATH: <string>process.env.PUBLIC_PATH,\n            PUBLIC_DIR: <string>process.env.PUBLIC_DIR,\n            Views: <string>process.env.Dynamic_View\n        }\n    );\n\nexport const loadFeatureFlags = (req: Request, res: Response, next: NextFunction) => {\n    // initialize pageResponse default to request.body\n    res.locals.pageResponse = req.body;\n    if (req.body && req.body.renderingContext && req.body.renderingContext.features) {\n        res.locals.features = req.body.renderingContext.features;\n    } else {\n        res.locals.features = {};\n    }\n    next();\n};\n\nexport const setCorsHeaders = (req: Request, res: Response, next: NextFunction) => {\n    // FEATURE FLAG TO ALLOW ALL CORS REQUESTS\n    const allowAllCors = res.locals && res.locals.features && res.locals.features.allowAllCors;\n    if (allowAllCors) {\n        res.setHeader('Access-Control-Allow-Origin', '*');\n        res.setHeader('Access-Control-Allow-Methods', 'GET, POST, OPTIONS, PUT, PATCH, DELETE');\n        res.setHeader('Access-Control-Allow-Headers', 'X-Requested-With,content-type');\n        res.setHeader('Access-Control-Allow-Credentials', 'true');\n    }\n\n    next();\n};\n\nexport const setResponseHeaders = (req: Request, res: Response, next: NextFunction) => {\n    if (process.env.NODE_ENV === 'development') {\n        // cache bust in local dev scenarios without passing build #\n        res.setHeader('Cache-Control', 'max-age=1');\n    }\n    next();\n};\n\nexport const getPlatformSettingsSync = () => {\n    const platFormSettings = safeReadJsonSync<IPlatformSettings>(\n        resolve(keystonePaths.KEYSTONE_APP_SETTINGS_DIR, `platform.settings.json`)\n    );\n    return platFormSettings ? platFormSettings : {};\n};\n\nexport const registerAttributeRenderers = (\n    instanceTelemetryClient: InternalTelemetry,\n    moduleInstanceTelemetryClient: Telemetry,\n    requestContext: IRequestContext\n) => {\n    // If enable data analytics is turned on, update telemetry objects accordingly\n    instanceTelemetryClient.enableDataAnalytics(requestContext.features.enableDataAnalytics);\n    moduleInstanceTelemetryClient.enableDataAnalytics(requestContext.features.enableDataAnalytics);\n\n    // Register the exp attribute renderers\n    instanceTelemetryClient.registerAttributeRenderer(expAttributeRenderer);\n    moduleInstanceTelemetryClient.registerAttributeRenderer(expAttributeRenderer);\n};\n\nexport const setTelemetryObject = (appInsightsTelemetryClient: TelemetryClient) => {\n    let hasRun = false;\n    return (req: Request, res: Response, next: NextFunction) => {\n        const requestContext = parseRequest(req);\n        const { isDebug } = requestContext.params;\n        const options = { isDebug };\n        // initialize the static telemetry object only once\n        if (!hasRun) {\n            hasRun = true;\n            StaticTelemetry.registerTraceLogger({ traceLogger: new AppInsightsNodeLogger(appInsightsTelemetryClient) });\n        }\n\n        const instanceTelemetryClient = new InternalTelemetry();\n        const moduleInstanceTelemetryClient = new Telemetry();\n\n        instanceTelemetryClient.registerTraceLogger({ traceLogger: new AppInsightsNodeLogger(appInsightsTelemetryClient) });\n\n        if (process.env.NODE_ENV === 'development') {\n            instanceTelemetryClient.registerTraceLogger({ traceLogger: GenericConsoleLogger, options });\n            moduleInstanceTelemetryClient.registerTraceLogger({ traceLogger: GenericConsoleLogger, options });\n        }\n\n        if (isDebug) {\n            instanceTelemetryClient.registerTraceLogger({ traceLogger: new RetainLogger(), name: GLIMPSE_LOGGER_NAME });\n\n            const pageLogger = new PageLogger();\n            moduleInstanceTelemetryClient.registerTraceLogger({ traceLogger: pageLogger, options, name: PAGE_LOGGER_NAME });\n            instanceTelemetryClient.registerTraceLogger({ traceLogger: pageLogger, options, name: PAGE_LOGGER_NAME });\n        }\n\n        res.locals.telemetry = instanceTelemetryClient;\n        res.locals.moduleTelemetry = moduleInstanceTelemetryClient;\n        next();\n    };\n};\n\n/**\n * Page render method, used on pageResponse and request context have been parsed/calulated\n */\nexport const renderPage = (req: Request, res: Response, next: NextFunction, { clientStats }: { clientStats: {} }) => {\n    try {\n        return renderDefaultRouter(req, res, next, res.locals.pageResponse, res.locals.requestContext, { clientStats });\n    } catch (e) {\n        handleServerException(res, 'Server Exception', e, res.locals.telemetry);\n    }\n};\n\n/**\n * Helper function to await a promise and wrap in try/catch - used for getting channel configuration. Also sets the\n * `res.local.getOrgUnitConfigurationAsyncResult` property with the actual channel config so it can be retrieved as part\n * of this request\n * @param promiseToAwait\n */\nexport const awaitChannelConfigPromise = async (res: Response, promiseToAwait: AsyncResult<ChannelConfiguration>, telemetry: Telemetry) => {\n    try {\n        res.locals.getOrgUnitConfigurationAsyncResult = await promiseToAwait;\n    } catch (e) {\n        if (telemetry && typeof telemetry.log === 'function') {\n            telemetry.log(LogLevel.Error, 'error in getting channel configuration', { exception: e });\n        }\n    }\n};\n\n/**\n * Logs an error to application insights and terminates the request\n * @param res               - Express response object\n * @param httpErrorCode     - Http Error code\n * @param message           - Http message\n * @param telemetry         - current internal telemetry\n * @param error             - optional Error object\n */\nconst sendErrorAndLogToTelemetry = (res: Response, httpErrorCode: number, message: string, telemetry: InternalTelemetry, error?: Error) => {\n    telemetry.log(LogLevel.Error, message, { exception: error });\n    res.status(httpErrorCode).send(message);\n};\n\n/**\n * Middleware that performs validation logic based on the type of page being rendered\n * @param pageResponse The page response\n */\n// tslint:disable-next-line:max-func-body-length cyclomatic-complexity\nexport const validateRouteAndChannelConfig = async (_req: Request, res: Response, next: NextFunction) => {\n    const requestContext: IRequestContext = res.locals.requestContext;\n\n    // re-use the request cache for any lookups we do here\n    res.locals.requestCache = new RequestCache();\n\n    const actionContext = new ActionContext({\n        id: 'Validation Context',\n        requestContext: requestContext,\n        requestCache: res.locals.requestCache,\n        telemetry: res.locals.telemetry,\n        // tslint:disable-next-line:no-any\n        appCache: (<any>msdyn365Commerce).getAppCache(requestContext)\n    });\n\n    // kick off the call but dont await it yet\n    const getOrgUnitConfigurationAsyncPromise = getOrgUnitConfigurationAsync({ callerContext: actionContext });\n\n    if (!requestContext.urlTokens.pageType) {\n        // we always look up channel config\n        await awaitChannelConfigPromise(res, getOrgUnitConfigurationAsyncPromise, res.locals.telemetry);\n        return next();\n    }\n\n    // Validate the page has a page type\n    const internalTelemetry = <InternalTelemetry>res.locals.telemetry;\n    switch (requestContext.urlTokens.pageType.toLowerCase()) {\n        // PDP Route Validation\n        case PDP_PAGE_NAME:\n            // @ts-ignore: recordId URLToken not yet typed\n            if (requestContext.urlTokens.recordId) {\n                try {\n                    // tslint:disable-next-line:prefer-const\n                    let product = await getByIdAsync(\n                        { callerContext: actionContext },\n                        // @ts-ignore: recordId URLToken not yet typed\n                        +requestContext.urlTokens.recordId,\n                        requestContext.apiSettings.channelId\n                    );\n\n                    // Array Bug\n                    product = Array.isArray(product) ? product[0] : product;\n                    if (!(product instanceof Error) && product && product.RecordId) {\n                        // await only if we have a successful result\n                        await awaitChannelConfigPromise(res, getOrgUnitConfigurationAsyncPromise, res.locals.telemetry);\n                        return next();\n                    }\n                    // Bad Product Response from Retail Server\n                    sendErrorAndLogToTelemetry(res, 404, 'Invalid PDP Route: Product Not Found.', internalTelemetry);\n                    return;\n                } catch (error) {\n                    sendErrorAndLogToTelemetry(res, 500, 'Invalid PDP Route: Error Validating Product', internalTelemetry, error);\n                    return;\n                }\n            }\n            sendErrorAndLogToTelemetry(res, 404, 'Invalid PDP Route: No ProductId Detected', internalTelemetry);\n            return;\n        // Category Route validation\n        case CATEGORY_PAGE_NAME:\n            // @ts-ignore: recordId URLToken not yet typed\n            const activeCategoryRecordId = +requestContext.urlTokens.recordId;\n            if (activeCategoryRecordId) {\n                try {\n                    const requestedCategory: Category | Category[] | undefined = await getCategoriesAsync(\n                        { callerContext: actionContext },\n                        requestContext.apiSettings.channelId\n                    )\n                        .then(async (response: Category[]) => {\n                            const result = response.find(category => {\n                                if (category.RecordId) {\n                                    return category.RecordId === activeCategoryRecordId;\n                                }\n                                return false;\n                            });\n                            if (result) {\n                                // await only if we have a successful result\n                                return awaitChannelConfigPromise(res, getOrgUnitConfigurationAsyncPromise, res.locals.telemetry).then(\n                                    () => {\n                                        return result;\n                                    }\n                                );\n                            }\n                        })\n                        .catch(e => {\n                            res.locals.telemetry.log(LogLevel.Error, `Error validating category`, { exception: e });\n                            throw e;\n                        });\n\n                    if (!requestedCategory) {\n                        sendErrorAndLogToTelemetry(res, 404, 'Invalid Category Route: Category Not Found', internalTelemetry);\n                        return;\n                    }\n                    return next();\n                } catch (e) {\n                    sendErrorAndLogToTelemetry(res, 500, 'Invalid Category Route: Error Validating Category', internalTelemetry, e);\n                    return;\n                }\n            }\n            sendErrorAndLogToTelemetry(res, 404, 'Invalid Category Route: No Categories Found In URL', internalTelemetry);\n            return;\n        // List Route Validation\n        // Strictly Prop Checks: If valid data is provided by CMS, route is good\n        case LIST_PAGE_NAME:\n            const listData = requestContext.pageData.list;\n            if (listData && listData.content && listData.content.items && listData.content.title && listData._id) {\n                // await only if we have a successful result\n                return awaitChannelConfigPromise(res, getOrgUnitConfigurationAsyncPromise, res.locals.telemetry).then(() => {\n                    return next();\n                });\n            }\n            sendErrorAndLogToTelemetry(res, 404, 'Invalid List Route: List Data Invalid', internalTelemetry);\n            return;\n        default:\n            return awaitChannelConfigPromise(res, getOrgUnitConfigurationAsyncPromise, res.locals.telemetry).then(() => {\n                return next();\n            });\n    }\n};\n\n/**\n * Checks if a proxy is available while in debug mode and routes all outgoing requests to proxy if possible\n * @param req The Request Object\n * @param res The Response Object\n * @param next The next function\n */\nexport const detectProxy = (req: Request, res: Response, next: NextFunction) => {\n    // Only allow proxy rerouting when in debug mode\n    if (process.env.NODE_ENV === 'development' && req.query.debug) {\n        axios\n            .get(`${DEFAULT_PROXY_HOST}:${DEFAULT_PROXY_PORT}`)\n            .then((response: AxiosResponse) => {\n                if (response.status === 200) {\n                    console.log('Debug Proxy Detected and Enabled for External Requests');\n\n                    // This Env variable allows to go through proxy\n                    // ONLY ENABLE THIS IN DEBUG\n                    process.env.NODE_TLS_REJECT_UNAUTHORIZED = '0';\n                    process.env.NODE_USE_DEBUG_PROXY = '1';\n                }\n                next();\n            })\n            .catch((error: AxiosError) => {\n                // Reset to defaults if no proxy is detected\n                process.env.NODE_TLS_REJECT_UNAUTHORIZED = '1';\n                process.env.NODE_USE_DEBUG_PROXY = '0';\n                next();\n            });\n    } else {\n        // Reset to defaults if debug flag turned off\n        process.env.NODE_TLS_REJECT_UNAUTHORIZED = '1';\n        process.env.NODE_USE_DEBUG_PROXY = '0';\n        next();\n    }\n};\n\n/**\n * Creates and returns the app cache settings to be used to cache app and key vault secrets\n */\nexport const getAppSecretsCacheSetings = (): ICacheSettings => {\n    const appSecretsCacheSettings: ICacheSettings = { ttlInSeconds: {}, ttrInSeconds: {} };\n    if (appSecretsCacheSettings.ttlInSeconds) {\n        appSecretsCacheSettings.ttlInSeconds[ACCESS_TOKEN_SECRET_CACHE_TYPE] = DEFAULT_ACCESS_TOKEN_SECRET_TTL;\n        appSecretsCacheSettings.ttlInSeconds[KEY_VAULT_SECRET_CACHE_TYPE] = DEFAULT_KV_SECRET_TTL;\n    }\n\n    if (appSecretsCacheSettings.ttrInSeconds) {\n        appSecretsCacheSettings.ttrInSeconds[ACCESS_TOKEN_SECRET_CACHE_TYPE] = DEFAULT_ACCESS_TOKEN_SECRET_TTR;\n        appSecretsCacheSettings.ttrInSeconds[KEY_VAULT_SECRET_CACHE_TYPE] = DEFAULT_KV_SECRET_TTR;\n    }\n    return appSecretsCacheSettings;\n};\n\nexport const getExperimentsCacheSettings = (): ICacheSettings => {\n    const experimentsCacheSettings: ICacheSettings =\n        (experimentsSettings && experimentsSettings.experimentation && experimentsSettings.experimentation.cacheConfig) || {};\n    if (experimentsCacheSettings.ttlInSeconds) {\n        const upperCasedTTLSettings = {};\n        Object.keys(experimentsCacheSettings.ttlInSeconds).forEach(entity => {\n            // @ts-ignore: TS Compiler not recognizing if check correctly\n            upperCasedTTLSettings[entity.toUpperCase()] = experimentsCacheSettings.ttlInSeconds[entity];\n        });\n\n        experimentsCacheSettings.ttlInSeconds = upperCasedTTLSettings;\n    }\n\n    if (experimentsCacheSettings.ttrInSeconds) {\n        const upperCasedTTRSettings = {};\n        Object.keys(experimentsCacheSettings.ttrInSeconds).forEach(entity => {\n            // @ts-ignore: TS Compiler not recognizing if check correctly\n            upperCasedTTRSettings[entity.toUpperCase()] = experimentsCacheSettings.ttrInSeconds[entity];\n        });\n\n        experimentsCacheSettings.ttrInSeconds = upperCasedTTRSettings;\n    }\n    // make sure ttrInSeconds and ttlInSeconds property exist in cache setting with default value\n    experimentsCacheSettings.ttlInSeconds = experimentsCacheSettings.ttlInSeconds ? experimentsCacheSettings.ttlInSeconds : {};\n    experimentsCacheSettings.ttrInSeconds = experimentsCacheSettings.ttrInSeconds ? experimentsCacheSettings.ttrInSeconds : {};\n\n    experimentsCacheSettings.ttlInSeconds[EXPERIMENTATION_CACHE_TYPE] =\n        experimentsCacheSettings.ttlInSeconds[EXPERIMENTATION_CACHE_TYPE] || DEFAULT_EXPERIMENT_TTL;\n    experimentsCacheSettings.ttrInSeconds[EXPERIMENTATION_CACHE_TYPE] =\n        experimentsCacheSettings.ttrInSeconds[EXPERIMENTATION_CACHE_TYPE] || DEFAULT_EXPERIMENT_TTR;\n\n    experimentsCacheSettings.ttlInSeconds[EXPERIMENTATION_DATAFILE_CACHE_TYPE] =\n        experimentsCacheSettings.ttlInSeconds[EXPERIMENTATION_DATAFILE_CACHE_TYPE] || DEFAULT_EXPERIMENT_DATAFILE_TTL;\n    experimentsCacheSettings.ttrInSeconds[EXPERIMENTATION_DATAFILE_CACHE_TYPE] =\n        experimentsCacheSettings.ttrInSeconds[EXPERIMENTATION_DATAFILE_CACHE_TYPE] || DEFAULT_EXPERIMENT_DATAFILE_TTR;\n    return experimentsCacheSettings;\n};\n\nexport const getCacheSettings = (): ICacheSettings => {\n    const cacheSettings: ICacheSettings = _merge({}, defaultCacheSettings, overrideCacheSettings);\n\n    if (cacheSettings.ttlInSeconds) {\n        const upperCasedTTLSettings = {};\n        Object.keys(cacheSettings.ttlInSeconds).forEach(entity => {\n            // @ts-ignore: TS Compiler not recognizing if check correctly\n            upperCasedTTLSettings[entity.toUpperCase()] = cacheSettings.ttlInSeconds[entity];\n        });\n\n        cacheSettings.ttlInSeconds = upperCasedTTLSettings;\n    }\n\n    if (cacheSettings.ttrInSeconds) {\n        const upperCasedTTRSettings = {};\n        Object.keys(cacheSettings.ttrInSeconds).forEach(entity => {\n            // @ts-ignore: TS Compiler not recognizing if check correctly\n            upperCasedTTRSettings[entity.toUpperCase()] = cacheSettings.ttrInSeconds[entity];\n        });\n\n        cacheSettings.ttrInSeconds = upperCasedTTRSettings;\n    }\n    // make sure ttrInSeconds and ttlInSeconds property exist in cache setting\n    cacheSettings.ttlInSeconds = cacheSettings.ttlInSeconds ? cacheSettings.ttlInSeconds : {};\n    cacheSettings.ttrInSeconds = cacheSettings.ttrInSeconds ? cacheSettings.ttrInSeconds : {};\n    return cacheSettings;\n};\n\nexport const getRequestUrl = (res: Response): URL | undefined => {\n    try {\n        if (\n            res.locals &&\n            res.locals.pageResponse &&\n            res.locals.pageResponse.renderingContext &&\n            res.locals.pageResponse.renderingContext.requestUrl\n        ) {\n            return new URL(res.locals.pageResponse.renderingContext.requestUrl);\n        }\n        // tslint:disable-next-line:no-empty\n    } catch {}\n\n    return undefined;\n};\n\nexport const sanitizeUrlForLogging = (requestUrl: URL | undefined): string => {\n    if (!requestUrl) {\n        return '';\n    }\n    if (requestUrl.pathname.endsWith('.p')) {\n        return `${requestUrl.hostname}/~.p`;\n    } else if (requestUrl.pathname.endsWith('.c')) {\n        return `${requestUrl.hostname}~/.c`;\n    }\n\n    return requestUrl.href;\n};\n\nexport const resolveRouteInformation = (res: Response, requestUrl: URL | undefined): string | undefined => {\n    const pageType = res.locals.requestContext.urlTokens && res.locals.requestContext.urlTokens.pageType;\n    const pageTypeLower = !!pageType ? pageType.toLowerCase() : undefined;\n\n    const originalUrl = requestUrl ? requestUrl.href : '';\n\n    if (originalUrl.endsWith('.p') || pageTypeLower === PDP_PAGE_NAME) {\n        return 'PRODUCT_ROUTE';\n    } else if (originalUrl.endsWith('.c') || pageTypeLower === CATEGORY_PAGE_NAME) {\n        return 'CATEGORY_ROUTE';\n    } else {\n        const routeMap: IDictionary<object> =\n            res.locals.pageResponse && res.locals.pageResponse.appContext && res.locals.pageResponse.appContext.routes;\n\n        if (routeMap && requestUrl && requestUrl.pathname) {\n            const routeUrl = requestUrl.pathname.toLowerCase();\n            for (const key of Object.keys(routeMap)) {\n                const routeDestinationUrl: string = (routeMap[key][DESTINATIONURL] || '').toLowerCase();\n                if (routeUrl === routeDestinationUrl) {\n                    // Processing request for {route} route\n                    return key;\n                }\n            }\n        }\n\n        return 'UNKNOWN_ROUTE';\n    }\n};\n\nexport const getCheckoutRoute = (res: Response): string | undefined => {\n    const routeMap: IDictionary<object> =\n        res.locals.pageResponse && res.locals.pageResponse.appContext && res.locals.pageResponse.appContext.routes;\n\n    if (routeMap && routeMap.checkout && routeMap.checkout[DESTINATIONURL]) {\n        return routeMap.checkout[DESTINATIONURL];\n    }\n\n    return 'CHECKOUT_ROUTE_UNAVAILABLE';\n};\n"],"sourceRoot":""},"metadata":{},"sourceType":"module"}