{"ast":null,"code":"import _classCallCheck from\"@babel/runtime/helpers/esm/classCallCheck\";import _createClass from\"@babel/runtime/helpers/esm/createClass\";export var PlayerUtility=/*#__PURE__*/function(){function PlayerUtility(){_classCallCheck(this,PlayerUtility);}_createClass(PlayerUtility,null,[{key:\"ajax\",value:function ajax(url,done,failed){if(!url){return;}var ajaxRequest=null;if(window.XDomainRequest){ajaxRequest=new XDomainRequest();ajaxRequest.onload=function(){done&&done(ajaxRequest.responseText);PlayerUtility._removeFromPendingAjaxRequests(ajaxRequest);};PlayerUtility.pendingAjaxRequests.push(ajaxRequest);}else if(window.XMLHttpRequest){ajaxRequest=new XMLHttpRequest();ajaxRequest.onreadystatechange=function(){if(ajaxRequest.readyState===4){var result=null;if(ajaxRequest.status===200){result=ajaxRequest.responseText;}done&&done(result);}else{}};}if(ajaxRequest){ajaxRequest.ontimeout=ajaxRequest.onerror=function(){PlayerUtility._removeFromPendingAjaxRequests(ajaxRequest);failed&&failed();};ajaxRequest.open('GET',url,true);ajaxRequest.send();}}},{key:\"_removeFromPendingAjaxRequests\",value:function _removeFromPendingAjaxRequests(obj){var index=-1;for(var i=0;i<PlayerUtility.pendingAjaxRequests.length;i++){if(obj===PlayerUtility.pendingAjaxRequests[i]){index=i;break;}}if(index>=0){PlayerUtility.pendingAjaxRequests.splice(index,1);}}}]);return PlayerUtility;}();PlayerUtility.pendingAjaxRequests=[];","map":{"version":3,"sources":["videoplayer/components/utilities/player-utility.ts"],"names":[],"mappings":"wIAuBA,UAAa,CAAA,aAAb,wJAsBsB,GAtBtB,CAsBmC,IAtBnC,CAsBmD,MAtBnD,CAsBoE,CAChE,GAAI,CAAC,GAAL,CAAU,CACN,OACH,CAGD,GAAI,CAAA,WAAW,CAAQ,IAAvB,CAGA,GAAI,MAAM,CAAC,cAAX,CAA2B,CACvB,WAAW,CAAG,GAAI,CAAA,cAAJ,EAAd,CAEA,WAAW,CAAC,MAAZ,CAAqB,UAAK,CACtB,IAAI,EAAI,IAAI,CAAC,WAAW,CAAC,YAAb,CAAZ,CACA,aAAa,CAAC,8BAAd,CAA6C,WAA7C,EACH,CAHD,CAQA,aAAa,CAAC,mBAAd,CAAkC,IAAlC,CAAuC,WAAvC,EACH,CAZD,IAYO,IAAI,MAAM,CAAC,cAAX,CAA2B,CAC9B,WAAW,CAAG,GAAI,CAAA,cAAJ,EAAd,CAEA,WAAW,CAAC,kBAAZ,CAAiC,UAAK,CAClC,GAAI,WAAW,CAAC,UAAZ,GAA2B,CAA/B,CAAkC,CAE9B,GAAI,CAAA,MAAM,CAAQ,IAAlB,CACA,GAAI,WAAW,CAAC,MAAZ,GAAuB,GAA3B,CAAgC,CAC5B,MAAM,CAAG,WAAW,CAAC,YAArB,CACH,CACD,IAAI,EAAI,IAAI,CAAC,MAAD,CAAZ,CACH,CAPD,IAOO,CAGN,CACJ,CAZD,CAaH,CAGD,GAAI,WAAJ,CAAiB,CACT,WAAW,CAAC,SAAZ,CAAwB,WAAW,CAAC,OAAZ,CAAsB,UAAK,CAC/C,aAAa,CAAC,8BAAd,CAA6C,WAA7C,EACA,MAAM,EAAI,MAAM,EAAhB,CACH,CAHD,CAIA,WAAW,CAAC,IAAZ,CAAiB,KAAjB,CAAwB,GAAxB,CAA6B,IAA7B,EACA,WAAW,CAAC,IAAZ,GACH,CACJ,CAtEL,sFAgFiD,GAhFjD,CAgFyD,CAErD,GAAI,CAAA,KAAK,CAAG,CAAC,CAAb,CACA,IAAK,GAAI,CAAA,CAAC,CAAG,CAAb,CAAgB,CAAC,CAAG,aAAa,CAAC,mBAAd,CAAkC,MAAtD,CAA8D,CAAC,EAA/D,CAAmE,CAC/D,GAAI,GAAG,GAAK,aAAa,CAAC,mBAAd,CAAkC,CAAlC,CAAZ,CAAkD,CAC9C,KAAK,CAAG,CAAR,CACA,MACH,CACJ,CACD,GAAI,KAAK,EAAI,CAAb,CAAgB,CACZ,aAAa,CAAC,mBAAd,CAAkC,MAAlC,CAAyC,KAAzC,CAAgD,CAAhD,EACH,CACJ,CA5FD,6BAUkB,aAAA,CAAA,mBAAA,CAA2B,EAA3B","sourcesContent":["/**\n * @name - window\n * @description - typescript declaration for window object\n * @type {object}\n */\n// tslint:disable-next-line: no-any\ndeclare var  window: any;\n\n/**\n * @name - XDomainRequest\n * @description - typescript declaration for XDomainRequest object\n * @type {object}\n */\n// tslint:disable-next-line: no-any\ndeclare var XDomainRequest: any;\n\n/**\n * PlayerUtilities class\n * @classdesc - The PlayerOptions class is used to pass player options settings to the player.\n *              It supplies default values which can be overridden via overrides passed to the constructor.\n * @export\n */\n// tslint:disable-next-line: no-unnecessary-class\nexport class PlayerUtility {\n\n    /**\n     * @name - pendingAjaxRequests\n     * @description -  array to hold pending ajax requests.\n     * @private\n     * @static\n     * @returns {any}\n     */\n    // tslint:disable-next-line: no-any\n   private static pendingAjaxRequests: any = [];\n\n    /**\n     * @name - ajax\n     * @description -  Gets request data using ajax call.\n     * @private\n     * @static\n     * @param {string} url - Url from where to fetch data.\n     * @param {Function} done - On success callback function.\n     * @param {Function} failed - On failed callback function.\n     * @returns {void}\n     */\n   public static ajax(url: string, done: Function, failed?: Function): void {\n    if (!url) {\n        return;\n    }\n\n    // tslint:disable-next-line: no-any\n    let ajaxRequest: any = null;\n\n    // for IE 9 and below use XDomainRequest\n    if (window.XDomainRequest) {\n        ajaxRequest = new XDomainRequest();\n\n        ajaxRequest.onload = () => {\n            done && done(ajaxRequest.responseText);\n            PlayerUtility._removeFromPendingAjaxRequests(ajaxRequest);\n        };\n\n        // IE8 and IE9 have a bug where garbage collector will clear XDomainRequest object\n        // before the call is completed. Thus add a reference to the object so that request\n        // is not aborted by garbage collector.\n        PlayerUtility.pendingAjaxRequests.push(ajaxRequest);\n    } else if (window.XMLHttpRequest) {\n        ajaxRequest = new XMLHttpRequest();\n\n        ajaxRequest.onreadystatechange = () => {\n            if (ajaxRequest.readyState === 4) {\n                // tslint:disable-next-line: no-any\n                let result: any = null;\n                if (ajaxRequest.status === 200) {\n                    result = ajaxRequest.responseText;\n                }\n                done && done(result);\n            } else {\n                // The following console.log useful for debugging and is left in commented out for easy restoration.\n                // console.log('Localization-helper: readystate(' + xhttp.readyState + ') status(' + xhttp.status + ')');\n            }\n        };\n    }\n\n    // attach common event handlers and make the request.\n    if (ajaxRequest) {\n            ajaxRequest.ontimeout = ajaxRequest.onerror = () =>  {\n                PlayerUtility._removeFromPendingAjaxRequests(ajaxRequest);\n                failed && failed();\n            };\n            ajaxRequest.open('GET', url, true);\n            ajaxRequest.send();\n        }\n    }\n\n    /**\n     * @name - removeFromPendingAjaxRequests\n     * @description - removes object from array to hold pending ajax requests.\n     * @private\n     * @static\n     * @returns {any}\n     */\n    // tslint:disable-next-line: no-any\n   private static _removeFromPendingAjaxRequests(obj: any): void {\n    // when the call is completed remove it from the array\n    let index = -1;\n    for (let i = 0; i < PlayerUtility.pendingAjaxRequests.length; i++) {\n        if (obj === PlayerUtility.pendingAjaxRequests[i]) {\n            index = i;\n            break;\n        }\n    }\n    if (index >= 0) {\n        PlayerUtility.pendingAjaxRequests.splice(index, 1);\n    }\n}\n}"],"sourceRoot":"./src/"},"metadata":{},"sourceType":"module"}