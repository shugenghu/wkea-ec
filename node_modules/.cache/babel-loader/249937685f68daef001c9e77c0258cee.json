{"ast":null,"code":"import{Button}from'@msdyn365-commerce-modules/utilities';import{AddOrderTemplateToCartComponent,RenameOrderTemplateComponent}from'@msdyn365-commerce/components';import*as React from'react';export const OrderTemplateActionsView=props=>{const{resources}=props;const{deleteTemplateButtonText}=resources;const removeOrderAction=event=>{return _removeOrderTemplate(props);};return{addTemplateToBag:_getOrderTemplateAddToCartDialog(props),renameTemplate:_getOrderTemplateRenameControl(props),removeTemplate:/*#__PURE__*/React.createElement(Button,{className:'ms-order-template-action-bar__delete-template-button',onClick:removeOrderAction},deleteTemplateButtonText)};};const _removeOrderTemplate=props=>{const{data:{orderTemplate},handlers}=props;const{onRemoveTemplate}=handlers;if(onRemoveTemplate){onRemoveTemplate(orderTemplate.productList.Id);}};const _getOrderTemplateAddToCartDialog=props=>{const{data:{orderTemplate},typeName,id,context,telemetryContent,resources}=props;const{addTemplateToBagButtonText,closeWindowButtonText,addToCartFailureMessage,addToCartSuccessMessage,addToCartProcessMessage,linesAddedToCartDialogResources}=resources;const dialogStrings={closeWindowButtonText:closeWindowButtonText,addToCartFailureMessage:addToCartFailureMessage,addToCartSuccessMessage:addToCartSuccessMessage,addToCartProcessMessage:addToCartProcessMessage,linesAddedToCartDialogResources:linesAddedToCartDialogResources};return/*#__PURE__*/React.createElement(AddOrderTemplateToCartComponent,{context:context,id:id,typeName:typeName,data:{orderTemplate},className:'',addToCartText:addTemplateToBagButtonText,dialogStrings:dialogStrings,telemetryContent:telemetryContent});};const _getOrderTemplateRenameControl=props=>{const{renameOrderTemplateDialogStrings,resources,context,handlers}=props;return/*#__PURE__*/React.createElement(RenameOrderTemplateComponent,{onRenameTemplate:handlers.onRenameTemplate,className:'msc-order-template-name-dialog',context:context,id:props.id,data:{orderTemplate:props.data.orderTemplate.productList},typeName:props.typeName,renameOrderTemplateDialogStrings:renameOrderTemplateDialogStrings,renameOrderTemplateButtonText:resources.renameTemplateButtonText});};","map":{"version":3,"sources":["modules/order-template/components/order-template-actions.tsx"],"names":[],"mappings":"AAEA,OAAS,MAAT,KAA0C,sCAA1C,CACA,OAAS,+BAAT,CAA+G,4BAA/G,KAAmJ,+BAAnJ,CAGA,MAAO,GAAK,CAAA,KAAZ,KAAuB,OAAvB,CAgCA,MAAO,MAAM,CAAA,wBAAwB,CAAI,KAAD,EAAsE,CAC1G,KAAM,CAAE,SAAF,EAAgB,KAAtB,CACA,KAAM,CAAE,wBAAF,EAA+B,SAArC,CAEA,KAAM,CAAA,iBAAiB,CAAI,KAAD,EAAyC,CAC/D,MAAO,CAAA,oBAAoB,CAAC,KAAD,CAA3B,CACH,CAFD,CAIA,MAAO,CACH,gBAAgB,CAAE,gCAAgC,CAAC,KAAD,CAD/C,CAEH,cAAc,CAAE,8BAA8B,CAAC,KAAD,CAF3C,CAGH,cAAc,cACV,KAAA,CAAA,aAAA,CAAC,MAAD,CAAO,CAAC,SAAS,CAAC,sDAAX,CAAkE,OAAO,CAAE,iBAA3E,CAAP,CACK,wBADL,CAJD,CAAP,CASH,CAjBM,CAmBP,KAAM,CAAA,oBAAoB,CAAI,KAAD,EAA4C,CACrE,KAAM,CAAE,IAAI,CAAE,CAAE,aAAF,CAAR,CAA2B,QAA3B,EAAwC,KAA9C,CACA,KAAM,CAAE,gBAAF,EAAuB,QAA7B,CAEA,GAAI,gBAAJ,CAAsB,CAClB,gBAAgB,CAAC,aAAa,CAAC,WAAd,CAA0B,EAA3B,CAAhB,CACH,CACJ,CAPD,CASA,KAAM,CAAA,gCAAgC,CAAI,KAAD,EAAuD,CAC5F,KAAM,CAAE,IAAI,CAAE,CAAE,aAAF,CAAR,CAA2B,QAA3B,CAAqC,EAArC,CAAyC,OAAzC,CAAkD,gBAAlD,CAAoE,SAApE,EAAkF,KAAxF,CACA,KAAM,CACF,0BADE,CAEF,qBAFE,CAGF,uBAHE,CAIF,uBAJE,CAKF,uBALE,CAMF,+BANE,EAOF,SAPJ,CASA,KAAM,CAAA,aAAa,CAAG,CAClB,qBAAqB,CAAE,qBADL,CAElB,uBAAuB,CAAE,uBAFP,CAGlB,uBAAuB,CAAE,uBAHP,CAIlB,uBAAuB,CAAE,uBAJP,CAKlB,+BAA+B,CAAE,+BALf,CAAtB,CAQA,mBACI,KAAA,CAAA,aAAA,CAAC,+BAAD,CAAgC,CAC5B,OAAO,CAAE,OADmB,CAE5B,EAAE,CAAE,EAFwB,CAG5B,QAAQ,CAAE,QAHkB,CAI5B,IAAI,CAAE,CAAC,aAAD,CAJsB,CAK5B,SAAS,CAAC,EALkB,CAM5B,aAAa,CAAE,0BANa,CAO5B,aAAa,CAAE,aAPa,CAQ5B,gBAAgB,CAAE,gBARU,CAAhC,CADJ,CAYH,CA/BD,CAiCA,KAAM,CAAA,8BAA8B,CAAI,KAAD,EAAuD,CAC1F,KAAM,CAAE,gCAAF,CAAoC,SAApC,CAA+C,OAA/C,CAAwD,QAAxD,EAAqE,KAA3E,CACA,mBACI,KAAA,CAAA,aAAA,CAAC,4BAAD,CAA6B,CACzB,gBAAgB,CAAE,QAAQ,CAAC,gBADF,CAEzB,SAAS,CAAE,gCAFc,CAGzB,OAAO,CAAE,OAHgB,CAIzB,EAAE,CAAE,KAAK,CAAC,EAJe,CAKzB,IAAI,CAAE,CAAC,aAAa,CAAE,KAAK,CAAC,IAAN,CAAW,aAAX,CAAyB,WAAzC,CALmB,CAMzB,QAAQ,CAAE,KAAK,CAAC,QANS,CAOzB,gCAAgC,CAAE,gCAPT,CAQzB,6BAA6B,CAAE,SAAS,CAAC,wBARhB,CAA7B,CADJ,CAYH,CAdD","sourcesContent":["\nimport { OrderTemplate } from '@msdyn365-commerce-modules/retail-actions';\nimport { Button, ITelemetryContent } from '@msdyn365-commerce-modules/utilities';\nimport { AddOrderTemplateToCartComponent, ILinesAddedToCartDialogResources, IOrderTemplateNameDialogResources, RenameOrderTemplateComponent } from '@msdyn365-commerce/components';\nimport { IComponentProps, ICoreContext } from '@msdyn365-commerce/core';\nimport { ProductList } from '@msdyn365-commerce/retail-proxy';\nimport * as React from 'react';\n\nexport interface IOrderTemplateActionsData {\n    orderTemplate: OrderTemplate;\n}\n\nexport interface IOrderTemplateActionsProps extends IComponentProps<IOrderTemplateActionsData>  {\n    context: ICoreContext;\n    telemetryContent?: ITelemetryContent;\n    handlers: {\n        onRemoveTemplate(orderTemplateId: string): void;\n        onRenameTemplate(orderTemplate: ProductList): Promise<void>;\n    };\n    renameOrderTemplateDialogStrings: IOrderTemplateNameDialogResources;\n    resources: {\n        addTemplateToBagButtonText: string;\n        renameTemplateButtonText: string;\n        deleteTemplateButtonText: string;\n        closeWindowButtonText: string;\n        addToCartFailureMessage: string;\n        addToCartSuccessMessage: string;\n        addToCartProcessMessage: string;\n        linesAddedToCartDialogResources: ILinesAddedToCartDialogResources;\n    };\n}\n\nexport interface IOrderTemplateActionsViewProps {\n    addTemplateToBag: React.ReactNode;\n    renameTemplate?: React.ReactNode;\n    removeTemplate?: React.ReactNode;\n}\n\nexport const OrderTemplateActionsView = (props: IOrderTemplateActionsProps): IOrderTemplateActionsViewProps => {\n    const { resources } = props;\n    const { deleteTemplateButtonText } = resources;\n\n    const removeOrderAction = (event: React.MouseEvent<HTMLElement>) => {\n        return _removeOrderTemplate(props);\n    };\n\n    return {\n        addTemplateToBag: _getOrderTemplateAddToCartDialog(props),\n        renameTemplate: _getOrderTemplateRenameControl(props),\n        removeTemplate: (\n            <Button className='ms-order-template-action-bar__delete-template-button' onClick={removeOrderAction}>\n                {deleteTemplateButtonText}\n            </Button>\n        )\n    };\n};\n\nconst _removeOrderTemplate = (props: IOrderTemplateActionsProps): void => {\n    const { data: { orderTemplate }, handlers } = props;\n    const { onRemoveTemplate } = handlers;\n\n    if (onRemoveTemplate) {\n        onRemoveTemplate(orderTemplate.productList.Id);\n    }\n};\n\nconst _getOrderTemplateAddToCartDialog = (props: IOrderTemplateActionsProps): React.ReactNode => {\n    const { data: { orderTemplate }, typeName, id, context, telemetryContent, resources } = props;\n    const {\n        addTemplateToBagButtonText,\n        closeWindowButtonText,\n        addToCartFailureMessage,\n        addToCartSuccessMessage,\n        addToCartProcessMessage,\n        linesAddedToCartDialogResources\n    } = resources;\n\n    const dialogStrings = {\n        closeWindowButtonText: closeWindowButtonText,\n        addToCartFailureMessage: addToCartFailureMessage,\n        addToCartSuccessMessage: addToCartSuccessMessage,\n        addToCartProcessMessage: addToCartProcessMessage,\n        linesAddedToCartDialogResources: linesAddedToCartDialogResources\n    };\n\n    return (\n        <AddOrderTemplateToCartComponent\n            context={context}\n            id={id}\n            typeName={typeName}\n            data={{orderTemplate}}\n            className=''\n            addToCartText={addTemplateToBagButtonText}\n            dialogStrings={dialogStrings}\n            telemetryContent={telemetryContent}\n        />\n    );\n};\n\nconst _getOrderTemplateRenameControl = (props: IOrderTemplateActionsProps): React.ReactNode => {\n    const { renameOrderTemplateDialogStrings, resources, context, handlers } = props;\n    return (\n        <RenameOrderTemplateComponent\n            onRenameTemplate={handlers.onRenameTemplate}\n            className={'msc-order-template-name-dialog'}\n            context={context}\n            id={props.id}\n            data={{orderTemplate: props.data.orderTemplate.productList}}\n            typeName={props.typeName}\n            renameOrderTemplateDialogStrings={renameOrderTemplateDialogStrings}\n            renameOrderTemplateButtonText={resources.renameTemplateButtonText}\n        />\n    );\n};"],"sourceRoot":"./src/"},"metadata":{},"sourceType":"module"}