{"ast":null,"code":"import\"core-js/modules/es.promise.js\";import\"core-js/modules/web.dom-collections.iterator.js\";import\"core-js/modules/web.url.js\";import _defineProperty from\"@babel/runtime/helpers/esm/defineProperty\";import _merge2 from\"lodash/merge\";function ownKeys(object,enumerableOnly){var keys=Object.keys(object);if(Object.getOwnPropertySymbols){var symbols=Object.getOwnPropertySymbols(object);if(enumerableOnly)symbols=symbols.filter(function(sym){return Object.getOwnPropertyDescriptor(object,sym).enumerable;});keys.push.apply(keys,symbols);}return keys;}function _objectSpread(target){for(var i=1;i<arguments.length;i++){var source=arguments[i]!=null?arguments[i]:{};if(i%2){ownKeys(Object(source),true).forEach(function(key){_defineProperty(target,key,source[key]);});}else if(Object.getOwnPropertyDescriptors){Object.defineProperties(target,Object.getOwnPropertyDescriptors(source));}else{ownKeys(Object(source)).forEach(function(key){Object.defineProperty(target,key,Object.getOwnPropertyDescriptor(source,key));});}}return target;}import*as React from'react';import msdyn365Commerce,{MSDyn365Commerce}from'../msdyn365-commerce';import{CultureInfoFormatter,getCurrencyCodeFromContext}from'../utilities';const renderModuleAttributes=props=>{if(!props||!props.id){return{};}return{'data-m-t':props.typeName};};/**\r\n * Creates a new mock telemetry object, takes a partial ITelemetry and fills in missing required properties\r\n * @param telemetry A partial or full implmentation of ITelemetry\r\n */export const buildMockTelemetry=telemetry=>{const defaultMockTelemetry={trace:message=>console.log(\"[Mock Trace]: \".concat(message)),debug:function debug(message){for(var _len=arguments.length,meta=new Array(_len>1?_len-1:0),_key=1;_key<_len;_key++){meta[_key-1]=arguments[_key];}return console.log(\"[Mock Debug]: \".concat(message),...meta);},information:message=>console.log(\"[Mock Info]: \".concat(message)),warning:message=>console.log(\"[Mock Warning]: \".concat(message)),error:function error(message){for(var _len2=arguments.length,meta=new Array(_len2>1?_len2-1:0),_key2=1;_key2<_len2;_key2++){meta[_key2-1]=arguments[_key2];}return console.log(\"[Mock Error]: \".concat(message),...meta);},exception:error=>console.log(\"[Mock Exception]: \".concat(error)),critical:message=>console.log(\"[Mock Info]: \".concat(message)),log:(logLevel,messageTemplate,logOptions)=>console.log('[Mock Log]: ',logLevel,messageTemplate,logOptions),logEvent:(eventType,payload)=>{// intentionally blank\n},trackMetric:(name,value)=>console.log('[Mock Track Metric]: ',name,value),trackEvent:(name,properties,measurements)=>console.log('[Mock Track Event]: ',properties,measurements),setTelemetryRequestContext:()=>{return;},setTelemetryModuleContext:moduleContext=>buildMockTelemetry,trackDependency:options=>{console.log('[Mock Track Dependency]: ',options);},setTelemetryAttribute:(telemetryId,additionalTelemetryProperties)=>{return{'data-bi-id':'12345','data-m':'{\"id\":\"12345\",\"key1\":\"val1\"}\"'};}};return telemetry?_objectSpread(_objectSpread({},defaultMockTelemetry),telemetry):defaultMockTelemetry;};/**\r\n * Creates a mock CookieContext. Takes a partial ICookieContext and fills in required properties\r\n * @param context Partial action context.\r\n */ // tslint:disable-next-line:cyclomatic-complexity\nexport const buildMockCookieContext=context=>{return{get:context&&context.get||(cookiename=>{return{name:cookiename,value:undefined,status:'NOT_FOUND'};}),set:context&&context.set||((_cookieName,_cookieValue)=>{console.log('set called');}),remove:context&&context.remove||(()=>{console.log('remove called');}),getCartCookie:context&&context.getCartCookie||(()=>{console.log('getCartCookie called');return'';}),setCartCookie:context&&context.setCartCookie||(()=>{console.log('setCartCookie called');}),getCheckoutCartCookie:context&&context.getCheckoutCartCookie||(()=>{console.log('getCheckouCartCookie called');return'';}),setCheckoutCartCookie:context&&context.setCheckoutCartCookie||(()=>{console.log('setCheckouCartCookie called');}),removeCheckoutCartCookie:context&&context.removeCheckoutCartCookie||(()=>{console.log('removeCheckoutCartCookie called');}),isConsentGiven:context&&context.isConsentGiven||(()=>{return true;}),setConsentCookie:context&&context.setConsentCookie||(()=>{console.log('setConsentCookie called');}),deleteConsentCookie:context&&context.deleteConsentCookie||(()=>{console.log('deleteConsentCookie called');})};};export const buildMockSessionStorageContext=context=>{return{getDataFromStorage:context&&context.getDataFromStorage||(()=>{console.log('getDataFromStorage called');return{};}),setDataInStorage:context&&context.setDataInStorage||(()=>{console.log('setDataInStorage called');return;}),getCheckoutCartData:context&&context.getCheckoutCartData||(()=>{console.log('getCheckoutCartData called');return{};}),setCheckoutCartData:context&&context.setCheckoutCartData||(()=>{console.log('setCheckoutCartData called');return;}),removeDataFromStorage:context&&context.removeDataFromStorage||(()=>{console.log('removeDataFromStorage called');return;}),removeCheckoutCartData:context&&context.removeCheckoutCartData||(()=>{console.log('removeCheckoutCartData called');return;})};};/**\r\n * Creates a mock IRequestContext. Takes a partial IRequestContext and fills in required properties\r\n * @param requestContext Partial IRequestContext\r\n */ // tslint:disable-next-line:max-func-body-length\nexport const buildMockRequest=requestContext=>{const mockRequest={url:{requestUrl:new URL('https://contoso.com'),staticCdnUrl:'string'},canonicalDomain:'contoso.com',canonicalUrl:'https://contoso.com',locale:'en-us',textDirection:'ltr',params:{isDebug:false,isEditor:false,isPreview:false,concatJs:{hasValue:false,isTruthy:false,value:undefined},/**\r\n             * Theme SCSS override matching registered theme name\r\n             */theme:''},device:{Type:'pc'},user:{token:'mockToken',isAuthenticated:false,optOutWebActivityTracking:false},app:{},apiSettings:{baseUrl:'mockBaseUrl',channelId:1,oun:'mockOUN',catalogId:2,baseImageUrl:'mockBaseImageUrl',ratingsReviewsEndpoint:'',retailServerProxyVersion:'9.0.0',rnr:{proxyUrl:'',url:'',id:''}},gridSettings:{xs:{w:768},sm:{w:992},md:{w:1200},lg:{w:1600},xl:{w:1800}},urlTokens:{},operationId:'mockOperationId',// feature switches coming from server\nfeatures:{},pageData:{},headers:{},cookies:buildMockCookieContext(),sessionStorage:buildMockSessionStorageContext(),themeOverride:{url:'',disableDefault:false},telemetrySettings:{eventHubAuthToken:'',eventHubEndPoint:'',optOutWebActivityTracking:false,operationId:'mockOperationId',instrumentationKey:'',environmentId:'Development'},telemetryData:{Checkout:[{orderId:'',cartId:'097504969642348742',cartVersion:'12432',Products:[{productChannelId:18629762,productChannelName:'store',productCategoryId:'9754',productCategoryName:'Sunglasses',productId:'970374',productName:'Aviator',productSku:'special',productPrice:120,productQuantity:1,productCurrency:'USD'}]}],ProductPageView:{productChannelId:18629762,productChannelName:'',productCategoryId:'',productCategoryName:'',productId:'08439484',productName:'Awesome Tie',productSku:'',productPrice:98,productQuantity:'',productCurrency:''}},siteStylePreset:''};return _merge2(mockRequest,requestContext);};const mockRenderView=FunctionalComponent=>props=>{if(!FunctionalComponent){return null;}// @ts-ignore\nreturn/*#__PURE__*/React.createElement(FunctionalComponent,props);};/**\r\n * Creates a mock IMSDyn365ActionContext. Takes a partial IActionContext and fills in required properties\r\n * @param context Partial action context.\r\n */export const buildMockActionContext=context=>{return _objectSpread({chainAction:context&&context.chainAction||(async(action,input)=>{return null;}),update:context&&context.update||((input,data)=>{return data;}),trace:context&&context.trace||(message=>{return;}),get:context&&context.get||((cacheObjectType,cacheKey)=>{return null;}),getAll:context&&context.getAll||(cacheObjectType=>{return null;}),runAllActionsInQueue:async()=>{return;},requestContext:buildMockRequest(context&&context.requestContext),telemetry:buildMockTelemetry(context&&context.telemetry)},context);};/**\r\n * Creates a mock Core Context\r\n * @param coreContext Partial core context\r\n */export const buildMockCoreContext=coreContext=>{const request=buildMockRequest(coreContext.request);return{actionContext:buildMockActionContext(coreContext.actionContext),app:coreContext.app||{},telemetry:buildMockTelemetry(coreContext.telemetry),request,cultureFormatter:coreContext.cultureFormatter||new CultureInfoFormatter(request.locale,getCurrencyCodeFromContext(request))};};/**\r\n * Creates a mock MSDyn365 App with fake API settings for use in testing\r\n */export const initializeMockApp=mockSettings=>{MSDyn365Commerce.prototype.setMockSettings=function(){// tslint:disable-next-line\nthis._env=process.env.NODE_ENV;// tslint:disable-next-line\nthis._commerceApiSetting=mockSettings||{// tslint:disable-next-line\nbaseUrl:'http://mock.cloud.retail.dynamics.com/',channelId:1,catalogId:0,oun:'1',// tslint:disable-next-line\nbaseImageUrl:\"http://mock.cloud.retail.dynamics.com/MediaServer/\"};};msdyn365Commerce.setMockSettings();};/**\r\n * Generates a mock IModule<TData> prop\r\n * @param moduleData Mock TData that maps to props.data\r\n * @param dataActions Mock data actions that map to props.dataActions\r\n * @param moduleConfig Mock module configs that map to props.config\r\n * @param mockContext Mock ICoreContext that map to props.context\r\n * @param mockTelemetry Mock ITelemetry that map to props.telemetry. If no mock is provided a default will be passed that logs to console.\r\n */export const buildMockModuleProps=(moduleData,dataActions,moduleConfig,mockContext,mockTelemetry,app,view)=>{mockContext=buildMockCoreContext(mockContext||{});return{// @ts-ignore TODO: Generate a default mock context.\ncontext:mockContext,data:moduleData,dataActions:dataActions,config:moduleConfig||{},id:'mock-id',friendlyName:'Mock Id',typeName:'mock-type',telemetry:buildMockTelemetry(mockTelemetry),app:_objectSpread(_objectSpread({},{config:{}}),app),renderModuleAttributes:renderModuleAttributes,renderView:mockRenderView(view)};};","map":{"version":3,"sources":["../../../src/mock/mock-helper.ts"],"names":[],"mappings":"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","sourcesContent":["/*!\n * Copyright (c) Microsoft Corporation.\n * All rights reserved. See LICENSE in the project root for license information.\n */\n// tslint:disable:no-any\n\nimport {\n    ITelemetry,\n    ITelemetryModuleContext,\n    ITrackDependency,\n    LogLevel,\n    TelemetryEvent,\n    TelemetryEventContent,\n    TelemetryLogOptions\n} from '@msdyn365-commerce/telemetry-internal';\nimport { merge as _merge } from 'lodash';\nimport * as React from 'react';\nimport { ICommerceApiSettings, IModule } from '../contract';\nimport {\n    IAction,\n    IActionContext,\n    IActionInput,\n    IAny,\n    ICoreContext,\n    IDictionary,\n    IGeneric,\n    IRequestContext,\n    ISessionStorageContext\n} from '../interfaces';\nimport { ICookieContext } from '../interfaces/context/ICookieContext';\nimport msdyn365Commerce, { MSDyn365Commerce } from '../msdyn365-commerce';\nimport { CultureInfoFormatter, getCurrencyCodeFromContext } from '../utilities';\n\ndeclare var process: IGeneric<IAny>;\n\nconst renderModuleAttributes = (props: IGeneric<IAny>): IDictionary<string> => {\n    if (!props || !props.id) {\n        return {};\n    }\n\n    return { 'data-m-t': props.typeName };\n};\n\n/**\n * Creates a new mock telemetry object, takes a partial ITelemetry and fills in missing required properties\n * @param telemetry A partial or full implmentation of ITelemetry\n */\nexport const buildMockTelemetry = (telemetry?: Partial<ITelemetry>): ITelemetry => {\n    const defaultMockTelemetry: ITelemetry = {\n        trace: (message: string) => console.log(`[Mock Trace]: ${message}`),\n        debug: (message: string, ...meta: IAny[]) => console.log(`[Mock Debug]: ${message}`, ...meta),\n        information: (message: string) => console.log(`[Mock Info]: ${message}`),\n        warning: (message: string) => console.log(`[Mock Warning]: ${message}`),\n        error: (message: string, ...meta: IAny[]) => console.log(`[Mock Error]: ${message}`, ...meta),\n        exception: (error: Error) => console.log(`[Mock Exception]: ${error}`),\n        critical: (message: string) => console.log(`[Mock Info]: ${message}`),\n        log: (logLevel: LogLevel, messageTemplate: string, logOptions?: TelemetryLogOptions) =>\n            console.log('[Mock Log]: ', logLevel, messageTemplate, logOptions),\n        logEvent: (eventType: TelemetryEvent, payload: TelemetryEventContent) => {\n            // intentionally blank\n        },\n        trackMetric: (name: string, value: number) => console.log('[Mock Track Metric]: ', name, value),\n        trackEvent: (name: string, properties, measurements) => console.log('[Mock Track Event]: ', properties, measurements),\n        setTelemetryRequestContext: () => {\n            return;\n        },\n        setTelemetryModuleContext: (moduleContext: ITelemetryModuleContext) => buildMockTelemetry,\n        trackDependency: (options: ITrackDependency) => {\n            console.log('[Mock Track Dependency]: ', options);\n        },\n        setTelemetryAttribute: (telemetryId: string, additionalTelemetryProperties: object) => {\n            return { 'data-bi-id': '12345', 'data-m': '{\"id\":\"12345\",\"key1\":\"val1\"}\"' };\n        }\n    };\n    return telemetry ? { ...defaultMockTelemetry, ...telemetry } : defaultMockTelemetry;\n};\n\n/**\n * Creates a mock CookieContext. Takes a partial ICookieContext and fills in required properties\n * @param context Partial action context.\n */\n// tslint:disable-next-line:cyclomatic-complexity\nexport const buildMockCookieContext = (context?: Partial<ICookieContext>): ICookieContext => {\n    return {\n        get:\n            (context && context.get) ||\n            ((cookiename: string) => {\n                return { name: cookiename, value: undefined, status: 'NOT_FOUND' };\n            }),\n        set:\n            (context && context.set) ||\n            (<T>(_cookieName: string, _cookieValue: T): void => {\n                console.log('set called');\n            }),\n        remove:\n            (context && context.remove) ||\n            ((): void => {\n                console.log('remove called');\n            }),\n        getCartCookie:\n            (context && context.getCartCookie) ||\n            ((): string => {\n                console.log('getCartCookie called');\n                return '';\n            }),\n        setCartCookie:\n            (context && context.setCartCookie) ||\n            ((): void => {\n                console.log('setCartCookie called');\n            }),\n        getCheckoutCartCookie:\n            (context && context.getCheckoutCartCookie) ||\n            ((): string => {\n                console.log('getCheckouCartCookie called');\n                return '';\n            }),\n        setCheckoutCartCookie:\n            (context && context.setCheckoutCartCookie) ||\n            ((): void => {\n                console.log('setCheckouCartCookie called');\n            }),\n        removeCheckoutCartCookie:\n            (context && context.removeCheckoutCartCookie) ||\n            ((): void => {\n                console.log('removeCheckoutCartCookie called');\n            }),\n        isConsentGiven:\n            (context && context.isConsentGiven) ||\n            ((): boolean => {\n                return true;\n            }),\n        setConsentCookie:\n            (context && context.setConsentCookie) ||\n            ((): void => {\n                console.log('setConsentCookie called');\n            }),\n        deleteConsentCookie:\n            (context && context.deleteConsentCookie) ||\n            ((): void => {\n                console.log('deleteConsentCookie called');\n            })\n    };\n};\n\nexport const buildMockSessionStorageContext = (context?: Partial<ISessionStorageContext>): ISessionStorageContext => {\n    return {\n        getDataFromStorage:\n            (context && context.getDataFromStorage) ||\n            ((): object => {\n                console.log('getDataFromStorage called');\n                return {};\n            }),\n        setDataInStorage:\n            (context && context.setDataInStorage) ||\n            ((): void => {\n                console.log('setDataInStorage called');\n                return;\n            }),\n        getCheckoutCartData:\n            (context && context.getCheckoutCartData) ||\n            ((): object => {\n                console.log('getCheckoutCartData called');\n                return {};\n            }),\n        setCheckoutCartData:\n            (context && context.setCheckoutCartData) ||\n            ((): void => {\n                console.log('setCheckoutCartData called');\n                return;\n            }),\n        removeDataFromStorage:\n            (context && context.removeDataFromStorage) ||\n            ((): void => {\n                console.log('removeDataFromStorage called');\n                return;\n            }),\n        removeCheckoutCartData:\n            (context && context.removeCheckoutCartData) ||\n            ((): void => {\n                console.log('removeCheckoutCartData called');\n                return;\n            })\n    };\n};\n\n/**\n * Creates a mock IRequestContext. Takes a partial IRequestContext and fills in required properties\n * @param requestContext Partial IRequestContext\n */\n// tslint:disable-next-line:max-func-body-length\nexport const buildMockRequest = (requestContext?: Partial<IRequestContext>): IRequestContext => {\n    const mockRequest: IRequestContext = {\n        url: {\n            requestUrl: new URL('https://contoso.com'),\n            staticCdnUrl: 'string'\n        },\n        canonicalDomain: 'contoso.com',\n        canonicalUrl: 'https://contoso.com',\n        locale: 'en-us',\n        textDirection: 'ltr',\n        params: {\n            isDebug: false,\n            isEditor: false,\n            isPreview: false,\n            concatJs: {\n                hasValue: false,\n                isTruthy: false,\n                value: undefined\n            },\n            /**\n             * Theme SCSS override matching registered theme name\n             */\n            theme: ''\n        },\n        device: {\n            Type: 'pc'\n        },\n        user: {\n            token: 'mockToken',\n            isAuthenticated: false,\n            optOutWebActivityTracking: false\n        },\n        app: {},\n        apiSettings: {\n            baseUrl: 'mockBaseUrl',\n            channelId: 1,\n            oun: 'mockOUN',\n            catalogId: 2,\n            baseImageUrl: 'mockBaseImageUrl',\n            ratingsReviewsEndpoint: '',\n            retailServerProxyVersion: '9.0.0',\n            rnr: {\n                proxyUrl: '',\n                url: '',\n                id: ''\n            }\n        },\n        gridSettings: {\n            xs: { w: 768 },\n            sm: { w: 992 },\n            md: { w: 1200 },\n            lg: { w: 1600 },\n            xl: { w: 1800 }\n        },\n        urlTokens: {},\n        operationId: 'mockOperationId',\n        // feature switches coming from server\n        features: {},\n        pageData: {},\n        headers: {},\n        cookies: buildMockCookieContext(),\n        sessionStorage: buildMockSessionStorageContext(),\n        themeOverride: {\n            url: '',\n            disableDefault: false\n        },\n        telemetrySettings: {\n            eventHubAuthToken: '',\n            eventHubEndPoint: '',\n            optOutWebActivityTracking: false,\n            operationId: 'mockOperationId',\n            instrumentationKey: '',\n            environmentId: 'Development'\n        },\n        telemetryData: {\n            Checkout: [\n                {\n                    orderId: '',\n                    cartId: '097504969642348742',\n                    cartVersion: '12432',\n                    Products: [\n                        {\n                            productChannelId: 18629762,\n                            productChannelName: 'store',\n                            productCategoryId: '9754',\n                            productCategoryName: 'Sunglasses',\n                            productId: '970374',\n                            productName: 'Aviator',\n                            productSku: 'special',\n                            productPrice: 120,\n                            productQuantity: 1,\n                            productCurrency: 'USD'\n                        }\n                    ]\n                }\n            ],\n            ProductPageView: {\n                productChannelId: 18629762,\n                productChannelName: '',\n                productCategoryId: '',\n                productCategoryName: '',\n                productId: '08439484',\n                productName: 'Awesome Tie',\n                productSku: '',\n                productPrice: 98,\n                productQuantity: '',\n                productCurrency: ''\n            }\n        },\n        siteStylePreset: ''\n    };\n    return _merge(mockRequest, requestContext);\n};\n\nconst mockRenderView = (FunctionalComponent?: React.FC) => <T extends IModule>(props: T) => {\n    if (!FunctionalComponent) {\n        return null;\n    }\n\n    // @ts-ignore\n    return React.createElement(FunctionalComponent, props);\n};\n\n/**\n * Creates a mock IMSDyn365ActionContext. Takes a partial IActionContext and fills in required properties\n * @param context Partial action context.\n */\nexport const buildMockActionContext = (context?: Partial<IActionContext>): IActionContext => {\n    return {\n        chainAction:\n            (context && context.chainAction) ||\n            (async <T = unknown>(action: IAction<T>, input: IActionInput | IActionInput[]) => {\n                return null;\n            }),\n        update:\n            (context && context.update) ||\n            ((input: IActionInput | IActionInput[], data: any): any => {\n                return data;\n            }),\n        trace:\n            (context && context.trace) ||\n            ((message: string): void => {\n                return;\n            }),\n        get:\n            (context && context.get) ||\n            ((cacheObjectType: string, cacheKey: string) => {\n                return null;\n            }),\n        getAll:\n            (context && context.getAll) ||\n            ((cacheObjectType: string) => {\n                return null;\n            }),\n        runAllActionsInQueue: async () => {\n            return;\n        },\n        requestContext: buildMockRequest(context && context.requestContext),\n        telemetry: buildMockTelemetry(context && context.telemetry),\n        ...context\n    };\n};\n\n/**\n * Creates a mock Core Context\n * @param coreContext Partial core context\n */\nexport const buildMockCoreContext = <TApp extends {} = {}>(coreContext: Partial<ICoreContext<TApp>>): ICoreContext<TApp> => {\n    const request = buildMockRequest(coreContext.request);\n    return {\n        actionContext: buildMockActionContext(coreContext.actionContext),\n        app: coreContext.app || <TApp>{},\n        telemetry: buildMockTelemetry(coreContext.telemetry),\n        request,\n        cultureFormatter: coreContext.cultureFormatter || new CultureInfoFormatter(request.locale, getCurrencyCodeFromContext(request))\n    };\n};\n\n/**\n * Creates a mock MSDyn365 App with fake API settings for use in testing\n */\nexport const initializeMockApp = (mockSettings?: ICommerceApiSettings) => {\n    (<IGeneric<IAny>>MSDyn365Commerce).prototype.setMockSettings = function(): void {\n        // tslint:disable-next-line\n        this._env = process.env.NODE_ENV;\n        // tslint:disable-next-line\n        this._commerceApiSetting = mockSettings || {\n            // tslint:disable-next-line\n            baseUrl: 'http://mock.cloud.retail.dynamics.com/',\n            channelId: 1,\n            catalogId: 0,\n            oun: '1',\n            // tslint:disable-next-line\n            baseImageUrl: `http://mock.cloud.retail.dynamics.com/MediaServer/`\n        };\n    };\n\n    (<IGeneric<IAny>>msdyn365Commerce).setMockSettings();\n};\n\n/**\n * Generates a mock IModule<TData> prop\n * @param moduleData Mock TData that maps to props.data\n * @param dataActions Mock data actions that map to props.dataActions\n * @param moduleConfig Mock module configs that map to props.config\n * @param mockContext Mock ICoreContext that map to props.context\n * @param mockTelemetry Mock ITelemetry that map to props.telemetry. If no mock is provided a default will be passed that logs to console.\n */\nexport const buildMockModuleProps = <TData = IGeneric<IAny>, TConfig = IGeneric<IAny>>(\n    moduleData: TData,\n    dataActions: IGeneric<IAny>,\n    moduleConfig?: TConfig,\n    mockContext?: ICoreContext,\n    mockTelemetry?: ITelemetry,\n    app?: IGeneric<IAny>,\n    view?: React.FC\n): IModule<TData> => {\n    mockContext = buildMockCoreContext(mockContext || {});\n    return {\n        // @ts-ignore TODO: Generate a default mock context.\n        context: mockContext,\n        data: moduleData,\n        dataActions: dataActions,\n        config: moduleConfig || {},\n        id: 'mock-id',\n        friendlyName: 'Mock Id',\n        typeName: 'mock-type',\n        telemetry: buildMockTelemetry(mockTelemetry),\n        app: { ...{ config: {} }, ...app },\n        renderModuleAttributes: renderModuleAttributes,\n        renderView: mockRenderView(view)\n    };\n};\n"],"sourceRoot":""},"metadata":{},"sourceType":"module"}