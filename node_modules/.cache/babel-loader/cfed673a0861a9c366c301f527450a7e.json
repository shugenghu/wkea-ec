{"ast":null,"code":"import\"core-js/modules/es.object.assign.js\";import\"core-js/modules/web.dom-collections.iterator.js\";import{Alert,getPayloadObject,getTelemetryAttributes,Modal,ModalBody,ModalFooter,ModalHeader,TelemetryConstant}from'@msdyn365-commerce-modules/utilities';import React from'react';let reportConcernDropdownOptions;export const ReportReviewModal=props=>{const payLoad=getPayloadObject('click',props.telemetryContent,TelemetryConstant.SubmitReview);const submitReviewAttribute=getTelemetryAttributes(props.telemetryContent,payLoad);payLoad.contentAction.etext=TelemetryConstant.SuccessButton;const successAttribute=getTelemetryAttributes(props.telemetryContent,payLoad);payLoad.contentAction.etext=TelemetryConstant.Cancel;const cancelAttribute=getTelemetryAttributes(props.telemetryContent,payLoad);reportConcernDropdownOptions=[{key:\"8\",value:props.resources.reportSpamText},{key:\"1\",value:props.resources.offensiveContentText},{key:\"9\",value:props.resources.profanityContentText}];return{modal:{tag:Modal,className:'ms-report-review-modal',toggle:props.onModalToggle,applicationNode:'renderPage',isOpen:props.isOpen,returnFocusRef:props.returnRef},modalHeader:{tag:ModalHeader,toggle:props.onModalToggle,className:'ms-report-review-modal-header'},modalFooter:{tag:ModalFooter,className:'ms-report-review-modal-footer'},modalBody:{tag:ModalBody,className:'ms-report-review-modal-body'},header:/*#__PURE__*/React.createElement(\"p\",{className:'ms-reviews-list__report-header'},props.resources.reportConcernText),headerSubmitted:/*#__PURE__*/React.createElement(\"p\",{className:'ms-reviews-list__report-header'},props.resources.feedbackThankYouText),cancelButton:/*#__PURE__*/React.createElement(\"button\",Object.assign({className:'msc-btn ms-reviews-list__cancel',onClick:props.onModalToggle},cancelAttribute),props.resources.cancelReportReviewText),submitButton:/*#__PURE__*/React.createElement(\"button\",Object.assign({className:'msc-btn ms-reviews-list__submit',onClick:props.reportReview},submitReviewAttribute),\" \",props.resources.reportReviewButtonText||'Report'),succesfulButton:/*#__PURE__*/React.createElement(\"button\",Object.assign({className:'msc-btn ms-reviews-list__success',onClick:props.onModalToggle},successAttribute),props.resources.okReportReviewText),reportMessage:/*#__PURE__*/React.createElement(\"p\",{className:'ms-reviews-list__report-message'},props.resources.reportModalMessage),reportSubmittedMessage:/*#__PURE__*/React.createElement(\"p\",{className:'ms-reviews-list__report-message'},props.resources.reportSubmittedMessage),radioButtons:radioPairs(props),error:/*#__PURE__*/React.createElement(Alert,{className:'ms-reviews-list__report-error',isOpen:props.hasError,color:'danger'},props.resources.errorMessageText)};};const radioPairs=props=>{const pairs=[];for(const option of reportConcernDropdownOptions){const inputId=\"report-review-\".concat(option.key);const checked=option.key===props.reportedKey;pairs.push(/*#__PURE__*/React.createElement(\"div\",{className:'ms-report-review-modal-pair',key:option.key},/*#__PURE__*/React.createElement(\"input\",{className:'msc-radio-input',type:'radio',name:'report-error',id:inputId,\"data-key\":option.key,value:option.value,checked:checked,\"aria-checked\":checked,onChange:props.onRadioChange}),/*#__PURE__*/React.createElement(\"label\",{className:'msc-radio-label',htmlFor:inputId},option.value)));}return/*#__PURE__*/React.createElement(\"fieldset\",null,pairs);};","map":{"version":3,"sources":["modules/reviews-list/components/report-review-modal.tsx"],"names":[],"mappings":"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","sourcesContent":["import {\n    Alert,\n    getPayloadObject,\n    getTelemetryAttributes,\n    INodeProps,\n    ITelemetryContent,\n    Modal,\n    ModalBody,\n    ModalFooter,\n    ModalHeader,\n    TelemetryConstant\n} from '@msdyn365-commerce-modules/utilities';\nimport { IAny, ICoreContext, IGeneric} from '@msdyn365-commerce/core';\nimport React from 'react';\nimport { ReviewConcernCategory } from '../../../actions/inputs/report-review-concern-input';\nimport { IRnrKeyValuePair } from '../../../common/rnrInterface';\n\nexport interface IReportReviewModalProps {\n    resources: IReportReviewModalResources;\n    context:  ICoreContext<IGeneric<IAny>>;\n    isOpen: boolean;\n    returnRef: React.RefObject<HTMLButtonElement> | undefined;\n    reportedKey: string;\n    hasError: boolean;\n    telemetryContent?: ITelemetryContent;\n    onModalToggle():void;\n    onRadioChange(event: React.ChangeEvent<HTMLInputElement>): void;\n    reportReview(): void;\n}\n\nexport interface IReportReviewModalResources {\n    reportConcernText: string;\n    feedbackThankYouText: string;\n    reportModalMessage: string;\n    reportSubmittedMessage: string;\n    reportSpamText: string;\n    offensiveContentText: string;\n    profanityContentText: string;\n    okReportReviewText: string;\n    cancelReportReviewText: string;\n    reportReviewButtonText: string;\n    errorMessageText: string;\n}\n\nexport interface IReportReviewModalViewProps {\n    modal: INodeProps;\n    modalHeader: INodeProps;\n    modalFooter: INodeProps;\n    modalBody: INodeProps;\n    header: React.ReactElement;\n    headerSubmitted: React.ReactElement;\n    cancelButton: React.ReactElement;\n    submitButton: React.ReactElement;\n    succesfulButton: React.ReactElement;\n    reportMessage: React.ReactElement;\n    reportSubmittedMessage: React.ReactElement;\n    radioButtons: React.ReactElement;\n    error: React.ReactElement;\n}\n\nlet reportConcernDropdownOptions: IRnrKeyValuePair[];\n\n/**\n * CartLineItems component\n */\n\nexport const ReportReviewModal = (props: IReportReviewModalProps):IReportReviewModalViewProps  => {\n\n    const payLoad = getPayloadObject('click', props.telemetryContent!, TelemetryConstant.SubmitReview);\n    const submitReviewAttribute = getTelemetryAttributes(props.telemetryContent!, payLoad);\n    payLoad.contentAction.etext = TelemetryConstant.SuccessButton;\n    const successAttribute = getTelemetryAttributes(props.telemetryContent!, payLoad);\n    payLoad.contentAction.etext = TelemetryConstant.Cancel;\n    const cancelAttribute = getTelemetryAttributes(props.telemetryContent!, payLoad);\n\n    reportConcernDropdownOptions = [\n        { key: ReviewConcernCategory.SpamAdvertising, value: props.resources.reportSpamText },\n        { key: ReviewConcernCategory.OffensiveContent, value: props.resources.offensiveContentText },\n        { key: ReviewConcernCategory.Profanity, value: props.resources.profanityContentText }\n    ];\n\n    return {\n        modal: {tag: Modal, className: 'ms-report-review-modal', toggle: props.onModalToggle, applicationNode: 'renderPage', isOpen: props.isOpen, returnFocusRef: props.returnRef},\n        modalHeader: {tag: ModalHeader, toggle: props.onModalToggle, className: 'ms-report-review-modal-header'},\n        modalFooter: {tag: ModalFooter, className: 'ms-report-review-modal-footer'},\n        modalBody: {tag: ModalBody, className: 'ms-report-review-modal-body'},\n        header: <p className='ms-reviews-list__report-header'>{props.resources.reportConcernText}</p>,\n        headerSubmitted: <p className='ms-reviews-list__report-header'>{props.resources.feedbackThankYouText}</p>,\n        cancelButton: <button className='msc-btn ms-reviews-list__cancel' onClick={props.onModalToggle} {...cancelAttribute}>{props.resources.cancelReportReviewText}</button>,\n        submitButton: <button className='msc-btn ms-reviews-list__submit' onClick={props.reportReview} {...submitReviewAttribute}> {props.resources.reportReviewButtonText || 'Report'}</button>,\n        succesfulButton: <button className='msc-btn ms-reviews-list__success' onClick={props.onModalToggle} {...successAttribute}>{props.resources.okReportReviewText}</button>,\n        reportMessage: <p className='ms-reviews-list__report-message'>{props.resources.reportModalMessage}</p>,\n        reportSubmittedMessage: <p className='ms-reviews-list__report-message'>{props.resources.reportSubmittedMessage}</p>,\n        radioButtons: radioPairs(props),\n        error: <Alert className='ms-reviews-list__report-error' isOpen={props.hasError} color='danger'>{props.resources.errorMessageText}</Alert>\n    };\n};\n\nconst radioPairs = (props: IReportReviewModalProps) => {\n    const pairs = [];\n    for (const option of reportConcernDropdownOptions) {\n        const inputId = `report-review-${option.key}`;\n        const checked = option.key === props.reportedKey;\n        pairs.push(\n            <div className='ms-report-review-modal-pair' key={option.key}>\n                <input\n                    className='msc-radio-input'\n                    type='radio'\n                    name='report-error'\n                    id={inputId}\n                    data-key={option.key}\n                    value={option.value}\n                    checked={checked}\n                    aria-checked={checked}\n                    onChange={props.onRadioChange}\n                />\n                <label className='msc-radio-label' htmlFor={inputId}>{option.value}</label>\n            </div>\n        );\n    }\n\n    return (\n        <fieldset>\n            {pairs}\n        </fieldset>\n    );\n};"],"sourceRoot":"./src/"},"metadata":{},"sourceType":"module"}