{"ast":null,"code":"import _regeneratorRuntime from\"@babel/runtime/regenerator\";import _asyncToGenerator from\"@babel/runtime/helpers/esm/asyncToGenerator\";import _classCallCheck from\"@babel/runtime/helpers/esm/classCallCheck\";function _createForOfIteratorHelper(o,allowArrayLike){var it;if(typeof Symbol===\"undefined\"||o[Symbol.iterator]==null){if(Array.isArray(o)||(it=_unsupportedIterableToArray(o))||allowArrayLike&&o&&typeof o.length===\"number\"){if(it)o=it;var i=0;var F=function F(){};return{s:F,n:function n(){if(i>=o.length)return{done:true};return{done:false,value:o[i++]};},e:function e(_e){throw _e;},f:F};}throw new TypeError(\"Invalid attempt to iterate non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");}var normalCompletion=true,didErr=false,err;return{s:function s(){it=o[Symbol.iterator]();},n:function n(){var step=it.next();normalCompletion=step.done;return step;},e:function e(_e2){didErr=true;err=_e2;},f:function f(){try{if(!normalCompletion&&it[\"return\"]!=null)it[\"return\"]();}finally{if(didErr)throw err;}}};}function _unsupportedIterableToArray(o,minLen){if(!o)return;if(typeof o===\"string\")return _arrayLikeToArray(o,minLen);var n=Object.prototype.toString.call(o).slice(8,-1);if(n===\"Object\"&&o.constructor)n=o.constructor.name;if(n===\"Map\"||n===\"Set\")return Array.from(o);if(n===\"Arguments\"||/^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n))return _arrayLikeToArray(o,minLen);}function _arrayLikeToArray(arr,len){if(len==null||len>arr.length)len=arr.length;for(var i=0,arr2=new Array(len);i<len;i++){arr2[i]=arr[i];}return arr2;}import{createObservableDataAction}from'@msdyn365-commerce/core';import{getEstimatedAvailabilityAsync}from'@msdyn365-commerce/retail-proxy/dist/DataActions/ProductsDataActions.g';import{getSelectedProductIdFromActionInput,getSelectedVariant,SelectedVariantInput}from'./index';import{mapProductInventoryInformation}from'./utilities/product-inventory-utils';/**\r\n * Input class for the getProductAvailabilitiesForSelectedVariant Data Action\r\n */export var ProductAvailabilitiesForSelectedVariantInput=function ProductAvailabilitiesForSelectedVariantInput(productId,channelId){_classCallCheck(this,ProductAvailabilitiesForSelectedVariantInput);this.getCacheKey=function(){return\"ProductAvailabilitiesForSelectedVariant\";};this.getCacheObjectType=function(){return'ProductAvailabilities';};this.dataCacheType=function(){return'none';};this.productId=typeof productId==='string'?+productId:productId;this.channelId=channelId;};/**\r\n * createInput method for the getProductAvailabilitiesForSelectedVariant data action.\r\n * @param inputData The input data passed to the createInput method\r\n */export var createProductAvailabilitiesForSelectedVariantInput=function createProductAvailabilitiesForSelectedVariantInput(inputData){var productId=getSelectedProductIdFromActionInput(inputData);if(productId){return new ProductAvailabilitiesForSelectedVariantInput(+productId,+inputData.requestContext.apiSettings.channelId);}else{throw new Error('Unable to create ProductAvailabilitiesForSelectedVariantInput, no productId found on module config or query');}};/**\r\n * The action method for the getProductAvailabilitiesForSelectedVariant data action\r\n */export function getProductAvailabilitiesForSelectedVariantAction(_x,_x2){return _getProductAvailabilitiesForSelectedVariantAction.apply(this,arguments);}/**\r\n * The function that maps a ProductWareHouse object into a ProductAvailabilityQuantity\r\n */function _getProductAvailabilitiesForSelectedVariantAction(){_getProductAvailabilitiesForSelectedVariantAction=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee(input,ctx){var selectedVariantInput;return _regeneratorRuntime.wrap(function _callee$(_context){while(1){switch(_context.prev=_context.next){case 0:selectedVariantInput=new SelectedVariantInput(input.productId,input.channelId);return _context.abrupt(\"return\",getSelectedVariant(selectedVariantInput,ctx).then(function(productResult){if(productResult){return getEstimatedAvailabilityAsync({callerContext:ctx},{ProductIds:[productResult.RecordId],DefaultWarehouseOnly:true}).then(function(response){if(response&&response.ProductWarehouseInventoryAvailabilities&&response.ProductWarehouseInventoryAvailabilities.length){return mapProductInventoryInformation(ctx,response.ProductWarehouseInventoryAvailabilities);}return undefined;});}return undefined;})[\"catch\"](function(error){ctx.trace(error.message);ctx.telemetry.exception(error);ctx.telemetry.debug(\"[getPriceForSelectedVariantAction]Error executing action\");throw new Error('[getPriceForSelectedVariantAction]Error executing action');}));case 2:case\"end\":return _context.stop();}}},_callee);}));return _getProductAvailabilitiesForSelectedVariantAction.apply(this,arguments);}export function mergeProductWarehouseToProductAvailabities(productsWarehouseInventory){var productAvailable=[];if(productsWarehouseInventory&&productsWarehouseInventory.length>0){var _iterator=_createForOfIteratorHelper(productsWarehouseInventory),_step;try{for(_iterator.s();!(_step=_iterator.n()).done;){var product=_step.value;if(product.TotalAvailable!==undefined&&product.ProductId!==undefined){productAvailable.push({ProductId:product.ProductId,AvailableQuantity:product.TotalAvailable});}}}catch(err){_iterator.e(err);}finally{_iterator.f();}}return productAvailable;}/**\r\n * The complete getProductAvailabilitiesForSelectedVariant data action\r\n * Get the currently selected variant via the getSelectedVariant data action, and\r\n * then gets the availabilities for the variant via the getProductAvailabilities RetailServer API\r\n */export default createObservableDataAction({id:'@msdyn365-commerce-modules/retail-actions/get-product-availabilities-for-selected-variant',action:getProductAvailabilitiesForSelectedVariantAction,input:createProductAvailabilitiesForSelectedVariantInput});","map":{"version":3,"sources":["../../src/get-product-availabilities-for-selected-variant.ts"],"names":[],"mappings":"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","sourcesContent":["import { CacheType, createObservableDataAction, IAction, IActionContext, IActionInput, IAny, ICreateActionContext, IGeneric } from '@msdyn365-commerce/core';\nimport { ProductWarehouseInventoryAvailability } from '@msdyn365-commerce/retail-proxy';\nimport { getEstimatedAvailabilityAsync } from '@msdyn365-commerce/retail-proxy/dist/DataActions/ProductsDataActions.g';\nimport { ProductAvailableQuantity } from '@msdyn365-commerce/retail-proxy/dist/Entities/CommerceTypes.g';\nimport { getSelectedProductIdFromActionInput, getSelectedVariant, IProductInventoryInformation, SelectedVariantInput } from './index';\nimport { mapProductInventoryInformation } from './utilities/product-inventory-utils';\n\n/**\n * Input class for the getProductAvailabilitiesForSelectedVariant Data Action\n */\nexport class ProductAvailabilitiesForSelectedVariantInput implements IActionInput {\n    public productId: number;\n    public channelId: number;\n\n    constructor(productId: number | string, channelId: number) {\n        this.productId = typeof productId === 'string' ? +productId : productId;\n        this.channelId = channelId;\n    }\n\n    public getCacheKey = () => `ProductAvailabilitiesForSelectedVariant`;\n    public getCacheObjectType = () => 'ProductAvailabilities';\n    public dataCacheType = (): CacheType => 'none';\n}\n\n/**\n * createInput method for the getProductAvailabilitiesForSelectedVariant data action.\n * @param inputData The input data passed to the createInput method\n */\nexport const createProductAvailabilitiesForSelectedVariantInput = (\n    inputData: ICreateActionContext<IGeneric<IAny>>\n): ProductAvailabilitiesForSelectedVariantInput => {\n    const productId = getSelectedProductIdFromActionInput(inputData);\n\n    if (productId) {\n        return new ProductAvailabilitiesForSelectedVariantInput(+productId, +inputData.requestContext.apiSettings.channelId);\n    } else {\n        throw new Error('Unable to create ProductAvailabilitiesForSelectedVariantInput, no productId found on module config or query');\n    }\n};\n\n/**\n * The action method for the getProductAvailabilitiesForSelectedVariant data action\n */\nexport async function getProductAvailabilitiesForSelectedVariantAction(\n    input: ProductAvailabilitiesForSelectedVariantInput,\n    ctx: IActionContext\n): Promise<IProductInventoryInformation[] | undefined> {\n    const selectedVariantInput = new SelectedVariantInput(input.productId, input.channelId);\n    return getSelectedVariant(selectedVariantInput, ctx)\n        .then(productResult => {\n            if (productResult) {\n                return getEstimatedAvailabilityAsync({ callerContext: ctx }, { ProductIds: [productResult.RecordId], DefaultWarehouseOnly: true}).then(response => {\n                    if(response && response.ProductWarehouseInventoryAvailabilities && response.ProductWarehouseInventoryAvailabilities.length) {\n                        return mapProductInventoryInformation(ctx, response.ProductWarehouseInventoryAvailabilities)\n                    }\n                    return undefined;\n                });\n            }\n\n            return undefined;\n        })\n        .catch((error: Error) => {\n            ctx.trace(error.message);\n            ctx.telemetry.exception(error);\n            ctx.telemetry.debug(`[getPriceForSelectedVariantAction]Error executing action`);\n            throw new Error('[getPriceForSelectedVariantAction]Error executing action');\n        });\n}\n\n/**\n * The function that maps a ProductWareHouse object into a ProductAvailabilityQuantity\n */\nexport function mergeProductWarehouseToProductAvailabities(productsWarehouseInventory: ProductWarehouseInventoryAvailability[]): ProductAvailableQuantity[] {\n    let productAvailable: ProductAvailableQuantity[] = [];\n    if(productsWarehouseInventory && productsWarehouseInventory.length > 0) {\n        for(const product of productsWarehouseInventory) {\n            if(product.TotalAvailable !== undefined && product.ProductId !== undefined) {\n                productAvailable.push({ProductId: product.ProductId, AvailableQuantity: product.TotalAvailable});\n            }\n        }\n    }\n    return productAvailable;\n}\n\n\n/**\n * The complete getProductAvailabilitiesForSelectedVariant data action\n * Get the currently selected variant via the getSelectedVariant data action, and\n * then gets the availabilities for the variant via the getProductAvailabilities RetailServer API\n */\nexport default createObservableDataAction({\n    id: '@msdyn365-commerce-modules/retail-actions/get-product-availabilities-for-selected-variant',\n    action: <IAction<IProductInventoryInformation[] | null>>getProductAvailabilitiesForSelectedVariantAction,\n    input: createProductAvailabilitiesForSelectedVariantInput\n});\n"],"sourceRoot":""},"metadata":{},"sourceType":"module"}