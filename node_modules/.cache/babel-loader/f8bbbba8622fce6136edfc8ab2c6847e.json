{"ast":null,"code":"import _regeneratorRuntime from\"@babel/runtime/regenerator\";import _asyncToGenerator from\"@babel/runtime/helpers/esm/asyncToGenerator\";import _classCallCheck from\"@babel/runtime/helpers/esm/classCallCheck\";import{createObservableDataAction}from'@msdyn365-commerce/core';import{getDeliveryOptionsAsync}from'@msdyn365-commerce/retail-proxy/dist/DataActions/ProductsDataActions.g';import{getSelectedProductIdFromActionInput,getSelectedVariant,SelectedVariantInput}from'./index';/**\r\n * Input class for the GetDeliveryOptionsForSelectedVariant Data Action\r\n */export var GetDeliveryOptionsForSelectedVariantInput=function GetDeliveryOptionsForSelectedVariantInput(productId,channelId,selectedProduct,customerId){_classCallCheck(this,GetDeliveryOptionsForSelectedVariantInput);this.getCacheKey=function(){return\"DeliveryOptionsForSelectedVariant\";};this.getCacheObjectType=function(){return'DeliveryOptions';};this.dataCacheType=function(){return'none';};this.productId=productId;this.channelId=channelId;this.selectedProduct=selectedProduct;this.customerId=customerId||'';};/**\r\n * The createInput method for the GetDeliveryOptionsForSelectedVariant Data Action\r\n * @param inputData The input data for the createInput method\r\n */export var createDeliveryOptionsForSelectedVariantInput=function createDeliveryOptionsForSelectedVariantInput(inputData){var productId=getSelectedProductIdFromActionInput(inputData);if(productId){return new GetDeliveryOptionsForSelectedVariantInput(+productId,+inputData.requestContext.apiSettings.channelId,undefined);}else{throw new Error('Unable to create PriceForSelectedVariantInput, no productId found on module config or query');}};/**\r\n * The Action Method for the GetDeliveryOptionsForSelectedVariant Data Action\r\n * Pulls the currently selected variant from the cache using the getSelectedVariant data action, and gets it's supported delivery options\r\n * via the getDeliveryOptionsAsync RetailServer API\r\n */export function getDeliveryOptionsForSelectedVariantAction(_x,_x2){return _getDeliveryOptionsForSelectedVariantAction.apply(this,arguments);}function _getDeliveryOptionsForSelectedVariantAction(){_getDeliveryOptionsForSelectedVariantAction=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee(input,ctx){return _regeneratorRuntime.wrap(function _callee$(_context){while(1){switch(_context.prev=_context.next){case 0:return _context.abrupt(\"return\",Promise.resolve()// @ts-ignore: Promise vs. ObservablePromise typing conflict\n.then(function(){var activeProduct=input.selectedProduct;if(!activeProduct){var selectedVariantInput=new SelectedVariantInput(input.productId,input.channelId);return getSelectedVariant(selectedVariantInput,ctx);}return activeProduct;}).then(function(productResult){var activeProduct=productResult;if(activeProduct){return getDeliveryOptionsAsync({callerContext:ctx,queryResultSettings:{}},[activeProduct.RecordId],{},null).then(function(response){if(response&&response.length>0){return response[0];}return undefined;});}return undefined;})[\"catch\"](function(error){ctx.trace(error.message);ctx.telemetry.exception(error);ctx.telemetry.debug(\"[getDeliveryOptionsForSelectedVariantAction]Error executing action\");throw new Error('[getDeliveryOptionsForSelectedVariantAction]Error executing action');}));case 1:case\"end\":return _context.stop();}}},_callee);}));return _getDeliveryOptionsForSelectedVariantAction.apply(this,arguments);}export default createObservableDataAction({id:'@msdyn365-commerce-modules/retail-actions/get-delivery-options-for-selected-variant',action:getDeliveryOptionsForSelectedVariantAction,input:createDeliveryOptionsForSelectedVariantInput});","map":{"version":3,"sources":["../../src/get-delivery-options-for-selected-variant.ts"],"names":[],"mappings":"8MAAA,OAAoB,0BAApB,KAAmI,yBAAnI,CAGA,OAAS,uBAAT,KAAwC,wEAAxC,CACA,OAAS,mCAAT,CAA8C,kBAA9C,CAAkE,oBAAlE,KAA8F,SAA9F,CAEA;;AAEG,GACH,UAAa,CAAA,yCAAb,CAMI,mDAAY,SAAZ,CAA+B,SAA/B,CAAkD,eAAlD,CAAmF,UAAnF,CAAsG,iEAO/F,KAAA,WAAA,CAAc,sDAAd,CACA,KAAA,kBAAA,CAAqB,iBAAM,iBAAN,EAArB,CACA,KAAA,aAAA,CAAgB,iBAAiB,MAAjB,EAAhB,CARH,KAAK,SAAL,CAAiB,SAAjB,CACA,KAAK,SAAL,CAAiB,SAAjB,CACA,KAAK,eAAL,CAAuB,eAAvB,CACA,KAAK,UAAL,CAAkB,UAAU,EAAI,EAAhC,CACH,CAXL,CAkBA;;;AAGG,GACH,MAAO,IAAM,CAAA,4CAA4C,CAAG,QAA/C,CAAA,4CAA+C,CAAC,SAAD,CAA+F,CACvJ,GAAM,CAAA,SAAS,CAAG,mCAAmC,CAAC,SAAD,CAArD,CAEA,GAAI,SAAJ,CAAe,CACX,MAAO,IAAI,CAAA,yCAAJ,CACH,CAAC,SADE,CAEH,CAAC,SAAS,CAAC,cAAV,CAAyB,WAAzB,CAAqC,SAFnC,CAGH,SAHG,CAAP,CAKH,CAND,IAMO,CACH,KAAM,IAAI,CAAA,KAAJ,CAAU,6FAAV,CAAN,CACH,CACJ,CAZM,CAcP;;;;AAIG,GACH,eAAsB,CAAA,0CAAtB,mF,2JAAO,iBACH,KADG,CAEH,GAFG,kJAII,OAAO,CAAC,OAAR,EACH;AADG,CAEF,IAFE,CAEG,UAAK,CACP,GAAM,CAAA,aAAa,CAA8B,KAAK,CAAC,eAAvD,CAEA,GAAI,CAAC,aAAL,CAAoB,CAChB,GAAM,CAAA,oBAAoB,CAAG,GAAI,CAAA,oBAAJ,CAAyB,KAAK,CAAC,SAA/B,CAA0C,KAAK,CAAC,SAAhD,CAA7B,CAEA,MAAO,CAAA,kBAAkB,CAAC,oBAAD,CAAuB,GAAvB,CAAzB,CACH,CAED,MAAO,CAAA,aAAP,CACH,CAZE,EAaF,IAbE,CAaG,SAAC,aAAD,CAAwC,CAC1C,GAAM,CAAA,aAAa,CAAyD,aAA5E,CAEA,GAAI,aAAJ,CAAmB,CACf,MAAO,CAAA,uBAAuB,CAC1B,CAAE,aAAa,CAAE,GAAjB,CAAsB,mBAAmB,CAAE,EAA3C,CAD0B,CAE1B,CAAC,aAAa,CAAC,QAAf,CAF0B,CAG1B,EAH0B,CAI1B,IAJ0B,CAAvB,CAKL,IALK,CAKA,SAAA,QAAQ,CAAG,CACd,GAAG,QAAQ,EAAI,QAAQ,CAAC,MAAT,CAAkB,CAAjC,CAAoC,CAChC,MAAO,CAAA,QAAQ,CAAC,CAAD,CAAf,CACH,CAED,MAAO,CAAA,SAAP,CACH,CAXM,CAAP,CAYH,CAED,MAAO,CAAA,SAAP,CACH,CAhCE,WAiCI,SAAC,KAAD,CAAiB,CACpB,GAAG,CAAC,KAAJ,CAAU,KAAK,CAAC,OAAhB,EACA,GAAG,CAAC,SAAJ,CAAc,SAAd,CAAwB,KAAxB,EACA,GAAG,CAAC,SAAJ,CAAc,KAAd,uEACA,KAAM,IAAI,CAAA,KAAJ,CAAU,oEAAV,CAAN,CACH,CAtCE,CAJJ,wD,6EA6CP,cAAe,CAAA,0BAA0B,CAAC,CACtC,EAAE,CAAE,qFADkC,CAEtC,MAAM,CAA+C,0CAFf,CAGtC,KAAK,CAAE,4CAH+B,CAAD,CAAzC","sourcesContent":["import { CacheType, createObservableDataAction, IAction, IActionContext, IActionInput, IAny, ICreateActionContext, IGeneric } from '@msdyn365-commerce/core';\nimport { ProductDeliveryOptions, SimpleProduct } from '@msdyn365-commerce/retail-proxy/dist/Entities/CommerceTypes.g';\n\nimport { getDeliveryOptionsAsync } from '@msdyn365-commerce/retail-proxy/dist/DataActions/ProductsDataActions.g';\nimport { getSelectedProductIdFromActionInput, getSelectedVariant, SelectedVariantInput } from './index';\n\n/**\n * Input class for the GetDeliveryOptionsForSelectedVariant Data Action\n */\nexport class GetDeliveryOptionsForSelectedVariantInput implements IActionInput {\n    public productId: number;\n    public channelId: number;\n    public selectedProduct: SimpleProduct | undefined;\n    public customerId: string;\n\n    constructor(productId: number, channelId: number, selectedProduct?: SimpleProduct, customerId?: string) {\n        this.productId = productId;\n        this.channelId = channelId;\n        this.selectedProduct = selectedProduct;\n        this.customerId = customerId || '';\n    }\n\n    public getCacheKey = () => `DeliveryOptionsForSelectedVariant`;\n    public getCacheObjectType = () => 'DeliveryOptions';\n    public dataCacheType = (): CacheType => 'none';\n}\n\n/**\n * The createInput method for the GetDeliveryOptionsForSelectedVariant Data Action\n * @param inputData The input data for the createInput method\n */\nexport const createDeliveryOptionsForSelectedVariantInput = (inputData: ICreateActionContext<IGeneric<IAny>>): GetDeliveryOptionsForSelectedVariantInput => {\n    const productId = getSelectedProductIdFromActionInput(inputData);\n\n    if (productId) {\n        return new GetDeliveryOptionsForSelectedVariantInput(\n            +productId,\n            +inputData.requestContext.apiSettings.channelId,\n            undefined\n            );\n    } else {\n        throw new Error('Unable to create PriceForSelectedVariantInput, no productId found on module config or query');\n    }\n};\n\n/**\n * The Action Method for the GetDeliveryOptionsForSelectedVariant Data Action\n * Pulls the currently selected variant from the cache using the getSelectedVariant data action, and gets it's supported delivery options\n * via the getDeliveryOptionsAsync RetailServer API\n */\nexport async function getDeliveryOptionsForSelectedVariantAction(\n    input: GetDeliveryOptionsForSelectedVariantInput,\n    ctx: IActionContext\n): Promise<ProductDeliveryOptions | undefined> {\n    return Promise.resolve()\n        // @ts-ignore: Promise vs. ObservablePromise typing conflict\n        .then(() => {\n            const activeProduct: SimpleProduct | undefined = input.selectedProduct;\n\n            if (!activeProduct) {\n                const selectedVariantInput = new SelectedVariantInput(input.productId, input.channelId);\n\n                return getSelectedVariant(selectedVariantInput, ctx);\n            }\n\n            return activeProduct;\n        })\n        .then((productResult: SimpleProduct | null) => {\n            const activeProduct: SimpleProduct | undefined = <SimpleProduct | undefined>productResult;\n\n            if (activeProduct) {\n                return getDeliveryOptionsAsync(\n                    { callerContext: ctx, queryResultSettings: {} },\n                    [activeProduct.RecordId],\n                    {},\n                    null\n                ).then(response => {\n                    if(response && response.length > 0) {\n                        return response[0];\n                    }\n\n                    return undefined;\n                });\n            }\n\n            return undefined;\n        })\n        .catch((error: Error) => {\n            ctx.trace(error.message);\n            ctx.telemetry.exception(error);\n            ctx.telemetry.debug(`[getDeliveryOptionsForSelectedVariantAction]Error executing action`);\n            throw new Error('[getDeliveryOptionsForSelectedVariantAction]Error executing action');\n        });\n}\n\nexport default createObservableDataAction({\n    id: '@msdyn365-commerce-modules/retail-actions/get-delivery-options-for-selected-variant',\n    action: <IAction<ProductDeliveryOptions | undefined>>getDeliveryOptionsForSelectedVariantAction,\n    input: createDeliveryOptionsForSelectedVariantInput\n});\n"],"sourceRoot":""},"metadata":{},"sourceType":"module"}