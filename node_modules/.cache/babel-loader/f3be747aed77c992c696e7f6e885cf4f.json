{"ast":null,"code":"import _regeneratorRuntime from\"@babel/runtime/regenerator\";import _asyncToGenerator from\"@babel/runtime/helpers/esm/asyncToGenerator\";import _classCallCheck from\"@babel/runtime/helpers/esm/classCallCheck\";import{createObservableDataAction}from'@msdyn365-commerce/core';import{getCartState}from'@msdyn365-commerce/global-state';import{getDeliveryOptionsAsync}from'@msdyn365-commerce/retail-proxy/dist/DataActions/ProductsDataActions.g';import{buildCacheKey}from'./index';import{ActiveCartProductsInput,getActiveCartProductsAction}from'./index';/**\r\n * Input class for delivery options for items in cart\r\n */export var ProductDeliveryOptionsForCartLineItems=function ProductDeliveryOptionsForCartLineItems(apiSettings){var _this=this;_classCallCheck(this,ProductDeliveryOptionsForCartLineItems);this.getCacheKey=function(){return buildCacheKey(\"ActiveCartLineItemsDeliveryOptions\",_this.apiSettings);};this.getCacheObjectType=function(){return'ActiveCartLineItemsDeliveryOptions';};this.dataCacheType=function(){return'request';};this.apiSettings=apiSettings;};var createInput=function createInput(inputData){return new ProductDeliveryOptionsForCartLineItems(inputData.requestContext.apiSettings);};/**\r\n * Calls the Retail API to get the delivery options for items in the cart\r\n */export function getDeliveryOptionsForCartLineItems(_x,_x2){return _getDeliveryOptionsForCartLineItems.apply(this,arguments);}function _getDeliveryOptionsForCartLineItems(){_getDeliveryOptionsForCartLineItems=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee(input,ctx){var cartState,cart,products;return _regeneratorRuntime.wrap(function _callee$(_context){while(1){switch(_context.prev=_context.next){case 0:if(input){_context.next=2;break;}throw new Error('[getDeliveryOptionsForCartLineItems]No valid Input was provided, failing');case 2:_context.next=4;return getCartState(ctx);case 4:cartState=_context.sent;cart=cartState.cart;_context.next=8;return getActiveCartProductsAction(new ActiveCartProductsInput(),ctx);case 8:products=_context.sent;if(!(!cart||!products||products.length===0)){_context.next=13;break;}console.log('[getDeliveryOptionsForCartLineItems] Not able to get cart OR channelConfiguration or no products in cart');ctx.trace('[getDeliveryOptionsForCartLineItems] Not able to get cart OR channelConfiguration or no products in cart');return _context.abrupt(\"return\",[]);case 13:return _context.abrupt(\"return\",getDeliveryOptionsAsync({callerContext:ctx,queryResultSettings:{}},products.map(function(x){return x.RecordId;}),{},null).then(function(result){return result;})[\"catch\"](function(error){ctx.trace(error.message);ctx.telemetry.exception(error);ctx.telemetry.debug(\"[getDeliveryOptionsForCartLineItems]Error executing action\");throw new Error('[getDeliveryOptionsForCartLineItems]Error executing action');}));case 14:case\"end\":return _context.stop();}}},_callee);}));return _getDeliveryOptionsForCartLineItems.apply(this,arguments);}export default createObservableDataAction({id:'@msdyn365-commerce-modules/retail-actions/get-delivery-options-for-cartlines',action:getDeliveryOptionsForCartLineItems,input:createInput});","map":{"version":3,"sources":["../../src/get-delivery-options-for-cartlines.ts"],"names":[],"mappings":"8MAAA,OAAoB,0BAApB,KAAyJ,yBAAzJ,CACA,OAAS,YAAT,KAA6B,iCAA7B,CAEA,OAAS,uBAAT,KAAwC,wEAAxC,CACA,OAAS,aAAT,KAA+B,SAA/B,CACA,OAAQ,uBAAR,CAAiC,2BAAjC,KAAmE,SAAnE,CAEA;;AAEG,GACH,UAAa,CAAA,sCAAb,CAGI,gDAAY,WAAZ,CAA6C,6EAItC,KAAA,WAAA,CAAc,iBAAM,CAAA,aAAa,sCAAuC,KAAI,CAAC,WAA5C,CAAnB,EAAd,CACA,KAAA,kBAAA,CAAqB,iBAAM,oCAAN,EAArB,CACA,KAAA,aAAA,CAAgB,iBAAiB,SAAjB,EAAhB,CALH,KAAK,WAAL,CAAmB,WAAnB,CACH,CALL,CAYA,GAAM,CAAA,WAAW,CAAG,QAAd,CAAA,WAAc,CAAC,SAAD,CAAoD,CACpE,MAAO,IAAI,CAAA,sCAAJ,CAA2C,SAAS,CAAC,cAAV,CAAyB,WAApE,CAAP,CACH,CAFD,CAIA;;AAEG,GACH,eAAsB,CAAA,kCAAtB,2E,2IAAO,iBAAkD,KAAlD,CAAiG,GAAjG,iJAEE,KAFF,8BAGO,IAAI,CAAA,KAAJ,CAAU,0EAAV,CAHP,8BAKqB,CAAA,YAAY,CAAC,GAAD,CALjC,QAKG,SALH,eAMG,IANH,CAMU,SAAS,CAAC,IANpB,uBAOoB,CAAA,2BAA2B,CAAC,GAAI,CAAA,uBAAJ,EAAD,CAAgC,GAAhC,CAP/C,QAOG,QAPH,oBASA,CAAC,IAAD,EAAS,CAAC,QAAV,EAAsB,QAAQ,CAAC,MAAT,GAAoB,CAT1C,2BAUC,OAAO,CAAC,GAAR,CAAY,0GAAZ,EACA,GAAG,CAAC,KAAJ,CAAU,0GAAV,EAXD,gCAYkC,EAZlC,0CAeI,uBAAuB,CAAC,CAAE,aAAa,CAAE,GAAjB,CAAsB,mBAAmB,CAAE,EAA3C,CAAD,CAAkD,QAAQ,CAAC,GAAT,CAAa,SAAA,CAAC,QAAI,CAAA,CAAC,CAAC,QAAN,EAAd,CAAlD,CAAiF,EAAjF,CAAqF,IAArF,CAAvB,CACF,IADE,CACG,SAAA,MAAM,CAAG,CACX,MAAO,CAAA,MAAP,CACH,CAHE,WAGM,SAAC,KAAD,CAAiB,CACtB,GAAG,CAAC,KAAJ,CAAU,KAAK,CAAC,OAAhB,EACA,GAAG,CAAC,SAAJ,CAAc,SAAd,CAAwB,KAAxB,EACA,GAAG,CAAC,SAAJ,CAAc,KAAd,+DACA,KAAM,IAAI,CAAA,KAAJ,CAAU,4DAAV,CAAN,CACH,CARE,CAfJ,yD,qEA0BP,cAAe,CAAA,0BAA0B,CAAC,CACtC,EAAE,CAAE,8EADkC,CAEtC,MAAM,CAAuC,kCAFP,CAGtC,KAAK,CAAE,WAH+B,CAAD,CAAzC","sourcesContent":["import { CacheType, createObservableDataAction, IAction, IActionContext, IActionInput, IAny, ICommerceApiSettings, ICreateActionContext, IGeneric } from '@msdyn365-commerce/core';\nimport { getCartState } from '@msdyn365-commerce/global-state';\nimport { ProductAvailableQuantity, ProductDeliveryOptions } from '@msdyn365-commerce/retail-proxy';\nimport { getDeliveryOptionsAsync } from '@msdyn365-commerce/retail-proxy/dist/DataActions/ProductsDataActions.g';\nimport { buildCacheKey, } from './index';\nimport {ActiveCartProductsInput, getActiveCartProductsAction} from './index';\n\n/**\n * Input class for delivery options for items in cart\n */\nexport class ProductDeliveryOptionsForCartLineItems implements IActionInput {\n    private apiSettings: ICommerceApiSettings;\n\n    constructor(apiSettings: ICommerceApiSettings) {\n        this.apiSettings = apiSettings;\n    }\n\n    public getCacheKey = () => buildCacheKey(`ActiveCartLineItemsDeliveryOptions`, this.apiSettings);\n    public getCacheObjectType = () => 'ActiveCartLineItemsDeliveryOptions';\n    public dataCacheType = (): CacheType => 'request';\n}\n\nconst createInput = (inputData: ICreateActionContext<IGeneric<IAny>>) => {\n    return new ProductDeliveryOptionsForCartLineItems(inputData.requestContext.apiSettings);\n};\n\n/**\n * Calls the Retail API to get the delivery options for items in the cart\n */\nexport async function getDeliveryOptionsForCartLineItems(input: ProductDeliveryOptionsForCartLineItems, ctx: IActionContext): Promise<ProductDeliveryOptions[]> {\n    // If no input is provided fail out\n    if (!input) {\n        throw new Error('[getDeliveryOptionsForCartLineItems]No valid Input was provided, failing');\n    }\n    const cartState = await getCartState(ctx);\n    const cart = cartState.cart;\n    const products = await getActiveCartProductsAction(new ActiveCartProductsInput(), ctx);\n\n    if(!cart || !products || products.length === 0) {\n        console.log('[getDeliveryOptionsForCartLineItems] Not able to get cart OR channelConfiguration or no products in cart');\n        ctx.trace('[getDeliveryOptionsForCartLineItems] Not able to get cart OR channelConfiguration or no products in cart');\n        return <ProductDeliveryOptions[]>[];\n    }\n\n    return getDeliveryOptionsAsync({ callerContext: ctx, queryResultSettings: {} }, products.map(x => x.RecordId), {}, null)\n        .then(result => {\n            return result;\n        }).catch((error: Error) => {\n            ctx.trace(error.message);\n            ctx.telemetry.exception(error);\n            ctx.telemetry.debug(`[getDeliveryOptionsForCartLineItems]Error executing action`);\n            throw new Error('[getDeliveryOptionsForCartLineItems]Error executing action');\n        });\n}\n\nexport default createObservableDataAction({\n    id: '@msdyn365-commerce-modules/retail-actions/get-delivery-options-for-cartlines',\n    action: <IAction<ProductAvailableQuantity[]>>getDeliveryOptionsForCartLineItems,\n    input: createInput\n});\n"],"sourceRoot":""},"metadata":{},"sourceType":"module"}