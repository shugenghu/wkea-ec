{"ast":null,"code":"import\"core-js/modules/es.promise.js\";import\"core-js/modules/es.typed-array.uint32-array.js\";import\"core-js/modules/es.typed-array.to-locale-string.js\";import\"core-js/modules/web.dom-collections.iterator.js\";import{__decorate}from\"tslib\";import{action}from'mobx';import{BaseStoreSelectorStateManager}from'./base-store-selector-state-manager';/**\r\n * Instance of IStoreSelectorStateManager manager that uses Map service\r\n * for geo location\r\n */export class MapStoreSelectorStateManager extends BaseStoreSelectorStateManager{constructor(){super(...arguments);this.SERVICE_ENDPOINT='https://dev.virtualearth.net/REST/v1/';this.MAP_API_ENDPOINT='https://www.bing.com/api/maps/mapcontrol?callback=mapAPIReady';}async geoLocate(searchTerm,actionContext){if(!searchTerm||!actionContext.requestContext.channel||!actionContext.requestContext.channel.BingMapsApiKey||!actionContext.requestContext.channel.BingMapsEnabled){return undefined;}const jsonp=\"mapSearchCallback_\".concat(crypto.getRandomValues(new Uint32Array(1))[0]);const query=encodeURI(searchTerm);const key=encodeURI(actionContext.requestContext.channel.BingMapsApiKey);const geolocationApiUrl=actionContext.requestContext.app&&actionContext.requestContext.app.config&&actionContext.requestContext.app.config.geolocationApiUrl;const requestUrl=\"\".concat(geolocationApiUrl?geolocationApiUrl:this.SERVICE_ENDPOINT,\"/Locations?query=\").concat(query,\"&key=\").concat(key,\"&jsonp=\").concat(jsonp);return new Promise(resolve=>{const script=document.createElement('script');script.setAttribute('type','text/javascript');script.setAttribute('src',requestUrl);window[jsonp]=data=>{delete window[jsonp];document.body.removeChild(script);if(data&&data.resourceSets&&data.resourceSets.length>0&&data.resourceSets[0].resources.length>0){resolve({latitude:data.resourceSets[0].resources[0].point.coordinates[0],longitude:data.resourceSets[0].resources[0].point.coordinates[1]});}resolve(undefined);};document.body.appendChild(script);});}async loadMapApi(input){var _document;const isScriptAlreadyLoaded=(_document=document)!==null&&_document!==void 0&&_document.getElementById('msdyn_map-api-script')?true:false;if(isScriptAlreadyLoaded){// Prevents from loading multiple script into the body\nreturn Promise.resolve();}const url=\"\".concat(this.MAP_API_ENDPOINT).concat(input.key?\"&key=\".concat(input.key):'').concat(input.lang?\"&setLang=\".concat(input.lang):'').concat(input.market?\"&setMkt=\".concat(input.market):'');return new Promise((resolve,reject)=>{var _document2,_document3,_document3$body;const script=(_document2=document)===null||_document2===void 0?void 0:_document2.createElement('script');script.type='text/javascript';script.async=true;script.defer=true;script.src=url;script.id='msdyn_map-api-script';if(window){window.mapAPIReady=()=>{this.isMapApiLoaded=true;resolve();};}script.onerror=error=>{reject(error);};(_document3=document)===null||_document3===void 0?void 0:(_document3$body=_document3.body)===null||_document3$body===void 0?void 0:_document3$body.appendChild(script);});}}__decorate([action],MapStoreSelectorStateManager.prototype,\"geoLocate\",null);__decorate([action],MapStoreSelectorStateManager.prototype,\"loadMapApi\",null);","map":{"version":3,"sources":["store-selector-state-manager/map-store-selector-state-manager.ts"],"names":[],"mappings":"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","sourcesContent":["import { action } from 'mobx';\n\nimport { IActionContext } from '@msdyn365-commerce/core';\nimport { BaseStoreSelectorStateManager } from './base-store-selector-state-manager';\nimport { ILoadMapApiInput, IStoreSelectorLocation } from './i-store-selection-state-manager';\nimport { MapLocationsResult, IMapWindow } from './models/map-data';\n\ndeclare const window: IMapWindow;\n/**\n * Instance of IStoreSelectorStateManager manager that uses Map service\n * for geo location\n */\nexport class MapStoreSelectorStateManager extends BaseStoreSelectorStateManager {\n    private readonly SERVICE_ENDPOINT: string = 'https://dev.virtualearth.net/REST/v1/';\n    private readonly MAP_API_ENDPOINT: string = 'https://www.bing.com/api/maps/mapcontrol?callback=mapAPIReady';\n\n    @action\n    public async geoLocate(searchTerm: string, actionContext: IActionContext): Promise<IStoreSelectorLocation | undefined> {\n        if (!searchTerm ||\n            !actionContext.requestContext.channel ||\n            !actionContext.requestContext.channel.BingMapsApiKey ||\n            !actionContext.requestContext.channel.BingMapsEnabled) {\n            return undefined;\n        }\n\n        const jsonp = `mapSearchCallback_${crypto.getRandomValues(new Uint32Array(1))[0]}`;\n        const query = encodeURI(searchTerm);\n        const key = encodeURI(actionContext.requestContext.channel.BingMapsApiKey);\n\n        const geolocationApiUrl = actionContext.requestContext.app && actionContext.requestContext.app.config && actionContext.requestContext.app.config.geolocationApiUrl;\n        const requestUrl = `${geolocationApiUrl ? geolocationApiUrl : this.SERVICE_ENDPOINT}/Locations?query=${query}&key=${key}&jsonp=${jsonp}`;\n\n        return new Promise<IStoreSelectorLocation | undefined>((resolve) => {\n            const script = document.createElement('script');\n            script.setAttribute('type', 'text/javascript');\n            script.setAttribute('src', requestUrl);\n\n            window[jsonp] = (data: MapLocationsResult) => {\n                delete window[jsonp];\n                document.body.removeChild(script);\n\n                if (data && data.resourceSets && data.resourceSets.length > 0 && data.resourceSets[0].resources.length > 0) {\n                    resolve({\n                        latitude: data.resourceSets[0].resources[0].point.coordinates[0],\n                        longitude: data.resourceSets[0].resources[0].point.coordinates[1]\n                    });\n                }\n\n                resolve(undefined);\n            };\n\n            document.body.appendChild(script);\n        });\n\n    }\n\n    @action\n    public async loadMapApi(input: ILoadMapApiInput): Promise<void> {\n        const isScriptAlreadyLoaded = document?.getElementById('msdyn_map-api-script') ? true : false;\n\n        if (isScriptAlreadyLoaded) {\n            // Prevents from loading multiple script into the body\n            return Promise.resolve();\n        }\n\n        const url = `${this.MAP_API_ENDPOINT}${input.key ? `&key=${input.key}` : ''}${input.lang ? `&setLang=${input.lang}` : ''}${input.market ? `&setMkt=${input.market}` : ''}`;\n\n        return new Promise((resolve, reject) => {\n            const script = document?.createElement('script');\n            script.type = 'text/javascript';\n            script.async = true;\n            script.defer = true;\n            script.src = url;\n            script.id = 'msdyn_map-api-script';\n            if (window) {\n                window.mapAPIReady = () => {\n                    this.isMapApiLoaded = true;\n                    resolve();\n                };\n            }\n            script.onerror = (error: string | Event) => {\n                reject(error);\n            };\n            document?.body?.appendChild(script);\n        });\n    }\n\n}"],"sourceRoot":"./src/"},"metadata":{},"sourceType":"module"}