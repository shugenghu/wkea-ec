{"ast":null,"code":"import _regeneratorRuntime from\"@babel/runtime/regenerator\";import _asyncToGenerator from\"@babel/runtime/helpers/esm/asyncToGenerator\";import _classCallCheck from\"@babel/runtime/helpers/esm/classCallCheck\";import{getSimpleProducts,ProductInput}from'@msdyn365-commerce-modules/retail-actions';import{createObservableDataAction}from'@msdyn365-commerce/core';import{getCheckoutState}from'@msdyn365-commerce/global-state';export var ActiveCheckoutCartProductsInput=function ActiveCheckoutCartProductsInput(){_classCallCheck(this,ActiveCheckoutCartProductsInput);this.getCacheKey=function(){return'ActiveCheckoutCartProducts';};this.getCacheObjectType=function(){return'ActiveCheckoutCartProducts';};this.dataCacheType=function(){return'none';};};export var createInput=function createInput(){return new ActiveCheckoutCartProductsInput();};export function getActiveCheckoutCartProductsAction(_x,_x2){return _getActiveCheckoutCartProductsAction.apply(this,arguments);}function _getActiveCheckoutCartProductsAction(){_getActiveCheckoutCartProductsAction=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee(input,ctx){var checkoutState,cart;return _regeneratorRuntime.wrap(function _callee$(_context){while(1){switch(_context.prev=_context.next){case 0:if(input){_context.next=3;break;}ctx.telemetry.exception(new Error('[getActiveCheckoutCartWithProducts]No valid Input was provided, failing'));throw new Error('[getActiveCheckoutCartWithProducts]No valid Input was provided, failing');case 3:_context.next=5;return getCheckoutState(ctx);case 5:checkoutState=_context.sent;cart=checkoutState.checkoutCart.cart;if(!(cart&&cart.CartLines&&cart.CartLines.length)){_context.next=9;break;}return _context.abrupt(\"return\",getSimpleProducts(cart.CartLines.map(function(cartLine){if(cartLine.ProductId){return new ProductInput(cartLine.ProductId,ctx.requestContext.apiSettings);}return undefined;}).filter(Boolean),ctx).then(function(products){if(products){return products;}else{return[];}})[\"catch\"](function(error){ctx.telemetry.exception(error);throw new Error('[getActiveCheckoutCartWithProdcuts]Unable to hydrate cart with product information');}));case 9:return _context.abrupt(\"return\",[]);case 10:case\"end\":return _context.stop();}}},_callee);}));return _getActiveCheckoutCartProductsAction.apply(this,arguments);}export default createObservableDataAction({id:'@msdyn365-commerce-modules/checkout/get-products-in-active-checkout-cart',action:getActiveCheckoutCartProductsAction,input:createInput});","map":{"version":3,"sources":["modules/checkout/actions/get-products-in-active-checkout-cart.ts"],"names":[],"mappings":"8MAAA,OAAS,iBAAT,CAA4B,YAA5B,KAAgD,2CAAhD,CACA,OAAoB,0BAApB,KAA6F,yBAA7F,CACA,OAAS,gBAAT,KAAiC,iCAAjC,CAMA,UAAa,CAAA,+BAAb,CAAA,0CAAA,uDACW,KAAA,WAAA,CAAc,iBAAM,4BAAN,EAAd,CACA,KAAA,kBAAA,CAAqB,iBAAM,4BAAN,EAArB,CACA,KAAA,aAAA,CAAgB,iBAAiB,MAAjB,EAAhB,CACV,CAJD,CAMA,MAAO,IAAM,CAAA,WAAW,CAAG,QAAd,CAAA,WAAc,EAAK,CAC5B,MAAO,IAAI,CAAA,+BAAJ,EAAP,CACH,CAFM,CAOP,eAAsB,CAAA,mCAAtB,4E,6IAAO,iBAAmD,KAAnD,CAA2F,GAA3F,4IAEE,KAFF,yBAGC,GAAG,CAAC,SAAJ,CAAc,SAAd,CAAwB,GAAI,CAAA,KAAJ,CAAU,yEAAV,CAAxB,EAHD,KAIO,IAAI,CAAA,KAAJ,CAAU,yEAAV,CAJP,8BAOyB,CAAA,gBAAgB,CAAC,GAAD,CAPzC,QAOG,aAPH,eAQG,IARH,CAQU,aAAa,CAAC,YAAd,CAA2B,IARrC,MAWC,IAAI,EAAI,IAAI,CAAC,SAAb,EAA0B,IAAI,CAAC,SAAL,CAAe,MAX1C,0DAYQ,iBAAiB,CACJ,IAAI,CAAC,SAAL,CAAe,GAAf,CAAmB,SAAA,QAAQ,CAAG,CAC1C,GAAI,QAAQ,CAAC,SAAb,CAAwB,CACpB,MAAO,IAAI,CAAA,YAAJ,CAAiB,QAAQ,CAAC,SAA1B,CAAqC,GAAG,CAAC,cAAJ,CAAmB,WAAxD,CAAP,CACH,CACD,MAAO,CAAA,SAAP,CACH,CALe,EAKb,MALa,CAKN,OALM,CADI,CAOpB,GAPoB,CAAjB,CASF,IATE,CASG,SAAA,QAAQ,CAAG,CACb,GAAI,QAAJ,CAAc,CACV,MAAO,CAAA,QAAP,CACH,CAFD,IAEO,CACH,MAAO,EAAP,CACH,CACJ,CAfE,WAgBI,SAAA,KAAK,CAAG,CACX,GAAG,CAAC,SAAJ,CAAc,SAAd,CAAwB,KAAxB,EACA,KAAM,IAAI,CAAA,KAAJ,CAAU,oFAAV,CAAN,CACH,CAnBE,CAZR,yCAkCqB,EAlCrB,yD,sEAqCP,cAAe,CAAA,0BAA0B,CAAC,CACtC,EAAE,CAAE,0EADkC,CAEtC,MAAM,CAA4B,mCAFI,CAGtC,KAAK,CAAE,WAH+B,CAAD,CAAzC","sourcesContent":["import { getSimpleProducts, ProductInput } from '@msdyn365-commerce-modules/retail-actions';\nimport { CacheType, createObservableDataAction, IAction, IActionContext, IActionInput } from '@msdyn365-commerce/core';\nimport { getCheckoutState } from '@msdyn365-commerce/global-state';\nimport { SimpleProduct } from '@msdyn365-commerce/retail-proxy/dist/Entities/CommerceTypes.g';\n\n/**\n * Input class for ActiveCheckoutCartWithProducts data action\n */\nexport class ActiveCheckoutCartProductsInput implements IActionInput {\n    public getCacheKey = () => 'ActiveCheckoutCartProducts';\n    public getCacheObjectType = () => 'ActiveCheckoutCartProducts';\n    public dataCacheType = (): CacheType => 'none';\n}\n\nexport const createInput = () => {\n    return new ActiveCheckoutCartProductsInput();\n};\n\n/**\n * Calls the Retail API and returns a cart object based on the passed GetCartInput\n */\nexport async function getActiveCheckoutCartProductsAction(input: ActiveCheckoutCartProductsInput, ctx: IActionContext): Promise<SimpleProduct[]> {\n    // If no cart ID is provided in input, we need to create a cart object\n    if (!input) {\n        ctx.telemetry.exception(new Error('[getActiveCheckoutCartWithProducts]No valid Input was provided, failing'));\n        throw new Error('[getActiveCheckoutCartWithProducts]No valid Input was provided, failing');\n    }\n\n    const checkoutState = await getCheckoutState(ctx);\n    const cart = checkoutState.checkoutCart.cart;\n\n    // If there are cart lines, make call to get products\n    if (cart && cart.CartLines && cart.CartLines.length) {\n        return getSimpleProducts(\n            <ProductInput[]>cart.CartLines.map(cartLine => {\n                if (cartLine.ProductId) {\n                    return new ProductInput(cartLine.ProductId, ctx.requestContext.apiSettings);\n                }\n                return undefined;\n            }).filter(Boolean),\n            ctx\n        )\n            .then(products => {\n                if (products) {\n                    return products;\n                } else {\n                    return [];\n                }\n            })\n            .catch(error => {\n                ctx.telemetry.exception(error);\n                throw new Error('[getActiveCheckoutCartWithProdcuts]Unable to hydrate cart with product information');\n            });\n    }\n\n    return <SimpleProduct[]>[];\n}\n\nexport default createObservableDataAction({\n    id: '@msdyn365-commerce-modules/checkout/get-products-in-active-checkout-cart',\n    action: <IAction<SimpleProduct[]>>getActiveCheckoutCartProductsAction,\n    input: createInput\n});\n"],"sourceRoot":"./src/"},"metadata":{},"sourceType":"module"}