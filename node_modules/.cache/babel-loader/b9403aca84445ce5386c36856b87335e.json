{"ast":null,"code":"import{DataServiceQuery}from'../DataServiceQuery';import{InventoryInboundOutboundDocumentClass,InventoryInboundOutboundDocumentUpdateLinesByCriteriaResultClass,InventoryInboundOutboundDocumentLineClass,InventoryDocumentSerialNumberLineClass,InventoryDocumentValidationResultSummaryClass,InventoryDocumentValidationResultLineClass,InventoryInboundOutboundDocumentLinesSummaryClass,InventoryDocumentSerialNumberLinesSummaryClass}from'../Entities/CommerceModels.g';import{executeAction}from'../retail-action';function inventoryInboundOutboundDocumentsQuery(workDocumentId){var key=workDocumentId?{WorkDocumentId:workDocumentId}:null;return new DataServiceQuery(\"InventoryInboundOutboundDocuments\",\"InventoryInboundOutboundDocument\",InventoryInboundOutboundDocumentClass,key);}export function createCreateInput(entity){return inventoryInboundOutboundDocumentsQuery().create(entity);}export function createInventoryInboundOutboundDocumentAsync(context,entity){var request=createCreateInput(entity);return executeAction(request,context);}export function createUpdateInput(entity){return inventoryInboundOutboundDocumentsQuery(entity.WorkDocumentId).update(entity);}export function updateAsync(context,entity){var request=createUpdateInput(entity);return executeAction(request,context);}export function createDeleteAsync(entity){return inventoryInboundOutboundDocumentsQuery(entity.WorkDocumentId)[\"delete\"]();}export function deleteAsync(context,entity){var request=createDeleteAsync(entity);return executeAction(request,context);}export function createReadAsync(workDocumentId){return inventoryInboundOutboundDocumentsQuery(workDocumentId).read();}export function readAsync(context,workDocumentId){var request=createReadAsync(workDocumentId);return executeAction(request,context);}export function createReadAllAsync(queryResultSettings){return inventoryInboundOutboundDocumentsQuery().resultSettings(queryResultSettings).read();}export function readAllAsync(context){var request=createReadAllAsync(context.queryResultSettings);return executeAction(request,context);}export function createUpdateStatusInput(workDocumentId,documentStatus,documentVersion){var query=inventoryInboundOutboundDocumentsQuery(workDocumentId);return query.createDataServiceRequestForOperation('UpdateStatus',true,InventoryInboundOutboundDocumentClass,'false',{bypassCache:'get',returnEntity:'InventoryInboundOutboundDocument'},{documentStatus:documentStatus,documentVersion:documentVersion});}export function updateStatusAsync(context,workDocumentId,documentStatus,documentVersion){var request=createUpdateStatusInput(workDocumentId,documentStatus,documentVersion);return executeAction(request,context);}export function createUpdateLinesByCriteriaInput(workDocumentId,filterCriteria,updateLinesAction,returnUpdatedLinesPolicy){var query=inventoryInboundOutboundDocumentsQuery(workDocumentId);return query.createDataServiceRequestForOperation('UpdateLinesByCriteria',true,InventoryInboundOutboundDocumentUpdateLinesByCriteriaResultClass,'false',{bypassCache:'get',returnEntity:'InventoryInboundOutboundDocumentUpdateLinesByCriteriaResult'},{filterCriteria:filterCriteria,updateLinesAction:updateLinesAction,returnUpdatedLinesPolicy:returnUpdatedLinesPolicy});}export function updateLinesByCriteriaAsync(context,workDocumentId,filterCriteria,updateLinesAction,returnUpdatedLinesPolicy){var request=createUpdateLinesByCriteriaInput(workDocumentId,filterCriteria,updateLinesAction,returnUpdatedLinesPolicy);return executeAction(request,context);}export function createUpdateLineInput(workDocumentId,documentLine){var query=inventoryInboundOutboundDocumentsQuery(workDocumentId);return query.createDataServiceRequestForOperation('UpdateLine',true,InventoryInboundOutboundDocumentLineClass,'false',{bypassCache:'get',returnEntity:'InventoryInboundOutboundDocumentLine'},{documentLine:documentLine});}export function updateLineAsync(context,workDocumentId,documentLine){var request=createUpdateLineInput(workDocumentId,documentLine);return executeAction(request,context);}export function createUpdateWorkingTerminalInput(workDocumentId,documentVersion){var query=inventoryInboundOutboundDocumentsQuery(workDocumentId);return query.createDataServiceRequestForOperation('UpdateWorkingTerminal',true,InventoryInboundOutboundDocumentClass,'false',{bypassCache:'get',returnEntity:'InventoryInboundOutboundDocument'},{documentVersion:documentVersion});}export function updateWorkingTerminalAsync(context,workDocumentId,documentVersion){var request=createUpdateWorkingTerminalInput(workDocumentId,documentVersion);return executeAction(request,context);}export function createUpdateNoteInput(workDocumentId,documentNote,documentVersion){var query=inventoryInboundOutboundDocumentsQuery(workDocumentId);return query.createDataServiceRequestForOperation('UpdateNote',true,InventoryInboundOutboundDocumentClass,'false',{bypassCache:'get',returnEntity:'InventoryInboundOutboundDocument'},{documentNote:documentNote,documentVersion:documentVersion});}export function updateNoteAsync(context,workDocumentId,documentNote,documentVersion){var request=createUpdateNoteInput(workDocumentId,documentNote,documentVersion);return executeAction(request,context);}export function createUpdateReceiptIdInput(workDocumentId,documentReceiptId,documentVersion){var query=inventoryInboundOutboundDocumentsQuery(workDocumentId);return query.createDataServiceRequestForOperation('UpdateReceiptId',true,InventoryInboundOutboundDocumentClass,'false',{bypassCache:'get',returnEntity:'InventoryInboundOutboundDocument'},{documentReceiptId:documentReceiptId,documentVersion:documentVersion});}export function updateReceiptIdAsync(context,workDocumentId,documentReceiptId,documentVersion){var request=createUpdateReceiptIdInput(workDocumentId,documentReceiptId,documentVersion);return executeAction(request,context);}export function createCommitInput(workDocumentId,documentVersion){var query=inventoryInboundOutboundDocumentsQuery(workDocumentId);return query.createDataServiceRequestForOperation('Commit',true,InventoryInboundOutboundDocumentClass,'false',{bypassCache:'get',returnEntity:'InventoryInboundOutboundDocument'},{documentVersion:documentVersion});}export function commitAsync(context,workDocumentId,documentVersion){var request=createCommitInput(workDocumentId,documentVersion);return executeAction(request,context);}export function createRefreshOperationStatusInput(workDocumentId){var query=inventoryInboundOutboundDocumentsQuery(workDocumentId);return query.createDataServiceRequestForOperation('RefreshOperationStatus',true,InventoryInboundOutboundDocumentClass,'false',{bypassCache:'get',returnEntity:'InventoryInboundOutboundDocument'},{});}export function refreshOperationStatusAsync(context,workDocumentId){var request=createRefreshOperationStatusInput(workDocumentId);return executeAction(request,context);}export function createStartInput(sourceDocumentId,sourceDocumentType){var query=inventoryInboundOutboundDocumentsQuery();return query.createDataServiceRequestForOperation('Start',true,InventoryInboundOutboundDocumentClass,'false',{bypassCache:'get',returnEntity:'InventoryInboundOutboundDocument'},{sourceDocumentId:sourceDocumentId,sourceDocumentType:sourceDocumentType});}export function startAsync(context,sourceDocumentId,sourceDocumentType){var request=createStartInput(sourceDocumentId,sourceDocumentType);return executeAction(request,context);}export function createAddLineInput(workDocumentId,documentLine){var query=inventoryInboundOutboundDocumentsQuery(workDocumentId);return query.createDataServiceRequestForOperation('AddLine',true,InventoryInboundOutboundDocumentLineClass,'false',{bypassCache:'get',returnEntity:'InventoryInboundOutboundDocumentLine'},{documentLine:documentLine});}export function addLineAsync(context,workDocumentId,documentLine){var request=createAddLineInput(workDocumentId,documentLine);return executeAction(request,context);}export function createDeleteLineInput(workDocumentId,documentLineId,documentLineVersion){var query=inventoryInboundOutboundDocumentsQuery(workDocumentId);return query.createDataServiceRequestForOperation('DeleteLine',true,'','',{bypassCache:'get',returnEntity:''},{documentLineId:documentLineId,documentLineVersion:documentLineVersion});}export function deleteLineAsync(context,workDocumentId,documentLineId,documentLineVersion){var request=createDeleteLineInput(workDocumentId,documentLineId,documentLineVersion);return executeAction(request,context);}export function createSearchSerialNumberLinesInput(queryResultSettings,workDocumentId,searchCriteria){var query=inventoryInboundOutboundDocumentsQuery(workDocumentId).resultSettings(queryResultSettings);return query.createDataServiceRequestForOperation('SearchSerialNumberLines',true,InventoryDocumentSerialNumberLineClass,'true',{bypassCache:'none',returnEntity:'InventoryDocumentSerialNumberLine'},{searchCriteria:searchCriteria});}export function searchSerialNumberLinesAsync(context,workDocumentId,searchCriteria){var request=createSearchSerialNumberLinesInput(context.queryResultSettings,workDocumentId,searchCriteria);return executeAction(request,context);}export function createValidateInput(workDocumentId,documentVersion){var query=inventoryInboundOutboundDocumentsQuery(workDocumentId);return query.createDataServiceRequestForOperation('Validate',true,InventoryDocumentValidationResultSummaryClass,'false',{bypassCache:'get',returnEntity:'InventoryDocumentValidationResultSummary'},{documentVersion:documentVersion});}export function validateAsync(context,workDocumentId,documentVersion){var request=createValidateInput(workDocumentId,documentVersion);return executeAction(request,context);}export function createSearchValidationResultLinesInput(queryResultSettings,searchCriteria){var query=inventoryInboundOutboundDocumentsQuery().resultSettings(queryResultSettings);return query.createDataServiceRequestForOperation('SearchValidationResultLines',true,InventoryDocumentValidationResultLineClass,'true',{bypassCache:'none',returnEntity:'InventoryDocumentValidationResultLine'},{searchCriteria:searchCriteria});}export function searchValidationResultLinesAsync(context,searchCriteria){var request=createSearchValidationResultLinesInput(context.queryResultSettings,searchCriteria);return executeAction(request,context);}export function createSyncSourceDocumentInput(sourceDocumentId,sourceDocumentType){var query=inventoryInboundOutboundDocumentsQuery();return query.createDataServiceRequestForOperation('SyncSourceDocument',true,'','',{bypassCache:'get',returnEntity:''},{sourceDocumentId:sourceDocumentId,sourceDocumentType:sourceDocumentType});}export function syncSourceDocumentAsync(context,sourceDocumentId,sourceDocumentType){var request=createSyncSourceDocumentInput(sourceDocumentId,sourceDocumentType);return executeAction(request,context);}export function createSearchInboundDocumentsInput(queryResultSettings,searchCriteria){var query=inventoryInboundOutboundDocumentsQuery().resultSettings(queryResultSettings);return query.createDataServiceRequestForOperation('SearchInboundDocuments',true,InventoryInboundOutboundDocumentClass,'true',{bypassCache:'none',returnEntity:'InventoryInboundOutboundDocument'},{searchCriteria:searchCriteria});}export function searchInboundDocumentsAsync(context,searchCriteria){var request=createSearchInboundDocumentsInput(context.queryResultSettings,searchCriteria);return executeAction(request,context);}export function createSearchOutboundDocumentsInput(queryResultSettings,searchCriteria){var query=inventoryInboundOutboundDocumentsQuery().resultSettings(queryResultSettings);return query.createDataServiceRequestForOperation('SearchOutboundDocuments',true,InventoryInboundOutboundDocumentClass,'true',{bypassCache:'none',returnEntity:'InventoryInboundOutboundDocument'},{searchCriteria:searchCriteria});}export function searchOutboundDocumentsAsync(context,searchCriteria){var request=createSearchOutboundDocumentsInput(context.queryResultSettings,searchCriteria);return executeAction(request,context);}export function createSearchLinesInput(queryResultSettings,searchCriteria){var query=inventoryInboundOutboundDocumentsQuery().resultSettings(queryResultSettings);return query.createDataServiceRequestForOperation('SearchLines',true,InventoryInboundOutboundDocumentLineClass,'true',{bypassCache:'none',returnEntity:'InventoryInboundOutboundDocumentLine'},{searchCriteria:searchCriteria});}export function searchLinesAsync(context,searchCriteria){var request=createSearchLinesInput(context.queryResultSettings,searchCriteria);return executeAction(request,context);}export function createResetSerialNumberLineInput(workDocumentId,resetSerialNumberLineAction){var query=inventoryInboundOutboundDocumentsQuery(workDocumentId);return query.createDataServiceRequestForOperation('ResetSerialNumberLine',true,InventoryDocumentSerialNumberLineClass,'false',{bypassCache:'get',returnEntity:'InventoryDocumentSerialNumberLine'},{resetSerialNumberLineAction:resetSerialNumberLineAction});}export function resetSerialNumberLineAsync(context,workDocumentId,resetSerialNumberLineAction){var request=createResetSerialNumberLineInput(workDocumentId,resetSerialNumberLineAction);return executeAction(request,context);}export function createUpdateSerialNumberLineInput(workDocumentId,updateSerialNumberLineAction){var query=inventoryInboundOutboundDocumentsQuery(workDocumentId);return query.createDataServiceRequestForOperation('UpdateSerialNumberLine',true,InventoryDocumentSerialNumberLineClass,'false',{bypassCache:'get',returnEntity:'InventoryDocumentSerialNumberLine'},{updateSerialNumberLineAction:updateSerialNumberLineAction});}export function updateSerialNumberLineAsync(context,workDocumentId,updateSerialNumberLineAction){var request=createUpdateSerialNumberLineInput(workDocumentId,updateSerialNumberLineAction);return executeAction(request,context);}export function createGetLinesSummaryInput(workDocumentId){var query=inventoryInboundOutboundDocumentsQuery(workDocumentId);return query.createDataServiceRequestForOperation('GetLinesSummary',false,InventoryInboundOutboundDocumentLinesSummaryClass,'false',{bypassCache:'none',returnEntity:'InventoryInboundOutboundDocumentLinesSummary'},{});}export function getLinesSummaryAsync(context,workDocumentId){var request=createGetLinesSummaryInput(workDocumentId);return executeAction(request,context);}export function createGetSerialNumberLinesSummaryInput(workDocumentId,documentLineId){var query=inventoryInboundOutboundDocumentsQuery(workDocumentId);return query.createDataServiceRequestForOperation('GetSerialNumberLinesSummary',false,InventoryDocumentSerialNumberLinesSummaryClass,'false',{bypassCache:'none',returnEntity:'InventoryDocumentSerialNumberLinesSummary'},{documentLineId:documentLineId});}export function getSerialNumberLinesSummaryAsync(context,workDocumentId,documentLineId){var request=createGetSerialNumberLinesSummaryInput(workDocumentId,documentLineId);return executeAction(request,context);}","map":{"version":3,"sources":["../../src/DataActions/InventoryInboundOutboundDocumentsDataActions.g.ts"],"names":[],"mappings":"AAEI,OAAS,gBAAT,KAAiC,qBAAjC,CAEA,OAAS,qCAAT,CAAgD,gEAAhD,CAAkH,yCAAlH,CAA6J,sCAA7J,CAAqM,6CAArM,CAAoP,0CAApP,CAAgS,iDAAhS,CAAmV,8CAAnV,KAAyY,8BAAzY,CAEA,OAAS,aAAT,KAA8B,kBAA9B,CAGA,QAAS,CAAA,sCAAT,CAAgD,cAAhD,CAAuE,CACrE,GAAI,CAAA,GAAG,CAAI,cAAD,CAAmB,CAAE,cAAc,CAAE,cAAlB,CAAnB,CAAwD,IAAlE,CACA,MAAO,IAAI,CAAA,gBAAJ,CAAqB,mCAArB,CAA0D,kCAA1D,CAA8F,qCAA9F,CAAqI,GAArI,CAAP,CACD,CAED,MAAM,SAAU,CAAA,iBAAV,CAA4B,MAA5B,CAAoE,CACtE,MAAO,CAAA,sCAAsC,GAAG,MAAzC,CAAgD,MAAhD,CAAP,CACH,CACD,MAAM,SAAU,CAAA,2CAAV,CAAsD,OAAtD,CAAyE,MAAzE,CAAiH,CACnH,GAAM,CAAA,OAAO,CAAG,iBAAiB,CAAC,MAAD,CAAjC,CACA,MAAO,CAAA,aAAa,CAAmC,OAAnC,CAA4C,OAA5C,CAApB,CACH,CACD,MAAM,SAAU,CAAA,iBAAV,CAA4B,MAA5B,CAAoE,CACtE,MAAO,CAAA,sCAAsC,CAAC,MAAM,CAAC,cAAR,CAAtC,CAA8D,MAA9D,CAAqE,MAArE,CAAP,CACH,CACD,MAAM,SAAU,CAAA,WAAV,CAAsB,OAAtB,CAAyC,MAAzC,CAAiF,CACnF,GAAM,CAAA,OAAO,CAAG,iBAAiB,CAAC,MAAD,CAAjC,CACA,MAAO,CAAA,aAAa,CAAmC,OAAnC,CAA4C,OAA5C,CAApB,CACH,CACD,MAAM,SAAU,CAAA,iBAAV,CAA4B,MAA5B,CAAoE,CACtE,MAAO,CAAA,sCAAsC,CAAC,MAAM,CAAC,cAAR,CAAtC,YAAP,CACH,CACD,MAAM,SAAU,CAAA,WAAV,CAAsB,OAAtB,CAAyC,MAAzC,CAAiF,CACnF,GAAM,CAAA,OAAO,CAAG,iBAAiB,CAAC,MAAD,CAAjC,CACA,MAAO,CAAA,aAAa,CAAa,OAAb,CAAsB,OAAtB,CAApB,CACH,CACD,MAAM,SAAU,CAAA,eAAV,CAA0B,cAA1B,CAAgD,CAClD,MAAO,CAAA,sCAAsC,CAAC,cAAD,CAAtC,CAAuD,IAAvD,EAAP,CACH,CACD,MAAM,SAAU,CAAA,SAAV,CAAoB,OAApB,CAAuC,cAAvC,CAA6D,CAC/D,GAAM,CAAA,OAAO,CAAG,eAAe,CAAC,cAAD,CAA/B,CACA,MAAO,CAAA,aAAa,CAAmC,OAAnC,CAA4C,OAA5C,CAApB,CACH,CACD,MAAM,SAAU,CAAA,kBAAV,CAA6B,mBAA7B,CAAsE,CACxE,MAAO,CAAA,sCAAsC,GAAG,cAAzC,CAAwD,mBAAxD,EAA6E,IAA7E,EAAP,CACH,CACD,MAAM,SAAU,CAAA,YAAV,CAAuB,OAAvB,CAAwC,CAC1C,GAAM,CAAA,OAAO,CAAG,kBAAkB,CAAC,OAAO,CAAC,mBAAT,CAAlC,CACA,MAAO,CAAA,aAAa,CAAqC,OAArC,CAA8C,OAA9C,CAApB,CACH,CAED,MAAM,SAAU,CAAA,uBAAV,CAAkC,cAAlC,CAA0D,cAA1D,CAAkF,eAAlF,CAAgH,CAClH,GAAM,CAAA,KAAK,CAAG,sCAAsC,CAAC,cAAD,CAApD,CACA,MAAO,CAAA,KAAK,CAAC,oCAAN,CAA2C,cAA3C,CAA2D,IAA3D,CAAiE,qCAAjE,CAAwG,OAAxG,CAAiH,CAAE,WAAW,CAAE,KAAf,CAAsB,YAAY,CAAE,kCAApC,CAAjH,CAA0L,CAAC,cAAc,CAAE,cAAjB,CAAiC,eAAe,CAAE,eAAlD,CAA1L,CAAP,CACH,CAED,MAAM,SAAU,CAAA,iBAAV,CAA4B,OAA5B,CAA+C,cAA/C,CAAuE,cAAvE,CAA+F,eAA/F,CAA6H,CAC/H,GAAM,CAAA,OAAO,CAAG,uBAAuB,CAAC,cAAD,CAAiB,cAAjB,CAAiC,eAAjC,CAAvC,CACA,MAAO,CAAA,aAAa,CAAmC,OAAnC,CAA4C,OAA5C,CAApB,CACH,CAED,MAAM,SAAU,CAAA,gCAAV,CAA2C,cAA3C,CAAmE,cAAnE,CAA+H,iBAA/H,CAA6L,wBAA7L,CAA0Q,CAC5Q,GAAM,CAAA,KAAK,CAAG,sCAAsC,CAAC,cAAD,CAApD,CACA,MAAO,CAAA,KAAK,CAAC,oCAAN,CAA2C,uBAA3C,CAAoE,IAApE,CAA0E,gEAA1E,CAA4I,OAA5I,CAAqJ,CAAE,WAAW,CAAE,KAAf,CAAsB,YAAY,CAAE,6DAApC,CAArJ,CAAyP,CAAC,cAAc,CAAE,cAAjB,CAAiC,iBAAiB,CAAE,iBAApD,CAAuE,wBAAwB,CAAE,wBAAjG,CAAzP,CAAP,CACH,CAED,MAAM,SAAU,CAAA,0BAAV,CAAqC,OAArC,CAAwD,cAAxD,CAAgF,cAAhF,CAA4I,iBAA5I,CAA0M,wBAA1M,CAAuR,CACzR,GAAM,CAAA,OAAO,CAAG,gCAAgC,CAAC,cAAD,CAAiB,cAAjB,CAAiC,iBAAjC,CAAoD,wBAApD,CAAhD,CACA,MAAO,CAAA,aAAa,CAA8D,OAA9D,CAAuE,OAAvE,CAApB,CACH,CAED,MAAM,SAAU,CAAA,qBAAV,CAAgC,cAAhC,CAAwD,YAAxD,CAAiH,CACnH,GAAM,CAAA,KAAK,CAAG,sCAAsC,CAAC,cAAD,CAApD,CACA,MAAO,CAAA,KAAK,CAAC,oCAAN,CAA2C,YAA3C,CAAyD,IAAzD,CAA+D,yCAA/D,CAA0G,OAA1G,CAAmH,CAAE,WAAW,CAAE,KAAf,CAAsB,YAAY,CAAE,sCAApC,CAAnH,CAAgM,CAAC,YAAY,CAAE,YAAf,CAAhM,CAAP,CACH,CAED,MAAM,SAAU,CAAA,eAAV,CAA0B,OAA1B,CAA6C,cAA7C,CAAqE,YAArE,CAA8H,CAChI,GAAM,CAAA,OAAO,CAAG,qBAAqB,CAAC,cAAD,CAAiB,YAAjB,CAArC,CACA,MAAO,CAAA,aAAa,CAAuC,OAAvC,CAAgD,OAAhD,CAApB,CACH,CAED,MAAM,SAAU,CAAA,gCAAV,CAA2C,cAA3C,CAAmE,eAAnE,CAAiG,CACnG,GAAM,CAAA,KAAK,CAAG,sCAAsC,CAAC,cAAD,CAApD,CACA,MAAO,CAAA,KAAK,CAAC,oCAAN,CAA2C,uBAA3C,CAAoE,IAApE,CAA0E,qCAA1E,CAAiH,OAAjH,CAA0H,CAAE,WAAW,CAAE,KAAf,CAAsB,YAAY,CAAE,kCAApC,CAA1H,CAAmM,CAAC,eAAe,CAAE,eAAlB,CAAnM,CAAP,CACH,CAED,MAAM,SAAU,CAAA,0BAAV,CAAqC,OAArC,CAAwD,cAAxD,CAAgF,eAAhF,CAA8G,CAChH,GAAM,CAAA,OAAO,CAAG,gCAAgC,CAAC,cAAD,CAAiB,eAAjB,CAAhD,CACA,MAAO,CAAA,aAAa,CAAmC,OAAnC,CAA4C,OAA5C,CAApB,CACH,CAED,MAAM,SAAU,CAAA,qBAAV,CAAgC,cAAhC,CAAwD,YAAxD,CAAqF,eAArF,CAAmH,CACrH,GAAM,CAAA,KAAK,CAAG,sCAAsC,CAAC,cAAD,CAApD,CACA,MAAO,CAAA,KAAK,CAAC,oCAAN,CAA2C,YAA3C,CAAyD,IAAzD,CAA+D,qCAA/D,CAAsG,OAAtG,CAA+G,CAAE,WAAW,CAAE,KAAf,CAAsB,YAAY,CAAE,kCAApC,CAA/G,CAAwL,CAAC,YAAY,CAAE,YAAf,CAA6B,eAAe,CAAE,eAA9C,CAAxL,CAAP,CACH,CAED,MAAM,SAAU,CAAA,eAAV,CAA0B,OAA1B,CAA6C,cAA7C,CAAqE,YAArE,CAAkG,eAAlG,CAAgI,CAClI,GAAM,CAAA,OAAO,CAAG,qBAAqB,CAAC,cAAD,CAAiB,YAAjB,CAA+B,eAA/B,CAArC,CACA,MAAO,CAAA,aAAa,CAAmC,OAAnC,CAA4C,OAA5C,CAApB,CACH,CAED,MAAM,SAAU,CAAA,0BAAV,CAAqC,cAArC,CAA6D,iBAA7D,CAA+F,eAA/F,CAA6H,CAC/H,GAAM,CAAA,KAAK,CAAG,sCAAsC,CAAC,cAAD,CAApD,CACA,MAAO,CAAA,KAAK,CAAC,oCAAN,CAA2C,iBAA3C,CAA8D,IAA9D,CAAoE,qCAApE,CAA2G,OAA3G,CAAoH,CAAE,WAAW,CAAE,KAAf,CAAsB,YAAY,CAAE,kCAApC,CAApH,CAA6L,CAAC,iBAAiB,CAAE,iBAApB,CAAuC,eAAe,CAAE,eAAxD,CAA7L,CAAP,CACH,CAED,MAAM,SAAU,CAAA,oBAAV,CAA+B,OAA/B,CAAkD,cAAlD,CAA0E,iBAA1E,CAA4G,eAA5G,CAA0I,CAC5I,GAAM,CAAA,OAAO,CAAG,0BAA0B,CAAC,cAAD,CAAiB,iBAAjB,CAAoC,eAApC,CAA1C,CACA,MAAO,CAAA,aAAa,CAAmC,OAAnC,CAA4C,OAA5C,CAApB,CACH,CAED,MAAM,SAAU,CAAA,iBAAV,CAA4B,cAA5B,CAAoD,eAApD,CAAkF,CACpF,GAAM,CAAA,KAAK,CAAG,sCAAsC,CAAC,cAAD,CAApD,CACA,MAAO,CAAA,KAAK,CAAC,oCAAN,CAA2C,QAA3C,CAAqD,IAArD,CAA2D,qCAA3D,CAAkG,OAAlG,CAA2G,CAAE,WAAW,CAAE,KAAf,CAAsB,YAAY,CAAE,kCAApC,CAA3G,CAAoL,CAAC,eAAe,CAAE,eAAlB,CAApL,CAAP,CACH,CAED,MAAM,SAAU,CAAA,WAAV,CAAsB,OAAtB,CAAyC,cAAzC,CAAiE,eAAjE,CAA+F,CACjG,GAAM,CAAA,OAAO,CAAG,iBAAiB,CAAC,cAAD,CAAiB,eAAjB,CAAjC,CACA,MAAO,CAAA,aAAa,CAAmC,OAAnC,CAA4C,OAA5C,CAApB,CACH,CAED,MAAM,SAAU,CAAA,iCAAV,CAA4C,cAA5C,CAAkE,CACpE,GAAM,CAAA,KAAK,CAAG,sCAAsC,CAAC,cAAD,CAApD,CACA,MAAO,CAAA,KAAK,CAAC,oCAAN,CAA2C,wBAA3C,CAAqE,IAArE,CAA2E,qCAA3E,CAAkH,OAAlH,CAA2H,CAAE,WAAW,CAAE,KAAf,CAAsB,YAAY,CAAE,kCAApC,CAA3H,CAAoM,EAApM,CAAP,CACH,CAED,MAAM,SAAU,CAAA,2BAAV,CAAsC,OAAtC,CAAyD,cAAzD,CAA+E,CACjF,GAAM,CAAA,OAAO,CAAG,iCAAiC,CAAC,cAAD,CAAjD,CACA,MAAO,CAAA,aAAa,CAAmC,OAAnC,CAA4C,OAA5C,CAApB,CACH,CAED,MAAM,SAAU,CAAA,gBAAV,CAA2B,gBAA3B,CAA4D,kBAA5D,CAAsF,CACxF,GAAM,CAAA,KAAK,CAAG,sCAAsC,EAApD,CACA,MAAO,CAAA,KAAK,CAAC,oCAAN,CAA2C,OAA3C,CAAoD,IAApD,CAA0D,qCAA1D,CAAiG,OAAjG,CAA0G,CAAE,WAAW,CAAE,KAAf,CAAsB,YAAY,CAAE,kCAApC,CAA1G,CAAmL,CAAC,gBAAgB,CAAE,gBAAnB,CAAqC,kBAAkB,CAAE,kBAAzD,CAAnL,CAAP,CACH,CAED,MAAM,SAAU,CAAA,UAAV,CAAqB,OAArB,CAAwC,gBAAxC,CAAyE,kBAAzE,CAAmG,CACrG,GAAM,CAAA,OAAO,CAAG,gBAAgB,CAAC,gBAAD,CAAmB,kBAAnB,CAAhC,CACA,MAAO,CAAA,aAAa,CAAmC,OAAnC,CAA4C,OAA5C,CAApB,CACH,CAED,MAAM,SAAU,CAAA,kBAAV,CAA6B,cAA7B,CAAqD,YAArD,CAA8G,CAChH,GAAM,CAAA,KAAK,CAAG,sCAAsC,CAAC,cAAD,CAApD,CACA,MAAO,CAAA,KAAK,CAAC,oCAAN,CAA2C,SAA3C,CAAsD,IAAtD,CAA4D,yCAA5D,CAAuG,OAAvG,CAAgH,CAAE,WAAW,CAAE,KAAf,CAAsB,YAAY,CAAE,sCAApC,CAAhH,CAA6L,CAAC,YAAY,CAAE,YAAf,CAA7L,CAAP,CACH,CAED,MAAM,SAAU,CAAA,YAAV,CAAuB,OAAvB,CAA0C,cAA1C,CAAkE,YAAlE,CAA2H,CAC7H,GAAM,CAAA,OAAO,CAAG,kBAAkB,CAAC,cAAD,CAAiB,YAAjB,CAAlC,CACA,MAAO,CAAA,aAAa,CAAuC,OAAvC,CAAgD,OAAhD,CAApB,CACH,CAED,MAAM,SAAU,CAAA,qBAAV,CAAgC,cAAhC,CAAwD,cAAxD,CAAuF,mBAAvF,CAAyH,CAC3H,GAAM,CAAA,KAAK,CAAG,sCAAsC,CAAC,cAAD,CAApD,CACA,MAAO,CAAA,KAAK,CAAC,oCAAN,CAA2C,YAA3C,CAAyD,IAAzD,CAA+D,EAA/D,CAAmE,EAAnE,CAAuE,CAAE,WAAW,CAAE,KAAf,CAAsB,YAAY,CAAE,EAApC,CAAvE,CAAgH,CAAC,cAAc,CAAE,cAAjB,CAAiC,mBAAmB,CAAE,mBAAtD,CAAhH,CAAP,CACH,CAED,MAAM,SAAU,CAAA,eAAV,CAA0B,OAA1B,CAA6C,cAA7C,CAAqE,cAArE,CAAoG,mBAApG,CAAsI,CACxI,GAAM,CAAA,OAAO,CAAG,qBAAqB,CAAC,cAAD,CAAiB,cAAjB,CAAiC,mBAAjC,CAArC,CACA,MAAO,CAAA,aAAa,CAAa,OAAb,CAAsB,OAAtB,CAApB,CACH,CAED,MAAM,SAAU,CAAA,kCAAV,CAA6C,mBAA7C,CAAwF,cAAxF,CAAgH,cAAhH,CAAsL,CACxL,GAAM,CAAA,KAAK,CAAG,sCAAsC,CAAC,cAAD,CAAtC,CAAuD,cAAvD,CAAsE,mBAAtE,CAAd,CACA,MAAO,CAAA,KAAK,CAAC,oCAAN,CAA2C,yBAA3C,CAAsE,IAAtE,CAA4E,sCAA5E,CAAoH,MAApH,CAA4H,CAAE,WAAW,CAAE,MAAf,CAAuB,YAAY,CAAE,mCAArC,CAA5H,CAAuM,CAAC,cAAc,CAAE,cAAjB,CAAvM,CAAP,CACH,CAED,MAAM,SAAU,CAAA,4BAAV,CAAuC,OAAvC,CAA0D,cAA1D,CAAkF,cAAlF,CAAwJ,CAC1J,GAAM,CAAA,OAAO,CAAG,kCAAkC,CAAC,OAAO,CAAC,mBAAT,CAA8B,cAA9B,CAA8C,cAA9C,CAAlD,CACA,MAAO,CAAA,aAAa,CAAsC,OAAtC,CAA+C,OAA/C,CAApB,CACH,CAED,MAAM,SAAU,CAAA,mBAAV,CAA8B,cAA9B,CAAsD,eAAtD,CAAoF,CACtF,GAAM,CAAA,KAAK,CAAG,sCAAsC,CAAC,cAAD,CAApD,CACA,MAAO,CAAA,KAAK,CAAC,oCAAN,CAA2C,UAA3C,CAAuD,IAAvD,CAA6D,6CAA7D,CAA4G,OAA5G,CAAqH,CAAE,WAAW,CAAE,KAAf,CAAsB,YAAY,CAAE,0CAApC,CAArH,CAAsM,CAAC,eAAe,CAAE,eAAlB,CAAtM,CAAP,CACH,CAED,MAAM,SAAU,CAAA,aAAV,CAAwB,OAAxB,CAA2C,cAA3C,CAAmE,eAAnE,CAAiG,CACnG,GAAM,CAAA,OAAO,CAAG,mBAAmB,CAAC,cAAD,CAAiB,eAAjB,CAAnC,CACA,MAAO,CAAA,aAAa,CAA2C,OAA3C,CAAoD,OAApD,CAApB,CACH,CAED,MAAM,SAAU,CAAA,sCAAV,CAAiD,mBAAjD,CAA4F,cAA5F,CAAkK,CACpK,GAAM,CAAA,KAAK,CAAG,sCAAsC,GAAG,cAAzC,CAAwD,mBAAxD,CAAd,CACA,MAAO,CAAA,KAAK,CAAC,oCAAN,CAA2C,6BAA3C,CAA0E,IAA1E,CAAgF,0CAAhF,CAA4H,MAA5H,CAAoI,CAAE,WAAW,CAAE,MAAf,CAAuB,YAAY,CAAE,uCAArC,CAApI,CAAmN,CAAC,cAAc,CAAE,cAAjB,CAAnN,CAAP,CACH,CAED,MAAM,SAAU,CAAA,gCAAV,CAA2C,OAA3C,CAA8D,cAA9D,CAAoI,CACtI,GAAM,CAAA,OAAO,CAAG,sCAAsC,CAAC,OAAO,CAAC,mBAAT,CAA8B,cAA9B,CAAtD,CACA,MAAO,CAAA,aAAa,CAA0C,OAA1C,CAAmD,OAAnD,CAApB,CACH,CAED,MAAM,SAAU,CAAA,6BAAV,CAAwC,gBAAxC,CAAyE,kBAAzE,CAAmG,CACrG,GAAM,CAAA,KAAK,CAAG,sCAAsC,EAApD,CACA,MAAO,CAAA,KAAK,CAAC,oCAAN,CAA2C,oBAA3C,CAAiE,IAAjE,CAAuE,EAAvE,CAA2E,EAA3E,CAA+E,CAAE,WAAW,CAAE,KAAf,CAAsB,YAAY,CAAE,EAApC,CAA/E,CAAwH,CAAC,gBAAgB,CAAE,gBAAnB,CAAqC,kBAAkB,CAAE,kBAAzD,CAAxH,CAAP,CACH,CAED,MAAM,SAAU,CAAA,uBAAV,CAAkC,OAAlC,CAAqD,gBAArD,CAAsF,kBAAtF,CAAgH,CAClH,GAAM,CAAA,OAAO,CAAG,6BAA6B,CAAC,gBAAD,CAAmB,kBAAnB,CAA7C,CACA,MAAO,CAAA,aAAa,CAAa,OAAb,CAAsB,OAAtB,CAApB,CACH,CAED,MAAM,SAAU,CAAA,iCAAV,CAA4C,mBAA5C,CAAuF,cAAvF,CAA6I,CAC/I,GAAM,CAAA,KAAK,CAAG,sCAAsC,GAAG,cAAzC,CAAwD,mBAAxD,CAAd,CACA,MAAO,CAAA,KAAK,CAAC,oCAAN,CAA2C,wBAA3C,CAAqE,IAArE,CAA2E,qCAA3E,CAAkH,MAAlH,CAA0H,CAAE,WAAW,CAAE,MAAf,CAAuB,YAAY,CAAE,kCAArC,CAA1H,CAAoM,CAAC,cAAc,CAAE,cAAjB,CAApM,CAAP,CACH,CAED,MAAM,SAAU,CAAA,2BAAV,CAAsC,OAAtC,CAAyD,cAAzD,CAA+G,CACjH,GAAM,CAAA,OAAO,CAAG,iCAAiC,CAAC,OAAO,CAAC,mBAAT,CAA8B,cAA9B,CAAjD,CACA,MAAO,CAAA,aAAa,CAAqC,OAArC,CAA8C,OAA9C,CAApB,CACH,CAED,MAAM,SAAU,CAAA,kCAAV,CAA6C,mBAA7C,CAAwF,cAAxF,CAA8I,CAChJ,GAAM,CAAA,KAAK,CAAG,sCAAsC,GAAG,cAAzC,CAAwD,mBAAxD,CAAd,CACA,MAAO,CAAA,KAAK,CAAC,oCAAN,CAA2C,yBAA3C,CAAsE,IAAtE,CAA4E,qCAA5E,CAAmH,MAAnH,CAA2H,CAAE,WAAW,CAAE,MAAf,CAAuB,YAAY,CAAE,kCAArC,CAA3H,CAAqM,CAAC,cAAc,CAAE,cAAjB,CAArM,CAAP,CACH,CAED,MAAM,SAAU,CAAA,4BAAV,CAAuC,OAAvC,CAA0D,cAA1D,CAAgH,CAClH,GAAM,CAAA,OAAO,CAAG,kCAAkC,CAAC,OAAO,CAAC,mBAAT,CAA8B,cAA9B,CAAlD,CACA,MAAO,CAAA,aAAa,CAAqC,OAArC,CAA8C,OAA9C,CAApB,CACH,CAED,MAAM,SAAU,CAAA,sBAAV,CAAiC,mBAAjC,CAA4E,cAA5E,CAAsI,CACxI,GAAM,CAAA,KAAK,CAAG,sCAAsC,GAAG,cAAzC,CAAwD,mBAAxD,CAAd,CACA,MAAO,CAAA,KAAK,CAAC,oCAAN,CAA2C,aAA3C,CAA0D,IAA1D,CAAgE,yCAAhE,CAA2G,MAA3G,CAAmH,CAAE,WAAW,CAAE,MAAf,CAAuB,YAAY,CAAE,sCAArC,CAAnH,CAAiM,CAAC,cAAc,CAAE,cAAjB,CAAjM,CAAP,CACH,CAED,MAAM,SAAU,CAAA,gBAAV,CAA2B,OAA3B,CAA8C,cAA9C,CAAwG,CAC1G,GAAM,CAAA,OAAO,CAAG,sBAAsB,CAAC,OAAO,CAAC,mBAAT,CAA8B,cAA9B,CAAtC,CACA,MAAO,CAAA,aAAa,CAAyC,OAAzC,CAAkD,OAAlD,CAApB,CACH,CAED,MAAM,SAAU,CAAA,gCAAV,CAA2C,cAA3C,CAAmE,2BAAnE,CAAmJ,CACrJ,GAAM,CAAA,KAAK,CAAG,sCAAsC,CAAC,cAAD,CAApD,CACA,MAAO,CAAA,KAAK,CAAC,oCAAN,CAA2C,uBAA3C,CAAoE,IAApE,CAA0E,sCAA1E,CAAkH,OAAlH,CAA2H,CAAE,WAAW,CAAE,KAAf,CAAsB,YAAY,CAAE,mCAApC,CAA3H,CAAqM,CAAC,2BAA2B,CAAE,2BAA9B,CAArM,CAAP,CACH,CAED,MAAM,SAAU,CAAA,0BAAV,CAAqC,OAArC,CAAwD,cAAxD,CAAgF,2BAAhF,CAAgK,CAClK,GAAM,CAAA,OAAO,CAAG,gCAAgC,CAAC,cAAD,CAAiB,2BAAjB,CAAhD,CACA,MAAO,CAAA,aAAa,CAAoC,OAApC,CAA6C,OAA7C,CAApB,CACH,CAED,MAAM,SAAU,CAAA,iCAAV,CAA4C,cAA5C,CAAoE,4BAApE,CAAsJ,CACxJ,GAAM,CAAA,KAAK,CAAG,sCAAsC,CAAC,cAAD,CAApD,CACA,MAAO,CAAA,KAAK,CAAC,oCAAN,CAA2C,wBAA3C,CAAqE,IAArE,CAA2E,sCAA3E,CAAmH,OAAnH,CAA4H,CAAE,WAAW,CAAE,KAAf,CAAsB,YAAY,CAAE,mCAApC,CAA5H,CAAsM,CAAC,4BAA4B,CAAE,4BAA/B,CAAtM,CAAP,CACH,CAED,MAAM,SAAU,CAAA,2BAAV,CAAsC,OAAtC,CAAyD,cAAzD,CAAiF,4BAAjF,CAAmK,CACrK,GAAM,CAAA,OAAO,CAAG,iCAAiC,CAAC,cAAD,CAAiB,4BAAjB,CAAjD,CACA,MAAO,CAAA,aAAa,CAAoC,OAApC,CAA6C,OAA7C,CAApB,CACH,CAED,MAAM,SAAU,CAAA,0BAAV,CAAqC,cAArC,CAA2D,CAC7D,GAAM,CAAA,KAAK,CAAG,sCAAsC,CAAC,cAAD,CAApD,CACA,MAAO,CAAA,KAAK,CAAC,oCAAN,CAA2C,iBAA3C,CAA8D,KAA9D,CAAqE,iDAArE,CAAwH,OAAxH,CAAiI,CAAE,WAAW,CAAE,MAAf,CAAuB,YAAY,CAAE,8CAArC,CAAjI,CAAuN,EAAvN,CAAP,CACH,CAED,MAAM,SAAU,CAAA,oBAAV,CAA+B,OAA/B,CAAkD,cAAlD,CAAwE,CAC1E,GAAM,CAAA,OAAO,CAAG,0BAA0B,CAAC,cAAD,CAA1C,CACA,MAAO,CAAA,aAAa,CAA+C,OAA/C,CAAwD,OAAxD,CAApB,CACH,CAED,MAAM,SAAU,CAAA,sCAAV,CAAiD,cAAjD,CAAyE,cAAzE,CAAsG,CACxG,GAAM,CAAA,KAAK,CAAG,sCAAsC,CAAC,cAAD,CAApD,CACA,MAAO,CAAA,KAAK,CAAC,oCAAN,CAA2C,6BAA3C,CAA0E,KAA1E,CAAiF,8CAAjF,CAAiI,OAAjI,CAA0I,CAAE,WAAW,CAAE,MAAf,CAAuB,YAAY,CAAE,2CAArC,CAA1I,CAA6N,CAAC,cAAc,CAAE,cAAjB,CAA7N,CAAP,CACH,CAED,MAAM,SAAU,CAAA,gCAAV,CAA2C,OAA3C,CAA8D,cAA9D,CAAsF,cAAtF,CAAmH,CACrH,GAAM,CAAA,OAAO,CAAG,sCAAsC,CAAC,cAAD,CAAiB,cAAjB,CAAtD,CACA,MAAO,CAAA,aAAa,CAA4C,OAA5C,CAAqD,OAArD,CAApB,CACH","sourcesContent":["    // <auto-generated />\n    import { AsyncResult } from '../async-result';\n    import { DataServiceQuery } from '../DataServiceQuery';\n    import { InventoryInboundOutboundDocument, InventoryDocumentLineFilterCriteria, InventoryDocumentUpdateLinesAction, InventoryDocumentLineOperationResultSettings, InventoryInboundOutboundDocumentUpdateLinesByCriteriaResult, InventoryInboundOutboundDocumentLine, InventoryDocumentSerialNumberLineSearchCriteria, InventoryDocumentSerialNumberLine, InventoryDocumentValidationResultSummary, InventoryDocumentValidationResultSearchCriteria, InventoryDocumentValidationResultLine, InventoryDocumentSearchCriteria, InventoryDocumentLineSearchCriteria, InventoryDocumentSerialNumberLineResetAction, InventoryDocumentSerialNumberLineUpdateAction, InventoryInboundOutboundDocumentLinesSummary, InventoryDocumentSerialNumberLinesSummary } from '../Entities/CommerceTypes.g';\n    import { InventoryInboundOutboundDocumentClass, InventoryInboundOutboundDocumentUpdateLinesByCriteriaResultClass, InventoryInboundOutboundDocumentLineClass, InventoryDocumentSerialNumberLineClass, InventoryDocumentValidationResultSummaryClass, InventoryDocumentValidationResultLineClass, InventoryInboundOutboundDocumentLinesSummaryClass, InventoryDocumentSerialNumberLinesSummaryClass } from '../Entities/CommerceModels.g';\n    import { IContext, IDataServiceRequest, IQueryResultSettings, NullResult } from '../Interfaces';\n    import { executeAction } from '../retail-action';\n    \n    \n    function inventoryInboundOutboundDocumentsQuery(workDocumentId?: string): DataServiceQuery {\n      var key = (workDocumentId) ? { WorkDocumentId: workDocumentId } : null;\n      return new DataServiceQuery(\"InventoryInboundOutboundDocuments\", \"InventoryInboundOutboundDocument\", InventoryInboundOutboundDocumentClass, key);\n    }\n    \n    export function createCreateInput(entity: InventoryInboundOutboundDocument): IDataServiceRequest {\n        return inventoryInboundOutboundDocumentsQuery().create(entity);\n    }\n    export function createInventoryInboundOutboundDocumentAsync(context: IContext, entity: InventoryInboundOutboundDocument): AsyncResult<InventoryInboundOutboundDocument> {\n        const request = createCreateInput(entity, );\n        return executeAction<InventoryInboundOutboundDocument>(request, context);\n    }\n    export function createUpdateInput(entity: InventoryInboundOutboundDocument): IDataServiceRequest {\n        return inventoryInboundOutboundDocumentsQuery(entity.WorkDocumentId).update(entity);\n    }\n    export function updateAsync(context: IContext, entity: InventoryInboundOutboundDocument): AsyncResult<InventoryInboundOutboundDocument> {\n        const request = createUpdateInput(entity, );\n        return executeAction<InventoryInboundOutboundDocument>(request, context);\n    }\n    export function createDeleteAsync(entity: InventoryInboundOutboundDocument): IDataServiceRequest {\n        return inventoryInboundOutboundDocumentsQuery(entity.WorkDocumentId).delete();\n    }\n    export function deleteAsync(context: IContext, entity: InventoryInboundOutboundDocument): AsyncResult<NullResult> {\n        const request = createDeleteAsync(entity, );\n        return executeAction<NullResult>(request, context);\n    }\n    export function createReadAsync(workDocumentId: string): IDataServiceRequest {\n        return inventoryInboundOutboundDocumentsQuery(workDocumentId).read();\n    }\n    export function readAsync(context: IContext, workDocumentId: string): AsyncResult<InventoryInboundOutboundDocument> {\n        const request = createReadAsync(workDocumentId, );\n        return executeAction<InventoryInboundOutboundDocument>(request, context);\n    }\n    export function createReadAllAsync(queryResultSettings: IQueryResultSettings): IDataServiceRequest {\n        return inventoryInboundOutboundDocumentsQuery().resultSettings(queryResultSettings).read();\n    }\n    export function readAllAsync(context: IContext): AsyncResult<InventoryInboundOutboundDocument[]> {\n        const request = createReadAllAsync(context.queryResultSettings, );\n        return executeAction<InventoryInboundOutboundDocument[]>(request, context);\n    }\n    \n    export function createUpdateStatusInput(workDocumentId: string, documentStatus: number, documentVersion: number | null): IDataServiceRequest {      \n        const query = inventoryInboundOutboundDocumentsQuery(workDocumentId);\n        return query.createDataServiceRequestForOperation('UpdateStatus', true, InventoryInboundOutboundDocumentClass, 'false', { bypassCache: 'get', returnEntity: 'InventoryInboundOutboundDocument'}, {documentStatus: documentStatus, documentVersion: documentVersion });\n    }    \n    \n    export function updateStatusAsync(context: IContext, workDocumentId: string, documentStatus: number, documentVersion: number | null):AsyncResult<InventoryInboundOutboundDocument> {\n        const request = createUpdateStatusInput(workDocumentId, documentStatus, documentVersion, );\n        return executeAction<InventoryInboundOutboundDocument>(request, context);\n    }          \n          \n    export function createUpdateLinesByCriteriaInput(workDocumentId: string, filterCriteria: InventoryDocumentLineFilterCriteria | null, updateLinesAction: InventoryDocumentUpdateLinesAction | null, returnUpdatedLinesPolicy: InventoryDocumentLineOperationResultSettings | null): IDataServiceRequest {      \n        const query = inventoryInboundOutboundDocumentsQuery(workDocumentId);\n        return query.createDataServiceRequestForOperation('UpdateLinesByCriteria', true, InventoryInboundOutboundDocumentUpdateLinesByCriteriaResultClass, 'false', { bypassCache: 'get', returnEntity: 'InventoryInboundOutboundDocumentUpdateLinesByCriteriaResult'}, {filterCriteria: filterCriteria, updateLinesAction: updateLinesAction, returnUpdatedLinesPolicy: returnUpdatedLinesPolicy });\n    }    \n    \n    export function updateLinesByCriteriaAsync(context: IContext, workDocumentId: string, filterCriteria: InventoryDocumentLineFilterCriteria | null, updateLinesAction: InventoryDocumentUpdateLinesAction | null, returnUpdatedLinesPolicy: InventoryDocumentLineOperationResultSettings | null):AsyncResult<InventoryInboundOutboundDocumentUpdateLinesByCriteriaResult> {\n        const request = createUpdateLinesByCriteriaInput(workDocumentId, filterCriteria, updateLinesAction, returnUpdatedLinesPolicy, );\n        return executeAction<InventoryInboundOutboundDocumentUpdateLinesByCriteriaResult>(request, context);\n    }          \n          \n    export function createUpdateLineInput(workDocumentId: string, documentLine: InventoryInboundOutboundDocumentLine | null): IDataServiceRequest {      \n        const query = inventoryInboundOutboundDocumentsQuery(workDocumentId);\n        return query.createDataServiceRequestForOperation('UpdateLine', true, InventoryInboundOutboundDocumentLineClass, 'false', { bypassCache: 'get', returnEntity: 'InventoryInboundOutboundDocumentLine'}, {documentLine: documentLine });\n    }    \n    \n    export function updateLineAsync(context: IContext, workDocumentId: string, documentLine: InventoryInboundOutboundDocumentLine | null):AsyncResult<InventoryInboundOutboundDocumentLine> {\n        const request = createUpdateLineInput(workDocumentId, documentLine, );\n        return executeAction<InventoryInboundOutboundDocumentLine>(request, context);\n    }          \n          \n    export function createUpdateWorkingTerminalInput(workDocumentId: string, documentVersion: number | null): IDataServiceRequest {      \n        const query = inventoryInboundOutboundDocumentsQuery(workDocumentId);\n        return query.createDataServiceRequestForOperation('UpdateWorkingTerminal', true, InventoryInboundOutboundDocumentClass, 'false', { bypassCache: 'get', returnEntity: 'InventoryInboundOutboundDocument'}, {documentVersion: documentVersion });\n    }    \n    \n    export function updateWorkingTerminalAsync(context: IContext, workDocumentId: string, documentVersion: number | null):AsyncResult<InventoryInboundOutboundDocument> {\n        const request = createUpdateWorkingTerminalInput(workDocumentId, documentVersion, );\n        return executeAction<InventoryInboundOutboundDocument>(request, context);\n    }          \n          \n    export function createUpdateNoteInput(workDocumentId: string, documentNote: string | null, documentVersion: number | null): IDataServiceRequest {      \n        const query = inventoryInboundOutboundDocumentsQuery(workDocumentId);\n        return query.createDataServiceRequestForOperation('UpdateNote', true, InventoryInboundOutboundDocumentClass, 'false', { bypassCache: 'get', returnEntity: 'InventoryInboundOutboundDocument'}, {documentNote: documentNote, documentVersion: documentVersion });\n    }    \n    \n    export function updateNoteAsync(context: IContext, workDocumentId: string, documentNote: string | null, documentVersion: number | null):AsyncResult<InventoryInboundOutboundDocument> {\n        const request = createUpdateNoteInput(workDocumentId, documentNote, documentVersion, );\n        return executeAction<InventoryInboundOutboundDocument>(request, context);\n    }          \n          \n    export function createUpdateReceiptIdInput(workDocumentId: string, documentReceiptId: string | null, documentVersion: number | null): IDataServiceRequest {      \n        const query = inventoryInboundOutboundDocumentsQuery(workDocumentId);\n        return query.createDataServiceRequestForOperation('UpdateReceiptId', true, InventoryInboundOutboundDocumentClass, 'false', { bypassCache: 'get', returnEntity: 'InventoryInboundOutboundDocument'}, {documentReceiptId: documentReceiptId, documentVersion: documentVersion });\n    }    \n    \n    export function updateReceiptIdAsync(context: IContext, workDocumentId: string, documentReceiptId: string | null, documentVersion: number | null):AsyncResult<InventoryInboundOutboundDocument> {\n        const request = createUpdateReceiptIdInput(workDocumentId, documentReceiptId, documentVersion, );\n        return executeAction<InventoryInboundOutboundDocument>(request, context);\n    }          \n          \n    export function createCommitInput(workDocumentId: string, documentVersion: number | null): IDataServiceRequest {      \n        const query = inventoryInboundOutboundDocumentsQuery(workDocumentId);\n        return query.createDataServiceRequestForOperation('Commit', true, InventoryInboundOutboundDocumentClass, 'false', { bypassCache: 'get', returnEntity: 'InventoryInboundOutboundDocument'}, {documentVersion: documentVersion });\n    }    \n    \n    export function commitAsync(context: IContext, workDocumentId: string, documentVersion: number | null):AsyncResult<InventoryInboundOutboundDocument> {\n        const request = createCommitInput(workDocumentId, documentVersion, );\n        return executeAction<InventoryInboundOutboundDocument>(request, context);\n    }          \n          \n    export function createRefreshOperationStatusInput(workDocumentId: string): IDataServiceRequest {      \n        const query = inventoryInboundOutboundDocumentsQuery(workDocumentId);\n        return query.createDataServiceRequestForOperation('RefreshOperationStatus', true, InventoryInboundOutboundDocumentClass, 'false', { bypassCache: 'get', returnEntity: 'InventoryInboundOutboundDocument'}, { });\n    }    \n    \n    export function refreshOperationStatusAsync(context: IContext, workDocumentId: string):AsyncResult<InventoryInboundOutboundDocument> {\n        const request = createRefreshOperationStatusInput(workDocumentId, );\n        return executeAction<InventoryInboundOutboundDocument>(request, context);\n    }          \n          \n    export function createStartInput(sourceDocumentId: string | null, sourceDocumentType: number): IDataServiceRequest {      \n        const query = inventoryInboundOutboundDocumentsQuery();\n        return query.createDataServiceRequestForOperation('Start', true, InventoryInboundOutboundDocumentClass, 'false', { bypassCache: 'get', returnEntity: 'InventoryInboundOutboundDocument'}, {sourceDocumentId: sourceDocumentId, sourceDocumentType: sourceDocumentType });\n    }    \n    \n    export function startAsync(context: IContext, sourceDocumentId: string | null, sourceDocumentType: number):AsyncResult<InventoryInboundOutboundDocument> {\n        const request = createStartInput(sourceDocumentId, sourceDocumentType, );\n        return executeAction<InventoryInboundOutboundDocument>(request, context);\n    }          \n          \n    export function createAddLineInput(workDocumentId: string, documentLine: InventoryInboundOutboundDocumentLine | null): IDataServiceRequest {      \n        const query = inventoryInboundOutboundDocumentsQuery(workDocumentId);\n        return query.createDataServiceRequestForOperation('AddLine', true, InventoryInboundOutboundDocumentLineClass, 'false', { bypassCache: 'get', returnEntity: 'InventoryInboundOutboundDocumentLine'}, {documentLine: documentLine });\n    }    \n    \n    export function addLineAsync(context: IContext, workDocumentId: string, documentLine: InventoryInboundOutboundDocumentLine | null):AsyncResult<InventoryInboundOutboundDocumentLine> {\n        const request = createAddLineInput(workDocumentId, documentLine, );\n        return executeAction<InventoryInboundOutboundDocumentLine>(request, context);\n    }          \n          \n    export function createDeleteLineInput(workDocumentId: string, documentLineId: string | null, documentLineVersion: number | null): IDataServiceRequest {      \n        const query = inventoryInboundOutboundDocumentsQuery(workDocumentId);\n        return query.createDataServiceRequestForOperation('DeleteLine', true, '', '', { bypassCache: 'get', returnEntity: ''}, {documentLineId: documentLineId, documentLineVersion: documentLineVersion });\n    }    \n    \n    export function deleteLineAsync(context: IContext, workDocumentId: string, documentLineId: string | null, documentLineVersion: number | null):AsyncResult<NullResult> {\n        const request = createDeleteLineInput(workDocumentId, documentLineId, documentLineVersion, );\n        return executeAction<NullResult>(request, context);\n    }          \n          \n    export function createSearchSerialNumberLinesInput(queryResultSettings: IQueryResultSettings, workDocumentId: string, searchCriteria: InventoryDocumentSerialNumberLineSearchCriteria | null): IDataServiceRequest {      \n        const query = inventoryInboundOutboundDocumentsQuery(workDocumentId).resultSettings(queryResultSettings);\n        return query.createDataServiceRequestForOperation('SearchSerialNumberLines', true, InventoryDocumentSerialNumberLineClass, 'true', { bypassCache: 'none', returnEntity: 'InventoryDocumentSerialNumberLine'}, {searchCriteria: searchCriteria });\n    }    \n    \n    export function searchSerialNumberLinesAsync(context: IContext, workDocumentId: string, searchCriteria: InventoryDocumentSerialNumberLineSearchCriteria | null):AsyncResult<InventoryDocumentSerialNumberLine[]> {\n        const request = createSearchSerialNumberLinesInput(context.queryResultSettings, workDocumentId, searchCriteria, );\n        return executeAction<InventoryDocumentSerialNumberLine[]>(request, context);\n    }          \n          \n    export function createValidateInput(workDocumentId: string, documentVersion: number | null): IDataServiceRequest {      \n        const query = inventoryInboundOutboundDocumentsQuery(workDocumentId);\n        return query.createDataServiceRequestForOperation('Validate', true, InventoryDocumentValidationResultSummaryClass, 'false', { bypassCache: 'get', returnEntity: 'InventoryDocumentValidationResultSummary'}, {documentVersion: documentVersion });\n    }    \n    \n    export function validateAsync(context: IContext, workDocumentId: string, documentVersion: number | null):AsyncResult<InventoryDocumentValidationResultSummary> {\n        const request = createValidateInput(workDocumentId, documentVersion, );\n        return executeAction<InventoryDocumentValidationResultSummary>(request, context);\n    }          \n          \n    export function createSearchValidationResultLinesInput(queryResultSettings: IQueryResultSettings, searchCriteria: InventoryDocumentValidationResultSearchCriteria | null): IDataServiceRequest {      \n        const query = inventoryInboundOutboundDocumentsQuery().resultSettings(queryResultSettings);\n        return query.createDataServiceRequestForOperation('SearchValidationResultLines', true, InventoryDocumentValidationResultLineClass, 'true', { bypassCache: 'none', returnEntity: 'InventoryDocumentValidationResultLine'}, {searchCriteria: searchCriteria });\n    }    \n    \n    export function searchValidationResultLinesAsync(context: IContext, searchCriteria: InventoryDocumentValidationResultSearchCriteria | null):AsyncResult<InventoryDocumentValidationResultLine[]> {\n        const request = createSearchValidationResultLinesInput(context.queryResultSettings, searchCriteria, );\n        return executeAction<InventoryDocumentValidationResultLine[]>(request, context);\n    }          \n          \n    export function createSyncSourceDocumentInput(sourceDocumentId: string | null, sourceDocumentType: number): IDataServiceRequest {      \n        const query = inventoryInboundOutboundDocumentsQuery();\n        return query.createDataServiceRequestForOperation('SyncSourceDocument', true, '', '', { bypassCache: 'get', returnEntity: ''}, {sourceDocumentId: sourceDocumentId, sourceDocumentType: sourceDocumentType });\n    }    \n    \n    export function syncSourceDocumentAsync(context: IContext, sourceDocumentId: string | null, sourceDocumentType: number):AsyncResult<NullResult> {\n        const request = createSyncSourceDocumentInput(sourceDocumentId, sourceDocumentType, );\n        return executeAction<NullResult>(request, context);\n    }          \n          \n    export function createSearchInboundDocumentsInput(queryResultSettings: IQueryResultSettings, searchCriteria: InventoryDocumentSearchCriteria | null): IDataServiceRequest {      \n        const query = inventoryInboundOutboundDocumentsQuery().resultSettings(queryResultSettings);\n        return query.createDataServiceRequestForOperation('SearchInboundDocuments', true, InventoryInboundOutboundDocumentClass, 'true', { bypassCache: 'none', returnEntity: 'InventoryInboundOutboundDocument'}, {searchCriteria: searchCriteria });\n    }    \n    \n    export function searchInboundDocumentsAsync(context: IContext, searchCriteria: InventoryDocumentSearchCriteria | null):AsyncResult<InventoryInboundOutboundDocument[]> {\n        const request = createSearchInboundDocumentsInput(context.queryResultSettings, searchCriteria, );\n        return executeAction<InventoryInboundOutboundDocument[]>(request, context);\n    }          \n          \n    export function createSearchOutboundDocumentsInput(queryResultSettings: IQueryResultSettings, searchCriteria: InventoryDocumentSearchCriteria | null): IDataServiceRequest {      \n        const query = inventoryInboundOutboundDocumentsQuery().resultSettings(queryResultSettings);\n        return query.createDataServiceRequestForOperation('SearchOutboundDocuments', true, InventoryInboundOutboundDocumentClass, 'true', { bypassCache: 'none', returnEntity: 'InventoryInboundOutboundDocument'}, {searchCriteria: searchCriteria });\n    }    \n    \n    export function searchOutboundDocumentsAsync(context: IContext, searchCriteria: InventoryDocumentSearchCriteria | null):AsyncResult<InventoryInboundOutboundDocument[]> {\n        const request = createSearchOutboundDocumentsInput(context.queryResultSettings, searchCriteria, );\n        return executeAction<InventoryInboundOutboundDocument[]>(request, context);\n    }          \n          \n    export function createSearchLinesInput(queryResultSettings: IQueryResultSettings, searchCriteria: InventoryDocumentLineSearchCriteria | null): IDataServiceRequest {      \n        const query = inventoryInboundOutboundDocumentsQuery().resultSettings(queryResultSettings);\n        return query.createDataServiceRequestForOperation('SearchLines', true, InventoryInboundOutboundDocumentLineClass, 'true', { bypassCache: 'none', returnEntity: 'InventoryInboundOutboundDocumentLine'}, {searchCriteria: searchCriteria });\n    }    \n    \n    export function searchLinesAsync(context: IContext, searchCriteria: InventoryDocumentLineSearchCriteria | null):AsyncResult<InventoryInboundOutboundDocumentLine[]> {\n        const request = createSearchLinesInput(context.queryResultSettings, searchCriteria, );\n        return executeAction<InventoryInboundOutboundDocumentLine[]>(request, context);\n    }          \n          \n    export function createResetSerialNumberLineInput(workDocumentId: string, resetSerialNumberLineAction: InventoryDocumentSerialNumberLineResetAction | null): IDataServiceRequest {      \n        const query = inventoryInboundOutboundDocumentsQuery(workDocumentId);\n        return query.createDataServiceRequestForOperation('ResetSerialNumberLine', true, InventoryDocumentSerialNumberLineClass, 'false', { bypassCache: 'get', returnEntity: 'InventoryDocumentSerialNumberLine'}, {resetSerialNumberLineAction: resetSerialNumberLineAction });\n    }    \n    \n    export function resetSerialNumberLineAsync(context: IContext, workDocumentId: string, resetSerialNumberLineAction: InventoryDocumentSerialNumberLineResetAction | null):AsyncResult<InventoryDocumentSerialNumberLine> {\n        const request = createResetSerialNumberLineInput(workDocumentId, resetSerialNumberLineAction, );\n        return executeAction<InventoryDocumentSerialNumberLine>(request, context);\n    }          \n          \n    export function createUpdateSerialNumberLineInput(workDocumentId: string, updateSerialNumberLineAction: InventoryDocumentSerialNumberLineUpdateAction | null): IDataServiceRequest {      \n        const query = inventoryInboundOutboundDocumentsQuery(workDocumentId);\n        return query.createDataServiceRequestForOperation('UpdateSerialNumberLine', true, InventoryDocumentSerialNumberLineClass, 'false', { bypassCache: 'get', returnEntity: 'InventoryDocumentSerialNumberLine'}, {updateSerialNumberLineAction: updateSerialNumberLineAction });\n    }    \n    \n    export function updateSerialNumberLineAsync(context: IContext, workDocumentId: string, updateSerialNumberLineAction: InventoryDocumentSerialNumberLineUpdateAction | null):AsyncResult<InventoryDocumentSerialNumberLine> {\n        const request = createUpdateSerialNumberLineInput(workDocumentId, updateSerialNumberLineAction, );\n        return executeAction<InventoryDocumentSerialNumberLine>(request, context);\n    }          \n          \n    export function createGetLinesSummaryInput(workDocumentId: string): IDataServiceRequest {      \n        const query = inventoryInboundOutboundDocumentsQuery(workDocumentId);\n        return query.createDataServiceRequestForOperation('GetLinesSummary', false, InventoryInboundOutboundDocumentLinesSummaryClass, 'false', { bypassCache: 'none', returnEntity: 'InventoryInboundOutboundDocumentLinesSummary'}, { });\n    }    \n    \n    export function getLinesSummaryAsync(context: IContext, workDocumentId: string):AsyncResult<InventoryInboundOutboundDocumentLinesSummary> {\n        const request = createGetLinesSummaryInput(workDocumentId, );\n        return executeAction<InventoryInboundOutboundDocumentLinesSummary>(request, context);\n    }          \n          \n    export function createGetSerialNumberLinesSummaryInput(workDocumentId: string, documentLineId: string | null): IDataServiceRequest {      \n        const query = inventoryInboundOutboundDocumentsQuery(workDocumentId);\n        return query.createDataServiceRequestForOperation('GetSerialNumberLinesSummary', false, InventoryDocumentSerialNumberLinesSummaryClass, 'false', { bypassCache: 'none', returnEntity: 'InventoryDocumentSerialNumberLinesSummary'}, {documentLineId: documentLineId });\n    }    \n    \n    export function getSerialNumberLinesSummaryAsync(context: IContext, workDocumentId: string, documentLineId: string | null):AsyncResult<InventoryDocumentSerialNumberLinesSummary> {\n        const request = createGetSerialNumberLinesSummaryInput(workDocumentId, documentLineId, );\n        return executeAction<InventoryDocumentSerialNumberLinesSummary>(request, context);\n    }          \n          \n    "],"sourceRoot":""},"metadata":{},"sourceType":"module"}