{"ast":null,"code":"\"use strict\";/*!\r\n * Copyright (c) Microsoft Corporation.\r\n * All rights reserved. See LICENSE in the project root for license information.\r\n */Object.defineProperty(exports,\"__esModule\",{value:true});var tslib_1=require(\"tslib\");// tslint:disable:no-var-requires no-shadowed-variable\nvar axios_1=tslib_1.__importDefault(require(\"axios\"));var fs=tslib_1.__importStar(require(\"fs-extra\"));var path=tslib_1.__importStar(require(\"path\"));var util_1=require(\"util\");var console_trace_1=require(\"./console-trace\");exports.safeReadFile=function(filePath,traceToUse){if(traceToUse===void 0){traceToUse=console_trace_1.trace;}return tslib_1.__awaiter(void 0,void 0,void 0,function(){return tslib_1.__generator(this,function(_a){try{// tslint:disable-next-line:no-any\nreturn[2/*return*/,fs.readFile(filePath,'utf8')[\"catch\"](function(reason){throw new Error(reason);})];}catch(error){traceToUse.error(\"Error reading \"+filePath.toString());traceToUse.error(error);return[2/*return*/,''];}return[2/*return*/];});});};exports.safeReadFileSync=function(filePath,traceToUse){if(traceToUse===void 0){traceToUse=console_trace_1.trace;}try{return fs.readFileSync(filePath,'utf8');}catch(error){return'';}};// tslint:disable-next-line:no-require-imports\nvar glob=require('glob');var globAsync=util_1.promisify(glob);/**\r\n * Utility function to async check if file exists but returns path of it does, false if it doesn't\r\n * @param filePath file path to check\r\n */exports.safeFileExists=function(filePath,trace){return tslib_1.__awaiter(void 0,void 0,void 0,function(){var logger,errLogger;return tslib_1.__generator(this,function(_a){logger=trace||console_trace_1.trace;errLogger=logger.error||console_trace_1.trace.error;return[2/*return*/,new Promise(function(resolve,reject){if(!filePath){resolve(false);}fs.access(filePath,fs.constants.R_OK,function(err){if(err){if(process.env.NODE_ENV==='development'){logger.debug(\"Requested file \"+filePath+\" doesn't exist \"+err);}resolve(false);}resolve(filePath);});// tslint:disable-next-line:no-any\n})[\"catch\"](function(err){errLogger(err);return false;})];});});};/**\r\n * Utility function to sync check if file exists but returns path of it does, false if it doesn't\r\n * @param filePath file path to check\r\n */exports.safeFileExistsSync=function(filePath){try{return fs.existsSync(filePath);}catch(err){return false;}};function asyncForEach(array,callback){return tslib_1.__awaiter(this,void 0,void 0,function(){var index;return tslib_1.__generator(this,function(_a){switch(_a.label){case 0:index=0;_a.label=1;case 1:if(!(index<array.length))return[3/*break*/,4];return[4/*yield*/,callback(array[index],index,array)];case 2:_a.sent();_a.label=3;case 3:index++;return[3/*break*/,1];case 4:return[2/*return*/];}});});}exports.asyncForEach=asyncForEach;// Helper function for parsing/normalizing json, exported\nexports.safeParseJson=function(content,trace){try{return typeof content==='string'?JSON.parse(content):content;}catch(error){trace=trace||console_trace_1.trace;trace.error(new Error(\"JSON Parsing failed for content:\\n \"+content),error);return null;}};/**\r\n * Implementation to safely read a file and try to parse JSON. If the file does not exist or there is some issue,\r\n * undefined is returned which is NOT valid JSON and should be checked.\r\n *\r\n * @param filePath Path of the file to try to read and parse\r\n * @param trace optional trace logger to use while reading file\r\n */exports.safeReadJson=function(filePath,trace){return tslib_1.__awaiter(void 0,void 0,void 0,function(){var _a,_b,error_1;return tslib_1.__generator(this,function(_c){switch(_c.label){case 0:_c.trys.push([0,4,,5]);return[4/*yield*/,exports.safeFileExists(filePath)];case 1:if(!_c.sent())return[3/*break*/,3];_b=(_a=JSON).parse;return[4/*yield*/,fs.readFile(filePath,'utf8')];case 2:return[2/*return*/,_b.apply(_a,[_c.sent()])];case 3:return[3/*break*/,5];case 4:error_1=_c.sent();trace=trace||console;trace.error(new Error(\"JSON fetch failed in safeReadJson with path: [\"+filePath+\"]\"));trace.error(error_1);return[3/*break*/,5];case 5:return[2/*return*/,undefined];}});});};exports.safeReadJsonSync=function(filePath,trace){try{if(exports.safeFileExistsSync(filePath)){return fs.readJSONSync(filePath);}}catch(error){trace=trace||console_trace_1.trace;if(error.code==='ENOENT'){trace.debug(\"file not found at [\"+filePath+\"]\");return undefined;}trace.error(new Error(\"JSON fetch failed in safeReadJsonSync with path: [\"+path+\"]\"));trace.error(error);}return undefined;};/**\r\n * Writes starter pack initialization data to file\r\n */ // tslint:disable-next-line:no-any\nexports.safeWriteJson=function(filePath,data,trace,spacing){return tslib_1.__awaiter(void 0,void 0,void 0,function(){var isFileExists,error_2;return tslib_1.__generator(this,function(_a){switch(_a.label){case 0:_a.trys.push([0,5,,6]);return[4/*yield*/,exports.safeFileExists(filePath)];case 1:isFileExists=_a.sent();if(!!isFileExists)return[3/*break*/,3];return[4/*yield*/,fs.mkdirp(path.dirname(filePath))];case 2:_a.sent();_a.label=3;case 3:return[4/*yield*/,fs.writeFile(filePath,JSON.stringify(data,null,spacing||2),'utf8')];case 4:_a.sent();return[2/*return*/,true];case 5:error_2=_a.sent();trace=trace||console_trace_1.trace;trace.error(new Error(\"JSON fetch fails for [\"+filePath+\"]\"),error_2);trace.error(error_2);return[2/*return*/,false];case 6:return[2/*return*/];}});});};/**\r\n * Writes starter pack initialization data to file\r\n */ // tslint:disable-next-line:no-any\nexports.safeWriteJS=function(filePath,data,trace){return tslib_1.__awaiter(void 0,void 0,void 0,function(){var isFileExists,error_3;return tslib_1.__generator(this,function(_a){switch(_a.label){case 0:_a.trys.push([0,5,,6]);return[4/*yield*/,exports.safeFileExists(filePath)];case 1:isFileExists=_a.sent();if(!!isFileExists)return[3/*break*/,3];return[4/*yield*/,fs.mkdirp(path.dirname(filePath))];case 2:_a.sent();_a.label=3;case 3:return[4/*yield*/,fs.writeFile(filePath,data.join('\\n'),'utf8')];case 4:_a.sent();return[2/*return*/,true];case 5:error_3=_a.sent();trace=trace||console_trace_1.trace;trace.error(new Error(\"------ JS fetch fails for [\"+filePath+\"]\"),error_3);return[2/*return*/,false];case 6:return[2/*return*/];}});});};exports.safeGetAllFilesPath=function(globFilePattern,options){return tslib_1.__awaiter(void 0,void 0,void 0,function(){var getPaths,paths,promises;return tslib_1.__generator(this,function(_a){switch(_a.label){case 0:getPaths=function getPaths(pattern){return tslib_1.__awaiter(void 0,void 0,void 0,function(){var filePaths,error_4;return tslib_1.__generator(this,function(_a){switch(_a.label){case 0:_a.trys.push([0,2,,3]);console_trace_1.trace.debug(\"Tracing all file with path '\"+pattern+\"'\");return[4/*yield*/,globAsync(pattern,options)];case 1:filePaths=_a.sent();console_trace_1.trace.debug(filePaths);return[2/*return*/,filePaths];case 2:error_4=_a.sent();console_trace_1.trace.error(error_4);return[2/*return*/,[]];case 3:return[2/*return*/];}});});};paths=[];if(!Array.isArray(globFilePattern))return[3/*break*/,2];promises=globFilePattern.map(getPaths);return[4/*yield*/,promises.reduce(function(previousTask,currentTask,result){return tslib_1.__awaiter(void 0,void 0,void 0,function(){var prevOutput,currentOutput;return tslib_1.__generator(this,function(_a){switch(_a.label){case 0:return[4/*yield*/,previousTask];case 1:prevOutput=_a.sent();return[4/*yield*/,currentTask];case 2:currentOutput=_a.sent();return[2/*return*/,tslib_1.__spreadArrays(prevOutput,currentOutput)];}});});},Promise.resolve(promises[0])).then(function(results){return paths=Array.from(new Set(results));})];case 1:_a.sent();return[3/*break*/,4];case 2:return[4/*yield*/,getPaths(globFilePattern)];case 3:paths=_a.sent();_a.label=4;case 4:return[2/*return*/,paths];}});});};exports.safeGetAllFilesPathSync=function(globFilePattern,trace,options){trace=trace||console_trace_1.trace;try{trace.info(\"Tracing all definition file with path '\"+globFilePattern+\"'\");var filePaths=glob.sync(globFilePattern,options);trace.info(filePaths);return filePaths;}catch(error){trace.error(error);return[];}};exports.isDirectory=function(source){return fs.lstatSync(source).isDirectory()||fs.lstatSync(source).isSymbolicLink();};exports.getDirectories=function(source){return fs.readdirSync(source).filter(function(name){return exports.isDirectory(path.join(source,name));});};/**\r\n * Checks to see if the specified path is a file\r\n * @param source Fully qualified path\r\n */exports.isFileSync=function(source){return source&&fs.existsSync(source)&&fs.lstatSync(source).isFile();};/**\r\n * Returns all files in a directory\r\n * @param sourceDir Directory\r\n */exports.getFilesInDirSync=function(sourceDir){return fs.readdirSync(sourceDir).filter(function(name){return exports.isFileSync(path.join(sourceDir,name));});};/**\r\n * Will write a file in an async way and attempt to create all directories that do not exist.  Any error\r\n * is gracefully eaten and printed to console\r\n *\r\n * @param file file path\r\n * @param data data to write\r\n * @param options options\r\n */ // tslint:disable:no-any\nexports.safeWriteFile=function(file,data,options){return tslib_1.__awaiter(void 0,void 0,void 0,function(){return tslib_1.__generator(this,function(_a){console_trace_1.trace.debug(\"Writing file \"+file+\".\");return[2/*return*/,fs.outputFile(file,data,options).then(function(){console_trace_1.trace.debug(\"Successfully wrote '\"+file+\"'.\");})[\"catch\"](function(err){console_trace_1.trace.error(\"Error writing '\"+file+\"'\");console_trace_1.trace.error(err);})];});});};/**\r\n * Returns true if the environment is detected to be yarn workspaces env and cli template has been hoisted\r\n */exports.isCliTemplateHoisted=function(){var msdyn365ModuleDir=path.resolve(process.cwd(),'node_modules/@msdyn365-commerce/cli-template-internal');return!fs.existsSync(msdyn365ModuleDir);};/**\r\n * Returns true if the environment is detected to be yarn workspaces env and MSDyn365 Commerce Modules has been hoisted\r\n */exports.isMSDyn365CommerceModulesHoisted=function(){var msdyn365ModuleDir=path.resolve(process.cwd(),'node_modules/@msdyn365-commerce-modules');return!fs.existsSync(msdyn365ModuleDir);};/**\r\n * Returns true if the environment is detected to be yarn workspaces env and MSDyn365 Commerce has been hoisted\r\n */exports.isMSDyn365CommerceHoisted=function(){var msdyn365ModuleDir=path.resolve(process.cwd(),'node_modules/@msdyn365-commerce');return!fs.existsSync(msdyn365ModuleDir);};/**\r\n * Returns the hoisted node_modules directory\r\n * Assumes the node modules are two levels above\r\n * node_modules\r\n * packages\r\n *     --> module\r\n *         ---> process.cwd()\r\n */exports.getHoistedNodeModules=function(){return path.resolve(process.cwd(),'../../','node_modules');};/**\r\n * Gets the current version of a pacakage\r\n * @param packageNamespace\r\n * @param packageName\r\n * @param errorOnFailure\r\n */exports.getVersionForPackage=function(packageNamespace,packageName,options){var appDirectory=fs.realpathSync(process.cwd());var resolveApp=function resolveApp(relativePath){return path.resolve(appDirectory,relativePath);};var paths={appNodeModules:resolveApp('node_modules')};try{var pathToPackage=path.join(paths.appNodeModules,packageNamespace,packageName);// Hoisted check\nif(!fs.existsSync(path.join(pathToPackage,'package.json'))){pathToPackage=path.resolve(paths.appNodeModules,'../../../node_modules/',packageNamespace,packageName);}if(fs.existsSync(path.join(pathToPackage,'package.json'))){var packageInfo=JSON.parse(fs.readFileSync(path.join(pathToPackage,'package.json'),'utf8'));return packageInfo.version?packageInfo.version:'--';}else{throw new Error(\"Package \"+packageNamespace+\"/\"+packageName+\" does not exist in node_modules\");}}catch(e){if(options.errorOnFailure){console.error(e);console.error(\"Error in resolving current version of \"+packageNamespace+\"/\"+packageName);}else{console.warn(\"Unable to resolve current version of \"+packageNamespace+\"/\"+packageName+\". Check to see if the package is installed.\");}return'--';}};/**\r\n * Gets the Retail Cloud Scale Unit (RCSU) version info of a partner\r\n * @param baseUrl Base url from the partners .evn file\r\n */exports.getRCSUversion=function(baseUrl){return tslib_1.__awaiter(void 0,void 0,void 0,function(){var url,requestConfig,res,err_1;return tslib_1.__generator(this,function(_a){switch(_a.label){case 0:if(!baseUrl)return[3/*break*/,5];_a.label=1;case 1:_a.trys.push([1,3,,4]);url=baseUrl+\"Commerce/GetEnvironmentConfiguration\";requestConfig={headers:{'Content-Type':'application/json'}};return[4/*yield*/,axios_1[\"default\"].get(url,requestConfig)];case 2:res=_a.sent();if(res.data&&res.data.BaseVersion){return[2/*return*/,res.data.BaseVersion];}else{return[2/*return*/,'--'];}return[3/*break*/,4];case 3:err_1=_a.sent();return[2/*return*/,'--'];case 4:return[3/*break*/,6];case 5:return[2/*return*/,'--'];case 6:return[2/*return*/];}});});};","map":{"version":3,"sources":["../../../src/server/io.ts"],"names":[],"mappings":"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","sourcesContent":["/*!\n * Copyright (c) Microsoft Corporation.\n * All rights reserved. See LICENSE in the project root for license information.\n */\n\n// tslint:disable:no-var-requires no-shadowed-variable\nimport axios, { AxiosRequestConfig } from 'axios';\nimport * as fs from 'fs-extra';\nimport { IOptions } from 'glob';\nimport * as path from 'path';\nimport { promisify } from 'util';\nimport { trace as Tracer } from './console-trace';\n\nexport type FunctionReturn<TIn = undefined, TOut = undefined> = (input: TIn) => TOut;\n\nexport const safeReadFile = async (filePath: string, traceToUse: { error: Function } = Tracer): Promise<string> => {\n    try {\n        // tslint:disable-next-line:no-any\n        return fs.readFile(filePath, 'utf8').catch((reason: any) => {\n            throw new Error(reason);\n        });\n    } catch (error) {\n        traceToUse.error(`Error reading ${filePath.toString()}`);\n        traceToUse.error(error);\n        return '';\n    }\n};\n\nexport const safeReadFileSync = (filePath: string, traceToUse: { error: Function } = Tracer): string => {\n    try {\n        return fs.readFileSync(filePath, 'utf8');\n    } catch (error) {\n        return '';\n    }\n};\n\n// tslint:disable-next-line:no-require-imports\nconst glob = require('glob');\nconst globAsync = promisify(glob);\n\n/**\n * Utility function to async check if file exists but returns path of it does, false if it doesn't\n * @param filePath file path to check\n */\nexport const safeFileExists = async (\n    filePath: string,\n    trace?: {\n        debug: FunctionReturn<string, void>;\n        error: FunctionReturn<string, void>;\n    }\n): Promise<boolean | string> => {\n    const logger = trace || Tracer;\n    const errLogger: FunctionReturn<string, void> = <FunctionReturn<string, void>>(<unknown>logger.error) || Tracer.error;\n    return new Promise((resolve: (pathToFileThatExists: string | boolean) => void, reject: () => void) => {\n        if (!filePath) {\n            resolve(false);\n        }\n\n        fs.access(filePath, fs.constants.R_OK, (err: NodeJS.ErrnoException) => {\n            if (err) {\n                if (process.env.NODE_ENV === 'development') {\n                    logger.debug(`Requested file ${filePath} doesn't exist ${err}`);\n                }\n                resolve(false);\n            }\n            resolve(filePath);\n        });\n        // tslint:disable-next-line:no-any\n    }).catch((err: any) => {\n        errLogger(err);\n        return false;\n    });\n};\n\n/**\n * Utility function to sync check if file exists but returns path of it does, false if it doesn't\n * @param filePath file path to check\n */\nexport const safeFileExistsSync = (filePath: string): boolean => {\n    try {\n        return fs.existsSync(filePath);\n    } catch (err) {\n        return false;\n    }\n};\n\nexport async function asyncForEach(array: unknown[], callback: Function): Promise<void> {\n    for (let index = 0; index < array.length; index++) {\n        await callback(array[index], index, array);\n    }\n}\n\n// Helper function for parsing/normalizing json, exported\nexport const safeParseJson = <T extends object>(content: string, trace?: { error: Function }): T | null => {\n    try {\n        return typeof content === 'string' ? <T>JSON.parse(content) : <T>content;\n    } catch (error) {\n        trace = trace || Tracer;\n        trace.error(new Error(`JSON Parsing failed for content:\\n ${content}`), error);\n        return null;\n    }\n};\n\n/**\n * Implementation to safely read a file and try to parse JSON. If the file does not exist or there is some issue,\n * undefined is returned which is NOT valid JSON and should be checked.\n *\n * @param filePath Path of the file to try to read and parse\n * @param trace optional trace logger to use while reading file\n */\nexport const safeReadJson = async <T extends object>(filePath: string, trace?: { error: Function }): Promise<T | undefined> => {\n    try {\n        if (await safeFileExists(filePath)) {\n            return <T>JSON.parse(await fs.readFile(filePath, 'utf8'));\n        }\n    } catch (error) {\n        trace = trace || console;\n        trace.error(new Error(`JSON fetch failed in safeReadJson with path: [${filePath}]`));\n        trace.error(error);\n    }\n\n    return undefined;\n};\n\nexport const safeReadJsonSync = <T extends object>(filePath: string, trace?: { debug: Function; error: Function }): T | undefined => {\n    try {\n        if (safeFileExistsSync(filePath)) {\n            return <T>fs.readJSONSync(filePath);\n        }\n    } catch (error) {\n        trace = trace || Tracer;\n        if (error.code === 'ENOENT') {\n            trace.debug(`file not found at [${filePath}]`);\n            return undefined;\n        }\n\n        trace.error(new Error(`JSON fetch failed in safeReadJsonSync with path: [${path}]`));\n        trace.error(error);\n    }\n\n    return undefined;\n};\n\n/**\n * Writes starter pack initialization data to file\n */\n// tslint:disable-next-line:no-any\nexport const safeWriteJson = async (\n    filePath: string,\n    data: object,\n    trace?: { error: Function },\n    spacing?: string | number\n): Promise<boolean> => {\n    try {\n        const isFileExists = await safeFileExists(filePath);\n        if (!isFileExists) {\n            await fs.mkdirp(path.dirname(filePath));\n        }\n        await fs.writeFile(filePath, JSON.stringify(data, null, spacing || 2), 'utf8');\n        return true;\n    } catch (error) {\n        trace = trace || Tracer;\n        trace.error(new Error(`JSON fetch fails for [${filePath}]`), error);\n        trace.error(error);\n        return false;\n    }\n};\n\n/**\n * Writes starter pack initialization data to file\n */\n// tslint:disable-next-line:no-any\nexport const safeWriteJS = async (filePath: string, data: string[], trace?: { error: Function }): Promise<boolean> => {\n    try {\n        const isFileExists = await safeFileExists(filePath);\n        if (!isFileExists) {\n            await fs.mkdirp(path.dirname(filePath));\n        }\n        await fs.writeFile(filePath, data.join('\\n'), 'utf8');\n        return true;\n    } catch (error) {\n        trace = trace || Tracer;\n        trace.error(new Error(`------ JS fetch fails for [${filePath}]`), error);\n        return false;\n    }\n};\n\nexport const safeGetAllFilesPath = async (globFilePattern: string | string[], options?: IOptions): Promise<string[]> => {\n    const getPaths = async (pattern: string) => {\n        try {\n            Tracer.debug(`Tracing all file with path '${pattern}'`);\n            const filePaths = await globAsync(pattern, options);\n            Tracer.debug(filePaths);\n            return filePaths;\n        } catch (error) {\n            Tracer.error(error);\n            return [];\n        }\n    };\n\n    let paths: string[] = [];\n    if (Array.isArray(globFilePattern)) {\n        const promises = globFilePattern.map(getPaths);\n\n        await promises\n            .reduce(async (previousTask, currentTask, result) => {\n                const prevOutput = await previousTask;\n                const currentOutput = await currentTask;\n                return [...prevOutput, ...currentOutput];\n            },      Promise.resolve(promises[0]))\n            .then(results => (paths = Array.from(new Set(results))));\n    } else {\n        paths = await getPaths(globFilePattern);\n    }\n\n    return paths;\n};\n\nexport const safeGetAllFilesPathSync = (\n    globFilePattern: string,\n    trace?: { error: Function; info: Function },\n    options?: IOptions\n): string[] => {\n    trace = trace || Tracer;\n    try {\n        trace.info(`Tracing all definition file with path '${globFilePattern}'`);\n        const filePaths = glob.sync(globFilePattern, options);\n        trace.info(filePaths);\n        return filePaths;\n    } catch (error) {\n        trace.error(error);\n        return [];\n    }\n};\n\nexport const isDirectory = (source: string) => fs.lstatSync(source).isDirectory() || fs.lstatSync(source).isSymbolicLink();\nexport const getDirectories = (source: string) => fs.readdirSync(source).filter((name: string) => isDirectory(path.join(source, name)));\n\n/**\n * Checks to see if the specified path is a file\n * @param source Fully qualified path\n */\nexport const isFileSync = (source: string | null | undefined) => source && fs.existsSync(source) && fs.lstatSync(source).isFile();\n\n/**\n * Returns all files in a directory\n * @param sourceDir Directory\n */\nexport const getFilesInDirSync = (sourceDir: string) =>\n    fs.readdirSync(sourceDir).filter((name: string) => isFileSync(path.join(sourceDir, name)));\n\n/**\n * Will write a file in an async way and attempt to create all directories that do not exist.  Any error\n * is gracefully eaten and printed to console\n *\n * @param file file path\n * @param data data to write\n * @param options options\n */\n\n// tslint:disable:no-any\nexport const safeWriteFile = async (file: string, data: any, options?: fs.WriteFileOptions | string): Promise<void> => {\n    Tracer.debug(`Writing file ${file}.`);\n    return fs\n        .outputFile(file, data, options)\n        .then(() => {\n            Tracer.debug(`Successfully wrote '${file}'.`);\n        })\n        .catch((err: any) => {\n            Tracer.error(`Error writing '${file}'`);\n            Tracer.error(err);\n        });\n};\n\n/**\n * Returns true if the environment is detected to be yarn workspaces env and cli template has been hoisted\n */\nexport const isCliTemplateHoisted = () => {\n    const msdyn365ModuleDir = path.resolve(process.cwd(), 'node_modules/@msdyn365-commerce/cli-template-internal');\n    return !fs.existsSync(msdyn365ModuleDir);\n};\n\n/**\n * Returns true if the environment is detected to be yarn workspaces env and MSDyn365 Commerce Modules has been hoisted\n */\nexport const isMSDyn365CommerceModulesHoisted = () => {\n    const msdyn365ModuleDir = path.resolve(process.cwd(), 'node_modules/@msdyn365-commerce-modules');\n    return !fs.existsSync(msdyn365ModuleDir);\n};\n\n/**\n * Returns true if the environment is detected to be yarn workspaces env and MSDyn365 Commerce has been hoisted\n */\nexport const isMSDyn365CommerceHoisted = () => {\n    const msdyn365ModuleDir = path.resolve(process.cwd(), 'node_modules/@msdyn365-commerce');\n    return !fs.existsSync(msdyn365ModuleDir);\n};\n\n/**\n * Returns the hoisted node_modules directory\n * Assumes the node modules are two levels above\n * node_modules\n * packages\n *     --> module\n *         ---> process.cwd()\n */\nexport const getHoistedNodeModules = () => {\n    return path.resolve(process.cwd(), '../../', 'node_modules');\n};\n\n/**\n * Gets the current version of a pacakage\n * @param packageNamespace\n * @param packageName\n * @param errorOnFailure\n */\nexport const getVersionForPackage = (packageNamespace: string, packageName: string, options: { errorOnFailure: boolean }): string => {\n    const appDirectory = fs.realpathSync(process.cwd());\n    const resolveApp = (relativePath: string) => path.resolve(appDirectory, relativePath);\n    const paths = {\n        appNodeModules: resolveApp('node_modules')\n    };\n\n    try {\n        let pathToPackage = path.join(paths.appNodeModules, packageNamespace, packageName);\n        // Hoisted check\n        if (!fs.existsSync(path.join(pathToPackage, 'package.json'))) {\n            pathToPackage = path.resolve(paths.appNodeModules, '../../../node_modules/', packageNamespace, packageName);\n        }\n        if (fs.existsSync(path.join(pathToPackage, 'package.json'))) {\n            const packageInfo = JSON.parse(fs.readFileSync(path.join(pathToPackage, 'package.json'), 'utf8'));\n            return packageInfo.version ? packageInfo.version : '--';\n        } else {\n            throw new Error(`Package ${packageNamespace}/${packageName} does not exist in node_modules`);\n        }\n    } catch (e) {\n        if (options.errorOnFailure) {\n            console.error(e);\n            console.error(`Error in resolving current version of ${packageNamespace}/${packageName}`);\n        } else {\n            console.warn(\n                `Unable to resolve current version of ${packageNamespace}/${packageName}. Check to see if the package is installed.`\n            );\n        }\n        return '--';\n    }\n};\n\n/**\n * Gets the Retail Cloud Scale Unit (RCSU) version info of a partner\n * @param baseUrl Base url from the partners .evn file\n */\nexport const getRCSUversion = async (baseUrl: string): Promise<string> => {\n    if (baseUrl) {\n        try {\n            const url = `${baseUrl}Commerce/GetEnvironmentConfiguration`;\n            const requestConfig: AxiosRequestConfig = {\n                headers: { 'Content-Type': 'application/json' }\n            };\n            const res = await axios.get(url, requestConfig);\n            if (res.data && res.data.BaseVersion) {\n                return res.data.BaseVersion;\n            } else {\n                return '--';\n            }\n        } catch (err) {\n            return '--';\n        }\n    } else {\n        return '--';\n    }\n};\n"],"sourceRoot":""},"metadata":{},"sourceType":"script"}