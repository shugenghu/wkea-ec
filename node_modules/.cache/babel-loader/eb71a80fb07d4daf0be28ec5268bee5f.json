{"ast":null,"code":"\"use strict\";Object.defineProperty(exports,\"__esModule\",{value:true});var tslib_1=require(\"tslib\");var React=tslib_1.__importStar(require(\"react\"));var Tooltip_1=tslib_1.__importDefault(require(\"./Tooltip\"));var UncontrolledTooltip=function(_super){tslib_1.__extends(UncontrolledTooltip,_super);function UncontrolledTooltip(props){var _this=_super.call(this,props)||this;_this.state={isOpen:false};_this._toggle=_this._toggle.bind(_this);return _this;}UncontrolledTooltip.prototype.render=function(){return React.createElement(Tooltip_1[\"default\"],tslib_1.__assign({isOpen:this.state.isOpen,toggle:this._toggle},this.props));};UncontrolledTooltip.prototype._toggle=function(){this.setState({isOpen:!this.state.isOpen});};return UncontrolledTooltip;}(React.Component);exports[\"default\"]=UncontrolledTooltip;","map":{"version":3,"sources":["/Users/User/Documents/wkea-ec/Msdyn365.Commerce.Online/node_modules/@msdyn365-commerce-modules/utilities/src/tooltip/UncontrolledTooltip.tsx"],"names":[],"mappings":"mGAAA,GAAA,CAAA,KAAA,CAAA,OAAA,CAAA,YAAA,CAAA,OAAA,CAAA,OAAA,CAAA,CAAA,CACA,GAAA,CAAA,SAAA,CAAA,OAAA,CAAA,eAAA,CAAA,OAAA,CAAA,WAAA,CAAA,CAAA,CAUA,GAAA,CAAA,mBAAA,CAAA,SAAA,MAAA,CAAA,CAAiD,OAAA,CAAA,SAAA,CAAA,mBAAA,CAAA,MAAA,EAC7C,QAAA,CAAA,mBAAA,CAAY,KAAZ,CAA4C,CAA5C,GAAA,CAAA,KAAA,CACI,MAAA,CAAA,IAAA,CAAA,IAAA,CAAM,KAAN,GAAY,IADhB,CAEI,KAAI,CAAC,KAAL,CAAa,CAAE,MAAM,CAAE,KAAV,CAAb,CACA,KAAI,CAAC,OAAL,CAAe,KAAI,CAAC,OAAL,CAAa,IAAb,CAAkB,KAAlB,CAAf,C,aACH,CAEM,mBAAA,CAAA,SAAA,CAAA,MAAA,CAAP,UAAA,CACI,MAAO,CAAA,KAAA,CAAA,aAAA,CAAC,SAAA,WAAD,CAAQ,OAAA,CAAA,QAAA,CAAA,CAAC,MAAM,CAAE,KAAK,KAAL,CAAW,MAApB,CAA4B,MAAM,CAAE,KAAK,OAAzC,CAAA,CAAsD,KAAK,KAA3D,CAAR,CAAP,CACH,CAFM,CAIC,mBAAA,CAAA,SAAA,CAAA,OAAA,CAAR,UAAA,CACI,KAAK,QAAL,CAAc,CAAE,MAAM,CAAE,CAAC,KAAK,KAAL,CAAW,MAAtB,CAAd,EACH,CAFO,CAGZ,MAAA,CAAA,mBAAA,CAAC,CAdD,CAAiD,KAAK,CAAC,SAAvD,CAAA,C","sourcesContent":["import * as React from 'react';\nimport Tooltip from './Tooltip';\nimport { IUncontrolledTooltipProps } from './Tooltip.props';\n\nexport interface IUncontrolledTooltipState {\n    isOpen: boolean;\n}\n\n/**\n * UncontrolledTooltip examples\n */\nexport default class UncontrolledTooltip extends React.Component<IUncontrolledTooltipProps, IUncontrolledTooltipState> {\n    constructor(props: IUncontrolledTooltipProps) {\n        super(props);\n        this.state = { isOpen: false };\n        this._toggle = this._toggle.bind(this);\n    }\n\n    public render(): JSX.Element {\n        return <Tooltip isOpen={this.state.isOpen} toggle={this._toggle} {...this.props} />;\n    }\n\n    private _toggle(): void {\n        this.setState({ isOpen: !this.state.isOpen });\n    }\n}\n"]},"metadata":{},"sourceType":"script"}