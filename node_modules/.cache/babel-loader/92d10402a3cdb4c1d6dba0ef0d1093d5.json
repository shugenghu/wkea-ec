{"ast":null,"code":"import\"core-js/modules/es.array.reduce.js\";import\"core-js/modules/es.object.assign.js\";import\"core-js/modules/es.promise.js\";import\"core-js/modules/es.promise.finally.js\";import\"core-js/modules/es.regexp.constructor.js\";import\"core-js/modules/es.regexp.to-string.js\";import\"core-js/modules/web.dom-collections.iterator.js\";import\"core-js/modules/web.url.js\";import _defineProperty from\"@babel/runtime/helpers/esm/defineProperty\";function ownKeys(object,enumerableOnly){var keys=Object.keys(object);if(Object.getOwnPropertySymbols){var symbols=Object.getOwnPropertySymbols(object);if(enumerableOnly)symbols=symbols.filter(function(sym){return Object.getOwnPropertyDescriptor(object,sym).enumerable;});keys.push.apply(keys,symbols);}return keys;}function _objectSpread(target){for(var i=1;i<arguments.length;i++){var source=arguments[i]!=null?arguments[i]:{};if(i%2){ownKeys(Object(source),true).forEach(function(key){_defineProperty(target,key,source[key]);});}else if(Object.getOwnPropertyDescriptors){Object.defineProperties(target,Object.getOwnPropertyDescriptors(source));}else{ownKeys(Object(source)).forEach(function(key){Object.defineProperty(target,key,Object.getOwnPropertyDescriptor(source,key));});}}return target;}import{__decorate}from\"tslib\";import classnames from'classnames';import get from'lodash/get';import{action,computed,reaction,when}from'mobx';import{observer}from'mobx-react';import*as React from'react';import{withModuleState}from'@msdyn365-commerce-modules/checkout-utilities';import{Modal}from'@msdyn365-commerce-modules/utilities';import{getUrlSync}from'@msdyn365-commerce/core';import{retrieveCardPaymentAcceptResultAsync}from'@msdyn365-commerce/retail-proxy/dist/DataActions/CartsDataActions.g';import{resolveCardTypesAsync}from'@msdyn365-commerce/retail-proxy/dist/DataActions/StoreOperationsDataActions.g';import getCardPaymentAcceptPointAction,{GetCardPaymentAcceptPointInput}from'./actions/get-card-payment-accept-point';import AddPaymentFormComponent from'./components/add-payment-form';import ErrorComponent from'./components/error';import PaymentInformationComponent from'./components/payment-information';import WaitingComponent from'./components/waiting';import withVisibilityObserver from'./components/with-visibility-observer';import{paymentConnectorExtraContextMessage,PaymentConnectorPostMessageType,paymentConnectorSubmitMessage}from'./payment-instrument-message';let CheckoutPaymentInstrument=class CheckoutPaymentInstrument extends React.Component{constructor(){var _this;super(...arguments);_this=this;this.state={isFetchingPaymentConnector:true};this.moduleClassName='ms-checkout-payment-instrument';this.iframeRef=/*#__PURE__*/React.createRef();this.onIFrameMessage=async event=>{var _this$props$data$card;let result;try{if(typeof event.data!=='string'){return;}result=JSON.parse(event.data);}catch(error){this.setTerminalError(error);return;}const paymentConnectorId=(_this$props$data$card=this.props.data.cardPaymentAcceptPoint.result)===null||_this$props$data$card===void 0?void 0:_this$props$data$card.PaymentConnectorId;if(!result||!result.type||result.id!==paymentConnectorId){return;}const{type,value}=result;switch(type){case PaymentConnectorPostMessageType.Height:this.setState({isFetchingPaymentConnector:false,paymentConnectorHeight:value});return;case PaymentConnectorPostMessageType.Result:this.handlePaymentResult(value);return;case PaymentConnectorPostMessageType.CardPrefix:await this.handlePaymentCardPrefix(value);return;case PaymentConnectorPostMessageType.Error:this.handlePaymentError(value);return;case PaymentConnectorPostMessageType.Redirect:this.handlePaymentRedirect(value);return;case PaymentConnectorPostMessageType.Showoverlay:this.showOverlayModal(true);return;case PaymentConnectorPostMessageType.Hideoverlay:this.showOverlayModal(false);return;default:return;}};this.handlePaymentResult=function(resultAccessCode){var _checkout$result,_cardPaymentAcceptPoi;let isRedirectedFromPaymentGateway=arguments.length>1&&arguments[1]!==undefined?arguments[1]:false;const{data:{checkout,cardPaymentAcceptPoint},config:{paymenTenderType}}=_this.props;const cartId=((_checkout$result=checkout.result)===null||_checkout$result===void 0?void 0:_checkout$result.checkoutCart.cart.Id)||'';const paymentConnectorId=(_cardPaymentAcceptPoi=cardPaymentAcceptPoint.result)===null||_cardPaymentAcceptPoi===void 0?void 0:_cardPaymentAcceptPoi.PaymentConnectorId;const settings=_objectSpread({ReturnUrl:_this.getReturnUrl()},paymentConnectorId&&{PaymentConnectorId:paymentConnectorId});retrieveCardPaymentAcceptResultAsync({callerContext:_this.props.context.actionContext},resultAccessCode,[],cartId,settings).then(async cardPaymentAcceptResult=>{const{TenderLine,TokenizedPaymentCard,AdditionalContext}=cardPaymentAcceptResult||{};await _this.saveBillingAddress(TokenizedPaymentCard);if(AdditionalContext){_this.handleAdditionalContext(AdditionalContext);}else{if(!TokenizedPaymentCard){_this.setTerminalError(new Error('No TokenizedPaymentCard found'));return;}const checkoutState=_this.props.data.checkout.result;if(checkoutState){if(!checkoutState.cardPrefix){const cardPrefix=TokenizedPaymentCard&&TokenizedPaymentCard.CardTokenInfo&&TokenizedPaymentCard.CardTokenInfo.MaskedCardNumber;if(cardPrefix){await checkoutState.updateCardPrefix({newCardPrefix:cardPrefix});}}if(!TokenizedPaymentCard.CardTypeId){const cardTypeId=await _this.getCardTypeId(checkoutState.cardPrefix||'');if(!cardTypeId){const error=new Error('The specified card type is not supported.');error.name='CARDTYPENOTFOUND';_this.setTerminalError(error);return;}TokenizedPaymentCard.CardTypeId=cardTypeId;}await checkoutState.updateTenderLine({newTenderLine:TenderLine});await checkoutState.updateTokenizedPaymentCard({newTokenizedPaymentCard:TokenizedPaymentCard});await checkoutState.updatePaymentTenderType({newPaymentTenderType:paymenTenderType});if(isRedirectedFromPaymentGateway){var _this$props$data$chec;(_this$props$data$chec=_this.props.data.checkout.result)===null||_this$props$data$chec===void 0?void 0:_this$props$data$chec.checkoutCart.refreshCart({});}_this.props.moduleState.setHasError(false);_this.props.moduleState.onReady();_this.setState({terminalError:null,errorMessage:null});_this.props.moduleState.setIsSubmitContainer(true);}}}).catch(error=>{_this.updatePaymentAcceptPageData();_this.setTerminalError(error);return;}).finally(()=>{_this.setState({isPaymentProcessing:false});});};this.handlePaymentCardPrefix=async cardPrefix=>{const checkoutState=this.props.data.checkout.result;if(checkoutState){await checkoutState.updateCardPrefix({newCardPrefix:cardPrefix});}};this.handlePaymentRedirect=redirectData=>{this.setState({isPaymentVerificationRequried:true,paymentVerificationPostData:redirectData});this.props.moduleState.setHasError(false);this.props.moduleState.onReady();};this.showOverlayModal=isShow=>{this.setState({isOverlayModal:isShow});};this.getCardTypeId=async function(){let cardPrefix=arguments.length>0&&arguments[0]!==undefined?arguments[0]:'';try{const response=await resolveCardTypesAsync({callerContext:_this.props.context.actionContext},cardPrefix,-1);if(response&&response.length>0){return response[0].TypeId;}}catch(error){_this.props.context.telemetry.error('Call to resolveCardTypesAsync failed.',error);}return undefined;};this.redirectToPaymentVerification=async()=>{const{isPaymentVerificationRequried,paymentVerificationPostData}=this.state;if(!isPaymentVerificationRequried||!paymentVerificationPostData){return;}const checkoutState=this.props.data.checkout.result;if(checkoutState){await checkoutState.updatePaymentTenderType({newPaymentTenderType:this.props.config.paymenTenderType});await checkoutState.saveDataInStorage({});}const redirectInfo=JSON.parse(paymentVerificationPostData);const{url,data}=redirectInfo;const form=document.createElement('form');form.method='POST';form.action=url;for(const propertyName of Object.keys(data)){const element=document.createElement('input');element.name=propertyName;element.value=data[propertyName];form.appendChild(element);}document.body.appendChild(form);form.submit();};this.handlePaymentError=value=>{const{resources:{defaultSubmitErrorMessage='An error occurred in payment method details. Please try again.'}}=this.props;if(!value||value.length===0){this.setErrorMessage(defaultSubmitErrorMessage);return;}this.setErrorMessage(value.map(_value=>_value.Message).join('\\n'));};this.getReturnUrl=()=>{let returnUrl=getUrlSync('checkout',this.props.context.actionContext)||'';const absoluteUrlRegExp=new RegExp('^(?:[a-z]+:)?//','i');const isAbsoluteUrl=absoluteUrlRegExp.test(returnUrl);if(window&&!isAbsoluteUrl){returnUrl=\"\".concat(window.location.origin).concat(returnUrl);}return\"\".concat(returnUrl).concat(returnUrl.indexOf('?')===-1?'?':'&',\"pv=1\");};this.init=()=>{this.props.moduleState.init({onEdit:this.onEdit,onCancel:this.onCancel,onSubmit:this.onSubmit,onContainerReady:this.onContainerReady,isCancellable:false,status:this.shouldPaidByCard?'updating':'disabled'});const{data:{checkout},config}=this.props;if(this.isPaymentVerificationRedirection){var _checkout$result2;if(config.paymenTenderType===((_checkout$result2=checkout.result)===null||_checkout$result2===void 0?void 0:_checkout$result2.paymentTenderType)){const{requestFormData}=this.props.context.request;const formData=btoa(JSON.stringify(requestFormData));this.setState({isPaymentProcessing:true});this.props.moduleState.onPending();this.handlePaymentResult(formData,true);}else{this.props.moduleState.onSkip();}}else{if(this.asyncResultStatus==='FAILED'){this.setState({isFetchingPaymentConnector:false});this.setTerminalError(new Error('Failed in load data'));}}};this.setTerminalError=terminalError=>{this.props.telemetry.exception(terminalError);this.props.moduleState.setHasError(true);this.props.moduleState.onUpdating();const{resources:{genericErrorMessage,cardTypeErrorMessage}}=this.props;let errorMessage=genericErrorMessage;switch(terminalError.name){case'CARDTYPENOTFOUND':{errorMessage=cardTypeErrorMessage;break;}default:}this.setState({terminalError,errorMessage:errorMessage});};this.setErrorMessage=errorMessage=>{this.props.telemetry.error(errorMessage);this.props.moduleState.setHasError(true);this.props.moduleState.onUpdating();this.setState({errorMessage});};this.updatePaymentAcceptPageData=async()=>{const{context:{actionContext},config:{showBillingAddress,paymenTenderType},context:{request:{apiSettings}},data:{checkout}}=this.props;const input={showBillingAddress:showBillingAddress,paymenTenderType:paymenTenderType,apiSettings:apiSettings};this.setState({isFetchingPaymentConnector:true});const checkoutState=checkout.result;if(checkoutState){await checkoutState.updatePaymentTenderType({newPaymentTenderType:undefined});await checkoutState.updateTenderLine({newTenderLine:undefined});await checkoutState.updateTokenizedPaymentCard({newTokenizedPaymentCard:undefined});}getCardPaymentAcceptPointAction(new GetCardPaymentAcceptPointInput(input),actionContext).then(paymentAcceptPoint=>{actionContext.update(new GetCardPaymentAcceptPointInput(input),{AcceptPageContent:'',AcceptPageUrl:''});actionContext.update(new GetCardPaymentAcceptPointInput(input),paymentAcceptPoint);this.setState({paymentConnectorId:paymentAcceptPoint.PaymentConnectorId});}).catch(error=>{this.setTerminalError(error);this.setState({isFetchingPaymentConnector:false});actionContext.update(new GetCardPaymentAcceptPointInput(input),{AcceptPageContent:'',AcceptPageUrl:''});});};this.postMessageToIframe=message=>{const postMessage=get(this.iframeRef,'current.postMessage');if(postMessage){this.props.moduleState.onPending();postMessage(message);}};this.handleAdditionalContext=additionalContext=>{const message=paymentConnectorExtraContextMessage(additionalContext);this.postMessageToIframe(message);};this.saveBillingAddress=async tokenizedPaymentCard=>{const{showBillingAddress}=this.props.config;const checkoutState=this.props.data.checkout.result;if(checkoutState&&showBillingAddress&&tokenizedPaymentCard&&tokenizedPaymentCard.Zip){const billingAddress={ThreeLetterISORegionName:tokenizedPaymentCard.Country,Name:tokenizedPaymentCard.House==='N/A'?'':tokenizedPaymentCard.House,Street:tokenizedPaymentCard.Address1,StreetNumber:tokenizedPaymentCard.Address2,City:tokenizedPaymentCard.City,State:tokenizedPaymentCard.State,ZipCode:tokenizedPaymentCard.Zip,Phone:tokenizedPaymentCard.Phone};await checkoutState.updateBillingAddress({newBillingAddress:billingAddress});}};this.togglePayment=()=>{if(this.shouldPaidByCard&&this.props.moduleState.isDisabled){this.props.moduleState.onUpdating();}else if(!this.shouldPaidByCard&&!this.props.moduleState.isDisabled){this.props.moduleState.setHasError(false);this.props.moduleState.onDisable();}};this.onSubmit=()=>{const{isPrimaryPayment=true}=this.props.config;if(isPrimaryPayment){this.postMessageToIframe(paymentConnectorSubmitMessage());}else{this.props.moduleState.onSkip();}};this.onCancel=()=>{if(this.hasSelectedItem){this.props.moduleState.onReady();}else{this.props.moduleState.onUpdating();}};this.onEdit=()=>{this.props.moduleState.onUpdating();this.updatePaymentAcceptPageData();};this.onContainerReady=()=>{this.redirectToPaymentVerification();this.props.moduleState.setIsSubmitContainer(false);};}get getLoyaltyAmount(){const checkoutState=this.props.data.checkout.result;return checkoutState&&checkoutState.loyaltyAmount?checkoutState.loyaltyAmount:0;}get getCustomerAccountAmount(){const checkoutState=this.props.data.checkout.result;return checkoutState&&checkoutState.customerAccountAmount?checkoutState.customerAccountAmount:0;}get getGiftCardTotalAmount(){const checkoutState=this.props.data.checkout.result;if(!checkoutState||!checkoutState.giftCardExtends){return 0;}return checkoutState.giftCardExtends.reduce((count,giftCard)=>{const balance=giftCard.Balance||0;return count+balance;},0);}get shouldPaidByCard(){const{data:{checkout},config}=this.props;if(!checkout.result){return false;}const checkoutResult=checkout.result;const cart=checkoutResult.checkoutCart.cart;if(!cart||!cart.CartLines||!cart.CartLines.length){return false;}const{paymentTenderType,tokenizedPaymentCard}=checkoutResult;const isPaidByOtherPaymentSource=config.paymenTenderType!==paymentTenderType&&tokenizedPaymentCard;const amountDue=(cart.TotalAmount||0)-this.getGiftCardTotalAmount-this.getLoyaltyAmount-this.getCustomerAccountAmount;return amountDue>0&&!isPaidByOtherPaymentSource;}get isCartContainsItemsForShipping(){const pickupDeliveryModeCode=get(this.props,'context.request.channel.PickupDeliveryModeCode');return(get(this.props,'data.checkout.result.checkoutCart.cart.CartLines')||[]).some(cartLine=>cartLine.DeliveryMode!==pickupDeliveryModeCode);}get isCartHasSelectedDeliveryMethods(){return(get(this.props,'data.checkout.result.checkoutCart.cart.CartLines')||[]).every(cartLine=>!!cartLine.DeliveryMode);}get asyncResultStatus(){const isLoading=Object.values(this.props.data).some(data=>get(data,'status')==='LOADING');if(isLoading){return'LOADING';}const isSuccess=Object.values(this.props.data).every(data=>get(data,'status')==='SUCCESS');if(isSuccess){return'SUCCESS';}const isFailed=Object.values(this.props.data).some(data=>get(data,'status')==='FAILED');if(isFailed){return'FAILED';}return;}get hasSelectedItem(){return!!get(this.props.data,'checkoutState.result.tokenizedPaymentCard');}get isPaymentVerificationRedirection(){const{requestFormData,query}=this.props.context.request;return requestFormData&&query&&query.pv==='1'?true:false;}get requestUrlOrigin(){const origin=get(window,'location.origin');const requestUrl=typeof get(this.props,'context.request.url.requestUrl')==='string'?new URL(get(this.props,'context.request.url.requestUrl')):get(this.props,'context.request.url.requestUrl');return origin||requestUrl.origin;}componentDidMount(){when(()=>this.asyncResultStatus!=='LOADING',()=>{this.init();});reaction(()=>this.asyncResultStatus!=='FAILED'&&this.shouldPaidByCard,()=>{this.togglePayment();});}render(){const{errorMessage,isFetchingPaymentConnector,paymentConnectorHeight,isPaymentVerificationRequried,isPaymentProcessing,isOverlayModal}=this.state;const{moduleState:{isReady,hasError,hasInitialized,isPending,hasExternalSubmitGroup},config:{iFrameHeightOverride,paymentStyleOverride,className,showBillingAddress},resources,data:{checkout,cardPaymentAcceptPoint},visibilityObserver}=this.props;const isVisible=visibilityObserver&&visibilityObserver.isVisible;if(!hasInitialized||this.asyncResultStatus!=='FAILED'&&!this.shouldPaidByCard){this.props.context.telemetry.error('Checkout payment content is empty, module wont render');return null;}const{AcceptPageUrl,AcceptPageContent,MessageOrigin}=cardPaymentAcceptPoint.result||{AcceptPageUrl:undefined,AcceptPageContent:undefined,MessageOrigin:undefined};const{tokenizedPaymentCard,tenderLine,billingAddress}=checkout.result||{tokenizedPaymentCard:undefined,tenderLine:undefined,billingAddress:undefined};const viewProps=_objectSpread(_objectSpread(_objectSpread({},this.props),this.state),{},{isVisible,className,checkoutPaymentInstrument:{moduleProps:this.props,className:classnames(this.moduleClassName,className)},waiting:!isReady&&this.asyncResultStatus!=='FAILED'&&(this.asyncResultStatus==='LOADING'||isFetchingPaymentConnector||isPending)&&/*#__PURE__*/React.createElement(WaitingComponent,Object.assign({},{message:resources.loadingMessage})),alert:hasError&&errorMessage&&/*#__PURE__*/React.createElement(ErrorComponent,Object.assign({},{title:resources.errorMessageTitle,message:errorMessage})),paymentInformation:isReady&&!isPaymentVerificationRequried&&!isPaymentProcessing&&/*#__PURE__*/React.createElement(PaymentInformationComponent,{tokenizedPaymentCard:tokenizedPaymentCard,tenderLine:tenderLine,billingAddress:showBillingAddress?billingAddress:undefined,canEdit:!hasExternalSubmitGroup,onEdit:this.onEdit,resources:resources}),addPaymentForm:(!isReady||isPaymentVerificationRequried)&&!isPaymentProcessing&&(AcceptPageUrl||AcceptPageContent)&&isVisible&&/*#__PURE__*/React.createElement(AddPaymentFormComponent,{acceptPageUrl:AcceptPageUrl,acceptPageContent:AcceptPageContent,messageOrigin:MessageOrigin,onSubmit:this.onSubmit,onCancel:this.onCancel,onIFrameMessage:this.onIFrameMessage,iframeRef:this.iframeRef,canSubmit:!hasExternalSubmitGroup,canCancel:!hasExternalSubmitGroup&&this.hasSelectedItem,iFrameHeightOverride:iFrameHeightOverride||paymentConnectorHeight,requestUrlOrigin:this.requestUrlOrigin,isFetchingPaymentConnector:isFetchingPaymentConnector,paymentStyleOverride:paymentStyleOverride,resources:resources}),overlayModal:{modal:{tag:Modal,className:\"\".concat(this.moduleClassName,\"__overlay-modal\"),isOpen:isOverlayModal}}});return this.props.renderView(viewProps);}};__decorate([computed],CheckoutPaymentInstrument.prototype,\"getLoyaltyAmount\",null);__decorate([computed],CheckoutPaymentInstrument.prototype,\"getCustomerAccountAmount\",null);__decorate([computed],CheckoutPaymentInstrument.prototype,\"getGiftCardTotalAmount\",null);__decorate([computed],CheckoutPaymentInstrument.prototype,\"shouldPaidByCard\",null);__decorate([computed],CheckoutPaymentInstrument.prototype,\"isCartContainsItemsForShipping\",null);__decorate([computed],CheckoutPaymentInstrument.prototype,\"isCartHasSelectedDeliveryMethods\",null);__decorate([computed],CheckoutPaymentInstrument.prototype,\"asyncResultStatus\",null);__decorate([computed],CheckoutPaymentInstrument.prototype,\"hasSelectedItem\",null);__decorate([computed],CheckoutPaymentInstrument.prototype,\"isPaymentVerificationRedirection\",null);__decorate([computed],CheckoutPaymentInstrument.prototype,\"requestUrlOrigin\",null);__decorate([action],CheckoutPaymentInstrument.prototype,\"handlePaymentResult\",void 0);__decorate([action],CheckoutPaymentInstrument.prototype,\"handlePaymentCardPrefix\",void 0);__decorate([action],CheckoutPaymentInstrument.prototype,\"handlePaymentRedirect\",void 0);__decorate([action],CheckoutPaymentInstrument.prototype,\"init\",void 0);__decorate([action],CheckoutPaymentInstrument.prototype,\"setTerminalError\",void 0);__decorate([action],CheckoutPaymentInstrument.prototype,\"setErrorMessage\",void 0);__decorate([action],CheckoutPaymentInstrument.prototype,\"togglePayment\",void 0);__decorate([action],CheckoutPaymentInstrument.prototype,\"onSubmit\",void 0);__decorate([action],CheckoutPaymentInstrument.prototype,\"onCancel\",void 0);__decorate([action],CheckoutPaymentInstrument.prototype,\"onEdit\",void 0);__decorate([action],CheckoutPaymentInstrument.prototype,\"onContainerReady\",void 0);CheckoutPaymentInstrument=__decorate([withModuleState,observer],CheckoutPaymentInstrument);export{CheckoutPaymentInstrument};export default withVisibilityObserver(CheckoutPaymentInstrument);","map":{"version":3,"sources":["modules/checkout-payment-instrument/checkout-payment-instrument.tsx"],"names":[],"mappings":"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","sourcesContent":["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nimport classnames from 'classnames';\nimport get from 'lodash/get';\nimport { action, computed, reaction, when } from 'mobx';\nimport { observer } from 'mobx-react';\nimport * as React from 'react';\n\nimport { IModuleStateProps, withModuleState } from '@msdyn365-commerce-modules/checkout-utilities';\nimport { IModuleProps, INodeProps, Modal } from '@msdyn365-commerce-modules/utilities';\nimport { AsyncResultStatus, getUrlSync } from '@msdyn365-commerce/core';\nimport { IGiftCardExtend } from '@msdyn365-commerce/global-state';\nimport {\n    retrieveCardPaymentAcceptResultAsync\n} from '@msdyn365-commerce/retail-proxy/dist/DataActions/CartsDataActions.g';\nimport {\n    resolveCardTypesAsync\n} from '@msdyn365-commerce/retail-proxy/dist/DataActions/StoreOperationsDataActions.g';\nimport {\n    Address, CardType, CartLine, TokenizedPaymentCard\n} from '@msdyn365-commerce/retail-proxy/dist/Entities/CommerceTypes.g';\n\nimport getCardPaymentAcceptPointAction, {\n    GetCardPaymentAcceptPointInput\n} from './actions/get-card-payment-accept-point';\nimport { ICheckoutPaymentInstrumentData } from './checkout-payment-instrument.data';\nimport { ICheckoutPaymentInstrumentProps } from './checkout-payment-instrument.props.autogenerated';\nimport AddPaymentFormComponent from './components/add-payment-form';\nimport ErrorComponent from './components/error';\nimport Iframe from './components/iframe';\nimport PaymentInformationComponent from './components/payment-information';\nimport WaitingComponent from './components/waiting';\nimport withVisibilityObserver, {\n    IVisibilyObserverProps\n} from './components/with-visibility-observer';\nimport {\n    paymentConnectorExtraContextMessage, PaymentConnectorPostMessageType,\n    paymentConnectorSubmitMessage\n} from './payment-instrument-message';\n\nexport interface ICheckoutPaymentInstrumentModuleProps extends ICheckoutPaymentInstrumentProps<ICheckoutPaymentInstrumentData>, IModuleStateProps, IVisibilyObserverProps { }\n\ninterface ICheckoutPaymentInstrumentState {\n    errorMessage?: string;\n    isFetchingPaymentConnector?: boolean;\n    paymentConnectorHeight?: number;\n    isPaymentVerificationRequried?: boolean;\n    paymentVerificationPostData?: string;\n    isPaymentProcessing?: boolean;\n    isOverlayModal?: boolean;\n}\n\nexport interface ICheckoutPaymentOverlayModal {\n    modal: INodeProps;\n}\n\nexport interface ICheckoutPaymentInstrumentViewProps extends ICheckoutPaymentInstrumentProps<{}>, ICheckoutPaymentInstrumentState {\n    className?: string;\n    checkoutPaymentInstrument: IModuleProps;\n    waiting?: React.ReactNode;\n    alert?: React.ReactNode;\n    paymentInformation?: React.ReactNode;\n    addPaymentForm?: React.ReactNode;\n    overlayModal?: ICheckoutPaymentOverlayModal;\n    isVisible?: boolean;\n}\n\n/**\n *\n * CheckoutPaymentInstrument component\n * @extends {React.Component<ICheckoutPaymentInstrumentProps<ICheckoutPaymentInstrumentData>>}\n */\n// @ts-ignore\n@withModuleState\n@observer\nexport class CheckoutPaymentInstrument extends React.Component<ICheckoutPaymentInstrumentModuleProps> {\n\n    @computed get getLoyaltyAmount(): number {\n        const checkoutState = this.props.data.checkout.result;\n        return checkoutState && checkoutState.loyaltyAmount ? checkoutState.loyaltyAmount : 0;\n    }\n\n    @computed get getCustomerAccountAmount(): number {\n        const checkoutState = this.props.data.checkout.result;\n        return checkoutState && checkoutState.customerAccountAmount ? checkoutState.customerAccountAmount : 0;\n    }\n\n    @computed get getGiftCardTotalAmount(): number {\n        const checkoutState = this.props.data.checkout.result;\n        if (!checkoutState || !checkoutState.giftCardExtends) {\n            return 0;\n        }\n        return checkoutState.giftCardExtends.reduce((count: number, giftCard: IGiftCardExtend) => {\n            const balance: number = giftCard.Balance || 0;\n            return count + balance;\n            // tslint:disable-next-line:align\n        }, 0);\n    }\n\n    @computed get shouldPaidByCard(): boolean {\n        const {\n            data: {\n                checkout\n            },\n            config\n        } = this.props;\n        if (!checkout.result) {\n            return false;\n        }\n\n        const checkoutResult = checkout.result;\n        const cart = checkoutResult.checkoutCart.cart;\n        if (!cart || !cart.CartLines || !cart.CartLines.length) {\n            return false;\n        }\n\n        const { paymentTenderType, tokenizedPaymentCard } = checkoutResult;\n        const isPaidByOtherPaymentSource = config.paymenTenderType !== paymentTenderType && tokenizedPaymentCard;\n\n        // Use the card for payment after all other payment methods\n        const amountDue = (cart.TotalAmount || 0) - this.getGiftCardTotalAmount - this.getLoyaltyAmount - this.getCustomerAccountAmount;\n\n        return amountDue > 0 && !isPaidByOtherPaymentSource;\n    }\n\n    @computed get isCartContainsItemsForShipping(): boolean {\n        const pickupDeliveryModeCode = get(this.props, 'context.request.channel.PickupDeliveryModeCode');\n        return (get(this.props, 'data.checkout.result.checkoutCart.cart.CartLines') || []).some(\n            (cartLine: CartLine) => cartLine.DeliveryMode !== pickupDeliveryModeCode\n        );\n    }\n\n    @computed get isCartHasSelectedDeliveryMethods(): boolean {\n        return (get(this.props, 'data.checkout.result.checkoutCart.cart.CartLines') || []).every(\n            (cartLine: CartLine) => !!cartLine.DeliveryMode\n        );\n    }\n\n    @computed get asyncResultStatus(): AsyncResultStatus | undefined {\n        const isLoading = Object.values(this.props.data).some(data => get(data, 'status') === 'LOADING');\n        if (isLoading) {\n            return 'LOADING';\n        }\n\n        const isSuccess = Object.values(this.props.data).every(data => get(data, 'status') === 'SUCCESS');\n        if (isSuccess) {\n            return 'SUCCESS';\n        }\n\n        const isFailed = Object.values(this.props.data).some(data => get(data, 'status') === 'FAILED');\n        if (isFailed) {\n            return 'FAILED';\n        }\n\n        return;\n    }\n\n    @computed get hasSelectedItem(): boolean {\n        return !!get(this.props.data, 'checkoutState.result.tokenizedPaymentCard');\n    }\n\n    @computed get isPaymentVerificationRedirection(): boolean {\n        const { requestFormData, query } = this.props.context.request;\n        return (requestFormData && query && query.pv === '1') ? true : false;\n    }\n\n    @computed get requestUrlOrigin(): string {\n        const origin = get(window, 'location.origin');\n        const requestUrl =\n            typeof get(this.props, 'context.request.url.requestUrl') === 'string'\n                ? new URL(get(this.props, 'context.request.url.requestUrl'))\n                : get(this.props, 'context.request.url.requestUrl');\n        return origin || requestUrl.origin;\n    }\n\n    public state: ICheckoutPaymentInstrumentState = {\n        isFetchingPaymentConnector: true\n    };\n\n    private moduleClassName: string = 'ms-checkout-payment-instrument';\n    private iframeRef: React.RefObject<Iframe> = React.createRef();\n\n    public componentDidMount(): void {\n        // @ts-ignore: Compiler not reconizing condition check for function params\n        when(\n            () => this.asyncResultStatus !== 'LOADING',\n            () => {\n                this.init();\n            }\n        );\n\n        // @ts-ignore: Compiler not reconizing condition check for function params\n        reaction(\n            () => this.asyncResultStatus !== 'FAILED' && this.shouldPaidByCard,\n            () => {\n                this.togglePayment();\n            }\n        );\n    }\n\n    // tslint:disable-next-line:cyclomatic-complexity\n    public render(): JSX.Element | null {\n        const { errorMessage, isFetchingPaymentConnector, paymentConnectorHeight, isPaymentVerificationRequried, isPaymentProcessing, isOverlayModal } = this.state;\n        const {\n            moduleState: { isReady, hasError, hasInitialized, isPending, hasExternalSubmitGroup },\n            config: { iFrameHeightOverride, paymentStyleOverride, className, showBillingAddress },\n            resources,\n            data: { checkout, cardPaymentAcceptPoint },\n            visibilityObserver\n        } = this.props;\n\n        const isVisible = visibilityObserver && visibilityObserver.isVisible;\n\n        if (!hasInitialized || (this.asyncResultStatus !== 'FAILED' && !this.shouldPaidByCard)) {\n            this.props.context.telemetry.error('Checkout payment content is empty, module wont render');\n            return null;\n        }\n\n        const { AcceptPageUrl, AcceptPageContent, MessageOrigin } = cardPaymentAcceptPoint.result || {\n            AcceptPageUrl: undefined,\n            AcceptPageContent: undefined,\n            MessageOrigin: undefined\n        };\n\n        const { tokenizedPaymentCard, tenderLine, billingAddress } = checkout.result || {\n            tokenizedPaymentCard: undefined,\n            tenderLine: undefined,\n            billingAddress: undefined\n        };\n\n        const viewProps: ICheckoutPaymentInstrumentViewProps = {\n            ...this.props,\n            ...this.state,\n            isVisible,\n            className,\n\n            checkoutPaymentInstrument: {\n                moduleProps: this.props,\n                className: classnames(this.moduleClassName, className)\n            },\n            waiting: !isReady && this.asyncResultStatus !== 'FAILED' && (this.asyncResultStatus === 'LOADING' || isFetchingPaymentConnector || isPending) && (\n                <WaitingComponent {...{ message: resources.loadingMessage }} />\n            ),\n            alert: hasError && errorMessage && <ErrorComponent {...{ title: resources.errorMessageTitle, message: errorMessage }} />,\n            paymentInformation: isReady && !isPaymentVerificationRequried && !isPaymentProcessing && (\n                <PaymentInformationComponent\n                    tokenizedPaymentCard={tokenizedPaymentCard}\n                    tenderLine={tenderLine}\n                    billingAddress={showBillingAddress ? billingAddress : undefined}\n                    canEdit={!hasExternalSubmitGroup}\n                    onEdit={this.onEdit}\n                    resources={resources}\n                />\n            ),\n            addPaymentForm: (!isReady || isPaymentVerificationRequried) && !isPaymentProcessing && (AcceptPageUrl || AcceptPageContent) && isVisible && (\n                <AddPaymentFormComponent\n                    acceptPageUrl={AcceptPageUrl}\n                    acceptPageContent={AcceptPageContent}\n                    messageOrigin={MessageOrigin}\n                    onSubmit={this.onSubmit}\n                    onCancel={this.onCancel}\n                    onIFrameMessage={this.onIFrameMessage}\n                    iframeRef={this.iframeRef}\n                    canSubmit={!hasExternalSubmitGroup}\n                    canCancel={!hasExternalSubmitGroup && this.hasSelectedItem}\n                    iFrameHeightOverride={iFrameHeightOverride || paymentConnectorHeight}\n                    requestUrlOrigin={this.requestUrlOrigin}\n                    isFetchingPaymentConnector={isFetchingPaymentConnector}\n                    paymentStyleOverride={paymentStyleOverride}\n                    resources={resources}\n                />\n            ),\n            overlayModal: {\n                modal: {\n                    tag: Modal,\n                    className: `${this.moduleClassName}__overlay-modal`,\n                    isOpen: isOverlayModal\n                }\n            }\n        };\n\n        return this.props.renderView(viewProps) as React.ReactElement;\n    }\n\n    private onIFrameMessage = async (event: MessageEvent): Promise<void> => {\n        let result;\n        try {\n            if (typeof event.data !== 'string') {\n                return;\n            }\n            result = JSON.parse(event.data);\n        } catch (error) {\n            this.setTerminalError(error);\n            return;\n        }\n\n        const paymentConnectorId = this.props.data.cardPaymentAcceptPoint.result?.PaymentConnectorId;\n        if (!result || !result.type || result.id !== paymentConnectorId) {\n            return;\n        }\n\n        const { type, value } = result;\n\n        switch (type) {\n            case PaymentConnectorPostMessageType.Height:\n                // The payment connector will post height after it completes initialization\n                this.setState({\n                    isFetchingPaymentConnector: false,\n                    paymentConnectorHeight: value\n                });\n                return;\n            case PaymentConnectorPostMessageType.Result:\n                this.handlePaymentResult(value);\n                return;\n            case PaymentConnectorPostMessageType.CardPrefix:\n                await this.handlePaymentCardPrefix(value);\n                return;\n            case PaymentConnectorPostMessageType.Error:\n                this.handlePaymentError(value);\n                return;\n            case PaymentConnectorPostMessageType.Redirect:\n                this.handlePaymentRedirect(value);\n                return;\n            case PaymentConnectorPostMessageType.Showoverlay:\n                this.showOverlayModal(true);\n                return;\n            case PaymentConnectorPostMessageType.Hideoverlay:\n                this.showOverlayModal(false);\n                return;\n            default:\n                // Do nothing\n                return;\n        }\n    };\n\n    @action\n    private handlePaymentResult = (resultAccessCode: string, isRedirectedFromPaymentGateway: boolean = false): void => {\n        const {\n            data: {\n                checkout,\n                cardPaymentAcceptPoint\n            },\n            config: {\n                paymenTenderType\n            }\n        } = this.props;\n\n        const cartId = checkout.result?.checkoutCart.cart.Id || '';\n        const paymentConnectorId = cardPaymentAcceptPoint.result?.PaymentConnectorId;\n\n        const settings = {\n            ReturnUrl: this.getReturnUrl(),\n            ...(paymentConnectorId && { PaymentConnectorId: paymentConnectorId }),\n        };\n\n        retrieveCardPaymentAcceptResultAsync({ callerContext: this.props.context.actionContext }, resultAccessCode, [], cartId, settings)\n            .then(async cardPaymentAcceptResult => {\n                // tslint:disable-next-line:no-shadowed-variable\n                const { TenderLine, TokenizedPaymentCard, AdditionalContext } = cardPaymentAcceptResult || {};\n\n                await this.saveBillingAddress(TokenizedPaymentCard);\n\n                if (AdditionalContext) {\n                    this.handleAdditionalContext(AdditionalContext);\n                } else {\n                    if (!TokenizedPaymentCard) {\n                        this.setTerminalError(new Error('No TokenizedPaymentCard found'));\n                        return;\n                    }\n                    const checkoutState = this.props.data.checkout.result;\n                    if (checkoutState) {\n                        // Try to update card prefix, if it is not set already.\n                        // Adyen connector does not send msax-cc-cardprefix message\n                        // but it sets the card prefix in tokenized card\n                        if (!checkoutState.cardPrefix) {\n                            const cardPrefix =\n                                TokenizedPaymentCard &&\n                                TokenizedPaymentCard.CardTokenInfo &&\n                                TokenizedPaymentCard.CardTokenInfo.MaskedCardNumber;\n                            if (cardPrefix) {\n                                await checkoutState.updateCardPrefix({ newCardPrefix: cardPrefix });\n                            }\n                        }\n\n                        if (!TokenizedPaymentCard.CardTypeId) {\n                            const cardTypeId = await this.getCardTypeId(checkoutState.cardPrefix || '');\n                            if (!cardTypeId) {\n                                const error = new Error('The specified card type is not supported.');\n                                error.name = 'CARDTYPENOTFOUND';\n                                this.setTerminalError(error);\n                                return;\n                            }\n\n                            TokenizedPaymentCard.CardTypeId = cardTypeId;\n                        }\n\n                        await checkoutState.updateTenderLine({ newTenderLine: TenderLine });\n                        await checkoutState.updateTokenizedPaymentCard({ newTokenizedPaymentCard: TokenizedPaymentCard });\n                        await checkoutState.updatePaymentTenderType({ newPaymentTenderType: paymenTenderType });\n\n                        // In case of PSD2 redirect, cart we be updated in server side so refresh cart.\n                        if (isRedirectedFromPaymentGateway) {\n                            this.props.data.checkout.result?.checkoutCart.refreshCart({});\n                        }\n\n                        this.props.moduleState.setHasError(false);\n                        this.props.moduleState.onReady();\n                        this.setState({\n                            terminalError: null,\n                            errorMessage: null\n                        });\n                        this.props.moduleState.setIsSubmitContainer(true);\n                    }\n                }\n            })\n            .catch(error => {\n                // IMPORTANT: Call RS for getting a new payment session. It should not re-use the previous session for the security reason.\n                // tslint:disable-next-line:no-floating-promises\n                this.updatePaymentAcceptPageData();\n                this.setTerminalError(error);\n                return;\n            })\n            .finally(() => {\n                this.setState({\n                    isPaymentProcessing: false\n                });\n            });\n    };\n\n    @action\n    private handlePaymentCardPrefix = async (cardPrefix: string): Promise<void> => {\n        const checkoutState = this.props.data.checkout.result;\n        if (checkoutState) {\n            await checkoutState.updateCardPrefix({ newCardPrefix: cardPrefix });\n        }\n    };\n\n    @action\n    private handlePaymentRedirect = (redirectData: string): void => {\n        this.setState({\n            isPaymentVerificationRequried: true,\n            paymentVerificationPostData: redirectData\n        });\n        this.props.moduleState.setHasError(false);\n        this.props.moduleState.onReady();\n    };\n\n    private showOverlayModal = (isShow: boolean): void => {\n        this.setState({ isOverlayModal: isShow });\n    };\n\n    private getCardTypeId = async (cardPrefix: string = ''): Promise<string | undefined> => {\n        try {\n            const response = await resolveCardTypesAsync({ callerContext: this.props.context.actionContext }, cardPrefix, CardType.Unknown);\n            if (response && response.length > 0) {\n                return response[0].TypeId;\n            }\n        } catch (error) {\n            this.props.context.telemetry.error('Call to resolveCardTypesAsync failed.', error);\n        }\n        return undefined;\n    };\n\n    private redirectToPaymentVerification = async (): Promise<void> => {\n        const { isPaymentVerificationRequried, paymentVerificationPostData } = this.state;\n        if (!isPaymentVerificationRequried || !paymentVerificationPostData) {\n            return;\n        }\n\n        const checkoutState = this.props.data.checkout.result;\n        if (checkoutState) {\n            await checkoutState.updatePaymentTenderType({ newPaymentTenderType: this.props.config.paymenTenderType });\n            await checkoutState.saveDataInStorage({});\n        }\n\n        const redirectInfo = JSON.parse(paymentVerificationPostData);\n        const { url, data } = redirectInfo;\n        const form = document.createElement('form');\n\n        form.method = 'POST';\n        form.action = url;\n\n        for (const propertyName of Object.keys(data)) {\n            const element = document.createElement('input');\n            element.name = propertyName;\n            element.value = data[propertyName];\n            form.appendChild(element);\n        }\n\n        document.body.appendChild(form);\n        form.submit();\n    };\n\n    private handlePaymentError = (value?: { Message: string }[]): void => {\n        const {\n            resources: { defaultSubmitErrorMessage = 'An error occurred in payment method details. Please try again.' }\n        } = this.props;\n        if (!value || value.length === 0) {\n            // Fallback, if no message could be translated from payement accept page response\n            this.setErrorMessage(defaultSubmitErrorMessage);\n            return;\n        }\n        this.setErrorMessage(value.map((_value: { Message: string }) => _value.Message).join('\\n'));\n    };\n\n    private getReturnUrl = (): string => {\n        let returnUrl = getUrlSync('checkout', this.props.context.actionContext) || '';\n\n        const absoluteUrlRegExp = new RegExp('^(?:[a-z]+:)?//', 'i');\n        const isAbsoluteUrl = absoluteUrlRegExp.test(returnUrl);\n        if (window && !isAbsoluteUrl) {\n            returnUrl = `${window.location.origin}${returnUrl}`;\n        }\n\n        return `${returnUrl}${returnUrl.indexOf('?') === -1 ? '?' : '&'}pv=1`;\n    }\n\n    @action\n    private init = (): void => {\n        this.props.moduleState.init({\n            onEdit: this.onEdit,\n            onCancel: this.onCancel,\n            onSubmit: this.onSubmit,\n            onContainerReady: this.onContainerReady,\n            isCancellable: false,\n            status: this.shouldPaidByCard ? 'updating' : 'disabled'\n        });\n\n        const {\n            data: {\n                checkout\n            },\n            config\n        } = this.props;\n\n        if (this.isPaymentVerificationRedirection) {\n            if (config.paymenTenderType === checkout.result?.paymentTenderType) {\n                const { requestFormData } = this.props.context.request;\n\n                const formData = btoa(JSON.stringify(requestFormData));\n\n                this.setState({\n                    isPaymentProcessing: true\n                });\n\n                this.props.moduleState.onPending();\n                this.handlePaymentResult(formData, true);\n            } else {\n                this.props.moduleState.onSkip();\n            }\n        } else {\n            if (this.asyncResultStatus === 'FAILED') {\n                this.setState({\n                    isFetchingPaymentConnector: false\n                });\n                this.setTerminalError(new Error('Failed in load data'));\n            }\n        }\n    }\n\n    @action\n    private setTerminalError = (terminalError: Error): void => {\n        this.props.telemetry.exception(terminalError);\n        this.props.moduleState.setHasError(true);\n        this.props.moduleState.onUpdating();\n        const {\n            resources: { genericErrorMessage, cardTypeErrorMessage }\n        } = this.props;\n        let errorMessage = genericErrorMessage;\n\n        switch (terminalError.name) {\n            case 'CARDTYPENOTFOUND': {\n                errorMessage = cardTypeErrorMessage;\n                break;\n            }\n            default:\n        }\n\n        this.setState({\n            terminalError,\n            errorMessage: errorMessage\n        });\n    };\n\n    @action\n    private setErrorMessage = (errorMessage: string): void => {\n        this.props.telemetry.error(errorMessage);\n        this.props.moduleState.setHasError(true);\n        this.props.moduleState.onUpdating();\n        this.setState({\n            errorMessage\n        });\n    };\n\n    private updatePaymentAcceptPageData = async (): Promise<void> => {\n        const {\n            context: { actionContext },\n            config: { showBillingAddress, paymenTenderType },\n            context: { request: { apiSettings } },\n            data: { checkout }\n        } = this.props;\n\n        const input = {\n            showBillingAddress: showBillingAddress,\n            paymenTenderType: paymenTenderType,\n            apiSettings: apiSettings\n        };\n\n        this.setState({\n            isFetchingPaymentConnector: true\n        });\n\n        const checkoutState = checkout.result;\n        if (checkoutState) {\n            await checkoutState.updatePaymentTenderType({ newPaymentTenderType: undefined });\n            await checkoutState.updateTenderLine({ newTenderLine: undefined });\n            await checkoutState.updateTokenizedPaymentCard({ newTokenizedPaymentCard: undefined });\n        }\n\n        getCardPaymentAcceptPointAction(new GetCardPaymentAcceptPointInput(input), actionContext)\n            .then(paymentAcceptPoint => {\n                // In case, add form is not hidden. We need to explicty reset value to force re-rendering.\n                actionContext.update(new GetCardPaymentAcceptPointInput(input), { AcceptPageContent: '', AcceptPageUrl: '' });\n\n                // IMPORTANT: Do NOT set isFetchingPaymentConnector = false in getCardPaymentAcceptPointAction success response.\n                // The payment connector will post a message with content height when payment is ready.\n                actionContext.update(new GetCardPaymentAcceptPointInput(input), paymentAcceptPoint);\n                this.setState({ paymentConnectorId: paymentAcceptPoint.PaymentConnectorId });\n            })\n            .catch((error: Error) => {\n                this.setTerminalError(error);\n\n                this.setState({\n                    isFetchingPaymentConnector: false\n                });\n                // IMPORTANT: Clear the AcceptPageUrl and AcceptPageContent. It should not re-use the previous session for the security reason.\n                actionContext.update(new GetCardPaymentAcceptPointInput(input), { AcceptPageContent: '', AcceptPageUrl: '' });\n            });\n    };\n\n    private postMessageToIframe = (message: object) => {\n        const postMessage = get(this.iframeRef, 'current.postMessage');\n        if (postMessage) {\n            this.props.moduleState.onPending();\n            postMessage(message);\n        }\n    }\n\n    private handleAdditionalContext = (additionalContext: string): void => {\n        const message = paymentConnectorExtraContextMessage(additionalContext);\n        this.postMessageToIframe(message);\n    };\n\n    private saveBillingAddress = async (tokenizedPaymentCard?: TokenizedPaymentCard): Promise<void> => {\n        const { showBillingAddress } = this.props.config;\n        const checkoutState = this.props.data.checkout.result;\n        // If we use billing address provided by adyen, billing address returned in TokenizedPaymentCard.\n        if (checkoutState && showBillingAddress && tokenizedPaymentCard && tokenizedPaymentCard.Zip) {\n            const billingAddress: Address = {\n                ThreeLetterISORegionName: tokenizedPaymentCard.Country,\n                Name: tokenizedPaymentCard.House === 'N/A' ? '' : tokenizedPaymentCard.House,\n                Street: tokenizedPaymentCard.Address1,\n                StreetNumber: tokenizedPaymentCard.Address2,\n                City: tokenizedPaymentCard.City,\n                State: tokenizedPaymentCard.State,\n                ZipCode: tokenizedPaymentCard.Zip,\n                Phone: tokenizedPaymentCard.Phone\n            };\n            await checkoutState.updateBillingAddress({ newBillingAddress: billingAddress });\n        }\n    };\n\n    @action\n    private togglePayment = () => {\n        if (this.shouldPaidByCard && this.props.moduleState.isDisabled) {\n            this.props.moduleState.onUpdating();\n        } else if (!this.shouldPaidByCard && !this.props.moduleState.isDisabled) {\n            this.props.moduleState.setHasError(false);\n            this.props.moduleState.onDisable();\n        }\n    };\n\n    @action\n    private onSubmit = (): void => {\n        const { isPrimaryPayment = true } = this.props.config;\n        if (isPrimaryPayment) {\n            this.postMessageToIframe(paymentConnectorSubmitMessage());\n        } else {\n            this.props.moduleState.onSkip();\n        }\n    };\n\n    @action\n    private onCancel = (): void => {\n        if (this.hasSelectedItem) {\n            this.props.moduleState.onReady();\n        } else {\n            this.props.moduleState.onUpdating();\n        }\n    };\n\n    @action\n    private onEdit = (): void => {\n        this.props.moduleState.onUpdating();\n        // IMPORTANT: Call RS for getting a new payment session. It should not re-use the previous session for the security reason.\n        // tslint:disable-next-line:no-floating-promises\n        this.updatePaymentAcceptPageData();\n    };\n\n    @action\n    private onContainerReady = (): void => {\n        // tslint:disable-next-line:no-floating-promises\n        this.redirectToPaymentVerification();\n        this.props.moduleState.setIsSubmitContainer(false);\n    }\n}\n\nexport default withVisibilityObserver(CheckoutPaymentInstrument);"],"sourceRoot":"./src/"},"metadata":{},"sourceType":"module"}