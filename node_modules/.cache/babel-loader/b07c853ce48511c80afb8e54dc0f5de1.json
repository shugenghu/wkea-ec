{"ast":null,"code":"import\"core-js/modules/es.promise.js\";import\"core-js/modules/web.dom-collections.for-each.js\";import{createObservableDataAction}from'@msdyn365-commerce/core';import getCategoriesHierarchy,{CategoriesInput}from'./get-categories-hierarchy';/**\r\n * Action Input Class for get-current-category-hierarchy\r\n */export class CurrentCategoryHierarchyInput extends CategoriesInput{constructor(context,mappedToHierarchy,maxItems,activeCategoryId){super(context,mappedToHierarchy,maxItems);// @ts-ignore: Overriding cache object type\nthis.getCacheObjectType=()=>'CurrentCategoryHierarchy';this.getCacheKey=()=>\"\".concat(this.activeCategoryId,\"-\").concat(this.channelId);this.activeCategoryId=activeCategoryId||0;}}/**\r\n * Creates the input required for the data action\r\n */export const createCategoriesHierarchyInput=inputData=>{const topItems=inputData.config&&inputData.config.topCategories&&parseInt(inputData.config.topCategories,10);const activeCategoryId=inputData.requestContext.urlTokens&&inputData.requestContext.urlTokens.pageType==='Category'&&inputData.requestContext.urlTokens.itemId||inputData.requestContext.query&&inputData.requestContext.query.categoryId||0;return new CurrentCategoryHierarchyInput(inputData.requestContext,true,topItems,+activeCategoryId);};/**\r\n * Get the hierarchy of categories that are currently active as a parent -> child array.\r\n * Return will be as follows: [ParentCategory, Child, SubChild, SubSubChild]\r\n */export async function getCurrentCategoryHierarchyAction(input,ctx){const fullCategoryHierarchy=await getCategoriesHierarchy(new CategoriesInput(ctx.requestContext,true,input.maxItems),ctx);const categoryArray=[];const findCategory=category=>{if(category.RecordId===input.activeCategoryId){categoryArray.push(category);return true;}else if(category.Children&&category.Children.length){category.Children.forEach(childCategory=>{if(findCategory(childCategory)){categoryArray.push(category);}});}else{return false;}};fullCategoryHierarchy.forEach(categoryHierarchy=>{findCategory(categoryHierarchy);});return categoryArray.reverse();}export default createObservableDataAction({id:'@msdyn365-commerce-modules/retail-actions/get-current-category-hierarchy',action:getCurrentCategoryHierarchyAction,input:createCategoriesHierarchyInput});","map":{"version":3,"sources":["../../src/get-current-category-hierarchy.ts"],"names":[],"mappings":"8FACA,OAAS,0BAAT,KAAyI,yBAAzI,CACA,MAAO,CAAA,sBAAP,EAAiC,eAAjC,KAAwD,4BAAxD,CAEA;;AAEG,GACH,MAAM,MAAO,CAAA,6BAAP,QAA6C,CAAA,eAAe,CAG9D,WAAA,CAAY,OAAZ,CAAsC,iBAAtC,CAAkE,QAAlE,CAAqF,gBAArF,CAA8G,CAC1G,MAAM,OAAN,CAAe,iBAAf,CAAkC,QAAlC,EAIJ;AACO,KAAA,kBAAA,CAAqB,IAAM,0BAA3B,CACA,KAAA,WAAA,CAAc,cAAS,KAAK,gBAAd,aAAkC,KAAK,SAAvC,CAAd,CALH,KAAK,gBAAL,CAAwB,gBAAgB,EAAI,CAA5C,CACH,CAN6D,CAalE;;AAEG,GACH,MAAO,MAAM,CAAA,8BAA8B,CAAI,SAAD,EAAkE,CAC5G,KAAM,CAAA,QAAQ,CAAG,SAAS,CAAC,MAAV,EAAoB,SAAS,CAAC,MAAV,CAAiB,aAArC,EAAsD,QAAQ,CAAC,SAAS,CAAC,MAAV,CAAiB,aAAlB,CAAiC,EAAjC,CAA/E,CACA,KAAM,CAAA,gBAAgB,CACjB,SAAS,CAAC,cAAV,CAAyB,SAAzB,EAAsC,SAAS,CAAC,cAAV,CAAyB,SAAzB,CAAmC,QAAnC,GAAgD,UAAtF,EAAoG,SAAS,CAAC,cAAV,CAAyB,SAAzB,CAAmC,MAAxI,EACC,SAAS,CAAC,cAAV,CAAyB,KAAzB,EAAkC,SAAS,CAAC,cAAV,CAAyB,KAAzB,CAA+B,UADlE,EAEA,CAHJ,CAKA,MAAO,IAAI,CAAA,6BAAJ,CAAkC,SAAS,CAAC,cAA5C,CAA4D,IAA5D,CAAkE,QAAlE,CAA4E,CAAC,gBAA7E,CAAP,CACH,CARM,CAUP;;;AAGG,GACH,MAAO,eAAe,CAAA,iCAAf,CAAiD,KAAjD,CAAuF,GAAvF,CAA0G,CAE7G,KAAM,CAAA,qBAAqB,CAAG,KAAM,CAAA,sBAAsB,CACtD,GAAI,CAAA,eAAJ,CACI,GAAG,CAAC,cADR,CAEI,IAFJ,CAGI,KAAK,CAAC,QAHV,CADsD,CAKtD,GALsD,CAA1D,CAMA,KAAM,CAAA,aAAa,CAAwB,EAA3C,CAEA,KAAM,CAAA,YAAY,CAAI,QAAD,EAAgC,CACjD,GAAG,QAAQ,CAAC,QAAT,GAAsB,KAAK,CAAC,gBAA/B,CAAiD,CAC7C,aAAa,CAAC,IAAd,CAAmB,QAAnB,EACA,MAAO,KAAP,CACH,CAHD,IAGO,IAAI,QAAQ,CAAC,QAAT,EAAqB,QAAQ,CAAC,QAAT,CAAkB,MAA3C,CAAmD,CACtD,QAAQ,CAAC,QAAT,CAAkB,OAAlB,CAA2B,aAAD,EAAkB,CACxC,GAAG,YAAY,CAAC,aAAD,CAAf,CAAgC,CAC5B,aAAa,CAAC,IAAd,CAAmB,QAAnB,EACH,CACJ,CAJD,EAKH,CANM,IAMA,CACH,MAAO,MAAP,CACH,CACJ,CAbD,CAeA,qBAAqB,CAAC,OAAtB,CAA+B,iBAAD,EAAyC,CACnE,YAAY,CAAC,iBAAD,CAAZ,CACH,CAFD,EAIA,MAAO,CAAA,aAAa,CAAC,OAAd,EAAP,CACH,CAED,cAAe,CAAA,0BAA0B,CAAC,CACtC,EAAE,CAAE,0EADkC,CAEtC,MAAM,CAAgC,iCAFA,CAGtC,KAAK,CAAE,8BAH+B,CAAD,CAAzC","sourcesContent":["import { CategoryHierarchy } from '@msdyn365-commerce/commerce-entities';\nimport { createObservableDataAction, IAction, IActionContext, IActionInput, IAny, ICreateActionContext, IGeneric, IRequestContext } from '@msdyn365-commerce/core';\nimport getCategoriesHierarchy, { CategoriesInput } from './get-categories-hierarchy';\n\n/**\n * Action Input Class for get-current-category-hierarchy\n */\nexport class CurrentCategoryHierarchyInput extends CategoriesInput {\n    public activeCategoryId: number;\n\n    constructor(context: IRequestContext, mappedToHierarchy: boolean, maxItems?: number, activeCategoryId?: number) {\n        super(context, mappedToHierarchy, maxItems);\n        this.activeCategoryId = activeCategoryId || 0;\n    }\n\n    // @ts-ignore: Overriding cache object type\n    public getCacheObjectType = () => 'CurrentCategoryHierarchy';\n    public getCacheKey = () => `${this.activeCategoryId}-${this.channelId}`;\n}\n\n/**\n * Creates the input required for the data action\n */\nexport const createCategoriesHierarchyInput = (inputData: ICreateActionContext<IGeneric<IAny>>): IActionInput => {\n    const topItems = inputData.config && inputData.config.topCategories && parseInt(inputData.config.topCategories, 10);\n    const activeCategoryId =\n        (inputData.requestContext.urlTokens && inputData.requestContext.urlTokens.pageType === 'Category' && inputData.requestContext.urlTokens.itemId) ||\n        (inputData.requestContext.query && inputData.requestContext.query.categoryId) ||\n        0;\n\n    return new CurrentCategoryHierarchyInput(inputData.requestContext, true, topItems, +activeCategoryId);\n};\n\n/**\n * Get the hierarchy of categories that are currently active as a parent -> child array.\n * Return will be as follows: [ParentCategory, Child, SubChild, SubSubChild]\n */\nexport async function getCurrentCategoryHierarchyAction(input: CurrentCategoryHierarchyInput, ctx: IActionContext): Promise<CategoryHierarchy[]> {\n\n    const fullCategoryHierarchy = await getCategoriesHierarchy(\n        new CategoriesInput(\n            ctx.requestContext,\n            true,\n            input.maxItems),\n        ctx);\n    const categoryArray: CategoryHierarchy[] = [];\n\n    const findCategory = (category: CategoryHierarchy) => {\n        if(category.RecordId === input.activeCategoryId) {\n            categoryArray.push(category);\n            return true;\n        } else if (category.Children && category.Children.length) {\n            category.Children.forEach((childCategory) => {\n                if(findCategory(childCategory)) {\n                    categoryArray.push(category);\n                }\n            });\n        } else {\n            return false;\n        }\n    };\n\n    fullCategoryHierarchy.forEach((categoryHierarchy: CategoryHierarchy) => {\n        findCategory(categoryHierarchy);\n    });\n\n    return categoryArray.reverse();\n}\n\nexport default createObservableDataAction({\n    id: '@msdyn365-commerce-modules/retail-actions/get-current-category-hierarchy',\n    action: <IAction<CategoryHierarchy[]>>getCurrentCategoryHierarchyAction,\n    input: createCategoriesHierarchyInput\n});\n"],"sourceRoot":""},"metadata":{},"sourceType":"module"}