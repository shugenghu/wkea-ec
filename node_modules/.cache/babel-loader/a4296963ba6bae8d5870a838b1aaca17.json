{"ast":null,"code":"import\"core-js/modules/es.promise.js\";import{buildCacheKey}from'@msdyn365-commerce-modules/retail-actions';import{createObservableDataAction}from'@msdyn365-commerce/core';import{getSearchConfigurationAsync}from'@msdyn365-commerce/retail-proxy/dist/DataActions/StoreOperationsDataActions.g';export const sortOptions={sortByOptionRelevanceDesc:'Ranking-Desc',sortByOptionRatingAsc:'AverageRating-Asc',sortByOptionRatingDesc:'AverageRating-Desc',sortByOptionNameAsc:'Name-Asc',sortByOptionNameDesc:'Name-Desc',sortByOptionPriceAsc:'Price-Asc',sortByOptionPriceDesc:'Price-Desc'};export class MappedSearchInput{constructor(apiSettings){this.getCacheKey=()=>buildCacheKey('MappedSearchInput',this.apiSettings);this.getCacheObjectType=()=>'MappedSearchInput';this.dataCacheType=()=>'request';this.apiSettings=apiSettings;}}export async function getMappedSearchConfiguration(input,ctx){return getSearchConfigurationAsync({callerContext:ctx}).then(searchConfiguration=>{return(searchConfiguration.ProductSortColumns||[]).map(sortColumn=>{let key='';if(sortColumn.ColumnName){switch(sortColumn.ColumnName.toUpperCase()){case'NAME':key=sortColumn.IsDescending?sortOptions.sortByOptionNameDesc:sortOptions.sortByOptionNameAsc;break;case'PRICE':key=sortColumn.IsDescending?sortOptions.sortByOptionPriceDesc:sortOptions.sortByOptionPriceAsc;break;case'AVERAGERATING':key=sortColumn.IsDescending?sortOptions.sortByOptionRatingDesc:sortOptions.sortByOptionRatingAsc;break;case'RANKING':key=sortOptions.sortByOptionRelevanceDesc;break;default:}}else{ctx.telemetry.warning('[get-mapped-search-configuration] unknown search option');}if(key){return{key,sortColumn};}else{return undefined;}}).filter(Boolean);});}export const createInput=inputData=>{return new MappedSearchInput(inputData.requestContext.apiSettings);};export default createObservableDataAction({id:'@msdyn365-commerce-modules/search-result-container/get-mapped-search-configuration',action:getMappedSearchConfiguration,input:createInput});","map":{"version":3,"sources":["modules/search-result-container/actions/get-mapped-search-configuration.ts"],"names":[],"mappings":"sCAAA,OAAS,aAAT,KAA8B,2CAA9B,CACA,OAAoB,0BAApB,KAAyJ,yBAAzJ,CAEA,OAAS,2BAAT,KAA4C,+EAA5C,CAcA,MAAO,MAAM,CAAA,WAAW,CAAG,CACvB,yBAAyB,CAAE,cADJ,CAEvB,qBAAqB,CAAE,mBAFA,CAGvB,sBAAsB,CAAE,oBAHD,CAIvB,mBAAmB,CAAE,UAJE,CAKvB,oBAAoB,CAAE,WALC,CAMvB,oBAAoB,CAAE,WANC,CAOvB,qBAAqB,CAAE,YAPA,CAApB,CAaP,MAAM,MAAO,CAAA,iBAAiB,CAG1B,WAAA,CAAY,WAAZ,CAA6C,CAItC,KAAA,WAAA,CAAc,IAAM,aAAa,CAAC,mBAAD,CAAsB,KAAK,WAA3B,CAAjC,CACA,KAAA,kBAAA,CAAqB,IAAM,mBAA3B,CACA,KAAA,aAAA,CAAgB,IAAiB,SAAjC,CALH,KAAK,WAAL,CAAmB,WAAnB,CACH,CALyB,CAe9B,MAAO,eAAe,CAAA,4BAAf,CAA4C,KAA5C,CAAsE,GAAtE,CAAyF,CAC5F,MAAO,CAAA,2BAA2B,CAAC,CAAE,aAAa,CAAE,GAAjB,CAAD,CAA3B,CAAoD,IAApD,CAA0D,mBAAD,EAA6C,CACzG,MAAqC,CAAC,mBAAmB,CAAC,kBAApB,EAA0C,EAA3C,EAA+C,GAA/C,CAA2F,UAAD,EAA2B,CACtJ,GAAI,CAAA,GAAG,CAAG,EAAV,CACA,GAAI,UAAU,CAAC,UAAf,CAA2B,CACvB,OAAO,UAAU,CAAC,UAAX,CAAsB,WAAtB,EAAP,EACI,IAAK,MAAL,CACI,GAAG,CAAG,UAAU,CAAC,YAAX,CAA0B,WAAW,CAAC,oBAAtC,CAA6D,WAAW,CAAC,mBAA/E,CACA,MACJ,IAAK,OAAL,CACI,GAAG,CAAG,UAAU,CAAC,YAAX,CAA0B,WAAW,CAAC,qBAAtC,CAA8D,WAAW,CAAC,oBAAhF,CACA,MACJ,IAAK,eAAL,CACI,GAAG,CAAG,UAAU,CAAC,YAAX,CAA0B,WAAW,CAAC,sBAAtC,CAA+D,WAAW,CAAC,qBAAjF,CACA,MACJ,IAAK,SAAL,CACI,GAAG,CAAG,WAAW,CAAC,yBAAlB,CACA,MACJ,QAbJ,CAeH,CAhBD,IAgBO,CACH,GAAG,CAAC,SAAJ,CAAc,OAAd,CAAsB,yDAAtB,EACH,CACD,GAAI,GAAJ,CAAS,CACL,MAAO,CACH,GADG,CAEH,UAFG,CAAP,CAIH,CALD,IAKO,CACH,MAAO,CAAA,SAAP,CACH,CACJ,CA7BoC,EA6BlC,MA7BkC,CA6B3B,OA7B2B,CAArC,CA8BH,CA/BM,CAAP,CAgCH,CAED,MAAO,MAAM,CAAA,WAAW,CAAI,SAAD,EAAkE,CACzF,MAAO,IAAI,CAAA,iBAAJ,CAAsB,SAAS,CAAC,cAAV,CAAyB,WAA/C,CAAP,CACH,CAFM,CAIP,cAAe,CAAA,0BAA0B,CAAC,CACtC,EAAE,CAAE,oFADkC,CAEtC,MAAM,CAAwC,4BAFR,CAGtC,KAAK,CAAE,WAH+B,CAAD,CAAzC","sourcesContent":["import { buildCacheKey } from '@msdyn365-commerce-modules/retail-actions';\nimport { CacheType, createObservableDataAction, IAction, IActionContext, IActionInput, IAny, ICommerceApiSettings, ICreateActionContext, IGeneric } from '@msdyn365-commerce/core';\nimport { SortColumn } from '@msdyn365-commerce/retail-proxy';\nimport { getSearchConfigurationAsync } from '@msdyn365-commerce/retail-proxy/dist/DataActions/StoreOperationsDataActions.g';\n\n// TODO: import from commerce entities when available\n// tslint:disable-next-line:interface-name\ninterface SearchConfiguration {\n    ProductSortColumns?: SortColumn[];\n}\n\n// tslint:disable-next-line:interface-name\nexport interface MappedSearchConfiguration {\n    key: string;\n    sortColumn: SortColumn;\n}\n\nexport const sortOptions = {\n    sortByOptionRelevanceDesc: 'Ranking-Desc',\n    sortByOptionRatingAsc: 'AverageRating-Asc',\n    sortByOptionRatingDesc: 'AverageRating-Desc',\n    sortByOptionNameAsc: 'Name-Asc',\n    sortByOptionNameDesc: 'Name-Desc',\n    sortByOptionPriceAsc: 'Price-Asc',\n    sortByOptionPriceDesc: 'Price-Desc'\n};\n\n/**\n * ActionInput class for the get-mapped-search-configuration Data Action\n */\nexport class MappedSearchInput implements IActionInput {\n    private apiSettings: ICommerceApiSettings;\n\n    constructor(apiSettings: ICommerceApiSettings) {\n        this.apiSettings = apiSettings;\n    }\n\n    public getCacheKey = () => buildCacheKey('MappedSearchInput', this.apiSettings);\n    public getCacheObjectType = () => 'MappedSearchInput';\n    public dataCacheType = (): CacheType => 'request';\n}\n\n/**\n * Get a mapped search configuration that is easy to use for sorting\n */\nexport async function getMappedSearchConfiguration(input: MappedSearchInput, ctx: IActionContext): Promise<MappedSearchConfiguration[]> {\n    return getSearchConfigurationAsync({ callerContext: ctx }).then((searchConfiguration: SearchConfiguration) => {\n        return (<MappedSearchConfiguration[]>(searchConfiguration.ProductSortColumns || []).map<MappedSearchConfiguration | undefined>((sortColumn: SortColumn) => {\n            let key = '';\n            if (sortColumn.ColumnName) {\n                switch(sortColumn.ColumnName.toUpperCase()) {\n                    case 'NAME':\n                        key = sortColumn.IsDescending ? sortOptions.sortByOptionNameDesc : sortOptions.sortByOptionNameAsc;\n                        break;\n                    case 'PRICE':\n                        key = sortColumn.IsDescending ? sortOptions.sortByOptionPriceDesc : sortOptions.sortByOptionPriceAsc;\n                        break;\n                    case 'AVERAGERATING':\n                        key = sortColumn.IsDescending ? sortOptions.sortByOptionRatingDesc : sortOptions.sortByOptionRatingAsc;\n                        break;\n                    case 'RANKING':\n                        key = sortOptions.sortByOptionRelevanceDesc;\n                        break;\n                    default:\n                }\n            } else {\n                ctx.telemetry.warning('[get-mapped-search-configuration] unknown search option');\n            }\n            if (key) {\n                return {\n                    key,\n                    sortColumn\n                };\n            } else {\n                return undefined;\n            }\n        }).filter(Boolean));\n    });\n}\n\nexport const createInput = (inputData: ICreateActionContext<IGeneric<IAny>>): IActionInput => {\n    return new MappedSearchInput(inputData.requestContext.apiSettings);\n};\n\nexport default createObservableDataAction({\n    id: '@msdyn365-commerce-modules/search-result-container/get-mapped-search-configuration',\n    action: <IAction<MappedSearchConfiguration[]>>getMappedSearchConfiguration,\n    input: createInput\n});"],"sourceRoot":"./src/"},"metadata":{},"sourceType":"module"}