{"ast":null,"code":"import*as React from'react';export class Dropdown extends React.PureComponent{constructor(props,state){super(props);this.selectMenu=/*#__PURE__*/React.createRef();this._onChanged=event=>{this.setState({selectedIndex:event.target.value});if(this.props.onChange){this.props.onChange({dropdownId:this.props.dropdownId,selectId:event.target.value,selectedValue:event.target.innerText});}};this.state={selectedIndex:''};}componentDidMount(){if(this.selectMenu.current){this.selectMenu.current.selectedIndex=0;}}render(){const{dropdownId,dropdownList,dropdownName}=this.props;return/*#__PURE__*/React.createElement(\"select\",{id:\"msc-dropdown__entry-\".concat(dropdownId),ref:this.selectMenu,\"aria-label\":dropdownName,className:'msc-dropdown__select',onChange:this._onChanged},dropdownList.map(item=>item&&/*#__PURE__*/React.createElement(\"option\",{value:item.id,key:item.id,selected:+this.state.selectedIndex===+item.id,\"aria-selected\":+this.state.selectedIndex===+item.id},item.value)));}}","map":{"version":3,"sources":["modules/order-template/components/add-line/dropdown.tsx"],"names":[],"mappings":"AAIA,MAAO,GAAK,CAAA,KAAZ,KAAuB,OAAvB,CAkCA,MAAM,MAAO,CAAA,QAAP,QAAwB,CAAA,KAAK,CAAC,aAA6C,CAG7E,WAAA,CAAY,KAAZ,CAAmC,KAAnC,CAAwD,CACpD,MAAM,KAAN,EAHI,KAAA,UAAA,cAAiD,KAAK,CAAC,SAAN,EAAjD,CAwCA,KAAA,UAAA,CAAc,KAAD,EAAsD,CACvE,KAAK,QAAL,CAAc,CAAC,aAAa,CAAE,KAAK,CAAC,MAAN,CAAa,KAA7B,CAAd,EAEA,GAAI,KAAK,KAAL,CAAW,QAAf,CAAyB,CACrB,KAAK,KAAL,CAAW,QAAX,CAAoB,CAChB,UAAU,CAAE,KAAK,KAAL,CAAW,UADP,CAEhB,QAAQ,CAAE,KAAK,CAAC,MAAN,CAAa,KAFP,CAGhB,aAAa,CAAE,KAAK,CAAC,MAAN,CAAa,SAHZ,CAApB,EAKH,CACJ,CAVO,CApCJ,KAAK,KAAL,CAAa,CACT,aAAa,CAAE,EADN,CAAb,CAGH,CAEM,iBAAiB,EAAA,CACpB,GAAI,KAAK,UAAL,CAAgB,OAApB,CAA6B,CACzB,KAAK,UAAL,CAAgB,OAAhB,CAAwB,aAAxB,CAAwC,CAAxC,CACH,CACJ,CAEM,MAAM,EAAA,CACT,KAAM,CAAC,UAAD,CAAa,YAAb,CAA2B,YAA3B,EAA4C,KAAK,KAAvD,CAEA,mBACI,KAAA,CAAA,aAAA,CAAA,QAAA,CAAA,CACI,EAAE,+BAAyB,UAAzB,CADN,CAEI,GAAG,CAAE,KAAK,UAFd,CAEwB,aACR,YAHhB,CAII,SAAS,CAAC,sBAJd,CAKI,QAAQ,CAAE,KAAK,UALnB,CAAA,CAOK,YAAY,CAAC,GAAb,CAAkB,IAAD,EAA+B,IAAI,eACjD,KAAA,CAAA,aAAA,CAAA,QAAA,CAAA,CACI,KAAK,CAAE,IAAI,CAAC,EADhB,CAEI,GAAG,CAAE,IAAI,CAAC,EAFd,CAGI,QAAQ,CAAE,CAAC,KAAK,KAAL,CAAW,aAAZ,GAA8B,CAAC,IAAI,CAAC,EAHlD,CAGoD,gBACjC,CAAC,KAAK,KAAL,CAAW,aAAZ,GAA8B,CAAC,IAAI,CAAC,EAJvD,CAAA,CAMK,IAAI,CAAC,KANV,CADH,CAPL,CADJ,CAoBH,CAvC4E","sourcesContent":["/**\n * Copyright (c) 2018 Microsoft Corporation\n */\nimport { ITelemetryContent } from '@msdyn365-commerce-modules/utilities';\nimport * as React from 'react';\n\ntype IDropdownState = {\n    /**\n     * @friendlyName selectedIndex\n     * @description selected index\n     */\n    selectedIndex: string;\n};\n\nexport interface IDropdownProps {\n    dropdownId: number;\n    dropdownName: string;\n    dropdownList: IDropdownItemProps[];\n    telemetryContent?: ITelemetryContent;\n    onChange?(selection: IDropdownOnSelection): void;\n}\n\nexport interface IDropdownItemProps {\n    value: string;\n    id: number;\n}\n\nexport interface IDropdownOnSelection {\n    dropdownId: number;\n    selectId: string;\n    selectedValue: string;\n}\n\n/**\n *\n * DropDown component\n * @extends {React.PureComponent<IDropdownProps, IDropdownState>}\n */\nexport class Dropdown extends React.PureComponent<IDropdownProps, IDropdownState> {\n    private selectMenu: React.RefObject<HTMLSelectElement> = React.createRef<HTMLSelectElement>();\n\n    constructor(props: IDropdownProps, state: IDropdownState) {\n        super(props);\n        this.state = {\n            selectedIndex: ''\n        };\n    }\n\n    public componentDidMount(): void {\n        if (this.selectMenu.current) {\n            this.selectMenu.current.selectedIndex = 0;\n        }\n    }\n\n    public render(): JSX.Element {\n        const {dropdownId, dropdownList, dropdownName } = this.props;\n\n        return (\n            <select\n                id={`msc-dropdown__entry-${dropdownId}`}\n                ref={this.selectMenu}\n                aria-label={dropdownName}\n                className='msc-dropdown__select'\n                onChange={this._onChanged}\n            >\n                {dropdownList.map((item: IDropdownItemProps) => (item &&\n                    <option\n                        value={item.id}\n                        key={item.id}\n                        selected={+this.state.selectedIndex === +item.id}\n                        aria-selected={+this.state.selectedIndex === +item.id}\n                    >\n                        {item.value}\n                    </option>\n                ))}\n            </select>\n        );\n    }\n\n    private _onChanged = (event: React.ChangeEvent<HTMLSelectElement>): void => {\n        this.setState({selectedIndex: event.target.value});\n\n        if (this.props.onChange) {\n            this.props.onChange({\n                dropdownId: this.props.dropdownId,\n                selectId: event.target.value,\n                selectedValue: event.target.innerText\n            });\n        }\n    };\n}"],"sourceRoot":"./src/"},"metadata":{},"sourceType":"module"}