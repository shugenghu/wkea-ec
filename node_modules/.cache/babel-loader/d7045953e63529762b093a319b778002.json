{"ast":null,"code":"export var getRnrPartnerId=function getRnrPartnerId(args){return args.requestContext.apiSettings.rnr.id||'';};export var getRnrEndpointId=function getRnrEndpointId(args){return args.requestContext.apiSettings.rnr.url||'';};export var getRnrAuthEndpointId=function getRnrAuthEndpointId(args){// @ts-ignore\nvar endpoint=args.requestContext.apiSettings.rnr.proxyUrl?args.requestContext.apiSettings.rnr.proxyUrl:args.requestContext.apiSettings.rnr.url||'';if(endpoint.length>0&&endpoint.charAt(endpoint.length-1)==='/'){return endpoint.substring(0,endpoint.length-1);}return endpoint;};","map":{"version":3,"sources":["../../../src/utilities/getRnrKeys.ts"],"names":[],"mappings":"AAEA,MAAO,IAAM,CAAA,eAAe,CAAG,QAAlB,CAAA,eAAkB,CAAC,IAAD,CAAwE,CACnG,MAAQ,CAAA,IAAI,CAAC,cAAL,CAAoB,WAApB,CAAgC,GAAhC,CAAoC,EAApC,EAA0C,EAAlD,CACH,CAFM,CAIP,MAAO,IAAM,CAAA,gBAAgB,CAAG,QAAnB,CAAA,gBAAmB,CAAC,IAAD,CAAwE,CACpG,MAAO,CAAA,IAAI,CAAC,cAAL,CAAoB,WAApB,CAAgC,GAAhC,CAAoC,GAApC,EAA2C,EAAlD,CACH,CAFM,CAIP,MAAO,IAAM,CAAA,oBAAoB,CAAG,QAAvB,CAAA,oBAAuB,CAAC,IAAD,CAAwE,CACxG;AACA,GAAM,CAAA,QAAQ,CAAY,IAAI,CAAC,cAAL,CAAoB,WAApB,CAAgC,GAAhC,CAAoC,QAApC,CAA+C,IAAI,CAAC,cAAL,CAAoB,WAApB,CAAgC,GAAhC,CAAoC,QAAnF,CAA8F,IAAI,CAAC,cAAL,CAAoB,WAApB,CAAgC,GAAhC,CAAoC,GAApC,EAA2C,EAAnK,CACA,GAAI,QAAQ,CAAC,MAAT,CAAkB,CAAlB,EAAuB,QAAQ,CAAC,MAAT,CAAgB,QAAQ,CAAC,MAAT,CAAgB,CAAhC,IAAuC,GAAlE,CAAuE,CACnE,MAAO,CAAA,QAAQ,CAAC,SAAT,CAAmB,CAAnB,CAAsB,QAAQ,CAAC,MAAT,CAAgB,CAAtC,CAAP,CACH,CACD,MAAO,CAAA,QAAP,CACH,CAPM","sourcesContent":["import { IActionContext, IAny, ICreateActionContext, IGeneric } from '@msdyn365-commerce/core';\n\nexport const getRnrPartnerId = (args: ICreateActionContext<IGeneric<IAny>> | IActionContext): string => {\n    return  args.requestContext.apiSettings.rnr.id || '';\n};\n\nexport const getRnrEndpointId = (args: ICreateActionContext<IGeneric<IAny>> | IActionContext): string => {\n    return args.requestContext.apiSettings.rnr.url || '';\n};\n\nexport const getRnrAuthEndpointId = (args: ICreateActionContext<IGeneric<IAny>> | IActionContext): string => {\n    // @ts-ignore\n    const endpoint = <string>(args.requestContext.apiSettings.rnr.proxyUrl ? args.requestContext.apiSettings.rnr.proxyUrl : args.requestContext.apiSettings.rnr.url || '');\n    if (endpoint.length > 0 && endpoint.charAt(endpoint.length-1) === '/') {\n        return endpoint.substring(0, endpoint.length-1);\n    }\n    return endpoint;\n};"],"sourceRoot":""},"metadata":{},"sourceType":"module"}