{"ast":null,"code":"import{DataServiceQuery}from'../DataServiceQuery';import{SuspendedCartClass}from'../Entities/CommerceModels.g';import{executeAction}from'../retail-action';function suspendedCartsQuery(id){var key=id?{Id:id}:null;return new DataServiceQuery(\"SuspendedCarts\",\"SuspendedCart\",SuspendedCartClass,key);}export function createCreateInput(entity){return suspendedCartsQuery().create(entity);}export function createSuspendedCartAsync(context,entity){var request=createCreateInput(entity);return executeAction(request,context);}export function createUpdateInput(entity){return suspendedCartsQuery(entity.Id).update(entity);}export function updateAsync(context,entity){var request=createUpdateInput(entity);return executeAction(request,context);}export function createDeleteAsync(entity){return suspendedCartsQuery(entity.Id)[\"delete\"]();}export function deleteAsync(context,entity){var request=createDeleteAsync(entity);return executeAction(request,context);}export function createReadAsync(id){return suspendedCartsQuery(id).read();}export function readAsync(context,id){var request=createReadAsync(id);return executeAction(request,context);}export function createReadAllAsync(queryResultSettings){return suspendedCartsQuery().resultSettings(queryResultSettings).read();}export function readAllAsync(context){var request=createReadAllAsync(context.queryResultSettings);return executeAction(request,context);}export function createGetAllSuspendedCartsInput(queryResultSettings){var query=suspendedCartsQuery().resultSettings(queryResultSettings);return query.createDataServiceRequestForOperation('GetAllSuspendedCarts',true,SuspendedCartClass,'true',{bypassCache:'none',returnEntity:'SuspendedCart'},{});}export function getAllSuspendedCartsAsync(context){var request=createGetAllSuspendedCartsInput(context.queryResultSettings);return executeAction(request,context);}","map":{"version":3,"sources":["../../src/DataActions/SuspendedCartsDataActions.g.ts"],"names":[],"mappings":"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","sourcesContent":["    // <auto-generated />\n    import { AsyncResult } from '../async-result';\n    import { DataServiceQuery } from '../DataServiceQuery';\n    import { SuspendedCart } from '../Entities/CommerceTypes.g';\n    import { SuspendedCartClass } from '../Entities/CommerceModels.g';\n    import { IContext, IDataServiceRequest, IQueryResultSettings, NullResult } from '../Interfaces';\n    import { executeAction } from '../retail-action';\n    \n    \n    function suspendedCartsQuery(id?: string): DataServiceQuery {\n      var key = (id) ? { Id: id } : null;\n      return new DataServiceQuery(\"SuspendedCarts\", \"SuspendedCart\", SuspendedCartClass, key);\n    }\n    \n    export function createCreateInput(entity: SuspendedCart): IDataServiceRequest {\n        return suspendedCartsQuery().create(entity);\n    }\n    export function createSuspendedCartAsync(context: IContext, entity: SuspendedCart): AsyncResult<SuspendedCart> {\n        const request = createCreateInput(entity, );\n        return executeAction<SuspendedCart>(request, context);\n    }\n    export function createUpdateInput(entity: SuspendedCart): IDataServiceRequest {\n        return suspendedCartsQuery(entity.Id).update(entity);\n    }\n    export function updateAsync(context: IContext, entity: SuspendedCart): AsyncResult<SuspendedCart> {\n        const request = createUpdateInput(entity, );\n        return executeAction<SuspendedCart>(request, context);\n    }\n    export function createDeleteAsync(entity: SuspendedCart): IDataServiceRequest {\n        return suspendedCartsQuery(entity.Id).delete();\n    }\n    export function deleteAsync(context: IContext, entity: SuspendedCart): AsyncResult<NullResult> {\n        const request = createDeleteAsync(entity, );\n        return executeAction<NullResult>(request, context);\n    }\n    export function createReadAsync(id: string): IDataServiceRequest {\n        return suspendedCartsQuery(id).read();\n    }\n    export function readAsync(context: IContext, id: string): AsyncResult<SuspendedCart> {\n        const request = createReadAsync(id, );\n        return executeAction<SuspendedCart>(request, context);\n    }\n    export function createReadAllAsync(queryResultSettings: IQueryResultSettings): IDataServiceRequest {\n        return suspendedCartsQuery().resultSettings(queryResultSettings).read();\n    }\n    export function readAllAsync(context: IContext): AsyncResult<SuspendedCart[]> {\n        const request = createReadAllAsync(context.queryResultSettings, );\n        return executeAction<SuspendedCart[]>(request, context);\n    }\n    \n    export function createGetAllSuspendedCartsInput(queryResultSettings: IQueryResultSettings): IDataServiceRequest {      \n        const query = suspendedCartsQuery().resultSettings(queryResultSettings);\n        return query.createDataServiceRequestForOperation('GetAllSuspendedCarts', true, SuspendedCartClass, 'true', { bypassCache: 'none', returnEntity: 'SuspendedCart'}, { });\n    }    \n    \n    export function getAllSuspendedCartsAsync(context: IContext):AsyncResult<SuspendedCart[]> {\n        const request = createGetAllSuspendedCartsInput(context.queryResultSettings, );\n        return executeAction<SuspendedCart[]>(request, context);\n    }          \n          "],"sourceRoot":""},"metadata":{},"sourceType":"module"}