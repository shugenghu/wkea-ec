{"ast":null,"code":"import\"core-js/modules/es.object.assign.js\";import _defineProperty from\"@babel/runtime/helpers/esm/defineProperty\";function ownKeys(object,enumerableOnly){var keys=Object.keys(object);if(Object.getOwnPropertySymbols){var symbols=Object.getOwnPropertySymbols(object);if(enumerableOnly)symbols=symbols.filter(function(sym){return Object.getOwnPropertyDescriptor(object,sym).enumerable;});keys.push.apply(keys,symbols);}return keys;}function _objectSpread(target){for(var i=1;i<arguments.length;i++){var source=arguments[i]!=null?arguments[i]:{};if(i%2){ownKeys(Object(source),true).forEach(function(key){_defineProperty(target,key,source[key]);});}else if(Object.getOwnPropertyDescriptors){Object.defineProperties(target,Object.getOwnPropertyDescriptors(source));}else{ownKeys(Object(source)).forEach(function(key){Object.defineProperty(target,key,Object.getOwnPropertyDescriptor(source,key));});}}return target;}import{__decorate}from\"tslib\";import classnames from'classnames';import{observable}from'mobx';import{observer}from'mobx-react';import*as React from'react';import{getTelemetryObject,Modal,ModalBody}from'@msdyn365-commerce-modules/utilities';import*as Msdyn365 from'@msdyn365-commerce/core';import SignInButtonComponent from'./components/sign-in-button';import SignInDescriptionComponent from'./components/sign-in-description';import SignInErrorComponent from'./components/sign-in-error';import SignInInputComponent from'./components/sign-in-input';import SignInLabelComponent from'./components/sign-in-label';import SignInLinkComponent from'./components/sign-in-link';import SignInLoadingIconComponent from'./components/sign-in-loading-icon';import SignInLoadingMessageComponent from'./components/sign-in-loading-message';import SignInTextComponent from'./components/sign-in-text';let SignIn=class SignIn extends React.Component{constructor(props){super(props);this.moduleClassName='ms-sign-in';this.handleParagraphChange=event=>this.props.config.signInDisclaimer=event.target.value;this.handleSignInHeadingChange=event=>this.props.config.signInHeading.text=event.target.value;this.handleSignUpHeadingChange=event=>this.props.config.signUpHeading.text=event.target.value;this._onInit=()=>{this._prePopulateData();this._updateErrorMessage();this.initializationTimer=setInterval(()=>{this._isInitializationSuccessful();},100);setTimeout(()=>{clearInterval(this.initializationTimer);},10000);};this._isInitializationSuccessful=()=>{if(window&&window['$diags']&&window['$diags']['initializationSuccessful']){clearInterval(this.initializationTimer);this.isInitialized=true;}};this._prePopulateData=()=>{if(window&&window['CONTENT']&&window['CONTENT']['email_pattern']){this.emailRegex=window['CONTENT']['email_pattern'];}};this._updateErrorMessage=()=>{const resources=this.props.resources||{};if(window&&window['CONTENT']){const errorMessages={requiredField_email:resources.requriedEmailError,requiredField_password:resources.requriedPasswordError,invalid_email:resources.invalidEmailError,invalid_password:resources.invalidPasswordError,unknown_error:resources.unknownError};Object.assign(window['CONTENT'],errorMessages);}};this.emailRegex='^[a-zA-Z0-9.!#$%&\\^_`{}~-]+@[a-zA-Z0-9-]+(?:\\.[a-zA-Z0-9-]+)*$';this.isInitialized=false;this.telemetryContent=getTelemetryObject(this.props.context.request.telemetryPageName,this.props.friendlyName,this.props.telemetry);}componentDidMount(){this._onInit();}componentDidUpdate(){if(this.isInitialized&&window&&window['$element']&&window['$element']['initialize']){window['$element']['initialize']();}}render(){const config=this.props.config||{};const resources=this.props.resources||{};const viewProps=_objectSpread(_objectSpread({},this.props),{},{viewState:{isShowLoading:!this.isInitialized},signIn:{moduleProps:this.props,className:classnames(this.moduleClassName,config.className)},loading:{modal:{tag:Modal,isOpen:true},modalBody:{tag:ModalBody},icon:/*#__PURE__*/React.createElement(SignInLoadingIconComponent,{className:this.moduleClassName}),message:/*#__PURE__*/React.createElement(SignInLoadingMessageComponent,{className:this.moduleClassName,message:resources.loadingMessage})},defaultAADConainer:{id:'api',style:{display:'none'}},aadConainer:{id:this.isInitialized?'api':null,className:\"\".concat(this.moduleClassName,\"__container\")},signInSection:{className:\"\".concat(this.moduleClassName,\"__sign-in-section\")},signInSectionHeading:/*#__PURE__*/React.createElement(Msdyn365.Text,Object.assign({className:\"\".concat(this.moduleClassName,\"__sign-in-heading\")},config.signInHeading,{editProps:{onEdit:this.handleSignInHeadingChange,requestContext:this.props.context.request}})),signInLocalAccount:{localAccount:{className:\"\".concat(this.moduleClassName,\"__account-items localAccount\")},items:[this._renderInput('logonIdentifier','email',resources.emailAddressLabelText,resources.emailAddressAriaLabel,this.emailRegex),this._renderInput('password','password',resources.passwordLabelText,resources.passwordAriaLabel)],forgetPassword:/*#__PURE__*/React.createElement(SignInLinkComponent,{id:'forgotPassword',className:\"\".concat(this.moduleClassName,\"__forget-password\"),href:'#',ariaLabel:resources.forgotPasswordButtonAriaLabel,text:resources.forgotPasswordButtonText,telemetryContent:this.telemetryContent}),disclaimer:config.signInDisclaimer&&/*#__PURE__*/React.createElement(Msdyn365.RichTextComponent,{className:\"\".concat(this.moduleClassName,\"__sign-in-disclaimer\"),text:config.signInDisclaimer,editProps:{onEdit:this.handleParagraphChange,requestContext:this.props.context.request}}),error:/*#__PURE__*/React.createElement(SignInErrorComponent,{className:this.moduleClassName}),signInButton:/*#__PURE__*/React.createElement(SignInButtonComponent,{id:'next',className:\"\".concat(this.moduleClassName,\"__sign-in-button\"),ariaLabel:resources.loginButtonAriaLabel,text:resources.loginButtonText,telemetryContent:this.telemetryContent})},signInSocialAccount:{socialAccounts:{className:\"\".concat(this.moduleClassName,\"__social-accounts\")},items:[this._renderSocialAccount('FacebookExchange',resources.facebookButtonText,resources.facebookButtonAriaLabel,config.facebookIcon),this._renderSocialAccount('MicrosoftAccountExchange',resources.microsoftButtonText,resources.microsoftButtonAriaLabel,config.microsoftIcon)]},signUpSection:{className:\"\".concat(this.moduleClassName,\"__sign-up-section\")},signUpSectionHeading:/*#__PURE__*/React.createElement(Msdyn365.Text,Object.assign({className:\"\".concat(this.moduleClassName,\"__sign-up-heading\")},config.signUpHeading,{editProps:{onEdit:this.handleSignUpHeadingChange,requestContext:this.props.context.request}})),signUpDescription:/*#__PURE__*/React.createElement(SignInDescriptionComponent,{className:\"\".concat(this.moduleClassName,\"__sign-up-description\"),description:resources.signUpDescriptionText}),signUpLink:/*#__PURE__*/React.createElement(SignInLinkComponent,{id:'createAccount',href:'#',className:\"\".concat(this.moduleClassName,\"__sign-up-link msc-btn\"),ariaLabel:resources.signUpButtonAriaLabel,text:resources.signUpButtonText,telemetryContent:this.telemetryContent})});return this.props.renderView(viewProps);}_renderInput(id,type,labelText,ariaLabel,pattern){const className=\"\".concat(this.moduleClassName,\"__account-item\");return{wrapper:{className:classnames(className,\"\".concat(className,\"-\").concat(id),'entry-item','attrEntry')},key:id,label:/*#__PURE__*/React.createElement(SignInLabelComponent,Object.assign({},{id,forId:id,className:className,text:labelText})),error:/*#__PURE__*/React.createElement(SignInErrorComponent,Object.assign({},{className:this.moduleClassName,type:'item'})),input:/*#__PURE__*/React.createElement(SignInInputComponent,Object.assign({},{id:id,type:type,pattern:pattern,className:className,ariaLabel:ariaLabel}))};}_renderSocialAccount(id,text,ariaLabel,iconImage){return{key:id,button:{id:id,tag:'button',className:classnames(\"\".concat(this.moduleClassName,\"__social-account\"),\"\".concat(this.moduleClassName,\"__social-account-\").concat(id),'accountButton','msc-btn'),'aria-label':ariaLabel},image:this._createImageMarkup(iconImage),text:/*#__PURE__*/React.createElement(SignInTextComponent,{className:\"\".concat(this.moduleClassName,\"__social-account-text\"),text:text})};}_createImageMarkup(iconImage){if(iconImage){const imageProps={gridSettings:this.props.context.request.gridSettings||{},imageSettings:iconImage&&iconImage.imageSettings};return/*#__PURE__*/React.createElement(Msdyn365.Image,Object.assign({className:\"\".concat(this.moduleClassName,\"__social-account-picture\")},iconImage,imageProps,{editProps:{key:iconImage||{},requestContext:this.props.context.request}}));}return null;}};__decorate([observable],SignIn.prototype,\"emailRegex\",void 0);__decorate([observable],SignIn.prototype,\"isInitialized\",void 0);SignIn=__decorate([observer],SignIn);export default SignIn;","map":{"version":3,"sources":["modules/sign-in/sign-in.tsx"],"names":[],"mappings":"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","sourcesContent":["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nimport classnames from 'classnames';\nimport { observable } from 'mobx';\nimport { observer } from 'mobx-react';\nimport * as React from 'react';\n\nimport {\n    getTelemetryObject, IModuleProps, INodeProps, ITelemetryContent, Modal, ModalBody\n} from '@msdyn365-commerce-modules/utilities';\n\nimport * as Msdyn365 from '@msdyn365-commerce/core';\nimport SignInButtonComponent from './components/sign-in-button';\nimport SignInDescriptionComponent from './components/sign-in-description';\nimport SignInErrorComponent from './components/sign-in-error';\nimport SignInInputComponent from './components/sign-in-input';\nimport SignInLabelComponent from './components/sign-in-label';\nimport SignInLinkComponent from './components/sign-in-link';\nimport SignInLoadingIconComponent from './components/sign-in-loading-icon';\nimport SignInLoadingMessageComponent from './components/sign-in-loading-message';\nimport SignInTextComponent from './components/sign-in-text';\nimport { ISignInConfig, ISignInProps, ISignInResources } from './sign-in.props.autogenerated';\n\nexport interface ISignInViewState {\n    isShowLoading: boolean;\n}\n\nexport interface ISignInItem {\n    wrapper: INodeProps;\n    key: string;\n    label: React.ReactNode;\n    error: React.ReactNode;\n    input: React.ReactNode;\n}\n\nexport interface ISignInSocialItem {\n    key: string;\n    button: INodeProps;\n    image: React.ReactNode;\n    text: React.ReactNode;\n}\n\nexport interface ISignInSocialAccount {\n    socialAccounts: INodeProps;\n    items: ISignInSocialItem[];\n}\n\nexport interface ISignInLocalAccount {\n    localAccount: INodeProps;\n    items: ISignInItem[];\n    forgetPassword: React.ReactNode;\n    disclaimer: React.ReactNode;\n    error: React.ReactNode;\n    signInButton: React.ReactNode;\n}\n\nexport interface ISignInLoading {\n    modal: INodeProps;\n    modalBody: INodeProps;\n    icon: React.ReactNode;\n    message: React.ReactNode;\n}\n\nexport interface ISignInViewProps {\n    className: string;\n    viewState: ISignInViewState;\n    signIn: IModuleProps;\n    loading: ISignInLoading;\n    defaultAADConainer: INodeProps;\n    aadConainer: INodeProps;\n    signInSection: INodeProps;\n    signInSectionHeading: React.ReactNode;\n    signInLocalAccount: ISignInLocalAccount;\n    signInSocialAccount: ISignInSocialAccount;\n    signUpSection: INodeProps;\n    signUpSectionHeading: React.ReactNode;\n    signUpDescription: React.ReactNode;\n    signUpLink: React.ReactNode;\n}\n\n/**\n * SignIn component\n * All AAD related module is rendered on AAD page and we need to respect HTML contract provide by AAD.\n * Please ensure any change in module don't break contract with AAD.\n * @extends {React.Component<ISignInProps<ISignInData>>}\n */\n@observer\nclass SignIn extends React.Component<ISignInProps<ISignInConfig>> {\n\n    private moduleClassName: string = 'ms-sign-in';\n    private telemetryContent?: ITelemetryContent;\n    @observable private emailRegex: string;\n    @observable private isInitialized: boolean;\n    // tslint:disable-next-line:no-any\n    private initializationTimer: any;\n\n    constructor(props: ISignInProps<ISignInConfig>) {\n        super(props);\n        this.emailRegex = '^[a-zA-Z0-9.!#$%&\\^_`{}~-]+@[a-zA-Z0-9-]+(?:\\.[a-zA-Z0-9-]+)*$';\n        this.isInitialized = false;\n        this.telemetryContent = getTelemetryObject(this.props.context.request.telemetryPageName!, this.props.friendlyName, this.props.telemetry);\n    }\n\n    public componentDidMount(): void {\n        this._onInit();\n    }\n\n    // After successful AAD initialization, call initialize method provided by AAD to attach events.\n    public componentDidUpdate(): void {\n        // tslint:disable-next-line:no-string-literal\n        if (this.isInitialized && window && window['$element'] && window['$element']['initialize']) {\n            // tslint:disable-next-line:no-string-literal\n            window['$element']['initialize']();\n        }\n    }\n\n    public render(): JSX.Element {\n        const config: ISignInConfig = this.props.config || {};\n        const resources: ISignInResources = this.props.resources || {};\n\n        const viewProps = {\n            ...this.props,\n            viewState: {\n                isShowLoading: !this.isInitialized\n            },\n            signIn: {\n                moduleProps: this.props,\n                className: classnames(this.moduleClassName, config.className)\n            },\n            loading: {\n                modal: {\n                    tag: Modal,\n                    isOpen: true\n                },\n                modalBody: {\n                    tag: ModalBody\n                },\n                icon: <SignInLoadingIconComponent className={this.moduleClassName} />,\n                message: <SignInLoadingMessageComponent className={this.moduleClassName} message={resources.loadingMessage} />,\n            },\n            defaultAADConainer: {\n                id: 'api',\n                style: { display: 'none' }\n            },\n            aadConainer: {\n                id: this.isInitialized ? 'api' : null,\n                className: `${this.moduleClassName}__container`\n            },\n            signInSection: {\n                className: `${this.moduleClassName}__sign-in-section`\n            },\n            signInSectionHeading: <Msdyn365.Text className={`${this.moduleClassName}__sign-in-heading`} {...config.signInHeading}  editProps = {{onEdit: this.handleSignInHeadingChange, requestContext: this.props.context.request}} />,\n            signInLocalAccount: {\n                localAccount: {\n                    className: `${this.moduleClassName}__account-items localAccount`\n                },\n                items: [\n                    this._renderInput('logonIdentifier', 'email', resources.emailAddressLabelText, resources.emailAddressAriaLabel,this.emailRegex),\n                    this._renderInput('password', 'password', resources.passwordLabelText,resources.passwordAriaLabel)\n                ],\n                forgetPassword: (\n                                <SignInLinkComponent\n                                    id='forgotPassword'\n                                    className={`${this.moduleClassName}__forget-password`}\n                                    href='#'\n                                    ariaLabel={resources.forgotPasswordButtonAriaLabel}\n                                    text={resources.forgotPasswordButtonText}\n                                    telemetryContent={this.telemetryContent}\n                                />),\n                disclaimer: config.signInDisclaimer && (\n                <Msdyn365.RichTextComponent\n                    className={`${this.moduleClassName}__sign-in-disclaimer`}\n                    text={config.signInDisclaimer}\n                    editProps={{onEdit: this.handleParagraphChange, requestContext: this.props.context.request}}\n                />\n                ),\n                error: <SignInErrorComponent className={this.moduleClassName} />,\n                signInButton: <SignInButtonComponent id='next' className={`${this.moduleClassName}__sign-in-button`} ariaLabel={resources.loginButtonAriaLabel} text={resources.loginButtonText} telemetryContent={this.telemetryContent}/>\n            },\n            signInSocialAccount: {\n                socialAccounts: {\n                    className: `${this.moduleClassName}__social-accounts`\n                },\n                items: [\n                    this._renderSocialAccount('FacebookExchange', resources.facebookButtonText, resources.facebookButtonAriaLabel, config.facebookIcon),\n                    this._renderSocialAccount('MicrosoftAccountExchange', resources.microsoftButtonText, resources.microsoftButtonAriaLabel, config.microsoftIcon)\n                ]\n            },\n            signUpSection: {\n                className: `${this.moduleClassName}__sign-up-section`\n            },\n            signUpSectionHeading: <Msdyn365.Text className={`${this.moduleClassName}__sign-up-heading`} {...config.signUpHeading}  editProps = {{onEdit: this.handleSignUpHeadingChange, requestContext: this.props.context.request}}/>,\n            signUpDescription: <SignInDescriptionComponent className={`${this.moduleClassName}__sign-up-description`} description={resources.signUpDescriptionText} />,\n            signUpLink: (\n                <SignInLinkComponent\n                    id='createAccount'\n                    href='#'\n                    className={`${this.moduleClassName}__sign-up-link msc-btn`}\n                    ariaLabel={resources.signUpButtonAriaLabel}\n                    text={resources.signUpButtonText}\n                    telemetryContent={this.telemetryContent}\n                />)\n        };\n\n        return this.props.renderView(viewProps) as React.ReactElement;\n    }\n\n    public handleParagraphChange = (event: Msdyn365.ContentEditableEvent) => this.props.config.signInDisclaimer = event.target.value;\n    public handleSignInHeadingChange = (event: Msdyn365.ContentEditableEvent) => this.props.config.signInHeading.text= event.target.value;\n    public handleSignUpHeadingChange = (event: Msdyn365.ContentEditableEvent) => this.props.config.signUpHeading.text= event.target.value;\n\n    private _onInit = () => {\n        this._prePopulateData();\n        this._updateErrorMessage();\n        // Check if AAD initialization is complete. AAD do not provide any event to subscribe so we need to check variable set by AAD to check initialization status.\n        this.initializationTimer = setInterval(() => { this._isInitializationSuccessful(); }, 100);\n        setTimeout(() => { clearInterval(this.initializationTimer); }, 10000);\n    }\n\n    // After successful AAD initialization, remove waiting and preload any data, if needed.\n    private _isInitializationSuccessful = () => {\n        // tslint:disable-next-line:no-string-literal\n        if (window && window['$diags'] && window['$diags']['initializationSuccessful']) {\n            clearInterval(this.initializationTimer);\n            this.isInitialized = true;\n        }\n    }\n\n    private _prePopulateData = () => {\n        // tslint:disable-next-line:no-string-literal\n        if (window && window['CONTENT'] && window['CONTENT']['email_pattern']) {\n            // tslint:disable-next-line:no-string-literal\n            this.emailRegex = window['CONTENT']['email_pattern'];\n        }\n    }\n\n    private _updateErrorMessage = () => {\n        const resources: ISignInResources = this.props.resources || {};\n\n        // tslint:disable-next-line:no-string-literal\n        if (window && window['CONTENT']) {\n            const errorMessages = {\n                requiredField_email: resources.requriedEmailError,\n                requiredField_password: resources.requriedPasswordError,\n                invalid_email: resources.invalidEmailError,\n                invalid_password: resources.invalidPasswordError,\n                unknown_error: resources.unknownError,\n            };\n\n            // tslint:disable-next-line:no-string-literal\n            Object.assign(window['CONTENT'], errorMessages);\n        }\n    }\n\n    private _renderInput(id: string, type: string, labelText: string,ariaLabel:string,pattern?: string): ISignInItem {\n        const className = `${this.moduleClassName}__account-item`;\n        return (\n            {\n                wrapper: {\n                    className: classnames(className, `${className}-${id}`, 'entry-item', 'attrEntry')\n                },\n                key: id,\n                label: (\n                    <SignInLabelComponent\n                        {\n                        ...{\n                            id,\n                            forId: id,\n                            className: className,\n                            text: labelText\n                        }\n                        }\n                    />\n                ),\n                error: (\n                    <SignInErrorComponent\n                        {\n                        ...{\n                            className: this.moduleClassName,\n                            type: 'item'\n                        }\n                        }\n                    />\n                ),\n                input: (\n                    <SignInInputComponent\n                        {\n                        ...{\n                            id: id,\n                            type: type,\n                            pattern: pattern,\n                            className: className,\n                            ariaLabel:ariaLabel\n\n                        }\n                        }\n                    />\n                )\n\n            }\n        );\n    }\n\n    private _renderSocialAccount(id: string, text: string, ariaLabel: string, iconImage?: Msdyn365.IImageData): ISignInSocialItem {\n        return {\n            key: id,\n            button: {\n                id: id,\n                tag: 'button',\n                className: classnames(`${this.moduleClassName}__social-account`, `${this.moduleClassName}__social-account-${id}`, 'accountButton', 'msc-btn'),\n                'aria-label': ariaLabel\n            },\n            image: this._createImageMarkup(iconImage),\n            text: <SignInTextComponent className={`${this.moduleClassName}__social-account-text`} text={text} />\n        };\n    }\n\n    private _createImageMarkup(iconImage?: Msdyn365.IImageData): React.ReactNode | null {\n        if (iconImage) {\n            const imageProps = {\n                gridSettings: this.props.context.request.gridSettings || {},\n                imageSettings: iconImage && iconImage.imageSettings\n            };\n            return <Msdyn365.Image className={`${this.moduleClassName}__social-account-picture`} {...iconImage} {...imageProps} editProps ={{key:iconImage || {}, requestContext: this.props.context.request}}/>;\n        }\n        return null;\n    }\n}\n\nexport default SignIn;\n"],"sourceRoot":"./src/"},"metadata":{},"sourceType":"module"}