{"ast":null,"code":"import _regeneratorRuntime from\"@babel/runtime/regenerator\";import _asyncToGenerator from\"@babel/runtime/helpers/esm/asyncToGenerator\";import _classCallCheck from\"@babel/runtime/helpers/esm/classCallCheck\";function _createForOfIteratorHelper(o,allowArrayLike){var it;if(typeof Symbol===\"undefined\"||o[Symbol.iterator]==null){if(Array.isArray(o)||(it=_unsupportedIterableToArray(o))||allowArrayLike&&o&&typeof o.length===\"number\"){if(it)o=it;var i=0;var F=function F(){};return{s:F,n:function n(){if(i>=o.length)return{done:true};return{done:false,value:o[i++]};},e:function e(_e){throw _e;},f:F};}throw new TypeError(\"Invalid attempt to iterate non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");}var normalCompletion=true,didErr=false,err;return{s:function s(){it=o[Symbol.iterator]();},n:function n(){var step=it.next();normalCompletion=step.done;return step;},e:function e(_e2){didErr=true;err=_e2;},f:function f(){try{if(!normalCompletion&&it[\"return\"]!=null)it[\"return\"]();}finally{if(didErr)throw err;}}};}function _unsupportedIterableToArray(o,minLen){if(!o)return;if(typeof o===\"string\")return _arrayLikeToArray(o,minLen);var n=Object.prototype.toString.call(o).slice(8,-1);if(n===\"Object\"&&o.constructor)n=o.constructor.name;if(n===\"Map\"||n===\"Set\")return Array.from(o);if(n===\"Arguments\"||/^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n))return _arrayLikeToArray(o,minLen);}function _arrayLikeToArray(arr,len){if(len==null||len>arr.length)len=arr.length;for(var i=0,arr2=new Array(len);i<len;i++){arr2[i]=arr[i];}return arr2;}import{unique}from'./utilities/arrayExtensions';import{createObservableDataAction}from'@msdyn365-commerce/core';import{getCartState}from'@msdyn365-commerce/global-state';import{getOrgUnitConfigurationAsync}from'@msdyn365-commerce/retail-proxy/dist/DataActions/OrgUnitsDataActions.g';import{getEstimatedAvailabilityAsync,getEstimatedProductWarehouseAvailabilityAsync}from'@msdyn365-commerce/retail-proxy/dist/DataActions/ProductsDataActions.g';import{ActiveCartProductsInput,buildCacheKey,getActiveCartProductsAction,mapProductInventoryInformation}from'./index';/**\r\n * Input class for availabilites for items in cart\r\n */export var ProductAvailabilitiesForCartLineItems=function ProductAvailabilitiesForCartLineItems(apiSettings){var _this=this;_classCallCheck(this,ProductAvailabilitiesForCartLineItems);this.getCacheKey=function(){return buildCacheKey(\"ActiveCartLineItemsAvailability\",_this.apiSettings);};this.getCacheObjectType=function(){return'ActiveCartLineItemsAvailability';};this.dataCacheType=function(){return'none';};this.apiSettings=apiSettings;};var createInput=function createInput(inputData){return new ProductAvailabilitiesForCartLineItems(inputData.requestContext.apiSettings);};/**\r\n * Calls the Retail API to get the product availabilites for items in the cart\r\n */ // tslint:disable-next-line:cyclomatic-complexity tslint:disable: max-func-body-length\nexport function getAvailabilitiesForCartLineItems(_x,_x2){return _getAvailabilitiesForCartLineItems.apply(this,arguments);}function _getAvailabilitiesForCartLineItems(){_getAvailabilitiesForCartLineItems=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee(input,ctx){var shippingItems,bopisItems,productAvailabilities,cartState,cart,channelConfiguration,products,PickupDeliveryModeCode,_iterator,_step,cartLine,productIds,shippingProductAvailabilites,_iterator2,_step2,bopisItem,productWarehouse,getProductWarehouseAvail,productWarehouseMapping,_iterator3,_step3,item;return _regeneratorRuntime.wrap(function _callee$(_context){while(1){switch(_context.prev=_context.next){case 0:if(input){_context.next=2;break;}throw new Error('[getAvailabilitiesForCartLineItems]No valid Input was provided, failing');case 2:shippingItems=[];bopisItems=[];productAvailabilities=[];_context.next=7;return getCartState(ctx);case 7:cartState=_context.sent;cart=cartState.cart;_context.next=11;return getOrgUnitConfigurationAsync({callerContext:ctx});case 11:channelConfiguration=_context.sent;_context.next=14;return getActiveCartProductsAction(new ActiveCartProductsInput(),ctx);case 14:products=_context.sent;PickupDeliveryModeCode=channelConfiguration.PickupDeliveryModeCode;if(!(!cart||!channelConfiguration||!products||products.length===0)){_context.next=19;break;}ctx.trace('[getAvailabilitiesForCartLineItems] Not able to get cart OR channelConfiguration or no products in cart');return _context.abrupt(\"return\",[]);case 19:if(cart&&cart.Id&&cart.CartLines&&cart.CartLines.length>0&&channelConfiguration){_iterator=_createForOfIteratorHelper(cart.CartLines);try{for(_iterator.s();!(_step=_iterator.n()).done;){cartLine=_step.value;if(cartLine.DeliveryMode&&cartLine.DeliveryMode!==''&&cartLine.DeliveryMode===PickupDeliveryModeCode){bopisItems.push(cartLine);}else{shippingItems.push(cartLine);}}}catch(err){_iterator.e(err);}finally{_iterator.f();}}if(!(shippingItems&&shippingItems.length>0)){_context.next=27;break;}productIds=shippingItems.map(function(x){return x.ProductId;});productIds=unique(productIds);_context.next=25;return getEstimatedAvailabilityAsync({callerContext:ctx,bypassCache:'get'},{ProductIds:productIds,DefaultWarehouseOnly:true});case 25:shippingProductAvailabilites=_context.sent;if(shippingProductAvailabilites&&shippingProductAvailabilites.ProductWarehouseInventoryAvailabilities&&shippingProductAvailabilites.ProductWarehouseInventoryAvailabilities.length>0){productAvailabilities=mapProductInventoryInformation(ctx,shippingProductAvailabilites===null||shippingProductAvailabilites===void 0?void 0:shippingProductAvailabilites.ProductWarehouseInventoryAvailabilities);}case 27:if(!(bopisItems&&bopisItems.length>0)){_context.next=49;break;}_iterator2=_createForOfIteratorHelper(bopisItems);_context.prev=29;_iterator2.s();case 31:if((_step2=_iterator2.n()).done){_context.next=41;break;}bopisItem=_step2.value;productWarehouse={ProductId:bopisItem.ProductId,InventLocationId:bopisItem.WarehouseId};if(ctx.requestContext.channel&&ctx.requestContext.channel.InventLocationDataAreaId){productWarehouse.DataAreaId=ctx.requestContext.channel.InventLocationDataAreaId;}_context.next=37;return getEstimatedProductWarehouseAvailabilityAsync({callerContext:ctx,bypassCache:'get',queryResultSettings:{}},[productWarehouse]);case 37:getProductWarehouseAvail=_context.sent;if(getProductWarehouseAvail&&getProductWarehouseAvail.ProductWarehouseInventoryAvailabilities&&getProductWarehouseAvail.ProductWarehouseInventoryAvailabilities.length>0){productWarehouseMapping=mapProductInventoryInformation(ctx,getProductWarehouseAvail===null||getProductWarehouseAvail===void 0?void 0:getProductWarehouseAvail.ProductWarehouseInventoryAvailabilities);if(productWarehouseMapping&&productWarehouseMapping.length){_iterator3=_createForOfIteratorHelper(productWarehouseMapping);try{for(_iterator3.s();!(_step3=_iterator3.n()).done;){item=_step3.value;productAvailabilities.push(item);}}catch(err){_iterator3.e(err);}finally{_iterator3.f();}}}case 39:_context.next=31;break;case 41:_context.next=46;break;case 43:_context.prev=43;_context.t0=_context[\"catch\"](29);_iterator2.e(_context.t0);case 46:_context.prev=46;_iterator2.f();return _context.finish(46);case 49:if(!(productAvailabilities&&productAvailabilities.length>0)){_context.next=53;break;}return _context.abrupt(\"return\",productAvailabilities);case 53:ctx.trace('[getAvailabilitiesForCartLineItems] unable to get availabilites for product');return _context.abrupt(\"return\",[]);case 55:case\"end\":return _context.stop();}}},_callee,null,[[29,43,46,49]]);}));return _getAvailabilitiesForCartLineItems.apply(this,arguments);}export default createObservableDataAction({id:'@msdyn365-commerce-modules/retail-actions/get-availabilities-cartlines',action:getAvailabilitiesForCartLineItems,input:createInput});","map":{"version":3,"sources":["../../src/get-availabilities-cartlines.ts"],"names":[],"mappings":"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","sourcesContent":["import { unique } from './utilities/arrayExtensions';\nimport { CacheType, createObservableDataAction, IAction, IActionContext, IActionInput, IAny, ICommerceApiSettings, ICreateActionContext, IGeneric } from '@msdyn365-commerce/core';\nimport { getCartState } from '@msdyn365-commerce/global-state';\nimport { CartLine, ProductWarehouse } from '@msdyn365-commerce/retail-proxy';\nimport { getOrgUnitConfigurationAsync } from '@msdyn365-commerce/retail-proxy/dist/DataActions/OrgUnitsDataActions.g';\nimport { getEstimatedAvailabilityAsync, getEstimatedProductWarehouseAvailabilityAsync } from '@msdyn365-commerce/retail-proxy/dist/DataActions/ProductsDataActions.g';\nimport { ActiveCartProductsInput, buildCacheKey, getActiveCartProductsAction, IProductInventoryInformation, mapProductInventoryInformation } from './index';\n/**\n * Input class for availabilites for items in cart\n */\nexport class ProductAvailabilitiesForCartLineItems implements IActionInput {\n    private apiSettings: ICommerceApiSettings;\n\n    constructor(apiSettings: ICommerceApiSettings) {\n        this.apiSettings = apiSettings;\n    }\n\n    public getCacheKey = () => buildCacheKey(`ActiveCartLineItemsAvailability`, this.apiSettings);\n    public getCacheObjectType = () => 'ActiveCartLineItemsAvailability';\n    public dataCacheType = (): CacheType => 'none';\n}\n\nconst createInput = (inputData: ICreateActionContext<IGeneric<IAny>>) => {\n    return new ProductAvailabilitiesForCartLineItems(inputData.requestContext.apiSettings);\n};\n\n/**\n * Calls the Retail API to get the product availabilites for items in the cart\n */\n// tslint:disable-next-line:cyclomatic-complexity tslint:disable: max-func-body-length\nexport async function getAvailabilitiesForCartLineItems(input: ProductAvailabilitiesForCartLineItems, ctx: IActionContext): Promise<IProductInventoryInformation[]> {\n    // If no input is provided fail out\n    if (!input) {\n        throw new Error('[getAvailabilitiesForCartLineItems]No valid Input was provided, failing');\n    }\n    const shippingItems: CartLine[] = [];\n    const bopisItems = [];\n    let productAvailabilities:IProductInventoryInformation[] = [];\n\n    const cartState = await getCartState(ctx);\n    const cart = cartState.cart;\n    const channelConfiguration = await getOrgUnitConfigurationAsync({ callerContext: ctx});\n    const products = await getActiveCartProductsAction(new ActiveCartProductsInput(), ctx);\n    const PickupDeliveryModeCode = channelConfiguration.PickupDeliveryModeCode;\n\n    if(!cart || !channelConfiguration || !products || products.length === 0) {\n        ctx.trace('[getAvailabilitiesForCartLineItems] Not able to get cart OR channelConfiguration or no products in cart');\n        return <IProductInventoryInformation[]>[];\n    }\n\n    if(cart && cart.Id && cart.CartLines && cart.CartLines.length > 0 && channelConfiguration) {\n        for(const cartLine of cart.CartLines) {\n\n            if(cartLine.DeliveryMode && cartLine.DeliveryMode !== '' && (cartLine.DeliveryMode === PickupDeliveryModeCode)) {\n                bopisItems.push(cartLine);\n            } else {\n                shippingItems.push(cartLine);\n            }\n        }\n    }\n\n    if(shippingItems && shippingItems.length > 0) {\n        let productIds = shippingItems.map(x => x.ProductId!);\n        productIds = unique(productIds);\n        const shippingProductAvailabilites = await getEstimatedAvailabilityAsync(\n            { callerContext: ctx, bypassCache: 'get' },\n            { ProductIds: productIds, DefaultWarehouseOnly: true}\n        );\n        if(shippingProductAvailabilites && shippingProductAvailabilites.ProductWarehouseInventoryAvailabilities && shippingProductAvailabilites.ProductWarehouseInventoryAvailabilities.length > 0) {\n            productAvailabilities = mapProductInventoryInformation(ctx, shippingProductAvailabilites?.ProductWarehouseInventoryAvailabilities);\n        }\n    }\n\n    if(bopisItems && bopisItems.length > 0) {\n        for(const bopisItem of bopisItems) {\n            const productWarehouse: ProductWarehouse = {\n                ProductId: bopisItem.ProductId,\n                InventLocationId: bopisItem.WarehouseId\n            };\n\n            if(ctx.requestContext.channel && ctx.requestContext.channel.InventLocationDataAreaId) {\n                productWarehouse.DataAreaId = ctx.requestContext.channel.InventLocationDataAreaId;\n            }\n            const getProductWarehouseAvail = await getEstimatedProductWarehouseAvailabilityAsync({ callerContext: ctx, bypassCache: 'get', queryResultSettings: {} }, [productWarehouse]);\n            if(getProductWarehouseAvail && getProductWarehouseAvail.ProductWarehouseInventoryAvailabilities && getProductWarehouseAvail.ProductWarehouseInventoryAvailabilities.length > 0) {\n                const productWarehouseMapping = mapProductInventoryInformation (ctx, getProductWarehouseAvail?.ProductWarehouseInventoryAvailabilities);\n                if(productWarehouseMapping && productWarehouseMapping.length) {\n                    for(const item of productWarehouseMapping) {\n                        productAvailabilities.push(item);\n                    }\n                }\n            }\n        }\n    }\n\n    if(productAvailabilities && productAvailabilities.length > 0) {\n        return productAvailabilities;\n    } else {\n        ctx.trace('[getAvailabilitiesForCartLineItems] unable to get availabilites for product');\n        return <IProductInventoryInformation[]>[];\n    }\n}\n\nexport default createObservableDataAction({\n    id: '@msdyn365-commerce-modules/retail-actions/get-availabilities-cartlines',\n    action: <IAction<IProductInventoryInformation[]>>getAvailabilitiesForCartLineItems,\n    input: createInput\n});\n"],"sourceRoot":""},"metadata":{},"sourceType":"module"}