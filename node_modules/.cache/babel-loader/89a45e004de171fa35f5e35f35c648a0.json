{"ast":null,"code":"import _regeneratorRuntime from\"@babel/runtime/regenerator\";import _asyncToGenerator from\"@babel/runtime/helpers/esm/asyncToGenerator\";/*!\r\n * Copyright (c) Microsoft Corporation.\r\n * All rights reserved. See LICENSE in the project root for license information.\r\n */import{createDataActionHook}from'@msdyn365-commerce/core';import{TelemetryEvent}from'@msdyn365-commerce/telemetry-internal';import{getProductInfoFromSimpleProduct}from'./telemetry.action.helper';var beforeGetById=/*#__PURE__*/function(){var _ref=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee(inputs){return _regeneratorRuntime.wrap(function _callee$(_context){while(1){switch(_context.prev=_context.next){case 0:case\"end\":return _context.stop();}}},_callee);}));return function beforeGetById(_x){return _ref.apply(this,arguments);};}();var afterGetById=/*#__PURE__*/function(){var _ref2=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee2(_inputs,simpleProduct,actionContext){var productInfo;return _regeneratorRuntime.wrap(function _callee2$(_context2){while(1){switch(_context2.prev=_context2.next){case 0:if(simpleProduct){productInfo=getProductInfoFromSimpleProduct(simpleProduct,actionContext.requestContext);actionContext.requestContext.telemetryData[productInfo.productSku]=productInfo;actionContext.requestContext.telemetryData[TelemetryEvent.ProductPageView]=productInfo?[productInfo]:[];}case 1:case\"end\":return _context2.stop();}}},_callee2);}));return function afterGetById(_x2,_x3,_x4){return _ref2.apply(this,arguments);};}();createDataActionHook({actionId:'@msdyn365-commerce/retail-proxy/Products/GetById',postReaderHook:afterGetById,preReaderHook:beforeGetById});","map":{"version":3,"sources":["actions/getById-product-telemetry.action.ts"],"names":[],"mappings":"uIAAA;;;AAGG,GAEH,OAAS,oBAAT,KAAmE,yBAAnE,CAEA,OAAS,cAAT,KAA+B,uCAA/B,CACA,OAAS,+BAAT,KAAgD,2BAAhD,CAEA,GAAM,CAAA,aAAa,0FAAG,iBAAO,MAAP,iKAAH,kBAAb,CAAA,aAAa,4CAAnB,CAIA,GAAM,CAAA,YAAY,2FAAG,kBACjB,OADiB,CAEjB,aAFiB,CAGjB,aAHiB,sIAMjB,GAAI,aAAJ,CAAmB,CACT,WADS,CACK,+BAA+B,CAAC,aAAD,CAAgB,aAAa,CAAC,cAA9B,CADpC,CAEf,aAAa,CAAC,cAAd,CAA6B,aAA7B,CAA2C,WAAW,CAAC,UAAvD,EAAqE,WAArE,CACA,aAAa,CAAC,cAAd,CAA6B,aAA7B,CAA2C,cAAc,CAAC,eAA1D,EAA6E,WAAW,CAAG,CAAC,WAAD,CAAH,CAAmB,EAA3G,CACH,CAVgB,wDAAH,kBAAZ,CAAA,YAAY,sDAAlB,CAaA,oBAAoB,CAAC,CACjB,QAAQ,CAAE,kDADO,CAEjB,cAAc,CAAE,YAFC,CAGjB,aAAa,CAAE,aAHE,CAAD,CAApB","sourcesContent":["/*!\n * Copyright (c) Microsoft Corporation.\n * All rights reserved. See LICENSE in the project root for license information.\n */\n\nimport { createDataActionHook, IActionContext, IActionInput } from '@msdyn365-commerce/core';\nimport { SimpleProduct } from '@msdyn365-commerce/retail-proxy';\nimport { TelemetryEvent } from '@msdyn365-commerce/telemetry-internal';\nimport { getProductInfoFromSimpleProduct } from './telemetry.action.helper';\n\nconst beforeGetById = async (inputs: IActionInput | IActionInput[]) => {\n    // placeholder\n};\n\nconst afterGetById = async (\n    _inputs: IActionInput | IActionInput[],\n    simpleProduct: SimpleProduct | SimpleProduct[],\n    actionContext: IActionContext\n) => {\n    // If simple product result is defined run the post hook\n    if (simpleProduct) {\n        const productInfo = getProductInfoFromSimpleProduct(simpleProduct, actionContext.requestContext);\n        actionContext.requestContext.telemetryData[productInfo.productSku] = productInfo;\n        actionContext.requestContext.telemetryData[TelemetryEvent.ProductPageView] = productInfo ? [productInfo] : [];\n    }\n};\n\ncreateDataActionHook({\n    actionId: '@msdyn365-commerce/retail-proxy/Products/GetById',\n    postReaderHook: afterGetById,\n    preReaderHook: beforeGetById\n});\n"],"sourceRoot":"./src/"},"metadata":{},"sourceType":"module"}