{"ast":null,"code":"/*!\r\n * Copyright (c) Microsoft Corporation.\r\n * All rights reserved. See LICENSE in the project root for license information.\r\n */import React from'react';import{EditableField,FieldType}from'./editable-fields/editable-field';// tslint:disable-next-line:completed-docs\nexport class Text extends React.Component{constructor(props){super(props);this.render=()=>{var _this$props$editProps;return/*#__PURE__*/React.createElement(EditableField,{onChange:this.props.editProps?this.props.editProps.onEdit:this.onEdit,requestContext:(_this$props$editProps=this.props.editProps)===null||_this$props$editProps===void 0?void 0:_this$props$editProps.requestContext,fieldProps:{text:this.props.text,tag:this.props.tag,className:this.props.className},type:FieldType.Text});};this.onEdit=event=>null;this.state={html:props.text};}}","map":{"version":3,"sources":["../../../src/utilities/text.tsx"],"names":[],"mappings":"AAAA;;;AAGG,GAEH,MAAO,CAAA,KAAP,KAAkB,OAAlB,CAEA,OAAS,aAAT,CAAwB,SAAxB,KAAyD,kCAAzD,CAWA;AACA,MAAM,MAAO,CAAA,IAAP,QAAoB,CAAA,KAAK,CAAC,SAAqB,CACjD,WAAA,CAAY,KAAZ,CAA6B,CACzB,MAAM,KAAN,EAIG,KAAA,MAAA,CAAS,IAAkB,2BAC9B,mBACI,KAAA,CAAA,aAAA,CAAC,aAAD,CAAc,CACV,QAAQ,CAAE,KAAK,KAAL,CAAW,SAAX,CAAuB,KAAK,KAAL,CAAW,SAAX,CAAqB,MAA5C,CAAqD,KAAK,MAD1D,CAEV,cAAc,wBAAE,KAAK,KAAL,CAAW,SAAb,gDAAE,sBAAsB,cAF5B,CAGV,UAAU,CAAE,CACR,IAAI,CAAE,KAAK,KAAL,CAAW,IADT,CAER,GAAG,CAAE,KAAK,KAAL,CAAW,GAFR,CAGR,SAAS,CAAE,KAAK,KAAL,CAAW,SAHd,CAHF,CAQV,IAAI,CAAE,SAAS,CAAC,IARN,CAAd,CADJ,CAYH,CAbM,CAeC,KAAA,MAAA,CAAU,KAAD,EAAiC,IAA1C,CAlBJ,KAAK,KAAL,CAAa,CAAE,IAAI,CAAE,KAAK,CAAC,IAAd,CAAb,CACH,CAJgD","sourcesContent":["/*!\n * Copyright (c) Microsoft Corporation.\n * All rights reserved. See LICENSE in the project root for license information.\n */\n\nimport React from 'react';\nimport { ContentEditableEvent } from 'react-contenteditable';\nimport { EditableField, FieldType, ITextEditProps } from './editable-fields/editable-field';\n\nexport { ContentEditableEvent };\n\nexport interface ITextProps {\n    tag?: string;\n    text?: string;\n    className?: string;\n    editProps?: ITextEditProps;\n}\n\n// tslint:disable-next-line:completed-docs\nexport class Text extends React.Component<ITextProps> {\n    constructor(props: ITextProps) {\n        super(props);\n        this.state = { html: props.text };\n    }\n\n    public render = (): JSX.Element => {\n        return (\n            <EditableField\n                onChange={this.props.editProps ? this.props.editProps.onEdit : this.onEdit} // handle innerHTML change\n                requestContext={this.props.editProps?.requestContext}\n                fieldProps={{\n                    text: this.props.text,\n                    tag: this.props.tag,\n                    className: this.props.className\n                }}\n                type={FieldType.Text}\n            />\n        );\n    };\n\n    private onEdit = (event: ContentEditableEvent) => null;\n}\n"],"sourceRoot":""},"metadata":{},"sourceType":"module"}