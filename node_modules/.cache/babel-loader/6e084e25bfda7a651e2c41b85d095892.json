{"ast":null,"code":"import{getSalesLine}from'./get-sales-line';export const getSalesLines=(_ref)=>{let{moduleName,moduleComponentProps,salesLines,products,shipments,resources,isCurrentChannel,imageOnly,showCompleteAddress,telemetryContent}=_ref;return salesLines.map(salesLine=>{const product=products.find(_product=>_product.RecordId===salesLine.ProductId)||{};const shipment=shipments&&shipments.find(_shipment=>{var _shipment$ShipmentLin;return(_shipment$ShipmentLin=_shipment.ShipmentLines)===null||_shipment$ShipmentLin===void 0?void 0:_shipment$ShipmentLin.find(_shipmentLine=>_shipmentLine.ItemId===product.ItemId);});return getSalesLine({moduleName,moduleComponentProps,product,shipment,salesLine,isCurrentChannel,resources,imageOnly,showCompleteAddress,telemetryContent});});};export const getSalesLinesInput=(props,moduleName,order,products,priceContext,showCompleteAddress,telemetryContent)=>{if(!order||!order.SalesLines||!order.SalesLines.length){return;}const{resources,config:{imageSettings},context:{actionContext,request:{gridSettings,apiSettings:{channelId}}}}=props;const isCurrentChannel=!order.ChannelId||order.ChannelId===channelId;return{moduleName,moduleComponentProps:props,isCurrentChannel,salesLines:order.SalesLines,products,shipments:order.Shipments,priceContext:priceContext,resources,actionContext:actionContext,gridSettings:gridSettings,imageSettings:imageSettings,showCompleteAddress:showCompleteAddress,telemetryContent:telemetryContent};};","map":{"version":3,"sources":["common/get-sales-lines.tsx"],"names":[],"mappings":"AAOA,OAAS,YAAT,KAA8D,kBAA9D,CAqBA,MAAO,MAAM,CAAA,aAAa,CAAG,QAWW,IAXV,CAC1B,UAD0B,CAE1B,oBAF0B,CAG1B,UAH0B,CAI1B,QAJ0B,CAK1B,SAL0B,CAM1B,SAN0B,CAO1B,gBAP0B,CAQ1B,SAR0B,CAS1B,mBAT0B,CAU1B,gBAV0B,CAWU,MACpC,MAAO,CAAA,UAAU,CAAC,GAAX,CAAe,SAAS,EAAG,CAC9B,KAAM,CAAA,OAAO,CAAG,QAAQ,CAAC,IAAT,CAAc,QAAQ,EAAI,QAAQ,CAAC,QAAT,GAAsB,SAAS,CAAC,SAA1D,GAAyE,EAAzF,CACA,KAAM,CAAA,QAAQ,CAAG,SAAS,EAAI,SAAS,CAAC,IAAV,CAAe,SAAS,0DAAI,SAAS,CAAC,aAAd,gDAAI,sBAAyB,IAAzB,CAA8B,aAAa,EAAI,aAAa,CAAC,MAAd,GAAyB,OAAO,CAAC,MAAhF,CAAJ,EAAxB,CAA9B,CACA,MAAO,CAAA,YAAY,CAAC,CAChB,UADgB,CAEhB,oBAFgB,CAGhB,OAHgB,CAIhB,QAJgB,CAKhB,SALgB,CAMhB,gBANgB,CAOhB,SAPgB,CAQhB,SARgB,CAShB,mBATgB,CAUhB,gBAVgB,CAAD,CAAnB,CAYH,CAfM,CAAP,CAgBH,CA5BM,CAkCP,MAAO,MAAM,CAAA,kBAAkB,CAAG,CAC9B,KAD8B,CAE9B,UAF8B,CAG9B,KAH8B,CAI9B,QAJ8B,CAK9B,YAL8B,CAM9B,mBAN8B,CAO9B,gBAP8B,GAQG,CACjC,GAAI,CAAC,KAAD,EAAU,CAAC,KAAK,CAAC,UAAjB,EAA+B,CAAC,KAAK,CAAC,UAAN,CAAiB,MAArD,CAA6D,CACzD,OACH,CAED,KAAM,CACF,SADE,CAEF,MAAM,CAAE,CAAE,aAAF,CAFN,CAGF,OAAO,CAAE,CACL,aADK,CAEL,OAAO,CAAE,CACL,YADK,CAEL,WAAW,CAAE,CAAE,SAAF,CAFR,CAFJ,CAHP,EAUF,KAVJ,CAYA,KAAM,CAAA,gBAAgB,CAAG,CAAC,KAAK,CAAC,SAAP,EAAoB,KAAK,CAAC,SAAN,GAAoB,SAAjE,CAEA,MAAO,CACH,UADG,CAEH,oBAAoB,CAAE,KAFnB,CAGH,gBAHG,CAIH,UAAU,CAAE,KAAK,CAAC,UAJf,CAKH,QALG,CAMH,SAAS,CAAE,KAAK,CAAC,SANd,CAOH,YAAY,CAAE,YAPX,CAQH,SARG,CASH,aAAa,CAAE,aATZ,CAUH,YAAY,CAAE,YAVX,CAWH,aAAa,CAAE,aAXZ,CAYH,mBAAmB,CAAE,mBAZlB,CAaH,gBAAgB,CAAE,gBAbf,CAAP,CAeH,CA1CM","sourcesContent":["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nimport { ITelemetryContent } from '@msdyn365-commerce-modules/utilities';\nimport { IActionContext, IGridSettings, IImageSettings } from '@msdyn365-commerce/core';\nimport { OrderShipments, SalesLine, SalesOrder, Shipment, SimpleProduct } from '@msdyn365-commerce/retail-proxy';\nimport { getSalesLine, ISalesLine, ISalesLineResources } from './get-sales-line';\nimport { IModuleComponentProps, IPriceContext } from './utilities';\n\nexport interface IGetSalesLinesInput {\n    moduleName: string;\n    moduleComponentProps: IModuleComponentProps;\n    isCurrentChannel: boolean;\n\n    salesLines: SalesLine[];\n    products: SimpleProduct[];\n    shipments?: Shipment[];\n    priceContext: IPriceContext;\n    resources: ISalesLineResources;\n    actionContext: IActionContext;\n    gridSettings: IGridSettings;\n    imageSettings?: IImageSettings;\n    imageOnly?: boolean;\n    showCompleteAddress?: boolean;\n    telemetryContent?: ITelemetryContent;\n}\n\nexport const getSalesLines = ({\n    moduleName,\n    moduleComponentProps,\n    salesLines,\n    products,\n    shipments,\n    resources,\n    isCurrentChannel,\n    imageOnly,\n    showCompleteAddress,\n    telemetryContent\n}: IGetSalesLinesInput): ISalesLine[] => {\n    return salesLines.map(salesLine => {\n        const product = products.find(_product => _product.RecordId === salesLine.ProductId) || ({} as SimpleProduct);\n        const shipment = shipments && shipments.find(_shipment => _shipment.ShipmentLines?.find(_shipmentLine => _shipmentLine.ItemId === product.ItemId));\n        return getSalesLine({\n            moduleName,\n            moduleComponentProps,\n            product,\n            shipment,\n            salesLine,\n            isCurrentChannel,\n            resources,\n            imageOnly,\n            showCompleteAddress,\n            telemetryContent\n        });\n    });\n};\n\ninterface IProps extends IModuleComponentProps {\n    resources: ISalesLineResources;\n}\n\nexport const getSalesLinesInput = (\n    props: IProps,\n    moduleName: string,\n    order: SalesOrder | OrderShipments,\n    products: SimpleProduct[],\n    priceContext: IPriceContext,\n    showCompleteAddress?: boolean,\n    telemetryContent?: ITelemetryContent\n): IGetSalesLinesInput | undefined => {\n    if (!order || !order.SalesLines || !order.SalesLines.length) {\n        return;\n    }\n\n    const {\n        resources,\n        config: { imageSettings },\n        context: {\n            actionContext,\n            request: {\n                gridSettings,\n                apiSettings: { channelId }\n            }\n        }\n    } = props;\n\n    const isCurrentChannel = !order.ChannelId || order.ChannelId === channelId;\n\n    return {\n        moduleName,\n        moduleComponentProps: props,\n        isCurrentChannel,\n        salesLines: order.SalesLines,\n        products,\n        shipments: order.Shipments,\n        priceContext: priceContext,\n        resources,\n        actionContext: actionContext,\n        gridSettings: gridSettings!,\n        imageSettings: imageSettings,\n        showCompleteAddress: showCompleteAddress,\n        telemetryContent: telemetryContent\n    };\n};\n"],"sourceRoot":"./src/"},"metadata":{},"sourceType":"module"}