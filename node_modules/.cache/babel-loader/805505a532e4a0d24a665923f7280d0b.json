{"ast":null,"code":"import\"core-js/modules/es.string.includes.js\";import\"core-js/modules/es.string.replace.js\";import\"core-js/modules/web.dom-collections.iterator.js\";/*!\r\n * Copyright (c) Microsoft Corporation.\r\n * All rights reserved. See LICENSE in the project root for license information.\r\n */export const DATA_ATTRIBUTE='data-i';export const FRAGMENT_ATTRIBUTE='fragment';export const FRAGMENT_MODULE_ATTRIBUTE='fragmentmodule';export const CONTAINER_TYPE='containerModule';export const EMPTY_SLOT_TYPE_NAME='empty-slot';export const ADD_CONTAINER_CLASS_NAME='add-container-inner';export const ADD_CONTAINER_CLASS_NAME_ON_DRAG_OVER='ondrop';export const ADD_CONTAINER_CLASS_NAME_ON_DRAGGING_MODULE='drop-module';export const ADD_CONTAINER_CLASS_NAME_ON_DRAGGING_FRAGMENT='drop-fragment';export const ADD_CONTAINER_CLASS_NAME_ON_DRAGGING_NOT_ALLOWED='drop-error';export const NO_POINTER_EVENTS_CLASS_NAME='ms-no-pointer-events';/**\r\n * Get the root module by selecting the first module with the data-i attibute.\r\n * @returns {HTMLElement | null} Returns the html module element if module exists. Otherwise, return null.\r\n */export function getRootModule(){const root=document.body.querySelector(\"[\".concat(DATA_ATTRIBUTE,\"]\"));return root?root:null;}/**\r\n * Get the module html element by data Id.\r\n * @param moduleDataId The module data Id.\r\n * @returns {HTMLElement | null} Returns the html module element if module exists. Otherwise, return null.\r\n */export function getModuleById(moduleDataId){if(!moduleDataId){return null;}const modules=[...Array.from(document.body.querySelectorAll(\"[\".concat(DATA_ATTRIBUTE,\"]\")))];const foundModule=modules.find(c=>getElementDataInfo(c).dataInfo.id===moduleDataId);return foundModule?foundModule:null;}/**\r\n * Get a list of all add module boxes.\r\n * @returns {ElementDataInfo[]} list of modules.\r\n */export function getAllAddModuleBoxes(){const modules=[...Array.from(document.body.querySelectorAll(\"[\".concat(DATA_ATTRIBUTE,\"]\")))];return modules.map(m=>getElementDataInfo(m)).filter(m=>m.dataInfo.typeName===EMPTY_SLOT_TYPE_NAME);}/**\r\n * Get a list of modules by parent data Id and slot data Id.\r\n * @param parentId The parent data Id.\r\n * @param slotId The slot Id.\r\n * @returns {Element[]} list of modules.\r\n */export function getModulesByParentIdAndSlotId(parentId,slotId){let modules=[];if(!parentId||!slotId){return modules;}const parentModule=getElementDataInfoById(parentId);if(parentModule.element){modules=[...Array.from(parentModule.element.querySelectorAll(\"[\".concat(DATA_ATTRIBUTE,\"]\")))];modules=modules.filter(m=>{const dataInfo=getElementDataInfo(m).dataInfo;if(dataInfo.parentId===parentId&&dataInfo.slotId===slotId&&dataInfo.typeName!==EMPTY_SLOT_TYPE_NAME){return true;}return false;});}return modules;}/**\r\n * Get the closest module to a specific html element target.\r\n * @param target The specific html element target.\r\n * @returns {HTMLElement | null} Returns the html module element if element exists. Otherwise, return null.\r\n */export function getModuleByTarget(target){let moduleElement=target;const dataAttribute=moduleElement.getAttribute(DATA_ATTRIBUTE);if(!dataAttribute){// Returns the closest ancestor which has an attribute equals to DATA_ATTRIBUTE\n// Gets the closest module to the target\nmoduleElement=moduleElement.closest(\"[\".concat(DATA_ATTRIBUTE,\"]\"));}return moduleElement;}/**\r\n * Get data info from the data-i element attribute.\r\n * @param element The html element.\r\n * @returns {ElementDataInfo} data info from the data-i element attribute.\r\n */export function getElementDataInfo(element){if(element){const dataAttribute=element.getAttribute(DATA_ATTRIBUTE);if(dataAttribute){const json=dataAttribute.replace(/([^:,{}]+):([^:,{}]+)/g,'\"$1\":\"$2\"');const obj=JSON.parse(json);return{dataInfo:{id:obj===null||obj===void 0?void 0:obj.id,parentId:obj===null||obj===void 0?void 0:obj.p,slotId:obj===null||obj===void 0?void 0:obj.s,typeName:obj===null||obj===void 0?void 0:obj.t,friendlyName:obj===null||obj===void 0?void 0:obj.fn,moduleType:obj===null||obj===void 0?void 0:obj.mt,isFragment:isElementFragment(element),isFragmentModule:isElementFragmentModule(element)},element:element};}}return{dataInfo:{id:'',parentId:'',slotId:'',typeName:'',friendlyName:'',moduleType:'',isFragment:false,isFragmentModule:false},element:element};}/**\r\n * Get the element data info by target.\r\n * @param target The target html element.\r\n * @returns {ElementDataInfo} data info from the data-i element attribute.\r\n */export function getElementDataInfoByTarget(target){return getElementDataInfo(getModuleByTarget(target));}/**\r\n * Get the element data info by module Id.\r\n * @param moduleId The module Id.\r\n * @returns {ElementDataInfo} data info from the data-i element attribute.\r\n */export function getElementDataInfoById(moduleId){return getElementDataInfo(getModuleById(moduleId));}/**\r\n * clear the element data info object.\r\n */export function cleanDataInfo(){return{dataInfo:{id:'',parentId:'',slotId:'',typeName:'',friendlyName:'',moduleType:'',isFragment:false,isFragmentModule:false},element:null};}/**\r\n * Get rendering helper.\r\n */export function getRenderingHelper(){if(// @ts-ignore\nwindow._msdyn365.authoringHelper&&// @ts-ignore\nwindow._msdyn365.authoringHelper.renderingHelper){// @ts-ignore\nreturn window._msdyn365.authoringHelper.renderingHelper;}}/**\r\n * Update the add module inner container class\r\n * @param addInnerContainer The add module inner container element.\r\n * @param state The state to where the element classes should be updated to.\r\n */export function updateAddModuleInnerContainerClass(addInnerContainer){let state=arguments.length>1&&arguments[1]!==undefined?arguments[1]:'Initial';let className=ADD_CONTAINER_CLASS_NAME;switch(state){case'InsertModule':className+=\" \".concat(ADD_CONTAINER_CLASS_NAME_ON_DRAG_OVER,\" \").concat(ADD_CONTAINER_CLASS_NAME_ON_DRAGGING_MODULE);appendNoPointerEventsToChildren(addInnerContainer);break;case'InsertFragment':className+=\" \".concat(ADD_CONTAINER_CLASS_NAME_ON_DRAG_OVER,\" \").concat(ADD_CONTAINER_CLASS_NAME_ON_DRAGGING_FRAGMENT);appendNoPointerEventsToChildren(addInnerContainer);break;case'MoveNotAllowed':className+=\" \".concat(ADD_CONTAINER_CLASS_NAME_ON_DRAG_OVER,\" \").concat(ADD_CONTAINER_CLASS_NAME_ON_DRAGGING_NOT_ALLOWED);appendNoPointerEventsToChildren(addInnerContainer);break;default:removeNoPointerEventsFromChildren(addInnerContainer);}addInnerContainer.className=className;}/**\r\n * Set children to have no pointer events.\r\n * This prevents drag enter event from being triggered for each children in the add module slot\r\n * @param element the element which children classes should be updated.\r\n */function appendNoPointerEventsToChildren(element){const elementChildren=Array.from(element.children);elementChildren.map(c=>{if(c.className){if(!c.className.includes(NO_POINTER_EVENTS_CLASS_NAME)){c.className+=\" \".concat(NO_POINTER_EVENTS_CLASS_NAME);}}else{c.className=\"\".concat(NO_POINTER_EVENTS_CLASS_NAME);}});}/**\r\n * Remove no pointer events class.\r\n * This will set the children back to their original classes.\r\n * @param element the element which children classes should be updated.\r\n */function removeNoPointerEventsFromChildren(element){const elementChildren=Array.from(element.children);elementChildren.map(c=>{if(c.className&&c.className.includes(NO_POINTER_EVENTS_CLASS_NAME)){c.className=c.className.replace(NO_POINTER_EVENTS_CLASS_NAME,'').trim();}});}/**\r\n * Returns whether or not the element is a fragment container.\r\n * @param element The html element.\r\n * @returns {boolean} Whether or not the element is a fragment container.\r\n */function isElementFragment(element){return!!element.getAttribute(FRAGMENT_ATTRIBUTE);}/**\r\n * Returns whether or not the element is a fragment module.\r\n * @param element The html element.\r\n * @returns {boolean} Whether or not the element is a fragment module.\r\n */function isElementFragmentModule(element){return!!element.getAttribute(FRAGMENT_MODULE_ATTRIBUTE);}","map":{"version":3,"sources":["../../../../src/utilities/drag-and-drop/drag-and-drop-utils.ts"],"names":[],"mappings":"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","sourcesContent":["/*!\n * Copyright (c) Microsoft Corporation.\n * All rights reserved. See LICENSE in the project root for license information.\n */\n\nimport { IRenderingHelper } from '../../interfaces/IRenderingHelper';\n\nexport const DATA_ATTRIBUTE = 'data-i';\nexport const FRAGMENT_ATTRIBUTE = 'fragment';\nexport const FRAGMENT_MODULE_ATTRIBUTE = 'fragmentmodule';\nexport const CONTAINER_TYPE = 'containerModule';\nexport const EMPTY_SLOT_TYPE_NAME = 'empty-slot';\nexport const ADD_CONTAINER_CLASS_NAME = 'add-container-inner';\nexport const ADD_CONTAINER_CLASS_NAME_ON_DRAG_OVER = 'ondrop';\nexport const ADD_CONTAINER_CLASS_NAME_ON_DRAGGING_MODULE = 'drop-module';\nexport const ADD_CONTAINER_CLASS_NAME_ON_DRAGGING_FRAGMENT = 'drop-fragment';\nexport const ADD_CONTAINER_CLASS_NAME_ON_DRAGGING_NOT_ALLOWED = 'drop-error';\nexport const NO_POINTER_EVENTS_CLASS_NAME = 'ms-no-pointer-events';\n\nexport type AddModuleBoxState = 'Initial' | 'InsertModule' | 'InsertFragment' | 'MoveNotAllowed';\n\nexport type ElementDataInfo = {\n    dataInfo: DataInfo;\n    element: HTMLElement | null;\n};\n\ntype DataInfo = {\n    id: string;\n    parentId: string;\n    slotId: string;\n    typeName: string;\n    friendlyName: string;\n    moduleType: string;\n    isFragment: boolean;\n    isFragmentModule: boolean;\n};\n\n/**\n * Get the root module by selecting the first module with the data-i attibute.\n * @returns {HTMLElement | null} Returns the html module element if module exists. Otherwise, return null.\n */\nexport function getRootModule(): HTMLElement | null {\n    const root = document.body.querySelector(`[${DATA_ATTRIBUTE}]`);\n    return root ? <HTMLElement>root : null;\n}\n\n/**\n * Get the module html element by data Id.\n * @param moduleDataId The module data Id.\n * @returns {HTMLElement | null} Returns the html module element if module exists. Otherwise, return null.\n */\nexport function getModuleById(moduleDataId: string): HTMLElement | null {\n    if (!moduleDataId) {\n        return null;\n    }\n    const modules = [...Array.from(document.body.querySelectorAll(`[${DATA_ATTRIBUTE}]`))];\n    const foundModule = modules.find(c => getElementDataInfo(<HTMLElement>c).dataInfo.id === moduleDataId);\n    return foundModule ? <HTMLElement>foundModule : null;\n}\n\n/**\n * Get a list of all add module boxes.\n * @returns {ElementDataInfo[]} list of modules.\n */\nexport function getAllAddModuleBoxes(): ElementDataInfo[] {\n    const modules = [...Array.from(document.body.querySelectorAll(`[${DATA_ATTRIBUTE}]`))];\n    return modules.map(m => getElementDataInfo(<HTMLElement>m)).filter(m => m.dataInfo.typeName === EMPTY_SLOT_TYPE_NAME);\n}\n\n/**\n * Get a list of modules by parent data Id and slot data Id.\n * @param parentId The parent data Id.\n * @param slotId The slot Id.\n * @returns {Element[]} list of modules.\n */\nexport function getModulesByParentIdAndSlotId(parentId: string, slotId: string): Element[] {\n    let modules: Element[] = [];\n\n    if (!parentId || !slotId) {\n        return modules;\n    }\n\n    const parentModule = getElementDataInfoById(parentId);\n    if (parentModule.element) {\n        modules = [...Array.from(parentModule.element.querySelectorAll(`[${DATA_ATTRIBUTE}]`))];\n        modules = modules.filter(m => {\n            const dataInfo = getElementDataInfo(<HTMLElement>m).dataInfo;\n            if (dataInfo.parentId === parentId && dataInfo.slotId === slotId && dataInfo.typeName !== EMPTY_SLOT_TYPE_NAME) {\n                return true;\n            }\n            return false;\n        });\n    }\n    return modules;\n}\n\n/**\n * Get the closest module to a specific html element target.\n * @param target The specific html element target.\n * @returns {HTMLElement | null} Returns the html module element if element exists. Otherwise, return null.\n */\nexport function getModuleByTarget(target: HTMLElement): HTMLElement | null {\n    let moduleElement: HTMLElement | null = target;\n    const dataAttribute = moduleElement.getAttribute(DATA_ATTRIBUTE);\n    if (!dataAttribute) {\n        // Returns the closest ancestor which has an attribute equals to DATA_ATTRIBUTE\n        // Gets the closest module to the target\n        moduleElement = moduleElement.closest(`[${DATA_ATTRIBUTE}]`);\n    }\n    return moduleElement;\n}\n\n/**\n * Get data info from the data-i element attribute.\n * @param element The html element.\n * @returns {ElementDataInfo} data info from the data-i element attribute.\n */\nexport function getElementDataInfo(element: HTMLElement | null): ElementDataInfo {\n    if (element) {\n        const dataAttribute = element.getAttribute(DATA_ATTRIBUTE);\n        if (dataAttribute) {\n            const json = dataAttribute.replace(/([^:,{}]+):([^:,{}]+)/g, '\"$1\":\"$2\"');\n            const obj = JSON.parse(json);\n            return {\n                dataInfo: {\n                    id: obj?.id,\n                    parentId: obj?.p,\n                    slotId: obj?.s,\n                    typeName: obj?.t,\n                    friendlyName: obj?.fn,\n                    moduleType: obj?.mt,\n                    isFragment: isElementFragment(element),\n                    isFragmentModule: isElementFragmentModule(element)\n                },\n                element: element\n            };\n        }\n    }\n    return {\n        dataInfo: {\n            id: '',\n            parentId: '',\n            slotId: '',\n            typeName: '',\n            friendlyName: '',\n            moduleType: '',\n            isFragment: false,\n            isFragmentModule: false\n        },\n        element: element\n    };\n}\n\n/**\n * Get the element data info by target.\n * @param target The target html element.\n * @returns {ElementDataInfo} data info from the data-i element attribute.\n */\nexport function getElementDataInfoByTarget(target: HTMLElement): ElementDataInfo {\n    return getElementDataInfo(getModuleByTarget(target));\n}\n\n/**\n * Get the element data info by module Id.\n * @param moduleId The module Id.\n * @returns {ElementDataInfo} data info from the data-i element attribute.\n */\nexport function getElementDataInfoById(moduleId: string): ElementDataInfo {\n    return getElementDataInfo(getModuleById(moduleId));\n}\n\n/**\n * clear the element data info object.\n */\nexport function cleanDataInfo(): ElementDataInfo {\n    return {\n        dataInfo: {\n            id: '',\n            parentId: '',\n            slotId: '',\n            typeName: '',\n            friendlyName: '',\n            moduleType: '',\n            isFragment: false,\n            isFragmentModule: false\n        },\n        element: null\n    };\n}\n\n/**\n * Get rendering helper.\n */\nexport function getRenderingHelper(): IRenderingHelper | undefined {\n    if (\n        // @ts-ignore\n        window._msdyn365.authoringHelper &&\n        // @ts-ignore\n        window._msdyn365.authoringHelper.renderingHelper\n    ) {\n        // @ts-ignore\n        return window._msdyn365.authoringHelper.renderingHelper;\n    }\n}\n\n/**\n * Update the add module inner container class\n * @param addInnerContainer The add module inner container element.\n * @param state The state to where the element classes should be updated to.\n */\nexport function updateAddModuleInnerContainerClass(addInnerContainer: Element, state: AddModuleBoxState = 'Initial'): void {\n    let className = ADD_CONTAINER_CLASS_NAME;\n    switch (state) {\n        case 'InsertModule':\n            className += ` ${ADD_CONTAINER_CLASS_NAME_ON_DRAG_OVER} ${ADD_CONTAINER_CLASS_NAME_ON_DRAGGING_MODULE}`;\n            appendNoPointerEventsToChildren(addInnerContainer);\n            break;\n        case 'InsertFragment':\n            className += ` ${ADD_CONTAINER_CLASS_NAME_ON_DRAG_OVER} ${ADD_CONTAINER_CLASS_NAME_ON_DRAGGING_FRAGMENT}`;\n            appendNoPointerEventsToChildren(addInnerContainer);\n            break;\n        case 'MoveNotAllowed':\n            className += ` ${ADD_CONTAINER_CLASS_NAME_ON_DRAG_OVER} ${ADD_CONTAINER_CLASS_NAME_ON_DRAGGING_NOT_ALLOWED}`;\n            appendNoPointerEventsToChildren(addInnerContainer);\n            break;\n        default:\n            removeNoPointerEventsFromChildren(addInnerContainer);\n    }\n    addInnerContainer.className = className;\n}\n\n/**\n * Set children to have no pointer events.\n * This prevents drag enter event from being triggered for each children in the add module slot\n * @param element the element which children classes should be updated.\n */\nfunction appendNoPointerEventsToChildren(element: Element): void {\n    const elementChildren = Array.from(element.children);\n    elementChildren.map(c => {\n        if (c.className) {\n            if (!c.className.includes(NO_POINTER_EVENTS_CLASS_NAME)) {\n                c.className += ` ${NO_POINTER_EVENTS_CLASS_NAME}`;\n            }\n        } else {\n            c.className = `${NO_POINTER_EVENTS_CLASS_NAME}`;\n        }\n    });\n}\n/**\n * Remove no pointer events class.\n * This will set the children back to their original classes.\n * @param element the element which children classes should be updated.\n */\nfunction removeNoPointerEventsFromChildren(element: Element): void {\n    const elementChildren = Array.from(element.children);\n    elementChildren.map(c => {\n        if (c.className && c.className.includes(NO_POINTER_EVENTS_CLASS_NAME)) {\n            c.className = c.className.replace(NO_POINTER_EVENTS_CLASS_NAME, '').trim();\n        }\n    });\n}\n/**\n * Returns whether or not the element is a fragment container.\n * @param element The html element.\n * @returns {boolean} Whether or not the element is a fragment container.\n */\nfunction isElementFragment(element: HTMLElement): boolean {\n    return !!element.getAttribute(FRAGMENT_ATTRIBUTE);\n}\n\n/**\n * Returns whether or not the element is a fragment module.\n * @param element The html element.\n * @returns {boolean} Whether or not the element is a fragment module.\n */\nfunction isElementFragmentModule(element: HTMLElement): boolean {\n    return !!element.getAttribute(FRAGMENT_MODULE_ATTRIBUTE);\n}\n"],"sourceRoot":""},"metadata":{},"sourceType":"module"}