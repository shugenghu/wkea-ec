{"ast":null,"code":"\"use strict\";/*!\r\n * Copyright (c) Microsoft Corporation.\r\n * All rights reserved. See LICENSE in the project root for license information.\r\n */Object.defineProperty(exports,\"__esModule\",{value:true});var tslib_1=require(\"tslib\");var path_1=tslib_1.__importDefault(require(\"path\"));var io_1=require(\"./io\");exports.isPartnerApp=function(){return process.env.MSDyn365_APP_TYPE&&process.env.MSDyn365_APP_TYPE==='partner';};exports.getPlatformSettings=function(){return io_1.safeReadJsonSync(path_1[\"default\"].resolve(process.cwd(),'src','settings','platform.settings.json'))||{namespaceExtensions:[]};};exports.getSupportedNamespaces=function(){var namespaceExtensions=exports.getPlatformSettings().namespaceExtensions;return namespaceExtensions?['@msdyn365-commerce-modules'].concat(namespaceExtensions):['@msdyn365-commerce-modules'];};","map":{"version":3,"sources":["../../../src/server/app-utils.ts"],"names":[],"mappings":"aAAA;;;AAGG,G,sFAEH,GAAA,CAAA,MAAA,CAAA,OAAA,CAAA,eAAA,CAAA,OAAA,CAAA,MAAA,CAAA,CAAA,CACA,GAAA,CAAA,IAAA,CAAA,OAAA,CAAA,MAAA,CAAA,CAEa,OAAA,CAAA,YAAA,CAAe,UAAA,CACxB,MAAO,CAAA,OAAO,CAAC,GAAR,CAAY,iBAAZ,EAAiC,OAAO,CAAC,GAAR,CAAY,iBAAZ,GAAkC,SAA1E,CACH,CAFY,CAQA,OAAA,CAAA,mBAAA,CAAsB,UAAA,CAC/B,MACI,CAAA,IAAA,CAAA,gBAAA,CAAiB,MAAA,WAAA,CAAK,OAAL,CAAa,OAAO,CAAC,GAAR,EAAb,CAA4B,KAA5B,CAAmC,UAAnC,CAA+C,wBAA/C,CAAjB,GAA8F,CAC1F,mBAAmB,CAAE,EADqE,CADlG,CAKH,CANY,CAQA,OAAA,CAAA,sBAAA,CAAyB,UAAA,CAClC,GAAM,CAAA,mBAAmB,CAAG,OAAA,CAAA,mBAAA,GAAsB,mBAAlD,CACA,MAAO,CAAA,mBAAmB,CAAG,CAAC,4BAAD,EAA+B,MAA/B,CAAsC,mBAAtC,CAAH,CAAgE,CAAC,4BAAD,CAA1F,CACH,CAHY","sourcesContent":["/*!\n * Copyright (c) Microsoft Corporation.\n * All rights reserved. See LICENSE in the project root for license information.\n */\n\nimport path from 'path';\nimport { safeReadJsonSync } from './io';\n\nexport const isPartnerApp = () => {\n    return process.env.MSDyn365_APP_TYPE && process.env.MSDyn365_APP_TYPE === 'partner';\n};\n\nexport interface IPlatformSettings {\n    namespaceExtensions: string[];\n}\n\nexport const getPlatformSettings = (): IPlatformSettings => {\n    return (\n        safeReadJsonSync(path.resolve(process.cwd(), 'src', 'settings', 'platform.settings.json')) || {\n            namespaceExtensions: []\n        }\n    );\n};\n\nexport const getSupportedNamespaces = () => {\n    const namespaceExtensions = getPlatformSettings().namespaceExtensions;\n    return namespaceExtensions ? ['@msdyn365-commerce-modules'].concat(namespaceExtensions) : ['@msdyn365-commerce-modules'];\n};\n"],"sourceRoot":""},"metadata":{},"sourceType":"script"}