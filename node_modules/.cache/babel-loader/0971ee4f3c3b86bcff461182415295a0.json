{"ast":null,"code":"/*!\r\n * Copyright (c) Microsoft Corporation.\r\n * All rights reserved. See LICENSE in the project root for license information.\r\n */import*as React from'react';import{EditableField,FieldType}from'./editable-fields/editable-field';export function getRichTextHtml(text){return text?{__html:text}:undefined;}/**\r\n * Rich text interactive component\r\n */export class RichTextComponent extends React.Component{constructor(props){super(props);this.render=()=>{return/*#__PURE__*/React.createElement(EditableField,{onChange:this.props.editProps?this.props.editProps.onEdit:this.onEdit,requestContext:this.props.editProps&&this.props.editProps.requestContext,fieldProps:{text:this.props.text,className:this.props.className},type:FieldType.RichText});};this.onEdit=event=>null;this.state={html:props.text};}}","map":{"version":3,"sources":["../../../src/utilities/get-richtext-html.tsx"],"names":[],"mappings":"AAAA;;;AAGG,GAEH,MAAO,GAAK,CAAA,KAAZ,KAAuB,OAAvB,CAGA,OAAS,aAAT,CAAwB,SAAxB,KAAyD,kCAAzD,CAQA,MAAM,SAAU,CAAA,eAAV,CAA0B,IAA1B,CAAyC,CAC3C,MAAO,CAAA,IAAI,CAAG,CAAE,MAAM,CAAE,IAAV,CAAH,CAAgC,SAA3C,CACH,CAED;;AAEG,GACH,MAAM,MAAO,CAAA,iBAAP,QAAiC,CAAA,KAAK,CAAC,SAAoB,CAC7D,WAAA,CAAY,KAAZ,CAA4B,CACxB,MAAM,KAAN,EAIG,KAAA,MAAA,CAAS,IAAkB,CAC9B,mBACI,KAAA,CAAA,aAAA,CAAC,aAAD,CAAc,CACV,QAAQ,CAAE,KAAK,KAAL,CAAW,SAAX,CAAuB,KAAK,KAAL,CAAW,SAAX,CAAqB,MAA5C,CAAqD,KAAK,MAD1D,CAEV,cAAc,CAAE,KAAK,KAAL,CAAW,SAAX,EAAwB,KAAK,KAAL,CAAW,SAAX,CAAqB,cAFnD,CAGV,UAAU,CAAE,CACR,IAAI,CAAE,KAAK,KAAL,CAAW,IADT,CAER,SAAS,CAAE,KAAK,KAAL,CAAW,SAFd,CAHF,CAOV,IAAI,CAAE,SAAS,CAAC,QAPN,CAAd,CADJ,CAWH,CAZM,CAcC,KAAA,MAAA,CAAU,KAAD,EAAiC,IAA1C,CAjBJ,KAAK,KAAL,CAAa,CAAE,IAAI,CAAE,KAAK,CAAC,IAAd,CAAb,CACH,CAJ4D","sourcesContent":["/*!\n * Copyright (c) Microsoft Corporation.\n * All rights reserved. See LICENSE in the project root for license information.\n */\n\nimport * as React from 'react';\nimport { ContentEditableEvent } from 'react-contenteditable';\nimport { RichText } from '../interfaces/data-types';\nimport { EditableField, FieldType, ITextEditProps } from './editable-fields/editable-field';\n\nexport interface IRichText {\n    text?: RichText;\n    className?: string;\n    editProps?: ITextEditProps;\n}\n\nexport function getRichTextHtml(text?: RichText): { __html: string } | undefined {\n    return text ? { __html: text as string } : undefined;\n}\n\n/**\n * Rich text interactive component\n */\nexport class RichTextComponent extends React.Component<IRichText> {\n    constructor(props: IRichText) {\n        super(props);\n        this.state = { html: props.text };\n    }\n\n    public render = (): JSX.Element => {\n        return (\n            <EditableField\n                onChange={this.props.editProps ? this.props.editProps.onEdit : this.onEdit} // handle innerHTML change\n                requestContext={this.props.editProps && this.props.editProps.requestContext}\n                fieldProps={{\n                    text: this.props.text as string,\n                    className: this.props.className\n                }}\n                type={FieldType.RichText}\n            />\n        );\n    };\n\n    private onEdit = (event: ContentEditableEvent) => null;\n}\n"],"sourceRoot":""},"metadata":{},"sourceType":"module"}