{"ast":null,"code":"\"use strict\";require(\"core-js/modules/es.regexp.to-string.js\");Object.defineProperty(exports,\"__esModule\",{value:true});var tslib_1=require(\"tslib\");var lodash_1=require(\"lodash\");var React=tslib_1.__importStar(require(\"react\"));var Quantity=function(_super){tslib_1.__extends(Quantity,_super);function Quantity(props){var _this=_super.call(this,props)||this;_this.inputRef=React.createRef();_this._validateMin=function(){var minValue=_this.props.min===undefined?1:_this.props.min;if(isNaN(_this.state.currentInput)||_this.state.currentInput<minValue){_this.setState({currentInput:minValue},function(){_this.props.onChange&&_this.props.onChange(_this.state.currentInput);});}else{_this.props.onChange&&_this.props.onChange(_this.state.currentInput);}};_this.state={currentInput:props.currentCount||1};_this._handleChange=_this._handleChange.bind(_this);return _this;}Quantity.prototype.render=function(){var currentValue=this.state.currentInput;return React.createElement(\"input\",{type:'number',min:this.props.min,className:'msc-quantity-input',pattern:'[0-9]*',value:this.state.currentInput,onChange:this._handleChange,onBlur:this._validateMin,\"aria-live\":'polite',\"aria-label\":\"\"+this.props.inputQuantityAriaLabel,role:'spinbutton',\"aria-valuemin\":this.props.min,\"aria-valuemax\":this.props.max,\"aria-valuenow\":currentValue,id:this.props.id,ref:this.inputRef});};Quantity.prototype._handleChange=function(e){var _this=this;var currentValue=parseInt(e.target.value,10);var minValue=this.props.min===undefined?1:this.props.min;var inputElement=this.inputRef&&this.inputRef.current&&this.inputRef.current instanceof HTMLInputElement&&this.inputRef.current;if(currentValue>this.props.max){this.setState({currentInput:this.props.max},function(){lodash_1.debounce(function(){_this.props.onChange&&_this.props.onChange(_this.state.currentInput);},200)();});}else{this.setState({currentInput:currentValue},function(){lodash_1.debounce(function(){if(!isNaN(_this.state.currentInput)&&!(_this.state.currentInput<minValue)){_this.props.onChange&&_this.props.onChange(_this.state.currentInput);if(inputElement){inputElement.setAttribute('aria-valuenow',currentValue.toString());inputElement.setAttribute('value',currentValue.toString());}}},200)();});}};Quantity.defaultProps={min:1};return Quantity;}(React.PureComponent);exports.default=Quantity;","map":{"version":3,"sources":["/Users/User/Documents/wkea-ec/Msdyn365.Commerce.Online/node_modules/@msdyn365-commerce-modules/utilities/src/quantity/Quantity.tsx"],"names":[],"mappings":"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","sourcesContent":["import { debounce } from 'lodash';\nimport * as React from 'react';\nimport { IQuantityProps } from './Quantity.props';\n\ninterface IQuantityState {\n    currentInput: number;\n}\n/**\n * Quantity Component - This component is used to allow input of quantity between a\n * range of values\n */\n\nexport default class Quantity extends React.PureComponent<IQuantityProps, IQuantityState> {\n    public static defaultProps: Partial<IQuantityProps> = {\n        min: 1\n    };\n\n    private inputRef: React.RefObject<HTMLInputElement> = React.createRef<HTMLInputElement>();\n\n    constructor(props: IQuantityProps) {\n        super(props);\n        this.state = { currentInput: props.currentCount || 1 };\n        this._handleChange = this._handleChange.bind(this);\n    }\n\n    public render(): JSX.Element {\n        const currentValue = this.state.currentInput;\n\n        return (\n            <input\n                type='number'\n                min={this.props.min}\n                className='msc-quantity-input'\n                pattern='[0-9]*'\n                value={this.state.currentInput}\n                onChange={this._handleChange}\n                onBlur={this._validateMin}\n                aria-live='polite'\n                aria-label={`${this.props.inputQuantityAriaLabel}`}\n                role='spinbutton'\n                aria-valuemin={this.props.min}\n                aria-valuemax={this.props.max}\n                aria-valuenow={currentValue}\n                id={this.props.id}\n                ref={this.inputRef}\n            />\n        );\n    }\n\n    private _handleChange(e: React.ChangeEvent<HTMLInputElement>): void {\n        const currentValue = parseInt((e.target.value), 10);\n        const minValue = this.props.min === undefined ? 1 : this.props.min;\n        const inputElement = this.inputRef && this.inputRef.current && this.inputRef.current instanceof HTMLInputElement && this.inputRef.current;\n\n        if (currentValue > this.props.max) {\n            this.setState(\n                { currentInput: this.props.max },\n                () => {\n                    debounce(\n                        () => {\n                            this.props.onChange && this.props.onChange(this.state.currentInput);\n                        },\n                        200)();\n                }\n            );\n        } else {\n                this.setState(\n                    { currentInput: currentValue },\n                    () => {\n                        debounce(\n                            () => {\n                                if(!isNaN(this.state.currentInput) && !(this.state.currentInput < minValue)) {\n                                    this.props.onChange && this.props.onChange(this.state.currentInput);\n\n                                    if (inputElement) {\n                                        inputElement.setAttribute('aria-valuenow', currentValue.toString());\n                                        inputElement.setAttribute('value', currentValue.toString());\n                                    }\n                                }\n                            },\n                            200)();\n                    }\n                );\n        }\n    }\n\n    private _validateMin = (): void => {\n        const minValue = this.props.min === undefined ? 1 : this.props.min;\n        if(isNaN(this.state.currentInput) || (this.state.currentInput < minValue)) {\n            this.setState({ currentInput: minValue }, () => { this.props.onChange && this.props.onChange(this.state.currentInput); });\n        } else {\n            this.props.onChange && this.props.onChange(this.state.currentInput);\n        }\n    }\n}"]},"metadata":{},"sourceType":"script"}