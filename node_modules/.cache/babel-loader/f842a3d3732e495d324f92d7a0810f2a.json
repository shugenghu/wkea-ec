{"ast":null,"code":"/*!\r\n * Copyright (c) Microsoft Corporation.\r\n * All rights reserved. See LICENSE in the project root for license information.\r\n */import React from'react';import{EditableField,FieldType}from'./editable-fields/editable-field';/**\r\n * Component class for action links\r\n */export class Links extends React.Component{constructor(props){super(props);this.render=()=>{if(this.props.links&&this.props.links.length>0){return/*#__PURE__*/React.createElement(React.Fragment,null,this.props.links.map((l,i)=>{var _this$props$editProps,_this$props$editProps2;return/*#__PURE__*/React.createElement(EditableField,{requestContext:(_this$props$editProps=this.props.editProps)===null||_this$props$editProps===void 0?void 0:_this$props$editProps.requestContext,type:FieldType.Link,onChange:(_this$props$editProps2=this.props.editProps)!==null&&_this$props$editProps2!==void 0&&_this$props$editProps2.onTextChange?this.props.editProps.onTextChange(i):event=>null,fieldProps:{title:l.linkText,text:l.linkText,key:l.key||l.linkUrl,openInNewTab:l.openInNewTab,className:l.className||(i===0?'msc-cta__primary':'msc-cta__secondary'),href:l.linkUrl,role:l.role||'button',ariaLabel:l.ariaLabel,onClick:l.onClick,additionalProperties:l.additionalProperties,linkTag:l.linkTag,innerClassName:l.innerClassName}});}));}return null;};}}","map":{"version":3,"sources":["../../../src/utilities/links.tsx"],"names":[],"mappings":"AAAA;;;AAGG,GACH,MAAO,CAAA,KAAP,KAAkB,OAAlB,CAGA,OAAS,aAAT,CAAwB,SAAxB,KAAyC,kCAAzC,CA2BA;;AAEG,GACH,MAAM,MAAO,CAAA,KAAP,QAAqB,CAAA,KAAK,CAAC,SAAqB,CAClD,WAAA,CAAY,KAAZ,CAA6B,CACzB,MAAM,KAAN,EAGG,KAAA,MAAA,CAAS,IAAyB,CACrC,GAAI,KAAK,KAAL,CAAW,KAAX,EAAoB,KAAK,KAAL,CAAW,KAAX,CAAiB,MAAjB,CAA0B,CAAlD,CAAqD,CACjD,mBACI,KAAA,CAAA,aAAA,CAAA,KAAA,CAAA,QAAA,CAAA,IAAA,CACK,KAAK,KAAL,CAAW,KAAX,CAAiB,GAAjB,CAAqB,CAAC,CAAD,CAAI,CAAJ,wEAClB,KAAA,CAAA,aAAA,CAAC,aAAD,CAAc,CACV,cAAc,wBAAE,KAAK,KAAL,CAAW,SAAb,gDAAE,sBAAsB,cAD5B,CAEV,IAAI,CAAE,SAAS,CAAC,IAFN,CAGV,QAAQ,CACJ,6BAAK,KAAL,CAAW,SAAX,kEAAsB,YAAtB,CACM,KAAK,KAAL,CAAW,SAAX,CAAqB,YAArB,CAAkC,CAAlC,CADN,CAEO,KAAD,EAAiC,IANjC,CAQV,UAAU,CAAE,CACR,KAAK,CAAE,CAAC,CAAC,QADD,CAER,IAAI,CAAE,CAAC,CAAC,QAFA,CAGR,GAAG,CAAE,CAAC,CAAC,GAAF,EAAS,CAAC,CAAC,OAHR,CAIR,YAAY,CAAE,CAAC,CAAC,YAJR,CAKR,SAAS,CAAE,CAAC,CAAC,SAAF,GAAgB,CAAC,GAAK,CAAN,CAAU,kBAAV,CAA+B,oBAA/C,CALH,CAMR,IAAI,CAAE,CAAC,CAAC,OANA,CAOR,IAAI,CAAE,CAAC,CAAC,IAAF,EAAU,QAPR,CAQR,SAAS,CAAE,CAAC,CAAC,SARL,CASR,OAAO,CAAE,CAAC,CAAC,OATH,CAUR,oBAAoB,CAAE,CAAC,CAAC,oBAVhB,CAWR,OAAO,CAAE,CAAC,CAAC,OAXH,CAYR,cAAc,CAAE,CAAC,CAAC,cAZV,CARF,CAAd,CADkB,EAArB,CADL,CADJ,CA6BH,CACD,MAAO,KAAP,CACH,CAjCM,CAFN,CAHiD","sourcesContent":["/*!\n * Copyright (c) Microsoft Corporation.\n * All rights reserved. See LICENSE in the project root for license information.\n */\nimport React from 'react';\nimport { ContentEditableEvent } from 'react-contenteditable';\nimport { IDictionary, IRequestContext } from '../interfaces';\nimport { EditableField, FieldType } from './editable-fields/editable-field';\n\nexport interface ILinksData {\n    linkText?: string;\n    ariaLabel?: string;\n    openInNewTab?: boolean;\n    linkUrl?: string;\n    className?: string;\n    key?: string;\n    role?: string;\n    additionalProperties?: IDictionary<string>;\n    innerClassName?: string;\n    linkTag?: string;\n    onClick?(ev: React.SyntheticEvent): void;\n}\n\nexport interface ILinkEditProps {\n    requestContext: IRequestContext;\n\n    onTextChange?(index: number): (event: ContentEditableEvent) => void;\n}\n\nexport interface ILinkProps {\n    links: ILinksData[];\n    editProps?: ILinkEditProps;\n}\n\n/**\n * Component class for action links\n */\nexport class Links extends React.Component<ILinkProps> {\n    constructor(props: ILinkProps) {\n        super(props);\n    }\n\n    public render = (): JSX.Element | null => {\n        if (this.props.links && this.props.links.length > 0) {\n            return (\n                <>\n                    {this.props.links.map((l, i) => (\n                        <EditableField\n                            requestContext={this.props.editProps?.requestContext}\n                            type={FieldType.Link}\n                            onChange={\n                                this.props.editProps?.onTextChange\n                                    ? this.props.editProps.onTextChange(i)\n                                    : (event: ContentEditableEvent) => null\n                            }\n                            fieldProps={{\n                                title: l.linkText,\n                                text: l.linkText,\n                                key: l.key || l.linkUrl,\n                                openInNewTab: l.openInNewTab,\n                                className: l.className || (i === 0 ? 'msc-cta__primary' : 'msc-cta__secondary'),\n                                href: l.linkUrl,\n                                role: l.role || 'button',\n                                ariaLabel: l.ariaLabel,\n                                onClick: l.onClick,\n                                additionalProperties: l.additionalProperties,\n                                linkTag: l.linkTag,\n                                innerClassName: l.innerClassName\n                            }}\n                        />\n                    ))}\n                </>\n            );\n        }\n        return null;\n    };\n}\n"],"sourceRoot":""},"metadata":{},"sourceType":"module"}