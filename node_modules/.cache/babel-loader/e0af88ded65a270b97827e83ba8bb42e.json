{"ast":null,"code":"import _defineProperty from\"@babel/runtime/helpers/esm/defineProperty\";import _typeof from\"@babel/runtime/helpers/esm/typeof\";import _pick2 from\"lodash/pick\";import _mergeWith2 from\"lodash/mergeWith\";function ownKeys(object,enumerableOnly){var keys=Object.keys(object);if(Object.getOwnPropertySymbols){var symbols=Object.getOwnPropertySymbols(object);if(enumerableOnly)symbols=symbols.filter(function(sym){return Object.getOwnPropertyDescriptor(object,sym).enumerable;});keys.push.apply(keys,symbols);}return keys;}function _objectSpread(target){for(var i=1;i<arguments.length;i++){var source=arguments[i]!=null?arguments[i]:{};if(i%2){ownKeys(Object(source),true).forEach(function(key){_defineProperty(target,key,source[key]);});}else if(Object.getOwnPropertyDescriptors){Object.defineProperties(target,Object.getOwnPropertyDescriptors(source));}else{ownKeys(Object(source)).forEach(function(key){Object.defineProperty(target,key,Object.getOwnPropertyDescriptor(source,key));});}}return target;}/*!\r\n * Copyright (c) Microsoft Corporation.\r\n * All rights reserved. See LICENSE in the project root for license information.\r\n */ // tslint:disable: prefer-object-spread - needed to preserve proto properties\nimport msdyn365Commerce,{tryParseInt}from'@msdyn365-commerce/core-internal';import{EXCEPTION_PAGECONFIG,LogLevel}from'@msdyn365-commerce/telemetry-internal';import{CookieContext}from'../utils/cookie-utils';import{getFlattenedListOfModules}from'../utils/get-modules-flat-list';import{getAbsoluteUri,isTruthy,parseItemQSP,parseToQSPObject}from'../utils/helpers';import{populateApiSettingsFromQSP}from'../utils/query-utils';import{SessionStorageContext}from'../utils/session-storage-utils';/**\r\n * Returns default values for platform-provided page config values that all pages will have\r\n *\r\n * Default values are provided to avoid to avoid having to type check everything later\r\n */export var getDefaultPageConfig=function getDefaultPageConfig(){return{className:undefined,pageTheme:undefined};};export var getDefaultAppSettings=function getDefaultAppSettings(){return{config:{},routes:{}};};var getFromReq=function getFromReq(namespaceKey,disallow){return function(req){return Object.keys(req[namespaceKey]).reduce(function(memo,key){if(key&&!disallow.has(key.toLowerCase())){memo[key]=req[namespaceKey][key];}return memo;// tslint:disable-next-line:align\n},{});};};var apiSettingsMergeCustomizer=function apiSettingsMergeCustomizer(requestApiSetting,renderingApiSetting){if(_typeof(requestApiSetting)==='object'){return _mergeWith2(requestApiSetting,renderingApiSetting,apiSettingsMergeCustomizer);}return requestApiSetting?requestApiSetting:renderingApiSetting;};var getLocale=function getLocale(requestContext,renderingContext){var locale=renderingContext.query?renderingContext.query.locale:undefined;if(process.env.NODE_ENV==='development'&&requestContext.query){locale=requestContext.query.locale||locale;}return locale;};export var getHeaders=getFromReq('headers',new Set(['authorization','x-client-ip','x-client-port','sec-fetch-site','sec-fetch-mode','sec-fetch-user','sec-fetch-dest','x-forwarded-for','x-azure-clientip','x-azure-ref','x-forwarded-host','x-forwarded-proto','x-azure-requestchain','x-azure-socketip','x-azure-fdid','x-waws-unencoded-url','client-ip','x-arr-log-id','disguised-host','x-site-deployment-id','was-default-hostname','x-original-url','x-arr-ssl','x-appservice-proto','x-forwarded-tlsversion','appex-activity-id','x-ms-client-principal-name','x-ms-client-principal-id','x-ms-client-principal-idp','x-ms-client-principal','ms-cv']));// tslint:disable-next-line:cyclomatic-complexity\nexport var parseRequest=function parseRequest(req){var apiSettingsFromEnv={baseUrl:process.env.MSDyn365Commerce_BASEURL||'',channelId:tryParseInt(process.env.MSDyn365Commerce_CHANNELID)||0,catalogId:tryParseInt(process.env.MSDyn365Commerce_CATALOGID)||0,oun:process.env.MSDyn365Commerce_OUN||'',baseImageUrl:process.env.MSDyn365Commerce_BASEIMAGEURL||'',ratingsReviewsEndpoint:process.env.MSDyn365Commerce_RATINGSREVIEWSENDPOINT||'',retailServerProxyVersion:process.env.MSDyn365Commerce_RSVERSION||'',rnr:{proxyUrl:process.env.MSDyn365Commerce_RATINGSREVIEWS_PROXYURL||'',url:process.env.MSDyn365Commerce_RATINGSREVIEWS_URL||'',id:process.env.MSDyn365Commerce_RATINGSREVIEWS_ID||''}};var concatJs=parseToQSPObject(req.query.concatJs);var serverProperties=Object.create({headers:getHeaders(req)});return Object.assign(serverProperties,{url:{requestUrl:new URL(getAbsoluteUri(req)),staticCdnUrl:\"\".concat(req.protocol,\"://\").concat(req.get('host'),\"/\")},urlTokens:{},locale:'',market:'',textDirection:'',sitePath:req.query&&req.query.sitePath,device:{Type:'pc'},user:{token:'',isAuthenticated:false},app:{},query:req.query||undefined,apiSettings:apiSettingsFromEnv,operationId:'',params:{mock:req.query&&req.query.mock?req.query.mock.toString():'',isDebug:req.query&&isTruthy(req.query.debug),isEditor:req.query&&isTruthy(req.query.editorial),isPreview:req.query&&isTruthy(req.query.preview),concatJs:concatJs.hasValue?concatJs:{hasValue:true,isTruthy:false,value:false},theme:req.query&&req.query.theme},features:{// initialize default empty set of features\n},pageData:{},_debug:{commerceSDKVersion:process.env.MSDyn365Commerce_SDK_VERSION||'',commerceSSKVersion:process.env.MSDyn365Commerce_SSK_VERSION||'',retailProxyVersion:process.env.MSDyn365Commerce_RSVERSION||''},themeOverride:{url:req.query.themeOverride||'',disableDefault:req.query.disableDefaultSiteTheme||false},telemetrySettings:{eventHubEndPoint:'',eventHubAuthToken:'',optOutWebActivityTracking:false,operationId:'',instrumentationKey:'',environmentId:'Development'}});};export var mergeSwtichFromPlatformSettingsWithFeatureSwitch=function mergeSwtichFromPlatformSettingsWithFeatureSwitch(requestContext){// add local flag in platform settings to feature switch if feature switch does not have those.\n// feature switch will take priority of controlling  the behavior.\nvar platformSettings=msdyn365Commerce.platformSettings;var enableUrlLocalization=requestContext.features.enableUrlLocalization||platformSettings&&platformSettings.enableUrlLocalization||false;var enableUrlEncoding=requestContext.features.enableUrlEncoding||platformSettings&&platformSettings.enableUrlEncoding||false;requestContext.features.enableUrlEncoding=enableUrlEncoding;requestContext.features.enableUrlLocalization=enableUrlLocalization;return requestContext;};// tslint:disable-next-line:cyclomatic-complexity max-func-body-length\nexport var mapRequestContextWithRenderingContext=function mapRequestContextWithRenderingContext(req,requestContext,renderingContext){var _mergedRequestContext,_mergedRequestContext2;var appContext=arguments.length>3&&arguments[3]!==undefined?arguments[3]:getDefaultAppSettings();var pageConfig=arguments.length>4&&arguments[4]!==undefined?arguments[4]:getDefaultPageConfig();var disableCookieCompliance=appContext&&appContext.platform&&appContext.platform.disableCookieCompliance||false;var cartCookieExpiration=appContext&&appContext.config&&appContext.config.cartSessionExpiration||0;var cookieContext=new CookieContext({req:req,isConsentRequired:!disableCookieCompliance,cartExpirationInDays:cartCookieExpiration,sameSiteRequired:renderingContext.sameSiteRequired});var serverProperties=Object.create({headers:requestContext.headers,cookies:cookieContext,sessionStorage:new SessionStorageContext(cookieContext)});if(!renderingContext){return Object.assign(serverProperties,requestContext);}var itemQuery={};var mergedRequestContext=Object.assign(serverProperties,requestContext,renderingContext);// Extra merge here required because spread operator only does shallow merge\nmergedRequestContext.apiSettings=process.env.NODE_ENV==='development'?_mergeWith2(requestContext.apiSettings,renderingContext.apiSettings,apiSettingsMergeCustomizer):_objectSpread(_objectSpread({},requestContext.apiSettings),renderingContext.apiSettings);mergedRequestContext.stylePresets=requestContext.siteStylePreset||renderingContext.siteStylePreset;if(renderingContext.staticContext&&renderingContext.staticContext.staticCdnUrl){mergedRequestContext.url.staticCdnUrl=renderingContext.staticContext.staticCdnUrl;}if(renderingContext.requestUrl){// TODO - remove http check after fixing all mocks\nmergedRequestContext.url.requestUrl=new URL(renderingContext.requestUrl.startsWith('http')?renderingContext.requestUrl:\"https://\".concat(renderingContext.requestUrl));}if(mergedRequestContext.query){itemQuery=parseItemQSP(mergedRequestContext.query.item);var concatJs=parseToQSPObject(itemQuery.concatJs);mergedRequestContext.params=_objectSpread(_objectSpread({},requestContext.params),{},{mock:mergedRequestContext.query.mock||mergedRequestContext.params.mock,isDebug:isTruthy(mergedRequestContext.query.debug)||mergedRequestContext.params.isDebug,isEditor:isTruthy(mergedRequestContext.query.editorial)||isTruthy(itemQuery.editorial)||mergedRequestContext.params.isEditor,isPreview:isTruthy(mergedRequestContext.query.preview)||mergedRequestContext.params.isPreview,concatJs:concatJs.hasValue?concatJs:mergedRequestContext.params.concatJs,theme:itemQuery.theme||mergedRequestContext.query.theme||pageConfig.pageTheme||mergedRequestContext.params.theme});}if(mergedRequestContext.clientContext){mergedRequestContext.device={Type:mergedRequestContext.clientContext.deviceType||mergedRequestContext.device.Type};}if(mergedRequestContext.userContext){mergedRequestContext.user=_objectSpread(_objectSpread({},mergedRequestContext.user),mergedRequestContext.userContext);}mergedRequestContext.app=appContext;// tslint:disable-next-line:no-any\nvar apiSettings=_pick2(_objectSpread(_objectSpread({},itemQuery),mergedRequestContext.query),['oun','baseUrl','baseImageUrl','rsVersion','rnrUrl','channelId','catalogId','rnrId']);populateApiSettingsFromQSP(apiSettings,mergedRequestContext);mergedRequestContext.apiSettings.channelId=+mergedRequestContext.apiSettings.channelId;// Override the locale with locale query string if given\nmergedRequestContext.locale=getLocale(requestContext,renderingContext)||mergedRequestContext.locale;if(renderingContext.themeOverride){mergedRequestContext.themeOverride=_objectSpread(_objectSpread({},requestContext.themeOverride),renderingContext.themeOverride);}// add node specific telemetry settings\nif(process.env.APPINSIGHTS_INSTRUMENTATIONKEY){mergedRequestContext.telemetrySettings.instrumentationKey=process.env.APPINSIGHTS_INSTRUMENTATIONKEY;}if(process.env.NODE_ENV!=='development'){if(!mergedRequestContext.telemetrySettings.environmentId){mergedRequestContext.telemetrySettings.environmentId=(process.env.Fabric_ApplicationName||'-').slice((process.env.Fabric_ApplicationName||'-').indexOf('-')+1);}if(!mergedRequestContext.telemetrySettings.commerceCoreEnvId&&process.env.CommerceCore_EnvironmentId){mergedRequestContext.telemetrySettings.commerceCoreEnvId=process.env.CommerceCore_EnvironmentId;}}// Add information about selected connectors\nmergedRequestContext.connectors=addConnectorInformation();mergedRequestContext.telemetryData=mergedRequestContext.telemetryData||{};// Create a mapping of module id to the experiment it is assocaited with\nvar moduleIdToExperimentId={};if(((_mergedRequestContext=mergedRequestContext.experiments)===null||_mergedRequestContext===void 0?void 0:(_mergedRequestContext2=_mergedRequestContext.activeExperiments)===null||_mergedRequestContext2===void 0?void 0:_mergedRequestContext2.length)>0){var activeExperiments=mergedRequestContext.experiments.activeExperiments;for(var i=0;i<activeExperiments.length;i++){var currentExperiment=activeExperiments[i];if(currentExperiment.moduleId){moduleIdToExperimentId[currentExperiment.moduleId]=currentExperiment.experimentId;}}mergedRequestContext.experiments.moduleIdToExperimentIdMap=moduleIdToExperimentId;}return mergedRequestContext;};var addConnectorInformation=function addConnectorInformation(){var connectors={};if(msdyn365Commerce.experimentationConnector){connectors.expConnector=msdyn365Commerce.experimentationConnector.name;}return connectors;};export var getBodyConfig=function getBodyConfig(pageResponse){return pageResponse&&pageResponse.pageRoot&&pageResponse.pageRoot.modules&&pageResponse.pageRoot.modules.body&&pageResponse.pageRoot.modules.body[0]?pageResponse.pageRoot.modules.body[0].config:{};};export var getPageConfig=function getPageConfig(pageResponse,telemetry){try{if(!pageResponse||!pageResponse.pageRoot){return getDefaultPageConfig();}if(!pageResponse.slots||!pageResponse.slots.length){pageResponse.slots=getFlattenedListOfModules(pageResponse);}// TODO: Figure out the body slot once we have head slots\nvar bodySlot=pageResponse.pageRoot.modules&&pageResponse.pageRoot.modules.body?pageResponse.pageRoot.modules.body[0]:pageResponse.slots[0];var bodyConfig=bodySlot?bodySlot.config:{};return Object.assign(getDefaultPageConfig(),bodyConfig);}catch(e){telemetry.log(LogLevel.Error,EXCEPTION_PAGECONFIG,{exception:e});throw new Error(e);}};","map":{"version":3,"sources":["../../../src/_server/parse-request.ts"],"names":[],"mappings":"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","sourcesContent":["/*!\n * Copyright (c) Microsoft Corporation.\n * All rights reserved. See LICENSE in the project root for license information.\n */\n// tslint:disable: prefer-object-spread - needed to preserve proto properties\nimport msdyn365Commerce, {\n    IAppSettings,\n    ICommerceApiSettings,\n    IConnectorParams,\n    IDictionary,\n    IPageConfig,\n    IPageResponse,\n    IRenderingContext,\n    IRequestContext,\n    tryParseInt\n} from '@msdyn365-commerce/core-internal';\nimport { asSystemMetadata, EXCEPTION_PAGECONFIG, IInternalTelemetry, LogLevel } from '@msdyn365-commerce/telemetry-internal';\nimport { Request } from 'express';\nimport { mergeWith as _mergeWith, pick as _pick } from 'lodash';\nimport { CookieContext } from '../utils/cookie-utils';\nimport { getFlattenedListOfModules } from '../utils/get-modules-flat-list';\nimport { getAbsoluteUri, isTruthy, parseItemQSP, parseToQSPObject } from '../utils/helpers';\nimport { populateApiSettingsFromQSP } from '../utils/query-utils';\nimport { SessionStorageContext } from '../utils/session-storage-utils';\n\n/**\n * Returns default values for platform-provided page config values that all pages will have\n *\n * Default values are provided to avoid to avoid having to type check everything later\n */\nexport const getDefaultPageConfig = (): IPageConfig => ({\n    className: undefined,\n    pageTheme: undefined\n});\n\nexport const getDefaultAppSettings = (): IAppSettings => {\n    return {\n        config: {},\n        routes: {}\n    };\n};\n\nconst getFromReq = (namespaceKey: string, disallow: Set<string>) => {\n    return (req: Request) => {\n        return Object.keys(req[namespaceKey]).reduce((memo, key) => {\n            if (key && !disallow.has(key.toLowerCase())) {\n                memo[key] = req[namespaceKey][key];\n            }\n            return memo;\n            // tslint:disable-next-line:align\n        }, {});\n    };\n};\n\nconst apiSettingsMergeCustomizer = (requestApiSetting: unknown, renderingApiSetting: unknown) => {\n    if (typeof requestApiSetting === 'object') {\n        return _mergeWith(requestApiSetting, renderingApiSetting, apiSettingsMergeCustomizer);\n    }\n    return requestApiSetting ? requestApiSetting : renderingApiSetting;\n};\n\nconst getLocale = (requestContext: IRequestContext, renderingContext: IRenderingContext) => {\n    let locale = renderingContext.query ? renderingContext.query.locale : undefined;\n\n    if (process.env.NODE_ENV === 'development' && requestContext.query) {\n        locale = requestContext.query.locale || locale;\n    }\n\n    return locale;\n};\n\nexport const getHeaders = getFromReq(\n    'headers',\n    new Set<string>([\n        'authorization',\n        'x-client-ip',\n        'x-client-port',\n        'sec-fetch-site',\n        'sec-fetch-mode',\n        'sec-fetch-user',\n        'sec-fetch-dest',\n        'x-forwarded-for',\n        'x-azure-clientip',\n        'x-azure-ref',\n        'x-forwarded-host',\n        'x-forwarded-proto',\n        'x-azure-requestchain',\n        'x-azure-socketip',\n        'x-azure-fdid',\n        'x-waws-unencoded-url',\n        'client-ip',\n        'x-arr-log-id',\n        'disguised-host',\n        'x-site-deployment-id',\n        'was-default-hostname',\n        'x-original-url',\n        'x-arr-ssl',\n        'x-appservice-proto',\n        'x-forwarded-tlsversion',\n        'appex-activity-id',\n        'x-ms-client-principal-name',\n        'x-ms-client-principal-id',\n        'x-ms-client-principal-idp',\n        'x-ms-client-principal',\n        'ms-cv'\n    ])\n);\n\n// tslint:disable-next-line:cyclomatic-complexity\nexport const parseRequest = (req: Request): IRequestContext => {\n    const apiSettingsFromEnv: ICommerceApiSettings = {\n        baseUrl: process.env.MSDyn365Commerce_BASEURL || '',\n        channelId: tryParseInt(process.env.MSDyn365Commerce_CHANNELID) || 0,\n        catalogId: tryParseInt(process.env.MSDyn365Commerce_CATALOGID) || 0,\n        oun: process.env.MSDyn365Commerce_OUN || '',\n        baseImageUrl: process.env.MSDyn365Commerce_BASEIMAGEURL || '',\n        ratingsReviewsEndpoint: process.env.MSDyn365Commerce_RATINGSREVIEWSENDPOINT || '',\n        retailServerProxyVersion: process.env.MSDyn365Commerce_RSVERSION || '',\n        rnr: {\n            proxyUrl: process.env.MSDyn365Commerce_RATINGSREVIEWS_PROXYURL || '',\n            url: process.env.MSDyn365Commerce_RATINGSREVIEWS_URL || '',\n            id: process.env.MSDyn365Commerce_RATINGSREVIEWS_ID || ''\n        }\n    };\n\n    const concatJs = parseToQSPObject(req.query.concatJs);\n    const serverProperties = Object.create({\n        headers: getHeaders(req)\n    });\n\n    return Object.assign(serverProperties, {\n        url: {\n            requestUrl: new URL(getAbsoluteUri(req)),\n            staticCdnUrl: `${req.protocol}://${req.get('host')}/`\n        },\n        urlTokens: {},\n        locale: '',\n        market: '',\n        textDirection: '',\n        sitePath: req.query && req.query.sitePath,\n        device: {\n            Type: 'pc'\n        },\n        user: {\n            token: '',\n            isAuthenticated: false\n        },\n        app: {},\n        query: req.query || undefined,\n        apiSettings: apiSettingsFromEnv,\n        operationId: '',\n        params: {\n            mock: req.query && req.query.mock ? req.query.mock.toString() : '',\n            isDebug: req.query && isTruthy(req.query.debug),\n            isEditor: req.query && isTruthy(req.query.editorial),\n            isPreview: req.query && isTruthy(req.query.preview),\n            concatJs: concatJs.hasValue\n                ? concatJs\n                : {\n                      hasValue: true,\n                      isTruthy: false,\n                      value: false\n                  },\n            theme: req.query && req.query.theme\n        },\n        features: {\n            // initialize default empty set of features\n        },\n        pageData: {},\n        _debug: {\n            commerceSDKVersion: process.env.MSDyn365Commerce_SDK_VERSION || '',\n            commerceSSKVersion: process.env.MSDyn365Commerce_SSK_VERSION || '',\n            retailProxyVersion: process.env.MSDyn365Commerce_RSVERSION || ''\n        },\n        themeOverride: {\n            url: req.query.themeOverride || '',\n            disableDefault: req.query.disableDefaultSiteTheme || false\n        },\n        telemetrySettings: {\n            eventHubEndPoint: '',\n            eventHubAuthToken: '',\n            optOutWebActivityTracking: false,\n            operationId: '',\n            instrumentationKey: '',\n            environmentId: 'Development'\n        }\n    });\n};\n\nexport const mergeSwtichFromPlatformSettingsWithFeatureSwitch = (requestContext: IRequestContext) => {\n    // add local flag in platform settings to feature switch if feature switch does not have those.\n    // feature switch will take priority of controlling  the behavior.\n    const platformSettings = msdyn365Commerce.platformSettings;\n    const enableUrlLocalization =\n        requestContext.features.enableUrlLocalization || (platformSettings && platformSettings.enableUrlLocalization) || false;\n    const enableUrlEncoding =\n        requestContext.features.enableUrlEncoding || (platformSettings && platformSettings.enableUrlEncoding) || false;\n    requestContext.features.enableUrlEncoding = enableUrlEncoding;\n    requestContext.features.enableUrlLocalization = enableUrlLocalization;\n    return requestContext;\n};\n\n// tslint:disable-next-line:cyclomatic-complexity max-func-body-length\nexport const mapRequestContextWithRenderingContext = (\n    req: Request,\n    requestContext: IRequestContext,\n    renderingContext: IRenderingContext,\n    appContext: IAppSettings = getDefaultAppSettings(),\n    pageConfig: IPageConfig = getDefaultPageConfig()\n) => {\n    const disableCookieCompliance = (appContext && appContext.platform && appContext.platform.disableCookieCompliance) || false;\n    const cartCookieExpiration = (appContext && appContext.config && appContext.config.cartSessionExpiration) || 0;\n    const cookieContext = new CookieContext({\n        req,\n        isConsentRequired: !disableCookieCompliance,\n        cartExpirationInDays: cartCookieExpiration,\n        sameSiteRequired: renderingContext.sameSiteRequired\n    });\n\n    const serverProperties = Object.create({\n        headers: requestContext.headers,\n        cookies: cookieContext,\n        sessionStorage: new SessionStorageContext(cookieContext)\n    });\n\n    if (!renderingContext) {\n        return Object.assign(serverProperties, requestContext);\n    }\n\n    let itemQuery: IDictionary<string> = {};\n    const mergedRequestContext = Object.assign(serverProperties, requestContext, renderingContext);\n\n    // Extra merge here required because spread operator only does shallow merge\n    mergedRequestContext.apiSettings =\n        process.env.NODE_ENV === 'development'\n            ? _mergeWith(requestContext.apiSettings, renderingContext.apiSettings, apiSettingsMergeCustomizer)\n            : { ...requestContext.apiSettings, ...renderingContext.apiSettings };\n\n    mergedRequestContext.stylePresets = requestContext.siteStylePreset || renderingContext.siteStylePreset;\n\n    if (renderingContext.staticContext && renderingContext.staticContext.staticCdnUrl) {\n        mergedRequestContext.url.staticCdnUrl = renderingContext.staticContext.staticCdnUrl;\n    }\n\n    if (renderingContext.requestUrl) {\n        // TODO - remove http check after fixing all mocks\n        mergedRequestContext.url.requestUrl = new URL(\n            renderingContext.requestUrl.startsWith('http') ? renderingContext.requestUrl : `https://${renderingContext.requestUrl}`\n        );\n    }\n\n    if (mergedRequestContext.query) {\n        itemQuery = parseItemQSP(mergedRequestContext.query.item);\n        const concatJs = parseToQSPObject(itemQuery.concatJs);\n        mergedRequestContext.params = {\n            // default merge so that any switch related QSPs will be merged here and we don't have to explicitly set\n            ...requestContext.params,\n            mock: mergedRequestContext.query.mock || mergedRequestContext.params.mock,\n            isDebug: isTruthy(mergedRequestContext.query.debug) || mergedRequestContext.params.isDebug,\n            isEditor:\n                isTruthy(mergedRequestContext.query.editorial) || isTruthy(itemQuery.editorial) || mergedRequestContext.params.isEditor,\n            isPreview: isTruthy(mergedRequestContext.query.preview) || mergedRequestContext.params.isPreview,\n            concatJs: concatJs.hasValue ? concatJs : mergedRequestContext.params.concatJs,\n            theme: itemQuery.theme || mergedRequestContext.query.theme || pageConfig.pageTheme || mergedRequestContext.params.theme\n        };\n    }\n\n    if (mergedRequestContext.clientContext) {\n        mergedRequestContext.device = {\n            Type: mergedRequestContext.clientContext.deviceType || mergedRequestContext.device.Type\n        };\n    }\n\n    if (mergedRequestContext.userContext) {\n        mergedRequestContext.user = {\n            ...mergedRequestContext.user,\n            ...mergedRequestContext.userContext\n        };\n    }\n\n    mergedRequestContext.app = appContext;\n\n    // tslint:disable-next-line:no-any\n    const apiSettings = _pick({ ...itemQuery, ...mergedRequestContext.query }, [\n        'oun',\n        'baseUrl',\n        'baseImageUrl',\n        'rsVersion',\n        'rnrUrl',\n        'channelId',\n        'catalogId',\n        'rnrId'\n    ]);\n\n    populateApiSettingsFromQSP(apiSettings, mergedRequestContext);\n\n    mergedRequestContext.apiSettings.channelId = +mergedRequestContext.apiSettings.channelId;\n\n    // Override the locale with locale query string if given\n    mergedRequestContext.locale = getLocale(requestContext, renderingContext) || mergedRequestContext.locale;\n\n    if (renderingContext.themeOverride) {\n        mergedRequestContext.themeOverride = { ...requestContext.themeOverride, ...renderingContext.themeOverride };\n    }\n\n    // add node specific telemetry settings\n    if (process.env.APPINSIGHTS_INSTRUMENTATIONKEY) {\n        mergedRequestContext.telemetrySettings.instrumentationKey = process.env.APPINSIGHTS_INSTRUMENTATIONKEY;\n    }\n\n    if (process.env.NODE_ENV !== 'development') {\n        if (!mergedRequestContext.telemetrySettings.environmentId) {\n            mergedRequestContext.telemetrySettings.environmentId = (process.env.Fabric_ApplicationName || '-').slice(\n                (process.env.Fabric_ApplicationName || '-').indexOf('-') + 1\n            );\n        }\n        if (!mergedRequestContext.telemetrySettings.commerceCoreEnvId && process.env.CommerceCore_EnvironmentId) {\n            mergedRequestContext.telemetrySettings.commerceCoreEnvId = process.env.CommerceCore_EnvironmentId;\n        }\n    }\n\n    // Add information about selected connectors\n    mergedRequestContext.connectors = addConnectorInformation();\n    mergedRequestContext.telemetryData = mergedRequestContext.telemetryData || {};\n\n    // Create a mapping of module id to the experiment it is assocaited with\n    const moduleIdToExperimentId: IDictionary<string> = {};\n    if (mergedRequestContext.experiments?.activeExperiments?.length > 0) {\n        const activeExperiments = mergedRequestContext.experiments.activeExperiments;\n        for (let i = 0; i < activeExperiments.length; i++) {\n            const currentExperiment = activeExperiments[i];\n            if (currentExperiment.moduleId) {\n                moduleIdToExperimentId[currentExperiment.moduleId] = currentExperiment.experimentId;\n            }\n        }\n        mergedRequestContext.experiments.moduleIdToExperimentIdMap = moduleIdToExperimentId;\n    }\n\n    return mergedRequestContext;\n};\n\nconst addConnectorInformation = (): IConnectorParams => {\n    const connectors: IConnectorParams = {};\n    if (msdyn365Commerce.experimentationConnector) {\n        connectors.expConnector = msdyn365Commerce.experimentationConnector.name;\n    }\n    return connectors;\n};\n\nexport const getBodyConfig = (pageResponse: IPageResponse) => {\n    return pageResponse &&\n        pageResponse.pageRoot &&\n        pageResponse.pageRoot.modules &&\n        pageResponse.pageRoot.modules.body &&\n        pageResponse.pageRoot.modules.body[0]\n        ? pageResponse.pageRoot.modules.body[0].config\n        : {};\n};\n\nexport const getPageConfig = (pageResponse: IPageResponse, telemetry: IInternalTelemetry): IPageConfig => {\n    try {\n        if (!pageResponse || !pageResponse.pageRoot) {\n            return getDefaultPageConfig();\n        }\n        if (!pageResponse.slots || !pageResponse.slots.length) {\n            pageResponse.slots = getFlattenedListOfModules(pageResponse);\n        }\n        // TODO: Figure out the body slot once we have head slots\n        const bodySlot =\n            pageResponse.pageRoot.modules && pageResponse.pageRoot.modules.body\n                ? pageResponse.pageRoot.modules.body[0]\n                : pageResponse.slots[0];\n\n        const bodyConfig = bodySlot ? bodySlot.config : {};\n        return Object.assign(getDefaultPageConfig(), bodyConfig);\n    } catch (e) {\n        telemetry.log(LogLevel.Error, EXCEPTION_PAGECONFIG, { exception: e });\n        throw new Error(e);\n    }\n};\n"],"sourceRoot":""},"metadata":{},"sourceType":"module"}