{"ast":null,"code":"import\"core-js/modules/es.promise.js\";import\"core-js/modules/web.dom-collections.iterator.js\";import _defineProperty from\"@babel/runtime/helpers/esm/defineProperty\";function ownKeys(object,enumerableOnly){var keys=Object.keys(object);if(Object.getOwnPropertySymbols){var symbols=Object.getOwnPropertySymbols(object);if(enumerableOnly)symbols=symbols.filter(function(sym){return Object.getOwnPropertyDescriptor(object,sym).enumerable;});keys.push.apply(keys,symbols);}return keys;}function _objectSpread(target){for(var i=1;i<arguments.length;i++){var source=arguments[i]!=null?arguments[i]:{};if(i%2){ownKeys(Object(source),true).forEach(function(key){_defineProperty(target,key,source[key]);});}else if(Object.getOwnPropertyDescriptors){Object.defineProperties(target,Object.getOwnPropertyDescriptors(source));}else{ownKeys(Object(source)).forEach(function(key){Object.defineProperty(target,key,Object.getOwnPropertyDescriptor(source,key));});}}return target;}import classnames from'classnames';import React,{useState}from'react';import{addItemToOrderTemplate,AddItemToOrderTemplateInput,getPriceForSelectedVariant,PriceForSelectedVariantInput,updateOrderTemplateAction,UpdateOrderTemplateInput}from'@msdyn365-commerce-modules/retail-actions';import{Alert,UncontrolledTooltip}from'@msdyn365-commerce-modules/utilities';import{msdyn365Commerce}from'@msdyn365-commerce/core';import{AsyncResult}from'@msdyn365-commerce/retail-proxy';import{AddToOrderTemplateDialog}from'../add-to-order-template-dialog/add-to-order-template-dialog.component';import{DuplicateItemsWhenAddingToOrderTemplateDialog}from'../duplicate-items-when-adding-to-order-template-dialog/duplicate-items-when-adding-to-order-template-dialog.component';import{ItemAddedToOrderTemplateDialog}from'../item-added-to-order-template-dialog/item-added-to-order-template-dialog.component';const onClick=async(_event,props,state,openModal)=>{const{user}=props.context.request;if(state.waiting){return;}if(!user.isAuthenticated&&user.signInUrl&&window){window.location.assign(user.signInUrl);return;}addToOrderTemplate(props,openModal);state.setWaiting(false);};const onDismiss=state=>{state.setContent({color:'success',showAlert:false});};const AddToOrderTemplateComponentActions={onClick:onClick,onDismiss:onDismiss};const hasProductInOrderTemplates=productToFind=>{return false;};const AddToOrderTemplate=props=>{var _props$data$customerI;if(!((_props$data$customerI=props.data.customerInformation)!==null&&_props$data$customerI!==void 0&&_props$data$customerI.IsB2b)){return null;}const[waiting,setWaiting]=useState(false);const[content,setContent]=useState({});const state={waiting,content,setWaiting,setContent};const[addToOrderTemplateModalOpen,setAddToOrderTemplateModalOpen]=useState(false);const[chosenOrderTemplateId,setChosenOrderTemplateId]=useState(undefined);const[productPrice,setProductPrice]=useState(null);const[itemAddedToOrderTemplateDialogOpen,setItemAddedToOrderTemplateDialogOpen]=useState(false);const[duplicateItemsWhenAddingToOrderTemplateDialogOpen,setDuplicateItemsWhenAddingToOrderTemplateDialogOpen]=useState(false);const executeAddItemToOrderTemplate=async orderTemplate=>{setChosenOrderTemplateId(orderTemplate.Id);const input=new AddItemToOrderTemplateInput(orderTemplate.Id,props.data.product.RecordId,props.data.quantity,props.data.product.DefaultUnitOfMeasure||'ea');await addItemToOrderTemplate(input,props.context.actionContext).then(async result=>{const retrievedProductPrice=await getPriceForSelectedVariant(new PriceForSelectedVariantInput(props.data.product.RecordId,props.context.actionContext.requestContext.apiSettings.channelId,props.data.product),props.context.actionContext);setProductPrice(retrievedProductPrice);setAddToOrderTemplateModalOpen(false);setTimeout(()=>{setItemAddedToOrderTemplateDialogOpen(true);},500);}).catch(result=>{var _result$error;if(((_result$error=result.error)===null||_result$error===void 0?void 0:_result$error.name)!=='Microsoft_Dynamics_Commerce_Runtime_DuplicateObject'){return AsyncResult.reject(result);}setAddToOrderTemplateModalOpen(false);setTimeout(()=>{setDuplicateItemsWhenAddingToOrderTemplateDialogOpen(true);},500);return AsyncResult.resolve();});};const onDuplicateDialogCancel=()=>{setDuplicateItemsWhenAddingToOrderTemplateDialogOpen(false);setTimeout(()=>{setAddToOrderTemplateModalOpen(true);},500);};const overrideQuantity=async()=>{const input=new UpdateOrderTemplateInput(chosenOrderTemplateId,props.data.product.RecordId,props.data.quantity,props.data.product.DefaultUnitOfMeasure||'ea');await updateOrderTemplateAction(input,props.context.actionContext);const retrievedProductPrice=await getPriceForSelectedVariant(new PriceForSelectedVariantInput(props.data.product.RecordId,props.context.actionContext.requestContext.apiSettings.channelId,props.data.product),props.context.actionContext);setProductPrice(retrievedProductPrice);setDuplicateItemsWhenAddingToOrderTemplateDialogOpen(false);setTimeout(()=>{setItemAddedToOrderTemplateDialogOpen(true);},500);};const{addToOrderTemplateButtonText,showStatusMessage,showButtonText,className,disabled,showButtonTooltip,tooltipPosition,addToOrderTemplateDialogResources,createOrderTemplateDialogResources}=props;const onDismissHandler=()=>{return AddToOrderTemplateComponentActions.onDismiss(state);};const ariaLabel=addToOrderTemplateButtonText;const addToOrderTemplateRef=/*#__PURE__*/React.createRef();const showMessage=showStatusMessage!==undefined?showStatusMessage:true;const showTooltip=showButtonTooltip!==undefined?showButtonTooltip:true;const tooltipPos=showButtonTooltip!==undefined?tooltipPosition:'top-end';const dialogData={orderTemplates:props.data.orderTemplates};const onClickHandler=event=>{return AddToOrderTemplateComponentActions.onClick(event,props,state,setAddToOrderTemplateModalOpen);};return/*#__PURE__*/React.createElement(React.Fragment,null,/*#__PURE__*/React.createElement(React.Fragment,null,/*#__PURE__*/React.createElement(\"button\",{className:classnames(className,hasProductInOrderTemplates(props.data.product)?'msc-add-to-order-template-icon__added':'msc-add-to-order-template-icon',state.waiting?'msc-add-to-order-template-icon__waiting':''),\"aria-label\":ariaLabel,onClick:onClickHandler,disabled:disabled,ref:addToOrderTemplateRef},showButtonText?ariaLabel:''),showTooltip&&/*#__PURE__*/React.createElement(UncontrolledTooltip,{placement:tooltipPos,trigger:'hover focus',target:addToOrderTemplateRef},ariaLabel)),state.content.showAlert&&showMessage?/*#__PURE__*/React.createElement(\"div\",{className:'ms-order-template-items__product-status'},/*#__PURE__*/React.createElement(Alert,{color:state.content.color,isOpen:state.content.showAlert,toggle:onDismissHandler},state.content.orderTemplateTextMessage)):'',/*#__PURE__*/React.createElement(AddToOrderTemplateDialog,{className:'msc-add-to-order-template-dialog',modalOpen:addToOrderTemplateModalOpen,setModalOpen:setAddToOrderTemplateModalOpen,context:props.context,id:props.id,typeName:props.typeName,data:dialogData,addToOrderTemplateDialogResources:addToOrderTemplateDialogResources,createOrderTemplateDialogResources:createOrderTemplateDialogResources,onOrderTemplateSelected:executeAddItemToOrderTemplate}),chosenOrderTemplateId&&productPrice&&/*#__PURE__*/React.createElement(ItemAddedToOrderTemplateDialog,{className:'msc-item-added-to-order-template-dialog',id:props.id,typeName:props.typeName,context:props.context,dialogStrings:props.itemAddedToOrderTemplateDialogResources,data:{product:props.data.product,quantity:props.data.quantity,orderTemplateId:chosenOrderTemplateId,productPrice:productPrice},modalOpen:itemAddedToOrderTemplateDialogOpen}),/*#__PURE__*/React.createElement(DuplicateItemsWhenAddingToOrderTemplateDialog,{className:'msc-duplicate-items-when-adding-to-order-template-dialog',id:props.id,typeName:props.typeName,context:props.context,dialogStrings:props.duplicateItemsWhenAddingToOrderTemplateDialogResources,data:{},modalOpen:duplicateItemsWhenAddingToOrderTemplateDialogOpen,executeOverrideQuantity:overrideQuantity,onCancel:onDuplicateDialogCancel}));};const addToOrderTemplate=(props,openModal)=>{const{canAddMasterProduct}=props;if(props.data.product.Dimensions&&!canAddMasterProduct){const missingDimensions=props.data.product.Dimensions.filter(dimension=>!(dimension.DimensionValue&&dimension.DimensionValue.Value));if(missingDimensions.length>0){propagateError(props,{status:'MISSING_DIMENSION',missingDimensions:missingDimensions});return;}}openModal(true);return;};const propagateError=(props,result)=>{const{onError}=props;if(onError){onError(result);}};export const AddToOrderTemplateComponent=msdyn365Commerce.createComponent('AddToOrderTemplate',_objectSpread({component:AddToOrderTemplate},AddToOrderTemplateComponentActions));","map":{"version":3,"sources":["order-template/add-to-order-template/add-to-order-template.component.tsx"],"names":[],"mappings":"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","sourcesContent":["import classnames from 'classnames';\nimport * as Popper from 'popper.js';\nimport React, { useState } from 'react';\n\nimport {\n    addItemToOrderTemplate, AddItemToOrderTemplateInput,\n    getPriceForSelectedVariant, PriceForSelectedVariantInput,\n    updateOrderTemplateAction, UpdateOrderTemplateInput } from '@msdyn365-commerce-modules/retail-actions';\nimport { OrderTemplate } from '@msdyn365-commerce-modules/retail-actions';\nimport { Alert, UncontrolledTooltip } from '@msdyn365-commerce-modules/utilities';\nimport { IComponent, IComponentProps, msdyn365Commerce } from '@msdyn365-commerce/core';\nimport { AsyncResult, Customer, ProductDimension, ProductList, ProductPrice, SimpleProduct } from '@msdyn365-commerce/retail-proxy';\nimport { AddToOrderTemplateDialog, IAddToOrderTemplateDialogData, IAddToOrderTemplateDialogResources } from '../add-to-order-template-dialog/add-to-order-template-dialog.component';\nimport { DuplicateItemsWhenAddingToOrderTemplateDialog, IDuplicateItemsWhenAddingToOrderTemplateDialogResources } from '../duplicate-items-when-adding-to-order-template-dialog/duplicate-items-when-adding-to-order-template-dialog.component';\nimport { IItemAddedToOrderTemplateDialogResources, ItemAddedToOrderTemplateDialog } from '../item-added-to-order-template-dialog/item-added-to-order-template-dialog.component';\nimport { IOrderTemplateNameDialogResources } from '../order-template-name-dialog/order-template-name-dialog.component';\n\nexport interface IAddToOrderTemplateComponentProps extends IComponentProps<IAddToOrderTemplateData> {\n    className?: string;\n\n    addToOrderTemplateDialogResources: IAddToOrderTemplateDialogResources;\n    createOrderTemplateDialogResources: IOrderTemplateNameDialogResources;\n    itemAddedToOrderTemplateDialogResources: IItemAddedToOrderTemplateDialogResources;\n    duplicateItemsWhenAddingToOrderTemplateDialogResources: IDuplicateItemsWhenAddingToOrderTemplateDialogResources;\n\n    addToOrderTemplateButtonText: string;\n\n    addToOrderTemplateMessage?: string;\n    addItemToOrderTemplateError?: string;\n\n    showButtonText?: boolean;\n    showButtonTooltip?: boolean;\n    tooltipPosition?: Popper.Placement;\n    showStatusMessage?: boolean;\n    disabled?: boolean;\n    canAddMasterProduct?: boolean;\n\n    onSuccess?(): void;\n    onError?(result: IOrderTemplateActionErrorResult): void;\n}\n\nexport interface IOrderTemplateActionErrorResult {\n    status: 'FAILED' | 'MISSING_DIMENSION';\n\n    missingDimensions?: ProductDimension[];\n}\n\ninterface IAddToOrderTemplateStateManager {\n    waiting: boolean;\n    content: IAddToOrderTemplateContentState;\n\n    setWaiting(newWaiting: boolean): void;\n    setContent(newContent: IAddToOrderTemplateContentState): void;\n}\n\ninterface IAddToOrderTemplateContentState {\n    showAlert?: boolean;\n    orderTemplateTextMessage?: string;\n    color?: string;\n}\n\ninterface IAddToOrderTemplateData {\n    orderTemplates: OrderTemplate[];\n\n    product: SimpleProduct;\n    quantity: number;\n\n    customerInformation?: Customer;\n}\n\nexport interface IAddToOrderTemplateComponent extends IComponent<IAddToOrderTemplateComponentProps> {\n    onClick(): (event: React.MouseEvent<HTMLElement>, props: IAddToOrderTemplateComponentProps, state: IAddToOrderTemplateStateManager) => void;\n}\n\nconst onClick = async (\n    _event: React.MouseEvent<HTMLElement>,\n    props: IAddToOrderTemplateComponentProps,\n    state: IAddToOrderTemplateStateManager,\n    openModal: (opened: boolean) => void): Promise<void> => {\n\n    const { user } = props.context.request;\n\n    if (state.waiting) {\n        return;\n    }\n\n    if (!user.isAuthenticated && user.signInUrl && window) {\n        window.location.assign(user.signInUrl);\n        return;\n    }\n\n    addToOrderTemplate(props, openModal);\n    state.setWaiting(false);\n};\n\nconst onDismiss = (state: IAddToOrderTemplateStateManager): void => {\n    state.setContent({ color: 'success', showAlert: false });\n};\n\nconst AddToOrderTemplateComponentActions = {\n    onClick: onClick,\n    onDismiss: onDismiss\n};\n\nconst hasProductInOrderTemplates = (productToFind: SimpleProduct) => {\n    /*\n    TODO: Currently API does not support filtering by products.\n    await getProductListLinesAsync(context, '',)\n    return orderTemplates.filter(orderTemplate =>\n        orderTemplate.orderTemplateLines.filter(\n            product => product.productListLine.ProductId === productToFind.RecordId).length !== 0).length !== 0;\n    */\n   return false;\n};\n\n// tslint:disable-next-line:max-func-body-length\nconst AddToOrderTemplate: React.FC<IAddToOrderTemplateComponentProps> = (props: IAddToOrderTemplateComponentProps) => {\n    if (!props.data.customerInformation?.IsB2b) {\n        return null;\n    }\n\n    const [waiting, setWaiting] = useState(false);\n    const [content, setContent] = useState({});\n    const state: IAddToOrderTemplateStateManager = {\n        waiting,\n        content,\n\n        setWaiting,\n        setContent\n    };\n\n    const [addToOrderTemplateModalOpen, setAddToOrderTemplateModalOpen] = useState(false);\n\n    const [chosenOrderTemplateId, setChosenOrderTemplateId] = useState<string | undefined>(undefined);\n    const [productPrice, setProductPrice] = useState<ProductPrice | null>(null);\n    const [itemAddedToOrderTemplateDialogOpen, setItemAddedToOrderTemplateDialogOpen] = useState(false);\n    const [duplicateItemsWhenAddingToOrderTemplateDialogOpen, setDuplicateItemsWhenAddingToOrderTemplateDialogOpen] = useState(false);\n\n    const executeAddItemToOrderTemplate = async (orderTemplate: ProductList) => {\n        setChosenOrderTemplateId(orderTemplate.Id);\n\n        const input = new AddItemToOrderTemplateInput(\n            orderTemplate.Id,\n            props.data.product.RecordId,\n            props.data.quantity,\n            props.data.product.DefaultUnitOfMeasure || 'ea');\n\n        await addItemToOrderTemplate(input, props.context.actionContext).then(async result => {\n            const retrievedProductPrice = await getPriceForSelectedVariant(\n                new PriceForSelectedVariantInput(\n                    props.data.product.RecordId,\n                    props.context.actionContext.requestContext.apiSettings.channelId,\n                    props.data.product),\n                props.context.actionContext);\n            setProductPrice(retrievedProductPrice);\n            setAddToOrderTemplateModalOpen(false);\n            setTimeout(() => {\n                setItemAddedToOrderTemplateDialogOpen(true);\n            }, 500); // tslint:disable-line:align\n        }).catch(result => {\n            if (result.error?.name !== 'Microsoft_Dynamics_Commerce_Runtime_DuplicateObject') {\n                return AsyncResult.reject(result);\n            }\n            setAddToOrderTemplateModalOpen(false);\n            setTimeout(() => {\n                setDuplicateItemsWhenAddingToOrderTemplateDialogOpen(true);\n            }, 500); // tslint:disable-line:align\n            return AsyncResult.resolve();\n        });\n    };\n\n    const onDuplicateDialogCancel = () => {\n        setDuplicateItemsWhenAddingToOrderTemplateDialogOpen(false);\n        setTimeout(() => {\n            setAddToOrderTemplateModalOpen(true);\n        }, 500); // tslint:disable-line:align\n    };\n\n    const overrideQuantity = async () => {\n        const input = new UpdateOrderTemplateInput(\n            chosenOrderTemplateId!,\n            props.data.product.RecordId,\n            props.data.quantity,\n            props.data.product.DefaultUnitOfMeasure || 'ea');\n        await updateOrderTemplateAction(input, props.context.actionContext);\n\n        const retrievedProductPrice = await getPriceForSelectedVariant(\n            new PriceForSelectedVariantInput(\n                props.data.product.RecordId,\n                props.context.actionContext.requestContext.apiSettings.channelId,\n                props.data.product),\n            props.context.actionContext);\n        setProductPrice(retrievedProductPrice);\n        setDuplicateItemsWhenAddingToOrderTemplateDialogOpen(false);\n        setTimeout(() => {\n            setItemAddedToOrderTemplateDialogOpen(true);\n        }, 500); // tslint:disable-line:align\n    };\n\n    const { addToOrderTemplateButtonText, showStatusMessage, showButtonText,\n        className, disabled, showButtonTooltip, tooltipPosition,\n        addToOrderTemplateDialogResources, createOrderTemplateDialogResources\n    } = props;\n\n    const onDismissHandler = () => { return AddToOrderTemplateComponentActions.onDismiss(state); };\n    const ariaLabel = addToOrderTemplateButtonText;\n    const addToOrderTemplateRef: React.RefObject<HTMLButtonElement> = React.createRef();\n    const showMessage = showStatusMessage !== undefined ? showStatusMessage: true;\n    const showTooltip = showButtonTooltip !== undefined ? showButtonTooltip: true;\n    const tooltipPos = showButtonTooltip !== undefined ? tooltipPosition: 'top-end';\n\n    const dialogData: IAddToOrderTemplateDialogData = {\n        orderTemplates: props.data.orderTemplates\n    };\n\n    const onClickHandler = (event: React.MouseEvent<HTMLElement>) => { return AddToOrderTemplateComponentActions.onClick(event, props, state, setAddToOrderTemplateModalOpen); };\n\n    return (\n        <React.Fragment>\n            {\n                <>\n                    <button\n                        className={classnames(\n                            className,\n                            hasProductInOrderTemplates(props.data.product) ? 'msc-add-to-order-template-icon__added' : 'msc-add-to-order-template-icon' ,\n                            state.waiting ? 'msc-add-to-order-template-icon__waiting' : '')}\n                        aria-label={ariaLabel}\n                        onClick={onClickHandler}\n                        disabled={disabled}\n                        ref={addToOrderTemplateRef}\n                    >\n                        {showButtonText ? ariaLabel : ''}\n                    </button>\n                    {\n                        showTooltip && <UncontrolledTooltip placement={tooltipPos} trigger={'hover focus'} target={addToOrderTemplateRef}>{ariaLabel}</UncontrolledTooltip>\n                    }\n                </>\n            }\n            {\n                state.content.showAlert && showMessage ?\n                <div className='ms-order-template-items__product-status'>\n                    <Alert color={ state.content.color } isOpen={ state.content.showAlert } toggle={ onDismissHandler }>\n                        { state.content.orderTemplateTextMessage }\n                    </Alert>\n                </div> :\n                ''\n            }\n            <AddToOrderTemplateDialog\n                className={'msc-add-to-order-template-dialog'}\n                modalOpen={addToOrderTemplateModalOpen}\n                setModalOpen={setAddToOrderTemplateModalOpen}\n                context={props.context}\n                id={props.id}\n                typeName={props.typeName}\n                data={dialogData}\n                addToOrderTemplateDialogResources={addToOrderTemplateDialogResources}\n                createOrderTemplateDialogResources={createOrderTemplateDialogResources}\n                onOrderTemplateSelected={executeAddItemToOrderTemplate}\n            />\n            {\n                chosenOrderTemplateId && productPrice && <ItemAddedToOrderTemplateDialog\n                    className={'msc-item-added-to-order-template-dialog'}\n                    id={props.id}\n                    typeName={props.typeName}\n                    context={props.context}\n                    dialogStrings={props.itemAddedToOrderTemplateDialogResources}\n                    data={{\n                        product: props.data.product,\n                        quantity: props.data.quantity,\n                        orderTemplateId: chosenOrderTemplateId,\n                        productPrice: productPrice\n                    }}\n                    modalOpen={itemAddedToOrderTemplateDialogOpen}\n                />\n            }\n            <DuplicateItemsWhenAddingToOrderTemplateDialog\n                className={'msc-duplicate-items-when-adding-to-order-template-dialog'}\n                id={props.id}\n                typeName={props.typeName}\n                context={props.context}\n                dialogStrings={props.duplicateItemsWhenAddingToOrderTemplateDialogResources}\n                data={{}}\n                modalOpen={duplicateItemsWhenAddingToOrderTemplateDialogOpen}\n                executeOverrideQuantity={overrideQuantity}\n                onCancel={onDuplicateDialogCancel}\n            />\n        </React.Fragment>\n    );\n};\n\nconst addToOrderTemplate = (\n    props: IAddToOrderTemplateComponentProps,\n    openModal: (opened: boolean) => void): void => {\n    const { canAddMasterProduct } = props;\n\n    if (props.data.product.Dimensions && !canAddMasterProduct) {\n        const missingDimensions = props.data.product.Dimensions.filter(dimension => !(dimension.DimensionValue && dimension.DimensionValue.Value));\n\n        if (missingDimensions.length > 0) {\n            // At least one dimension with no value exists on the product, won't be able to proceed.\n            propagateError(props, { status: 'MISSING_DIMENSION', missingDimensions: missingDimensions });\n            return;\n        }\n    }\n\n    openModal(true);\n    return;\n};\n\nconst propagateError = (props: IAddToOrderTemplateComponentProps, result: IOrderTemplateActionErrorResult): void => {\n    const { onError } = props;\n\n    if (onError) {\n        onError(result);\n    }\n};\n\n// @ts-ignore\nexport const AddToOrderTemplateComponent: React.FunctionComponent<IAddToOrderTemplateComponentProps> = msdyn365Commerce.createComponent<IAddToOrderTemplateComponent>(\n    'AddToOrderTemplate',\n    { component: AddToOrderTemplate, ...AddToOrderTemplateComponentActions }\n);"],"sourceRoot":"./src/"},"metadata":{},"sourceType":"module"}