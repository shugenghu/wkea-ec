{"ast":null,"code":"import\"core-js/modules/es.object.assign.js\";import\"core-js/modules/es.promise.js\";import\"core-js/modules/es.regexp.to-string.js\";import\"core-js/modules/es.string.replace.js\";import\"core-js/modules/web.dom-collections.iterator.js\";import\"core-js/modules/web.url.js\";import _objectWithoutProperties from\"@babel/runtime/helpers/esm/objectWithoutProperties\";import _defineProperty from\"@babel/runtime/helpers/esm/defineProperty\";function ownKeys(object,enumerableOnly){var keys=Object.keys(object);if(Object.getOwnPropertySymbols){var symbols=Object.getOwnPropertySymbols(object);if(enumerableOnly)symbols=symbols.filter(function(sym){return Object.getOwnPropertyDescriptor(object,sym).enumerable;});keys.push.apply(keys,symbols);}return keys;}function _objectSpread(target){for(var i=1;i<arguments.length;i++){var source=arguments[i]!=null?arguments[i]:{};if(i%2){ownKeys(Object(source),true).forEach(function(key){_defineProperty(target,key,source[key]);});}else if(Object.getOwnPropertyDescriptors){Object.defineProperties(target,Object.getOwnPropertyDescriptors(source));}else{ownKeys(Object(source)).forEach(function(key){Object.defineProperty(target,key,Object.getOwnPropertyDescriptor(source,key));});}}return target;}import{__decorate}from\"tslib\";import{getPriceForSelectedVariant,getProductUrlSync,PriceForSelectedVariantInput}from'@msdyn365-commerce-modules/retail-actions';import{Alert,getTelemetryObject,Heading,UncontrolledPagination}from'@msdyn365-commerce-modules/utilities';import{ItemAddedToCartDialog}from'@msdyn365-commerce/components';import MsDyn365,{AsyncResult,getUrlSync}from'@msdyn365-commerce/core';import{getCartState}from'@msdyn365-commerce/global-state';import{addCartLinesAsync}from'@msdyn365-commerce/retail-proxy/dist/DataActions/CartsDataActions.g';import{deleteAsync,removeProductListLinesAsync,updateProductListLinesAsync}from'@msdyn365-commerce/retail-proxy/dist/DataActions/ProductListsDataActions.g';import classnames from'classnames';import debounce from'lodash/debounce';import{action}from'mobx';import{observer}from'mobx-react';import*as React from'react';import{OrderTemplateActionsView,OrderTemplateBulkActions,OrderTemplateLinesStatusMessage,OrderTemplateLineView,OrderTemplateTableHeading}from'../../';import{ActiveOrderTemplateLinesInput}from'./actions/get-order-template';let OrderTemplateLines=class OrderTemplateLines extends React.Component{constructor(props,state){super(props);this._onRemoveSelection=event=>{const{context,resources}=this.props;const{telemetry}=context;const{removeSelectedFailureMessage,removeSelectedSuccessMessage}=resources;const lines=this.state.productSelection;const productListLines=lines&&lines.length&&lines.filter(line=>line.isChecked).map(line=>line.productListLine);if(productListLines&&productListLines.length){const productListId=productListLines[0].ProductListId;removeProductListLinesAsync({callerContext:context.actionContext},productListId,productListLines).then(()=>{this.setState({userMessage:removeSelectedSuccessMessage,statusCssString:'success',messageGlyph:'fas fa-check',isOpen:true});window.location.reload();}).catch(error=>{telemetry.warning('[order-template-lines] Unable remove items from the order template lines');telemetry.error(error);this.setState({userMessage:removeSelectedFailureMessage,statusCssString:'success',messageGlyph:'fas fa-check',isOpen:true});});}};this._onAddSelectionToBag=async event=>{const{context,resources}=this.props;const{addedToCartFailureMessage,addedToCartSuccessMessage}=resources;const lines=this.state.productSelection;const cartState=await getCartState(context.actionContext);const selectedLines=lines.filter(line=>line.isChecked);if(selectedLines.length){const cartLines=selectedLines.map(productLine=>{var _productLine$fullProd,_productLine$fullProd2;return{ItemId:(_productLine$fullProd=productLine.fullProduct)===null||_productLine$fullProd===void 0?void 0:_productLine$fullProd.ProductDetails.ItemId,ProductId:productLine.productListLine.ProductId,Quantity:productLine.productListLine.Quantity||1,TrackingId:'',UnitOfMeasureSymbol:productLine.productListLine.UnitOfMeasure||((_productLine$fullProd2=productLine.fullProduct)===null||_productLine$fullProd2===void 0?void 0:_productLine$fullProd2.ProductDetails.DefaultUnitOfMeasure)};})||[];return addCartLinesAsync({callerContext:context.actionContext},cartState.cart.Id,cartLines,cartState.cart.Version).then(async res=>{context.telemetry.trace(\"Order template; selected line items (\".concat(cartLines.map(line=>line.ItemId).join(','),\") added to cart: \").concat(cartState.cart.Id));await cartState.refreshCart({});this.setState({userMessage:addedToCartSuccessMessage,statusCssString:'success',messageGlyph:'fas fa-check',isOpen:true});}).catch(error=>{context.telemetry.trace('Unable to add order template to cart.');this.setState({userMessage:addedToCartFailureMessage,statusCssString:'danger',messageGlyph:'fas fa-exclamation-triangle',isOpen:true});});}};this._getCurrentUrl=reqContext=>{if(MsDyn365.isBrowser){return new URL(window.location.href);}return new URL(reqContext.url.requestUrl.href);};this._renderItemAddedToCartDialog=()=>{if(!this.state.itemAddedToCartDialogData){return null;}const onClose=()=>{this.setState({itemKey:this.state.itemKey,userMessage:this.state.userMessage,statusCssString:this.state.statusCssString,messageGlyph:this.state.messageGlyph,isOpen:this.state.isOpen,isItemAddedToOrderTemplateOpen:false});};return/*#__PURE__*/React.createElement(ItemAddedToCartDialog,{className:'msc-item-added-to-cart-dialog',id:this.props.id,typeName:this.props.typeName,context:this.props.context,dialogStrings:this._generateItemAddedToCartDialogResources(),data:this.state.itemAddedToCartDialogData,modalOpen:this.state.isItemAddedToOrderTemplateOpen,onClose:onClose});};this._renderPagination=()=>{const{config,context,data,resources}=this.props;const orderTemplate=data&&data.orderTemplate&&data.orderTemplate.result;if(!orderTemplate){return null;}const fullUrl=this._getCurrentUrl(context.request);const itemsPerPage=config.itemsPerPage||50;const currentPageNumber=this.props.context.request.query&&+this.props.context.request.query.skip/itemsPerPage||0;const skipCount=currentPageNumber*itemsPerPage;const totalItems=orderTemplate&&orderTemplate.totalLines;const previousText=resources.flipperPrevious;const nextText=resources.flipperNext;if(totalItems<=itemsPerPage){return null;}return/*#__PURE__*/React.createElement(UncontrolledPagination,{className:\"\".concat(this.className,\"__pagination\"),role:'navigation',\"aria-label\":resources.paginationAriaLabel,url:fullUrl.href,qsp:'skip',items:totalItems,itemsPerPage:itemsPerPage,startingItem:skipCount,previousText:/*#__PURE__*/React.createElement(\"div\",{className:'msc-pagination__prev'},/*#__PURE__*/React.createElement(\"span\",{className:\"\".concat(this.props.config.className,\"__pagination-left\"),\"aria-hidden\":'true'}),/*#__PURE__*/React.createElement(\"span\",{className:'prev-text'},previousText)),nextText:/*#__PURE__*/React.createElement(\"div\",{className:'msc-pagination__next'},/*#__PURE__*/React.createElement(\"span\",{className:'next-text'},nextText),/*#__PURE__*/React.createElement(\"span\",{className:\"\".concat(this.props.config.className,\"__pagination-right\"),\"aria-hidden\":'true'})),previousAriaLabel:previousText,nextAriaLabel:nextText});};this._onDismiss=()=>{this.setState({isOpen:false});};this._changeQuantity=(itemKey,quantity)=>{const{context,data,telemetry,config}=this.props;const{orderTemplate}=data;if(context){if(orderTemplate.result){const orderTemplateLinesData=orderTemplate&&orderTemplate.result&&orderTemplate.result.orderTemplateLines;if(orderTemplateLinesData){const orderLineIndex=orderTemplateLinesData.findIndex(lines=>lines.productListLine.LineId===itemKey);const newProductListLine=_objectSpread({},orderTemplateLinesData[orderLineIndex]);if(orderTemplateLinesData[orderLineIndex].productListLine.Quantity===quantity){return;}newProductListLine.productListLine.Quantity=quantity;const{fullProduct}=newProductListLine,line=_objectWithoutProperties(newProductListLine,[\"fullProduct\"]);updateProductListLinesAsync({callerContext:context.actionContext},orderTemplate.result.productList.Id,[line.productListLine]).then(list=>{this.setState({itemKey:itemKey,userMessage:'',statusCssString:'success',messageGlyph:'fas fa-check',isOpen:false});if(list){const newLine=list.find(lines=>lines.LineId===itemKey);orderTemplateLinesData[orderLineIndex].productListLine=newLine;const updatedLines=[...orderTemplateLinesData];updatedLines[orderLineIndex]={fullProduct,productListLine:newLine};const updatedOrderTemplate=_objectSpread(_objectSpread({},orderTemplate.result),{},{ProductListLines:updatedLines});context.actionContext.update(new ActiveOrderTemplateLinesInput(context.actionContext.requestContext,config),updatedOrderTemplate);}}).catch(error=>{telemetry.warning('[order-template-lines] Unable to update product quantity.');telemetry.error(error);this.setState({itemKey:itemKey,userMessage:'Failed to update quantity value.',statusCssString:'danger',messageGlyph:'fas fa-exclamation-triangle',isOpen:true});});}}}};this._addItemToBag=(product,quantity,itemKey)=>{const{context,data,resources,telemetry}=this.props;const{cart}=data;const{maxQuantityLimitText,addedToCartFailureMessage}=resources;if(context){if(cart.result){const addProductToCartInput={product:product,count:quantity};cart.result.addProductToCart(addProductToCartInput).then(result=>{if(result.status==='SUCCESS'){return getPriceForSelectedVariant(new PriceForSelectedVariantInput(product.RecordId,this.props.context.actionContext.requestContext.apiSettings.channelId,product),this.props.context.actionContext).then(priceResult=>{if(!priceResult){return AsyncResult.reject('Failed to retrieve product price');}this.setState({itemKey:itemKey,userMessage:'',statusCssString:'success',messageGlyph:'fas fa-check',isOpen:false,isItemAddedToOrderTemplateOpen:true,itemAddedToCartDialogData:{product:product,productPrice:priceResult,quantity:quantity}});return AsyncResult.resolve();});}else if(result.substatus==='MAXQUANTITY'){this.setState({itemKey:itemKey,userMessage:maxQuantityLimitText.replace('{curQuantity}',quantity.toString()).replace('{maxQuantity}',context.app.config.maxQuantityForProductListLineItem.toString())||\"You can only add \".concat(context.app.config.maxQuantityForProductListLineItem,\" of this item to your shopping bag\"),statusCssString:'danger',messageGlyph:'fas fa-exclamation-triangle',isOpen:true});return AsyncResult.resolve();}else{telemetry.debug('[order-template-lines] Unable to Update Cart Line from the order template lines');this.setState({itemKey:itemKey,userMessage:addedToCartFailureMessage,statusCssString:'danger',messageGlyph:'fas fa-exclamation-triangle',isOpen:true});return AsyncResult.resolve();}}).catch(error=>{telemetry.warning(error);telemetry.debug('[order-template-lines] Error trying to Update Cart Line from the order template lines');this.setState({itemKey:itemKey,userMessage:addedToCartFailureMessage,statusCssString:'danger',messageGlyph:'fas fa-exclamation-triangle',isOpen:true});});}}};this._removeItemFromOrderTemplateLines=listLineId=>{const{context,data,telemetry}=this.props;const{orderTemplate}=data;if(context&&context.actionContext){const userToken=context.request.user.isAuthenticated&&context.request.user.token;if(userToken&&orderTemplate.result&&orderTemplate.result&&listLineId){const listLine=orderTemplate.result.orderTemplateLines.find(l=>l.productListLine.LineId===listLineId);if(listLine){const productListId=listLine.productListLine.ProductListId;const{fullProduct}=listLine,line=_objectWithoutProperties(listLine,[\"fullProduct\"]);removeProductListLinesAsync({callerContext:context.actionContext},productListId,[line.productListLine]).then(()=>{window.location.reload(false);}).catch(error=>{telemetry.warning('[order-template-lines] Unable remove items from the order template lines');telemetry.error(error);});}}else{telemetry.warning('[order-template-lines] Unable remove items from the order template lines user token or lineItemID was not found');}}};this._renameTemplate=async _template=>{window.location.reload(false);return Promise.resolve();};this._removeTemplate=()=>{const{context,data,telemetry,resources}=this.props;const{orderTemplate}=data;if(context&&context.actionContext){const userToken=context.request.user.isAuthenticated&&context.request.user.token;if(userToken&&orderTemplate&&orderTemplate.result){deleteAsync({callerContext:context.actionContext},orderTemplate.result.productList).then().catch(error=>{var _orderTemplate$result;telemetry.warning('[order-template] Unable to delete order template.');telemetry.error(error);this.setState({itemKey:((_orderTemplate$result=orderTemplate.result)===null||_orderTemplate$result===void 0?void 0:_orderTemplate$result.productList.Id)||'',userMessage:resources.deleteOrderTemplateFailedText,statusCssString:'danger',messageGlyph:'fas fa-exclamation-triangle',isOpen:true});});const newLink=getUrlSync('ordertemplatelist',this.props.context.actionContext);if(newLink){window.location.assign(newLink);}}else{telemetry.warning('[order-template] Failed to delete order template. Order template was not found');}}else{telemetry.warning('[order-template] Failed to delete order template.');}};this.className='ms-order-template';this.state={itemKey:'',userMessage:'',statusCssString:'success',messageGlyph:'fas fa-check',isOpen:false,isItemAddedToOrderTemplateOpen:false,productSelection:[]};this.telemetryContent=getTelemetryObject(this.props.context.request.telemetryPageName,this.props.friendlyName,this.props.telemetry);}async componentDidMount(){this.setState({});const orderTemplate=await this.props.data.orderTemplate;this.props.config.heading.text=orderTemplate.productList.Name||'';this.setState({productSelection:orderTemplate.orderTemplateLines});}render(){const{heading,className}=this.props.config;const{emptyOrderTemplateLinesText,errorGettingOrderTemplateLines}=this.props.resources;const{orderTemplate,cart}=this.props.data;if(cart.status==='LOADING'||orderTemplate.status==='LOADING'){const errorProps=_objectSpread(_objectSpread({},this.props),{},{OrderTemplateLines:{moduleProps:this.props,className:classnames(this.className,className)},status:'LOADING',statusMessage:/*#__PURE__*/React.createElement(OrderTemplateLinesStatusMessage,{errorType:'LOADING',text:'Loading...'}),heading:heading&&/*#__PURE__*/React.createElement(Heading,Object.assign({className:\"\".concat(this.className,\"__heading\")},heading)),resources:this.props.resources});return this.props.renderView(errorProps);}if(cart.status==='FAILED'||orderTemplate.status==='FAILED'){const errorProps=_objectSpread(_objectSpread({},this.props),{},{OrderTemplateLines:{moduleProps:this.props,className:classnames(\"\".concat(this.className),className)},status:'FAILED',statusMessage:/*#__PURE__*/React.createElement(OrderTemplateLinesStatusMessage,{errorType:'FAILED',text:errorGettingOrderTemplateLines}),heading:heading&&/*#__PURE__*/React.createElement(Heading,Object.assign({className:\"\".concat(this.className,\"__heading\")},heading)),resources:this.props.resources});return this.props.renderView(errorProps);}const orderTemplateResult=orderTemplate&&orderTemplate.result;const orderTemplateLines=orderTemplateResult&&orderTemplateResult.orderTemplateLines;if(!orderTemplateResult||!orderTemplateLines||orderTemplateLines.length===0){const emptyViewProps=_objectSpread(_objectSpread({},this.props),{},{OrderTemplateLines:{moduleProps:this.props,className:classnames(\"\".concat(this.className),className)},status:'EMPTY',statusMessage:/*#__PURE__*/React.createElement(OrderTemplateLinesStatusMessage,{errorType:'EMPTY',text:emptyOrderTemplateLinesText}),heading:heading&&/*#__PURE__*/React.createElement(Heading,Object.assign({className:\"\".concat(this.className,\"__heading\")},heading)),resources:this.props.resources});return this.props.renderView(emptyViewProps);}const viewProps=_objectSpread(_objectSpread({},this.props),{},{OrderTemplateLines:{moduleProps:this.props,className:classnames(\"\".concat(this.className),className)},resources:this.props.resources,status:'SUCCESS',productsStatusMessage:this.state.isOpen&&/*#__PURE__*/React.createElement(\"div\",{className:\"\".concat(this.className,\"-products-status\")},/*#__PURE__*/React.createElement(Alert,{color:this.state.statusCssString,isOpen:this.state.isOpen,toggle:this._onDismiss},/*#__PURE__*/React.createElement(\"span\",null,this.state.userMessage))),heading:heading&&/*#__PURE__*/React.createElement(Heading,Object.assign({className:\"\".concat(this.className,\"__heading\")},heading)),OrderTemplateActions:{className:\"\".concat(this.className,\"-action-bar\"),tag:'div'},ProductsTable:{className:\"\".concat(this.className,\"__table\"),tag:'table'},ProductsTableRow:{className:\"\".concat(this.className,\"-table-line\"),tag:'tr'},ProductsTableHeading:this._renderProductListHeader(this.props.resources),ProductDetails:{className:\"\".concat(this.className,\"-table-line__link\"),tag:'a'},orderLines:this._renderProductList(),callbacks:{updateQuantity:debounce(this._changeQuantity,2000)},orderActions:this._renderOrderActions(orderTemplateResult),pagination:this._renderPagination(),itemAddedToCartDialog:this._renderItemAddedToCartDialog(),bulkOrderLineActions:this._getBulkActions(orderTemplateResult.productList.Id)});return this.props.renderView(viewProps);}onSelect(line,isChecked){line.isChecked=isChecked;const updated=this.state.productSelection.map(product=>{var _product$fullProduct,_line$fullProduct;if(((_product$fullProduct=product.fullProduct)===null||_product$fullProduct===void 0?void 0:_product$fullProduct.ProductDetails.ItemId)===((_line$fullProduct=line.fullProduct)===null||_line$fullProduct===void 0?void 0:_line$fullProduct.ProductDetails.ItemId)){line.isChecked=isChecked;}return product;})||[];this.setState({productSelection:updated});}onSelectAll(isChecked){const updated=this.state.productSelection.map(line=>{line.isChecked=isChecked;return line;})||[];this.setState({productSelection:updated});}_renderProductListHeader(resources){const{productNumberText,productText,productUnitPriceText,productUOMText,productQuantityText,productActionsText}=resources;const headers={productNumber:productNumberText,productName:productText,productUnitPrice:productUnitPriceText,productUOM:productUOMText,productQuantity:productQuantityText,productActions:productActionsText,clickHandler:isChecked=>this.onSelectAll(isChecked)};return/*#__PURE__*/React.createElement(OrderTemplateTableHeading,Object.assign({},headers));}_getBulkActions(orderTemplateId){return OrderTemplateBulkActions(_objectSpread(_objectSpread({},this.props),{},{orderTemplateId:orderTemplateId,onAddSelectionToBag:this._onAddSelectionToBag,onRemoveSelection:this._onRemoveSelection}));}_generateLinesAddedToCartDialogResources(){return{viewCartButtonText:this.props.resources.viewCartButtonText,orderTemplateCloseButtonText:this.props.resources.orderTemplateCloseButtonText,linesAddedToCartHeaderItemsOneText:this.props.resources.linesAddedToCartHeaderItemsOneText,linesAddedToCartHeaderLinesOneText:this.props.resources.linesAddedToCartHeaderLinesOneText,linesAddedToCartHeaderLinesFormatText:this.props.resources.linesAddedToCartHeaderLinesFormatText,linesAddedToCartHeaderMessageText:this.props.resources.linesAddedToCartHeaderMessageText};}_generateItemAddedToCartDialogResources(){return{viewCartButtonText:this.props.resources.viewCartButtonText,orderTemplateCloseButtonText:this.props.resources.orderTemplateCloseButtonText,itemAddedToCartHeaderItemOneText:this.props.resources.itemAddedToCartHeaderItemOneText,itemAddedToCartHeaderItemFormatText:this.props.resources.itemAddedToCartHeaderItemFormatText,itemAddedToCartHeaderMessageText:this.props.resources.itemAddedToCartHeaderMessageText,freePriceText:this.props.resources.freePriceText,originalPriceText:this.props.resources.originalPriceText,currentPriceText:this.props.resources.currentPriceText};}_renderOrderActions(orderTemplate){const{id,typeName,context,resources}=this.props;const{addTemplateToBagButtonText,renameTemplateButtonText,deleteTemplateButtonText,closeWindowButtonText,addToCartFailureMessage,addToCartSuccessMessage,addToCartProcessMessage}=resources;const orderTemplateActions={data:{orderTemplate},id:id,typeName:typeName,context:context,telemetryContent:this.telemetryContent,handlers:{onRenameTemplate:this._renameTemplate,onRemoveTemplate:this._removeTemplate},renameOrderTemplateDialogStrings:this._generateOrderTemplateNameDialogResources(resources),resources:{addTemplateToBagButtonText:addTemplateToBagButtonText,renameTemplateButtonText:renameTemplateButtonText,deleteTemplateButtonText:deleteTemplateButtonText,addToCartFailureMessage:addToCartFailureMessage,addToCartSuccessMessage:addToCartSuccessMessage,addToCartProcessMessage:addToCartProcessMessage,closeWindowButtonText:closeWindowButtonText,linesAddedToCartDialogResources:this._generateLinesAddedToCartDialogResources()}};return OrderTemplateActionsView(orderTemplateActions);}_generateOrderTemplateNameDialogResources(resources){return{orderTemplateHeaderLabel:resources.renameOrderTemplateTitleText,orderTemplateTitleLabel:resources.orderTemplateTitle,orderTemplateNameAriaLabel:resources.orderTemplateTitle,orderTemplateDescription:'',defaultOrderTemplateName:resources.defaultOrderTemplateName,orderTemplateButtonLabel:resources.renameOrderTemplateButtonText,orderTemplateCancelButtonLabel:resources.cancelBtnLabel};}_renderProductList(){var _this$state$productSe;const{priceFree,originalPriceText,currentPriceText,addOrderTemplateItemToBagButtonText,removeItemFromOrderTemplateButtonText,productDimensionTypeColor,productDimensionTypeSize,productDimensionTypeStyle,inputQuantityAriaLabel}=this.props.resources;const{context,telemetry}=this.props;const{imageSettings}=this.props.config;return(_this$state$productSe=this.state.productSelection)===null||_this$state$productSe===void 0?void 0:_this$state$productSe.map((line,index)=>{var _line$fullProduct2;const currentProductProps={orderTemplateLine:line,productListLine:line.productListLine,price:(_line$fullProduct2=line.fullProduct)===null||_line$fullProduct2===void 0?void 0:_line$fullProduct2.ProductPrice,context:context,productUrl:getProductUrlSync(line.fullProduct.ProductDetails,context.actionContext,undefined),imageSettings:imageSettings,telemetry:telemetry,moduleId:this.props.id,moduleTypeName:this.props.typeName,quantity:line.productListLine.Quantity,handlers:{onAddToBag:this._addItemToBag,onRemoveItem:this._removeItemFromOrderTemplateLines,onChangeQuantity:debounce(this._changeQuantity,2000),onSelect:this.onSelect.bind(this)},resources:{productDimensionTypeColor:productDimensionTypeColor,productDimensionTypeSize:productDimensionTypeSize,productDimensionTypeStyle:productDimensionTypeStyle,freePriceText:priceFree,originalPriceText:originalPriceText,currentPriceText:currentPriceText,inputQuantityAriaLabel:inputQuantityAriaLabel,removeFromOrderTemplateLinesText:removeItemFromOrderTemplateButtonText,addToBagButtonText:addOrderTemplateItemToBagButtonText}};return OrderTemplateLineView(currentProductProps);});}};__decorate([action],OrderTemplateLines.prototype,\"componentDidMount\",null);OrderTemplateLines=__decorate([observer],OrderTemplateLines);export default OrderTemplateLines;","map":{"version":3,"sources":["modules/order-template/order-template.tsx"],"names":[],"mappings":"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","sourcesContent":["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { getPriceForSelectedVariant, getProductUrlSync, OrderTemplate, OrderTemplateLine, PriceForSelectedVariantInput } from '@msdyn365-commerce-modules/retail-actions';\nimport { Alert, getTelemetryObject, Heading, IModuleProps, INodeProps, ITelemetryContent, UncontrolledPagination } from '@msdyn365-commerce-modules/utilities';\nimport { IItemAddedToCartDialogData, IItemAddedToCartDialogResources, ILinesAddedToCartDialogResources, IOrderTemplateNameDialogResources, ItemAddedToCartDialog } from '@msdyn365-commerce/components';\nimport MsDyn365, { AsyncResult, getUrlSync, IRequestContext } from '@msdyn365-commerce/core';\nimport { getCartState } from '@msdyn365-commerce/global-state';\nimport { CartLine, ProductList, ProductListLine } from '@msdyn365-commerce/retail-proxy';\nimport { addCartLinesAsync } from '@msdyn365-commerce/retail-proxy/dist/DataActions/CartsDataActions.g';\nimport {\n    deleteAsync,\n    removeProductListLinesAsync,\n    updateProductListLinesAsync\n} from '@msdyn365-commerce/retail-proxy/dist/DataActions/ProductListsDataActions.g';\nimport { SimpleProduct } from '@msdyn365-commerce/retail-proxy/dist/Entities/CommerceTypes.g';\nimport classnames from 'classnames';\nimport debounce from 'lodash/debounce';\nimport { action } from 'mobx';\nimport { observer } from 'mobx-react';\nimport * as React from 'react';\nimport {\n    IOrderTemplateActionsProps,\n    IOrderTemplateActionsViewProps,\n    IOrderTemplateData,\n    IOrderTemplateLineProps,\n    IOrderTemplateLineViewProps,\n    IOrderTemplateProps,\n    IOrderTemplateResources,\n    IOrderTemplateTableHeading,\n    OrderTemplateActionsView,\n    OrderTemplateBulkActions,\n    OrderTemplateLinesStatusMessage,\n    OrderTemplateLineView,\n    OrderTemplateTableHeading\n} from '../../';\nimport { ActiveOrderTemplateLinesInput } from './actions/get-order-template';\n\nexport interface IOrderTemplateLineActionMessageState {\n    itemKey: string;\n    userMessage: string;\n    statusCssString: string;\n    messageGlyph: string;\n    isOpen: boolean;\n    isItemAddedToOrderTemplateOpen: boolean;\n    itemAddedToCartDialogData?: IItemAddedToCartDialogData;\n    productSelection: IOrderTemplateLineViewModel[];\n}\n\nexport type orderTemplateLinesStatus = 'LOADING' | 'SUCCESS' | 'FAILED' | 'EMPTY';\n\nexport interface IOrderTemplateViewProps extends IOrderTemplateProps<IOrderTemplateData> {\n    OrderTemplateLines: IModuleProps;\n    callbacks?: IOrderTemplateLinesCallbacks;\n    status?: orderTemplateLinesStatus;\n    statusMessage?: React.ReactNode;\n    heading?: React.ReactNode;\n    OrderTemplateActions?: INodeProps;\n    ProductsTable?: INodeProps;\n    ProductsTableRow?: INodeProps;\n    ProductsTableHeading?: React.ReactNode;\n    ProductDetails?: INodeProps;\n    orderLines?: IOrderTemplateLineViewProps[];\n    productListLines?: ProductListLine[];\n    productsStatusMessage?: React.ReactNode;\n    orderActions?: IOrderTemplateActionsViewProps | null;\n    resources: IOrderTemplateResources;\n    pagination?: React.ReactNode;\n    itemAddedToCartDialog?: React.ReactNode;\n    bulkOrderLineActions?: React.ReactNode;\n}\n\nexport interface IOrderTemplateLinesCallbacks {\n    updateQuantity(itemKey: string, quantity: number): void;\n}\n\nexport interface IOrderTemplateLineViewModel extends OrderTemplateLine {\n    isChecked: boolean;\n}\n\n/**\n *\n * OrderTemplateLines component\n * @extends {React.PureComponent<IOrderTemplateProps<IOrderTemplateData>, IOrderTemplateLineActionMessageState>}\n */\n@observer\nclass OrderTemplateLines extends React.Component<IOrderTemplateProps<IOrderTemplateData>, IOrderTemplateLineActionMessageState> {\n    private readonly className: string;\n    private telemetryContent?: ITelemetryContent;\n\n    constructor(props: IOrderTemplateProps<IOrderTemplateData>, state: IOrderTemplateLineActionMessageState) {\n        super(props);\n        this.className = 'ms-order-template';\n        this.state = {\n            itemKey: '',\n            userMessage: '',\n            statusCssString: 'success',\n            messageGlyph: 'fas fa-check',\n            isOpen: false,\n            isItemAddedToOrderTemplateOpen: false,\n            productSelection: []\n        };\n        this.telemetryContent = getTelemetryObject(this.props.context.request.telemetryPageName!, this.props.friendlyName, this.props.telemetry);\n    }\n\n    @action\n    public async componentDidMount(): Promise<void> {\n        this.setState({});\n        const orderTemplate = await this.props.data.orderTemplate;\n        this.props.config.heading!.text = orderTemplate.productList.Name || '';\n        this.setState({\n            productSelection: orderTemplate.orderTemplateLines as IOrderTemplateLineViewModel[]\n        });\n    }\n\n    public render(): JSX.Element | null {\n        const { heading, className } = this.props.config;\n        const { emptyOrderTemplateLinesText, errorGettingOrderTemplateLines } = this.props.resources;\n        const { orderTemplate, cart } = this.props.data;\n\n        if (cart.status === 'LOADING' || orderTemplate.status === 'LOADING') {\n            const errorProps: IOrderTemplateViewProps = {\n                ...(this.props as IOrderTemplateProps<IOrderTemplateData>),\n                OrderTemplateLines: {\n                    moduleProps: this.props,\n                    className: classnames(this.className, className)\n                },\n                status: 'LOADING',\n                statusMessage: <OrderTemplateLinesStatusMessage errorType='LOADING' text='Loading...' />,\n                heading: heading && <Heading className={`${this.className}__heading`} {...heading} />,\n                resources: this.props.resources\n            };\n            return this.props.renderView(errorProps);\n        }\n\n        if (cart.status === 'FAILED' || orderTemplate.status === 'FAILED') {\n            const errorProps: IOrderTemplateViewProps = {\n                ...(this.props as IOrderTemplateProps<IOrderTemplateData>),\n                OrderTemplateLines: {\n                    moduleProps: this.props,\n                    className: classnames(`${this.className}`, className)\n                },\n                status: 'FAILED',\n                statusMessage: <OrderTemplateLinesStatusMessage errorType='FAILED' text={errorGettingOrderTemplateLines} />,\n                heading: heading && <Heading className={`${this.className}__heading`} {...heading} />,\n                resources: this.props.resources\n            };\n\n            return this.props.renderView(errorProps);\n        }\n\n        const orderTemplateResult = orderTemplate && orderTemplate.result;\n        const orderTemplateLines= orderTemplateResult && orderTemplateResult.orderTemplateLines;\n\n        if (!orderTemplateResult || !orderTemplateLines || orderTemplateLines.length === 0) {\n            const emptyViewProps: IOrderTemplateViewProps = {\n                ...(this.props as IOrderTemplateProps<IOrderTemplateData>),\n                OrderTemplateLines: {\n                    moduleProps: this.props,\n                    className: classnames(`${this.className}`, className)\n                },\n                status: 'EMPTY',\n                statusMessage: <OrderTemplateLinesStatusMessage errorType='EMPTY' text={emptyOrderTemplateLinesText} />,\n                heading: heading && <Heading className={`${this.className}__heading`} {...heading} />,\n                resources: this.props.resources\n            };\n\n            return this.props.renderView(emptyViewProps);\n        }\n\n        const viewProps: IOrderTemplateViewProps = {\n            ...(this.props as IOrderTemplateProps<IOrderTemplateData>),\n            OrderTemplateLines: {\n                moduleProps: this.props,\n                className: classnames(`${this.className}`, className)\n            },\n            resources: this.props.resources,\n            status: 'SUCCESS',\n            productsStatusMessage: this.state.isOpen && (\n                <div className={`${this.className}-products-status`}>\n                    <Alert color={this.state.statusCssString} isOpen={this.state.isOpen} toggle={this._onDismiss}>\n                        <span>{this.state.userMessage}</span>\n                    </Alert>\n                </div>\n            ),\n            heading: heading && <Heading className={`${this.className}__heading`} {...heading} />,\n            OrderTemplateActions: {\n                className: `${this.className}-action-bar`,\n                tag: 'div'\n            },\n            ProductsTable: {\n                className: `${this.className}__table`,\n                tag: 'table'\n            },\n            ProductsTableRow: {\n                className: `${this.className}-table-line`,\n                tag: 'tr'\n            },\n            ProductsTableHeading: this._renderProductListHeader(this.props.resources),\n            ProductDetails: {\n                className: `${this.className}-table-line__link`,\n                tag: 'a'\n            },\n            orderLines: this._renderProductList(),\n            callbacks: { updateQuantity: debounce(this._changeQuantity, 2000) },\n            orderActions: this._renderOrderActions(orderTemplateResult),\n            pagination: this._renderPagination(),\n            itemAddedToCartDialog: this._renderItemAddedToCartDialog(),\n            bulkOrderLineActions: this._getBulkActions(orderTemplateResult.productList.Id)\n        };\n\n        return this.props.renderView(viewProps) as React.ReactElement;\n    }\n\n    public onSelect(line: IOrderTemplateLineViewModel, isChecked: boolean): void {\n        line.isChecked = isChecked;\n\n        const updated = this.state.productSelection.map(product => {\n            if (product.fullProduct?.ProductDetails.ItemId === line.fullProduct?.ProductDetails.ItemId) {\n                line.isChecked = isChecked;\n            }\n            return product;\n        }) || [];\n\n        this.setState({\n            productSelection: updated\n        });\n    }\n\n    public onSelectAll(isChecked: boolean): void {\n        const updated = this.state.productSelection.map(line => {\n            line.isChecked = isChecked;\n            return line;\n        }) || [];\n\n        this.setState({\n            productSelection: updated\n        });\n    }\n\n    private _renderProductListHeader(resources: IOrderTemplateResources): React.ReactNode {\n        const { productNumberText, productText, productUnitPriceText, productUOMText, productQuantityText, productActionsText } = resources;\n        const headers: IOrderTemplateTableHeading = {\n            productNumber: productNumberText,\n            productName: productText,\n            productUnitPrice: productUnitPriceText,\n            productUOM: productUOMText,\n            productQuantity: productQuantityText,\n            productActions: productActionsText,\n            clickHandler: (isChecked: boolean) => this.onSelectAll(isChecked)\n        };\n\n        return <OrderTemplateTableHeading {...headers}/>;\n    }\n\n    private _getBulkActions(orderTemplateId: string): React.ReactNode {\n        return OrderTemplateBulkActions({\n            ...this.props,\n            orderTemplateId: orderTemplateId,\n            onAddSelectionToBag: this._onAddSelectionToBag,\n            onRemoveSelection: this._onRemoveSelection\n        });\n    }\n\n    private _generateLinesAddedToCartDialogResources(): ILinesAddedToCartDialogResources {\n        return {\n            viewCartButtonText: this.props.resources.viewCartButtonText,\n            orderTemplateCloseButtonText: this.props.resources.orderTemplateCloseButtonText,\n            linesAddedToCartHeaderItemsOneText: this.props.resources.linesAddedToCartHeaderItemsOneText,\n            linesAddedToCartHeaderLinesOneText: this.props.resources.linesAddedToCartHeaderLinesOneText,\n            linesAddedToCartHeaderLinesFormatText: this.props.resources.linesAddedToCartHeaderLinesFormatText,\n            linesAddedToCartHeaderMessageText: this.props.resources.linesAddedToCartHeaderMessageText\n        };\n    }\n\n    private _generateItemAddedToCartDialogResources(): IItemAddedToCartDialogResources {\n        return {\n            viewCartButtonText: this.props.resources.viewCartButtonText,\n            orderTemplateCloseButtonText: this.props.resources.orderTemplateCloseButtonText,\n            itemAddedToCartHeaderItemOneText: this.props.resources.itemAddedToCartHeaderItemOneText,\n            itemAddedToCartHeaderItemFormatText: this.props.resources.itemAddedToCartHeaderItemFormatText,\n            itemAddedToCartHeaderMessageText: this.props.resources.itemAddedToCartHeaderMessageText,\n            freePriceText: this.props.resources.freePriceText,\n            originalPriceText: this.props.resources.originalPriceText,\n            currentPriceText: this.props.resources.currentPriceText\n        };\n    }\n\n    /**\n     * @TODO user progress notification - current implementation is to refresh page upon XHR success\n     * @param event React.MouseEvent\n     */\n    private _onRemoveSelection = (event: React.MouseEvent<HTMLElement>) => {\n        const { context, resources } = this.props;\n        const { telemetry } = context;\n        const { removeSelectedFailureMessage, removeSelectedSuccessMessage } = resources;\n        const lines = this.state.productSelection;\n        const productListLines = lines && lines.length && lines\n            .filter(line => line.isChecked)\n            .map(line => line.productListLine);\n\n        if (productListLines && productListLines.length) {\n            const productListId = productListLines[0].ProductListId;\n\n            removeProductListLinesAsync({ callerContext: context.actionContext }, productListId!, productListLines)\n                .then(() => {\n                    this.setState({\n                        userMessage: removeSelectedSuccessMessage,\n                        statusCssString: 'success',\n                        messageGlyph: 'fas fa-check',\n                        isOpen: true\n                    });\n                    window.location.reload();\n                })\n                .catch(error => {\n                    telemetry.warning('[order-template-lines] Unable remove items from the order template lines');\n                    telemetry.error(error);\n                    this.setState({\n                        userMessage: removeSelectedFailureMessage,\n                        statusCssString: 'success',\n                        messageGlyph: 'fas fa-check',\n                        isOpen: true\n                    });\n                });\n        }\n    }\n\n    private _onAddSelectionToBag = async (event: React.MouseEvent<HTMLElement>) => {\n        const { context, resources } = this.props;\n        const { addedToCartFailureMessage, addedToCartSuccessMessage } = resources;\n        const lines = this.state.productSelection;\n        const cartState = await getCartState(context.actionContext);\n        const selectedLines = lines.filter(line => line.isChecked);\n\n        if (selectedLines.length) {\n            const cartLines = selectedLines.map(productLine => {\n                return {\n                    ItemId: productLine.fullProduct?.ProductDetails.ItemId,\n                    ProductId: productLine.productListLine.ProductId,\n                    Quantity: productLine.productListLine.Quantity || 1,\n                    TrackingId: '',\n                    UnitOfMeasureSymbol: productLine.productListLine.UnitOfMeasure || productLine.fullProduct?.ProductDetails.DefaultUnitOfMeasure\n                } as CartLine ;\n            }) || [];\n\n            return addCartLinesAsync({ callerContext: context.actionContext }, cartState.cart.Id, cartLines, cartState.cart.Version!)\n                .then(async res => {\n                    context.telemetry.trace(`Order template; selected line items (${cartLines.map(line => line.ItemId).join(',')}) added to cart: ${cartState.cart.Id}`);\n                    await cartState.refreshCart({});\n                    this.setState({\n                        userMessage: addedToCartSuccessMessage,\n                        statusCssString: 'success',\n                        messageGlyph: 'fas fa-check',\n                        isOpen: true\n                    });\n                })\n                .catch(error => {\n                    context.telemetry.trace('Unable to add order template to cart.');\n                    this.setState({\n                        userMessage: addedToCartFailureMessage,\n                        statusCssString: 'danger',\n                        messageGlyph: 'fas fa-exclamation-triangle',\n                        isOpen: true\n                    });\n                });\n        }\n    };\n\n    private _renderOrderActions(orderTemplate: OrderTemplate): IOrderTemplateActionsViewProps {\n        const { id, typeName, context, resources } = this.props;\n        const {\n            addTemplateToBagButtonText,\n            renameTemplateButtonText,\n            deleteTemplateButtonText,\n            closeWindowButtonText,\n            addToCartFailureMessage,\n            addToCartSuccessMessage,\n            addToCartProcessMessage\n        } = resources;\n\n        const orderTemplateActions: IOrderTemplateActionsProps = {\n            data: { orderTemplate },\n            id: id,\n            typeName: typeName,\n            context: context,\n            telemetryContent: this.telemetryContent,\n            handlers: {\n                onRenameTemplate: this._renameTemplate,\n                onRemoveTemplate: this._removeTemplate\n            },\n            renameOrderTemplateDialogStrings: this._generateOrderTemplateNameDialogResources(resources),\n            resources: {\n                addTemplateToBagButtonText: addTemplateToBagButtonText,\n                renameTemplateButtonText: renameTemplateButtonText,\n                deleteTemplateButtonText: deleteTemplateButtonText,\n                addToCartFailureMessage: addToCartFailureMessage,\n                addToCartSuccessMessage: addToCartSuccessMessage,\n                addToCartProcessMessage: addToCartProcessMessage,\n                closeWindowButtonText: closeWindowButtonText,\n                linesAddedToCartDialogResources: this._generateLinesAddedToCartDialogResources()\n            }\n        };\n\n        return OrderTemplateActionsView(orderTemplateActions);\n    }\n\n    private _generateOrderTemplateNameDialogResources(resources: IOrderTemplateResources): IOrderTemplateNameDialogResources {\n        return {\n            orderTemplateHeaderLabel: resources.renameOrderTemplateTitleText,\n            orderTemplateTitleLabel: resources.orderTemplateTitle,\n            orderTemplateNameAriaLabel: resources.orderTemplateTitle,\n            orderTemplateDescription: '',\n            defaultOrderTemplateName: resources.defaultOrderTemplateName,\n            orderTemplateButtonLabel: resources.renameOrderTemplateButtonText,\n            orderTemplateCancelButtonLabel: resources.cancelBtnLabel\n        };\n    }\n\n    private _getCurrentUrl = (reqContext: IRequestContext): URL=> {\n        if (MsDyn365.isBrowser) {\n            return new URL(window.location.href);\n        }\n        return new URL(reqContext.url.requestUrl.href);\n    }\n\n    private _renderItemAddedToCartDialog = (): React.ReactNode | null => {\n        if (!this.state.itemAddedToCartDialogData) {\n            return null;\n        }\n\n        const onClose = () => {\n            this.setState({\n                itemKey: this.state.itemKey,\n                userMessage: this.state.userMessage,\n                statusCssString: this.state.statusCssString,\n                messageGlyph: this.state.messageGlyph,\n                isOpen: this.state.isOpen,\n                isItemAddedToOrderTemplateOpen: false\n            });\n        };\n\n        return (\n            <ItemAddedToCartDialog\n                className={'msc-item-added-to-cart-dialog'}\n                id={this.props.id}\n                typeName={this.props.typeName}\n                context={this.props.context}\n                dialogStrings={this._generateItemAddedToCartDialogResources()}\n                data={this.state.itemAddedToCartDialogData}\n                modalOpen={this.state.isItemAddedToOrderTemplateOpen}\n                onClose={onClose}\n            />\n        );\n    }\n\n    private _renderPagination = (): React.ReactNode | null => {\n        const { config, context, data, resources } = this.props;\n        const orderTemplate = data && data.orderTemplate && data.orderTemplate.result;\n        if (!orderTemplate) {\n            return null;\n        }\n\n        const fullUrl = this._getCurrentUrl(context.request);\n        const itemsPerPage = config.itemsPerPage || 50;\n        const currentPageNumber = this.props.context.request.query && (+this.props.context.request.query.skip / itemsPerPage) || 0;\n        const skipCount = currentPageNumber * itemsPerPage;\n        const totalItems = orderTemplate && orderTemplate.totalLines;\n        const previousText = resources.flipperPrevious;\n        const nextText = resources.flipperNext;\n\n        if (totalItems <= itemsPerPage) {\n            return null;\n        }\n\n        return (\n            <UncontrolledPagination\n                className={`${this.className}__pagination`}\n                role='navigation'\n                aria-label={resources.paginationAriaLabel}\n                url={fullUrl.href}\n                qsp={'skip'}\n                items={totalItems}\n                itemsPerPage={itemsPerPage}\n                startingItem={skipCount}\n                previousText={<div className='msc-pagination__prev'><span className={`${this.props.config.className}__pagination-left`} aria-hidden='true'/><span className='prev-text'>{previousText}</span></div>}\n                nextText={<div className='msc-pagination__next'><span className='next-text'>{nextText}</span><span className={`${this.props.config.className}__pagination-right`} aria-hidden='true'/></div>}\n                previousAriaLabel={previousText}\n                nextAriaLabel={nextText}\n            />\n        );\n    }\n\n    private _renderProductList(): IOrderTemplateLineViewProps[] {\n        const {\n            priceFree,\n            originalPriceText,\n            currentPriceText,\n            addOrderTemplateItemToBagButtonText,\n            removeItemFromOrderTemplateButtonText,\n            productDimensionTypeColor,\n            productDimensionTypeSize,\n            productDimensionTypeStyle,\n            inputQuantityAriaLabel\n        } = this.props.resources;\n\n        const { context, telemetry } = this.props;\n        const { imageSettings } = this.props.config;\n\n        return this.state.productSelection?.map((line, index) => {\n            const currentProductProps: IOrderTemplateLineProps = {\n                orderTemplateLine: line,\n                productListLine: line.productListLine ,\n                price: line.fullProduct?.ProductPrice,\n                context: context,\n                productUrl: getProductUrlSync(line.fullProduct!.ProductDetails, context.actionContext, undefined),\n                imageSettings: imageSettings,\n                telemetry: telemetry,\n                moduleId: this.props.id,\n                moduleTypeName: this.props.typeName,\n                quantity: line.productListLine.Quantity!,\n                handlers: {\n                    onAddToBag: this._addItemToBag,\n                    onRemoveItem: this._removeItemFromOrderTemplateLines,\n                    onChangeQuantity: debounce(this._changeQuantity, 2000),\n                    onSelect: this.onSelect.bind(this)\n                },\n                resources: {\n                    productDimensionTypeColor: productDimensionTypeColor,\n                    productDimensionTypeSize: productDimensionTypeSize,\n                    productDimensionTypeStyle: productDimensionTypeStyle,\n                    freePriceText: priceFree,\n                    originalPriceText: originalPriceText,\n                    currentPriceText: currentPriceText,\n                    inputQuantityAriaLabel: inputQuantityAriaLabel,\n                    removeFromOrderTemplateLinesText: removeItemFromOrderTemplateButtonText,\n                    addToBagButtonText: addOrderTemplateItemToBagButtonText\n                }\n            };\n\n            return OrderTemplateLineView(currentProductProps)!;\n        });\n    }\n\n    // dismiss alert when addingToCart/removeItem\n    private _onDismiss = () => {\n        this.setState({\n            isOpen: false\n        });\n    };\n\n    private _changeQuantity = (itemKey: string, quantity: number) => {\n        const { context, data, telemetry, config } = this.props;\n        const { orderTemplate } = data;\n\n        if (context) {\n            if (orderTemplate.result) {\n                const orderTemplateLinesData = orderTemplate && orderTemplate.result && orderTemplate.result.orderTemplateLines;\n                if (orderTemplateLinesData) {\n                    const orderLineIndex = orderTemplateLinesData.findIndex(lines => lines.productListLine.LineId === itemKey);\n                    const newProductListLine = { ...orderTemplateLinesData[orderLineIndex] };\n                    if (orderTemplateLinesData[orderLineIndex].productListLine.Quantity === quantity) {\n                        return;\n                    }\n\n                    newProductListLine.productListLine.Quantity = quantity;\n                    const { fullProduct, ...line } = newProductListLine;\n\n                    updateProductListLinesAsync({ callerContext: context.actionContext }, orderTemplate.result.productList.Id, [line.productListLine])\n                        .then(list => {\n                            this.setState({\n                                itemKey: itemKey,\n                                userMessage: '',\n                                statusCssString: 'success',\n                                messageGlyph: 'fas fa-check',\n                                isOpen: false\n                            });\n                            if (list) {\n                                const newLine = list.find(lines => lines.LineId === itemKey);\n                                orderTemplateLinesData[orderLineIndex].productListLine = newLine!;\n                                const updatedLines = [...orderTemplateLinesData];\n                                updatedLines[orderLineIndex] = { fullProduct, productListLine: newLine! };\n                                const updatedOrderTemplate = { ...orderTemplate.result, ProductListLines: updatedLines };\n                                context.actionContext.update(new ActiveOrderTemplateLinesInput(context.actionContext.requestContext, config), updatedOrderTemplate);\n                            }\n                        })\n                        .catch(error => {\n                            telemetry.warning('[order-template-lines] Unable to update product quantity.');\n                            telemetry.error(error);\n                            this.setState({\n                                itemKey: itemKey,\n                                userMessage: 'Failed to update quantity value.',\n                                statusCssString: 'danger',\n                                messageGlyph: 'fas fa-exclamation-triangle',\n                                isOpen: true\n                            });\n                        });\n                }\n            }\n        }\n    };\n\n    private _addItemToBag = (product: SimpleProduct, quantity: number, itemKey: string): void => {\n        const { context, data, resources, telemetry } = this.props;\n        const { cart } = data;\n        const { maxQuantityLimitText, addedToCartFailureMessage } = resources;\n\n        if (context) {\n            if (cart.result) {\n                const addProductToCartInput = {\n                    product: product,\n                    count: quantity\n                };\n\n                cart.result\n                    .addProductToCart(addProductToCartInput)\n                    .then(result => {\n                        if (result.status === 'SUCCESS') {\n                            return getPriceForSelectedVariant(\n                                new PriceForSelectedVariantInput(\n                                    product.RecordId,\n                                    this.props.context.actionContext.requestContext.apiSettings.channelId,\n                                    product),\n                                this.props.context.actionContext).then(priceResult => {\n                                    if (!priceResult) {\n                                        return AsyncResult.reject('Failed to retrieve product price');\n                                    }\n                                    this.setState({\n                                        itemKey: itemKey,\n                                        userMessage: '',\n                                        statusCssString: 'success',\n                                        messageGlyph: 'fas fa-check',\n                                        isOpen: false,\n                                        isItemAddedToOrderTemplateOpen: true,\n                                        itemAddedToCartDialogData: {\n                                            product: product,\n                                            productPrice: priceResult,\n                                            quantity: quantity\n                                        }\n                                    });\n                                    return AsyncResult.resolve();\n                                });\n                        } else if (result.substatus === 'MAXQUANTITY') {\n                            this.setState({\n                                itemKey: itemKey,\n                                userMessage:\n                                    maxQuantityLimitText\n                                        .replace('{curQuantity}', quantity.toString())\n                                        .replace('{maxQuantity}', context.app.config.maxQuantityForProductListLineItem.toString()) ||\n                                    `You can only add ${context.app.config.maxQuantityForProductListLineItem} of this item to your shopping bag`,\n                                statusCssString: 'danger',\n                                messageGlyph: 'fas fa-exclamation-triangle',\n                                isOpen: true\n                            });\n                            return AsyncResult.resolve();\n                        } else {\n                            telemetry.debug('[order-template-lines] Unable to Update Cart Line from the order template lines');\n                            this.setState({\n                                itemKey: itemKey,\n                                userMessage: addedToCartFailureMessage,\n                                statusCssString: 'danger',\n                                messageGlyph: 'fas fa-exclamation-triangle',\n                                isOpen: true\n                            });\n                            return AsyncResult.resolve();\n                        }\n                    })\n                    .catch(error => {\n                        telemetry.warning(error);\n                        telemetry.debug('[order-template-lines] Error trying to Update Cart Line from the order template lines');\n                        this.setState({\n                            itemKey: itemKey,\n                            userMessage: addedToCartFailureMessage,\n                            statusCssString: 'danger',\n                            messageGlyph: 'fas fa-exclamation-triangle',\n                            isOpen: true\n                        });\n                    });\n            }\n        }\n    };\n\n    private _removeItemFromOrderTemplateLines = (listLineId: string): void | undefined => {\n        const { context, data, telemetry } = this.props;\n        const { orderTemplate } = data;\n\n        if (context && context.actionContext) {\n            const userToken = context.request.user.isAuthenticated && context.request.user.token;\n            if (userToken && orderTemplate.result && orderTemplate.result && listLineId) {\n                const listLine = orderTemplate.result.orderTemplateLines.find(l => l.productListLine.LineId === listLineId);\n                if (listLine) {\n                    const productListId = listLine.productListLine.ProductListId;\n                    const { fullProduct, ...line } = listLine;\n                    removeProductListLinesAsync({ callerContext: context.actionContext }, productListId!, [line.productListLine])\n                        .then(() => {\n                            window.location.reload(false);\n                        })\n                        .catch(error => {\n                            telemetry.warning('[order-template-lines] Unable remove items from the order template lines');\n                            telemetry.error(error);\n                        });\n                }\n            } else {\n                telemetry.warning(\n                    '[order-template-lines] Unable remove items from the order template lines user token or lineItemID was not found'\n                );\n            }\n        }\n    };\n\n    private  _renameTemplate = async (_template: ProductList): Promise<void> => {\n        window.location.reload(false);\n        return Promise.resolve();\n    };\n\n    private _removeTemplate = () => {\n        const { context, data, telemetry, resources } = this.props;\n        const { orderTemplate } = data;\n\n        if (context && context.actionContext) {\n            const userToken = context.request.user.isAuthenticated && context.request.user.token;\n            if (userToken && orderTemplate && orderTemplate.result) {\n                deleteAsync({ callerContext: context.actionContext }, orderTemplate.result.productList)\n                .then()\n                .catch((error: string) => {\n                        telemetry.warning('[order-template] Unable to delete order template.');\n                        telemetry.error(error);\n                        this.setState({\n                            itemKey: orderTemplate.result?.productList.Id || '',\n                            userMessage: resources.deleteOrderTemplateFailedText,\n                            statusCssString: 'danger',\n                            messageGlyph: 'fas fa-exclamation-triangle',\n                            isOpen: true\n                        });\n                });\n                const newLink = getUrlSync('ordertemplatelist', this.props.context.actionContext);\n                if (newLink) {\n                    window.location.assign(newLink);\n                }\n            } else {\n            telemetry.warning('[order-template] Failed to delete order template. Order template was not found');\n            }\n        } else {\n                telemetry.warning('[order-template] Failed to delete order template.');\n        }\n    };\n}\n\nexport default OrderTemplateLines;\n"],"sourceRoot":"./src/"},"metadata":{},"sourceType":"module"}