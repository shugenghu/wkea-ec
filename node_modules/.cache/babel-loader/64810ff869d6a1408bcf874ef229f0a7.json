{"ast":null,"code":"\"use strict\";Object.defineProperty(exports,\"__esModule\",{value:true});var tslib_1=require(\"tslib\");var classnames_1=tslib_1.__importDefault(require(\"classnames\"));var React=tslib_1.__importStar(require(\"react\"));var LabeledDropdown=function(_super){tslib_1.__extends(LabeledDropdown,_super);function LabeledDropdown(props){var _this=_super.call(this,props)||this;_this._onSelectOption=_this._onSelectOption.bind(_this);var selectedKey=_this.props.selectedOption.key;var keys=_this.props.dropdownOptions.map(function(option){return option.key;});_this.state={selectedIndex:keys.indexOf(selectedKey)};return _this;}LabeledDropdown.prototype.render=function(){var _a=this.props,labelText=_a.labelText,labelClassname=_a.labelClassname,dropdownId=_a.dropdownId,dropdownOptions=_a.dropdownOptions,dropdownClassname=_a.dropdownClassname;var labelClassNames=classnames_1[\"default\"]('msc-l-dropdown__label',labelClassname);var dropdownClassNames=classnames_1[\"default\"]('msc-l-dropdown',dropdownClassname);var selectedIndex=this._getSelectedIndex();return React.createElement(React.Fragment,null,React.createElement(\"label\",{className:labelClassNames,htmlFor:dropdownId},labelText),React.createElement(\"select\",{id:dropdownId,className:dropdownClassNames,onChange:this._onSelectOption},dropdownOptions.map(function(option,index){var selected=index===selectedIndex;return React.createElement(\"option\",{className:'msc-l-dropdown__option',key:option.key,selected:selected,\"aria-selected\":selected},option.value);})));};LabeledDropdown.prototype._getSelectedIndex=function(){if(this.props.controlledByParent){var selectedIndex=-1;var selectedKey=this.props.selectedOption.key;for(var i=0;i<this.props.dropdownOptions.length;i++){if(this.props.dropdownOptions[i].key===selectedKey){selectedIndex=i;break;}}return selectedIndex;}return this.state.selectedIndex;};LabeledDropdown.prototype._onSelectOption=function(event){var _a=this.props,dropdownOptions=_a.dropdownOptions,onSelectOption=_a.onSelectOption;var index=event.currentTarget.selectedOptions[0].index;var selectedOption=dropdownOptions[index];this.setState({selectedIndex:index});onSelectOption({selectedOption:selectedOption});};LabeledDropdown.defaultProps={toggleColor:'link'};return LabeledDropdown;}(React.Component);exports[\"default\"]=LabeledDropdown;","map":{"version":3,"sources":["/Users/User/Documents/wkea-ec/Msdyn365.Commerce.Online/node_modules/@msdyn365-commerce-modules/utilities/src/labeled-dropdown/LabeledDropdown.tsx"],"names":[],"mappings":"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","sourcesContent":["import classNames from 'classnames';\nimport * as React from 'react';\nimport { ILabeledDropdownProps } from './LabeledDropdown.props';\n\nexport interface ILabeledDropdownState {\n    selectedIndex: number;\n}\n\n/**\n * Labeled Dropdown component\n */\nexport default class LabeledDropdown extends React.Component<ILabeledDropdownProps, ILabeledDropdownState> {\n    public static defaultProps: Partial<ILabeledDropdownProps> = {\n        toggleColor: 'link'\n    };\n\n    constructor(props: ILabeledDropdownProps) {\n        super(props);\n        this._onSelectOption = this._onSelectOption.bind(this);\n        const selectedKey = this.props.selectedOption.key;\n        const keys = this.props.dropdownOptions.map(option => (option.key));\n        this.state = {selectedIndex: keys.indexOf(selectedKey)};\n    }\n\n    public render(): JSX.Element {\n        const {\n            labelText,\n            labelClassname,\n            dropdownId,\n            dropdownOptions,\n            dropdownClassname,\n        } = this.props;\n\n        const labelClassNames = classNames('msc-l-dropdown__label', labelClassname);\n        const dropdownClassNames = classNames('msc-l-dropdown', dropdownClassname);\n        const selectedIndex = this._getSelectedIndex();\n\n        return (\n        <>\n            <label className={labelClassNames} htmlFor={dropdownId}>{labelText}</label>\n            <select id={dropdownId} className={dropdownClassNames} onChange={this._onSelectOption}>\n                {dropdownOptions.map((option, index) => {\n                    const selected = index === selectedIndex;\n                    return <option className='msc-l-dropdown__option' key={option.key} selected={selected} aria-selected={selected}>{option.value}</option>;\n                })}\n            </select>\n        </>\n        );\n    }\n\n    private _getSelectedIndex(): number {\n        if (this.props.controlledByParent) {\n            let selectedIndex = -1;\n            const selectedKey = this.props.selectedOption.key;\n            for (let i = 0; i < this.props.dropdownOptions.length; i++) {\n                if (this.props.dropdownOptions[i].key === selectedKey) {\n                    selectedIndex = i;\n                    break;\n                }\n            }\n\n            return selectedIndex;\n        }\n\n        return this.state.selectedIndex;\n    }\n\n    private _onSelectOption(event: React.ChangeEvent<HTMLSelectElement>): void {\n        const {\n            dropdownOptions,\n            onSelectOption\n        } = this.props;\n        const index = event.currentTarget.selectedOptions[0].index;\n        const selectedOption = dropdownOptions[index];\n        this.setState({selectedIndex: index});\n        onSelectOption({selectedOption});\n    }\n}\n"]},"metadata":{},"sourceType":"script"}