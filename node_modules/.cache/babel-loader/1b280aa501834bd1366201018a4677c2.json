{"ast":null,"code":"import\"core-js/modules/es.promise.js\";import\"core-js/modules/es.regexp.to-string.js\";import\"core-js/modules/es.string.replace.js\";import\"core-js/modules/web.dom-collections.iterator.js\";import _defineProperty from\"@babel/runtime/helpers/esm/defineProperty\";function ownKeys(object,enumerableOnly){var keys=Object.keys(object);if(Object.getOwnPropertySymbols){var symbols=Object.getOwnPropertySymbols(object);if(enumerableOnly)symbols=symbols.filter(function(sym){return Object.getOwnPropertyDescriptor(object,sym).enumerable;});keys.push.apply(keys,symbols);}return keys;}function _objectSpread(target){for(var i=1;i<arguments.length;i++){var source=arguments[i]!=null?arguments[i]:{};if(i%2){ownKeys(Object(source),true).forEach(function(key){_defineProperty(target,key,source[key]);});}else if(Object.getOwnPropertyDescriptors){Object.defineProperties(target,Object.getOwnPropertyDescriptors(source));}else{ownKeys(Object(source)).forEach(function(key){Object.defineProperty(target,key,Object.getOwnPropertyDescriptor(source,key));});}}return target;}import{__decorate}from\"tslib\";import{getProductUrlSync}from'@msdyn365-commerce-modules/retail-actions';import{getTelemetryObject}from'@msdyn365-commerce-modules/utilities';import*as MsDyn365 from'@msdyn365-commerce/core';import{createGetByCustomerInput,removeLinesAsync}from'@msdyn365-commerce/retail-proxy/dist/DataActions/CommerceListsDataActions.g';import classnames from'classnames';import{observer}from'mobx-react';import*as React from'react';import getItemsInWishlists,{ActiveWishlistInput}from'./actions/get-items-in-wishlists';import{WishlistItem,WishlistItemsStatusMessage}from'./components/';let WishlistItems=class WishlistItems extends React.Component{constructor(props){super(props);this.handleHeadingChange=event=>this.props.config.heading.text=event.target.value;this._onDismiss=()=>{this.setState({isOpen:false});};this._renderHeading=heading=>{if(!heading){return undefined;}return/*#__PURE__*/React.createElement(MsDyn365.Text,{className:'ms-wishlist-items__heading',tag:heading.tag||'h2',text:heading.text,editProps:{onEdit:this.handleHeadingChange,requestContext:this.props.context.request}});};this._addItemToCart=async(product,itemKey)=>{const{context,data,resources,telemetry}=this.props;const{cart,productAvailability}=data;const{addedToCartSuccessMessage,addedToCartFailureMessage}=resources;const productInventoryInformation=this._getProductInventory({ProductDetails:product},productAvailability.result);if(context){if(cart.result){const addProductToCartInput={product:product,quantity:1,enableStockCheck:context.app.config.enableStockCheck,availableQuantity:productInventoryInformation?productInventoryInformation.ProductAvailableQuantity.AvailableQuantity:0};cart.result.addProductToCart(addProductToCartInput).then(async result=>{if(result.status==='SUCCESS'){this.setState({productId:product.RecordId,itemKey:itemKey,userMessage:addedToCartSuccessMessage,statusCssString:'success',messageGlyph:'fas fa-check',isOpen:true});}else if(result.substatus==='MAXQUANTITY'){var _await$cart$cart,_await$cart$cart$Cart,_await$cart$cart$Cart2;const curQuantity=((_await$cart$cart=(await cart).cart)===null||_await$cart$cart===void 0?void 0:(_await$cart$cart$Cart=_await$cart$cart.CartLines)===null||_await$cart$cart$Cart===void 0?void 0:(_await$cart$cart$Cart2=_await$cart$cart$Cart.find(item=>item.ProductId===product.RecordId))===null||_await$cart$cart$Cart2===void 0?void 0:_await$cart$cart$Cart2.Quantity)||0;const maxQtyLimitReachedMessage=this._getInventoryValueMessage(productInventoryInformation,curQuantity);this.setState({productId:product.RecordId,itemKey:itemKey,userMessage:maxQtyLimitReachedMessage,statusCssString:'danger',messageGlyph:'fas fa-exclamation-triangle',isOpen:true});}else{this.props.telemetry.debug('[wishlist-items] Unable to Update Cart Line from the wishlist');this.setState({productId:product.RecordId,itemKey:itemKey,userMessage:addedToCartFailureMessage,statusCssString:'danger',messageGlyph:'fas fa-exclamation-triangle',isOpen:true});}}).catch(error=>{telemetry.warning(error);telemetry.debug('[wishlist-items] Error trying to Update Cart Line from the wishlist');this.setState({productId:product.RecordId,itemKey:itemKey,userMessage:addedToCartFailureMessage,statusCssString:'danger',messageGlyph:'fas fa-exclamation-triangle',isOpen:true});});}}};this._removeItemFromWishlist=productId=>{const{context,data,telemetry}=this.props;const{wishlists}=data;if(context&&context.actionContext){const userToken=context.request.user.isAuthenticated&&context.request.user.token;const wishlistLineId=this._getWishlistLineIdFromProductId(productId);if(userToken&&wishlists.result&&wishlists.result[0]&&wishlistLineId){removeLinesAsync({callerContext:context.actionContext},wishlists.result[0].Id,[{LineId:wishlistLineId}]).then(commerceList=>{const castCommerceList=commerceList;if(castCommerceList&&castCommerceList.Id&&context.request.user.isAuthenticated){context.actionContext.update(createGetByCustomerInput({},null),[castCommerceList]);getItemsInWishlists(new ActiveWishlistInput(),context.actionContext).then(products=>{const castSimpleProducts=products;if(castSimpleProducts&&castSimpleProducts.length>0){context.actionContext.update(new ActiveWishlistInput(),castSimpleProducts);}}).catch(error=>{telemetry.warning('[wishlist-items] Unable to hyderate the wishlist with product information');telemetry.error(error);});}}).catch(error=>{telemetry.warning('[wishlist-items] Unable remove items from the wishlist');telemetry.error(error);});}else{telemetry.warning('[wishlist-items] Unable remove items from the wishlist user token or lineItemID wasn\\'t found');}}};this._inventoryLabel=product=>{const{productAvailability}=this.props.data;if(productAvailability&&productAvailability.result){const productInventoryInformation=this._getProductInventory(product,productAvailability.result);if(productInventoryInformation){return productInventoryInformation.StockLevelLabel;}}return undefined;};this._inventoryClassName=product=>{const{productAvailability}=this.props.data;if(productAvailability&&productAvailability.result){const productInventoryInformation=this._getProductInventory(product,productAvailability.result);if(productInventoryInformation&&productInventoryInformation.StockLevelCode){return\"ms-wishlist-items__\".concat(productInventoryInformation.StockLevelCode.toLowerCase());}}return undefined;};this._isProductInStock=product=>{const{data,context}=this.props;const{productAvailability}=data;if(!context.app.config.enableStockCheck){return true;}if(!productAvailability.result||!product.ProductDetails){return false;}for(const productResult of productAvailability.result){if(productResult.ProductAvailableQuantity&&productResult.ProductAvailableQuantity.ProductId&&productResult.ProductAvailableQuantity.ProductId===product.ProductDetails.RecordId){return productResult.IsProductAvailable;}}return false;};this._getWishlistLineIdFromProductId=productId=>{const{wishlists}=this.props.data;if(!wishlists.result||!(wishlists.result.length>0)||!wishlists.result[0].CommerceListLines||!(wishlists.result[0].CommerceListLines.length>0)){this.props.telemetry.error('Wishlist content is empty, module wont render.');return null;}const foundWishlistItem=wishlists.result[0].CommerceListLines.filter(commerceListLine=>{return commerceListLine.ProductId===productId;});if(foundWishlistItem&&foundWishlistItem[0].LineId){return foundWishlistItem[0].LineId;}else{return null;}};this.telemetryContent=getTelemetryObject(this.props.context.request.telemetryPageName,this.props.friendlyName,this.props.telemetry);}async componentDidMount(){this.setState({});}render(){const{heading,className}=this.props.config;const{emptyWishlistText,wishlistErrorGettingWishlist}=this.props.resources;const{cart,productAvailability,wishlists,products}=this.props.data;if(cart.status==='LOADING'||productAvailability.status==='LOADING'||wishlists.status==='LOADING'){const errorProps=_objectSpread(_objectSpread({},this.props),{},{WishlistItems:{moduleProps:this.props,className:classnames('ms-wishlist-items',className)},status:'LOADING',statusMessage:/*#__PURE__*/React.createElement(WishlistItemsStatusMessage,{errorType:'LOADING',text:'Loading...'}),heading:this._renderHeading(heading)});return this.props.renderView(errorProps);}if(cart.status==='FAILED'||productAvailability.status==='FAILED'||wishlists.status==='FAILED'){const errorProps=_objectSpread(_objectSpread({},this.props),{},{WishlistItems:{moduleProps:this.props,className:classnames('ms-wishlist-items',className)},status:'FAILED',statusMessage:/*#__PURE__*/React.createElement(WishlistItemsStatusMessage,{errorType:'FAILED',text:wishlistErrorGettingWishlist}),heading:this._renderHeading(heading)});return this.props.renderView(errorProps);}const productsList=products&&products.result;if(!!productsList&&productsList.length===0){const emptyViewProps=_objectSpread(_objectSpread({},this.props),{},{WishlistItems:{moduleProps:this.props,className:classnames('ms-wishlist-items',className)},status:'EMPTY',statusMessage:/*#__PURE__*/React.createElement(WishlistItemsStatusMessage,{errorType:'EMPTY',text:emptyWishlistText}),heading:this._renderHeading(heading)});return this.props.renderView(emptyViewProps);}const viewProps=_objectSpread(_objectSpread({},this.props),{},{WishlistItems:{moduleProps:this.props,className:classnames('ms-wishlist-items',className)},status:'SUCCESS',heading:this._renderHeading(heading),Products:{className:'ms-wishlist-items__products',tag:'ul'},Product:{className:'ms-wishlist-items__product',tag:'li'},ProductDetails:{className:'ms-wishlist-items__product-link',tag:'a'},telemetryContent:this.telemetryContent,ProductDimensions:{className:'ms-wishlist-items__product-dimensions'},products:productsList&&this._renderProductList(productsList)});return this.props.renderView(viewProps);}_renderProductList(products){const{priceFree,originalPriceText,currentPriceText,addToCartButtonText,outOfStockText,removeButtonText,productDimensionTypeColor,productDimensionTypeSize,productDimensionTypeStyle}=this.props.resources;const{context,telemetry}=this.props;const{imageSettings,enableImageProductLink}=this.props.config;return products.map((product,index)=>{const currentProductProps={product:product.ProductDetails,price:product.ProductPrice,context:context,wishlistState:this.state,productUrl:getProductUrlSync(product.ProductDetails,context.actionContext,undefined),imageSettings:imageSettings,removeFromWishlistText:removeButtonText,isInStock:this._isProductInStock(product),addToCartText:addToCartButtonText,outOfStockText:outOfStockText,index:index,itemKey:\"\".concat(product.ProductDetails.RecordId,\"-\").concat(product.ProductDetails.ItemId,\"-\").concat(index),telemetry:telemetry,moduleId:this.props.id,moduleTypeName:this.props.typeName,enableImageProductLink:enableImageProductLink,inventoryInformationLabel:this._inventoryLabel(product),inventoryLabelClassName:this._inventoryClassName(product),telemetryContent:this.telemetryContent,handlers:{onAddToCart:this._addItemToCart,onRemoveItem:this._removeItemFromWishlist,onDismiss:this._onDismiss},resources:{productDimensionTypeColor:productDimensionTypeColor,productDimensionTypeSize:productDimensionTypeSize,productDimensionTypeStyle:productDimensionTypeStyle,freePriceText:priceFree,originalPriceText:originalPriceText,currentPriceText:currentPriceText}};return WishlistItem(currentProductProps);});}_getInventoryValueMessage(product,curQuantity){const{context,resources}=this.props;const{maxQuantityLimitText}=resources;const maxQuantityForLineItem=context.app.config.maxQuantityForCartLineItem||10;if(!product||!product.ProductAvailableQuantity.AvailableQuantity||!context.app.config.enableStockCheck){return maxQuantityLimitText.replace('{maxQuantity}',maxQuantityForLineItem.toString()).replace('{curQuantity}',curQuantity.toString());}const minInventory=Math.min(maxQuantityForLineItem,product.ProductAvailableQuantity.AvailableQuantity);return maxQuantityLimitText.replace('{maxQuantity}',minInventory.toString()).replace('{curQuantity}',curQuantity.toString());}_getProductInventory(product,productInventoryCollection){if(productInventoryCollection&&productInventoryCollection.length){for(const productResult of productInventoryCollection){if(product.ProductDetails.RecordId===productResult.ProductAvailableQuantity.ProductId){return productResult;}}}return undefined;}};WishlistItems=__decorate([observer],WishlistItems);export default WishlistItems;","map":{"version":3,"sources":["modules/wishlist-items/wishlist-items.tsx"],"names":[],"mappings":"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","sourcesContent":["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { getProductUrlSync, IProductInventoryInformation } from '@msdyn365-commerce-modules/retail-actions';\nimport { getTelemetryObject, IModuleProps, INodeProps, ITelemetryContent } from '@msdyn365-commerce-modules/utilities';\nimport { FullProduct } from '@msdyn365-commerce/commerce-entities';\nimport * as MsDyn365 from '@msdyn365-commerce/core';\nimport { AsyncResult, CommerceList, SimpleProduct } from '@msdyn365-commerce/retail-proxy';\nimport { createGetByCustomerInput, removeLinesAsync } from '@msdyn365-commerce/retail-proxy/dist/DataActions/CommerceListsDataActions.g';\nimport classnames from 'classnames';\nimport { observer } from 'mobx-react';\nimport * as React from 'react';\nimport getItemsInWishlists, { ActiveWishlistInput } from './actions/get-items-in-wishlists';\nimport { IWishlistItemViewProps, WishlistItem, WishlistItemsStatusMessage } from './components/';\nimport { IWishlistItemsData } from './wishlist-items.data';\nimport { IHeadingData, IWishlistItemsProps } from './wishlist-items.props.autogenerated';\n\nexport interface IWishlistItemActionMessageState {\n    productId: number;\n    itemKey: string;\n    userMessage: string;\n    statusCssString: string;\n    messageGlyph: string;\n    isOpen: boolean;\n}\n\nexport type wishlistStatus = 'LOADING' | 'SUCCESS' | 'FAILED' | 'EMPTY';\n\nexport interface IWishlistItemsViewProps extends IWishlistItemsProps<IWishlistItemsData> {\n    WishlistItems: IModuleProps;\n    status?: wishlistStatus;\n    statusMessage?: React.ReactNode;\n    heading?: React.ReactNode;\n    Products?: INodeProps;\n    Product?: INodeProps;\n    ProductDetails?: INodeProps;\n    ProductDimensions?: INodeProps;\n    products?: IWishlistItemViewProps[];\n    telemetryContent?: ITelemetryContent;\n}\n\n/**\n *\n * WishlistItems component\n * @extends {React.PureComponent<IWishlistItemsProps<IWishlistItemsData>, IWishlistItemActionMessageState>}\n */\n@observer\nclass WishlistItems extends React.Component<IWishlistItemsProps<IWishlistItemsData>, IWishlistItemActionMessageState> {\n\n    private telemetryContent: ITelemetryContent;\n\n    constructor(props: IWishlistItemsProps<IWishlistItemsData>) {\n        super(props);\n        this.telemetryContent = getTelemetryObject(this.props.context.request.telemetryPageName!,  this.props.friendlyName, this.props.telemetry);\n    }\n\n    public async componentDidMount(): Promise<void> {\n        this.setState({});\n    }\n\n    public render(): JSX.Element | null {\n        const { heading, className } = this.props.config;\n        const { emptyWishlistText, wishlistErrorGettingWishlist } = this.props.resources;\n        const { cart, productAvailability, wishlists, products } = this.props.data;\n\n        if (cart.status === 'LOADING' || productAvailability.status === 'LOADING' || wishlists.status === 'LOADING') {\n            const errorProps: IWishlistItemsViewProps = {\n                ...(this.props as IWishlistItemsProps<IWishlistItemsData>),\n                WishlistItems: {\n                    moduleProps: this.props,\n                    className: classnames('ms-wishlist-items', className),\n                },\n                status: 'LOADING',\n                // statusMessage: <Waiting className={ waitingClass || 'ms-wishlist-items__message-loading'} />\n                statusMessage: <WishlistItemsStatusMessage errorType='LOADING' text='Loading...'/>,\n                heading: this._renderHeading(heading)\n            };\n            return this.props.renderView(errorProps);\n        }\n\n        if (cart.status === 'FAILED' || productAvailability.status === 'FAILED' || wishlists.status === 'FAILED') {\n            const errorProps: IWishlistItemsViewProps = {\n                ...(this.props as IWishlistItemsProps<IWishlistItemsData>),\n                WishlistItems: {\n                    moduleProps: this.props,\n                    className: classnames('ms-wishlist-items', className),\n                },\n                status: 'FAILED',\n                statusMessage: <WishlistItemsStatusMessage errorType='FAILED' text={ wishlistErrorGettingWishlist }/>,\n                heading: this._renderHeading(heading)\n            };\n\n            return this.props.renderView(errorProps);\n        }\n\n        const productsList = products && (products as AsyncResult<FullProduct[]>).result;\n\n        if (!!productsList && productsList.length === 0) {\n            const emptyViewProps: IWishlistItemsViewProps = {\n                ...(this.props as IWishlistItemsProps<IWishlistItemsData>),\n                WishlistItems: {\n                    moduleProps: this.props,\n                    className: classnames('ms-wishlist-items', className),\n                },\n                status: 'EMPTY',\n                statusMessage: <WishlistItemsStatusMessage errorType='EMPTY' text={ emptyWishlistText }/>,\n                heading: this._renderHeading(heading)\n            };\n\n            return this.props.renderView(emptyViewProps);\n        }\n\n        const viewProps: IWishlistItemsViewProps = {\n            ...(this.props as IWishlistItemsProps<IWishlistItemsData>),\n            WishlistItems: {\n                moduleProps: this.props,\n                className: classnames('ms-wishlist-items', className),\n            },\n            status: 'SUCCESS',\n            heading: this._renderHeading(heading),\n            Products: {\n                className: 'ms-wishlist-items__products',\n                tag: 'ul',\n            },\n            Product: {\n                className: 'ms-wishlist-items__product',\n                tag: 'li',\n            },\n            ProductDetails: {\n                className: 'ms-wishlist-items__product-link',\n                tag: 'a',\n            },\n            telemetryContent: this.telemetryContent,\n            ProductDimensions: {\n                className: 'ms-wishlist-items__product-dimensions',\n            },\n            products: productsList && this._renderProductList(productsList),\n        };\n\n        return this.props.renderView(viewProps) as React.ReactElement;\n    }\n\n    public handleHeadingChange = (event: MsDyn365.ContentEditableEvent) => this.props.config.heading!.text = event.target.value;\n\n    private _renderProductList(products: FullProduct[]): IWishlistItemViewProps[] {\n\n        const { priceFree, originalPriceText, currentPriceText, addToCartButtonText, outOfStockText, removeButtonText, productDimensionTypeColor, productDimensionTypeSize, productDimensionTypeStyle} = this.props.resources;\n        const { context, telemetry } = this.props;\n        const { imageSettings, enableImageProductLink } = this.props.config;\n\n        return products.map((product: FullProduct, index) => {\n            const currentProductProps = {\n                product: product.ProductDetails,\n                price: product.ProductPrice,\n                context: context,\n                wishlistState: this.state,\n                productUrl: getProductUrlSync(product.ProductDetails, context.actionContext, undefined),\n                imageSettings: imageSettings,\n                removeFromWishlistText: removeButtonText,\n                isInStock: this._isProductInStock(product),\n                addToCartText: addToCartButtonText,\n                outOfStockText: outOfStockText,\n                index: index,\n                itemKey: `${product.ProductDetails.RecordId}-${product.ProductDetails.ItemId}-${index}`,\n                telemetry: telemetry,\n                moduleId: this.props.id,\n                moduleTypeName: this.props.typeName,\n                enableImageProductLink: enableImageProductLink,\n                inventoryInformationLabel: this._inventoryLabel(product),\n                inventoryLabelClassName: this._inventoryClassName(product),\n                telemetryContent: this.telemetryContent,\n                handlers: {\n                    onAddToCart: this._addItemToCart,\n                    onRemoveItem: this._removeItemFromWishlist,\n                    onDismiss: this._onDismiss\n                },\n                resources: {\n                    productDimensionTypeColor: productDimensionTypeColor,\n                    productDimensionTypeSize: productDimensionTypeSize,\n                    productDimensionTypeStyle: productDimensionTypeStyle,\n                    freePriceText: priceFree,\n                    originalPriceText: originalPriceText,\n                    currentPriceText: currentPriceText\n                }\n            };\n\n            return (\n                WishlistItem(currentProductProps)!\n            );\n        });\n    }\n\n    // dismiss alert when addingToCart/removeItem\n    private _onDismiss = () => {\n        this.setState({\n            isOpen: false\n        });\n    }\n\n    private _renderHeading = (heading?: IHeadingData): JSX.Element | undefined => {\n        if(!heading) {\n            return undefined;\n        }\n        return(\n            <MsDyn365.Text\n                className={'ms-wishlist-items__heading'}\n                tag={heading.tag || 'h2'}\n                text= {heading.text}\n                editProps={{onEdit:this.handleHeadingChange, requestContext: this.props.context.request}}\n            />\n        );\n    }\n\n    private _addItemToCart = async (product: SimpleProduct, itemKey: string): Promise<void> => {\n        const { context, data, resources, telemetry } = this.props;\n        const { cart, productAvailability } = data;\n        const { addedToCartSuccessMessage, addedToCartFailureMessage } = resources;\n\n        const productInventoryInformation = this._getProductInventory({ProductDetails:product}, productAvailability.result);\n\n        if (context) {\n            if (cart.result) {\n                const addProductToCartInput = {\n                    product: product,\n                    quantity: 1,\n                    enableStockCheck: context.app.config.enableStockCheck,\n                    availableQuantity: productInventoryInformation?productInventoryInformation.ProductAvailableQuantity.AvailableQuantity : 0\n                };\n\n                cart.result.addProductToCart(addProductToCartInput)\n                        .then(async result => {\n                            if (result.status === 'SUCCESS') {\n                                this.setState({\n                                    productId: product.RecordId,\n                                    itemKey: itemKey,\n                                    userMessage: addedToCartSuccessMessage,\n                                    statusCssString: 'success',\n                                    messageGlyph: 'fas fa-check',\n                                    isOpen: true\n                                });\n                            } else if (result.substatus === 'MAXQUANTITY') {\n                                const curQuantity = (await cart).cart?.CartLines?.find(item => item.ProductId === product.RecordId)?.Quantity || 0;\n                                const maxQtyLimitReachedMessage =  this._getInventoryValueMessage(productInventoryInformation, curQuantity);\n\n                                this.setState({\n                                    productId: product.RecordId,\n                                    itemKey: itemKey,\n                                    userMessage: maxQtyLimitReachedMessage,\n                                    statusCssString: 'danger',\n                                    messageGlyph: 'fas fa-exclamation-triangle',\n                                    isOpen: true\n                                });\n                            } else {\n                                this.props.telemetry.debug('[wishlist-items] Unable to Update Cart Line from the wishlist');\n                                this.setState({\n                                    productId: product.RecordId,\n                                    itemKey: itemKey,\n                                    userMessage: addedToCartFailureMessage,\n                                    statusCssString: 'danger',\n                                    messageGlyph: 'fas fa-exclamation-triangle',\n                                    isOpen: true\n                                });\n                            }\n                        })\n                        .catch(error => {\n                            telemetry.warning(error);\n                            telemetry.debug('[wishlist-items] Error trying to Update Cart Line from the wishlist');\n                            this.setState({\n                                productId: product.RecordId,\n                                itemKey: itemKey,\n                                userMessage: addedToCartFailureMessage,\n                                statusCssString: 'danger',\n                                messageGlyph: 'fas fa-exclamation-triangle',\n                                isOpen: true\n                            });\n                        });\n            }\n        }\n    };\n\n    private _removeItemFromWishlist = (productId: number): void => {\n        const { context, data, telemetry } = this.props;\n        const { wishlists } = data;\n\n        if (context && context.actionContext) {\n            const userToken = context.request.user.isAuthenticated && context.request.user.token;\n            const wishlistLineId = this._getWishlistLineIdFromProductId(productId);\n            if (userToken && wishlists.result && wishlists.result[0] && wishlistLineId) {\n                removeLinesAsync({ callerContext: context.actionContext }, wishlists.result[0].Id, [{ LineId: wishlistLineId }])\n                    .then(commerceList => {\n                        const castCommerceList: CommerceList | null = commerceList as (CommerceList | null);\n\n                        if (castCommerceList && castCommerceList.Id && context.request.user.isAuthenticated) {\n                            context.actionContext.update(createGetByCustomerInput({}, null), [castCommerceList]);\n                            getItemsInWishlists(new ActiveWishlistInput(), context.actionContext)\n                                .then((products) => {\n                                    const castSimpleProducts: FullProduct[] | null = products as (FullProduct[] | null);\n                                    if (castSimpleProducts && castSimpleProducts.length > 0) {\n                                        context.actionContext.update(new ActiveWishlistInput(), castSimpleProducts);\n                                    }\n                                })\n                                .catch(error => {\n                                    telemetry.warning('[wishlist-items] Unable to hyderate the wishlist with product information');\n                                    telemetry.error(error);\n                                });\n                        }\n                    })\n                    .catch(error => {\n                        telemetry.warning('[wishlist-items] Unable remove items from the wishlist');\n                        telemetry.error(error);\n                    });\n            } else {\n                telemetry.warning('[wishlist-items] Unable remove items from the wishlist user token or lineItemID wasn\\'t found');\n            }\n        }\n    }\n\n    private _getInventoryValueMessage(product: IProductInventoryInformation | undefined, curQuantity: number):string {\n        const { context, resources } = this.props;\n        const { maxQuantityLimitText } = resources;\n\n        const maxQuantityForLineItem = context.app.config.maxQuantityForCartLineItem || 10;\n\n        if(!product || !product.ProductAvailableQuantity.AvailableQuantity || !context.app.config.enableStockCheck) {\n            return maxQuantityLimitText.replace('{maxQuantity}', maxQuantityForLineItem.toString()).replace('{curQuantity}', curQuantity.toString());\n        }\n\n        const minInventory = Math.min(maxQuantityForLineItem, product.ProductAvailableQuantity.AvailableQuantity);\n\n        return maxQuantityLimitText.replace('{maxQuantity}', minInventory.toString()).replace('{curQuantity}', curQuantity.toString());\n    }\n\n    private _getProductInventory(product: FullProduct, productInventoryCollection: IProductInventoryInformation[] | undefined): IProductInventoryInformation | undefined {\n        if(productInventoryCollection && productInventoryCollection.length) {\n            for (const productResult of productInventoryCollection) {\n                if(product.ProductDetails.RecordId === productResult.ProductAvailableQuantity.ProductId) {\n                    return productResult;\n                }\n            }\n        }\n        return undefined;\n    }\n\n    private _inventoryLabel = (product: FullProduct):string | undefined => {\n        const { productAvailability } = this.props.data;\n        if(productAvailability && productAvailability.result) {\n            const productInventoryInformation = this._getProductInventory(product, productAvailability.result);\n            if(productInventoryInformation) {\n                return productInventoryInformation.StockLevelLabel;\n            }\n        }\n\n        return undefined;\n    }\n\n    private _inventoryClassName = (product: FullProduct):string | undefined => {\n        const { productAvailability } = this.props.data;\n        if(productAvailability && productAvailability.result) {\n            const productInventoryInformation = this._getProductInventory(product, productAvailability.result);\n            if(productInventoryInformation && productInventoryInformation.StockLevelCode) {\n                return `ms-wishlist-items__${productInventoryInformation.StockLevelCode.toLowerCase()}`;\n            }\n        }\n\n        return undefined;\n    }\n\n    private _isProductInStock = (product: FullProduct): boolean => {\n        const { data, context } = this.props;\n        const { productAvailability } = data;\n\n        if (!context.app.config.enableStockCheck) {\n            return true;\n        }\n\n        if (!productAvailability.result || !product.ProductDetails) {\n            return false;\n        }\n\n        for (const productResult of productAvailability.result) {\n            if (productResult.ProductAvailableQuantity &&\n                productResult.ProductAvailableQuantity.ProductId &&\n                productResult.ProductAvailableQuantity.ProductId === product.ProductDetails.RecordId) {\n                return productResult.IsProductAvailable;\n            }\n        }\n\n        return false;\n    }\n\n    private _getWishlistLineIdFromProductId = (productId: number): number | null => {\n        const { wishlists } = this.props.data;\n\n        if (!wishlists.result || !(wishlists.result.length > 0) || !wishlists.result[0].CommerceListLines || !(wishlists.result[0].CommerceListLines.length > 0)) {\n            this.props.telemetry.error('Wishlist content is empty, module wont render.');\n            return null;\n        }\n\n        const foundWishlistItem = wishlists.result[0].CommerceListLines.filter((commerceListLine) => {\n            return commerceListLine.ProductId === productId;\n        });\n\n        if (foundWishlistItem && foundWishlistItem[0].LineId) {\n            return foundWishlistItem[0].LineId;\n        } else {\n            return null;\n        }\n    }\n}\n\nexport default WishlistItems;\n"],"sourceRoot":"./src/"},"metadata":{},"sourceType":"module"}