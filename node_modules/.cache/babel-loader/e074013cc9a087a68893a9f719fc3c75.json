{"ast":null,"code":"import _regeneratorRuntime from\"@babel/runtime/regenerator\";import _defineProperty from\"@babel/runtime/helpers/esm/defineProperty\";import _asyncToGenerator from\"@babel/runtime/helpers/esm/asyncToGenerator\";import _classCallCheck from\"@babel/runtime/helpers/esm/classCallCheck\";function ownKeys(object,enumerableOnly){var keys=Object.keys(object);if(Object.getOwnPropertySymbols){var symbols=Object.getOwnPropertySymbols(object);if(enumerableOnly)symbols=symbols.filter(function(sym){return Object.getOwnPropertyDescriptor(object,sym).enumerable;});keys.push.apply(keys,symbols);}return keys;}function _objectSpread(target){for(var i=1;i<arguments.length;i++){var source=arguments[i]!=null?arguments[i]:{};if(i%2){ownKeys(Object(source),true).forEach(function(key){_defineProperty(target,key,source[key]);});}else if(Object.getOwnPropertyDescriptors){Object.defineProperties(target,Object.getOwnPropertyDescriptors(source));}else{ownKeys(Object(source)).forEach(function(key){Object.defineProperty(target,key,Object.getOwnPropertyDescriptor(source,key));});}}return target;}import{buildCacheKey}from'@msdyn365-commerce-modules/retail-actions';import{createObservableDataAction,isEmptyOrNullObject}from'@msdyn365-commerce/core';import{getCheckoutState}from'@msdyn365-commerce/global-state';import{getCardPaymentAcceptPointAsync}from'@msdyn365-commerce/retail-proxy/dist/DataActions/CartsDataActions.g';import get from'lodash/get';export var GetCardPaymentAcceptPointInput=function GetCardPaymentAcceptPointInput(input){var _this=this;_classCallCheck(this,GetCardPaymentAcceptPointInput);this.getCacheKey=function(){return buildCacheKey(\"CardPaymentAcceptPoint\".concat(_this.paymenTenderType?\"-\".concat(_this.paymenTenderType):''),_this.apiSettings);};this.getCacheObjectType=function(){return\"CardPaymentAcceptPoint\";};this.dataCacheType=function(){return'none';};this.showBillingAddress=input.showBillingAddress;this.paymenTenderType=input.paymenTenderType;this.apiSettings=input.apiSettings;};export var createCheckoutPaymentInstrumentInput=function createCheckoutPaymentInstrumentInput(inputData){var _inputData$config=inputData.config,showBillingAddress=_inputData$config.showBillingAddress,paymenTenderType=_inputData$config.paymenTenderType;var getCardPaymentAcceptPointInput={showBillingAddres:showBillingAddress,paymenTenderType:paymenTenderType,apiSettings:inputData.requestContext.apiSettings};return new GetCardPaymentAcceptPointInput(getCardPaymentAcceptPointInput);};export function getCardPaymentAcceptPointAction(_x,_x2){return _getCardPaymentAcceptPointAction.apply(this,arguments);}function _getCardPaymentAcceptPointAction(){_getCardPaymentAcceptPointAction=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee(input,ctx){var showBillingAddress,paymenTenderType,checkoutState,requestUrl,origin,cardPaymentAcceptSettings;return _regeneratorRuntime.wrap(function _callee$(_context){while(1){switch(_context.prev=_context.next){case 0:if(input){_context.next=3;break;}ctx.telemetry.exception(new Error('[getCardPaymentAcceptPointAction] No valid Input was provided, failing'));throw new Error('[getCardPaymentAcceptPointAction] No valid Input was provided, failing');case 3:showBillingAddress=input.showBillingAddress,paymenTenderType=input.paymenTenderType;_context.next=6;return getCheckoutState(ctx)[\"catch\"](function(error){ctx.telemetry.exception(error);throw error;});case 6:checkoutState=_context.sent;if(!(isEmptyOrNullObject(checkoutState)||isEmptyOrNullObject(checkoutState.checkoutCart)||isEmptyOrNullObject(checkoutState.checkoutCart.cart))){_context.next=10;break;}ctx.telemetry.exception(new Error('[getCardPaymentAcceptPointAction] Unable to get cart'));throw new Error('[getCardPaymentAcceptPointAction] Unable to get cart');case 10:if(!(!checkoutState.checkoutCart.cart.CartLines||!checkoutState.checkoutCart.cart.CartLines.length)){_context.next=13;break;}ctx.telemetry.exception(new Error('[getCardPaymentAcceptPointAction] Cart is empty'));throw new Error('[getCardPaymentAcceptPointAction] Cart is empty');case 13:requestUrl=typeof ctx.requestContext.url.requestUrl==='string'?new URL(ctx.requestContext.url.requestUrl):ctx.requestContext.url.requestUrl;origin=get(window,'location.origin')||requestUrl.origin;cardPaymentAcceptSettings=_objectSpread(_objectSpread(_objectSpread({'@odata.type':'#Microsoft.Dynamics.Commerce.Runtime.DataModel.CardPaymentAcceptSettings',HostPageOrigin:origin,AdaptorPath:\"\".concat(origin,\"/Connectors/\")||origin,CardPaymentEnabled:false,CardTokenizationEnabled:true},!showBillingAddress&&{HideBillingAddress:true}),paymenTenderType&&{TenderTypeId:paymenTenderType}),{},{PaymentAmount:0});return _context.abrupt(\"return\",getCardPaymentAcceptPointAsync({callerContext:ctx,bypassCache:'get'},checkoutState.checkoutCart.cart.Id,cardPaymentAcceptSettings,[]).then(function(cardPaymentAcceptPoint){if(!cardPaymentAcceptPoint.AcceptPageUrl&&!cardPaymentAcceptPoint.AcceptPageContent){throw new Error('[getCardPaymentAcceptPointAction] Payment Accept Page has neither return AcceptPageUrl nor AcceptPageContent in updatePaymentAcceptPageData');}return cardPaymentAcceptPoint;})[\"catch\"](function(error){ctx.telemetry.exception(error);ctx.telemetry.debug('Unable to get Card Payment Accept Point');throw error;}));case 17:case\"end\":return _context.stop();}}},_callee);}));return _getCardPaymentAcceptPointAction.apply(this,arguments);}export default createObservableDataAction({id:'@msdyn365-commerce/checkout-payment-instrument/get-card-payment-accept-point',action:getCardPaymentAcceptPointAction,input:createCheckoutPaymentInstrumentInput});","map":{"version":3,"sources":["modules/checkout-payment-instrument/actions/get-card-payment-accept-point.ts"],"names":[],"mappings":"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","sourcesContent":["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nimport { buildCacheKey } from '@msdyn365-commerce-modules/retail-actions';\nimport {\n    CacheType, createObservableDataAction, IAction, IActionContext, IActionInput,\n    ICommerceApiSettings, ICreateActionContext, isEmptyOrNullObject\n} from '@msdyn365-commerce/core';\nimport { getCheckoutState, ICheckoutState } from '@msdyn365-commerce/global-state';\nimport {\n    getCardPaymentAcceptPointAsync\n} from '@msdyn365-commerce/retail-proxy/dist/DataActions/CartsDataActions.g';\nimport {\n    CardPaymentAcceptPoint\n} from '@msdyn365-commerce/retail-proxy/dist/Entities/CommerceTypes.g';\nimport get from 'lodash/get';\n\nexport interface IGetCardPaymentAcceptPointInput {\n    showBillingAddress?: boolean;\n    paymenTenderType?: string;\n    apiSettings: ICommerceApiSettings;\n}\n\n/**\n * GetCardPaymentAcceptPointInput - Input for create GetCardPaymentAcceptPoint\n */\nexport class GetCardPaymentAcceptPointInput implements IActionInput {\n    public showBillingAddress?: boolean;\n    public paymenTenderType?: string;\n    private apiSettings: ICommerceApiSettings;\n\n    constructor(input: IGetCardPaymentAcceptPointInput) {\n        this.showBillingAddress = input.showBillingAddress;\n        this.paymenTenderType = input.paymenTenderType;\n        this.apiSettings = input.apiSettings;\n    }\n\n    public getCacheKey = () => buildCacheKey(`CardPaymentAcceptPoint${this.paymenTenderType ? `-${this.paymenTenderType}` : ''}`, this.apiSettings);\n    public getCacheObjectType = () => `CardPaymentAcceptPoint`;\n    public dataCacheType = (): CacheType => 'none';\n}\n\nexport const createCheckoutPaymentInstrumentInput = (inputData: ICreateActionContext) => {\n    // @ts-ignore\n    const { showBillingAddress, paymenTenderType } = inputData.config;\n    const getCardPaymentAcceptPointInput = {\n        showBillingAddres: showBillingAddress,\n        paymenTenderType: paymenTenderType,\n        apiSettings: inputData.requestContext.apiSettings\n    };\n\n    return new GetCardPaymentAcceptPointInput(getCardPaymentAcceptPointInput);\n};\n\n/**\n * Calls the Retail API and returns a cart object based on the passed GetCartInput\n */\nexport async function getCardPaymentAcceptPointAction(\n    input: GetCardPaymentAcceptPointInput,\n    ctx: IActionContext\n): Promise<CardPaymentAcceptPoint> {\n    // If no cart ID is provided in input, we need to create a cart object\n    if (!input) {\n        ctx.telemetry.exception(new Error('[getCardPaymentAcceptPointAction] No valid Input was provided, failing'));\n        throw new Error('[getCardPaymentAcceptPointAction] No valid Input was provided, failing');\n    }\n\n    const { showBillingAddress, paymenTenderType } = input;\n    const checkoutState: ICheckoutState = await getCheckoutState(ctx).catch((error: Error) => {\n        ctx.telemetry.exception(error);\n        throw error;\n    });\n\n    if (\n        isEmptyOrNullObject(checkoutState) ||\n        isEmptyOrNullObject(checkoutState.checkoutCart) ||\n        isEmptyOrNullObject(checkoutState.checkoutCart.cart)\n    ) {\n        ctx.telemetry.exception(new Error('[getCardPaymentAcceptPointAction] Unable to get cart'));\n        throw new Error('[getCardPaymentAcceptPointAction] Unable to get cart');\n    }\n\n    if (!checkoutState.checkoutCart.cart.CartLines || !checkoutState.checkoutCart.cart.CartLines.length) {\n        ctx.telemetry.exception(new Error('[getCardPaymentAcceptPointAction] Cart is empty'));\n        throw new Error('[getCardPaymentAcceptPointAction] Cart is empty');\n    }\n\n    const requestUrl =\n        typeof ctx.requestContext.url.requestUrl === 'string'\n            ? new URL(ctx.requestContext.url.requestUrl)\n            : ctx.requestContext.url.requestUrl;\n    const origin = get(window, 'location.origin') || requestUrl.origin;\n\n    const cardPaymentAcceptSettings = {\n        '@odata.type': '#Microsoft.Dynamics.Commerce.Runtime.DataModel.CardPaymentAcceptSettings',\n        HostPageOrigin: origin,\n        AdaptorPath: `${origin}/Connectors/` || origin,\n        CardPaymentEnabled: false,\n        CardTokenizationEnabled: true,\n        ...(!showBillingAddress && { HideBillingAddress: true }),\n        ...(paymenTenderType && { TenderTypeId: paymenTenderType }),\n        PaymentAmount: 0\n    };\n\n    return getCardPaymentAcceptPointAsync(\n        { callerContext: ctx, bypassCache: 'get' },\n        checkoutState.checkoutCart.cart.Id,\n        cardPaymentAcceptSettings,\n        []\n    )\n        .then(cardPaymentAcceptPoint => {\n            if (!cardPaymentAcceptPoint.AcceptPageUrl && !cardPaymentAcceptPoint.AcceptPageContent) {\n                throw new Error(\n                    '[getCardPaymentAcceptPointAction] Payment Accept Page has neither return AcceptPageUrl nor AcceptPageContent in updatePaymentAcceptPageData'\n                );\n            }\n            return cardPaymentAcceptPoint;\n        })\n        .catch(error => {\n            ctx.telemetry.exception(error);\n            ctx.telemetry.debug('Unable to get Card Payment Accept Point');\n            throw error;\n        });\n}\n\nexport default createObservableDataAction({\n    id: '@msdyn365-commerce/checkout-payment-instrument/get-card-payment-accept-point',\n    action: <IAction<CardPaymentAcceptPoint>>getCardPaymentAcceptPointAction,\n    input: createCheckoutPaymentInstrumentInput\n});\n"],"sourceRoot":"./src/"},"metadata":{},"sourceType":"module"}