{"ast":null,"code":"import*as React from'react';export var PickUpInStore=function PickUpInStore(props){var _onLocationChangedCallback=function _onLocationChangedCallback(orgUnitLocation,cartState,cartline){if(!cartState){return Promise.resolve();}return cartState.updateCartLinePickupLocation({cartLineId:cartline.LineId,location:orgUnitLocation}).then(function(result){if(result.status==='SUCCESS'){}})[\"catch\"](function(error){return;});};var _toggleBOPIS=function _toggleBOPIS(isBopisSelected){var storeSelectorStateManager=props.storeSelectorStateManager,product=props.product,cartline=props.cartline,cartState=props.cartState;if(isBopisSelected){if(!storeSelectorStateManager){return;}storeSelectorStateManager.openDialog({product:product,alreadySelectedLocation:{OrgUnitNumber:cartline.FulfillmentStoreId},onLocationSelected:function onLocationSelected(orgUnitLocation){return _onLocationChangedCallback(orgUnitLocation,cartState,cartline);}})[\"catch\"](function(error){return;});}else{if(!cartState){return;}cartline.DeliveryMode='';cartline.FulfillmentStoreId='';cartline.ShippingAddress={};cartState.clearCartLinePickupLocation({cartLineId:cartline.LineId}).then(function(result){if(result.status==='SUCCESS'){}})[\"catch\"](function(error){return;});}};var _getOrgUnitName=function _getOrgUnitName(fulfillmentStoreId,orgUnitLocations){if(!orgUnitLocations||!fulfillmentStoreId||!(orgUnitLocations.length>0)){return'';}var foundLocation=orgUnitLocations.find(function(orgUnitLocation){return orgUnitLocation.OrgUnitNumber===fulfillmentStoreId;});if(foundLocation){return foundLocation.OrgUnitName;}else{return fulfillmentStoreId;}};var _renderShippingMethod=function _renderShippingMethod(cartLine,shipItText,pickupInStoretext,changeStoreText,orgUnitLocations){var orgUnitName=_getOrgUnitName(cartLine.FulfillmentStoreId,orgUnitLocations);var bopisSelected=cartLine.FulfillmentStoreId?true:false;var toggleBOPIS=function toggleBOPIS(isBopisSelected){return function(){return _toggleBOPIS(isBopisSelected);};};return/*#__PURE__*/React.createElement(React.Fragment,null,/*#__PURE__*/React.createElement(\"label\",{className:'msc-cart-line__bopis-shipping'},/*#__PURE__*/React.createElement(\"input\",{id:\"ms-cart-bopis-ship-option-\".concat(cartLine.LineId),type:'radio',name:\"shippingType \".concat(cartLine.LineId),onChange:toggleBOPIS(false),value:shipItText,checked:!bopisSelected,\"aria-checked\":!bopisSelected,key:\"\".concat(cartLine.LineId,\"-shipit\")}),shipItText),/*#__PURE__*/React.createElement(\"label\",{className:'msc-cart-line__bopis-store-pickup'},/*#__PURE__*/React.createElement(\"input\",{id:\"ms-cart-bopis-pickup-option-\".concat(cartLine.LineId),type:'radio',name:\"shippingType \".concat(cartLine.LineId),onChange:toggleBOPIS(true),value:pickupInStoretext,checked:bopisSelected,\"aria-checked\":bopisSelected,key:\"\".concat(cartLine.LineId,\"-pickup\")}),pickupInStoretext),cartLine.FulfillmentStoreId?/*#__PURE__*/React.createElement(\"div\",{className:'msc-cart-line__bopis__fullfilment'},/*#__PURE__*/React.createElement(\"span\",{className:'msc-cart-line__bopis__fullfilment-store'},orgUnitName),/*#__PURE__*/React.createElement(\"button\",{className:'msc-cart-line__bopis-changestore btn',onClick:toggleBOPIS(true)},changeStoreText)):null);};if(!props.deliveryOptions||!props.deliveryOptions.DeliveryOptions||!props.pickupDeliveryModeCode||!props.deliveryOptions.DeliveryOptions.find(function(option){return option.Code===props.pickupDeliveryModeCode;})){return undefined;}return{callbacks:{toggleBopis:_toggleBOPIS},defaultComponent:_renderShippingMethod(props.cartline,props.shipitText,props.pickUpInStoreText,props.changeStoreText,props.orgUnitLocations),orgUnitName:_getOrgUnitName(props.cartline.FulfillmentStoreId,props.orgUnitLocations),isBopisSelected:props.cartline.FulfillmentStoreId?true:false,ContainerProps:{className:'msc-cart-line__bopis-container'}};};","map":{"version":3,"sources":["modules/cart/components/cart-pick-up-in-store.tsx"],"names":[],"mappings":"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","sourcesContent":["import { IStoreSelectorStateManager } from '@msdyn365-commerce-modules/bopis-utilities';\nimport { INodeProps } from '@msdyn365-commerce-modules/utilities';\nimport { ICartState } from '@msdyn365-commerce/global-state';\nimport { CartLine, OrgUnitLocation, ProductDeliveryOptions, SimpleProduct } from '@msdyn365-commerce/retail-proxy';\nimport * as React from 'react';\n\nexport interface IPickUpInStoreViewProps {\n    callbacks: {\n        toggleBopis(isBopisSelected: boolean): void;\n    };\n    defaultComponent?: React.ReactNode;\n    orgUnitName?: string;\n    isBopisSelected: boolean;\n    ContainerProps: INodeProps;\n}\n\nexport interface IPickUpInStoreProps {\n    cartline: CartLine;\n    product: SimpleProduct;\n    shipitText: string;\n    pickUpInStoreText: string;\n    changeStoreText: string;\n    cartState: ICartState | undefined;\n    storeSelectorStateManager: IStoreSelectorStateManager | undefined;\n    orgUnitLocations?: OrgUnitLocation[] | undefined;\n    deliveryOptions?: ProductDeliveryOptions;\n    pickupDeliveryModeCode?: string;\n}\n\n// tslint:disable-next-line:max-func-body-length\nexport const PickUpInStore = (props: IPickUpInStoreProps): IPickUpInStoreViewProps | undefined => {\n    const _onLocationChangedCallback = (orgUnitLocation: OrgUnitLocation, cartState: ICartState | undefined, cartline: CartLine) => {\n        if(!cartState) {\n            return Promise.resolve();\n        }\n        return cartState.updateCartLinePickupLocation({cartLineId: cartline.LineId!, location: orgUnitLocation})\n            .then(result => {\n                if (result.status === 'SUCCESS') {\n                    // do something\n                }\n            })\n            .catch(error => {\n               return;\n            });\n    };\n\n    const _toggleBOPIS = (isBopisSelected: boolean) => {\n        const { storeSelectorStateManager, product, cartline, cartState } = props;\n\n        if(isBopisSelected) {\n            if(!storeSelectorStateManager) {\n                return;\n            }\n            storeSelectorStateManager.openDialog({\n                product,\n                alreadySelectedLocation: {\n                    OrgUnitNumber: cartline.FulfillmentStoreId\n                },\n                onLocationSelected: (orgUnitLocation) => {\n                    return _onLocationChangedCallback(orgUnitLocation, cartState, cartline);\n                }\n            })\n            .catch(error => {\n                return;\n            });\n        } else {\n            if(!cartState) {\n                return;\n            }\n            cartline.DeliveryMode = '';\n            cartline.FulfillmentStoreId = '';\n            cartline.ShippingAddress = {};\n            cartState.clearCartLinePickupLocation({cartLineId: cartline.LineId!})\n                .then(result => {\n                    if (result.status === 'SUCCESS') {\n                        // do something\n                    }\n                })\n                .catch(error => {\n                    return;\n                });\n        }\n    };\n\n    const _getOrgUnitName = (fulfillmentStoreId: string | undefined, orgUnitLocations: OrgUnitLocation[] | undefined) => {\n        if(!orgUnitLocations || !fulfillmentStoreId || !(orgUnitLocations.length > 0)) {\n            return '';\n        }\n\n        const foundLocation = orgUnitLocations.find(orgUnitLocation => {\n            return orgUnitLocation.OrgUnitNumber === fulfillmentStoreId;\n        });\n\n        if(foundLocation) {\n            return foundLocation.OrgUnitName;\n        } else {\n            return fulfillmentStoreId;\n        }\n    };\n\n    const _renderShippingMethod = (\n        cartLine: CartLine,\n        shipItText: string,\n        pickupInStoretext: string,\n        changeStoreText:string,\n        orgUnitLocations: OrgUnitLocation[] | undefined):JSX.Element => {\n\n        const orgUnitName = _getOrgUnitName(cartLine.FulfillmentStoreId, orgUnitLocations);\n        const bopisSelected = cartLine.FulfillmentStoreId ? true : false;\n\n        const toggleBOPIS = (isBopisSelected: boolean) => { return () => _toggleBOPIS(isBopisSelected); };\n\n        return (\n                <>\n                    <label className='msc-cart-line__bopis-shipping'>\n                        <input\n                            id={`ms-cart-bopis-ship-option-${cartLine.LineId}`}\n                            type='radio'\n                            name={`shippingType ${cartLine.LineId}`}\n                            onChange={toggleBOPIS(false)}\n                            value={shipItText}\n                            checked={!bopisSelected}\n                            aria-checked={!bopisSelected}\n                            key={`${cartLine.LineId}-shipit`}\n                        />\n                        {shipItText}\n                    </label>\n                    <label className='msc-cart-line__bopis-store-pickup'>\n                        <input\n                            id={`ms-cart-bopis-pickup-option-${cartLine.LineId}`}\n                            type='radio'\n                            name={`shippingType ${cartLine.LineId}`}\n                            onChange={toggleBOPIS(true)}\n                            value={pickupInStoretext}\n                            checked={bopisSelected}\n                            aria-checked={bopisSelected}\n                            key={`${cartLine.LineId}-pickup`}\n                        />\n                        {pickupInStoretext}\n                    </label>\n                    {\n                        cartLine.FulfillmentStoreId ? (\n                            <div className='msc-cart-line__bopis__fullfilment'>\n                                <span className='msc-cart-line__bopis__fullfilment-store'>{orgUnitName}</span>\n                                <button className='msc-cart-line__bopis-changestore btn' onClick={toggleBOPIS(true)}>{changeStoreText}</button>\n                            </div>\n                        ) : null\n                    }\n                </>\n        );\n    };\n\n    // If no delivery options present on the product, or none of the delivery options\n    // match the PickupDeliveryModeCode, that means the item cannot be used for BOPIS\n    if (!props.deliveryOptions ||\n        !props.deliveryOptions.DeliveryOptions ||\n        !props.pickupDeliveryModeCode ||\n        !props.deliveryOptions.DeliveryOptions.find(option => option.Code === props.pickupDeliveryModeCode)) {\n            return undefined;\n    }\n\n    return {\n        callbacks: {\n            toggleBopis: _toggleBOPIS\n        },\n        defaultComponent: _renderShippingMethod(props.cartline, props.shipitText, props.pickUpInStoreText, props.changeStoreText, props.orgUnitLocations),\n        orgUnitName: _getOrgUnitName(props.cartline.FulfillmentStoreId, props.orgUnitLocations),\n        isBopisSelected: props.cartline.FulfillmentStoreId ? true : false,\n        ContainerProps: {\n            className: 'msc-cart-line__bopis-container'\n        }\n    };\n};"],"sourceRoot":"./src/"},"metadata":{},"sourceType":"module"}