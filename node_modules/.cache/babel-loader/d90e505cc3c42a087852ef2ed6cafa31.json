{"ast":null,"code":"import _defineProperty from\"@babel/runtime/helpers/esm/defineProperty\";import _classCallCheck from\"@babel/runtime/helpers/esm/classCallCheck\";import _createClass from\"@babel/runtime/helpers/esm/createClass\";import _inherits from\"@babel/runtime/helpers/esm/inherits\";import _possibleConstructorReturn from\"@babel/runtime/helpers/esm/possibleConstructorReturn\";import _getPrototypeOf from\"@babel/runtime/helpers/esm/getPrototypeOf\";function ownKeys(object,enumerableOnly){var keys=Object.keys(object);if(Object.getOwnPropertySymbols){var symbols=Object.getOwnPropertySymbols(object);if(enumerableOnly)symbols=symbols.filter(function(sym){return Object.getOwnPropertyDescriptor(object,sym).enumerable;});keys.push.apply(keys,symbols);}return keys;}function _objectSpread(target){for(var i=1;i<arguments.length;i++){var source=arguments[i]!=null?arguments[i]:{};if(i%2){ownKeys(Object(source),true).forEach(function(key){_defineProperty(target,key,source[key]);});}else if(Object.getOwnPropertyDescriptors){Object.defineProperties(target,Object.getOwnPropertyDescriptors(source));}else{ownKeys(Object(source)).forEach(function(key){Object.defineProperty(target,key,Object.getOwnPropertyDescriptor(source,key));});}}return target;}function _createSuper(Derived){var hasNativeReflectConstruct=_isNativeReflectConstruct();return function _createSuperInternal(){var Super=_getPrototypeOf(Derived),result;if(hasNativeReflectConstruct){var NewTarget=_getPrototypeOf(this).constructor;result=Reflect.construct(Super,arguments,NewTarget);}else{result=Super.apply(this,arguments);}return _possibleConstructorReturn(this,result);};}function _isNativeReflectConstruct(){if(typeof Reflect===\"undefined\"||!Reflect.construct)return false;if(Reflect.construct.sham)return false;if(typeof Proxy===\"function\")return true;try{Date.prototype.toString.call(Reflect.construct(Date,[],function(){}));return true;}catch(e){return false;}}import{__decorate}from\"tslib\";import classnames from'classnames';import{computed,observable,reaction,set}from'mobx';import{observer}from'mobx-react';import*as React from'react';import{withModuleState}from'@msdyn365-commerce-modules/checkout-utilities';import{getTelemetryObject}from'@msdyn365-commerce-modules/utilities';import{AddressCommon}from'../../common/address-common';import{AddressFormat}from'../../common/address-format';import{AddressItemType}from'../../common/address-format.data';import{AddressMetaData}from'../../common/address-meta-data';import{AddressOperation,AddressType}from'../../common/address-module.data';import{AddressAddUpdate}from'../../common/components/address-add';import{AddressSelect}from'../../common/components/address-select';import{AddressShow}from'../../common/components/address-show';var CheckoutShippingAddress=/*#__PURE__*/function(_React$Component){_inherits(CheckoutShippingAddress,_React$Component);var _super=_createSuper(CheckoutShippingAddress);function CheckoutShippingAddress(props){var _this;_classCallCheck(this,CheckoutShippingAddress);_this=_super.call(this,props);_this.countryRegionId='USA';_this.addressListSelectedAddress={};_this.defaultAddressType=6;_this._renderAddOrUpdateAddress=function(){var addressFormat=_this.currentOperation===AddressOperation.Add&&_this.addressCommon.isAuthenticatedFlow()?_this.addressFormat:_this.addressFormat;return AddressAddUpdate({isUpdating:_this.isUpdating,resources:_this.resources,addressType:AddressType.Shipping,addressFormat:addressFormat.getAddressFormat(_this.addUpdateAddress.ThreeLetterISORegionName||_this.countryRegionId),defaultCountryRegionId:_this.countryRegionId,defaultAddressType:_this.defaultAddressType,selectedAddress:_this.addUpdateAddress,validationError:_this.validationError,hasError:_this.hasError,addressActionResponse:_this.addressActionResponse,telemetryContent:_this.telemetryContent,dropdownDisplayData:addressFormat.getPrefilledAddressDropdownData(_this.resources.addressStateDefaultSelectionText,_this.stateProvinceInfo),onInputChange:_this._onAddressAddUpdateInputChange,onDropdownChange:_this._onAddressAddUpdateDropdownChange,hasExternalSubmitGroup:_this.props.moduleState.hasExternalSubmitGroup,onSave:_this.onSubmit,onCancel:!_this.selectedAddress&&!_this.addressCommon.isAuthenticatedFlow()?function(){}:_this._resetView});};_this._renderSelectAddress=function(){return AddressSelect({addressFormat:_this.addressFormat,addresses:_this.customerAddresses,resources:_this.resources,addressPurposes:_this.addressPurposes,selectedAddress:_this.addressListSelectedAddress,onAddressOptionChange:_this._onAddressOptionChange,hasExternalSubmitGroup:_this.props.moduleState.hasExternalSubmitGroup,telemetryContent:_this.telemetryContent,onAddAddress:_this._goToAddAddress,onSave:_this._onSelectAddress,onCancel:!_this.selectedAddress?function(){}:_this._resetView});};_this._onAddressOptionChange=function(event){var addressRecordId=event.currentTarget.value;var selectedAddress=_this.customerAddresses.find(function(address){return(address.RecordId||'').toString()===addressRecordId;});if(selectedAddress){_this.addressListSelectedAddress=selectedAddress;}};_this.onAddressAddUpdate=function(name,value){set(_this.addUpdateAddress,_defineProperty({},name,value));_this.addressFormat.validateAddressFormat(_this.addUpdateAddress,_this.validationError,_this.countryRegionId,name);};_this._onAddressAddUpdateInputChange=function(event){if(event.target.type==='checkbox'){_this.onAddressAddUpdate(event.target.name,event.target.checked);}else{var value=(event.target.value||'').replace(new RegExp('[<>]','gi'),'');_this.onAddressAddUpdate(event.target.name,value);}};_this._onAddressAddUpdateDropdownChange=function(event){_this.onAddressAddUpdate(event.target.name,event.target.value);if(event.target.name===AddressItemType[AddressItemType.ThreeLetterISORegionName]){_this._onCountryChange(event.target.value);}};_this._onAddressAddUpdateSubmit=function(){if(!_this.addressFormat.validateAddressFormat(_this.addUpdateAddress,_this.validationError,_this.countryRegionId)){return;}var response;if(_this.addressCommon.isAuthenticatedFlow()){response=_this.currentOperation===AddressOperation.Update?_this.addressCommon.updateCustomerAddress(_this.addUpdateAddress):_this.addressCommon.addCustomerAddress(_this.addUpdateAddress);}else{response=Promise.resolve({address:_this.addUpdateAddress});}_this.isUpdating=true;_this._updateModuleState();response.then(function(result){_this.isUpdating=false;if(result.address){_this.hasError=false;_this._onAddOrUpdateSuccess(result);}else{_this.hasError=true;_this.addressActionResponse=result;_this._updateModuleState();}},function(){_this.hasError=true;_this.isUpdating=false;_this._updateModuleState();});};_this._onCountryChange=function(countryRegionId){_this.countryRegionId=countryRegionId;set(_this.addUpdateAddress,_defineProperty({},'ThreeLetterISORegionName',countryRegionId));};_this._getAddressFormatExcludeList=function(){var config=_this.props.config;var addressFormatExcludeList=[];if(!config.showAddressType){addressFormatExcludeList.push(AddressItemType.AddressTypeValue);}addressFormatExcludeList.push(AddressItemType.IsPrimary);return addressFormatExcludeList;};_this._getStateProvinces=function(){if(!_this.countryRegionId||!(_this.currentOperation===AddressOperation.Add||_this.currentOperation===AddressOperation.Update)){return;}_this.addressCommon.getStateProvinces(_this.countryRegionId).then(function(result){var stateInfo=result.some(function(state){return state.StateId===_this.addUpdateAddress.State;});if(!stateInfo){set(_this.addUpdateAddress,_defineProperty({},'State',''));}_this.stateProvinceInfo=result;});};_this._getDefaultAddress=function(){if(_this.customerAddresses){var primaryAddress=_this.customerAddresses.find(function(address){return address.IsPrimary;});return primaryAddress||(_this.customerAddresses.length>0?_this.customerAddresses[0]:undefined);}return undefined;};_this._initModuleState=function(){_this.props.moduleState.init({status:_this._canShip()?'updating':'disabled',onEdit:_this.onEdit,onCancel:_this.onCancel,onSubmit:_this.onSubmit});if(_this._canShip()){var defaultAddress=_this._getShippingAddressFromCartLines()||_this._getDefaultAddress();if(defaultAddress){_this._updateCurrentOperation(AddressOperation.Show,defaultAddress);_this._setShippingAddress(defaultAddress);_this._updateModuleState();}else{_this._updateCurrentOperation(AddressOperation.Add);}}};_this.onSubmit=function(){switch(_this.currentOperation){case AddressOperation.Add:case AddressOperation.Update:_this._onAddressAddUpdateSubmit();break;case AddressOperation.List:_this._onSelectAddress();break;default:_this.props.telemetry.error('Invalid operation');}};_this.onCancel=function(){switch(_this.currentOperation){case AddressOperation.Add:case AddressOperation.Update:if(!(!_this.selectedAddress&&!_this.addressCommon.isAuthenticatedFlow())){_this._resetView();}break;case AddressOperation.List:if(_this.selectedAddress){_this._resetView();}break;default:_this.props.telemetry.error('Invalid operation');}};_this.onEdit=function(){if(_this.addressCommon.isAuthenticatedFlow()&&_this.shippingAddress){_this._updateCurrentOperation(AddressOperation.List,_this.shippingAddress);}else if(_this.shippingAddress){_this._updateCurrentOperation(AddressOperation.Update,_this.shippingAddress);}_this._updateModuleState();};_this._getShippingAddressFromCartLines=function(){var request=_this.props.context.request;var pickupDeliveryModeCode=request&&request.channel&&request.channel.PickupDeliveryModeCode;var cartLines=(_this.props.data.checkout.result&&_this.props.data.checkout.result.checkoutCart.cart.CartLines||[]).filter(function(cartLine){return cartLine.DeliveryMode&&cartLine.DeliveryMode!==''?cartLine.DeliveryMode!==pickupDeliveryModeCode:cartLine;});if(cartLines&&cartLines.length>0){return cartLines[0].ShippingAddress;}return undefined;};_this._canShip=function(){var checkout=_this.props.data.checkout;var request=_this.props.context.request;var pickupDeliveryModeCode=request&&request.channel&&request.channel.PickupDeliveryModeCode;if(!checkout.result||!request.channel||checkout.result.checkoutCart.isEmpty){return false;}return checkout.result.checkoutCart.cart.CartLines.some(function(cartLine){return cartLine.DeliveryMode&&cartLine.DeliveryMode!==''?cartLine.DeliveryMode!==pickupDeliveryModeCode:cartLine;});};_this._onSelectAddress=function(){_this._updateCurrentOperation(AddressOperation.Show,_this.addressListSelectedAddress);_this._setShippingAddress(_this.addressListSelectedAddress);_this._updateModuleState();};_this._goToAddAddress=function(){_this._setDefaultCountryRegionId();_this._updateCurrentOperation(AddressOperation.Add);};_this._onAddOrUpdateSuccess=function(response){if(response.customerAddresses){_this.customerAddresses=response.customerAddresses;}if(response.address){_this._updateCurrentOperation(AddressOperation.Show,response.address);_this._setShippingAddress(response.address);_this._updateModuleState();}};_this._setShippingAddress=function(address){if(_this.props.data.checkout.result){var newShippingAddress=_objectSpread({},address);if(address.ThreeLetterISORegionName&&!newShippingAddress.TwoLetterISORegionName){newShippingAddress.TwoLetterISORegionName=_this.addressFormat.getTwoLetterISORegionName(address.ThreeLetterISORegionName);}_this.props.data.checkout.result.updateShippingAddress({newShippingAddress:newShippingAddress});}};_this._resetView=function(){switch(_this.currentOperation){case AddressOperation.Add:case AddressOperation.Update:_this._updateCurrentOperation(_this.addressCommon.isAuthenticatedFlow()?AddressOperation.List:AddressOperation.Show,_this.shippingAddress);break;default:_this._updateCurrentOperation(AddressOperation.Show,_this.shippingAddress);}_this._updateModuleState();};_this._updateCurrentOperation=function(operation,selectedAddress){_this.currentOperation=operation;_this.selectedAddress=selectedAddress;if(_this.currentOperation===AddressOperation.Add||_this.currentOperation===AddressOperation.Update){_this.addUpdateAddress=_objectSpread({},_this.selectedAddress)||{};set(_this.addUpdateAddress,_defineProperty({},'ThreeLetterISORegionName',_this.addUpdateAddress.ThreeLetterISORegionName||_this.countryRegionId));set(_this.addUpdateAddress,_defineProperty({},'AddressTypeValue',_this.addUpdateAddress.AddressTypeValue||_this.defaultAddressType));}else if(_this.currentOperation===AddressOperation.List){_this.addressListSelectedAddress=_objectSpread({},_this.selectedAddress)||{};}};_this._updateModuleState=function(){if(_this.currentOperation===AddressOperation.Show){_this.props.moduleState.onReady();}else if(_this.isUpdating){_this.props.moduleState.onPending();}else{_this.props.moduleState.onUpdating();}};var _this$props=_this.props,context=_this$props.context,data=_this$props.data,resources=_this$props.resources,telemetry=_this$props.telemetry;_this.addUpdateAddress={};_this.resources=resources;_this.currentOperation=AddressOperation.List;_this.countryRegions=data.countryRegions.result||[];_this.addressPurposes=data.addressPurposes.result||[];_this.customerAddresses=data.address.result||[];_this.stateProvinceInfo=data.countryStates.result||[];_this.addressCommon=new AddressCommon(context,resources,telemetry);_this.addressFormat=new AddressFormat(_this.countryRegions,new AddressMetaData(_objectSpread({},resources),_this._getAddressFormatExcludeList()),_this.addressPurposes);_this.validationError={};_this.telemetryContent=getTelemetryObject(_this.props.context.request.telemetryPageName,_this.props.friendlyName,_this.props.telemetry);return _this;}_createClass(CheckoutShippingAddress,[{key:\"componentDidMount\",value:function componentDidMount(){var _this2=this;this.props.data.checkout.then(function(){_this2._setDefaultCountryRegionId();_this2._initModuleState();});reaction(function(){return _this2.countryRegionId;},function(){return _this2._getStateProvinces();});reaction(function(){return _this2.currentOperation;},function(){_this2._getStateProvinces();});}},{key:\"render\",value:function render(){if(!this._canShip()){return null;}var _this$props2=this.props,renderView=_this$props2.renderView,config=_this$props2.config;var viewProps=_objectSpread(_objectSpread({},this.props),{},{currentOperation:this.currentOperation,selectedAddress:this.selectedAddress,addUpdateAddress:this.addUpdateAddress,addressListSelectedAddress:this.addressListSelectedAddress,countryRegionId:this.countryRegionId,stateProvinceInfo:this.stateProvinceInfo,customerAddresses:this.customerAddresses,validationError:this.validationError,addressActionResponse:this.addressActionResponse,isUpdating:this.isUpdating,hasError:this.hasError,className:config.className,viewState:{isShowAddress:this.currentOperation===AddressOperation.Show&&this.selectedAddress,isShowAddresList:this.currentOperation===AddressOperation.List&&this.customerAddresses.length>0,isShowAddOrUpdateAddress:this.currentOperation===AddressOperation.Add||this.currentOperation===AddressOperation.Update},CheckoutShippingAddress:{moduleProps:this.props,className:classnames('ms-checkout-shipping-address',config.className)},showAddress:this._renderShowAddress(),showAddressSelect:this._renderSelectAddress(),showAddOrUpdateAddress:this._renderAddOrUpdateAddress()});return renderView(viewProps);}},{key:\"_renderShowAddress\",value:function _renderShowAddress(){if(this.selectedAddress){return AddressShow({address:this.selectedAddress,addressFormat:this.addressFormat.getAddressFormat(this.selectedAddress.ThreeLetterISORegionName||''),addressPurposes:this.addressPurposes});}return null;}},{key:\"_setDefaultCountryRegionId\",value:function _setDefaultCountryRegionId(){var request=this.props.context.request;var market=request&&request.channel&&request.channel.ChannelCountryRegionISOCode;this.countryRegionId=this.addressCommon.getDefaultCountryRegionId(this.countryRegionId,this.countryRegions,market);}},{key:\"shippingAddress\",get:function get(){return this.props.data.checkout.result&&this.props.data.checkout.result.shippingAddress;}}]);return CheckoutShippingAddress;}(React.Component);__decorate([observable],CheckoutShippingAddress.prototype,\"currentOperation\",void 0);__decorate([observable],CheckoutShippingAddress.prototype,\"selectedAddress\",void 0);__decorate([observable],CheckoutShippingAddress.prototype,\"addUpdateAddress\",void 0);__decorate([observable],CheckoutShippingAddress.prototype,\"countryRegionId\",void 0);__decorate([observable],CheckoutShippingAddress.prototype,\"stateProvinceInfo\",void 0);__decorate([observable],CheckoutShippingAddress.prototype,\"customerAddresses\",void 0);__decorate([observable],CheckoutShippingAddress.prototype,\"validationError\",void 0);__decorate([observable],CheckoutShippingAddress.prototype,\"addressActionResponse\",void 0);__decorate([observable],CheckoutShippingAddress.prototype,\"isUpdating\",void 0);__decorate([observable],CheckoutShippingAddress.prototype,\"hasError\",void 0);__decorate([observable],CheckoutShippingAddress.prototype,\"addressListSelectedAddress\",void 0);__decorate([computed],CheckoutShippingAddress.prototype,\"shippingAddress\",null);CheckoutShippingAddress=__decorate([withModuleState,observer],CheckoutShippingAddress);export default CheckoutShippingAddress;","map":{"version":3,"sources":["modules/checkout-shipping-address/checkout-shipping-address.tsx"],"names":[],"mappings":"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","sourcesContent":["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nimport classnames from 'classnames';\nimport { computed, observable, reaction, set } from 'mobx';\nimport { observer } from 'mobx-react';\nimport * as React from 'react';\n\nimport { IModuleStateProps, withModuleState } from '@msdyn365-commerce-modules/checkout-utilities';\nimport { getTelemetryObject, IModuleProps, ITelemetryContent } from '@msdyn365-commerce-modules/utilities';\nimport { Address, AddressPurpose, CountryRegionInfo, StateProvinceInfo } from '@msdyn365-commerce/retail-proxy';\n\nimport { AddressCommon } from '../../common/address-common';\nimport { AddressFormat } from '../../common/address-format';\nimport { AddressItemType } from '../../common/address-format.data';\nimport { AddressMetaData } from '../../common/address-meta-data';\nimport { AddressOperation, AddressType, IAddressResource, IAddressResponse } from '../../common/address-module.data';\nimport { AddressAddUpdate, IAddressAddUpdateProps } from '../../common/components/address-add';\nimport { AddressSelect, IAddressSelectProps } from '../../common/components/address-select';\nimport { AddressShow, IAddressShowProps } from '../../common/components/address-show';\nimport { ICheckoutShippingAddressData } from './checkout-shipping-address.data';\nimport { ICheckoutShippingAddressProps } from './checkout-shipping-address.props.autogenerated';\n\nexport interface ICheckoutAddressProps extends ICheckoutShippingAddressProps<ICheckoutShippingAddressData>, IModuleStateProps { }\n\nexport interface ICheckoutShippingAddressViewState {\n    isShowAddress: boolean;\n    isShowAddresList: boolean;\n    isShowAddOrUpdateAddress: boolean;\n}\n\nexport interface ICheckoutShippingAddressViewProps extends ICheckoutAddressProps {\n    className: string;\n    currentOperation: AddressOperation;\n    selectedAddress?: Address;\n    addUpdateAddress: Address;\n    addressListSelectedAddress: Address;\n    countryRegionId: string;\n    stateProvinceInfo?: StateProvinceInfo[];\n    customerAddresses: Address[];\n    validationError: object;\n    addressActionResponse?: IAddressResponse;\n    viewState: ICheckoutShippingAddressViewState;\n    CheckoutShippingAddress: IModuleProps;\n    isUpdating: boolean;\n    hasError: boolean;\n    showAddress: IAddressShowProps;\n    showAddressSelect: IAddressSelectProps;\n    showAddOrUpdateAddress: IAddressAddUpdateProps;\n}\n\n/**\n *\n * Address component\n * @extends {React.Component<ICheckoutShippingAddressProps<ICheckoutShippingAddressData>>}\n */\n// @ts-ignore\n@withModuleState\n@observer\nclass CheckoutShippingAddress extends React.Component<ICheckoutAddressProps> {\n    @observable private currentOperation: AddressOperation;\n    @observable private selectedAddress?: Address;\n    @observable private addUpdateAddress: Address;\n    @observable private countryRegionId: string = 'USA';\n    @observable private stateProvinceInfo?: StateProvinceInfo[];\n    @observable private customerAddresses: Address[];\n    @observable private validationError: object;\n    @observable private addressActionResponse?: IAddressResponse;\n    @observable private isUpdating?: boolean;\n    @observable private hasError?: boolean;\n    @observable private addressListSelectedAddress: Address = {};\n\n    private addressCommon: AddressCommon;\n    private addressFormat: AddressFormat;\n    private countryRegions: CountryRegionInfo[];\n    private addressPurposes: AddressPurpose[];\n    private resources: IAddressResource;\n    private defaultAddressType: number = 6; // Default to Home\n    private telemetryContent?: ITelemetryContent;\n\n    constructor(props: ICheckoutAddressProps) {\n        super(props);\n        const { context, data, resources, telemetry } = this.props;\n\n        this.addUpdateAddress = {};\n        this.resources = resources;\n        this.currentOperation = AddressOperation.List;\n        this.countryRegions = data.countryRegions.result || [];\n        this.addressPurposes = data.addressPurposes.result || [];\n        this.customerAddresses = data.address.result || [];\n        this.stateProvinceInfo = data.countryStates.result || [];\n        this.addressCommon = new AddressCommon(context, resources, telemetry);\n        this.addressFormat = new AddressFormat(this.countryRegions, new AddressMetaData({ ...resources }, this._getAddressFormatExcludeList()), this.addressPurposes);\n        this.validationError = {};\n        this.telemetryContent = getTelemetryObject(this.props.context.request.telemetryPageName!, this.props.friendlyName, this.props.telemetry);\n    }\n\n    public componentDidMount(): void {\n        this.props.data.checkout.then(() => {\n            this._setDefaultCountryRegionId();\n            this._initModuleState();\n        });\n\n        reaction(\n            () => this.countryRegionId,\n            () => this._getStateProvinces()\n        );\n\n        reaction(\n            () => this.currentOperation,\n            () => {\n                this._getStateProvinces();\n            }\n        );\n    }\n\n    public render(): JSX.Element | null {\n        if (!this._canShip()) {\n            return null;\n        }\n\n        const { renderView, config } = this.props;\n\n        const viewProps = {\n            ...this.props,\n            currentOperation: this.currentOperation,\n            selectedAddress: this.selectedAddress,\n            addUpdateAddress: this.addUpdateAddress,\n            addressListSelectedAddress: this.addressListSelectedAddress,\n            countryRegionId: this.countryRegionId,\n            stateProvinceInfo: this.stateProvinceInfo,\n            customerAddresses: this.customerAddresses,\n            validationError: this.validationError,\n            addressActionResponse: this.addressActionResponse,\n            isUpdating: this.isUpdating,\n            hasError: this.hasError,\n            className: config.className,\n            viewState: {\n                isShowAddress: this.currentOperation === AddressOperation.Show && this.selectedAddress,\n                isShowAddresList: this.currentOperation === AddressOperation.List && this.customerAddresses.length > 0,\n                isShowAddOrUpdateAddress:\n                    this.currentOperation === AddressOperation.Add || this.currentOperation === AddressOperation.Update\n            },\n            CheckoutShippingAddress: {\n                moduleProps: this.props,\n                className: classnames('ms-checkout-shipping-address', config.className)\n            },\n            showAddress: this._renderShowAddress(),\n            showAddressSelect: this._renderSelectAddress(),\n            showAddOrUpdateAddress: this._renderAddOrUpdateAddress()\n        };\n\n        return renderView(viewProps) as React.ReactElement;\n    }\n\n    private _renderAddOrUpdateAddress = (): IAddressAddUpdateProps => {\n        const addressFormat = this.currentOperation === AddressOperation.Add && this.addressCommon.isAuthenticatedFlow() ? this.addressFormat : this.addressFormat;\n        return AddressAddUpdate({\n            isUpdating: this.isUpdating,\n            resources: this.resources,\n            addressType: AddressType.Shipping,\n            addressFormat: addressFormat.getAddressFormat(this.addUpdateAddress.ThreeLetterISORegionName || this.countryRegionId),\n            defaultCountryRegionId: this.countryRegionId,\n            defaultAddressType: this.defaultAddressType,\n            selectedAddress: this.addUpdateAddress,\n            validationError: this.validationError,\n            hasError: this.hasError,\n            addressActionResponse: this.addressActionResponse,\n            telemetryContent: this.telemetryContent,\n            dropdownDisplayData: addressFormat.getPrefilledAddressDropdownData(\n                this.resources.addressStateDefaultSelectionText,\n                this.stateProvinceInfo\n            ),\n            onInputChange: this._onAddressAddUpdateInputChange,\n            onDropdownChange: this._onAddressAddUpdateDropdownChange,\n            hasExternalSubmitGroup: this.props.moduleState.hasExternalSubmitGroup,\n            onSave: this.onSubmit,\n            // tslint:disable-next-line: no-empty\n            onCancel: !this.selectedAddress && !this.addressCommon.isAuthenticatedFlow() ? () => { } : this._resetView\n        });\n    };\n\n    private _renderSelectAddress = (): IAddressSelectProps => {\n        return AddressSelect({\n            addressFormat: this.addressFormat,\n            addresses: this.customerAddresses,\n            resources: this.resources,\n            addressPurposes: this.addressPurposes,\n            selectedAddress: this.addressListSelectedAddress,\n            onAddressOptionChange: this._onAddressOptionChange,\n            hasExternalSubmitGroup: this.props.moduleState.hasExternalSubmitGroup,\n            telemetryContent: this.telemetryContent,\n            onAddAddress: this._goToAddAddress,\n            onSave: this._onSelectAddress,\n            // tslint:disable-next-line: no-empty\n            onCancel: !this.selectedAddress ? () => { } : this._resetView\n        });\n    };\n\n    private _renderShowAddress(): IAddressShowProps | null {\n        if (this.selectedAddress) {\n            return AddressShow({\n                address: this.selectedAddress,\n                addressFormat: this.addressFormat.getAddressFormat(this.selectedAddress.ThreeLetterISORegionName || ''),\n                addressPurposes: this.addressPurposes\n            });\n        }\n\n        return null;\n    }\n\n    private _onAddressOptionChange = (event: React.ChangeEvent<HTMLInputElement>) => {\n        const addressRecordId = event.currentTarget.value;\n        const selectedAddress = this.customerAddresses.find(address => (address.RecordId || '').toString() === addressRecordId);\n        if (selectedAddress) {\n            this.addressListSelectedAddress = selectedAddress;\n        }\n    };\n\n    private onAddressAddUpdate = (name: string, value: string | boolean) => {\n        set(this.addUpdateAddress, { [name]: value });\n        this.addressFormat.validateAddressFormat(this.addUpdateAddress, this.validationError, this.countryRegionId, name);\n    };\n\n    private _onAddressAddUpdateInputChange = (event: React.ChangeEvent<HTMLInputElement>): void => {\n        if (event.target.type === 'checkbox') {\n            this.onAddressAddUpdate(event.target.name, event.target.checked);\n        } else {\n            const value = (event.target.value || '').replace(new RegExp('[<>]', 'gi'), '');\n            this.onAddressAddUpdate(event.target.name, value);\n        }\n    };\n\n    private _onAddressAddUpdateDropdownChange = (event: React.ChangeEvent<HTMLSelectElement>): void => {\n        this.onAddressAddUpdate(event.target.name, event.target.value);\n\n        if (event.target.name === AddressItemType[AddressItemType.ThreeLetterISORegionName]) {\n            this._onCountryChange(event.target.value);\n        }\n    };\n\n    private _onAddressAddUpdateSubmit = (): void => {\n        if (!this.addressFormat.validateAddressFormat(this.addUpdateAddress, this.validationError, this.countryRegionId)) {\n            return;\n        }\n\n        let response: Promise<IAddressResponse>;\n        if (this.addressCommon.isAuthenticatedFlow()) {\n            response =\n                this.currentOperation === AddressOperation.Update\n                    ? this.addressCommon.updateCustomerAddress(this.addUpdateAddress)\n                    : this.addressCommon.addCustomerAddress(this.addUpdateAddress);\n        } else {\n            response = Promise.resolve({ address: this.addUpdateAddress });\n        }\n\n        this.isUpdating = true;\n        this._updateModuleState();\n\n        response.then(\n            (result: IAddressResponse) => {\n                this.isUpdating = false;\n\n                if (result.address) {\n                    this.hasError = false;\n                    this._onAddOrUpdateSuccess(result);\n                } else {\n                    this.hasError = true;\n                    this.addressActionResponse = result;\n                    this._updateModuleState();\n                }\n            },\n            () => {\n                this.hasError = true;\n                this.isUpdating = false;\n                this._updateModuleState();\n            }\n        );\n    };\n\n    private _onCountryChange = (countryRegionId: string) => {\n        this.countryRegionId = countryRegionId;\n        set(this.addUpdateAddress, { ['ThreeLetterISORegionName']: countryRegionId });\n    };\n\n    private _getAddressFormatExcludeList = (): AddressItemType[] => {\n        const { config } = this.props;\n        const addressFormatExcludeList: AddressItemType[] = [];\n\n        if (!config.showAddressType) {\n            addressFormatExcludeList.push(AddressItemType.AddressTypeValue);\n        }\n\n        addressFormatExcludeList.push(AddressItemType.IsPrimary);\n\n        return addressFormatExcludeList;\n    }\n\n    private _getStateProvinces = (): void => {\n        if (\n            !this.countryRegionId ||\n            !(this.currentOperation === AddressOperation.Add || this.currentOperation === AddressOperation.Update)\n        ) {\n            return;\n        }\n\n        // tslint:disable-next-line:no-floating-promises\n        this.addressCommon.getStateProvinces(this.countryRegionId).then((result: StateProvinceInfo[]) => {\n            const stateInfo = result.some(state => state.StateId === this.addUpdateAddress.State);\n            // Reset state if selected state not found in the list.\n            if (!stateInfo) {\n                set(this.addUpdateAddress, { ['State']: '' });\n            }\n\n            this.stateProvinceInfo = result;\n        });\n    };\n\n    private _setDefaultCountryRegionId(): void {\n        const { request } = this.props.context;\n        const market = request && request.channel && request.channel.ChannelCountryRegionISOCode;\n\n        this.countryRegionId = this.addressCommon.getDefaultCountryRegionId(this.countryRegionId, this.countryRegions, market);\n    }\n\n    private _getDefaultAddress = (): Address | undefined => {\n        if (this.customerAddresses) {\n            const primaryAddress = this.customerAddresses.find((address: Address) => address.IsPrimary);\n            return primaryAddress || (this.customerAddresses.length > 0 ? this.customerAddresses[0] : undefined);\n        }\n        return undefined;\n    };\n\n    private _initModuleState = (): void => {\n        this.props.moduleState.init({\n            status: this._canShip() ? 'updating' : 'disabled',\n            onEdit: this.onEdit,\n            onCancel: this.onCancel,\n            onSubmit: this.onSubmit\n        });\n\n        if (this._canShip()) {\n            const defaultAddress = this._getShippingAddressFromCartLines() || this._getDefaultAddress();\n            if (defaultAddress) {\n                this._updateCurrentOperation(AddressOperation.Show, defaultAddress);\n                this._setShippingAddress(defaultAddress);\n                this._updateModuleState();\n            } else {\n                this._updateCurrentOperation(AddressOperation.Add);\n            }\n        }\n    };\n\n    private onSubmit = (): void => {\n        switch (this.currentOperation) {\n            case AddressOperation.Add:\n            case AddressOperation.Update:\n                this._onAddressAddUpdateSubmit();\n                break;\n            case AddressOperation.List:\n                this._onSelectAddress();\n                break;\n            default:\n                this.props.telemetry.error('Invalid operation');\n        }\n    };\n\n    private onCancel = (): void => {\n        switch (this.currentOperation) {\n            case AddressOperation.Add:\n            case AddressOperation.Update:\n                if (!(!this.selectedAddress && !this.addressCommon.isAuthenticatedFlow())) {\n                    this._resetView();\n                }\n\n                break;\n            case AddressOperation.List:\n                if (this.selectedAddress) {\n                    this._resetView();\n                }\n                break;\n            default:\n                this.props.telemetry.error('Invalid operation');\n        }\n    };\n\n    private onEdit = (): void => {\n        if (this.addressCommon.isAuthenticatedFlow() && this.shippingAddress) {\n            this._updateCurrentOperation(AddressOperation.List, this.shippingAddress);\n        } else if (this.shippingAddress) {\n            this._updateCurrentOperation(AddressOperation.Update, this.shippingAddress);\n        }\n\n        this._updateModuleState();\n    };\n\n    private _getShippingAddressFromCartLines = (): Address | undefined => {\n        const { request } = this.props.context;\n        const pickupDeliveryModeCode = request && request.channel && request.channel.PickupDeliveryModeCode;\n\n        const cartLines = ((this.props.data.checkout.result && this.props.data.checkout.result.checkoutCart.cart.CartLines) || []).filter(\n            cartLine => (cartLine.DeliveryMode && cartLine.DeliveryMode !== '') ? cartLine.DeliveryMode !== pickupDeliveryModeCode : cartLine\n        );\n\n        if (cartLines && cartLines.length > 0) {\n            return cartLines[0].ShippingAddress;\n        }\n\n        return undefined;\n    };\n\n    private _canShip = (): boolean => {\n        const { checkout } = this.props.data;\n        const { request } = this.props.context;\n        const pickupDeliveryModeCode = request && request.channel && request.channel.PickupDeliveryModeCode;\n        if (!checkout.result || !request.channel || checkout.result.checkoutCart.isEmpty) {\n            return false;\n        }\n        // @ts-ignore: Type-checker not realizing above request.channel check\n        return checkout.result.checkoutCart.cart.CartLines.some(cartLine => (cartLine.DeliveryMode && cartLine.DeliveryMode !== '') ? cartLine.DeliveryMode !== pickupDeliveryModeCode : cartLine);\n    };\n\n    private _onSelectAddress = () => {\n        this._updateCurrentOperation(AddressOperation.Show, this.addressListSelectedAddress);\n        this._setShippingAddress(this.addressListSelectedAddress);\n        this._updateModuleState();\n    };\n\n    private _goToAddAddress = () => {\n        this._setDefaultCountryRegionId();\n        this._updateCurrentOperation(AddressOperation.Add);\n    };\n\n    private _onAddOrUpdateSuccess = (response: IAddressResponse) => {\n        if (response.customerAddresses) {\n            this.customerAddresses = response.customerAddresses;\n        }\n\n        if (response.address) {\n            this._updateCurrentOperation(AddressOperation.Show, response.address);\n            this._setShippingAddress(response.address);\n            this._updateModuleState();\n        }\n    };\n\n    private _setShippingAddress = (address: Address): void => {\n        if (this.props.data.checkout.result) {\n            const newShippingAddress = { ...address };\n\n            if (address.ThreeLetterISORegionName && !newShippingAddress.TwoLetterISORegionName) {\n                newShippingAddress.TwoLetterISORegionName = this.addressFormat.getTwoLetterISORegionName(address.ThreeLetterISORegionName);\n            }\n\n            // tslint:disable-next-line:no-floating-promises\n            this.props.data.checkout.result.updateShippingAddress({ newShippingAddress });\n        }\n    };\n\n    @computed get shippingAddress(): Address | undefined {\n        return this.props.data.checkout.result && this.props.data.checkout.result.shippingAddress;\n    }\n\n    private _resetView = (): void => {\n        switch (this.currentOperation) {\n            case AddressOperation.Add:\n            case AddressOperation.Update:\n                this._updateCurrentOperation(\n                    this.addressCommon.isAuthenticatedFlow() ? AddressOperation.List : AddressOperation.Show,\n                    this.shippingAddress\n                );\n                break;\n            default:\n                this._updateCurrentOperation(AddressOperation.Show, this.shippingAddress);\n        }\n        this._updateModuleState();\n    };\n\n    private _updateCurrentOperation = (operation: AddressOperation, selectedAddress?: Address) => {\n        this.currentOperation = operation;\n        this.selectedAddress = selectedAddress;\n\n        if (this.currentOperation === AddressOperation.Add || this.currentOperation === AddressOperation.Update) {\n            this.addUpdateAddress = { ...this.selectedAddress } || {};\n            set(this.addUpdateAddress, {\n                ['ThreeLetterISORegionName']: this.addUpdateAddress.ThreeLetterISORegionName || this.countryRegionId\n            });\n            set(this.addUpdateAddress, {\n                ['AddressTypeValue']: this.addUpdateAddress.AddressTypeValue || this.defaultAddressType\n            });\n        } else if (this.currentOperation === AddressOperation.List) {\n            this.addressListSelectedAddress = { ...this.selectedAddress } || {};\n        }\n    };\n\n    private _updateModuleState = () => {\n        if (this.currentOperation === AddressOperation.Show) {\n            this.props.moduleState.onReady();\n        } else if (this.isUpdating) {\n            this.props.moduleState.onPending();\n        } else {\n            this.props.moduleState.onUpdating();\n        }\n    };\n}\n\nexport default CheckoutShippingAddress;\n"],"sourceRoot":"./src/"},"metadata":{},"sourceType":"module"}