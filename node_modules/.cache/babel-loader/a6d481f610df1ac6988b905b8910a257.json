{"ast":null,"code":"import _defineProperty from\"@babel/runtime/helpers/esm/defineProperty\";import _classCallCheck from\"@babel/runtime/helpers/esm/classCallCheck\";import _createClass from\"@babel/runtime/helpers/esm/createClass\";function ownKeys(object,enumerableOnly){var keys=Object.keys(object);if(Object.getOwnPropertySymbols){var symbols=Object.getOwnPropertySymbols(object);if(enumerableOnly)symbols=symbols.filter(function(sym){return Object.getOwnPropertyDescriptor(object,sym).enumerable;});keys.push.apply(keys,symbols);}return keys;}function _objectSpread(target){for(var i=1;i<arguments.length;i++){var source=arguments[i]!=null?arguments[i]:{};if(i%2){ownKeys(Object(source),true).forEach(function(key){_defineProperty(target,key,source[key]);});}else if(Object.getOwnPropertyDescriptors){Object.defineProperties(target,Object.getOwnPropertyDescriptors(source));}else{ownKeys(Object(source)).forEach(function(key){Object.defineProperty(target,key,Object.getOwnPropertyDescriptor(source,key));});}}return target;}/*!\r\n * Copyright (c) Microsoft Corporation.\r\n * All rights reserved. See LICENSE in the project root for license information.\r\n */import{DataServiceRequest}from'./DataServiceRequest';/**\r\n * Represents a data service query object.\r\n */export var DataServiceQuery=/*#__PURE__*/function(){/**\r\n     * Creates a new instance of DataServiceQuery<T>.\r\n     * @param {IDataServiceRequestFactory} dataServiceRequestFactory The data service request factory.\r\n     * @param {string} [entitySet] The entity set name.\r\n     * @param {string} [entityType] The entity type name.\r\n     * @param {any} [returntype] The return type of query.\r\n     * @param {any} [key] Entity key.\r\n     */function DataServiceQuery(entitySet,entityType,returnType,key){_classCallCheck(this,DataServiceQuery);this._query={entitySet:entitySet,entityType:entityType,key:key,returnType:returnType,tokens:{},// by default all action will skip reading from cache before making execute call\noptions:{bypassCache:'get',returnEntity:entityType},resultSettings:{Paging:{},Sorting:{}}};}/**\r\n     * Query result settings.\r\n     *\r\n     * @param {string} value The value of query result settings.\r\n     */_createClass(DataServiceQuery,[{key:\"resultSettings\",value:function resultSettings(value){if(!value){value={};}this._query.resultSettings={};this._query.resultSettings.Paging=value.Paging||{};this._query.resultSettings.Sorting=value.Sorting||{};this._query.resultSettings.count=value.count;return this;}/**\r\n     * Filter Clause.\r\n     * @param {string} value The filter value.\r\n     */},{key:\"filter\",value:function filter(value){this._query.filterSettings=value;return this;}/**\r\n     * Top clause\r\n     * @param {string} value The number of top rows to select.\r\n     */},{key:\"top\",value:function top(value){this._query.resultSettings.Paging.Top=value;return this;}/**\r\n     * Skip clause\r\n     * @param {string} value The number of rows to skip\r\n     */},{key:\"skip\",value:function skip(value){this._query.resultSettings.Paging.Skip=value;return this;}/**\r\n     * Expand clause\r\n     * @param {string} propertyName The property name to expand.\r\n     */},{key:\"expand\",value:function expand(propertyName){if(this._query.expands==null){this._query.expands=[];}this._query.expands.push(propertyName);return this;}/**\r\n     * Request number of total row available.\r\n     */},{key:\"inlineCount\",value:function inlineCount(){this._query.inlineCount=true;return this;}/**\r\n     * Order by clause.\r\n     * @param {string} value The field name for ordering.\r\n     */},{key:\"orderBy\",value:function orderBy(value){if(!this._query.resultSettings.Sorting.Columns){this._query.resultSettings.Sorting.Columns=[];}this._query.resultSettings.Sorting.Columns.push({ColumnName:value});return this;}/**\r\n     * Transforms the request into a create request.\r\n     * @param {string} object The object.\r\n     * @return {IDataServiceRequest} The data service request.\r\n     */},{key:\"create\",value:function create(object){this._query.action='Create';this._query.data=this._createODataParameters(object);this._query.options.bypassCache='none';return this._createRequest();}/**\r\n     * Transforms the request into a read request.\r\n     * @return {IDataServiceRequest} The data service request.\r\n     */},{key:\"read\",value:function read(){if(this._query.key||this._query.entitySet==='Customers'&&this._query.key!==null&&this._query.key!==undefined){this._query.action='Read';}else{this._query.action='ReadAll';this._query.isReturnTypeACollection=true;}this._query.options.bypassCache='none';return this._createRequest();}/**\r\n     * Transforms the request into an update request.\r\n     * @param {string} object The object.\r\n     * @return {IDataServiceRequest} The data service request.\r\n     */},{key:\"update\",value:function update(object){this._query.action='Update';this._query.data=this._createODataParameters(object);return this._createRequest();}/**\r\n     * Transforms the request into a delete request.\r\n     * @return {DataServiceRequest} The data service request.\r\n     */},{key:\"delete\",value:function _delete(){this._query.action='Delete';return this._createRequest();}},{key:\"setGetAllRecords\",value:function setGetAllRecords(){this._query.resultSettings.Paging.Top=-1;}},{key:\"isGetAllRecords\",value:function isGetAllRecords(){return this._query.resultSettings.Paging.Top===-1;}},{key:\"createDataServiceRequestForOperation\",value:function createDataServiceRequestForOperation(operationName,isAction,returnType,isReturnTypeACollection,options,data){this._query.returnType=returnType;this._query.isAction=isAction;this._query.isReturnTypeACollection=isReturnTypeACollection==='true';this._query.action=operationName;this._query.data=this._createODataParameters(data);this._query.options=_objectSpread(_objectSpread({},{bypassCache:'get',returnEntity:'CUSTOM-ENTITY'}),options);if(this._query.isReturnTypeACollection&&!this._query.resultSettings.Paging.Top){// for paginated requests, where we didn't specify page size, set to fetch all records\nthis.setGetAllRecords();}return this._createRequest();}},{key:\"_createODataParameters\",value:function _createODataParameters(data){return data?{parameters:data}:undefined;}},{key:\"_createRequest\",value:function _createRequest(){return new DataServiceRequest(this._query);}}]);return DataServiceQuery;}();","map":{"version":3,"sources":["../src/DataServiceQuery.ts"],"names":[],"mappings":"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","sourcesContent":["/*!\n * Copyright (c) Microsoft Corporation.\n * All rights reserved. See LICENSE in the project root for license information.\n */\n\nimport { DataServiceRequest } from './DataServiceRequest';\nimport { IDataServiceOptions, IDataServiceQueryInternal, IDataServiceRequest, IQueryResultSettings } from './Interfaces';\n\n/**\n * Represents a data service query object.\n */\nexport class DataServiceQuery {\n    private _query: IDataServiceQueryInternal;\n\n    /**\n     * Creates a new instance of DataServiceQuery<T>.\n     * @param {IDataServiceRequestFactory} dataServiceRequestFactory The data service request factory.\n     * @param {string} [entitySet] The entity set name.\n     * @param {string} [entityType] The entity type name.\n     * @param {any} [returntype] The return type of query.\n     * @param {any} [key] Entity key.\n     */\n    constructor(entitySet?: string, entityType?: string, returnType?: any, key?: any) {\n        this._query = {\n            entitySet,\n            entityType,\n            key,\n            returnType,\n            tokens: {},\n            // by default all action will skip reading from cache before making execute call\n            options: { bypassCache: 'get', returnEntity: entityType },\n            resultSettings: { Paging: {}, Sorting: {} }\n        };\n    }\n\n    /**\n     * Query result settings.\n     *\n     * @param {string} value The value of query result settings.\n     */\n    public resultSettings(value: IQueryResultSettings): DataServiceQuery {\n        if (!value) {\n            value = {};\n        }\n\n        this._query.resultSettings = {};\n        this._query.resultSettings.Paging = value.Paging || {};\n        this._query.resultSettings.Sorting = value.Sorting || {};\n        this._query.resultSettings.count = value.count;\n\n        return this;\n    }\n\n    /**\n     * Filter Clause.\n     * @param {string} value The filter value.\n     */\n    public filter(value: string): DataServiceQuery {\n        this._query.filterSettings = value;\n\n        return this;\n    }\n\n    /**\n     * Top clause\n     * @param {string} value The number of top rows to select.\n     */\n    public top(value: number): DataServiceQuery {\n        this._query.resultSettings.Paging.Top = value;\n\n        return this;\n    }\n\n    /**\n     * Skip clause\n     * @param {string} value The number of rows to skip\n     */\n    public skip(value: number): DataServiceQuery {\n        this._query.resultSettings.Paging.Skip = value;\n\n        return this;\n    }\n\n    /**\n     * Expand clause\n     * @param {string} propertyName The property name to expand.\n     */\n    public expand(propertyName: string): DataServiceQuery {\n        if (this._query.expands == null) {\n            this._query.expands = [];\n        }\n\n        this._query.expands.push(propertyName);\n        return this;\n    }\n\n    /**\n     * Request number of total row available.\n     */\n    public inlineCount(): DataServiceQuery {\n        this._query.inlineCount = true;\n\n        return this;\n    }\n\n    /**\n     * Order by clause.\n     * @param {string} value The field name for ordering.\n     */\n    public orderBy(value: string): DataServiceQuery {\n        if (!this._query.resultSettings.Sorting.Columns) {\n            this._query.resultSettings.Sorting.Columns = [];\n        }\n\n        this._query.resultSettings.Sorting.Columns.push({ ColumnName: value });\n\n        return this;\n    }\n\n    /**\n     * Transforms the request into a create request.\n     * @param {string} object The object.\n     * @return {IDataServiceRequest} The data service request.\n     */\n    public create(object: any): IDataServiceRequest {\n        this._query.action = 'Create';\n        this._query.data = this._createODataParameters(object);\n        this._query.options.bypassCache = 'none';\n        return this._createRequest();\n    }\n\n    /**\n     * Transforms the request into a read request.\n     * @return {IDataServiceRequest} The data service request.\n     */\n    public read(): IDataServiceRequest {\n        if (this._query.key || (this._query.entitySet === 'Customers' && this._query.key !== null && this._query.key !== undefined)) {\n            this._query.action = 'Read';\n        } else {\n            this._query.action = 'ReadAll';\n            this._query.isReturnTypeACollection = true;\n        }\n\n        this._query.options.bypassCache = 'none';\n        return this._createRequest();\n    }\n\n    /**\n     * Transforms the request into an update request.\n     * @param {string} object The object.\n     * @return {IDataServiceRequest} The data service request.\n     */\n    public update(object: any): IDataServiceRequest {\n        this._query.action = 'Update';\n        this._query.data = this._createODataParameters(object);\n\n        return this._createRequest();\n    }\n\n    /**\n     * Transforms the request into a delete request.\n     * @return {DataServiceRequest} The data service request.\n     */\n    public delete(): IDataServiceRequest {\n        this._query.action = 'Delete';\n\n        return this._createRequest();\n    }\n\n    public setGetAllRecords(): void {\n        this._query.resultSettings.Paging.Top = -1;\n    }\n\n    public isGetAllRecords(): boolean {\n        return this._query.resultSettings.Paging.Top === -1;\n    }\n\n    public createDataServiceRequestForOperation(\n        operationName: string,\n        isAction: boolean,\n        returnType: any,\n        isReturnTypeACollection: string,\n        options: IDataServiceOptions,\n        data?: unknown\n    ): IDataServiceRequest {\n        this._query.returnType = returnType;\n        this._query.isAction = isAction;\n        this._query.isReturnTypeACollection = isReturnTypeACollection === 'true';\n        this._query.action = operationName;\n        this._query.data = this._createODataParameters(data);\n        this._query.options = { ...{ bypassCache: 'get', returnEntity: 'CUSTOM-ENTITY' }, ...options };\n\n        if (this._query.isReturnTypeACollection && !this._query.resultSettings.Paging.Top) {\n            // for paginated requests, where we didn't specify page size, set to fetch all records\n            this.setGetAllRecords();\n        }\n\n        return this._createRequest();\n    }\n\n    private _createODataParameters(data: unknown) {\n        return data ? { parameters: data } : undefined;\n    }\n\n    private _createRequest(): IDataServiceRequest {\n        return new DataServiceRequest(this._query);\n    }\n}\n"],"sourceRoot":""},"metadata":{},"sourceType":"module"}