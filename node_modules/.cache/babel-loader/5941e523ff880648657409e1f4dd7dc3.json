{"ast":null,"code":"import _regeneratorRuntime from\"@babel/runtime/regenerator\";import _asyncToGenerator from\"@babel/runtime/helpers/esm/asyncToGenerator\";import _classCallCheck from\"@babel/runtime/helpers/esm/classCallCheck\";import{createObservableDataAction}from'@msdyn365-commerce/core';import{getByIdsAsync}from'@msdyn365-commerce/retail-proxy/dist/DataActions/ProductsDataActions.g';import{QueryResultSettingsProxy}from'./utilities/QueryResultSettingsProxy';import{buildCacheKey,generateProductImageUrl}from'./utilities/utils';/**\r\n * Product Input\r\n */export var ProductInput=function ProductInput(productId,apiSettings,channelId){var _this=this;_classCallCheck(this,ProductInput);this.getCacheKey=function(){return buildCacheKey(\"RecordId-\".concat(_this.productId.toString(),\"-ChannelId-\").concat(_this.channelId.toString()),_this.apiSettings);};this.getCacheObjectType=function(){return'SimpleProduct';};this.dataCacheType=function(){return'application';};this.apiSettings=apiSettings;this.productId=+productId;this.channelId=channelId||apiSettings.channelId;};/**\r\n * Creates the input required to make the retail api call\r\n */export var createSimpleProductsInput=function createSimpleProductsInput(inputData){var productIds=inputData.config&&inputData.config.productIds;if(!productIds){return[];}productIds=typeof productIds==='string'?productIds.split(','):productIds;return!Array.isArray(productIds)?[]:productIds.map(function(productId){return new ProductInput(productId,inputData.requestContext.apiSettings);});};/**\r\n * Calls the Retail API and returns the product based on the passed ProductInput\r\n */export function getSimpleProductsAction(_x,_x2){return _getSimpleProductsAction.apply(this,arguments);}function _getSimpleProductsAction(){_getSimpleProductsAction=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee(inputs,ctx){var productIdMapping,productIds;return _regeneratorRuntime.wrap(function _callee$(_context){while(1){switch(_context.prev=_context.next){case 0:if(!(!Array.isArray(inputs)||inputs.length===0)){_context.next=3;break;}ctx.trace('[getSimpleProductsAction] Invalid or empty inputs passed.');return _context.abrupt(\"return\",[]);case 3:productIdMapping={};productIds=inputs.map(function(input,idx){productIdMapping[input.productId]=idx;return input.productId;});return _context.abrupt(\"return\",getByIdsAsync({callerContext:ctx,queryResultSettings:QueryResultSettingsProxy.getDefault().QueryResultSettings},inputs[0].channelId,productIds).then(function(products){var mappedProducts=products.map(function(product){try{var newImageUrl=generateProductImageUrl(product,ctx.requestContext.apiSettings);if(newImageUrl){product.PrimaryImageUrl=newImageUrl;}return product;}catch(e){ctx.trace('[getSimpleProductsAction] Unable to update ImageURL for Product');}}).reduce(function(memo,product){if(!product){return memo;}var idx=productIdMapping[product.RecordId];memo[idx]=product;return memo;},[]);// NOTE: <ZAFINE> This is not an ideal fix, but will resolve all current issues\nreturn inputs.map(function(input){var foundProduct=mappedProducts.find(function(product){return product&&product.RecordId===input.productId;});return foundProduct||{};});}));case 6:case\"end\":return _context.stop();}}},_callee);}));return _getSimpleProductsAction.apply(this,arguments);}export default createObservableDataAction({id:'@msdyn365-commerce-modules/retail-actions/get-simple-products',action:getSimpleProductsAction,input:createSimpleProductsInput,isBatched:true});","map":{"version":3,"sources":["../../src/get-simple-products.ts"],"names":[],"mappings":"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","sourcesContent":["import { CacheType, IAction, IActionInput } from '@msdyn365-commerce/core';\nimport { createObservableDataAction, IActionContext, IAny, ICommerceApiSettings, ICreateActionContext, IDictionary, IGeneric } from '@msdyn365-commerce/core';\nimport { getByIdsAsync } from '@msdyn365-commerce/retail-proxy/dist/DataActions/ProductsDataActions.g';\nimport { SimpleProduct } from '@msdyn365-commerce/retail-proxy/dist/Entities/CommerceTypes.g';\n\nimport { QueryResultSettingsProxy } from './utilities/QueryResultSettingsProxy';\nimport { buildCacheKey, generateProductImageUrl } from './utilities/utils';\n\n/**\n * Product Input\n */\nexport class ProductInput implements IActionInput {\n    public productId: number;\n    public channelId: number;\n    private apiSettings: ICommerceApiSettings;\n\n    constructor(productId: number | string, apiSettings: ICommerceApiSettings, channelId?: number) {\n        this.apiSettings = apiSettings;\n        this.productId = +productId;\n        this.channelId = channelId || apiSettings.channelId;\n    }\n\n    public getCacheKey = () =>  buildCacheKey(`RecordId-${this.productId.toString()}-ChannelId-${this.channelId.toString()}`, this.apiSettings);\n    public getCacheObjectType = () => 'SimpleProduct';\n    public dataCacheType = (): CacheType => 'application';\n}\n\n/**\n * Creates the input required to make the retail api call\n */\nexport const createSimpleProductsInput = (inputData: ICreateActionContext<IGeneric<IAny>>): IActionInput[] => {\n    let productIds = inputData.config && inputData.config.productIds;\n    if (!productIds) {\n        return [];\n    }\n\n    productIds = typeof productIds === 'string' ? productIds.split(',') : productIds;\n    return !Array.isArray(productIds)\n        ? []\n        : productIds.map((productId: string) => {\n              return new ProductInput(productId, inputData.requestContext.apiSettings);\n          });\n};\n\n/**\n * Calls the Retail API and returns the product based on the passed ProductInput\n */\nexport async function getSimpleProductsAction(inputs: ProductInput[], ctx: IActionContext): Promise<SimpleProduct[]> {\n    if (!Array.isArray(inputs) || inputs.length === 0) {\n        ctx.trace('[getSimpleProductsAction] Invalid or empty inputs passed.');\n        return [];\n    }\n\n    const productIdMapping: IDictionary<number> = {};\n    const productIds = inputs.map((input, idx) => {\n        productIdMapping[input.productId] = idx;\n        return input.productId;\n    });\n\n    return getByIdsAsync({ callerContext: ctx, queryResultSettings: QueryResultSettingsProxy.getDefault().QueryResultSettings }, inputs[0].channelId, productIds).then(products => {\n        const mappedProducts = products.map(product => {\n                try {\n                    const newImageUrl = generateProductImageUrl(product, ctx.requestContext.apiSettings);\n\n                    if (newImageUrl) {\n                        product.PrimaryImageUrl = newImageUrl;\n                    }\n\n                    return product;\n                } catch (e) {\n                    ctx.trace('[getSimpleProductsAction] Unable to update ImageURL for Product');\n                }\n            })\n            .reduce((memo: SimpleProduct[], product: SimpleProduct | undefined) => {\n                if (!product) {\n                    return memo;\n                }\n                const idx = productIdMapping[product.RecordId];\n                memo[idx] = product;\n                return memo;\n            }, []);\n\n        // NOTE: <ZAFINE> This is not an ideal fix, but will resolve all current issues\n        return inputs.map(input => {\n            const foundProduct = mappedProducts.find(product => product && product.RecordId === input.productId);\n            return foundProduct || <SimpleProduct>{};\n        });\n    });\n}\n\nexport default createObservableDataAction({\n    id: '@msdyn365-commerce-modules/retail-actions/get-simple-products',\n    action: <IAction<SimpleProduct[]>>getSimpleProductsAction,\n    input: createSimpleProductsInput,\n    isBatched: true\n});\n"],"sourceRoot":""},"metadata":{},"sourceType":"module"}