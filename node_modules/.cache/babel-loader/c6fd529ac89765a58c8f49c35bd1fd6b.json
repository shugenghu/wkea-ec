{"ast":null,"code":"import _defineProperty from\"@babel/runtime/helpers/esm/defineProperty\";function ownKeys(object,enumerableOnly){var keys=Object.keys(object);if(Object.getOwnPropertySymbols){var symbols=Object.getOwnPropertySymbols(object);if(enumerableOnly)symbols=symbols.filter(function(sym){return Object.getOwnPropertyDescriptor(object,sym).enumerable;});keys.push.apply(keys,symbols);}return keys;}function _objectSpread(target){for(var i=1;i<arguments.length;i++){var source=arguments[i]!=null?arguments[i]:{};if(i%2){ownKeys(Object(source),true).forEach(function(key){_defineProperty(target,key,source[key]);});}else if(Object.getOwnPropertyDescriptors){Object.defineProperties(target,Object.getOwnPropertyDescriptors(source));}else{ownKeys(Object(source)).forEach(function(key){Object.defineProperty(target,key,Object.getOwnPropertyDescriptor(source,key));});}}return target;}import{__decorate}from\"tslib\";import{ControlledDrawer,getTelemetryObject}from'@msdyn365-commerce-modules/utilities';import classnames from'classnames';import{observer}from'mobx-react';import*as React from'react';import{createAccordionStateInput}from'../../data-actions/accordion-state-data-action';let AccordionItem=class AccordionItem extends React.Component{constructor(props){super(props);this.moduleClassName='ms-accordion-item';this.handleHeadingChange=event=>this.props.config.accordionItemTitle=event.target.value;this._onToggle=this._onToggle.bind(this);this.telemetryContent=getTelemetryObject(this.props.context.request.telemetryPageName,this.props.friendlyName,this.props.telemetry);}render(){const{slots,renderView,config,data}=this.props;const accordionExpandedStateResult=data&&data.accordionExpandedState&&data.accordionExpandedState.result;const expanded=accordionExpandedStateResult&&accordionExpandedStateResult.isAllExpanded===undefined?data&&config.isExpandedOnInitialLoad:accordionExpandedStateResult&&accordionExpandedStateResult.isAllExpanded;const viewProps=_objectSpread(_objectSpread({},this.props),{},{AccordionItemContainer:{moduleProps:this.props,className:classnames(this.moduleClassName,config.className)},AccordionItemContent:{className:'ms-accordion-item-content'},drawer:{tag:ControlledDrawer,className:\"\".concat(this.moduleClassName,\"__drawer\"),toggleButtonText:config.accordionItemTitle&&config.accordionItemTitle||'',collapseProps:{isOpen:expanded},onToggle:this._onToggle,onTextChange:this.handleHeadingChange,requestContext:this.props.context.request,telemetryContent:this.telemetryContent},accordionSlots:slots});return renderView(viewProps);}_onToggle(state){if(!state.isOpen&&this.props.interactionStyle===\"ExpandOneItemOnly\"){const accordionState={isAllExpanded:false};this.props.context.actionContext.update(createAccordionStateInput(accordionState),accordionState);}}};AccordionItem=__decorate([observer],AccordionItem);export default AccordionItem;","map":{"version":3,"sources":["modules/accordion-item/accordion-item.tsx"],"names":[],"mappings":"i4BAKA,OAAS,gBAAT,CAA2B,kBAA3B,KAAkG,sCAAlG,CAGA,MAAO,CAAA,UAAP,KAAuB,YAAvB,CACA,OAAS,QAAT,KAAyB,YAAzB,CACA,MAAO,GAAK,CAAA,KAAZ,KAAuB,OAAvB,CACA,OAAS,yBAAT,KAA0C,gDAA1C,CAuBA,GAAM,CAAA,aAAa,CAAnB,KAAM,CAAA,aAAN,QAA4B,CAAA,KAAK,CAAC,SAAsC,CAKpE,WAAA,CAAY,KAAZ,CAA0D,CACtD,MAAM,KAAN,EAJI,KAAA,eAAA,CAA0B,mBAA1B,CAuCD,KAAA,mBAAA,CAAuB,KAAD,EAA0C,KAAK,KAAL,CAAW,MAAX,CAAkB,kBAAlB,CAAuC,KAAK,CAAC,MAAN,CAAa,KAApH,CAlCH,KAAK,SAAL,CAAiB,KAAK,SAAL,CAAe,IAAf,CAAoB,IAApB,CAAjB,CACA,KAAK,gBAAL,CAAwB,kBAAkB,CAAC,KAAK,KAAL,CAAW,OAAX,CAAmB,OAAnB,CAA2B,iBAA5B,CAAgD,KAAK,KAAL,CAAW,YAA3D,CAAyE,KAAK,KAAL,CAAW,SAApF,CAA1C,CACH,CAEM,MAAM,EAAA,CACT,KAAM,CAAC,KAAD,CAAQ,UAAR,CAAoB,MAApB,CAA4B,IAA5B,EAAqC,KAAK,KAAhD,CACA,KAAM,CAAA,4BAA4B,CAAG,IAAI,EAAI,IAAI,CAAC,sBAAb,EAAuC,IAAI,CAAC,sBAAL,CAA4B,MAAxG,CACA,KAAM,CAAA,QAAQ,CAAG,4BAA4B,EAAI,4BAA4B,CAAC,aAA7B,GAA+C,SAA/E,CACjB,IAAI,EAAI,MAAM,CAAC,uBADE,CAEhB,4BAA4B,EAAI,4BAA4B,CAAC,aAF9D,CAGA,KAAM,CAAA,SAAS,gCACP,KAAK,KADE,MAEX,sBAAsB,CAAE,CACpB,WAAW,CAAE,KAAK,KADE,CAEpB,SAAS,CAAG,UAAU,CAAC,KAAK,eAAN,CAAuB,MAAM,CAAC,SAA9B,CAFF,CAFb,CAMX,oBAAoB,CAAE,CAClB,SAAS,CAAE,2BADO,CANX,CASX,MAAM,CAAC,CACH,GAAG,CAAE,gBADF,CAEH,SAAS,WAAK,KAAK,eAAV,YAFN,CAGH,gBAAgB,CAAG,MAAM,CAAC,kBAAP,EAA6B,MAAM,CAAC,kBAArC,EAA4D,EAH3E,CAIH,aAAa,CAAE,CAAC,MAAM,CAAE,QAAT,CAJZ,CAKH,QAAQ,CAAE,KAAK,SALZ,CAMH,YAAY,CAAE,KAAK,mBANhB,CAOH,cAAc,CAAE,KAAK,KAAL,CAAW,OAAX,CAAmB,OAPhC,CAQH,gBAAgB,CAAE,KAAK,gBARpB,CATI,CAmBX,cAAc,CAAE,KAnBL,EAAf,CAqBA,MAAO,CAAA,UAAU,CAAC,SAAD,CAAjB,CACH,CAIO,SAAS,CAAC,KAAD,CAAoB,CACjC,GAAG,CAAC,KAAK,CAAC,MAAP,EAAiB,KAAK,KAAL,CAAW,gBAAX,GAA2B,mBAA/C,CAAwF,CACpF,KAAM,CAAA,cAAc,CAAG,CAAE,aAAa,CAAE,KAAjB,CAAvB,CACA,KAAK,KAAL,CAAW,OAAX,CAAmB,aAAnB,CAAiC,MAAjC,CAAwC,yBAAyB,CAAC,cAAD,CAAjE,CAAmF,cAAnF,EACH,CACJ,CAhDmE,CAAxE,CAAM,aAAa,CAAA,UAAA,CAAA,CADlB,QACkB,CAAA,CAAb,aAAa,CAAb,CAmDN,cAAe,CAAA,aAAf","sourcesContent":["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { ControlledDrawer, getTelemetryObject, IModuleProps, INodeProps, ITelemetryContent } from '@msdyn365-commerce-modules/utilities';\nimport { IDrawerState } from '@msdyn365-commerce-modules/utilities/dist/types/drawer/Drawer';\nimport * as Msdyn365 from '@msdyn365-commerce/core';\nimport classnames from 'classnames';\nimport { observer } from 'mobx-react';\nimport * as React from 'react';\nimport { createAccordionStateInput } from '../../data-actions/accordion-state-data-action';\nimport { interactionStyle } from '../accordion/accordion.props.autogenerated';\nimport { IAccordionItemData } from './accordion-item.data';\nimport {IAccordionItemProps } from './accordion-item.props.autogenerated';\n\nexport interface IAccordionItemViewProps {\n    AccordionItemContainer: IModuleProps;\n    drawer: INodeProps;\n    accordionSlots: INodeProps;\n    AccordionItemContent: INodeProps;\n    className: string;\n}\n\nexport interface IAccordionItemExtentedProps extends IAccordionItemProps<IAccordionItemData> {\n    interactionStyle?: interactionStyle;\n}\n\n/**\n *\n * AccordionItem component\n * @extends {React.Component<IAccordionItemExtentedProps>}\n */\n@observer\nclass AccordionItem extends React.Component<IAccordionItemExtentedProps> {\n\n    private moduleClassName: string = 'ms-accordion-item';\n    private telemetryContent?: ITelemetryContent;\n\n    constructor(props: IAccordionItemProps<IAccordionItemData>) {\n        super(props);\n        this._onToggle = this._onToggle.bind(this);\n        this.telemetryContent = getTelemetryObject(this.props.context.request.telemetryPageName!, this.props.friendlyName, this.props.telemetry);\n    }\n\n    public render(): JSX.Element {\n        const {slots, renderView, config, data } = this.props;\n        const accordionExpandedStateResult = data && data.accordionExpandedState && data.accordionExpandedState.result;\n        const expanded = accordionExpandedStateResult && accordionExpandedStateResult.isAllExpanded === undefined ?\n        data && config.isExpandedOnInitialLoad :\n        (accordionExpandedStateResult && accordionExpandedStateResult.isAllExpanded);\n        const viewProps = {\n            ... this.props,\n            AccordionItemContainer: {\n                moduleProps: this.props,\n                className:  classnames(this.moduleClassName, config.className)\n            },\n            AccordionItemContent: {\n                className: 'ms-accordion-item-content',\n            },\n            drawer:{\n                tag: ControlledDrawer,\n                className: `${this.moduleClassName}__drawer`,\n                toggleButtonText: (config.accordionItemTitle && config.accordionItemTitle) || '',\n                collapseProps: {isOpen: expanded},\n                onToggle: this._onToggle,\n                onTextChange: this.handleHeadingChange,\n                requestContext: this.props.context.request,\n                telemetryContent: this.telemetryContent\n            },\n            accordionSlots: slots,\n        };\n        return renderView(viewProps) as React.ReactElement;\n    }\n\n    public handleHeadingChange = (event: Msdyn365.ContentEditableEvent) => this.props.config.accordionItemTitle = event.target.value;\n\n    private _onToggle(state: IDrawerState): void {\n        if(!state.isOpen && this.props.interactionStyle === interactionStyle.ExpandOneItemOnly) {\n            const accordionState = { isAllExpanded: false };\n            this.props.context.actionContext.update(createAccordionStateInput(accordionState), accordionState);\n        }\n    }\n\n}\nexport default AccordionItem;"],"sourceRoot":"./src/"},"metadata":{},"sourceType":"module"}