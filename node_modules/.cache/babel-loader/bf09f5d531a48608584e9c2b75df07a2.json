{"ast":null,"code":"import _regeneratorRuntime from\"@babel/runtime/regenerator\";import _asyncToGenerator from\"@babel/runtime/helpers/esm/asyncToGenerator\";import _classCallCheck from\"@babel/runtime/helpers/esm/classCallCheck\";import{createObservableDataAction}from'@msdyn365-commerce/core';import{getCartState}from'@msdyn365-commerce/global-state';import{getSimpleProducts,ProductInput}from'./index';/**\r\n * Input class for activeCartWithProducts data action\r\n */export var ActiveCartProductsInput=function ActiveCartProductsInput(){_classCallCheck(this,ActiveCartProductsInput);this.getCacheKey=function(){return\"ActiveCartProducts\";};this.getCacheObjectType=function(){return'ActiveCartProducts';};this.dataCacheType=function(){return'none';};};var createInput=function createInput(inputData){return new ActiveCartProductsInput();};/**\r\n * Calls the Retail API and returns a cart object based on the passed GetCartInput\r\n */export function getActiveCartProductsAction(_x,_x2){return _getActiveCartProductsAction.apply(this,arguments);}function _getActiveCartProductsAction(){_getActiveCartProductsAction=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee(input,ctx){var cartState,cart;return _regeneratorRuntime.wrap(function _callee$(_context){while(1){switch(_context.prev=_context.next){case 0:if(input){_context.next=2;break;}throw new Error('[getActiveCartWithProducts]No valid Input was provided, failing');case 2:_context.next=4;return getCartState(ctx);case 4:cartState=_context.sent;cart=cartState.cart;// If there are cart lines, make call to get products\nif(!(cart&&cart.CartLines&&cart.CartLines.length)){_context.next=9;break;}ctx.trace('Getting cart product information...');return _context.abrupt(\"return\",getSimpleProducts(cart.CartLines.map(function(cartLine){if(cartLine.ProductId){return new ProductInput(cartLine.ProductId,ctx.requestContext.apiSettings);}return undefined;}).filter(Boolean),ctx).then(function(products){if(products){return products;}else{return[];}})[\"catch\"](function(error){ctx.trace(error.toString());ctx.telemetry.error(error.message);ctx.telemetry.debug(\"[getActiveCartWithProducts]Unable to hydrate cart with product information\");throw new Error('[getActiveCartWithProducts]Unable to hydrate cart with product information');}));case 9:ctx.trace('[getActiveCartWithProducts]No Products Found in cart');return _context.abrupt(\"return\",[]);case 11:case\"end\":return _context.stop();}}},_callee);}));return _getActiveCartProductsAction.apply(this,arguments);}export default createObservableDataAction({id:'@msdyn365-commerce-modules/retail-actions/get-products-in-active-cart',action:getActiveCartProductsAction,input:createInput});","map":{"version":3,"sources":["../../src/get-products-in-active-cart.ts"],"names":[],"mappings":"8MAAA,OAAoB,0BAApB,KAAmH,yBAAnH,CACA,OAAS,YAAT,KAA6B,iCAA7B,CAGA,OAAS,iBAAT,CAA4B,YAA5B,KAAgD,SAAhD,CAEA;;AAEG,GACH,UAAa,CAAA,uBAAb,CAAA,kCAAA,+CACW,KAAA,WAAA,CAAc,uCAAd,CACA,KAAA,kBAAA,CAAqB,iBAAM,oBAAN,EAArB,CACA,KAAA,aAAA,CAAgB,iBAAiB,MAAjB,EAAhB,CACV,CAJD,CAMA,GAAM,CAAA,WAAW,CAAG,QAAd,CAAA,WAAc,CAAC,SAAD,CAAoC,CACpD,MAAO,IAAI,CAAA,uBAAJ,EAAP,CACH,CAFD,CAIA;;AAEG,GACH,eAAsB,CAAA,2BAAtB,oE,6HAAO,iBAA2C,KAA3C,CAA2E,GAA3E,wIAEE,KAFF,8BAGO,IAAI,CAAA,KAAJ,CAAU,iEAAV,CAHP,8BAMqB,CAAA,YAAY,CAAC,GAAD,CANjC,QAMG,SANH,eAOG,IAPH,CAOU,SAAS,CAAC,IAPpB,CASH;AATG,KAUC,IAAI,EAAI,IAAI,CAAC,SAAb,EAA0B,IAAI,CAAC,SAAL,CAAe,MAV1C,0BAWC,GAAG,CAAC,KAAJ,CAAU,qCAAV,EAXD,gCAYQ,iBAAiB,CACJ,IAAI,CAAC,SAAL,CAAe,GAAf,CAAmB,SAAA,QAAQ,CAAG,CAC1C,GAAI,QAAQ,CAAC,SAAb,CAAwB,CACpB,MAAO,IAAI,CAAA,YAAJ,CAAiB,QAAQ,CAAC,SAA1B,CAAqC,GAAG,CAAC,cAAJ,CAAmB,WAAxD,CAAP,CACH,CACD,MAAO,CAAA,SAAP,CACH,CALe,EAKb,MALa,CAKN,OALM,CADI,CAOpB,GAPoB,CAAjB,CASF,IATE,CASG,SAAC,QAAD,CAA8B,CAChC,GAAI,QAAJ,CAAc,CACV,MAAO,CAAA,QAAP,CACH,CAFD,IAEO,CACH,MAAO,EAAP,CACH,CACJ,CAfE,WAgBI,SAAC,KAAD,CAAiB,CACpB,GAAG,CAAC,KAAJ,CAAU,KAAK,CAAC,QAAN,EAAV,EACA,GAAG,CAAC,SAAJ,CAAc,KAAd,CAAoB,KAAK,CAAC,OAA1B,EACA,GAAG,CAAC,SAAJ,CAAc,KAAd,+EACA,KAAM,IAAI,CAAA,KAAJ,CAAU,4EAAV,CAAN,CACH,CArBE,CAZR,SAoCH,GAAG,CAAC,KAAJ,CAAU,sDAAV,EApCG,gCAqCqB,EArCrB,yD,8DAwCP,cAAe,CAAA,0BAA0B,CAAC,CACtC,EAAE,CAAE,uEADkC,CAEtC,MAAM,CAA4B,2BAFI,CAGtC,KAAK,CAAE,WAH+B,CAAD,CAAzC","sourcesContent":["import { CacheType, createObservableDataAction, IAction, IActionContext, IActionInput, ICreateActionContext } from '@msdyn365-commerce/core';\nimport { getCartState } from '@msdyn365-commerce/global-state';\nimport { SimpleProduct } from '@msdyn365-commerce/retail-proxy/dist/Entities/CommerceTypes.g';\n\nimport { getSimpleProducts, ProductInput } from './index';\n\n/**\n * Input class for activeCartWithProducts data action\n */\nexport class ActiveCartProductsInput implements IActionInput {\n    public getCacheKey = () => `ActiveCartProducts`;\n    public getCacheObjectType = () => 'ActiveCartProducts';\n    public dataCacheType = (): CacheType => 'none';\n}\n\nconst createInput = (inputData: ICreateActionContext) => {\n    return new ActiveCartProductsInput();\n};\n\n/**\n * Calls the Retail API and returns a cart object based on the passed GetCartInput\n */\nexport async function getActiveCartProductsAction(input: ActiveCartProductsInput, ctx: IActionContext): Promise<SimpleProduct[]> {\n    // If no cart ID is provided in input, we need to create a cart object\n    if (!input) {\n        throw new Error('[getActiveCartWithProducts]No valid Input was provided, failing');\n    }\n\n    const cartState = await getCartState(ctx);\n    const cart = cartState.cart;\n\n    // If there are cart lines, make call to get products\n    if (cart && cart.CartLines && cart.CartLines.length) {\n        ctx.trace('Getting cart product information...');\n        return getSimpleProducts(\n            <ProductInput[]>cart.CartLines.map(cartLine => {\n                if (cartLine.ProductId) {\n                    return new ProductInput(cartLine.ProductId, ctx.requestContext.apiSettings);\n                }\n                return undefined;\n            }).filter(Boolean),\n            ctx\n        )\n            .then((products: SimpleProduct[]) => {\n                if (products) {\n                    return products;\n                } else {\n                    return [];\n                }\n            })\n            .catch((error: Error) => {\n                ctx.trace(error.toString());\n                ctx.telemetry.error(error.message);\n                ctx.telemetry.debug(`[getActiveCartWithProducts]Unable to hydrate cart with product information`);\n                throw new Error('[getActiveCartWithProducts]Unable to hydrate cart with product information');\n            });\n    }\n\n    ctx.trace('[getActiveCartWithProducts]No Products Found in cart');\n    return <SimpleProduct[]>[];\n}\n\nexport default createObservableDataAction({\n    id: '@msdyn365-commerce-modules/retail-actions/get-products-in-active-cart',\n    action: <IAction<SimpleProduct[]>>getActiveCartProductsAction,\n    input: createInput\n});\n"],"sourceRoot":""},"metadata":{},"sourceType":"module"}