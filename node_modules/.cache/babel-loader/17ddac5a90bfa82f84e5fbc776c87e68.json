{"ast":null,"code":"import _regeneratorRuntime from\"@babel/runtime/regenerator\";import _asyncToGenerator from\"@babel/runtime/helpers/esm/asyncToGenerator\";import _classCallCheck from\"@babel/runtime/helpers/esm/classCallCheck\";import{createObservableDataAction}from'@msdyn365-commerce/core';import{getCartState}from'@msdyn365-commerce/global-state';import{getMaxLoyaltyPointsToRedeemForTransactionBalanceAsync}from'@msdyn365-commerce/retail-proxy/dist/DataActions/CartsDataActions.g';import{getOrgUnitConfigurationAsync}from'@msdyn365-commerce/retail-proxy/dist/DataActions/OrgUnitsDataActions.g';import{getLoyalty,GetLoyaltyCardInput}from'./index';import{buildCacheKey}from'./index';/**\r\n *  Input class for the getLoyaltyCard data action\r\n */export var GetLoyaltyTransactionEstimationInput=function GetLoyaltyTransactionEstimationInput(apiSettings,userAccountNumber){var _this=this;_classCallCheck(this,GetLoyaltyTransactionEstimationInput);this.getCacheKey=function(){return buildCacheKey(\"GetLoyaltyCardTransactionEstimation-\".concat(_this.userAccountNumber),_this.apiSettings);};this.getCacheObjectType=function(){return'GetLoyaltyCardTransactionEstimation';};this.dataCacheType=function(){return'request';};this.userAccountNumber=userAccountNumber;this.apiSettings=apiSettings;};/**\r\n * createInput method for the getLoyaltyCard method\r\n * @param inputData The input data passed to the createInput method\r\n */export var createGetLoyaltyTransactionEstimationInput=function createGetLoyaltyTransactionEstimationInput(inputData){var requestContext=inputData.requestContext;if(!requestContext.user.isAuthenticated){return new GetLoyaltyTransactionEstimationInput(inputData.requestContext.apiSettings);}return new GetLoyaltyTransactionEstimationInput(inputData.requestContext.apiSettings);};/**\r\n * The action method for the getLoyaltyCard data action\r\n * @param input The action input\r\n * @param ctx The action context\r\n */export function getLoyaltyTransactionEstimationAction(_x,_x2){return _getLoyaltyTransactionEstimationAction.apply(this,arguments);}function _getLoyaltyTransactionEstimationAction(){_getLoyaltyTransactionEstimationAction=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee(input,ctx){var promises;return _regeneratorRuntime.wrap(function _callee$(_context){while(1){switch(_context.prev=_context.next){case 0:if(ctx.requestContext.user.isAuthenticated){_context.next=2;break;}return _context.abrupt(\"return\",{});case 2:promises=[_getCart(ctx),_getLoyalty(input,ctx),_getOrgUnits(ctx)];return _context.abrupt(\"return\",Promise.all(promises).then(function(result){if(result&&result.length>=2&&result[1].CardNumber){return getMaxLoyaltyPointsToRedeemForTransactionBalanceAsync({callerContext:ctx},result[0].Id,result[1].CardNumber,result[2].Currency||'').then(function(points){return points;})[\"catch\"](function(e){ctx.telemetry.exception(e);ctx.telemetry.debug(\"Error getting Loyalty Point Redemption Estimate\");throw new Error('Error getting Loyalty Point Redemption Estimate');});}return{};})[\"catch\"](function(e){return{};}));case 4:case\"end\":return _context.stop();}}},_callee);}));return _getLoyaltyTransactionEstimationAction.apply(this,arguments);}function _getCart(_x3){return _getCart2.apply(this,arguments);}function _getCart2(){_getCart2=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee2(ctx){var cartState;return _regeneratorRuntime.wrap(function _callee2$(_context2){while(1){switch(_context2.prev=_context2.next){case 0:_context2.next=2;return getCartState(ctx);case 2:cartState=_context2.sent;return _context2.abrupt(\"return\",cartState.cart);case 4:case\"end\":return _context2.stop();}}},_callee2);}));return _getCart2.apply(this,arguments);}function _getLoyalty(_x4,_x5){return _getLoyalty2.apply(this,arguments);}function _getLoyalty2(){_getLoyalty2=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee3(input,ctx){var loyaltyCardInput;return _regeneratorRuntime.wrap(function _callee3$(_context3){while(1){switch(_context3.prev=_context3.next){case 0:loyaltyCardInput=new GetLoyaltyCardInput(input.apiSettings);return _context3.abrupt(\"return\",getLoyalty(loyaltyCardInput,ctx));case 2:case\"end\":return _context3.stop();}}},_callee3);}));return _getLoyalty2.apply(this,arguments);}function _getOrgUnits(_x6){return _getOrgUnits2.apply(this,arguments);}/**\r\n * The getLoyaltyTransactionEstimation data action\r\n * Returns the loyalty card belonging to the customer\r\n */function _getOrgUnits2(){_getOrgUnits2=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee4(ctx){return _regeneratorRuntime.wrap(function _callee4$(_context4){while(1){switch(_context4.prev=_context4.next){case 0:return _context4.abrupt(\"return\",getOrgUnitConfigurationAsync({callerContext:ctx,queryResultSettings:{}}));case 1:case\"end\":return _context4.stop();}}},_callee4);}));return _getOrgUnits2.apply(this,arguments);}export default createObservableDataAction({id:'@msdyn365-commerce-modules/retail-actions/get-loyalty-transaction-estimation',action:getLoyaltyTransactionEstimationAction,input:createGetLoyaltyTransactionEstimationInput});","map":{"version":3,"sources":["../../src/get-loyalty-transaction-estimation.ts"],"names":[],"mappings":"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","sourcesContent":["import { CacheType, createObservableDataAction, IAction, IActionContext, IActionInput, ICommerceApiSettings, ICreateActionContext } from '@msdyn365-commerce/core';\nimport { getCartState } from '@msdyn365-commerce/global-state';\nimport { Cart, ChannelConfiguration, LoyaltyCard, LoyaltyPointRedemptionEstimate } from '@msdyn365-commerce/retail-proxy';\nimport { getMaxLoyaltyPointsToRedeemForTransactionBalanceAsync } from '@msdyn365-commerce/retail-proxy/dist/DataActions/CartsDataActions.g';\nimport { getOrgUnitConfigurationAsync } from '@msdyn365-commerce/retail-proxy/dist/DataActions/OrgUnitsDataActions.g';\nimport { getLoyalty,  GetLoyaltyCardInput } from './index';\nimport { buildCacheKey } from './index';\n\n/**\n *  Input class for the getLoyaltyCard data action\n */\nexport class GetLoyaltyTransactionEstimationInput implements IActionInput {\n    public userAccountNumber?: string;\n    public apiSettings: ICommerceApiSettings;\n\n    constructor(apiSettings: ICommerceApiSettings, userAccountNumber?: string) {\n        this.userAccountNumber = userAccountNumber;\n        this.apiSettings = apiSettings;\n    }\n\n    public getCacheKey = () => buildCacheKey(`GetLoyaltyCardTransactionEstimation-${this.userAccountNumber}`, this.apiSettings);\n    public getCacheObjectType = () => 'GetLoyaltyCardTransactionEstimation';\n    public dataCacheType = (): CacheType => 'request';\n}\n\n/**\n * createInput method for the getLoyaltyCard method\n * @param inputData The input data passed to the createInput method\n */\nexport const createGetLoyaltyTransactionEstimationInput = (inputData: ICreateActionContext): GetLoyaltyTransactionEstimationInput => {\n    const { requestContext } = inputData;\n    if (!requestContext.user.isAuthenticated) {\n        return new GetLoyaltyTransactionEstimationInput(inputData.requestContext.apiSettings);\n    }\n\n    return new GetLoyaltyTransactionEstimationInput(inputData.requestContext.apiSettings);\n};\n\n/**\n * The action method for the getLoyaltyCard data action\n * @param input The action input\n * @param ctx The action context\n */\nexport async function getLoyaltyTransactionEstimationAction(input: GetLoyaltyTransactionEstimationInput, ctx: IActionContext): Promise<LoyaltyPointRedemptionEstimate> {\n\n    if (! ctx.requestContext.user.isAuthenticated) {\n        return <LoyaltyPointRedemptionEstimate>{};\n    }\n\n    const promises: [Promise<Cart>,Promise<LoyaltyCard>, Promise<ChannelConfiguration>] = [ _getCart(ctx), _getLoyalty(input, ctx), _getOrgUnits(ctx) ];\n    return Promise.all(promises)\n        .then((result) => {\n            if(result && result.length >=2 && result[1].CardNumber)\n            {\n            return getMaxLoyaltyPointsToRedeemForTransactionBalanceAsync({ callerContext: ctx }, result[0].Id, result[1].CardNumber!, result[2].Currency || '')\n                .then(points => {\n                    return points;\n                })\n                .catch(e => {\n                    ctx.telemetry.exception(e);\n                    ctx.telemetry.debug(`Error getting Loyalty Point Redemption Estimate`);\n                    throw new Error('Error getting Loyalty Point Redemption Estimate');\n                });\n            }\n            return <LoyaltyPointRedemptionEstimate>{};\n        })\n        .catch(e => {\n            return <LoyaltyPointRedemptionEstimate>{};\n        });\n}\n\nasync function _getCart(ctx: IActionContext): Promise<Cart> {\n    const cartState = await getCartState(ctx);\n\n    return cartState.cart;\n}\n\nasync function _getLoyalty(input: GetLoyaltyTransactionEstimationInput, ctx: IActionContext): Promise<LoyaltyCard> {\n    const loyaltyCardInput = new GetLoyaltyCardInput(input.apiSettings);\n    return getLoyalty(loyaltyCardInput, ctx);\n}\n\nasync function _getOrgUnits(ctx: IActionContext): Promise<ChannelConfiguration> {\n    return getOrgUnitConfigurationAsync({callerContext: ctx, queryResultSettings: {}});\n}\n\n/**\n * The getLoyaltyTransactionEstimation data action\n * Returns the loyalty card belonging to the customer\n */\nexport default createObservableDataAction<LoyaltyCard>({\n    id: '@msdyn365-commerce-modules/retail-actions/get-loyalty-transaction-estimation',\n    action: <IAction<LoyaltyCard>>getLoyaltyTransactionEstimationAction,\n    input: <(args: ICreateActionContext) => IActionInput>createGetLoyaltyTransactionEstimationInput\n});\n"],"sourceRoot":""},"metadata":{},"sourceType":"module"}