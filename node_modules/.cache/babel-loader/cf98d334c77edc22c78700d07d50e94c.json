{"ast":null,"code":"import\"core-js/modules/es.object.assign.js\";import classname from'classnames';import{get}from'mobx';import*as React from'react';import{Heading}from'@msdyn365-commerce-modules/utilities';import{AddressItemDisplayType,AddressItemType,AddressValidationRuleType}from'../address-format.data';import AddressAlertComponent from'./address-alert';import AddressButtonComponent from'./address-button';import AdressCheckboxComponent from'./address-checkbox';import AdressDropdownComponent from'./address-dropdown';import AddressErrorMessageComponent from'./address-error-message';import AddressErrorTitleComponent from'./address-error-title';import AddressInputComponent from'./address-input';import AddressLabelComponent from'./address-label';const getRequriedAttribute=validationRules=>{const requriedRule=(validationRules||[]).find(validationRule=>{return validationRule.type===AddressValidationRuleType.Required;});return requriedRule?{'aria-required':true}:{};};const getAddessItems=(selectedAddress,props)=>{const{addressFormat,addressType,dropdownDisplayData,defaultCountryRegionId,defaultAddressType,validationError={},onInputChange,onDropdownChange}=props;return addressFormat.map((addressFormatItem,index)=>{const elementId=\"\".concat(addressType.toLowerCase(),\"_address\").concat(addressFormatItem.name.toLowerCase());const errorMessage=get(validationError,addressFormatItem.name);const className=classname('msc-address-form__item',\"msc-address-form__item-\".concat(addressFormatItem.name.toLowerCase()),{'msc-address-form__item-newline':addressFormatItem.isNewLine,'address-form__item-invalid':errorMessage});let input;if(addressFormatItem.displayType===AddressItemDisplayType.Input){input=/*#__PURE__*/React.createElement(AddressInputComponent,Object.assign({},{id:elementId,name:addressFormatItem.name,className:'msc-address-form',type:'text',autoFocus:index===0,value:selectedAddress[addressFormatItem.name],maxLength:addressFormatItem.maxLength,onChange:onInputChange,additionalAddributes:getRequriedAttribute(addressFormatItem.validationRules)}));}else if(addressFormatItem.displayType===AddressItemDisplayType.Checkbox){input=/*#__PURE__*/React.createElement(AdressCheckboxComponent,Object.assign({},{id:elementId,name:addressFormatItem.name,className:'msc-address-form',type:'checkbox',autoFocus:index===0,isChecked:selectedAddress[addressFormatItem.name],onChange:onInputChange,additionalAddributes:getRequriedAttribute(addressFormatItem.validationRules)}));}else{const displayData=dropdownDisplayData[addressFormatItem.name];let selectedValue=selectedAddress[addressFormatItem.name];if(addressFormatItem.type===AddressItemType.ThreeLetterISORegionName){selectedValue=selectedValue||defaultCountryRegionId;}if(addressFormatItem.type===AddressItemType.AddressTypeValue){selectedValue=selectedValue||defaultAddressType;}input=/*#__PURE__*/React.createElement(AdressDropdownComponent,Object.assign({},{id:elementId,name:addressFormatItem.name,className:'msc-address-form',value:selectedValue,displayData:displayData,onChange:onDropdownChange,additionalAddributes:getRequriedAttribute(addressFormatItem.validationRules)}));}return{key:addressFormatItem.name,AddressItem:{className:className},label:/*#__PURE__*/React.createElement(AddressLabelComponent,Object.assign({},{id:elementId,text:addressFormatItem.label})),alert:/*#__PURE__*/React.createElement(AddressAlertComponent,Object.assign({},{message:errorMessage})),input:input};});};export const AddressAddUpdate=props=>{const{editAddressHeading,addAddressHeading,selectedAddress={},resources,hasError,onCancel,onSave,hasExternalSubmitGroup,isUpdating,addressActionResponse,telemetryContent}=props;const heading=selectedAddress.RecordId?editAddressHeading:addAddressHeading;return{AddressForm:{className:'msc-address-form'},heading:heading&&/*#__PURE__*/React.createElement(Heading,Object.assign({className:'msc-address-form__heading'},heading)),items:getAddessItems(selectedAddress,props),isShowSaveButton:!hasExternalSubmitGroup,saveButton:onSave&&/*#__PURE__*/React.createElement(AddressButtonComponent,Object.assign({},{className:classname('msc-address-form__button-save msc-btn',{'msc-address-form__button-updating':isUpdating}),text:resources.addressSaveButtonText,ariaLabel:resources.addressSaveButtonAriaLabel,disabled:isUpdating,onClick:onSave,telemetryContent:telemetryContent})),isShowCancelButton:!hasExternalSubmitGroup,cancelButton:onCancel&&/*#__PURE__*/React.createElement(AddressButtonComponent,Object.assign({},{className:'msc-address-form__button-cancel msc-btn',text:resources.addressCancelButtonText,ariaLabel:resources.addressCancelButtonAriaLabel,onClick:onCancel,telemetryContent:telemetryContent})),hasError:hasError||false,error:{AddressError:{className:'msc-address-form__error'},title:addressActionResponse&&addressActionResponse.errorTitle&&/*#__PURE__*/React.createElement(AddressErrorTitleComponent,Object.assign({},{title:addressActionResponse.errorTitle||''})),message:addressActionResponse&&addressActionResponse.errorMessage&&/*#__PURE__*/React.createElement(AddressErrorMessageComponent,Object.assign({},{message:addressActionResponse.errorMessage||''}))}};};","map":{"version":3,"sources":["common/components/address-add.tsx"],"names":[],"mappings":"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","sourcesContent":["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nimport classname from 'classnames';\nimport { get } from 'mobx';\nimport * as React from 'react';\n\nimport { Heading as HeadingData } from '@msdyn365-commerce-modules/data-types';\nimport { Heading, INodeProps, ITelemetryContent } from '@msdyn365-commerce-modules/utilities';\nimport { Address } from '@msdyn365-commerce/retail-proxy/dist/Entities/CommerceTypes.g';\n\nimport { AddressType, IAddressResource, IAddressResponse } from '../../common/address-module.data';\nimport {\n    AddressItemDisplayType, AddressItemType, AddressValidationRuleType, IAddressDropdownsData,\n    IAddressItem, IAddressValidationRule\n} from '../address-format.data';\nimport AddressAlertComponent from './address-alert';\nimport AddressButtonComponent from './address-button';\nimport AdressCheckboxComponent from './address-checkbox';\nimport AdressDropdownComponent from './address-dropdown';\nimport AddressErrorMessageComponent from './address-error-message';\nimport AddressErrorTitleComponent from './address-error-title';\nimport AddressInputComponent from './address-input';\nimport AddressLabelComponent from './address-label';\n\nexport interface IAddressAddInputProps {\n    isUpdating?: boolean;\n    hasError?: boolean;\n    hasExternalSubmitGroup?: boolean;\n    addressType: AddressType;\n    addressFormat: IAddressItem[];\n    defaultCountryRegionId: string;\n    defaultAddressType: number;\n    selectedAddress?: Address;\n    dropdownDisplayData: IAddressDropdownsData;\n    resources: IAddressResource;\n    addressActionResponse?: IAddressResponse;\n    addAddressHeading?: HeadingData;\n    editAddressHeading?: HeadingData;\n    validationError?: object;\n    telemetryContent?: ITelemetryContent;\n    onInputChange(event: React.ChangeEvent<HTMLInputElement>): void;\n    onDropdownChange(event: React.ChangeEvent<HTMLSelectElement>): void;\n    onSave?(): void;\n    onCancel?(): void;\n}\n\nexport interface IAddressError {\n    AddressError: INodeProps;\n    title: React.ReactNode;\n    message: React.ReactNode;\n}\n\nexport interface IAddressAddItem {\n    key: string;\n    AddressItem: INodeProps;\n    label: React.ReactNode;\n    alert: React.ReactNode;\n    input: React.ReactNode;\n}\n\nexport interface IAddressAddUpdateProps {\n    AddressForm: INodeProps;\n    heading: React.ReactNode;\n    items: IAddressAddItem[];\n    hasError: boolean;\n    error: IAddressError;\n    isShowSaveButton: boolean;\n    saveButton: React.ReactNode;\n    isShowCancelButton: boolean;\n    cancelButton: React.ReactNode;\n}\n\nconst getRequriedAttribute = (validationRules?: IAddressValidationRule[]): object => {\n    const requriedRule = (validationRules || []).find(validationRule => {\n        return validationRule.type === AddressValidationRuleType.Required;\n    });\n\n    return requriedRule ? { 'aria-required': true } : {};\n};\n\nconst getAddessItems = (selectedAddress: Address, props: IAddressAddInputProps): IAddressAddItem[] => {\n    const { addressFormat, addressType, dropdownDisplayData, defaultCountryRegionId, defaultAddressType, validationError = {}, onInputChange, onDropdownChange } = props;\n\n    // @ts-ignore\n    return addressFormat.map((addressFormatItem, index) => {\n        const elementId = `${addressType.toLowerCase()}_address${addressFormatItem.name.toLowerCase()}`;\n        const errorMessage = get(validationError, addressFormatItem.name);\n        const className = classname('msc-address-form__item', `msc-address-form__item-${addressFormatItem.name.toLowerCase()}`, { 'msc-address-form__item-newline': addressFormatItem.isNewLine, 'address-form__item-invalid': errorMessage });\n        let input;\n\n        if (addressFormatItem.displayType === AddressItemDisplayType.Input) {\n            input = (\n                <AddressInputComponent\n                    {\n                    ...{\n                        id: elementId,\n                        name: addressFormatItem.name,\n                        className: 'msc-address-form',\n                        type: 'text',\n                        autoFocus: index === 0,\n                        value: selectedAddress[addressFormatItem.name],\n                        maxLength: addressFormatItem.maxLength,\n                        onChange: onInputChange,\n                        additionalAddributes: getRequriedAttribute(addressFormatItem.validationRules)\n                    }\n                    }\n                />\n            );\n        } else if (addressFormatItem.displayType === AddressItemDisplayType.Checkbox) {\n            input = (\n                <AdressCheckboxComponent\n                    {\n                    ...{\n                        id: elementId,\n                        name: addressFormatItem.name,\n                        className: 'msc-address-form',\n                        type: 'checkbox',\n                        autoFocus: index === 0,\n                        isChecked: selectedAddress[addressFormatItem.name],\n                        onChange: onInputChange,\n                        additionalAddributes: getRequriedAttribute(addressFormatItem.validationRules)\n                    }\n                    }\n                />\n            );\n        } else {\n            const displayData = dropdownDisplayData[addressFormatItem.name];\n            let selectedValue = selectedAddress[addressFormatItem.name];\n\n            if (addressFormatItem.type === AddressItemType.ThreeLetterISORegionName) {\n                selectedValue = selectedValue || defaultCountryRegionId;\n            }\n\n            if (addressFormatItem.type === AddressItemType.AddressTypeValue) {\n                selectedValue = selectedValue || defaultAddressType;\n            }\n\n            input = (\n                <AdressDropdownComponent\n                    {\n                    ...{\n                        id: elementId,\n                        name: addressFormatItem.name,\n                        className: 'msc-address-form',\n                        value: selectedValue,\n                        displayData: displayData,\n                        onChange: onDropdownChange,\n                        additionalAddributes: getRequriedAttribute(addressFormatItem.validationRules)\n                    }\n                    }\n                />\n            );\n        }\n\n        return {\n            key: addressFormatItem.name,\n            AddressItem: { className: className },\n            label: <AddressLabelComponent {...{ id: elementId, text: addressFormatItem.label }} />,\n            alert: <AddressAlertComponent {...{ message: errorMessage }} />,\n            input: input\n        };\n    });\n};\n\nexport const AddressAddUpdate = (props: IAddressAddInputProps): IAddressAddUpdateProps => {\n    const { editAddressHeading, addAddressHeading, selectedAddress = {}, resources, hasError, onCancel, onSave, hasExternalSubmitGroup, isUpdating, addressActionResponse, telemetryContent } = props;\n    const heading = selectedAddress.RecordId ? editAddressHeading : addAddressHeading;\n\n    return {\n        AddressForm: { className: 'msc-address-form' },\n        heading: heading && <Heading className='msc-address-form__heading' {...heading} />,\n        items: getAddessItems(selectedAddress, props),\n        isShowSaveButton: !hasExternalSubmitGroup,\n        saveButton: onSave && (\n            <AddressButtonComponent\n                {\n                ...{\n                    className: classname('msc-address-form__button-save msc-btn', { 'msc-address-form__button-updating': isUpdating }),\n                    text: resources.addressSaveButtonText,\n                    ariaLabel: resources.addressSaveButtonAriaLabel,\n                    disabled: isUpdating,\n                    onClick: onSave,\n                    telemetryContent: telemetryContent\n                }\n                }\n            />\n        ),\n        isShowCancelButton: !hasExternalSubmitGroup,\n        cancelButton: onCancel && (\n            <AddressButtonComponent\n                {\n                ...{\n                    className: 'msc-address-form__button-cancel msc-btn',\n                    text: resources.addressCancelButtonText,\n                    ariaLabel: resources.addressCancelButtonAriaLabel,\n                    onClick: onCancel,\n                    telemetryContent: telemetryContent\n                }\n                }\n            />\n        ),\n        hasError: hasError || false,\n        error: {\n            AddressError: { className: 'msc-address-form__error' },\n            title: addressActionResponse && addressActionResponse.errorTitle && <AddressErrorTitleComponent {...{ title: addressActionResponse.errorTitle || '' }} />,\n            message: addressActionResponse && addressActionResponse.errorMessage && <AddressErrorMessageComponent {...{ message: addressActionResponse.errorMessage || '' }} />\n        }\n    };\n};"],"sourceRoot":"./src/"},"metadata":{},"sourceType":"module"}