{"ast":null,"code":"import\"core-js/modules/es.object.assign.js\";import*as React from'react';import{Modal,ModalBody,ModalFooter,ModalHeader,Module,Node}from'@msdyn365-commerce-modules/utilities';import{InputID}from'./business-organization-list';const BusinessFormItem=(_ref)=>{let{wrapper,label,errorMessage,input}=_ref;return/*#__PURE__*/React.createElement(Node,Object.assign({},wrapper),label,errorMessage,input);};const BusinessUserForm=props=>{const{modalClassName,FormWrapper,modalHeading,modalDescription,inputs,buttons,errorMessage,toggle}=props;const modalBody=/*#__PURE__*/React.createElement(React.Fragment,null,modalDescription,/*#__PURE__*/React.createElement(Node,Object.assign({},FormWrapper),inputs&&inputs.map(item=>{return/*#__PURE__*/React.createElement(BusinessFormItem,Object.assign({key:item.key},item));}),errorMessage&&errorMessage.map((error,index)=>{return/*#__PURE__*/React.createElement(React.Fragment,{key:index},error);})));const modalFooter=buttons&&buttons.map((button,index)=>{return/*#__PURE__*/React.createElement(React.Fragment,{key:index},button);});return _renderModal(modalClassName,true,modalHeading,modalBody,modalFooter,toggle);};const BusinessUserDetails=props=>{const{modalClassName,FormWrapper,modalHeading,modalDescription,selectedUser,buttons,errorMessage,resources,toggle}=props;let modalBody=null;if(!selectedUser){modalBody=errorMessage;}else{const{FirstName,LastName}=selectedUser;const userFullName=\"\".concat(FirstName,\" \").concat(LastName);modalBody=/*#__PURE__*/React.createElement(React.Fragment,null,modalDescription,/*#__PURE__*/React.createElement(\"ul\",{className:\"\".concat(FormWrapper.className,\"-list\")},/*#__PURE__*/React.createElement(\"li\",{className:\"\".concat(FormWrapper.className,\"-list-item-name\")},userFullName),Object.keys(selectedUser).map(data=>{if(data===InputID.FirstName||data===InputID.LastName){return null;}else{const label=resources[\"table\".concat(data,\"HeadingText\")]||data;return/*#__PURE__*/React.createElement(\"li\",{className:\"\".concat(FormWrapper.className,\"-list-item\")},label,\": \",selectedUser[data]);}})));}const modalFooter=buttons&&buttons.map((button,index)=>{return/*#__PURE__*/React.createElement(React.Fragment,{key:index},button);});return _renderModal(modalClassName,true,modalHeading,modalBody,modalFooter,toggle);};const _getForm=(type,formProps,toggleModal)=>{switch(type){case'ADD':case'EDIT':return/*#__PURE__*/React.createElement(BusinessUserForm,Object.assign({},formProps,{toggle:toggleModal}));case'VIEW':case'REMOVE':return/*#__PURE__*/React.createElement(BusinessUserDetails,Object.assign({},formProps,{toggle:toggleModal}));default:return null;}};const _renderModal=(className,isModalOpen,headingSection,bodySection,footerSection,toggleModal)=>{return/*#__PURE__*/React.createElement(Modal,{wrapClassName:className,autoFocus:true,fade:false,applicationNode:'renderPage',isOpen:isModalOpen,toggle:toggleModal},/*#__PURE__*/React.createElement(ModalHeader,{toggle:toggleModal},headingSection),/*#__PURE__*/React.createElement(ModalBody,null,bodySection),/*#__PURE__*/React.createElement(ModalFooter,null,footerSection));};const BusinessOrganizationList=props=>{const{OrganizationUserList,moduleContainer,heading,noUsersText,addUserButton,organizationListTable,form,formType,toggleModal}=props;if(noUsersText){return/*#__PURE__*/React.createElement(Module,Object.assign({},OrganizationUserList),/*#__PURE__*/React.createElement(Node,Object.assign({},moduleContainer),heading,addUserButton,noUsersText));}return/*#__PURE__*/React.createElement(Module,Object.assign({},OrganizationUserList),/*#__PURE__*/React.createElement(Node,Object.assign({},moduleContainer),heading,addUserButton,organizationListTable),form&&_getForm(formType,form,toggleModal));};export default BusinessOrganizationList;","map":{"version":3,"sources":["modules/business-organization-list/business-organization-list.view.tsx"],"names":[],"mappings":"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","sourcesContent":["/*!\n * Copyright (c) Microsoft Corporation.\n * All rights reserved. See LICENSE in the project root for license information.\n */\nimport * as React from 'react';\n\nimport { Modal, ModalBody, ModalFooter, ModalHeader, Module, Node } from '@msdyn365-commerce-modules/utilities';\nimport { IBusinessOrganizationListViewProps, IFormViewProps, InputID  } from './business-organization-list';\nimport { IBusinessFormItem} from './components/small-components';\n\nconst BusinessFormItem: React.FC<IBusinessFormItem> = ({\n    wrapper,\n    label,\n    errorMessage,\n    input\n}) => {\n    return (\n        <Node {...wrapper}>\n            {label}\n            {errorMessage}\n            {input}\n        </Node>\n    );\n};\n\nconst BusinessUserForm: React.FC<IFormViewProps> = (props: IFormViewProps) => {\n    const { modalClassName, FormWrapper, modalHeading, modalDescription, inputs, buttons, errorMessage, toggle } = props;\n\n    const modalBody = (\n        <>\n            {modalDescription}\n            <Node {...FormWrapper}>\n                {inputs && inputs.map((item: IBusinessFormItem) => {\n                    return (\n                        <BusinessFormItem key={item.key} {...item} />\n                    );\n                })}\n                {errorMessage && errorMessage.map((error: React.ReactNode, index: number) => {\n                    return (\n                        <React.Fragment key={index}>\n                            {error}\n                        </React.Fragment>\n                    );\n                })}\n            </Node>\n        </>\n\n    );\n\n    const modalFooter = buttons && buttons.map((button: React.ReactNode, index: number) => {\n        return (\n            <React.Fragment key={index}>\n                {button}\n            </React.Fragment>\n        );\n    });\n\n    return _renderModal(modalClassName, true, modalHeading, modalBody, modalFooter, toggle);\n};\n\nconst BusinessUserDetails: React.FC<IFormViewProps> = (props: IFormViewProps) => {\n    const { modalClassName, FormWrapper, modalHeading, modalDescription, selectedUser, buttons, errorMessage, resources, toggle } = props;\n    let modalBody = null;\n\n    if (!selectedUser) {\n        modalBody = errorMessage;\n    } else {\n        const { FirstName, LastName } = selectedUser;\n        const userFullName = `${FirstName} ${LastName}`;\n\n        modalBody = (\n            <>\n                { modalDescription }\n                <ul className={`${FormWrapper.className}-list`}>\n                    <li className={`${FormWrapper.className}-list-item-name`}>{userFullName}</li>\n                    { Object.keys(selectedUser).map((data)=> {\n                        if (data === InputID.FirstName || data === InputID.LastName) {\n                            return null;\n                        } else {\n                            const label = resources[`table${data}HeadingText`] || data;\n                            return <li className={`${FormWrapper.className}-list-item`}>{label}: {selectedUser[data]}</li>;\n                        }\n                    })}\n                </ul>\n            </>\n        );\n    }\n\n    const modalFooter = buttons && buttons.map((button: React.ReactNode, index: number) => {\n        return (\n            <React.Fragment key={index}>\n                {button}\n            </React.Fragment>\n        );\n    });\n\n    return _renderModal(modalClassName, true, modalHeading, modalBody, modalFooter, toggle);\n};\n\nconst _getForm = (type: string, formProps: IFormViewProps, toggleModal?: () => void) => {\n    switch(type) {\n        case 'ADD':\n        case 'EDIT':\n            return <BusinessUserForm {...formProps} toggle={toggleModal}/>;\n        case 'VIEW':\n        case 'REMOVE':\n            return <BusinessUserDetails {...formProps} toggle={toggleModal}/>;\n        default:\n            return null;\n    }\n};\n\nconst _renderModal = (className: string, isModalOpen: boolean, headingSection: React.ReactNode, bodySection: React.ReactNode, footerSection: React.ReactNode, toggleModal?: () => void) => {\n    return (\n        <Modal\n            wrapClassName={className}\n            autoFocus={true}\n            fade={false}\n            applicationNode={'renderPage'}\n            isOpen={isModalOpen}\n            toggle ={toggleModal}\n        >\n            <ModalHeader toggle={toggleModal}>\n                {headingSection}\n            </ModalHeader>\n            <ModalBody>\n                {bodySection}\n            </ModalBody>\n            <ModalFooter>\n                {footerSection}\n            </ModalFooter>\n        </Modal>\n    );\n};\n\nconst BusinessOrganizationList: React.FC<IBusinessOrganizationListViewProps> = props => {\n    const { OrganizationUserList, moduleContainer, heading, noUsersText, addUserButton, organizationListTable, form, formType, toggleModal } = props;\n\n    if (noUsersText) {\n        return (\n            <Module {...OrganizationUserList}>\n                <Node {...moduleContainer}>\n                    {heading}\n                    {addUserButton}\n                    {noUsersText}\n                </Node>\n            </Module>\n        );\n    }\n\n    return (\n        <Module {...OrganizationUserList}>\n            <Node {...moduleContainer}>\n                {heading}\n                {addUserButton}\n                {organizationListTable}\n            </Node>\n            { form && _getForm(formType, form, toggleModal) }\n       </Module>\n    );\n};\n\nexport default BusinessOrganizationList;"],"sourceRoot":"./src/"},"metadata":{},"sourceType":"module"}