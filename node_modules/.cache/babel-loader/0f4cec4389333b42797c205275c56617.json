{"ast":null,"code":"/*!\r\n * Copyright (c) Microsoft Corporation.\r\n * All rights reserved. See LICENSE in the project root for license information.\r\n */import{ActionRegistrar}from'./action-registrar';export const createDataActionHook=options=>{options.preHook&&ActionRegistrar.registerPreHook(options.actionId,options.preHook);options.postHook&&ActionRegistrar.registerPostHook(options.actionId,options.postHook);options.preReadonlyHook&&ActionRegistrar.registerPreReadOnlyHook(options.actionId,options.preReadonlyHook);options.postReadonlyHook&&ActionRegistrar.registerPostReadOnlyHook(options.actionId,options.postReadonlyHook);options.preReaderHook&&ActionRegistrar.registerPreReaderHook(options.actionId,options.preReaderHook);options.postReaderHook&&ActionRegistrar.registerPostReaderHook(options.actionId,options.postReaderHook);};","map":{"version":3,"sources":["../../src/create-data-action-hook.ts"],"names":[],"mappings":"AAAA;;;AAGG,GAGH,OAAS,eAAT,KAAgC,oBAAhC,CAYA,MAAO,MAAM,CAAA,oBAAoB,CAAoB,OAAjB,EAAwD,CACxF,OAAO,CAAC,OAAR,EAAmB,eAAe,CAAC,eAAhB,CAAgC,OAAO,CAAC,QAAxC,CAAkD,OAAO,CAAC,OAA1D,CAAnB,CACA,OAAO,CAAC,QAAR,EAAoB,eAAe,CAAC,gBAAhB,CAAiC,OAAO,CAAC,QAAzC,CAAmD,OAAO,CAAC,QAA3D,CAApB,CACA,OAAO,CAAC,eAAR,EAA2B,eAAe,CAAC,uBAAhB,CAAwC,OAAO,CAAC,QAAhD,CAA0D,OAAO,CAAC,eAAlE,CAA3B,CACA,OAAO,CAAC,gBAAR,EAA4B,eAAe,CAAC,wBAAhB,CAAyC,OAAO,CAAC,QAAjD,CAA2D,OAAO,CAAC,gBAAnE,CAA5B,CACA,OAAO,CAAC,aAAR,EAAyB,eAAe,CAAC,qBAAhB,CAAsC,OAAO,CAAC,QAA9C,CAAwD,OAAO,CAAC,aAAhE,CAAzB,CACA,OAAO,CAAC,cAAR,EAA0B,eAAe,CAAC,sBAAhB,CAAuC,OAAO,CAAC,QAA/C,CAAyD,OAAO,CAAC,cAAjE,CAA1B,CACH,CAPM","sourcesContent":["/*!\n * Copyright (c) Microsoft Corporation.\n * All rights reserved. See LICENSE in the project root for license information.\n */\n\nimport { ActionPostHook, ActionPostReaderHook, ActionPreHook, ActionPreReaderHook } from '@msdyn365-commerce/core-internal';\nimport { ActionRegistrar } from './action-registrar';\n\ntype dataActionHook<TOut = unknown> = {\n    actionId: string;\n    preHook?: ActionPreHook;\n    postHook?: ActionPostHook<TOut>;\n    preReadonlyHook?: ActionPreHook;\n    postReadonlyHook?: ActionPostHook<TOut>;\n    preReaderHook?: ActionPreReaderHook;\n    postReaderHook?: ActionPostReaderHook<TOut>;\n};\n\nexport const createDataActionHook = <TOut = unknown>(options: dataActionHook<TOut>): void => {\n    options.preHook && ActionRegistrar.registerPreHook(options.actionId, options.preHook);\n    options.postHook && ActionRegistrar.registerPostHook(options.actionId, options.postHook);\n    options.preReadonlyHook && ActionRegistrar.registerPreReadOnlyHook(options.actionId, options.preReadonlyHook);\n    options.postReadonlyHook && ActionRegistrar.registerPostReadOnlyHook(options.actionId, options.postReadonlyHook);\n    options.preReaderHook && ActionRegistrar.registerPreReaderHook(options.actionId, options.preReaderHook);\n    options.postReaderHook && ActionRegistrar.registerPostReaderHook(options.actionId, options.postReaderHook);\n};\n"],"sourceRoot":""},"metadata":{},"sourceType":"module"}