{"ast":null,"code":"/*!\r\n * Copyright (c) Microsoft Corporation.\r\n * All rights reserved. See LICENSE in the project root for license information.\r\n */import msdyn365Commerce from'../msdyn365-commerce';/**\r\n * Converts a string into a url safe parameter. THIS IS A LOSSY OPERATION.\r\n * e.g. 'My special string' => 'my-special-string'\r\n * @param name string to convert into url parameter\r\n * @param sep segment seperator. Defaults to '-'\r\n * @param parameterizeFeatureFlags feature switch if we should enable locale info to be saved to the encoded url.\r\n * @package neutralizedName neutralizedName input\r\n */export function parameterize(){var name=arguments.length>0&&arguments[0]!==undefined?arguments[0]:'';var sep=arguments.length>1&&arguments[1]!==undefined?arguments[1]:'-';var parameterizeFeatureFlags=arguments.length>2&&arguments[2]!==undefined?arguments[2]:{};var neutralizedName=arguments.length>3?arguments[3]:undefined;// if neutralizedName flag enabled, we use neutralizedName to construct string\nvar candidateName=msdyn365Commerce.platformSettings&&msdyn365Commerce.platformSettings.enableUrlLocalization||parameterizeFeatureFlags.enableUrlLocalization?name:neutralizedName||name;/*\r\n    1\t‘ ‘ (space)\t-> (single dash)\r\n    3\tAny character disallowed in URLs -> URL-encode\r\n    5\t‘ & ‘ (space ampersand space) -> (single dash)\r\n    6\t‘ - ‘ (space dash space) -> (single dash)\r\n    7\t‘  ‘ (2+ spaces) -> (single dash)\r\n    10\t[A-Z] (capital letters) -> [a-z] (lower-case)\r\n    12\tAny non-ASCII character outside of the set of disallowed  characters -> URL-encode\r\n    */if(parameterizeFeatureFlags.enableUrlEncoding||msdyn365Commerce.platformSettings&&msdyn365Commerce.platformSettings.enableUrlEncoding){// replace url reserved characters with dash, and remove front and end dash;\n// &*!() reserved characters that can not be encoded by encodeURIComponent()\nreturn encodeURIComponent(candidateName.toLowerCase().replace(/[\\s&*!()']+/g,'-').trim().replace(/\\-+/g,'-').replace(/^\\-+|\\-+$/g,''));}return candidateName.toLowerCase().replace(/[^a-z0-9\\-_]+/g,' ').trim().replace(/\\s+/g,sep);}","map":{"version":3,"sources":["../../../src/utilities/parameterize.ts"],"names":[],"mappings":"AAAA;;;AAGG,GAEH,MAAO,CAAA,gBAAP,KAA6B,sBAA7B,CAOA;;;;;;;AAOG,GACH,MAAM,SAAU,CAAA,YAAV,EAIsB,IAHxB,CAAA,IAGwB,2DAHT,EAGS,IAFxB,CAAA,GAEwB,2DAFV,GAEU,IADxB,CAAA,wBACwB,2DAD8B,EAC9B,IAAxB,CAAA,eAAwB,2CAExB;AACA,GAAM,CAAA,aAAa,CACd,gBAAgB,CAAC,gBAAjB,EAAqC,gBAAgB,CAAC,gBAAjB,CAAkC,qBAAxE,EACA,wBAAwB,CAAC,qBADzB,CAEM,IAFN,CAGM,eAAe,EAAI,IAJ7B,CAMA;;;;;;;;AAQE,MACF,GACI,wBAAwB,CAAC,iBAAzB,EACC,gBAAgB,CAAC,gBAAjB,EAAqC,gBAAgB,CAAC,gBAAjB,CAAkC,iBAF5E,CAGE,CACE;AACA;AACA,MAAO,CAAA,kBAAkB,CACrB,aAAa,CACR,WADL,GAEK,OAFL,CAEa,cAFb,CAE6B,GAF7B,EAGK,IAHL,GAIK,OAJL,CAIa,MAJb,CAIqB,GAJrB,EAKK,OALL,CAKa,YALb,CAK2B,EAL3B,CADqB,CAAzB,CAQH,CACD,MAAO,CAAA,aAAa,CACf,WADE,GAEF,OAFE,CAEM,gBAFN,CAEwB,GAFxB,EAGF,IAHE,GAIF,OAJE,CAIM,MAJN,CAIc,GAJd,CAAP,CAKH","sourcesContent":["/*!\n * Copyright (c) Microsoft Corporation.\n * All rights reserved. See LICENSE in the project root for license information.\n */\n\nimport msdyn365Commerce from '../msdyn365-commerce';\n\nexport interface IParameterizeFeatureFlags {\n    enableUrlLocalization?: Boolean;\n    enableUrlEncoding?: Boolean;\n}\n\n/**\n * Converts a string into a url safe parameter. THIS IS A LOSSY OPERATION.\n * e.g. 'My special string' => 'my-special-string'\n * @param name string to convert into url parameter\n * @param sep segment seperator. Defaults to '-'\n * @param parameterizeFeatureFlags feature switch if we should enable locale info to be saved to the encoded url.\n * @package neutralizedName neutralizedName input\n */\nexport function parameterize(\n    name: string = '',\n    sep: string = '-',\n    parameterizeFeatureFlags: IParameterizeFeatureFlags = {},\n    neutralizedName?: string\n): string {\n    // if neutralizedName flag enabled, we use neutralizedName to construct string\n    const candidateName =\n        (msdyn365Commerce.platformSettings && msdyn365Commerce.platformSettings.enableUrlLocalization) ||\n        parameterizeFeatureFlags.enableUrlLocalization\n            ? name\n            : neutralizedName || name;\n\n    /*\n    1\t‘ ‘ (space)\t-> (single dash)\n    3\tAny character disallowed in URLs -> URL-encode\n    5\t‘ & ‘ (space ampersand space) -> (single dash)\n    6\t‘ - ‘ (space dash space) -> (single dash)\n    7\t‘  ‘ (2+ spaces) -> (single dash)\n    10\t[A-Z] (capital letters) -> [a-z] (lower-case)\n    12\tAny non-ASCII character outside of the set of disallowed  characters -> URL-encode\n    */\n    if (\n        parameterizeFeatureFlags.enableUrlEncoding ||\n        (msdyn365Commerce.platformSettings && msdyn365Commerce.platformSettings.enableUrlEncoding)\n    ) {\n        // replace url reserved characters with dash, and remove front and end dash;\n        // &*!() reserved characters that can not be encoded by encodeURIComponent()\n        return encodeURIComponent(\n            candidateName\n                .toLowerCase()\n                .replace(/[\\s&*!()']+/g, '-')\n                .trim()\n                .replace(/\\-+/g, '-')\n                .replace(/^\\-+|\\-+$/g, '')\n        );\n    }\n    return candidateName\n        .toLowerCase()\n        .replace(/[^a-z0-9\\-_]+/g, ' ')\n        .trim()\n        .replace(/\\s+/g, sep);\n}\n"],"sourceRoot":""},"metadata":{},"sourceType":"module"}