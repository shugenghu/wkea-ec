{"ast":null,"code":"import _classCallCheck from\"@babel/runtime/helpers/esm/classCallCheck\";import _inherits from\"@babel/runtime/helpers/esm/inherits\";import _possibleConstructorReturn from\"@babel/runtime/helpers/esm/possibleConstructorReturn\";import _getPrototypeOf from\"@babel/runtime/helpers/esm/getPrototypeOf\";function _createSuper(Derived){var hasNativeReflectConstruct=_isNativeReflectConstruct();return function _createSuperInternal(){var Super=_getPrototypeOf(Derived),result;if(hasNativeReflectConstruct){var NewTarget=_getPrototypeOf(this).constructor;result=Reflect.construct(Super,arguments,NewTarget);}else{result=Super.apply(this,arguments);}return _possibleConstructorReturn(this,result);};}function _isNativeReflectConstruct(){if(typeof Reflect===\"undefined\"||!Reflect.construct)return false;if(Reflect.construct.sham)return false;if(typeof Proxy===\"function\")return true;try{Date.prototype.toString.call(Reflect.construct(Date,[],function(){}));return true;}catch(e){return false;}}/*!\r\n * Copyright (c) Microsoft Corporation.\r\n * All rights reserved. See LICENSE in the project root for license information.\r\n */import*as React from'react';import{EditableField,FieldType}from'./editable-fields/editable-field';export function getRichTextHtml(text){return text?{__html:text}:undefined;}/**\r\n * Rich text interactive component\r\n */export var RichTextComponent=/*#__PURE__*/function(_React$Component){_inherits(RichTextComponent,_React$Component);var _super=_createSuper(RichTextComponent);function RichTextComponent(props){var _this;_classCallCheck(this,RichTextComponent);_this=_super.call(this,props);_this.render=function(){return/*#__PURE__*/React.createElement(EditableField,{onChange:_this.props.editProps?_this.props.editProps.onEdit:_this.onEdit,requestContext:_this.props.editProps&&_this.props.editProps.requestContext,fieldProps:{text:_this.props.text,className:_this.props.className},type:FieldType.RichText});};_this.onEdit=function(event){return null;};_this.state={html:props.text};return _this;}return RichTextComponent;}(React.Component);","map":{"version":3,"sources":["../../../src/utilities/get-richtext-html.tsx"],"names":[],"mappings":"m9BAAA;;;AAGG,GAEH,MAAO,GAAK,CAAA,KAAZ,KAAuB,OAAvB,CAGA,OAAS,aAAT,CAAwB,SAAxB,KAAyD,kCAAzD,CAQA,MAAM,SAAU,CAAA,eAAV,CAA0B,IAA1B,CAAyC,CAC3C,MAAO,CAAA,IAAI,CAAG,CAAE,MAAM,CAAE,IAAV,CAAH,CAAgC,SAA3C,CACH,CAED;;AAEG,GACH,UAAa,CAAA,iBAAb,kIACI,2BAAY,KAAZ,CAA4B,mDACxB,uBAAM,KAAN,EAIG,MAAA,MAAA,CAAS,UAAkB,CAC9B,mBACI,KAAA,CAAA,aAAA,CAAC,aAAD,CAAc,CACV,QAAQ,CAAE,MAAK,KAAL,CAAW,SAAX,CAAuB,MAAK,KAAL,CAAW,SAAX,CAAqB,MAA5C,CAAqD,MAAK,MAD1D,CAEV,cAAc,CAAE,MAAK,KAAL,CAAW,SAAX,EAAwB,MAAK,KAAL,CAAW,SAAX,CAAqB,cAFnD,CAGV,UAAU,CAAE,CACR,IAAI,CAAE,MAAK,KAAL,CAAW,IADT,CAER,SAAS,CAAE,MAAK,KAAL,CAAW,SAFd,CAHF,CAOV,IAAI,CAAE,SAAS,CAAC,QAPN,CAAd,CADJ,CAWH,CAZM,CAcC,MAAA,MAAA,CAAS,SAAC,KAAD,QAAiC,KAAjC,EAAT,CAjBJ,MAAK,KAAL,CAAa,CAAE,IAAI,CAAE,KAAK,CAAC,IAAd,CAAb,CAFwB,aAG3B,CAJL,2BAAuC,KAAK,CAAC,SAA7C","sourcesContent":["/*!\n * Copyright (c) Microsoft Corporation.\n * All rights reserved. See LICENSE in the project root for license information.\n */\n\nimport * as React from 'react';\nimport { ContentEditableEvent } from 'react-contenteditable';\nimport { RichText } from '../interfaces/data-types';\nimport { EditableField, FieldType, ITextEditProps } from './editable-fields/editable-field';\n\nexport interface IRichText {\n    text?: RichText;\n    className?: string;\n    editProps?: ITextEditProps;\n}\n\nexport function getRichTextHtml(text?: RichText): { __html: string } | undefined {\n    return text ? { __html: text as string } : undefined;\n}\n\n/**\n * Rich text interactive component\n */\nexport class RichTextComponent extends React.Component<IRichText> {\n    constructor(props: IRichText) {\n        super(props);\n        this.state = { html: props.text };\n    }\n\n    public render = (): JSX.Element => {\n        return (\n            <EditableField\n                onChange={this.props.editProps ? this.props.editProps.onEdit : this.onEdit} // handle innerHTML change\n                requestContext={this.props.editProps && this.props.editProps.requestContext}\n                fieldProps={{\n                    text: this.props.text as string,\n                    className: this.props.className\n                }}\n                type={FieldType.RichText}\n            />\n        );\n    };\n\n    private onEdit = (event: ContentEditableEvent) => null;\n}\n"],"sourceRoot":""},"metadata":{},"sourceType":"module"}