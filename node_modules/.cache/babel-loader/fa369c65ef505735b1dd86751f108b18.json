{"ast":null,"code":"import _regeneratorRuntime from\"@babel/runtime/regenerator\";import _asyncToGenerator from\"@babel/runtime/helpers/esm/asyncToGenerator\";import{getMediaLocationsForSelectedVariant,MediaLocationsForSelectedVariantInput}from'@msdyn365-commerce-modules/retail-actions';export function getValidProductImages(_x,_x2,_x3,_x4){return _getValidProductImages.apply(this,arguments);}function _getValidProductImages(){_getValidProductImages=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee(productId,channelId,actionContext,imageSettings){var actionInput;return _regeneratorRuntime.wrap(function _callee$(_context){while(1){switch(_context.prev=_context.next){case 0:actionInput=new MediaLocationsForSelectedVariantInput(productId,channelId);return _context.abrupt(\"return\",getMediaLocationsForSelectedVariant(actionInput,actionContext).then(function(mediaLocations){if(mediaLocations){return Promise.all(mediaLocations.map(function(mediaLocation){return validateMediaLocaionAsync(mediaLocation,imageSettings);})).then(function(pairs){return pairs.filter(function(pair){return pair[1];}).map(function(pair){return pair[0];});});}return[];})[\"catch\"](function(error){actionContext.telemetry.exception(error);actionContext.telemetry.debug('Unable to get Media Locations for Selected Variant');return[];}));case 2:case\"end\":return _context.stop();}}},_callee);}));return _getValidProductImages.apply(this,arguments);}export function validateProductImages(_x5,_x6,_x7){return _validateProductImages.apply(this,arguments);}function _validateProductImages(){_validateProductImages=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee2(mediaLocations,actionContext,imageSettings){return _regeneratorRuntime.wrap(function _callee2$(_context2){while(1){switch(_context2.prev=_context2.next){case 0:return _context2.abrupt(\"return\",Promise.all(mediaLocations.map(function(mediaLocation){return validateMediaLocaionAsync(mediaLocation,imageSettings);})).then(function(pairs){return pairs.filter(function(pair){return pair[1];}).map(function(pair){return pair[0];});})[\"catch\"](function(error){actionContext.telemetry.exception(error);actionContext.telemetry.debug('Unable to validate prodcut images');return[];}));case 1:case\"end\":return _context2.stop();}}},_callee2);}));return _validateProductImages.apply(this,arguments);}function validateMediaLocaionAsync(_x8,_x9){return _validateMediaLocaionAsync.apply(this,arguments);}function _validateMediaLocaionAsync(){_validateMediaLocaionAsync=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee3(mediaLocation,imageSettings){var imageData,imageSettingsVal,imageConcatVal;return _regeneratorRuntime.wrap(function _callee3$(_context3){while(1){switch(_context3.prev=_context3.next){case 0:imageData={src:mediaLocation.Uri||'',altText:mediaLocation.AltText||''};imageSettingsVal=imageSettings.viewports.lg.q.replace(/['\"]+/g,'');if(!(imageData.src==='')){_context3.next=4;break;}return _context3.abrupt(\"return\",[imageData,false]);case 4:imageConcatVal=\"\".concat(imageData.src)+\"&\"+\"\".concat(imageSettingsVal);return _context3.abrupt(\"return\",new Promise(function(resolve){try{var http=new XMLHttpRequest();http.open('HEAD',imageConcatVal,true);http.onload=function(){resolve([imageData,http.status===200||http.status===201]);};http.onerror=function(){resolve([imageData,false]);};http.send();}catch(e){resolve([imageData,false]);}}));case 6:case\"end\":return _context3.stop();}}},_callee3);}));return _validateMediaLocaionAsync.apply(this,arguments);}","map":{"version":3,"sources":["modules/media-gallery/utils/get-valid-product-images.ts"],"names":[],"mappings":"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","sourcesContent":["import { getMediaLocationsForSelectedVariant, MediaLocationsForSelectedVariantInput } from '@msdyn365-commerce-modules/retail-actions';\nimport { IActionContext, IImageData, IImageSettings } from '@msdyn365-commerce/core';\nimport { MediaLocation } from '@msdyn365-commerce/retail-proxy';\n\nexport async function getValidProductImages(productId: number, channelId: number, actionContext: IActionContext, imageSettings: IImageSettings): Promise<IImageData[]> {\n    const actionInput = new MediaLocationsForSelectedVariantInput(\n        productId,\n        channelId,\n    );\n\n    return getMediaLocationsForSelectedVariant(actionInput, actionContext)\n        .then(mediaLocations => {\n            if (mediaLocations) {\n                return Promise.all(mediaLocations.map((mediaLocation) => validateMediaLocaionAsync(mediaLocation, imageSettings)))\n                    .then(pairs => {\n                        return pairs.filter(pair => pair[1]).map(pair => pair[0]);\n                    });\n            }\n\n            return [];\n        }).catch(error => {\n            actionContext.telemetry.exception(error);\n            actionContext.telemetry.debug('Unable to get Media Locations for Selected Variant');\n            return [];\n        });\n}\n\nexport async function validateProductImages(mediaLocations: MediaLocation[], actionContext: IActionContext, imageSettings: IImageSettings): Promise<IImageData[]> {\n    return Promise.all(mediaLocations.map((mediaLocation) => validateMediaLocaionAsync(mediaLocation, imageSettings)))\n        .then(pairs => {\n            return pairs.filter(pair => pair[1]).map(pair => pair[0]);\n        }).catch(error => {\n            actionContext.telemetry.exception(error);\n            actionContext.telemetry.debug('Unable to validate prodcut images');\n            return [];\n        });\n}\n\nasync function validateMediaLocaionAsync(mediaLocation: MediaLocation, imageSettings: IImageSettings): Promise<[IImageData, boolean]> {\n    const imageData = {\n        src: mediaLocation.Uri || '',\n        altText: mediaLocation.AltText || ''\n    };\n\n    const imageSettingsVal = ((imageSettings.viewports.lg!.q!).replace(/['\"]+/g, ''));\n\n    if (imageData.src === '') {\n        return [imageData, false];\n    }\n\n    const imageConcatVal = `${imageData.src}` + `&` + `${imageSettingsVal}`;\n\n    return new Promise<[IImageData, boolean]>((resolve) => {\n        try {\n            const http = new XMLHttpRequest();\n            http.open('HEAD', imageConcatVal, true);\n\n            http.onload = () => {\n                resolve([imageData, http.status === 200 || http.status === 201]);\n            };\n\n            http.onerror = () => {\n                resolve([imageData, false]);\n            };\n\n            http.send();\n        } catch (e) {\n            resolve([imageData, false]);\n        }\n    });\n}\n"],"sourceRoot":"./src/"},"metadata":{},"sourceType":"module"}