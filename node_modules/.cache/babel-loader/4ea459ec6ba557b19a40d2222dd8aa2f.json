{"ast":null,"code":"import\"core-js/modules/es.object.assign.js\";import\"core-js/modules/es.promise.js\";import{getPayloadObject,getTelemetryAttributes,TelemetryConstant}from'@msdyn365-commerce-modules/utilities';import*as React from'react';export class StoreSelectorSearchForm extends React.PureComponent{constructor(props){super(props);this.searchBoxRef=/*#__PURE__*/React.createRef();this._searchTextChanged=async e=>{const inputValue=e.target.value;await this.props.searchTermChanged(inputValue);};this._onSubmit=async e=>{var _this$searchBoxRef$cu;e.preventDefault();(_this$searchBoxRef$cu=this.searchBoxRef.current)===null||_this$searchBoxRef$cu===void 0?void 0:_this$searchBoxRef$cu.blur();await this.props.performSearch(this.props.value);};this.state={value:''};const payLoad=getPayloadObject('click',props.telemetryContent,TelemetryConstant.SearchStore);this.storeSearchAttributes=getTelemetryAttributes(props.telemetryContent,payLoad);payLoad.contentAction.etext=TelemetryConstant.ShowAllStore;this.showAllStoreAttributes=getTelemetryAttributes(props.telemetryContent,payLoad);payLoad.contentAction.etext=TelemetryConstant.ToggleMapView;this.toggleMapViewAttributes=getTelemetryAttributes(props.telemetryContent,payLoad);}render(){const{resources:{searchButtonAriaLabel,searchPlaceholderText,seeAllStoresText,viewListText,viewMapText},value,isMapDisabled,showAllStores,displayList,locatorView,onShowAllStores,onToggleListMapViewState}=this.props;const toggleButtonText=displayList?viewMapText:viewListText;return/*#__PURE__*/React.createElement(\"div\",{className:'ms-store-select__search'},/*#__PURE__*/React.createElement(\"form\",{className:'ms-store-select__search-form',\"aria-label\":searchButtonAriaLabel,name:'storeSelectorSearchForm',role:'form',autoComplete:'off',onSubmit:this._onSubmit,id:'ms-store-select__search-box-container'},/*#__PURE__*/React.createElement(\"input\",{type:'text',\"aria-label\":this.props.resources.searchInputAriaLabel,className:'msc-form-control ms-store-select__search-input',placeholder:searchPlaceholderText,value:value,onChange:this._searchTextChanged,id:'ms-store-select__search-box',ref:this.searchBoxRef,role:'combobox',\"aria-expanded\":'false',\"aria-controls\":'as_containerSearch'}),/*#__PURE__*/React.createElement(\"button\",Object.assign({className:\"ms-store-select__search-button\".concat(isMapDisabled?\" search-btn-disabled\":\"\"),\"aria-label\":searchButtonAriaLabel,color:'primary'},this.storeSearchAttributes))),showAllStores&&/*#__PURE__*/React.createElement(\"div\",Object.assign({className:'ms-store-select__search-see-all-stores',role:'none',onClick:onShowAllStores},this.showAllStoreAttributes),seeAllStoresText),locatorView&&/*#__PURE__*/React.createElement(\"button\",Object.assign({className:'ms-store-select__toggle-view',onClick:onToggleListMapViewState},this.toggleMapViewAttributes),toggleButtonText));}}","map":{"version":3,"sources":["modules/store-selector/components/store-selector-search-form.tsx"],"names":[],"mappings":"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","sourcesContent":["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { getPayloadObject, getTelemetryAttributes, IPayLoad, ITelemetryContent, TelemetryConstant } from '@msdyn365-commerce-modules/utilities';\nimport * as Msdyn365 from '@msdyn365-commerce/core';\nimport * as React from 'react';\n\nexport interface IStoreSelectorSearchFormProps {\n    resources: {\n        searchInputAriaLabel: string;\n        searchButtonAriaLabel: string;\n        searchPlaceholderText: string;\n        seeAllStoresText: string;\n        viewListText: string;\n        viewMapText: string;\n    };\n\n    value: string;\n    isMapDisabled?: boolean;\n    showAllStores?: boolean;\n    displayList?: boolean;\n    locatorView?: boolean;\n    /** The telemetry content */\n    telemetryContent?: ITelemetryContent;\n    onShowAllStores(): void;\n    onToggleListMapViewState(): void;\n    performSearch(searchTerm: string): Promise<void>;\n    searchTermChanged(searchTerm: string): Promise<void>;\n}\n\n/**\n * Simple search form consisting of search text and a search button\n */\nexport class StoreSelectorSearchForm extends React.PureComponent<IStoreSelectorSearchFormProps> {\n    private searchBoxRef: React.RefObject<HTMLInputElement> = React.createRef<HTMLInputElement>();\n    private storeSearchAttributes: Msdyn365.IDictionary<string> | undefined;\n    private showAllStoreAttributes: Msdyn365.IDictionary<string> | undefined;\n    private toggleMapViewAttributes: Msdyn365.IDictionary<string> | undefined;\n\n    constructor(props: IStoreSelectorSearchFormProps) {\n        super(props);\n        this.state = { value: '' };\n        const payLoad: IPayLoad = getPayloadObject('click', props.telemetryContent!, TelemetryConstant.SearchStore);\n        this.storeSearchAttributes = getTelemetryAttributes(props.telemetryContent!, payLoad);\n        payLoad.contentAction.etext = TelemetryConstant.ShowAllStore;\n        this.showAllStoreAttributes = getTelemetryAttributes(props.telemetryContent!, payLoad);\n        payLoad.contentAction.etext = TelemetryConstant.ToggleMapView;\n        this.toggleMapViewAttributes = getTelemetryAttributes(props.telemetryContent!, payLoad);\n    }\n\n    public render(): JSX.Element {\n        const {\n            resources: { searchButtonAriaLabel, searchPlaceholderText, seeAllStoresText, viewListText, viewMapText },\n            value,\n            isMapDisabled,\n            showAllStores,\n            displayList,\n            locatorView,\n            onShowAllStores,\n            onToggleListMapViewState\n        } = this.props;\n\n        const toggleButtonText = displayList ? viewMapText : viewListText;\n\n        return (\n            <div className='ms-store-select__search'>\n                <form\n                    className='ms-store-select__search-form'\n                    aria-label={searchButtonAriaLabel}\n                    name='storeSelectorSearchForm'\n                    role='form'\n                    autoComplete='off'\n                    onSubmit={this._onSubmit}\n                    id='ms-store-select__search-box-container'\n                >\n                    <input\n                        type='text'\n                        aria-label={this.props.resources.searchInputAriaLabel}\n                        className='msc-form-control ms-store-select__search-input'\n                        placeholder={searchPlaceholderText}\n                        value={value}\n                        onChange={this._searchTextChanged}\n                        id='ms-store-select__search-box'\n                        ref={this.searchBoxRef}\n                        role='combobox'\n                        aria-expanded='false'\n                        aria-controls='as_containerSearch'\n                    />\n                    <button\n                        className={`ms-store-select__search-button${isMapDisabled ? ` search-btn-disabled` : ``}`}\n                        aria-label={searchButtonAriaLabel}\n                        color={'primary'}\n                        {...this.storeSearchAttributes}\n                    />\n                </form>\n                {showAllStores && <div className='ms-store-select__search-see-all-stores' role='none' onClick={onShowAllStores} {...this.showAllStoreAttributes}>{seeAllStoresText}</div>}\n                {locatorView && <button className='ms-store-select__toggle-view' onClick={onToggleListMapViewState} {...this.toggleMapViewAttributes} >{toggleButtonText}</button>}\n            </div>\n        );\n    }\n\n    private _searchTextChanged = async (e: React.ChangeEvent<HTMLInputElement>): Promise<void> => {\n        const inputValue: string = e.target.value;\n\n        await this.props.searchTermChanged(inputValue);\n    };\n\n    private _onSubmit = async (e: React.SyntheticEvent): Promise<void> => {\n        e.preventDefault(); // Prevents form submission\n        this.searchBoxRef.current?.blur();\n        await this.props.performSearch(this.props.value);\n    }\n}"],"sourceRoot":"./src/"},"metadata":{},"sourceType":"module"}