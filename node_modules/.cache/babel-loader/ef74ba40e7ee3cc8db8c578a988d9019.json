{"ast":null,"code":"import _defineProperty from\"@babel/runtime/helpers/esm/defineProperty\";function ownKeys(object,enumerableOnly){var keys=Object.keys(object);if(Object.getOwnPropertySymbols){var symbols=Object.getOwnPropertySymbols(object);if(enumerableOnly)symbols=symbols.filter(function(sym){return Object.getOwnPropertyDescriptor(object,sym).enumerable;});keys.push.apply(keys,symbols);}return keys;}function _objectSpread(target){for(var i=1;i<arguments.length;i++){var source=arguments[i]!=null?arguments[i]:{};if(i%2){ownKeys(Object(source),true).forEach(function(key){_defineProperty(target,key,source[key]);});}else if(Object.getOwnPropertyDescriptors){Object.defineProperties(target,Object.getOwnPropertyDescriptors(source));}else{ownKeys(Object(source)).forEach(function(key){Object.defineProperty(target,key,Object.getOwnPropertyDescriptor(source,key));});}}return target;}/*******************************************************************************\n* Copyright (c) Microsoft Corporation.\n* All rights reserved. See LICENSE in the project root for license information.\n*******************************************************************************/import http from'http';import https from'https';import net from'net';import*as path from'path';import*as appInsights from'applicationinsights';// This skips node's module resolution process and allows for HMR on keystone-core\n// NOTE: This breaks source maps, so swap it back when you want to debug node code.\n// import * as core from '../node_modules/@msdyn365-commerce/runtime-internal/dist/lib/server';\nimport*as core from'@msdyn365-commerce/runtime-internal/dist/lib/server';import msdyn365Commerce from'@msdyn365-commerce/core-internal';// eslint-disable-line no-unused-vars\nimport{trace,safeReadJsonSync}from'@msdyn365-commerce/utilities-internal';import createCertificate from'../scripts/create-certificate';// TODO: file is too big, please refactor\n// // Configure Node.js Application Insights\nvar environmentId='Development';var commerceCoreEnvironmentId='Development';var appInfra='Development';if(process.env.NODE_ENV!=='development'){environmentId=process.env.ENVIRONMENTID||(process.env.Fabric_ApplicationName||'-').slice((process.env.Fabric_ApplicationName||'-').indexOf('-')+1);commerceCoreEnvironmentId=process.env.CommerceCore_EnvironmentId;appInfra=process.env.DEPLOYMENT_ENV==='WEBAPP'?'WebApp':'ServiceFabric';}// Read the ikey from env var, if not set it as empty space\nvar ikey=process.env.APPINSIGHTS_INSTRUMENTATIONKEY||' ';appInsights.setup(ikey)// disable all console logs from being collected\n.setAutoCollectConsole(false)// avoid the annoying ACL permissions errors from AI when in dev mode, always attempt use disk retry in prod\n.setUseDiskRetryCaching(process.env.NODE_ENV!=='development');appInsights.defaultClient.commonProperties={'Environment id':environmentId,'App type':process.env.MSDyn365_APP_TYPE||'modules',Region:process.env.AZUREREGION||process.env.ClusterRegion||'unknown','Cluster name':process.env.ClusterName||'unknown','SDK NodeId':process.env.Fabric_NodeId||'unknown','SDK NodeVersion':process.version||'unknown','Commerce core environment id':commerceCoreEnvironmentId,AppInfra:appInfra,'Deployment Environment Type':process.env.DEPLOYMENT_ENV||'Service Fabric','Retail Proxy Version':process.env.MSDyn365Commerce_RSVERSION||'-.-','SDK Version':process.env.MSDyn365Commerce_SDK_VERSION||'-.-','SSK Version':process.env.MSDyn365Commerce_SSK_VERSION||'-.-'};var clientContextKeyString='http.ClientRequest';var serverContextKeyString='http.ServerRequest';var healthCheckPathList=['/keepalive','/containerhealth','/environmenthealth'];var sdkPathList=['/_sdk/features','/_sdk/version'];var sanitizeDependencyUrls=function sanitizeDependencyUrls(envelope,context){// Filter out successful healthcheck calls\nvar serverContext=context[serverContextKeyString];if(context&&serverContext){var url=serverContext.url,originalUrl=serverContext.originalUrl,res=serverContext.res;if((url&&healthCheckPathList.includes(url.toLowerCase())||originalUrl&&sdkPathList.includes(originalUrl.toLowerCase()))&&res&&res.statusCode<300){return false;}}var data=envelope.data;if(data&&data.baseType==='RemoteDependencyData'){// auto-correlated http calls\nvar baseData=data.baseData;var type=baseData.type;if(type==='Http (tracked component)'||type==='Http'){// if we have OUN & RequestId header, then drop the call as it'll be tracked via axios interceptors\nif(context&&context[clientContextKeyString]){var contextClientRequest=context[clientContextKeyString];if(contextClientRequest._headers){var headers=contextClientRequest._headers;if(headers.oun&&headers.requestid){return false;}}}if(baseData){// TODO if debug mode no changes to baseData\nbaseData.data='CENSORED';baseData.name='CENSORED';}}}if(envelope.tags&&data&&data.baseData){var tags=envelope.tags;tags['ai.operation.name']='';}return true;};appInsights.defaultClient.addTelemetryProcessor(sanitizeDependencyUrls);appInsights.start();trace.info('Running Partner');var getClientStats=function getClientStats(){return safeReadJsonSync(path.join(process.cwd(),'build','public','stats-web.json'));};var bindings={modules:{},dataActions:{},views:{}};// installed modules registration\ntry{var moduleRegistration=require('lib/module-registration');bindings=moduleRegistration.registerAllModules();bindings={modules:_objectSpread({},bindings.modules),dataActions:_objectSpread({},bindings.dataActions)};}catch(e){if(e.code==='MODULE_NOT_FOUND'){trace.info(\"module registration file not found.\");trace.error(e);}else{throw e;}}// local modules registration\ntry{var partnerModuleRegistration=require('lib/module-registration.local');var registeredPartnerModules=partnerModuleRegistration.registerAllModules();bindings={modules:_objectSpread(_objectSpread({},bindings.modules),registeredPartnerModules.modules),dataActions:_objectSpread(_objectSpread({},bindings.dataActions),registeredPartnerModules.dataActions)};}catch(e){if(e.code==='MODULE_NOT_FOUND'){trace.info(\"No local modules found\");}}// view extensions registration\ntry{var viewsRegistration=require('lib/view-registration');bindings.views=viewsRegistration?viewsRegistration.viewDictionary:{};}catch(e){if(e.code==='MODULE_NOT_FOUND'){process.env.NODE_ENV==='development'&&console.log(\"view registration files not found.\");}}// component extensions registration\ntry{var componentsRegistration=require('lib/component-registration');bindings.components=componentsRegistration?componentsRegistration.componentDictionary:{};}catch(e){if(e.code==='MODULE_NOT_FOUND'){process.env.NODE_ENV==='development'&&console.log(\"component registration files not found.\");}}// connectors registration\ntry{var connectorsRegistration=require('lib/connector-registration');// Validate registration\nconnectorsRegistration.validateConnectorRegistration();bindings.connectors=connectorsRegistration?connectorsRegistration.connectorDictionary:{};}catch(e){if(e.code==='MODULE_NOT_FOUND'){process.env.NODE_ENV==='development'&&console.log(\"connector registration files not found.\");}else{// validateConnectorRegistration threw\ntrace.error(\"Error registering connectors. Please check implementation of connectors and please ensure that connectors have been configured properly in connector.settings.json.\");}}core.initializeServerApp(bindings).then(function(){console.log(\"Initializing server\");trace.info('--------------------------server entry point-----------------------------------------');process.env.NODE_DEBUG&&trace.info(msdyn365Commerce);process.env.NODE_DEBUG&&trace.info(msdyn365Commerce.bindings);var port=Number(process.env.PORT||3000);var originalPort=port;var servers=[];if(process.env.NODE_ENV==='development'){var portOverrideDevMode=process.argv.filter(function(_){return _&&_.toLocaleLowerCase().startsWith('port:');});if(portOverrideDevMode&&portOverrideDevMode.length){port=parseInt(portOverrideDevMode[0].split('port:')[1],10);trace.info(\"[INFO] Override port to: \".concat(port));}}var serverPorts;/**\n     * Binds a server to a specific port.\n     * Returns an error if unable to bind otherwise returns port number.\n     * @param {net.Server} serverInstance\n     * @param {number} targetPort\n     * @param {Function} callback\n     */var bindServerToPort=function bindServerToPort(serverInstance,targetPort,callback){serverInstance.listen(targetPort);serverInstance.once('listening',function(){servers.push(serverInstance);callback&&callback(null,targetPort);});serverInstance.on('error',function(err){if(err.message&&err.message.indexOf(\"EADDRINUSE\")!==-1){// clear all the listeners for this server\nserverInstance.removeAllListeners('error');serverInstance.removeAllListeners('listening');serverInstance.close(function(){callback&&callback(err);});}else{trace.error(err);}});};/**\n     * Attempts to bind the server to the target port. Will continue scanning ports +1 until the scan limit is reached.\n     * Callback returns an error if no port is found and the actual port the server binds to\n     * @param {net.Server} serverInstance\n     * @param {number} targetPort\n     * @param {number} scanLimit\n     * @param {Function} callback\n     */var startServer=function startServer(serverInstance,targetPort,scanLimit,callback){return bindServerToPort(serverInstance,targetPort,function(err,boundPort){if(err){var newPort=targetPort+1;if(newPort<=scanLimit){return startServer(serverInstance,newPort,scanLimit,callback);}}return callback(err,boundPort);});};/**\n     * Caculates offsets for http and https servers.\n     * @param {number} targetPort Initial port server tried to start on\n     * @param {number} boundPort Actual port server is listening on\n     */var caculatePorts=function caculatePorts(targetPort,boundPort){/**\n         * Quick Maths\n         * target: 4000, Bound: 4000, http: 3998, https: 3999\n         * target: 4000, Bound: 4001, http: 3996, https: 3997\n         * target: 4000, Bound: 4000, http: 3994, https: 3995\n         */var diff=boundPort-targetPort+1;var offset=2*diff;return{http:targetPort-offset,https:targetPort-(offset-1)};};/**\n     * Error event handler\n     * @param {Error} connection\n     */var noop=function noop(){};/**\n     * routes tcp request to final port to the http / https servers based on connection type\n     * @param {*} conn\n     */var tcpConnection=function tcpConnection(conn){conn.on('error',noop);conn.once('data',function(buf){// A TLS handshake record starts with byte 22.\nvar address=buf[0]===22?serverPorts.https:serverPorts.http;// Establish a new tcp connection on the local box through assigned ports.\nvar proxy=net.createConnection(address,function(){proxy.write(buf);// send connection data to app server\nconn.pipe(proxy).pipe(conn);// echo back response\n});proxy.on('error',conn.destroy);});};/**\n     * Redirects http connections to https\n     * @param {*} req - http request\n     * @param {*} res - http response\n     */function httpRedirect(req,res){res.writeHead(307,{Location:\"https://\".concat(req.headers['host']).concat(req.url)});res.end();}try{var options=createCertificate();if(process.env.DEPLOYMENT_ENV==='WEBAPP'){trace.info('🚀 Server starting in http');var httpRedirectServer=http.createServer(app);bindServerToPort(httpRedirectServer,originalPort);}else{trace.info('🚀 Server starting in https');var secureServer=https.createServer(options,app);var tunnelServer=net.createServer(tcpConnection);var _httpRedirectServer=http.createServer(httpRedirect);// Limit the total number of servers running on the same box to 50\nstartServer(tunnelServer,port,port+(process.env.MAX_NUM_CONCURRENT_SERVERS||50),function(error,actualPort){if(error){trace.error(\"FAILED TO START NODE SERVER. ERROR: \");trace.error(error);}else{serverPorts=caculatePorts(originalPort,actualPort);bindServerToPort(secureServer,serverPorts.https);bindServerToPort(_httpRedirectServer,serverPorts.http);trace.info(\"Server started on port \".concat(actualPort));}});}}catch(e){trace.error(\"\\n\\n\\nIssue starting node server. See next error message for details.\");trace.error(e);}if(module.hot){trace.info('✅  Server-side HMR Enabled!');// ['@msdyn365-commerce/runtime-internal/dist/lib/server']\nmodule.hot.dispose(function(){// Kill the servers and have webpack restart them\nservers.forEach(function(server){server.close();});});module.hot.accept(function(err){if(err){trace.error(\"Error while attempting to hot load modules. See next error message for details.\");trace.error(err);}else{trace.info(\"\\uD83D\\uDD01 Hot load of modules succeeded without issues.\");}});}else{trace.error();trace.info(\"--------> NO SS HMR <---------------\");}});var getThemeRegistration=function getThemeRegistration(){return safeReadJsonSync(path.join(process.cwd(),'build','theme-registration.json'));};msdyn365Commerce.setThemeRegistration(getThemeRegistration());var app=core.appFunc({clientStats:getClientStats()},process.env,{},appInsights.defaultClient);","map":{"version":3,"sources":["/Users/User/Documents/wkea-ec/Msdyn365.Commerce.Online/node_modules/@msdyn365-commerce/bootloader/entry/index.js"],"names":["http","https","net","path","appInsights","core","msdyn365Commerce","trace","safeReadJsonSync","createCertificate","environmentId","commerceCoreEnvironmentId","appInfra","process","env","NODE_ENV","ENVIRONMENTID","Fabric_ApplicationName","slice","indexOf","CommerceCore_EnvironmentId","DEPLOYMENT_ENV","ikey","APPINSIGHTS_INSTRUMENTATIONKEY","setup","setAutoCollectConsole","setUseDiskRetryCaching","defaultClient","commonProperties","MSDyn365_APP_TYPE","Region","AZUREREGION","ClusterRegion","ClusterName","Fabric_NodeId","version","AppInfra","MSDyn365Commerce_RSVERSION","MSDyn365Commerce_SDK_VERSION","MSDyn365Commerce_SSK_VERSION","clientContextKeyString","serverContextKeyString","healthCheckPathList","sdkPathList","sanitizeDependencyUrls","envelope","context","serverContext","url","originalUrl","res","includes","toLowerCase","statusCode","data","baseType","baseData","type","contextClientRequest","_headers","headers","oun","requestid","name","tags","addTelemetryProcessor","start","info","getClientStats","join","cwd","bindings","modules","dataActions","views","moduleRegistration","require","registerAllModules","e","code","error","partnerModuleRegistration","registeredPartnerModules","viewsRegistration","viewDictionary","console","log","componentsRegistration","components","componentDictionary","connectorsRegistration","validateConnectorRegistration","connectors","connectorDictionary","initializeServerApp","then","NODE_DEBUG","port","Number","PORT","originalPort","servers","portOverrideDevMode","argv","filter","_","toLocaleLowerCase","startsWith","length","parseInt","split","serverPorts","bindServerToPort","serverInstance","targetPort","callback","listen","once","push","on","err","message","removeAllListeners","close","startServer","scanLimit","boundPort","newPort","caculatePorts","diff","offset","noop","tcpConnection","conn","buf","address","proxy","createConnection","write","pipe","destroy","httpRedirect","req","writeHead","Location","end","options","httpRedirectServer","createServer","app","secureServer","tunnelServer","MAX_NUM_CONCURRENT_SERVERS","actualPort","module","hot","dispose","forEach","server","accept","getThemeRegistration","setThemeRegistration","appFunc","clientStats"],"mappings":"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","sourcesContent":["/*******************************************************************************\n* Copyright (c) Microsoft Corporation.\n* All rights reserved. See LICENSE in the project root for license information.\n*******************************************************************************/\n\n\nimport http from 'http';\nimport https from 'https';\nimport net from 'net';\nimport * as path from 'path';\nimport * as appInsights from 'applicationinsights';\n// This skips node's module resolution process and allows for HMR on keystone-core\n// NOTE: This breaks source maps, so swap it back when you want to debug node code.\n// import * as core from '../node_modules/@msdyn365-commerce/runtime-internal/dist/lib/server';\nimport * as core from '@msdyn365-commerce/runtime-internal/dist/lib/server';\nimport msdyn365Commerce from '@msdyn365-commerce/core-internal'; // eslint-disable-line no-unused-vars\nimport { trace, safeReadJsonSync } from '@msdyn365-commerce/utilities-internal';\n\nimport createCertificate from '../scripts/create-certificate';\n\n// TODO: file is too big, please refactor\n// // Configure Node.js Application Insights\nlet environmentId = 'Development';\nlet commerceCoreEnvironmentId = 'Development';\nlet appInfra = 'Development';\n\nif (process.env.NODE_ENV !== 'development') {\n    environmentId =\n        process.env.ENVIRONMENTID ||\n        (process.env.Fabric_ApplicationName || '-').slice((process.env.Fabric_ApplicationName || '-').indexOf('-') + 1);\n    commerceCoreEnvironmentId = process.env.CommerceCore_EnvironmentId;\n    appInfra = process.env.DEPLOYMENT_ENV === 'WEBAPP' ? 'WebApp' : 'ServiceFabric';\n}\n// Read the ikey from env var, if not set it as empty space\nlet ikey = process.env.APPINSIGHTS_INSTRUMENTATIONKEY || ' ';\nappInsights\n    .setup(ikey)\n    // disable all console logs from being collected\n    .setAutoCollectConsole(false)\n    // avoid the annoying ACL permissions errors from AI when in dev mode, always attempt use disk retry in prod\n    .setUseDiskRetryCaching(process.env.NODE_ENV !== 'development');\n\nappInsights.defaultClient.commonProperties = {\n    'Environment id': environmentId,\n    'App type': process.env.MSDyn365_APP_TYPE || 'modules',\n    Region: process.env.AZUREREGION || process.env.ClusterRegion || 'unknown',\n    'Cluster name': process.env.ClusterName || 'unknown',\n    'SDK NodeId': process.env.Fabric_NodeId || 'unknown',\n    'SDK NodeVersion': process.version || 'unknown',\n    'Commerce core environment id': commerceCoreEnvironmentId,\n    AppInfra: appInfra,\n    'Deployment Environment Type': process.env.DEPLOYMENT_ENV || 'Service Fabric',\n    'Retail Proxy Version': process.env.MSDyn365Commerce_RSVERSION || '-.-',\n    'SDK Version': process.env.MSDyn365Commerce_SDK_VERSION || '-.-',\n    'SSK Version': process.env.MSDyn365Commerce_SSK_VERSION || '-.-'\n};\nconst clientContextKeyString = 'http.ClientRequest';\nconst serverContextKeyString = 'http.ServerRequest';\nconst healthCheckPathList = ['/keepalive', '/containerhealth', '/environmenthealth'];\nconst sdkPathList = ['/_sdk/features', '/_sdk/version'];\n\nconst sanitizeDependencyUrls = (envelope, context) => {\n    // Filter out successful healthcheck calls\n    const serverContext = context[serverContextKeyString];\n    if (context && serverContext) {\n        const { url, originalUrl, res } = serverContext;\n        if (\n            ((url && healthCheckPathList.includes(url.toLowerCase())) ||\n                (originalUrl && sdkPathList.includes(originalUrl.toLowerCase()))) &&\n            res &&\n            res.statusCode < 300\n        ) {\n            return false;\n        }\n    }\n\n    const { data } = envelope;\n    if (data && data.baseType === 'RemoteDependencyData') {\n        // auto-correlated http calls\n        const baseData = data.baseData;\n        const type = baseData.type;\n        if (type === 'Http (tracked component)' || type === 'Http') {\n            // if we have OUN & RequestId header, then drop the call as it'll be tracked via axios interceptors\n            if (context && context[clientContextKeyString]) {\n                const contextClientRequest = context[clientContextKeyString];\n                if (contextClientRequest._headers) {\n                    const headers = contextClientRequest._headers;\n                    if (headers.oun && headers.requestid) {\n                        return false;\n                    }\n                }\n            }\n\n            if (baseData) {\n                // TODO if debug mode no changes to baseData\n                baseData.data = 'CENSORED';\n                baseData.name = 'CENSORED';\n            }\n        }\n    }\n    if (envelope.tags && data && data.baseData) {\n        const tags = envelope.tags;\n        tags['ai.operation.name'] = '';\n    }\n    return true;\n};\nappInsights.defaultClient.addTelemetryProcessor(sanitizeDependencyUrls);\nappInsights.start();\n\ntrace.info('Running Partner');\nconst getClientStats = () => safeReadJsonSync(path.join(process.cwd(), 'build', 'public', 'stats-web.json'));\n\nlet bindings = {\n    modules: {},\n    dataActions: {},\n    views: {}\n};\n\n// installed modules registration\ntry {\n    const moduleRegistration = require('lib/module-registration');\n    bindings = moduleRegistration.registerAllModules();\n\n    bindings = {\n        modules: {\n            ...bindings.modules\n        },\n        dataActions: {\n            ...bindings.dataActions\n        }\n    };\n} catch (e) {\n    if (e.code === 'MODULE_NOT_FOUND') {\n        trace.info(`module registration file not found.`);\n        trace.error(e);\n    } else {\n        throw e;\n    }\n}\n\n// local modules registration\ntry {\n    const partnerModuleRegistration = require('lib/module-registration.local');\n    const registeredPartnerModules = partnerModuleRegistration.registerAllModules();\n\n    bindings = {\n        modules: {\n            ...bindings.modules,\n            ...registeredPartnerModules.modules\n        },\n        dataActions: {\n            ...bindings.dataActions,\n            ...registeredPartnerModules.dataActions\n        }\n    };\n} catch (e) {\n    if (e.code === 'MODULE_NOT_FOUND') {\n        trace.info(`No local modules found`);\n    }\n}\n\n// view extensions registration\ntry {\n    const viewsRegistration = require('lib/view-registration');\n    bindings.views = viewsRegistration ? viewsRegistration.viewDictionary : {};\n} catch (e) {\n    if (e.code === 'MODULE_NOT_FOUND') {\n        process.env.NODE_ENV === 'development' && console.log(`view registration files not found.`);\n    }\n}\n\n// component extensions registration\ntry {\n    const componentsRegistration = require('lib/component-registration');\n    bindings.components = componentsRegistration ? componentsRegistration.componentDictionary : {};\n} catch (e) {\n    if (e.code === 'MODULE_NOT_FOUND') {\n        process.env.NODE_ENV === 'development' && console.log(`component registration files not found.`);\n    }\n}\n\n// connectors registration\ntry {\n    const connectorsRegistration = require('lib/connector-registration');\n    // Validate registration\n    connectorsRegistration.validateConnectorRegistration();\n    bindings.connectors = connectorsRegistration ? connectorsRegistration.connectorDictionary : {};\n} catch (e) {\n    if (e.code === 'MODULE_NOT_FOUND') {\n        process.env.NODE_ENV === 'development' && console.log(`connector registration files not found.`);\n    } else {\n        // validateConnectorRegistration threw\n        trace.error(\n            `Error registering connectors. Please check implementation of connectors and please ensure that connectors have been configured properly in connector.settings.json.`\n        );\n    }\n}\n\ncore.initializeServerApp(bindings).then(() => {\n    console.log(`Initializing server`);\n    trace.info('--------------------------server entry point-----------------------------------------');\n    process.env.NODE_DEBUG && trace.info(msdyn365Commerce);\n    process.env.NODE_DEBUG && trace.info(msdyn365Commerce.bindings);\n\n    let port = Number(process.env.PORT || 3000);\n    const originalPort = port;\n    const servers = [];\n\n    if (process.env.NODE_ENV === 'development') {\n        const portOverrideDevMode = process.argv.filter(_ => _ && _.toLocaleLowerCase().startsWith('port:'));\n        if (portOverrideDevMode && portOverrideDevMode.length) {\n            port = parseInt(portOverrideDevMode[0].split('port:')[1], 10);\n            trace.info(`[INFO] Override port to: ${port}`);\n        }\n    }\n\n    let serverPorts;\n\n    /**\n     * Binds a server to a specific port.\n     * Returns an error if unable to bind otherwise returns port number.\n     * @param {net.Server} serverInstance\n     * @param {number} targetPort\n     * @param {Function} callback\n     */\n    const bindServerToPort = (serverInstance, targetPort, callback) => {\n        serverInstance.listen(targetPort);\n        serverInstance.once('listening', () => {\n            servers.push(serverInstance);\n            callback && callback(null, targetPort);\n        });\n\n        serverInstance.on('error', err => {\n            if (err.message && err.message.indexOf(`EADDRINUSE`) !== -1) {\n                // clear all the listeners for this server\n                serverInstance.removeAllListeners('error');\n                serverInstance.removeAllListeners('listening');\n                serverInstance.close(() => {\n                    callback && callback(err);\n                });\n            } else {\n                trace.error(err);\n            }\n        });\n    };\n\n    /**\n     * Attempts to bind the server to the target port. Will continue scanning ports +1 until the scan limit is reached.\n     * Callback returns an error if no port is found and the actual port the server binds to\n     * @param {net.Server} serverInstance\n     * @param {number} targetPort\n     * @param {number} scanLimit\n     * @param {Function} callback\n     */\n    const startServer = (serverInstance, targetPort, scanLimit, callback) => {\n        return bindServerToPort(serverInstance, targetPort, (err, boundPort) => {\n            if (err) {\n                const newPort = targetPort + 1;\n                if (newPort <= scanLimit) {\n                    return startServer(serverInstance, newPort, scanLimit, callback);\n                }\n            }\n            return callback(err, boundPort);\n        });\n    };\n\n    /**\n     * Caculates offsets for http and https servers.\n     * @param {number} targetPort Initial port server tried to start on\n     * @param {number} boundPort Actual port server is listening on\n     */\n    const caculatePorts = (targetPort, boundPort) => {\n        /**\n         * Quick Maths\n         * target: 4000, Bound: 4000, http: 3998, https: 3999\n         * target: 4000, Bound: 4001, http: 3996, https: 3997\n         * target: 4000, Bound: 4000, http: 3994, https: 3995\n         */\n        const diff = boundPort - targetPort + 1;\n\n        let offset = 2 * diff;\n        return {\n            http: targetPort - offset,\n            https: targetPort - (offset - 1)\n        };\n    };\n\n    /**\n     * Error event handler\n     * @param {Error} connection\n     */\n    const noop = () => {};\n\n    /**\n     * routes tcp request to final port to the http / https servers based on connection type\n     * @param {*} conn\n     */\n    const tcpConnection = conn => {\n        conn.on('error', noop);\n        conn.once('data', function(buf) {\n            // A TLS handshake record starts with byte 22.\n            var address = buf[0] === 22 ? serverPorts.https : serverPorts.http;\n            // Establish a new tcp connection on the local box through assigned ports.\n            var proxy = net.createConnection(address, function() {\n                proxy.write(buf); // send connection data to app server\n                conn.pipe(proxy).pipe(conn); // echo back response\n            });\n            proxy.on('error', conn.destroy);\n        });\n    };\n\n    /**\n     * Redirects http connections to https\n     * @param {*} req - http request\n     * @param {*} res - http response\n     */\n    function httpRedirect(req, res) {\n        res.writeHead(307, {\n            Location: `https://${req.headers['host']}${req.url}`\n        });\n        res.end();\n    }\n\n    try {\n        const options = createCertificate();\n        if (process.env.DEPLOYMENT_ENV === 'WEBAPP') {\n            trace.info('🚀 Server starting in http');\n            const httpRedirectServer = http.createServer(app);\n            bindServerToPort(httpRedirectServer, originalPort);\n        } else {\n            trace.info('🚀 Server starting in https');\n            const secureServer = https.createServer(options, app);\n            const tunnelServer = net.createServer(tcpConnection);\n            const httpRedirectServer = http.createServer(httpRedirect);\n            // Limit the total number of servers running on the same box to 50\n            startServer(tunnelServer, port, port + (process.env.MAX_NUM_CONCURRENT_SERVERS || 50), (error, actualPort) => {\n                if (error) {\n                    trace.error(`FAILED TO START NODE SERVER. ERROR: `);\n                    trace.error(error);\n                } else {\n                    serverPorts = caculatePorts(originalPort, actualPort);\n                    bindServerToPort(secureServer, serverPorts.https);\n                    bindServerToPort(httpRedirectServer, serverPorts.http);\n                    trace.info(`Server started on port ${actualPort}`);\n                }\n            });\n        }\n    } catch (e) {\n        trace.error(`\\n\\n\\nIssue starting node server. See next error message for details.`);\n        trace.error(e);\n    }\n\n    if (module.hot) {\n        trace.info('✅  Server-side HMR Enabled!');\n        // ['@msdyn365-commerce/runtime-internal/dist/lib/server']\n        module.hot.dispose(() => {\n            // Kill the servers and have webpack restart them\n            servers.forEach(server => {\n                server.close();\n            });\n        });\n        module.hot.accept(err => {\n            if (err) {\n                trace.error(`Error while attempting to hot load modules. See next error message for details.`);\n                trace.error(err);\n            } else {\n                trace.info(`🔁 Hot load of modules succeeded without issues.`);\n            }\n        });\n    } else {\n        trace.error();\n        trace.info(`--------> NO SS HMR <---------------`);\n    }\n});\n\nconst getThemeRegistration = () => safeReadJsonSync(path.join(process.cwd(), 'build', 'theme-registration.json'));\n\nmsdyn365Commerce.setThemeRegistration(getThemeRegistration());\nlet app = core.appFunc(\n    {\n        clientStats: getClientStats()\n    },\n    process.env,\n    {},\n    appInsights.defaultClient\n);\n"]},"metadata":{},"sourceType":"module"}