{"ast":null,"code":"import _typeof from\"@babel/runtime/helpers/esm/typeof\";/*!\r\n * Copyright (c) Microsoft Corporation.\r\n * All rights reserved. See LICENSE in the project root for license information.\r\n */ /**\r\n * Helper function that attempts to stringify data. If stringify fails, it will\r\n * fallback to basic string serialization.\r\n */export function safeStringify(input){var output;try{output=_typeof(input)==='object'?JSON.stringify(input):String(input);}catch(e){if(e&&e.name==='TypeError'){// Fallback to string serialization\noutput=String(input);}else{throw e;}}return output;}","map":{"version":3,"sources":["../../../src/loggers/logging-helper.ts"],"names":[],"mappings":"uDAAA;;;AAGG,G,CAEH;;;AAGG,GACH,MAAM,SAAU,CAAA,aAAV,CAAwB,KAAxB,CAAsC,CACxC,GAAI,CAAA,MAAJ,CAEA,GAAI,CACA,MAAM,CAAG,QAAO,KAAP,IAAiB,QAAjB,CAA4B,IAAI,CAAC,SAAL,CAAe,KAAf,CAA5B,CAAoD,MAAM,CAAC,KAAD,CAAnE,CACH,CAAC,MAAO,CAAP,CAAU,CACR,GAAI,CAAC,EAAI,CAAC,CAAC,IAAF,GAAW,WAApB,CAAiC,CAC7B;AACA,MAAM,CAAG,MAAM,CAAC,KAAD,CAAf,CACH,CAHD,IAGO,CACH,KAAM,CAAA,CAAN,CACH,CACJ,CAED,MAAO,CAAA,MAAP,CACH","sourcesContent":["/*!\n * Copyright (c) Microsoft Corporation.\n * All rights reserved. See LICENSE in the project root for license information.\n */\n\n/**\n * Helper function that attempts to stringify data. If stringify fails, it will\n * fallback to basic string serialization.\n */\nexport function safeStringify(input: unknown): string {\n    let output: string;\n\n    try {\n        output = typeof input === 'object' ? JSON.stringify(input) : String(input);\n    } catch (e) {\n        if (e && e.name === 'TypeError') {\n            // Fallback to string serialization\n            output = String(input);\n        } else {\n            throw e;\n        }\n    }\n\n    return output;\n}\n"],"sourceRoot":""},"metadata":{},"sourceType":"module"}