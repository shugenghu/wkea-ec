{"ast":null,"code":"import\"core-js/modules/es.promise.js\";import\"core-js/modules/es.regexp.to-string.js\";import{createObservableDataAction}from'@msdyn365-commerce/core';import{getOrderTemplates,GetOrderTemplatesInput,QueryResultSettingsProxy}from'..';import{getPaginatedOrderTemplateLinesAction,GetPaginatedOrderTemplateLinesInput}from'..';import{OrderTemplate}from'../utilities/order-templates';/**\r\n *  Input class for the GetOrderTemplates data action\r\n */export class GetFullOrderTemplatesInput{constructor(queryResultSettings){this.getCacheKey=()=>\"GetFullOrderTemplates\";this.getCacheObjectType=()=>'GetFullOrderTemplates';this.dataCacheType=()=>'none';this.queryResultSettings=queryResultSettings;}}/**\r\n * createInput method for the GetOrderTemplate method\r\n * @param inputData The input data passed to the createInput method.\r\n */export const createGetFullOrderTemplatesInput=inputData=>{const{requestContext}=inputData;if(!requestContext.user.isAuthenticated){throw new Error('Unable to get full order templates. User is not authenticated.');}const queryResultSettings=QueryResultSettingsProxy.fromInputData(inputData).QueryResultSettings;queryResultSettings.count=true;return new GetFullOrderTemplatesInput(queryResultSettings);};/**\r\n * The action method for the GetFullOrderTemplates data action\r\n * @param input The action input\r\n * @param ctx The action context\r\n */export async function getFullOrderTemplatesAction(input,ctx){if(!ctx.requestContext.user.isAuthenticated){throw new Error('Unable to get full order templates. User is not authenticated.');}const orderTemplates=[];const inputParams=new GetOrderTemplatesInput();const productLists=await getOrderTemplates(inputParams,ctx);if(!productLists||productLists.length===0){return orderTemplates;}for(let i=0;i<productLists.length;++i){const list=productLists[i];const inputLines=new GetPaginatedOrderTemplateLinesInput(list.Id,input.queryResultSettings);const linesState=await getPaginatedOrderTemplateLinesAction(inputLines,ctx);orderTemplates.push(new OrderTemplate(list,linesState.lines,linesState.totalCount));}ctx.trace(orderTemplates.length.toString());return orderTemplates;}/**\r\n * The GetFullOrderTemplates Data Action\r\n * Returns order templates\r\n */export default createObservableDataAction({id:'@msdyn365-commerce-modules/retail-actions/order-templates/get-full-order-templates',action:getFullOrderTemplatesAction,input:createGetFullOrderTemplatesInput});","map":{"version":3,"sources":["../../../src/order-templates/get-full-order-templates.ts"],"names":[],"mappings":"qFAAA,OACI,0BADJ,KAKgC,yBALhC,CAQA,OAAS,iBAAT,CAA4B,sBAA5B,CAAoD,wBAApD,KAAoF,IAApF,CACA,OAAS,oCAAT,CAA+C,mCAA/C,KAA0F,IAA1F,CACA,OAAS,aAAT,KAA8B,8BAA9B,CAEA;;AAEG,GACH,MAAM,MAAO,CAAA,0BAA0B,CAGnC,WAAA,CAAY,mBAAZ,CAAqD,CAI9C,KAAA,WAAA,CAAc,2BAAd,CACA,KAAA,kBAAA,CAAqB,IAAM,uBAA3B,CACA,KAAA,aAAA,CAAgB,IAAiB,MAAjC,CALH,KAAK,mBAAL,CAA2B,mBAA3B,CACH,CALkC,CAYvC;;;AAGG,GACH,MAAO,MAAM,CAAA,gCAAgC,CAAI,SAAD,EAAgE,CAC5G,KAAM,CAAE,cAAF,EAAqB,SAA3B,CACA,GAAI,CAAC,cAAc,CAAC,IAAf,CAAoB,eAAzB,CAA0C,CACtC,KAAM,IAAI,CAAA,KAAJ,CAAU,gEAAV,CAAN,CACH,CACD,KAAM,CAAA,mBAAmB,CAAyB,wBAAwB,CAAC,aAAzB,CAAuC,SAAvC,EAAkD,mBAApG,CACA,mBAAmB,CAAC,KAApB,CAA4B,IAA5B,CAEA,MAAO,IAAI,CAAA,0BAAJ,CAA+B,mBAA/B,CAAP,CACH,CATM,CAWP;;;;AAIG,GACH,MAAO,eAAe,CAAA,2BAAf,CAA2C,KAA3C,CAA8E,GAA9E,CAAiG,CACpG,GAAI,CAAC,GAAG,CAAC,cAAJ,CAAmB,IAAnB,CAAwB,eAA7B,CAA8C,CAC1C,KAAM,IAAI,CAAA,KAAJ,CAAU,gEAAV,CAAN,CACH,CAED,KAAM,CAAA,cAAc,CAAoB,EAAxC,CAEA,KAAM,CAAA,WAAW,CAAG,GAAI,CAAA,sBAAJ,EAApB,CACA,KAAM,CAAA,YAAY,CAAkB,KAAM,CAAA,iBAAiB,CAAC,WAAD,CAAc,GAAd,CAA3D,CAEA,GAAI,CAAC,YAAD,EAAiB,YAAY,CAAC,MAAb,GAAwB,CAA7C,CAAgD,CAC5C,MAAO,CAAA,cAAP,CACH,CAED,IAAK,GAAI,CAAA,CAAC,CAAG,CAAb,CAAgB,CAAC,CAAG,YAAY,CAAC,MAAjC,CAAyC,EAAE,CAA3C,CAA8C,CAC1C,KAAM,CAAA,IAAI,CAAG,YAAY,CAAC,CAAD,CAAzB,CACA,KAAM,CAAA,UAAU,CAAG,GAAI,CAAA,mCAAJ,CAAwC,IAAI,CAAC,EAA7C,CAAiD,KAAK,CAAC,mBAAvD,CAAnB,CACA,KAAM,CAAA,UAAU,CAAG,KAAM,CAAA,oCAAoC,CAAC,UAAD,CAAa,GAAb,CAA7D,CACA,cAAc,CAAC,IAAf,CAAoB,GAAI,CAAA,aAAJ,CAAkB,IAAlB,CAAwB,UAAU,CAAC,KAAnC,CAA0C,UAAU,CAAC,UAArD,CAApB,EACH,CAED,GAAG,CAAC,KAAJ,CAAU,cAAc,CAAC,MAAf,CAAsB,QAAtB,EAAV,EACA,MAAO,CAAA,cAAP,CACH,CAED;;;AAGG,GACH,cAAe,CAAA,0BAA0B,CAAkB,CACvD,EAAE,CAAE,oFADmD,CAEvD,MAAM,CAA4B,2BAFqB,CAGvD,KAAK,CAAE,gCAHgD,CAAlB,CAAzC","sourcesContent":["import { CacheType,\n    createObservableDataAction,\n    IAction,\n    IActionContext,\n    IActionInput,\n    ICreateActionContext } from '@msdyn365-commerce/core';\nimport { IQueryResultSettings } from '@msdyn365-commerce/retail-proxy';\nimport { ProductList } from '@msdyn365-commerce/retail-proxy/dist/Entities/CommerceTypes.g';\nimport { getOrderTemplates, GetOrderTemplatesInput, QueryResultSettingsProxy } from '..';\nimport { getPaginatedOrderTemplateLinesAction, GetPaginatedOrderTemplateLinesInput } from '..';\nimport { OrderTemplate } from '../utilities/order-templates';\n\n/**\n *  Input class for the GetOrderTemplates data action\n */\nexport class GetFullOrderTemplatesInput implements IActionInput {\n    public queryResultSettings: IQueryResultSettings;\n\n    constructor(queryResultSettings: IQueryResultSettings) {\n        this.queryResultSettings = queryResultSettings;\n    }\n\n    public getCacheKey = () => `GetFullOrderTemplates`;\n    public getCacheObjectType = () => 'GetFullOrderTemplates';\n    public dataCacheType = (): CacheType => 'none';\n}\n\n/**\n * createInput method for the GetOrderTemplate method\n * @param inputData The input data passed to the createInput method.\n */\nexport const createGetFullOrderTemplatesInput = (inputData: ICreateActionContext): GetFullOrderTemplatesInput => {\n    const { requestContext } = inputData;\n    if (!requestContext.user.isAuthenticated) {\n        throw new Error('Unable to get full order templates. User is not authenticated.');\n    }\n    const queryResultSettings: IQueryResultSettings = QueryResultSettingsProxy.fromInputData(inputData).QueryResultSettings;\n    queryResultSettings.count = true;\n\n    return new GetFullOrderTemplatesInput(queryResultSettings);\n};\n\n/**\n * The action method for the GetFullOrderTemplates data action\n * @param input The action input\n * @param ctx The action context\n */\nexport async function getFullOrderTemplatesAction(input: GetFullOrderTemplatesInput, ctx: IActionContext): Promise<OrderTemplate[]> {\n    if (!ctx.requestContext.user.isAuthenticated) {\n        throw new Error('Unable to get full order templates. User is not authenticated.');\n    }\n\n    const orderTemplates: OrderTemplate[] = [];\n\n    const inputParams = new GetOrderTemplatesInput();\n    const productLists: ProductList[] = await getOrderTemplates(inputParams, ctx);\n\n    if (!productLists || productLists.length === 0) {\n        return orderTemplates;\n    }\n\n    for (let i = 0; i < productLists.length; ++i) {\n        const list = productLists[i];\n        const inputLines = new GetPaginatedOrderTemplateLinesInput(list.Id, input.queryResultSettings);\n        const linesState = await getPaginatedOrderTemplateLinesAction(inputLines, ctx);\n        orderTemplates.push(new OrderTemplate(list, linesState.lines, linesState.totalCount));\n    }\n\n    ctx.trace(orderTemplates.length.toString());\n    return orderTemplates;\n}\n\n/**\n * The GetFullOrderTemplates Data Action\n * Returns order templates\n */\nexport default createObservableDataAction<OrderTemplate[]>({\n    id: '@msdyn365-commerce-modules/retail-actions/order-templates/get-full-order-templates',\n    action: <IAction<OrderTemplate[]>>getFullOrderTemplatesAction,\n    input: createGetFullOrderTemplatesInput\n});"],"sourceRoot":""},"metadata":{},"sourceType":"module"}