{"ast":null,"code":"\"use strict\";/*!\r\n * Copyright (c) Microsoft Corporation.\r\n * All rights reserved. See LICENSE in the project root for license information.\r\n */Object.defineProperty(exports,\"__esModule\",{value:true});var util_1=require(\"util\");/**\r\n * Check an object for null/undefined and empty (no-key)\r\n * @param obj\r\n */exports.isObject=function(obj){return obj instanceof Object&&Object.prototype.toString.call(obj)==='[object Object]';};/**\r\n * Check an object for null/undefined and empty (no-key)\r\n * @param obj\r\n */exports.isEmptyOrNullObject=function(obj){return!obj||Object.keys(obj).length<=0;};/**\r\n * Safe parse json or throw exception\r\n * @param content\r\n */exports.safeParsePayload=function(content,trace){try{return content.constructor===String?JSON.parse(content):content;}catch(error){trace=trace||console;trace.error(\"JSON Parsing fails for content -- \"+content);trace.error(util_1.inspect(error));return undefined;}};","map":{"version":3,"sources":["../../../src/common/extensions.ts"],"names":[],"mappings":"aAAA;;;AAGG,G,yDAEH,GAAA,CAAA,MAAA,CAAA,OAAA,CAAA,MAAA,CAAA,CAEA;;;AAGG,GACU,OAAA,CAAA,QAAA,CAAW,SAAC,GAAD,CAAY,CAChC,MAAO,CAAA,GAAG,WAAY,CAAA,MAAf,EAAyB,MAAM,CAAC,SAAP,CAAiB,QAAjB,CAA0B,IAA1B,CAA+B,GAA/B,IAAwC,iBAAxE,CACH,CAFY,CAIb;;;AAGG,GACU,OAAA,CAAA,mBAAA,CAAsB,SAAC,GAAD,CAAmB,CAClD,MAAO,CAAC,GAAD,EAAQ,MAAM,CAAC,IAAP,CAAY,GAAZ,EAAiB,MAAjB,EAA2B,CAA1C,CACH,CAFY,CAIb;;;AAGG,GACU,OAAA,CAAA,gBAAA,CAAmB,SAAC,OAAD,CAAkB,KAAlB,CAA6C,CACzE,GAAI,CACA,MAAO,CAAA,OAAO,CAAC,WAAR,GAAwB,MAAxB,CAAiC,IAAI,CAAC,KAAL,CAAW,OAAX,CAAjC,CAAuD,OAA9D,CACH,CAAC,MAAO,KAAP,CAAc,CACZ,KAAK,CAAG,KAAK,EAAI,OAAjB,CACA,KAAK,CAAC,KAAN,CAAY,qCAAqC,OAAjD,EACA,KAAK,CAAC,KAAN,CAAY,MAAA,CAAA,OAAA,CAAQ,KAAR,CAAZ,EACA,MAAO,CAAA,SAAP,CACH,CACJ,CATY","sourcesContent":["/*!\n * Copyright (c) Microsoft Corporation.\n * All rights reserved. See LICENSE in the project root for license information.\n */\n\nimport { inspect } from 'util';\n\n/**\n * Check an object for null/undefined and empty (no-key)\n * @param obj\n */\nexport const isObject = (obj: object): boolean => {\n    return obj instanceof Object && Object.prototype.toString.call(obj) === '[object Object]';\n};\n\n/**\n * Check an object for null/undefined and empty (no-key)\n * @param obj\n */\nexport const isEmptyOrNullObject = (obj: object | null): boolean => {\n    return !obj || Object.keys(obj).length <= 0;\n};\n\n/**\n * Safe parse json or throw exception\n * @param content\n */\nexport const safeParsePayload = (content: string, trace?: { error: Function }) => {\n    try {\n        return content.constructor === String ? JSON.parse(content) : content;\n    } catch (error) {\n        trace = trace || console;\n        trace.error(`JSON Parsing fails for content -- ${content}`);\n        trace.error(inspect(error));\n        return undefined;\n    }\n};\n"],"sourceRoot":""},"metadata":{},"sourceType":"script"}