{"ast":null,"code":"/*---------------------------------------------------------------------------------------------\r\n *  Copyright (c) Microsoft Corporation. All rights reserved.\r\n *  Licensed under the MIT License. See License.txt in the project root for license information.\r\n *--------------------------------------------------------------------------------------------*/import{__assign,__decorate,__extends,__metadata}from\"tslib\";import isMatch from'lodash/isMatch';import{observer}from'mobx-react';import*as React from'react';import{getModuleStates,updateModuleStates}from'./module-state';var withModuleState=function withModuleState(WrappedComponent){/**\r\n     *\r\n     * ModuleState component\r\n     * @extends {React.Component<P>}\r\n     */var ModuleState=/** @class */function(_super){__extends(ModuleState,_super);function ModuleState(props){var _this=_super.call(this,props)||this;_this.initializeState=function(){var _a;var _b=_this.props,id=_b.id,typeName=_b.typeName,context=_b.context;var states=getModuleStates(context.actionContext);if(!states){_this.props.telemetry.error('withModuleState initializeState() - states not found');return;}if(states[id]){// state has been initialized\nreturn;}updateModuleStates(__assign(__assign({},states),(_a={},_a[id]={id:id,typeName:typeName,hasInitialized:false,hasError:false,isRequired:true,isCancellable:true,isSubmitContainer:false,status:undefined,childIds:[]},_a)),context.actionContext);};/**\r\n             * GetModuleStateManager\r\n             * Get module state manager by id\r\n             */_this.getModuleStateManager=function(id){var moduleState=_this.get()[id];return __assign(__assign({},moduleState),{hasInitialized:_this.validate(id,{hasInitialized:true},true),hasError:_this.validate(id,{hasError:true}),isReady:_this.validate(id,{status:'ready'},true,true),isUpdating:_this.validate(id,{status:'updating'}),isPending:_this.validate(id,{status:'pending'}),isSkipped:_this.validate(id,{status:'skipped'},true,true),isDisabled:_this.validate(id,{status:'disabled'},true),isCancelAllowed:_this.validate(id,{isCancellable:true},true,true),shouldSubmitContainer:_this.validate(id,{isSubmitContainer:true}),hasExternalSubmitGroup:_this.hasExternalSubmitGroup(),hasModuleState:_this.hasModuleState(id),setIsRequired:function setIsRequired(value){return _this.update(id,{isRequired:value});},setIsCancellable:function setIsCancellable(value){return _this.update(id,{isCancellable:value});},setIsSubmitContainer:function setIsSubmitContainer(value){return _this.update(id,{isSubmitContainer:value});},setHasError:function setHasError(value){return _this.update(id,{hasError:value});},onReady:function onReady(){return _this.update(id,{status:'ready'});},onUpdating:function onUpdating(){return _this.update(id,{status:'updating'});},onPending:function onPending(){return _this.update(id,{status:'pending'});},onSkip:function onSkip(){return _this.update(id,{status:'skipped'});},onDisable:function onDisable(){return _this.update(id,{status:'disabled'});},getModule:function getModule(moduleId){return _this.getModuleStateManager(moduleId);},getModuleByTypeName:function getModuleByTypeName(typeName){return _this.getModuleStateManagerByTypeName(typeName);},init:function init(options){if(moduleState.hasInitialized){// state has been initialized\nreturn;}_this.update(id,__assign({hasInitialized:true},options));}});};/**\r\n             * GetModuleStateManagerByTypeName\r\n             * Get module state manager by type name\r\n             */_this.getModuleStateManagerByTypeName=function(typeName){var moduleStates=getModuleStates(_this.props.context.actionContext);var moduleState=Object.values(moduleStates).find(function(_moduleState){return _moduleState.typeName===typeName;});return _this.getModuleStateManager(moduleState&&moduleState.id||'');};/**\r\n             * Get\r\n             * Get all module states\r\n             */_this.get=function(){return getModuleStates(_this.props.context.actionContext);};/**\r\n             * Update\r\n             * Update module state\r\n             */_this.update=function(id,value){// console.log('withModuleState - update', id, value);\nvar modules=_this.get();if(!modules[id]){_this.props.telemetry.error(\"withModuleState update() - Module state with id \"+id+\" is not found.\");return;}modules[id]=__assign(__assign({},modules[id]),value);};_this._validateLeaf=function(id,source){var modules=_this.get();var module=modules[id];if(!module){return false;}return isMatch(module,source);};_this._validateContainer=function(id,source,allMatched,skipSkippableItem){var modules=_this.get();var module=modules[id];if(!module){// module doesn't has module state\nreturn!!allMatched;}if(skipSkippableItem&&(module.status==='disabled'||module.status==='skipped')){// Skip disabled or skipped modules\nreturn!!allMatched;}// It is leaf module\nif(!module.childIds||!module.childIds.length){return _this._validateLeaf(id,source);}// It is container module\nvar method=allMatched?'every':'some';return module.childIds[method](function(childId){return _this._validateContainer(childId,source,allMatched,skipSkippableItem);});};/**\r\n             * Validate\r\n             * Validate current module and all its child module match the provided condition\r\n             */_this.validate=function(id,source,allMatched,skipSkippableItem){var modules=_this.get();var module=modules[id];if(!module){return false;}// It is leaf module\nif(!module.childIds||!module.childIds.length){return _this._validateLeaf(id,source);}// It is container module\nreturn _this._validateContainer(id,source,allMatched,skipSkippableItem);};/**\r\n             * hasExternalSubmitGroup\r\n             * Module will use external submit group\r\n             */_this.hasExternalSubmitGroup=function(){return!!_this.props.enableControl;};/**\r\n             * hasModuleState\r\n             * Module is using module state manager\r\n             */_this.hasModuleState=function(id){var modules=_this.get();var module=modules[id];return!!module;};_this.initializeState();return _this;}ModuleState.prototype.render=function(){var id=this.props.id;return/*#__PURE__*/React.createElement(WrappedComponent,__assign({},this.props,{moduleState:this.getModuleStateManager(id)}));};ModuleState=__decorate([observer,__metadata(\"design:paramtypes\",[Object])],ModuleState);return ModuleState;}(React.Component);return ModuleState;};export default withModuleState;","map":{"version":3,"sources":["../../../src/module-state-manager/with-module-state.tsx"],"names":[],"mappings":"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","sourcesContent":["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { IModule } from '@msdyn365-commerce/core';\nimport isMatch from 'lodash/isMatch';\nimport { observer } from 'mobx-react';\nimport * as React from 'react';\nimport { getModuleStates, updateModuleStates } from './module-state';\nimport { IModuleState, IModuleStateManager, IModuleStateProps, IModuleStates } from './module-state.data';\n\nexport interface IProps extends IModule, IModuleStateProps {\n    enableControl?: boolean;\n}\n\nconst withModuleState = <P extends IProps>(WrappedComponent: React.ComponentType<P>): React.ComponentType<P> => {\n    /**\n     *\n     * ModuleState component\n     * @extends {React.Component<P>}\n     */\n    @observer\n    class ModuleState extends React.Component<P> {\n        constructor(props: P) {\n            super(props);\n            this.initializeState();\n        }\n\n        public render(): JSX.Element | null {\n            const { id } = this.props;\n            return <WrappedComponent {...this.props} moduleState={this.getModuleStateManager(id)} />;\n        }\n\n        private initializeState = (): void => {\n            const { id, typeName, context } = this.props;\n            const states = getModuleStates(context.actionContext);\n            if (!states) {\n                this.props.telemetry.error('withModuleState initializeState() - states not found');\n                return;\n            }\n\n            if (states[id]) {\n                // state has been initialized\n                return;\n            }\n\n            updateModuleStates(\n                {\n                    ...states,\n                    [id]: {\n                        id,\n                        typeName,\n                        hasInitialized: false,\n                        hasError: false,\n                        isRequired: true,\n                        isCancellable: true,\n                        isSubmitContainer: false,\n                        status: undefined,\n                        childIds: []\n                    }\n                },\n                context.actionContext\n            );\n        };\n\n        /**\n         * GetModuleStateManager\n         * Get module state manager by id\n         */\n        private getModuleStateManager = (id: string): IModuleStateManager => {\n            const moduleState = this.get()[id];\n            return {\n                ...moduleState,\n                hasInitialized: this.validate(id, { hasInitialized: true }, true), // All has initialized is initialized\n                hasError: this.validate(id, { hasError: true }), // Partial has error is error\n                isReady: this.validate(id, { status: 'ready' }, true, true), // All ready is ready (exclued disabled and skipped)\n                isUpdating: this.validate(id, { status: 'updating' }), // Partial updating is updating\n                isPending: this.validate(id, { status: 'pending' }), // Partial pending is pending\n                isSkipped: this.validate(id, { status: 'skipped' }, true, true), // All skipped is skipped (exclued disabled)\n                isDisabled: this.validate(id, { status: 'disabled' }, true), // All disabled is disabled\n                isCancelAllowed: this.validate(id, { isCancellable: true }, true, true), // Partial not allowed is not allowed\n                shouldSubmitContainer: this.validate(id, { isSubmitContainer: true }), // Partial submit is submit.\n                hasExternalSubmitGroup: this.hasExternalSubmitGroup(),\n                hasModuleState: this.hasModuleState(id),\n                setIsRequired: (value: boolean): void => this.update(id, { isRequired: value }),\n                setIsCancellable: (value: boolean): void => this.update(id, { isCancellable: value }),\n                setIsSubmitContainer: (value: boolean): void => this.update(id, { isSubmitContainer: value }),\n                setHasError: (value: boolean): void => this.update(id, { hasError: value }),\n                onReady: (): void => this.update(id, { status: 'ready' }),\n                onUpdating: (): void => this.update(id, { status: 'updating' }),\n                onPending: (): void => this.update(id, { status: 'pending' }),\n                onSkip: (): void => this.update(id, { status: 'skipped' }),\n                onDisable: (): void => this.update(id, { status: 'disabled' }),\n                getModule: (moduleId: string): IModuleStateManager => this.getModuleStateManager(moduleId),\n                getModuleByTypeName: (typeName: string): IModuleStateManager => this.getModuleStateManagerByTypeName(typeName),\n                init: (options?: Partial<IModuleState>): void => {\n                    if (moduleState.hasInitialized) {\n                        // state has been initialized\n                        return;\n                    }\n                    this.update(id, {\n                        hasInitialized: true,\n                        ...options\n                    });\n                }\n            };\n        };\n\n        /**\n         * GetModuleStateManagerByTypeName\n         * Get module state manager by type name\n         */\n        private getModuleStateManagerByTypeName = (typeName: string): IModuleStateManager => {\n            const moduleStates = getModuleStates(this.props.context.actionContext);\n            const moduleState = Object.values(moduleStates).find(_moduleState => _moduleState.typeName === typeName);\n            return this.getModuleStateManager((moduleState && moduleState.id) || '');\n        };\n\n        /**\n         * Get\n         * Get all module states\n         */\n        private get = (): IModuleStates => {\n            return getModuleStates(this.props.context.actionContext);\n        };\n\n        /**\n         * Update\n         * Update module state\n         */\n        private update = (id: string, value: Partial<IModuleState>): void => {\n            // console.log('withModuleState - update', id, value);\n            const modules = this.get();\n            if (!modules[id]) {\n                this.props.telemetry.error(`withModuleState update() - Module state with id ${id} is not found.`);\n                return;\n            }\n            modules[id] = {\n                ...modules[id],\n                ...value\n            };\n        };\n\n        private _validateLeaf = (id: string, source: Partial<IModuleState>): boolean => {\n            const modules = this.get();\n            const module = modules[id];\n            if (!module) {\n                return false;\n            }\n            return isMatch(module, source);\n        };\n\n        private _validateContainer = (\n            id: string,\n            source: Partial<IModuleState>,\n            allMatched?: boolean,\n            skipSkippableItem?: boolean\n        ): boolean => {\n            const modules = this.get();\n            const module = modules[id];\n            if (!module) {\n                // module doesn't has module state\n                return !!allMatched;\n            }\n\n            if (skipSkippableItem && (module.status === 'disabled' || module.status === 'skipped')) {\n                // Skip disabled or skipped modules\n                return !!allMatched;\n            }\n\n            // It is leaf module\n            if (!module.childIds || !module.childIds.length) {\n                return this._validateLeaf(id, source);\n            }\n\n            // It is container module\n            const method = allMatched ? 'every' : 'some';\n            return module.childIds[method](childId => this._validateContainer(childId, source, allMatched, skipSkippableItem));\n        };\n\n        /**\n         * Validate\n         * Validate current module and all its child module match the provided condition\n         */\n        private validate = (id: string, source: Partial<IModuleState>, allMatched?: boolean, skipSkippableItem?: boolean): boolean => {\n            const modules = this.get();\n            const module = modules[id];\n            if (!module) {\n                return false;\n            }\n\n            // It is leaf module\n            if (!module.childIds || !module.childIds.length) {\n                return this._validateLeaf(id, source);\n            }\n\n            // It is container module\n            return this._validateContainer(id, source, allMatched, skipSkippableItem);\n        };\n\n        /**\n         * hasExternalSubmitGroup\n         * Module will use external submit group\n         */\n        private hasExternalSubmitGroup = (): boolean => {\n            return !!this.props.enableControl;\n        };\n\n        /**\n         * hasModuleState\n         * Module is using module state manager\n         */\n        private hasModuleState = (id: string): boolean => {\n            const modules = this.get();\n            const module = modules[id];\n            return !!module;\n        };\n    }\n\n    return ModuleState;\n};\n\nexport default withModuleState;"],"sourceRoot":""},"metadata":{},"sourceType":"module"}