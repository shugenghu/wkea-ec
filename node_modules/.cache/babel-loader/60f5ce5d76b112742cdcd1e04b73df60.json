{"ast":null,"code":"import _defineProperty from\"@babel/runtime/helpers/esm/defineProperty\";import _typeof from\"@babel/runtime/helpers/esm/typeof\";import _regeneratorRuntime from\"@babel/runtime/regenerator\";import _toConsumableArray from\"@babel/runtime/helpers/esm/toConsumableArray\";import _asyncToGenerator from\"@babel/runtime/helpers/esm/asyncToGenerator\";function ownKeys(object,enumerableOnly){var keys=Object.keys(object);if(Object.getOwnPropertySymbols){var symbols=Object.getOwnPropertySymbols(object);if(enumerableOnly)symbols=symbols.filter(function(sym){return Object.getOwnPropertyDescriptor(object,sym).enumerable;});keys.push.apply(keys,symbols);}return keys;}function _objectSpread(target){for(var i=1;i<arguments.length;i++){var source=arguments[i]!=null?arguments[i]:{};if(i%2){ownKeys(Object(source),true).forEach(function(key){_defineProperty(target,key,source[key]);});}else if(Object.getOwnPropertyDescriptors){Object.defineProperties(target,Object.getOwnPropertyDescriptors(source));}else{ownKeys(Object(source)).forEach(function(key){Object.defineProperty(target,key,Object.getOwnPropertyDescriptor(source,key));});}}return target;}/*!\r\n * Copyright (c) Microsoft Corporation.\r\n * All rights reserved. See LICENSE in the project root for license information.\r\n */import{ActionContext,addLocaleInformation}from'@msdyn365-commerce/action-internal';import{msdyn365Commerce}from'@msdyn365-commerce/core-internal';import{asSystemMetadata,EXCEPTION_DATAACTION_EXECUTION,EXCEPTION_LOADDATA_ACTION,EXCEPTION_LOADDATA_ACTION_0,EXCEPTION_LOADDATA_ACTION_1,EXCEPTION_LOADDATA_ACTION_2,LogLevel,MESSAGE_CREATE_INPUT_LOADDATA}from'@msdyn365-commerce/telemetry-internal';import{ActionRuntime}from'../app-initialization/models';import{LAZYLOAD_SWITCH_PREFIX}from'../consts';import{combineExtendedDataActionToModule}from'../utils/data-action-extension-helper';/**\r\n * Method which stores temporary async results in the cache for actions which\r\n * will be run at a later time\r\n * @param tempMetadataList The list of actions which need temporary AsyncResults\r\n * @param requestCache The request cache\r\n */var storeTemporaryAsyncResults=function storeTemporaryAsyncResults(tempMetadataList,requestCache){var tempResultCacheItem={item:{_type:'AsyncResult',status:'LOADING',runOn:'client'}};// Insert fake temporary AsyncResults for actions that will be deferred to client\ntempMetadataList.forEach(function(tempMetadata){// Non-observable and instance actions should not get a temp promise\nvar firstInput=Array.isArray(tempMetadata.inputs)?tempMetadata.inputs[0]:tempMetadata.inputs;if(!tempMetadata.dataActionFunction.prototype.isObservable||!tempMetadata.inputs||firstInput&&firstInput.dataCacheType&&firstInput.dataCacheType()==='instance'){return;}if(!Array.isArray(tempMetadata.inputs)){tempMetadata.inputs=[tempMetadata.inputs];}tempMetadata.inputs.forEach(function(tempInput){// Don't add temp promise if there is a mock or if the resolved data has already been inserted into the cache\nif(requestCache.get({key:\"\".concat(tempInput.getCacheObjectType(),\":\").concat(tempInput.getCacheKey()),typeName:'__MOCK'})===undefined&&requestCache.get({key:\"\".concat(tempInput.getCacheKey()),typeName:tempInput.getCacheObjectType()})===undefined){requestCache.put({key:tempInput.getCacheKey(),typeName:tempInput.getCacheObjectType()},tempResultCacheItem);}});});};/**\r\n * Runs all the data actions specificed in module definitions present on the page\r\n */export var loadData=/*#__PURE__*/function(){var _ref=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee(modules,context,internalTelemetry,moduleTelemetry,requestCache,appCache,complexDataTypesPromises){var dataActionMetadataList,lazyLoadModuleIds,tempMetadataList,promises;return _regeneratorRuntime.wrap(function _callee$(_context){while(1){switch(_context.prev=_context.next){case 0:if(!(!modules||modules.length===0)){_context.next=2;break;}return _context.abrupt(\"return\");case 2:dataActionMetadataList=[];lazyLoadModuleIds={};tempMetadataList=[];// Note: What modules will need to be lazyloaded due to feature switches\nstoreLazyloadModuleId(context,lazyLoadModuleIds);loadDataProcessing(modules,lazyLoadModuleIds,context,internalTelemetry,dataActionMetadataList,tempMetadataList);storeTemporaryAsyncResults(tempMetadataList,requestCache);if(!(dataActionMetadataList.length===0)){_context.next=13;break;}if(!complexDataTypesPromises){_context.next=12;break;}_context.next=12;return Promise.all(complexDataTypesPromises);case 12:return _context.abrupt(\"return\");case 13:promises=processDataActionMetadataList(context,requestCache,dataActionMetadataList,moduleTelemetry,appCache,internalTelemetry);if(complexDataTypesPromises){promises.push.apply(promises,_toConsumableArray(complexDataTypesPromises));}_context.next=17;return Promise.all(promises);case 17:case\"end\":return _context.stop();}}},_callee);}));return function loadData(_x,_x2,_x3,_x4,_x5,_x6,_x7){return _ref.apply(this,arguments);};}();var fetchDataActionWithActionid=function fetchDataActionWithActionid(lookupId){// @ts-ignore\nvar dataActionFunction=msdyn365Commerce.dataAction(lookupId);if(dataActionFunction&&dataActionFunction[\"default\"]&&dataActionFunction[\"default\"].prototype&&dataActionFunction[\"default\"].prototype.inputFunc&&typeof dataActionFunction[\"default\"].prototype.inputFunc==='function'){return dataActionFunction;}return null;};var loadDataProcessing=function loadDataProcessing(modules,lazyLoadModuleIds,context,internalTelemetry,dataActionMetadataList,tempMetadataList){modules.forEach(function(moduleContract){var moduleConfig=moduleContract.config;if(_typeof(moduleConfig)==='object'&&moduleConfig&&moduleConfig.hasOwnProperty('clientRender')){lazyLoadModuleIds[moduleContract.id]=true;}// @ts-ignore\nvar moduleBinderInitial=msdyn365Commerce.moduleBinder(moduleContract.typeName);var moduleBinder=context.params.theme?combineExtendedDataActionToModule(moduleBinderInitial,moduleContract.typeName,context.params.theme):moduleBinderInitial;if(moduleBinder&&moduleBinder.dataActions&&moduleBinder.dataActions.length>0){moduleBinder.dataActions.forEach(function(dataAction){var lookupId=dataAction.id||dataAction.path;if(dataAction.name&&lookupId){// @ts-ignore: DataAction method is not typed\nvar dataActionFunction=msdyn365Commerce.dataAction(lookupId);if(dataActionFunction&&dataActionFunction[\"default\"]&&dataActionFunction[\"default\"].prototype&&dataActionFunction[\"default\"].prototype.id){var newLookUpId=dataActionFunction[\"default\"].prototype.id;// if the dataAction function's id is different with lookup id, try to fetch the dataAction based on its id again.\nif(newLookUpId!==lookupId){dataActionFunction=fetchDataActionWithActionid(newLookUpId)||dataActionFunction;}}if(dataActionFunction&&dataActionFunction[\"default\"]&&dataActionFunction[\"default\"].prototype&&dataActionFunction[\"default\"].prototype.inputFunc&&typeof dataActionFunction[\"default\"].prototype.inputFunc==='function'){try{processModuleDataAction(dataActionFunction,context,moduleContract,dataAction,dataActionMetadataList,internalTelemetry,lazyLoadModuleIds,tempMetadataList);}catch(e){internalTelemetry.log(LogLevel.Debug,internalTelemetry.stringFormat(EXCEPTION_LOADDATA_ACTION_0,[dataAction.name,moduleContract.id]));internalTelemetry.log(LogLevel.Error,EXCEPTION_LOADDATA_ACTION,{exception:e});}}else{internalTelemetry.log(LogLevel.Debug,internalTelemetry.stringFormat(EXCEPTION_LOADDATA_ACTION_2,[dataAction.path,moduleContract.typeName]));internalTelemetry.log(LogLevel.Error,'',{exception:new Error(EXCEPTION_LOADDATA_ACTION_1)});}}});internalTelemetry.log(LogLevel.Debug,internalTelemetry.stringFormat(MESSAGE_CREATE_INPUT_LOADDATA,[(moduleContract.dataActions||[]).map(function(d){return d.name;}).join(' | '),moduleContract.typeName,moduleContract.id]));}});};var processModuleDataAction=function processModuleDataAction(dataActionFunction,context,moduleContract,dataAction,dataActionMetadataList,internalTelemetry,lazyLoadModuleIds,tempMetadataList){var inputs;try{inputs=dataActionFunction[\"default\"].prototype.inputFunc({requestContext:context,config:moduleContract.config,data:moduleContract.data});var isArray=Array.isArray(inputs);moduleContract.dataActions=moduleContract.dataActions||[];addLocaleInformation(inputs,context.locale);moduleContract.dataActions.push({name:dataAction.name,entity:isArray?inputs[0].getCacheObjectType():inputs.getCacheObjectType(),inputs:isArray?inputs.map(function(input){return input.getCacheKey();}):inputs.getCacheKey()});}catch(e){internalTelemetry.log(LogLevel.Debug,'Unable to create input for Module: {id}, Action: {name}',{values:[asSystemMetadata(moduleContract.id),asSystemMetadata(dataAction.name)]});moduleContract.dataActions=moduleContract.dataActions||[];moduleContract.dataActions.push({name:dataAction.name,entity:undefined,inputs:undefined});}if(msdyn365Commerce.isBrowser||!context.features.lazyload_all&&dataAction.runOn===ActionRuntime.server&&!lazyLoadModuleIds[moduleContract.id]&&!lazyLoadModuleIds[moduleContract.typeName]){dataActionMetadataList.push(_objectSpread({name:dataAction.name,runOn:dataAction.runOn,path:dataAction.path,id:dataAction.id,inputs:inputs,dataActionFunction:dataActionFunction[\"default\"]},dataAction.options&&{options:dataAction.options}));}else{tempMetadataList.push({name:dataAction.name,runOn:dataAction.runOn,path:dataAction.path,id:dataAction.id,inputs:inputs,dataActionFunction:dataActionFunction[\"default\"]});}};//\nvar storeLazyloadModuleId=function storeLazyloadModuleId(renderingContext,lazyLoadModuleIds){if(renderingContext.features){Object.keys(renderingContext.features).forEach(function(switchName){if(switchName.startsWith(LAZYLOAD_SWITCH_PREFIX)&&renderingContext.features[switchName]){lazyLoadModuleIds[switchName.replace(LAZYLOAD_SWITCH_PREFIX,'')]=true;}});}};var processDataActionMetadataList=function processDataActionMetadataList(context,requestCache,dataActionMetadataList,moduleTelemetry,appCache,internalTelemetry){var actionContext=new ActionContext({id:'T1',requestContext:context,requestCache:requestCache,expectedActionCount:dataActionMetadataList.length,telemetry:moduleTelemetry,appCache:appCache});return dataActionMetadataList.map(function(dataActionMetadata){// all client side actions are lazy loaded inorder not to interfere with the client hydrate.\n// therefore only return those promises that are non-observable and instance actions\nif(process.env.CURRENT_ENVIRONMENT==='web'){var promise=actionContext.chainAction(dataActionMetadata.dataActionFunction,dataActionMetadata.inputs,dataActionMetadata.options)[\"catch\"](function(e){internalTelemetry.log(LogLevel.Error,EXCEPTION_DATAACTION_EXECUTION,{values:[asSystemMetadata(dataActionMetadata.path)],exception:e&&e.error||e});});// We still need to await non-observable client-side data actions (public-preview)\nif(!dataActionMetadata.dataActionFunction.prototype.isObservable){return promise;}// we should await on observable 'instance' actions that are configured to runOn 'server'\nif(context.features&&!context.features.disable_inst_action_await&&isServerInstanceAction(dataActionMetadata)){return promise;}}else{return actionContext.chainAction(dataActionMetadata.dataActionFunction,dataActionMetadata.inputs,dataActionMetadata.options)[\"catch\"](function(e){internalTelemetry.log(LogLevel.Error,EXCEPTION_DATAACTION_EXECUTION,{values:[asSystemMetadata(dataActionMetadata.id||dataActionMetadata.name)],exception:e&&e.error||e});});}}).filter(Boolean);};var isServerInstanceAction=function isServerInstanceAction(dataActionMetadata){var firstInput=Array.isArray(dataActionMetadata.inputs)?dataActionMetadata.inputs[0]:dataActionMetadata.inputs;return dataActionMetadata.runOn===ActionRuntime.server&&dataActionMetadata.dataActionFunction.prototype.isObservable&&firstInput&&firstInput.dataCacheType&&firstInput.dataCacheType()==='instance';};","map":{"version":3,"sources":["../../../src/data/load-data.ts"],"names":[],"mappings":"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","sourcesContent":["/*!\n * Copyright (c) Microsoft Corporation.\n * All rights reserved. See LICENSE in the project root for license information.\n */\n\nimport { ActionContext, addLocaleInformation } from '@msdyn365-commerce/action-internal';\nimport { ICache } from '@msdyn365-commerce/cache-internal';\nimport {\n    IAction,\n    IActionInput,\n    IDataActionOptions,\n    IDictionary,\n    IModuleContract,\n    IRequestContext,\n    IThemeModule,\n    msdyn365Commerce\n} from '@msdyn365-commerce/core-internal';\nimport {\n    asSystemMetadata,\n    EXCEPTION_DATAACTION_EXECUTION,\n    EXCEPTION_LOADDATA_ACTION,\n    EXCEPTION_LOADDATA_ACTION_0,\n    EXCEPTION_LOADDATA_ACTION_1,\n    EXCEPTION_LOADDATA_ACTION_2,\n    InternalTelemetry,\n    ITelemetry,\n    LogLevel,\n    MESSAGE_CREATE_INPUT_LOADDATA\n} from '@msdyn365-commerce/telemetry-internal';\nimport { ActionRuntime, IDataAction } from '../app-initialization/models';\nimport { LAZYLOAD_SWITCH_PREFIX } from '../consts';\nimport { combineExtendedDataActionToModule } from '../utils/data-action-extension-helper';\n\ninterface IDataActionMetadata {\n    dataActionFunction: IAction<unknown>;\n    inputs: IActionInput[];\n    name: string;\n    path: string;\n    runOn: ActionRuntime;\n    id: string;\n    options?: IDataActionOptions;\n}\n\n/**\n * Method which stores temporary async results in the cache for actions which\n * will be run at a later time\n * @param tempMetadataList The list of actions which need temporary AsyncResults\n * @param requestCache The request cache\n */\nconst storeTemporaryAsyncResults = (tempMetadataList: IDataActionMetadata[], requestCache: ICache): void => {\n    const tempResultCacheItem = { item: { _type: 'AsyncResult', status: 'LOADING', runOn: 'client' } };\n\n    // Insert fake temporary AsyncResults for actions that will be deferred to client\n    tempMetadataList.forEach(tempMetadata => {\n        // Non-observable and instance actions should not get a temp promise\n        const firstInput = Array.isArray(tempMetadata.inputs) ? tempMetadata.inputs[0] : tempMetadata.inputs;\n        if (\n            !tempMetadata.dataActionFunction.prototype.isObservable ||\n            !tempMetadata.inputs ||\n            (firstInput && firstInput.dataCacheType && firstInput.dataCacheType() === 'instance')\n        ) {\n            return;\n        }\n\n        if (!Array.isArray(tempMetadata.inputs)) {\n            tempMetadata.inputs = [tempMetadata.inputs];\n        }\n\n        tempMetadata.inputs.forEach(tempInput => {\n            // Don't add temp promise if there is a mock or if the resolved data has already been inserted into the cache\n            if (\n                requestCache.get({ key: `${tempInput.getCacheObjectType()}:${tempInput.getCacheKey()}`, typeName: '__MOCK' }) ===\n                    undefined &&\n                requestCache.get({ key: `${tempInput.getCacheKey()}`, typeName: tempInput.getCacheObjectType() }) === undefined\n            ) {\n                requestCache.put({ key: tempInput.getCacheKey(), typeName: tempInput.getCacheObjectType() }, tempResultCacheItem);\n            }\n        });\n    });\n};\n\n/**\n * Runs all the data actions specificed in module definitions present on the page\n */\nexport const loadData = async (\n    modules: IModuleContract[],\n    context: IRequestContext,\n    internalTelemetry: InternalTelemetry,\n    moduleTelemetry: ITelemetry,\n    requestCache: ICache,\n    appCache: ICache | null,\n    complexDataTypesPromises?: Promise<void>[]\n) => {\n    if (!modules || modules.length === 0) {\n        return;\n    }\n\n    const dataActionMetadataList: IDataActionMetadata[] = [];\n    const lazyLoadModuleIds: { [index: string]: boolean } = {};\n    const tempMetadataList: IDataActionMetadata[] = [];\n\n    // Note: What modules will need to be lazyloaded due to feature switches\n    storeLazyloadModuleId(context, lazyLoadModuleIds);\n    loadDataProcessing(modules, lazyLoadModuleIds, context, internalTelemetry, dataActionMetadataList, tempMetadataList);\n    storeTemporaryAsyncResults(tempMetadataList, requestCache);\n\n    if (dataActionMetadataList.length === 0) {\n        // When there is no data actions, we still need to resolve complexTypePromises\n        if (complexDataTypesPromises) {\n            await Promise.all(complexDataTypesPromises);\n        }\n        return;\n    }\n    const promises = processDataActionMetadataList(\n        context,\n        requestCache,\n        dataActionMetadataList,\n        moduleTelemetry,\n        appCache,\n        internalTelemetry\n    );\n\n    if (complexDataTypesPromises) {\n        promises.push(...complexDataTypesPromises);\n    }\n\n    await Promise.all(promises);\n};\n\nconst fetchDataActionWithActionid = (lookupId: string) => {\n    // @ts-ignore\n    const dataActionFunction = msdyn365Commerce.dataAction(lookupId);\n    if (\n        dataActionFunction &&\n        dataActionFunction.default &&\n        dataActionFunction.default.prototype &&\n        dataActionFunction.default.prototype.inputFunc &&\n        typeof dataActionFunction.default.prototype.inputFunc === 'function'\n    ) {\n        return dataActionFunction;\n    }\n    return null;\n};\n\nconst loadDataProcessing = (\n    modules: IModuleContract[],\n    lazyLoadModuleIds: IDictionary<boolean>,\n    context: IRequestContext,\n    internalTelemetry: InternalTelemetry,\n    dataActionMetadataList: IDataActionMetadata[],\n    tempMetadataList: IDataActionMetadata[]\n) => {\n    modules.forEach((moduleContract: IModuleContract) => {\n        const moduleConfig = moduleContract.config;\n        if (typeof moduleConfig === 'object' && moduleConfig && moduleConfig.hasOwnProperty('clientRender')) {\n            lazyLoadModuleIds[moduleContract.id] = true;\n        }\n\n        // @ts-ignore\n        const moduleBinderInitial = msdyn365Commerce.moduleBinder(moduleContract.typeName);\n\n        const moduleBinder = context.params.theme\n            ? combineExtendedDataActionToModule(moduleBinderInitial, moduleContract.typeName, context.params.theme)\n            : moduleBinderInitial;\n\n        if (moduleBinder && moduleBinder.dataActions && moduleBinder.dataActions.length > 0) {\n            moduleBinder.dataActions.forEach((dataAction: IDataAction) => {\n                const lookupId = dataAction.id || dataAction.path;\n                if (dataAction.name && lookupId) {\n                    // @ts-ignore: DataAction method is not typed\n                    let dataActionFunction = msdyn365Commerce.dataAction(lookupId);\n                    if (\n                        dataActionFunction &&\n                        dataActionFunction.default &&\n                        dataActionFunction.default.prototype &&\n                        dataActionFunction.default.prototype.id\n                    ) {\n                        const newLookUpId = dataActionFunction.default.prototype.id;\n                        // if the dataAction function's id is different with lookup id, try to fetch the dataAction based on its id again.\n                        if (newLookUpId !== lookupId) {\n                            dataActionFunction = fetchDataActionWithActionid(newLookUpId) || dataActionFunction;\n                        }\n                    }\n                    if (\n                        dataActionFunction &&\n                        dataActionFunction.default &&\n                        dataActionFunction.default.prototype &&\n                        dataActionFunction.default.prototype.inputFunc &&\n                        typeof dataActionFunction.default.prototype.inputFunc === 'function'\n                    ) {\n                        try {\n                            processModuleDataAction(\n                                dataActionFunction,\n                                context,\n                                moduleContract,\n                                dataAction,\n                                dataActionMetadataList,\n                                internalTelemetry,\n                                lazyLoadModuleIds,\n                                tempMetadataList\n                            );\n                        } catch (e) {\n                            internalTelemetry.log(\n                                LogLevel.Debug,\n                                internalTelemetry.stringFormat(EXCEPTION_LOADDATA_ACTION_0, [dataAction.name, moduleContract.id])\n                            );\n                            internalTelemetry.log(LogLevel.Error, EXCEPTION_LOADDATA_ACTION, { exception: e });\n                        }\n                    } else {\n                        internalTelemetry.log(\n                            LogLevel.Debug,\n                            internalTelemetry.stringFormat(EXCEPTION_LOADDATA_ACTION_2, [dataAction.path, moduleContract.typeName])\n                        );\n                        internalTelemetry.log(LogLevel.Error, '', { exception: new Error(EXCEPTION_LOADDATA_ACTION_1) });\n                    }\n                }\n            });\n            internalTelemetry.log(\n                LogLevel.Debug,\n                internalTelemetry.stringFormat(MESSAGE_CREATE_INPUT_LOADDATA, [\n                    (moduleContract.dataActions || []).map(d => d.name).join(' | '),\n                    moduleContract.typeName,\n                    moduleContract.id\n                ])\n            );\n        }\n    });\n};\n\nconst processModuleDataAction = (\n    dataActionFunction,\n    context: IRequestContext,\n    moduleContract: IModuleContract,\n    dataAction: IDataAction,\n    dataActionMetadataList: IDataActionMetadata[],\n    internalTelemetry: InternalTelemetry,\n    lazyLoadModuleIds: IDictionary<boolean>,\n    tempMetadataList: IDataActionMetadata[]\n) => {\n    let inputs;\n    try {\n        inputs = dataActionFunction.default.prototype.inputFunc({\n            requestContext: context,\n            config: moduleContract.config,\n            data: moduleContract.data\n        });\n        const isArray = Array.isArray(inputs);\n        moduleContract.dataActions = moduleContract.dataActions || [];\n        addLocaleInformation(inputs, context.locale);\n        moduleContract.dataActions.push({\n            name: dataAction.name,\n            entity: isArray ? inputs[0].getCacheObjectType() : inputs.getCacheObjectType(),\n            inputs: isArray ? inputs.map((input: IActionInput) => input.getCacheKey()) : inputs.getCacheKey()\n        });\n    } catch (e) {\n        internalTelemetry.log(LogLevel.Debug, 'Unable to create input for Module: {id}, Action: {name}', {\n            values: [asSystemMetadata(moduleContract.id), asSystemMetadata(dataAction.name)]\n        });\n        moduleContract.dataActions = moduleContract.dataActions || [];\n        moduleContract.dataActions.push({\n            name: dataAction.name,\n            entity: undefined,\n            inputs: undefined\n        });\n    }\n\n    if (\n        msdyn365Commerce.isBrowser ||\n        (!context.features.lazyload_all &&\n            dataAction.runOn === ActionRuntime.server &&\n            !lazyLoadModuleIds[moduleContract.id] &&\n            !lazyLoadModuleIds[moduleContract.typeName])\n    ) {\n        dataActionMetadataList.push({\n            name: dataAction.name,\n            runOn: dataAction.runOn,\n            path: dataAction.path,\n            id: dataAction.id,\n            inputs: inputs,\n            dataActionFunction: dataActionFunction.default,\n            ...(dataAction.options && { options: dataAction.options })\n        });\n    } else {\n        tempMetadataList.push({\n            name: dataAction.name,\n            runOn: dataAction.runOn,\n            path: dataAction.path,\n            id: dataAction.id,\n            inputs: inputs,\n            dataActionFunction: dataActionFunction.default\n        });\n    }\n};\n\n//\nconst storeLazyloadModuleId = (renderingContext: IRequestContext, lazyLoadModuleIds: IDictionary<boolean>) => {\n    if (renderingContext.features) {\n        Object.keys(renderingContext.features).forEach(switchName => {\n            if (switchName.startsWith(LAZYLOAD_SWITCH_PREFIX) && renderingContext.features[switchName]) {\n                lazyLoadModuleIds[switchName.replace(LAZYLOAD_SWITCH_PREFIX, '')] = true;\n            }\n        });\n    }\n};\n\nconst processDataActionMetadataList = (\n    context: IRequestContext,\n    requestCache: ICache,\n    dataActionMetadataList: IDataActionMetadata[],\n    moduleTelemetry: ITelemetry,\n    appCache: ICache | null,\n    internalTelemetry: InternalTelemetry\n) => {\n    const actionContext = new ActionContext({\n        id: 'T1',\n        requestContext: context,\n        requestCache: requestCache,\n        expectedActionCount: dataActionMetadataList.length,\n        telemetry: moduleTelemetry,\n        appCache\n    });\n\n    return dataActionMetadataList\n        .map((dataActionMetadata: IDataActionMetadata) => {\n            // all client side actions are lazy loaded inorder not to interfere with the client hydrate.\n            // therefore only return those promises that are non-observable and instance actions\n            if (process.env.CURRENT_ENVIRONMENT === 'web') {\n                const promise = actionContext\n                    .chainAction(dataActionMetadata.dataActionFunction, dataActionMetadata.inputs, dataActionMetadata.options)\n                    .catch(e => {\n                        internalTelemetry.log(LogLevel.Error, EXCEPTION_DATAACTION_EXECUTION, {\n                            values: [asSystemMetadata(dataActionMetadata.path)],\n                            exception: (e && e.error) || e\n                        });\n                    });\n\n                // We still need to await non-observable client-side data actions (public-preview)\n                if (!dataActionMetadata.dataActionFunction.prototype.isObservable) {\n                    return promise;\n                }\n\n                // we should await on observable 'instance' actions that are configured to runOn 'server'\n                if (context.features && !context.features.disable_inst_action_await && isServerInstanceAction(dataActionMetadata)) {\n                    return promise;\n                }\n            } else {\n                return actionContext\n                    .chainAction(dataActionMetadata.dataActionFunction, dataActionMetadata.inputs, dataActionMetadata.options)\n                    .catch(e => {\n                        internalTelemetry.log(LogLevel.Error, EXCEPTION_DATAACTION_EXECUTION, {\n                            values: [asSystemMetadata(dataActionMetadata.id || dataActionMetadata.name)],\n                            exception: (e && e.error) || e\n                        });\n                    });\n            }\n        })\n        .filter(Boolean);\n};\n\nconst isServerInstanceAction = (dataActionMetadata: IDataActionMetadata) => {\n    const firstInput = Array.isArray(dataActionMetadata.inputs) ? dataActionMetadata.inputs[0] : dataActionMetadata.inputs;\n    return (\n        dataActionMetadata.runOn === ActionRuntime.server &&\n        dataActionMetadata.dataActionFunction.prototype.isObservable &&\n        firstInput &&\n        firstInput.dataCacheType &&\n        firstInput.dataCacheType() === 'instance'\n    );\n};\n"],"sourceRoot":""},"metadata":{},"sourceType":"module"}