{"ast":null,"code":"import\"core-js/modules/es.promise.js\";import _defineProperty from\"@babel/runtime/helpers/esm/defineProperty\";function ownKeys(object,enumerableOnly){var keys=Object.keys(object);if(Object.getOwnPropertySymbols){var symbols=Object.getOwnPropertySymbols(object);if(enumerableOnly)symbols=symbols.filter(function(sym){return Object.getOwnPropertyDescriptor(object,sym).enumerable;});keys.push.apply(keys,symbols);}return keys;}function _objectSpread(target){for(var i=1;i<arguments.length;i++){var source=arguments[i]!=null?arguments[i]:{};if(i%2){ownKeys(Object(source),true).forEach(function(key){_defineProperty(target,key,source[key]);});}else if(Object.getOwnPropertyDescriptors){Object.defineProperties(target,Object.getOwnPropertyDescriptors(source));}else{ownKeys(Object(source)).forEach(function(key){Object.defineProperty(target,key,Object.getOwnPropertyDescriptor(source,key));});}}return target;}import{createObservableDataAction}from'@msdyn365-commerce/core';import{readAsync,updateAsync}from'@msdyn365-commerce/retail-proxy/dist/DataActions/CustomersDataActions.g';import{GetCustomerInput}from'./get-customer';import{buildCacheKey}from'./index';/**\r\n *  Input class for the updateCustomerPersonalization\r\n */export class updateCustomerPersonalizationInput{constructor(userAccountNumber,isOptOut,apiSettings,preferenceType){this.getCacheKey=()=>buildCacheKey(\"\".concat(this.userAccountNumber),this.apiSettings);this.getCacheObjectType=()=>'Customer';this.dataCacheType=()=>'none';this.userAccountNumber=userAccountNumber;this.apiSettings=apiSettings;this.isOptOut=isOptOut;this.preferenceType=preferenceType;}}/**\r\n * The action method for the updateCustomerPersonalization data action\r\n * @param input The action input\r\n * @param ctx The action context\r\n */export async function updateCustomerPersonalizationAction(input,ctx){const{userAccountNumber,isOptOut,preferenceType}=input;const customer=await readAsync({callerContext:ctx},userAccountNumber);if(!customer){throw new Error('Unable to find customer');}const newCustomer=_objectSpread({},customer);switch(preferenceType){case'web-tracking':newCustomer.OptOutWebActivityTracking=isOptOut;break;case undefined:case'personalization':default:newCustomer.OptOutPersonalization=isOptOut;}const updatedCustomer=await updateAsync({callerContext:ctx},newCustomer);if(!updatedCustomer){throw new Error('Unable to update customer');}ctx.update(new GetCustomerInput(ctx.requestContext.apiSettings),updatedCustomer);return updatedCustomer;}/**\r\n * The updateCustomerPersonalization data action\r\n * Returns the updated customer\r\n */export default createObservableDataAction({id:'@msdyn365-commerce-modules/retail-actions/update-customer-personalization',action:updateCustomerPersonalizationAction});","map":{"version":3,"sources":["../../src/update-customer-personalization.ts"],"names":[],"mappings":"y4BAAA,OACe,0BADf,KAGO,yBAHP,CAKA,OACI,SADJ,CACe,WADf,KAEO,yEAFP,CAIA,OAAS,gBAAT,KAAiC,gBAAjC,CACA,OAAS,aAAT,KAA8B,SAA9B,CASA;;AAEG,GACH,MAAM,MAAO,CAAA,kCAAkC,CAM3C,WAAA,CAAY,iBAAZ,CAAuC,QAAvC,CAA0D,WAA1D,CAA6F,cAA7F,CAAoH,CAO7G,KAAA,WAAA,CAAc,IAAc,aAAa,WAAI,KAAK,iBAAT,EAA8B,KAAK,WAAnC,CAAzC,CACA,KAAA,kBAAA,CAAqB,IAAM,UAA3B,CACA,KAAA,aAAA,CAAgB,IAAiB,MAAjC,CARH,KAAK,iBAAL,CAAyB,iBAAzB,CACA,KAAK,WAAL,CAAmB,WAAnB,CACA,KAAK,QAAL,CAAgB,QAAhB,CACA,KAAK,cAAL,CAAsB,cAAtB,CACH,CAX0C,CAkB/C;;;;AAIG,GACH,MAAO,eAAe,CAAA,mCAAf,CAAmD,KAAnD,CAA+F,GAA/F,CAAkH,CACrH,KAAM,CAAE,iBAAF,CAAqB,QAArB,CAA+B,cAA/B,EAAkD,KAAxD,CAEA,KAAM,CAAA,QAAQ,CAAG,KAAM,CAAA,SAAS,CAAC,CAAE,aAAa,CAAE,GAAjB,CAAD,CAAyB,iBAAzB,CAAhC,CAEA,GAAI,CAAC,QAAL,CAAe,CACX,KAAM,IAAI,CAAA,KAAJ,CAAU,yBAAV,CAAN,CACH,CAED,KAAM,CAAA,WAAW,kBAAQ,QAAR,CAAjB,CAEA,OAAQ,cAAR,EACI,IAAK,cAAL,CACI,WAAW,CAAC,yBAAZ,CAAwC,QAAxC,CACA,MACJ,IAAK,CAAA,SAAL,CACA,IAAK,iBAAL,CACA,QACI,WAAW,CAAC,qBAAZ,CAAoC,QAApC,CAPR,CAUA,KAAM,CAAA,eAAe,CAAG,KAAM,CAAA,WAAW,CAAC,CAAE,aAAa,CAAE,GAAjB,CAAD,CAAyB,WAAzB,CAAzC,CAEA,GAAI,CAAC,eAAL,CAAsB,CAClB,KAAM,IAAI,CAAA,KAAJ,CAAU,2BAAV,CAAN,CACH,CAED,GAAG,CAAC,MAAJ,CAAW,GAAI,CAAA,gBAAJ,CAAqB,GAAG,CAAC,cAAJ,CAAmB,WAAxC,CAAX,CAAiE,eAAjE,EAEA,MAAO,CAAA,eAAP,CACH,CAED;;;AAGG,GACH,cAAe,CAAA,0BAA0B,CAAW,CAChD,EAAE,CAAE,2EAD4C,CAEhD,MAAM,CAAqB,mCAFqB,CAAX,CAAzC","sourcesContent":["import {\n    CacheType, createObservableDataAction, IAction, IActionContext, IActionInput,\n    ICommerceApiSettings\n} from '@msdyn365-commerce/core';\nimport { Customer } from '@msdyn365-commerce/retail-proxy';\nimport {\n    readAsync, updateAsync\n} from '@msdyn365-commerce/retail-proxy/dist/DataActions/CustomersDataActions.g';\n\nimport { GetCustomerInput } from './get-customer';\nimport { buildCacheKey } from './index';\n\nexport interface IUpdateCustomerPersonalizationInput extends IActionInput {\n    isOptOut: boolean;\n    userAccountNumber: string;\n    apiSettings: ICommerceApiSettings;\n    preferenceType?: string;\n}\n\n/**\n *  Input class for the updateCustomerPersonalization\n */\nexport class updateCustomerPersonalizationInput implements IUpdateCustomerPersonalizationInput {\n    public userAccountNumber: string;\n    public isOptOut: boolean;\n    public apiSettings: ICommerceApiSettings;\n    public preferenceType: string | undefined;\n\n    constructor(userAccountNumber: string, isOptOut: boolean, apiSettings: ICommerceApiSettings, preferenceType?: string) {\n        this.userAccountNumber = userAccountNumber;\n        this.apiSettings = apiSettings;\n        this.isOptOut = isOptOut;\n        this.preferenceType = preferenceType;\n    }\n\n    public getCacheKey = (): string => buildCacheKey(`${this.userAccountNumber}`, this.apiSettings);\n    public getCacheObjectType = () => 'Customer';\n    public dataCacheType = (): CacheType => 'none';\n}\n\n/**\n * The action method for the updateCustomerPersonalization data action\n * @param input The action input\n * @param ctx The action context\n */\nexport async function updateCustomerPersonalizationAction(input: IUpdateCustomerPersonalizationInput, ctx: IActionContext): Promise<Customer> {\n    const { userAccountNumber, isOptOut, preferenceType } = input;\n\n    const customer = await readAsync({ callerContext: ctx }, userAccountNumber);\n\n    if (!customer) {\n        throw new Error('Unable to find customer');\n    }\n\n    const newCustomer = { ...customer };\n\n    switch (preferenceType) {\n        case 'web-tracking':\n            newCustomer.OptOutWebActivityTracking = isOptOut;\n            break;\n        case undefined:\n        case 'personalization':\n        default:\n            newCustomer.OptOutPersonalization = isOptOut;\n    }\n\n    const updatedCustomer = await updateAsync({ callerContext: ctx }, newCustomer);\n\n    if (!updatedCustomer) {\n        throw new Error('Unable to update customer');\n    }\n\n    ctx.update(new GetCustomerInput(ctx.requestContext.apiSettings), updatedCustomer);\n\n    return updatedCustomer;\n}\n\n/**\n * The updateCustomerPersonalization data action\n * Returns the updated customer\n */\nexport default createObservableDataAction<Customer>({\n    id: '@msdyn365-commerce-modules/retail-actions/update-customer-personalization',\n    action: <IAction<Customer>>updateCustomerPersonalizationAction\n});\n"],"sourceRoot":""},"metadata":{},"sourceType":"module"}