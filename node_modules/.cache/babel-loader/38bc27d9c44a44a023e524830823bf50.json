{"ast":null,"code":"import*as React from'react';export const getItem=(_ref)=>{let{giftCard,getFormattedPrice,resources:{enteredGiftCardLabel,giftCardAvailableBalanceLabel}}=_ref;const balance=getFormattedPrice(giftCard.Balance,giftCard.CardCurrencyCode);const giftCardLast4Digit=(giftCard.Id||'').substr(-4);const itemProps={className:'ms-gift-card-balance-check__item'};const selectedGiftCard=/*#__PURE__*/React.createElement(\"span\",{className:'ms-gift-card-balance-check__item-text'},enteredGiftCardLabel,\" \",giftCardLast4Digit,\" (\",giftCardAvailableBalanceLabel,' ',/*#__PURE__*/React.createElement(\"span\",{className:'ms-gift-card-balance-check__balance'},balance),\")\");return{itemProps,id:giftCard&&giftCard.Id,selectedGiftCard};};","map":{"version":3,"sources":["modules/gift-card-balance-check/components/get-item.tsx"],"names":[],"mappings":"AAMA,MAAO,GAAK,CAAA,KAAZ,KAAuB,OAAvB,CAuBA,MAAO,MAAM,CAAA,OAAO,CAAG,QAII,IAJH,CACpB,QADoB,CAEpB,iBAFoB,CAGpB,SAAS,CAAE,CAAE,oBAAF,CAAwB,6BAAxB,CAHS,CAIG,MACvB,KAAM,CAAA,OAAO,CAAG,iBAAiB,CAAC,QAAQ,CAAC,OAAV,CAAmB,QAAQ,CAAC,gBAA5B,CAAjC,CACA,KAAM,CAAA,kBAAkB,CAAG,CAAC,QAAQ,CAAC,EAAT,EAAe,EAAhB,EAAoB,MAApB,CAA2B,CAAC,CAA5B,CAA3B,CAEA,KAAM,CAAA,SAAS,CAAG,CACd,SAAS,CAAE,kCADG,CAAlB,CAIA,KAAM,CAAA,gBAAgB,cAClB,KAAA,CAAA,aAAA,CAAA,MAAA,CAAA,CAAM,SAAS,CAAC,uCAAhB,CAAA,CACK,oBADL,C,GAAA,CAC4B,kBAD5B,C,IAAA,CACkD,6BADlD,CACiF,GADjF,cAEI,KAAA,CAAA,aAAA,CAAA,MAAA,CAAA,CAAM,SAAS,CAAC,qCAAhB,CAAA,CAAuD,OAAvD,CAFJ,CAGO,GAHP,CADJ,CAOA,MAAO,CACH,SADG,CAEH,EAAE,CAAE,QAAQ,EAAI,QAAQ,CAAC,EAFtB,CAGH,gBAHG,CAAP,CAKH,CAxBM","sourcesContent":["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nimport { INodeProps } from '@msdyn365-commerce-modules/utilities';\nimport { GiftCard } from '@msdyn365-commerce/retail-proxy/dist/Entities/CommerceTypes.g';\nimport * as React from 'react';\n\nexport interface IGetItemInput {\n    giftCard: GiftCard;\n    resources: {\n        enteredGiftCardLabel: string;\n        giftCardAvailableBalanceLabel: string;\n    };\n    getFormattedPrice(price?: number, currencyCode?: string): string;\n}\n\nexport interface IItem {\n    itemProps: INodeProps;\n    id?: string;\n    selectedGiftCard: React.ReactNode;\n    removeButton?: React.ReactNode;\n}\n\n/**\n *\n * GiftCardItem component\n * @extends {React.PureComponent<IGiftCardItemProps>}\n */\nexport const getItem = ({\n    giftCard,\n    getFormattedPrice,\n    resources: { enteredGiftCardLabel, giftCardAvailableBalanceLabel }\n}: IGetItemInput): IItem => {\n    const balance = getFormattedPrice(giftCard.Balance, giftCard.CardCurrencyCode);\n    const giftCardLast4Digit = (giftCard.Id || '').substr(-4);\n\n    const itemProps = {\n        className: 'ms-gift-card-balance-check__item'\n    };\n\n    const selectedGiftCard = (\n        <span className='ms-gift-card-balance-check__item-text'>\n            {enteredGiftCardLabel} {giftCardLast4Digit} ({giftCardAvailableBalanceLabel}{' '}\n            <span className='ms-gift-card-balance-check__balance'>{balance}</span>)\n        </span>\n    );\n\n    return {\n        itemProps,\n        id: giftCard && giftCard.Id,\n        selectedGiftCard\n    };\n};\n"],"sourceRoot":"./src/"},"metadata":{},"sourceType":"module"}