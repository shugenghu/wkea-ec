{"ast":null,"code":"import _regeneratorRuntime from\"@babel/runtime/regenerator\";import _asyncToGenerator from\"@babel/runtime/helpers/esm/asyncToGenerator\";import{updateAsync}from'@msdyn365-commerce/retail-proxy/dist/DataActions/CartsDataActions.g';export default function updateReceiptEmail(_x,_x2,_x3){return _updateReceiptEmail.apply(this,arguments);}function _updateReceiptEmail(){_updateReceiptEmail=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee(cart,email,actionContext){return _regeneratorRuntime.wrap(function _callee$(_context){while(1){switch(_context.prev=_context.next){case 0:if(cart){_context.next=2;break;}return _context.abrupt(\"return\",{cart:undefined,status:'FAILED'});case 2:return _context.abrupt(\"return\",updateAsync({callerContext:actionContext},{Id:cart.Id,ReceiptEmail:email}).then(function(newCart){return{cart:newCart,status:'SUCCESS'};})[\"catch\"](function(error){actionContext.telemetry.warning(error);actionContext.telemetry.debug('Unable to add receipt email to the cart');return{cart:undefined,status:'FAILED'};}));case 3:case\"end\":return _context.stop();}}},_callee);}));return _updateReceiptEmail.apply(this,arguments);}","map":{"version":3,"sources":["cart-state/update-receipt-email.ts"],"names":[],"mappings":"uIACA,OAAS,WAAT,KAA4B,qEAA5B,CAIA,uBAA8B,CAAA,kBAA9B,+D,2GAAe,iBAAkC,IAAlC,CAAoE,KAApE,CAAmF,aAAnF,qHACN,IADM,yDAEA,CAAE,IAAI,CAAE,SAAR,CAAmB,MAAM,CAAE,QAA3B,CAFA,yCAKJ,WAAW,CACd,CAAE,aAAa,CAAE,aAAjB,CADc,CAEd,CACI,EAAE,CAAE,IAAI,CAAC,EADb,CAEI,YAAY,CAAE,KAFlB,CAFc,CAAX,CAOF,IAPE,CAOG,SAAA,OAAO,CAAG,CACZ,MAAkC,CAAE,IAAI,CAAE,OAAR,CAAiB,MAAM,CAAE,SAAzB,CAAlC,CACH,CATE,WAUI,SAAA,KAAK,CAAG,CACX,aAAa,CAAC,SAAd,CAAwB,OAAxB,CAAgC,KAAhC,EACA,aAAa,CAAC,SAAd,CAAwB,KAAxB,CAA8B,yCAA9B,EAEA,MAAkC,CAAE,IAAI,CAAE,SAAR,CAAmB,MAAM,CAAE,QAA3B,CAAlC,CACH,CAfE,CALI,wD","sourcesContent":["import { IActionContext } from '@msdyn365-commerce/core';\nimport { updateAsync } from '@msdyn365-commerce/retail-proxy/dist/DataActions/CartsDataActions.g';\nimport { Cart } from '@msdyn365-commerce/retail-proxy/dist/Entities/CommerceTypes.g';\nimport { ICartActionResultWithCart } from './cart-action-result';\n\nexport default async function updateReceiptEmail(cart: Readonly<Cart | undefined>, email: string, actionContext: IActionContext): Promise<ICartActionResultWithCart> {\n    if (!cart) {\n        return { cart: undefined, status: 'FAILED' };\n    }\n\n    return updateAsync(\n        { callerContext: actionContext },\n        {\n            Id: cart.Id,\n            ReceiptEmail: email\n        }\n    )\n        .then(newCart => {\n            return <ICartActionResultWithCart>{ cart: newCart, status: 'SUCCESS' };\n        })\n        .catch(error => {\n            actionContext.telemetry.warning(error);\n            actionContext.telemetry.debug('Unable to add receipt email to the cart');\n\n            return <ICartActionResultWithCart>{ cart: undefined, status: 'FAILED' };\n        });\n}"],"sourceRoot":"./src/"},"metadata":{},"sourceType":"module"}