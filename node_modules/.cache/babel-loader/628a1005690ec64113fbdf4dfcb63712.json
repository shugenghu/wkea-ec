{"ast":null,"code":"/*!\r\n * Copyright (c) Microsoft Corporation.\r\n * All rights reserved. See LICENSE in the project root for license information.\r\n */import{LogLevel}from'@msdyn365-commerce/telemetry-internal';export var logDebug=function logDebug(debugMessage,telemetry){telemetry&&telemetry.log(LogLevel.Debug,debugMessage);};export var logError=function logError(errorMessage,telemetry){telemetry&&telemetry.log(LogLevel.Error,errorMessage);};export var isAbsoluteUrl=function isAbsoluteUrl(source){return /^(http|https):\\/\\/(\\w+:{0,1}\\w*@)?(\\S+)(:[0-9]+)?(\\/|\\/([\\w#!:.?+=&%@!\\-\\/]))?$/.test(source);};export var isRelativeUrl=function isRelativeUrl(source){return /^(?!www\\.|(?:http|ftp)s?:\\/\\/|[A-Za-z]:\\\\|\\/\\/).*(\\.js){1}$/.test(source);};","map":{"version":3,"sources":["utils/script-utils.ts"],"names":[],"mappings":"AAAA;;;AAGG,GAEH,OAA6B,QAA7B,KAA6C,uCAA7C,CAEA,MAAO,IAAM,CAAA,QAAQ,CAAG,QAAX,CAAA,QAAW,CAAC,YAAD,CAAuB,SAAvB,CAA0E,CAC9F,SAAS,EAAI,SAAS,CAAC,GAAV,CAAc,QAAQ,CAAC,KAAvB,CAA8B,YAA9B,CAAb,CACH,CAFM,CAIP,MAAO,IAAM,CAAA,QAAQ,CAAG,QAAX,CAAA,QAAW,CAAC,YAAD,CAAuB,SAAvB,CAA0E,CAC9F,SAAS,EAAI,SAAS,CAAC,GAAV,CAAc,QAAQ,CAAC,KAAvB,CAA8B,YAA9B,CAAb,CACH,CAFM,CASP,MAAO,IAAM,CAAA,aAAa,CAAG,QAAhB,CAAA,aAAgB,CAAC,MAAD,CAA4B,CACrD,MAAO,mFAAkF,IAAlF,CAAuF,MAAvF,CAAP,CACH,CAFM,CAIP,MAAO,IAAM,CAAA,aAAa,CAAG,QAAhB,CAAA,aAAgB,CAAC,MAAD,CAA4B,CACrD,MAAO,+DAA8D,IAA9D,CAAmE,MAAnE,CAAP,CACH,CAFM","sourcesContent":["/*!\n * Copyright (c) Microsoft Corporation.\n * All rights reserved. See LICENSE in the project root for license information.\n */\n\nimport { IInternalTelemetry, LogLevel } from '@msdyn365-commerce/telemetry-internal';\n\nexport const logDebug = (debugMessage: string, telemetry: IInternalTelemetry | undefined): void => {\n    telemetry && telemetry.log(LogLevel.Debug, debugMessage);\n};\n\nexport const logError = (errorMessage: string, telemetry: IInternalTelemetry | undefined): void => {\n    telemetry && telemetry.log(LogLevel.Error, errorMessage);\n};\n\n/**\n * Returns true if the given string matches an URL pattern\n *\n * @param source The string to check against\n */\nexport const isAbsoluteUrl = (source: string): boolean => {\n    return /^(http|https):\\/\\/(\\w+:{0,1}\\w*@)?(\\S+)(:[0-9]+)?(\\/|\\/([\\w#!:.?+=&%@!\\-\\/]))?$/.test(source);\n};\n\nexport const isRelativeUrl = (source: string): boolean => {\n    return /^(?!www\\.|(?:http|ftp)s?:\\/\\/|[A-Za-z]:\\\\|\\/\\/).*(\\.js){1}$/.test(source);\n};\n"],"sourceRoot":"./src/"},"metadata":{},"sourceType":"module"}