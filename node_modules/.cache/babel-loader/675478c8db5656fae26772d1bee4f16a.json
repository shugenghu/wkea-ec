{"ast":null,"code":"import\"core-js/modules/es.symbol.description.js\";import\"core-js/modules/es.promise.js\";import\"core-js/modules/web.dom-collections.for-each.js\";import\"core-js/modules/web.dom-collections.iterator.js\";import{createObservableDataAction}from'@msdyn365-commerce/core';import GetProducts,{ProductInput}from'./get-simple-products';/**\r\n * List Input action\r\n */export class ListInput{constructor(documentId,title,description,shortDescription,backgroundColor,foregroundColor,images,items,productItems,itemsCount,itemsPerPage,skipCount){this.shouldCacheOutput=()=>true;this.getCacheObjectType=()=>'LIST';this.getCacheKey=()=>\"\".concat(this.DocumentId,\"-\").concat(this.ItemsCount,\"-\").concat(this.ItemsPerPage,\"-\").concat(this.SkipCount);this.DocumentId=documentId;this.Title=title;this.Description=description;this.ShortDescription=shortDescription;this.BackgroundColor=backgroundColor;this.ForegroundColor=foregroundColor;this.Images=images;this.Items=items;this.ProductItems=productItems;this.ItemsCount=itemsCount;this.ItemsPerPage=itemsPerPage;this.SkipCount=skipCount;}}/**\r\n * Calls to getSimpleProducts to get product array by ID's in list.\r\n */export async function getListData(input,ctx){ctx.trace(\"List Title: \".concat(input.Title));// @ts-ignore\nconst{apiSettings}=ctx.requestContext;const sublists=[];const result={Title:input.Title,Description:input.Description,ShortDescription:input.ShortDescription,BackgroundColor:input.BackgroundColor,ForegroundColor:input.ForegroundColor,Items:sublists,ItemsCount:input.ItemsCount};if(input&&input.Items&&input.Items.length){// get all products\nlet products=[];if(input.ProductItems&&input.ProductItems.length){const inputArray=input.ProductItems.map(item=>new ProductInput(+item.RecordId,apiSettings));products=await GetProducts(inputArray,ctx);}// build map from recordId to product, which will be used later when build the output.\nconst productMap={};products.forEach(item=>{if(item){productMap[\"\".concat(item.RecordId)]=item;}});for(const listitem of input.Items){if(isSublist(listitem)){result.Items.push(listitem);}else{listitem.forEach(item=>{if(productMap[item.RecordId]){result.Items.push(productMap[item.RecordId]);}});}}}return result;}/**\r\n * Check if an item is sublist.\r\n */function isSublist(listItem){return listItem.Images!==undefined;}/**\r\n * Get images.\r\n */function getImages(images){const resultImageList=[];if(!images){return resultImageList;}images.forEach(item=>{if(item&&item.image&&item.image.href){// add image item\nconst imageItem={href:item.image.href,altText:item.image.altText,title:item.image.title,width:item.image.width,height:item.image.height};resultImageList.push(imageItem);}});return resultImageList;}/**\r\n * Get the url of sub list.\r\n */function getSubListUrl(listName,sitePath){if(!listName){return'';}if(!sitePath){return\"/\".concat(listName,\".l\");}// sitePath has a leading '/'\nreturn\"\".concat(sitePath,\"/\").concat(listName,\".l\");}/**\r\n * Get input list data.\r\n */function getInutListData(inputData){let listData=!inputData||!inputData.requestContext||!inputData.requestContext.pageData?null:inputData.requestContext.pageData.list;if(!inputData||!inputData.requestContext||!inputData.requestContext.pageData||!inputData.requestContext.pageData.list||!inputData.requestContext.pageData.list.content||!inputData.requestContext.pageData.list.content.items||!inputData.requestContext.pageData.list.content.title||!inputData.requestContext.pageData.list._id){if(!inputData||!inputData.data||!inputData.data.list||!inputData.data.list.content||!inputData.data.list.content.items||!inputData.data.list.content.title||!inputData.data.list._id){console.error('data is not well defined for list action input');throw new Error('data is not well defined for list action input');}listData=inputData.data.list;}return listData;}/**\r\n * Get sub list item.\r\n */function getSubListItem(item,sitePathOfRequest){const imageList=getImages(item.fields.content.images);const sublistHref=getSubListUrl(item.fields._name,sitePathOfRequest);return{Title:item.fields.content.title,Description:item.fields.content.description,ShortDescription:item.fields.content.shortDescription,BackgroundColor:item.fields.content.backgroundColor,ForegroundColor:item.fields.content.foregroundColor,Href:sublistHref,Images:imageList};}/**\r\n * Get site path\r\n */function getSitePath(inputData){// @ts-ignore\nreturn inputData&&inputData.requestContext&&inputData.requestContext.sitePath?inputData.requestContext.sitePath:'';}/**\r\n * Get items per page\r\n */function getItemsPerPage(inputData){if(!inputData||!inputData.config||!inputData.config.itemsPerPage){return 50;}const result=Number(inputData.config.itemsPerPage);if(isNaN(result)){return 50;}return result;}/**\r\n * Get skip count\r\n */function getSkipCount(inputData){return inputData&&inputData.requestContext&&inputData.requestContext.query&&inputData.requestContext.query.skipCount?Number(inputData.requestContext.query.skipCount):0;}/**\r\n * Creates the input required to make the list call to get products.\r\n */const createListInput=inputData=>{const listData=getInutListData(inputData);const listItems=[];let productList=[];const parentImageList=getImages(listData.content.images);const itemsPerPage=getItemsPerPage(inputData);const skipCount=getSkipCount(inputData);// This is the list contains all product and will be used to call getSimpleProducts data action.\nconst productItems=[];const sum=skipCount+itemsPerPage;for(let index=skipCount;index<listData.content.items.length&&index<sum;index++){const item=listData.content.items[index];if(item.type===\"list\"/* list */){if(!item.fields||!item.fields.content||!item.fields.content.title){console.error(\"sublist item fields, content or title missing in list \".concat(listData._id));continue;}// if any elements in product list, then copy it and add to list items\nif(!(productList.length===0)){const clonedList=[...productList];listItems.push(clonedList);productList=[];}// build and add sublist item\nlistItems.push(getSubListItem(item,getSitePath(inputData)));}if(item.type===\"product\"/* product */){if(!item.fields||!item.fields.recordId){console.error(\"product item missing recordId in list \".concat(listData._id));continue;}// add product item\nconst productItem={RecordId:item.fields.recordId,CatalogId:item.fields.catalogId||'0'};productList.push(productItem);productItems.push(productItem);}}// save the last portion of product items.\nif(!(productList.length===0)){listItems.push(productList);}return new ListInput(listData._id,listData.content.title,listData.content.description,listData.content.shortDescription,listData.content.backgroundColor,listData.content.foregroundColor,parentImageList,listItems,productItems,listData.content.items.length,itemsPerPage,skipCount);};export default createObservableDataAction({id:'@msdyn365-commerce-modules/retail-actions/get-list',action:getListData,input:createListInput});","map":{"version":3,"sources":["../../src/get-list.ts"],"names":[],"mappings":"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","sourcesContent":["import { Image, ISubList, List } from '@msdyn365-commerce-modules/data-types';\nimport { IAction, IActionContext, IActionInput } from '@msdyn365-commerce/core';\nimport { createObservableDataAction, IAny, ICreateActionContext, IGeneric } from '@msdyn365-commerce/core';\nimport { SimpleProduct } from '@msdyn365-commerce/retail-proxy';\n\nimport GetProducts, { ProductInput } from './get-simple-products';\n\n/**\n * List Input action\n */\nexport class ListInput implements IActionInput {\n    public DocumentId: string;\n    public Title: string;\n    public Description: string;\n    public ShortDescription: string;\n    public BackgroundColor: string;\n    public ForegroundColor: string;\n    public Images: Image[];\n    public Items: (IProductItem[] | ISubList)[];\n    public ProductItems: IProductItem[];\n    public ItemsCount: number;\n    public ItemsPerPage: number;\n    public SkipCount: number;\n\n    constructor(\n        documentId: string,\n        title: string,\n        description: string,\n        shortDescription: string,\n        backgroundColor: string,\n        foregroundColor: string,\n        images: Image[],\n        items: (IProductItem[] | ISubList)[],\n        productItems: IProductItem[],\n        itemsCount: number,\n        itemsPerPage: number,\n        skipCount: number\n    ) {\n        this.DocumentId = documentId;\n        this.Title = title;\n        this.Description = description;\n        this.ShortDescription = shortDescription;\n        this.BackgroundColor = backgroundColor;\n        this.ForegroundColor = foregroundColor;\n        this.Images = images;\n        this.Items = items;\n        this.ProductItems = productItems;\n        this.ItemsCount = itemsCount;\n        this.ItemsPerPage = itemsPerPage;\n        this.SkipCount = skipCount;\n    }\n\n    public shouldCacheOutput = () => true;\n    public getCacheObjectType = () => 'LIST';\n    public getCacheKey = () => `${this.DocumentId}-${this.ItemsCount}-${this.ItemsPerPage}-${this.SkipCount}`;\n}\n\nexport interface IProductItem {\n    RecordId: string;\n    CatalogId: string;\n}\n\n/**\n * List item type enum\n */\nconst enum ListItemType {\n    list = 'list',\n    product = 'product'\n}\n\n/**\n * Calls to getSimpleProducts to get product array by ID's in list.\n */\nexport async function getListData(input: ListInput, ctx: IActionContext): Promise<List> {\n    ctx.trace(`List Title: ${input.Title}`);\n\n    // @ts-ignore\n    const { apiSettings } = ctx.requestContext;\n\n    const sublists: (SimpleProduct | ISubList)[] = [];\n    const result: List = {\n        Title: input.Title,\n        Description: input.Description,\n        ShortDescription: input.ShortDescription,\n        BackgroundColor: input.BackgroundColor,\n        ForegroundColor: input.ForegroundColor,\n        Items: sublists,\n        ItemsCount: input.ItemsCount\n    };\n\n    if (input && input.Items && input.Items.length) {\n        // get all products\n        let products: SimpleProduct[] = [];\n        if (input.ProductItems && input.ProductItems.length) {\n            const inputArray = input.ProductItems.map(item => new ProductInput(+item.RecordId, apiSettings));\n            products = <SimpleProduct[]>await GetProducts(inputArray, ctx);\n        }\n\n        // build map from recordId to product, which will be used later when build the output.\n        const productMap: { [recordId: string]: SimpleProduct } = {};\n        products.forEach(item => {\n            if (item) {\n                productMap[`${item.RecordId}`] = item;\n            }\n        });\n\n        for (const listitem of input.Items) {\n            if (isSublist(listitem)) {\n                result.Items.push(listitem);\n            } else {\n                listitem.forEach(item => {\n                    if (productMap[item.RecordId]) {\n                        result.Items.push(productMap[item.RecordId]);\n                    }\n                });\n            }\n        }\n    }\n\n    return result;\n}\n\n/**\n * Check if an item is sublist.\n */\nfunction isSublist(listItem: IProductItem[] | ISubList): listItem is ISubList {\n    return (<ISubList>listItem).Images !== undefined;\n}\n\n/**\n * Get images.\n */\nfunction getImages(images: IGeneric<IAny>[]): Image[] {\n    const resultImageList: Image[] = [];\n\n    if (!images) {\n        return resultImageList;\n    }\n\n    images.forEach(item => {\n        if (item && item.image && item.image.href) {\n            // add image item\n            const imageItem: Image = {\n                href: item.image.href,\n                altText: item.image.altText,\n                title: item.image.title,\n                width: item.image.width,\n                height: item.image.height\n            };\n\n            resultImageList.push(imageItem);\n        }\n    });\n\n    return resultImageList;\n}\n\n/**\n * Get the url of sub list.\n */\nfunction getSubListUrl(listName: string, sitePath: string): string {\n    if (!listName) {\n        return '';\n    }\n\n    if(!sitePath) {\n        return `/${listName}.l`;\n    }\n\n    // sitePath has a leading '/'\n    return `${sitePath}/${listName}.l`;\n}\n\n/**\n * Get input list data.\n */\nfunction getInutListData(inputData: ICreateActionContext<IGeneric<IAny>, IGeneric<IAny>>): IGeneric<IAny> {\n    let listData =\n        !inputData || !inputData.requestContext || !inputData.requestContext.pageData ? null : inputData.requestContext.pageData.list;\n    if (\n        !inputData ||\n        !inputData.requestContext ||\n        !inputData.requestContext.pageData ||\n        !inputData.requestContext.pageData.list ||\n        !inputData.requestContext.pageData.list.content ||\n        !inputData.requestContext.pageData.list.content.items ||\n        !inputData.requestContext.pageData.list.content.title ||\n        !inputData.requestContext.pageData.list._id\n    ) {\n        if (\n            !inputData ||\n            !inputData.data ||\n            !inputData.data.list ||\n            !inputData.data.list.content ||\n            !inputData.data.list.content.items ||\n            !inputData.data.list.content.title ||\n            !inputData.data.list._id\n        ) {\n            console.error('data is not well defined for list action input');\n            throw new Error('data is not well defined for list action input');\n        }\n\n        listData = inputData.data.list;\n    }\n    return listData;\n}\n\n/**\n * Get sub list item.\n */\nfunction getSubListItem(item: IGeneric<IAny>, sitePathOfRequest: string): ISubList {\n    const imageList: Image[] = getImages(item.fields.content.images);\n\n    const sublistHref = getSubListUrl(item.fields._name, sitePathOfRequest);\n    return {\n        Title: item.fields.content.title,\n        Description: item.fields.content.description,\n        ShortDescription: item.fields.content.shortDescription,\n        BackgroundColor: item.fields.content.backgroundColor,\n        ForegroundColor: item.fields.content.foregroundColor,\n        Href: sublistHref,\n        Images: imageList\n    };\n}\n\n/**\n * Get site path\n */\nfunction getSitePath(inputData: ICreateActionContext<IGeneric<IAny>, IGeneric<IAny>>): string {\n    // @ts-ignore\n    return inputData && inputData.requestContext && inputData.requestContext.sitePath ? inputData.requestContext.sitePath : '';\n}\n\n/**\n * Get items per page\n */\nfunction getItemsPerPage(inputData: ICreateActionContext<IGeneric<IAny>, IGeneric<IAny>>): number {\n    if (!inputData || !inputData.config || !inputData.config.itemsPerPage) {\n        return 50;\n    }\n\n    const result = Number(inputData.config.itemsPerPage);\n    if (isNaN(result)) {\n        return 50;\n    }\n\n    return result;\n}\n\n/**\n * Get skip count\n */\nfunction getSkipCount(inputData: ICreateActionContext<IGeneric<IAny>, IGeneric<IAny>>): number {\n    return inputData && inputData.requestContext && inputData.requestContext.query && inputData.requestContext.query.skipCount\n        ? Number(inputData.requestContext.query.skipCount)\n        : 0;\n}\n\n/**\n * Creates the input required to make the list call to get products.\n */\nconst createListInput = (inputData: ICreateActionContext<IGeneric<IAny>, IGeneric<IAny>>): IActionInput => {\n    const listData: IGeneric<IAny> = getInutListData(inputData);\n    const listItems: (IProductItem[] | ISubList)[] = [];\n    let productList: IProductItem[] = [];\n\n    const parentImageList: Image[] = getImages(listData.content.images);\n\n    const itemsPerPage = getItemsPerPage(inputData);\n    const skipCount = getSkipCount(inputData);\n\n    // This is the list contains all product and will be used to call getSimpleProducts data action.\n    const productItems: IProductItem[] = [];\n    const sum = skipCount + itemsPerPage;\n    for (let index = skipCount; index < listData.content.items.length && index < sum; index++) {\n        const item = listData.content.items[index];\n        if (item.type === ListItemType.list) {\n            if (!item.fields || !item.fields.content || !item.fields.content.title) {\n                console.error(`sublist item fields, content or title missing in list ${listData._id}`);\n                continue;\n            }\n\n            // if any elements in product list, then copy it and add to list items\n            if (!(productList.length === 0)) {\n                const clonedList = [...productList];\n                listItems.push(clonedList);\n                productList = [];\n            }\n\n            // build and add sublist item\n            listItems.push(getSubListItem(item, getSitePath(inputData)));\n        }\n\n        if (item.type === ListItemType.product) {\n            if (!item.fields || !item.fields.recordId) {\n                console.error(`product item missing recordId in list ${listData._id}`);\n                continue;\n            }\n\n            // add product item\n            const productItem: IProductItem = {\n                RecordId: item.fields.recordId,\n                CatalogId: item.fields.catalogId || '0'\n            };\n\n            productList.push(productItem);\n            productItems.push(productItem);\n        }\n    }\n\n    // save the last portion of product items.\n    if (!(productList.length === 0)) {\n        listItems.push(productList);\n    }\n\n    return new ListInput(\n        listData._id,\n        listData.content.title,\n        listData.content.description,\n        listData.content.shortDescription,\n        listData.content.backgroundColor,\n        listData.content.foregroundColor,\n        parentImageList,\n        listItems,\n        productItems,\n        listData.content.items.length,\n        itemsPerPage,\n        skipCount\n    );\n};\n\nexport default createObservableDataAction({\n    id: '@msdyn365-commerce-modules/retail-actions/get-list',\n    action: <IAction<List>>getListData,\n    input: createListInput\n});\n"],"sourceRoot":""},"metadata":{},"sourceType":"module"}