{"ast":null,"code":"import{DataServiceQuery}from'../DataServiceQuery';import{ProductCatalogClass}from'../Entities/CommerceModels.g';import{executeAction}from'../retail-action';function catalogsQuery(recordId){var key=recordId?{RecordId:recordId}:null;return new DataServiceQuery(\"Catalogs\",\"ProductCatalog\",ProductCatalogClass,key);}export function createCreateInput(entity){return catalogsQuery().create(entity);}export function createProductCatalogAsync(context,entity){const request=createCreateInput(entity);return executeAction(request,context);}export function createUpdateInput(entity){return catalogsQuery(entity.RecordId).update(entity);}export function updateAsync(context,entity){const request=createUpdateInput(entity);return executeAction(request,context);}export function createDeleteAsync(entity){return catalogsQuery(entity.RecordId).delete();}export function deleteAsync(context,entity){const request=createDeleteAsync(entity);return executeAction(request,context);}export function createReadAsync(recordId){return catalogsQuery(recordId).read();}export function readAsync(context,recordId){const request=createReadAsync(recordId);return executeAction(request,context);}export function createReadAllAsync(queryResultSettings){return catalogsQuery().resultSettings(queryResultSettings).read();}export function readAllAsync(context){const request=createReadAllAsync(context.queryResultSettings);return executeAction(request,context);}export function createGetCatalogsInput(queryResultSettings,channelId,activeOnly){const query=catalogsQuery().resultSettings(queryResultSettings);return query.createDataServiceRequestForOperation('GetCatalogs',true,ProductCatalogClass,'true',{bypassCache:'none',returnEntity:'ProductCatalog'},{channelId:channelId,activeOnly:activeOnly});}export function getCatalogsAsync(context,channelId,activeOnly){const request=createGetCatalogsInput(context.queryResultSettings,channelId,activeOnly);return executeAction(request,context);}","map":{"version":3,"sources":["../../src/DataActions/CatalogsDataActions.g.ts"],"names":[],"mappings":"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","sourcesContent":["    // <auto-generated />\n    import { AsyncResult } from '../async-result';\n    import { DataServiceQuery } from '../DataServiceQuery';\n    import { ProductCatalog } from '../Entities/CommerceTypes.g';\n    import { ProductCatalogClass } from '../Entities/CommerceModels.g';\n    import { IContext, IDataServiceRequest, IQueryResultSettings, NullResult } from '../Interfaces';\n    import { executeAction } from '../retail-action';\n    \n    \n    function catalogsQuery(recordId?: number): DataServiceQuery {\n      var key = (recordId) ? { RecordId: recordId } : null;\n      return new DataServiceQuery(\"Catalogs\", \"ProductCatalog\", ProductCatalogClass, key);\n    }\n    \n    export function createCreateInput(entity: ProductCatalog): IDataServiceRequest {\n        return catalogsQuery().create(entity);\n    }\n    export function createProductCatalogAsync(context: IContext, entity: ProductCatalog): AsyncResult<ProductCatalog> {\n        const request = createCreateInput(entity, );\n        return executeAction<ProductCatalog>(request, context);\n    }\n    export function createUpdateInput(entity: ProductCatalog): IDataServiceRequest {\n        return catalogsQuery(entity.RecordId).update(entity);\n    }\n    export function updateAsync(context: IContext, entity: ProductCatalog): AsyncResult<ProductCatalog> {\n        const request = createUpdateInput(entity, );\n        return executeAction<ProductCatalog>(request, context);\n    }\n    export function createDeleteAsync(entity: ProductCatalog): IDataServiceRequest {\n        return catalogsQuery(entity.RecordId).delete();\n    }\n    export function deleteAsync(context: IContext, entity: ProductCatalog): AsyncResult<NullResult> {\n        const request = createDeleteAsync(entity, );\n        return executeAction<NullResult>(request, context);\n    }\n    export function createReadAsync(recordId: number): IDataServiceRequest {\n        return catalogsQuery(recordId).read();\n    }\n    export function readAsync(context: IContext, recordId: number): AsyncResult<ProductCatalog> {\n        const request = createReadAsync(recordId, );\n        return executeAction<ProductCatalog>(request, context);\n    }\n    export function createReadAllAsync(queryResultSettings: IQueryResultSettings): IDataServiceRequest {\n        return catalogsQuery().resultSettings(queryResultSettings).read();\n    }\n    export function readAllAsync(context: IContext): AsyncResult<ProductCatalog[]> {\n        const request = createReadAllAsync(context.queryResultSettings, );\n        return executeAction<ProductCatalog[]>(request, context);\n    }\n    \n    export function createGetCatalogsInput(queryResultSettings: IQueryResultSettings, channelId: number, activeOnly: boolean): IDataServiceRequest {      \n        const query = catalogsQuery().resultSettings(queryResultSettings);\n        return query.createDataServiceRequestForOperation('GetCatalogs', true, ProductCatalogClass, 'true', { bypassCache: 'none', returnEntity: 'ProductCatalog'}, {channelId: channelId, activeOnly: activeOnly });\n    }    \n    \n    export function getCatalogsAsync(context: IContext, channelId: number, activeOnly: boolean):AsyncResult<ProductCatalog[]> {\n        const request = createGetCatalogsInput(context.queryResultSettings, channelId, activeOnly, );\n        return executeAction<ProductCatalog[]>(request, context);\n    }          \n          \n    "],"sourceRoot":""},"metadata":{},"sourceType":"module"}