{
  "account-generic-tile": {
    "friendlyName": "Account generic tile",
    "name": "account-generic-tile",
    "description": "Account generic item is used to show static information in the account management page",
    "categories": [
      "Account management"
    ],
    "config": {
      "heading": {
        "friendlyName": "Heading",
        "description": "Module heading",
        "type": "object",
        "properties": {
          "text": {
            "type": "string",
            "friendlyName": "Heading Text",
            "description": "Heading Text",
            "default": "Heading",
            "required": true
          },
          "tag": {
            "type": "string",
            "friendlyName": "Heading Level",
            "description": "Heading Tag",
            "enum": {
              "h1": "H1",
              "h2": "H2",
              "h3": "H3",
              "h4": "H4",
              "h5": "H5",
              "h6": "H6"
            },
            "default": "h2"
          }
        }
      },
      "links": {
        "type": "array",
        "friendlyName": "Links",
        "description": "Links",
        "items": {
          "type": "object",
          "friendlyName": "Action Link",
          "description": "Action Link property",
          "properties": {
            "linkText": {
              "type": "string",
              "friendlyName": "Link text",
              "description": "Text for call to action link",
              "default": "Link text "
            },
            "linkUrl": {
              "type": "link",
              "friendlyName": "Link target",
              "description": "Destination url for link",
              "required": true
            },
            "ariaLabel": {
              "type": "string",
              "friendlyName": "Link aria label",
              "description": "Aria Label for link",
              "default": ""
            },
            "openInNewTab": {
              "type": "boolean",
              "friendlyName": "Open in new tab",
              "description": "Open the link in a new tab",
              "default": false
            }
          }
        },
        "required": true
      },
      "className": {
        "friendlyName": "Custom CSS class name",
        "description": "Provide a custom css class name defined in the theme pack to target the CSS for this module",
        "type": "string",
        "default": ""
      }
    },
    "type": "contentModule"
  },
  "back-top-footer": {
    "friendlyName": "Back to top",
    "name": "back-top-footer",
    "description": "Back to top allows quick navigation to the top of the page",
    "categories": [
      "footer"
    ],
    "attributes": {
      "private": true
    },
    "config": {
      "backtoTopText": {
        "friendlyName": "Text",
        "description": "Text displayed in the back to top module",
        "type": "string",
        "scope": "module"
      },
      "destination": {
        "friendlyName": "Destination",
        "description": "Sets the #href to treat as the top and jump to. Must start with #",
        "type": "string",
        "scope": "module"
      },
      "ariaLabel": {
        "friendlyName": "Aria label",
        "description": "Back to top aria label value",
        "type": "string",
        "scope": "module"
      },
      "title": {
        "friendlyName": "Tooltip",
        "description": "Tooltip for Back to top button",
        "type": "string",
        "scope": "module"
      },
      "className": {
        "friendlyName": "Custom CSS class name",
        "description": "Provide a custom css class name defined in the theme pack to target the CSS for this module",
        "type": "string",
        "default": ""
      }
    },
    "type": "contentModule"
  },
  "account-profile-edit": {
    "friendlyName": "User profile edit",
    "name": "account-profile-edit",
    "description": "Allows users to edit account information.",
    "categories": [
      "AzureActiveDirectoryModules"
    ],
    "config": {
      "heading": {
        "friendlyName": "Heading",
        "description": "Module heading",
        "required": true,
        "type": "object",
        "properties": {
          "text": {
            "type": "string",
            "friendlyName": "Heading Text",
            "description": "Heading Text",
            "default": "Heading",
            "required": true
          },
          "tag": {
            "type": "string",
            "friendlyName": "Heading Level",
            "description": "Heading Tag",
            "enum": {
              "h1": "H1",
              "h2": "H2",
              "h3": "H3",
              "h4": "H4",
              "h5": "H5",
              "h6": "H6"
            },
            "default": "h2"
          }
        }
      },
      "showEmail": {
        "friendlyName": "Show email",
        "description": "Show email",
        "type": "boolean",
        "default": true,
        "scope": "module"
      },
      "className": {
        "friendlyName": "Custom CSS class name",
        "description": "Provide a custom css class name defined in the theme pack to target the CSS for this module",
        "type": "string",
        "default": ""
      }
    },
    "resources": {
      "firstNameLabelText": {
        "value": "First name *",
        "comment": "Text display as label for first name textbox."
      },
      "firstNameMaxLength": {
        "comment": "Maximum number for character is allowed for first name.",
        "value": "20"
      },
      "lastNameLabelText": {
        "value": "Last name *",
        "comment": "Text display as label for last name textbox."
      },
      "lastNameMaxLength": {
        "comment": "Maximum number for character is allowed for first name.",
        "value": "20"
      },
      "emailAddressLabelText": {
        "value": "Email address",
        "comment": "Text display as label for email address textbox."
      },
      "saveButtonText": {
        "value": "Save",
        "comment": "Save button text."
      },
      "saveButtonAriaLabel": {
        "value": "Save",
        "comment": "Save button aria label."
      },
      "cancelButtonText": {
        "value": "Cancel",
        "comment": "Cancel button text."
      },
      "cancelButtonAriaLabel": {
        "value": "Cancel",
        "comment": "Cancel button aria label."
      },
      "requiredFieldMissingSummaryError": {
        "value": "A required field is missing. Please fill out all required fields and try again.",
        "comment": "Field missing error summary."
      },
      "requiredFieldMissingError": {
        "value": "This information is required.",
        "comment": "Field missing error message."
      },
      "fieldIncorrectError": {
        "value": "One or more fields are filled out incorrectly. Please check your entries and try again.",
        "comment": "Field incorrect error message."
      },
      "invalidEmailAddressError": {
        "value": "Please enter a valid email address.",
        "comment": "Email address invalid field error message."
      },
      "loadingMessage": {
        "value": "Please wait.",
        "comment": "Loading message."
      }
    },
    "type": "contentModule"
  },
  "business-sign-up": {
    "friendlyName": "Partner Sign up",
    "name": "business-sign-up",
    "description": "Allows users to begin their journey of associating with a site by registering.  Module captures user information such as name, email address, password etc.",
    "categories": [
      "Account management",
      "Sign-in"
    ],
    "config": {
      "heading": {
        "friendlyName": "Heading",
        "description": "Section Heading.",
        "required": true,
        "type": "object",
        "properties": {
          "text": {
            "type": "string",
            "friendlyName": "Heading Text",
            "description": "Heading Text",
            "default": "Heading",
            "required": true
          },
          "tag": {
            "type": "string",
            "friendlyName": "Heading Level",
            "description": "Heading Tag",
            "enum": {
              "h1": "H1",
              "h2": "H2",
              "h3": "H3",
              "h4": "H4",
              "h5": "H5",
              "h6": "H6"
            },
            "default": "h2"
          }
        }
      },
      "className": {
        "friendlyName": "Custom CSS class name",
        "description": "Provide a custom css class name defined in the theme pack to target the CSS for this module",
        "type": "string",
        "default": ""
      },
      "disclaimer": {
        "friendlyName": "Disclaimer text",
        "description": "Disclaimer text",
        "type": "richText"
      },
      "confirmationLink": {
        "friendlyName": "Link to the Sign-Up-Confirmation page",
        "description": "Link to the Sign-Up-Confirmation page",
        "required": true,
        "type": "object",
        "properties": {
          "linkText": {
            "type": "string",
            "friendlyName": "Link text",
            "description": "Text for call to action link",
            "default": "Link text "
          },
          "linkUrl": {
            "type": "link",
            "friendlyName": "Link target",
            "description": "Destination url for link",
            "required": true
          },
          "ariaLabel": {
            "type": "string",
            "friendlyName": "Link aria label",
            "description": "Aria Label for link",
            "default": ""
          },
          "openInNewTab": {
            "type": "boolean",
            "friendlyName": "Open in new tab",
            "description": "Open the link in a new tab",
            "default": false
          }
        }
      }
    },
    "slots": {
      "addressSlot": {
        "friendlyName": "Slot for the address form",
        "description": "Slot for the address form",
        "allowedTypes": [
          "business-account-address"
        ],
        "min": 0,
        "max": 1
      }
    },
    "resources": {
      "firstNameLabel": {
        "comment": "Text display as label for first name textbox.",
        "value": "First name*"
      },
      "firstNameMaxLength": {
        "comment": "Maximum number for character is allowed for first name.",
        "value": "20"
      },
      "lastNameLabel": {
        "comment": "Text display as label for last name textbox.",
        "value": "Last name*"
      },
      "lastNameMaxLength": {
        "comment": "Maximum number for character is allowed for last name.",
        "value": "20"
      },
      "emailAddressLabel": {
        "comment": "Text display as label for email address textbox.",
        "value": "Email address*"
      },
      "phoneLabelText": {
        "comment": "Text display as label for phone number textbox.",
        "value": "Phone"
      },
      "phoneMaxLength": {
        "comment": "Maximum number for character is allowed for phnoe number.",
        "value": "20"
      },
      "companyLabel": {
        "comment": "Text display as label for company name textbox.",
        "value": "Company *"
      },
      "companyMaxLength": {
        "comment": "Maximum number for character is allowed for company name.",
        "value": "20"
      },
      "companyAddressLabel": {
        "comment": "Text display as label for company address textbox.",
        "value": "Company address"
      },
      "companyAddressMaxLength": {
        "comment": "Maximum number for character is allowed for company address.",
        "value": "20"
      },
      "jobTitleLabel": {
        "comment": "Text display as label for job title textbox.",
        "value": "Job"
      },
      "jobTitleMaxLength": {
        "comment": "Maximum number for character is allowed for job title.",
        "value": "20"
      },
      "departmentLabel": {
        "comment": "Text display as label for department textbox.",
        "value": "Department"
      },
      "departmentMaxLength": {
        "comment": "Maximum number for character is allowed for department.",
        "value": "20"
      },
      "companySizeLabel": {
        "comment": "Text display as label for company size textbox.",
        "value": "Company size"
      },
      "companySizeMaxLength": {
        "comment": "Maximum number for character is allowed for company size.",
        "value": "20"
      },
      "commentLabel": {
        "comment": "Text display as label for comment textbox.",
        "value": "Comment"
      },
      "commentMaxLength": {
        "comment": "Maximum number for character is allowed for comment.",
        "value": "200"
      },
      "errorMessage": {
        "comment": "Text for the error message while creating a new business request form",
        "value": "Sorry we are unable to submit your request at this moment, please try again later."
      },
      "signUpButtonText": {
        "comment": "Sign-up button text",
        "value": "Sign up"
      },
      "signUpButtonArialabel": {
        "comment": "Sign-up button aria label",
        "value": "Sign up"
      },
      "cancelButtonText": {
        "comment": "Cancel button text",
        "value": "Cancel"
      },
      "cancelButtonArialabel": {
        "comment": "Cancel button aria label",
        "value": "Cancel"
      },
      "requiredFieldMissingSummaryError": {
        "comment": "Field missing error summary.",
        "value": "A required field is missing. Please fill out all required fields and try again."
      },
      "requiredFieldMissingError": {
        "comment": "Field missing error message.",
        "value": "This information is required."
      },
      "fieldIncorrectError": {
        "comment": " Field incorrect error message.",
        "value": "One or more fields are filled out incorrectly. Please check your entries and try again."
      },
      "partialAddressErrorMessage": {
        "comment": "Error to show if user tries to submit a partial address",
        "value": "Address fields are optional. If you choose to submit an address, please complete the rest of the address fields."
      }
    },
    "type": "containerModule"
  },
  "category-page-summary": {
    "friendlyName": "Category page summary",
    "name": "category-page-summary",
    "description": "Supports page summary metadata for category page which can be used by search engines and social sharing sites, including the canonical link.",
    "categories": [
      "SEO",
      "HTML head"
    ],
    "config": {
      "title": {
        "friendlyName": "title",
        "description": "The title of the webpage",
        "type": "string"
      },
      "description": {
        "friendlyName": "description",
        "description": "A brief description of the page contents",
        "type": "string"
      },
      "keywords": {
        "friendlyName": "keywords",
        "description": "A series of comma separated keywords that are relevant to the page",
        "type": "string"
      },
      "faviconUrl": {
        "friendlyName": "favicon",
        "description": "Link to the image used as your website's favicon",
        "type": "string",
        "editable": false
      },
      "disableTwitterTags": {
        "friendlyName": "Disable Twitter Tags",
        "description": "Disables rendering the Twitter tags",
        "type": "boolean",
        "default": false
      },
      "sharingImage": {
        "friendlyName": "Sharing Image",
        "description": "Image to use for sharing",
        "type": "image"
      },
      "disableOgTags": {
        "friendlyName": "Disable Facebook OG Tags",
        "description": "Disables rendering the Facebook tags",
        "type": "boolean",
        "default": false
      },
      "ignoreTitleSuffixPrefix": {
        "friendlyName": "Ignores the prefix and suffix specified in the application settings",
        "description": "Ignores the prefix and suffix specified in the application settings",
        "type": "boolean",
        "default": false
      }
    },
    "type": "htmlHeadTagsModule"
  },
  "checkout-section-container": {
    "friendlyName": "Checkout section container",
    "name": "checkout-section-container",
    "description": "Checkout section container is used to place multiple modules within a section of the checkout flow",
    "categories": [
      "Purchase",
      "Payment"
    ],
    "attributes": {
      "private": true
    },
    "config": {
      "heading": {
        "friendlyName": "Heading",
        "description": "Module heading",
        "type": "object",
        "properties": {
          "text": {
            "type": "string",
            "friendlyName": "Heading Text",
            "description": "Heading Text",
            "default": "Heading",
            "required": true
          },
          "tag": {
            "type": "string",
            "friendlyName": "Heading Level",
            "description": "Heading Tag",
            "enum": {
              "h1": "H1",
              "h2": "H2",
              "h3": "H3",
              "h4": "H4",
              "h5": "H5",
              "h6": "H6"
            },
            "default": "h2"
          }
        }
      },
      "width": {
        "friendlyName": "Width",
        "description": "Container can be fluid (expand edge to edge) or grid (within a grid container)",
        "type": "string",
        "enum": {
          "container": "Fill container",
          "fluid": "Fill screen"
        },
        "default": "fluid"
      },
      "className": {
        "friendlyName": "Custom CSS class name",
        "description": "Provide a custom css class name defined in the theme pack to target the CSS for this module",
        "type": "string",
        "default": ""
      }
    },
    "slots": {
      "primary": {
        "friendlyName": "Primary",
        "description": "This contains the checkout information like shipping address, payment instrument and etc. This content is in the left slot ",
        "max": 10,
        "min": 1,
        "allowedTypes": [
          "checkout-shipping-address",
          "checkout-billing-address",
          "checkout-guest-profile",
          "checkout-delivery-options",
          "checkout-gift-card",
          "checkout-loyalty",
          "checkout-payment-instrument",
          "checkout-terms-and-conditions",
          "text-block",
          "loyalty-terms",
          "checkout-customer-account-payment"
        ]
      }
    },
    "type": "containerModule"
  },
  "content-block": {
    "friendlyName": "Content block",
    "name": "content-block",
    "categories": [
      "Promotions",
      "Marketing"
    ],
    "description": "Content block is used to promote marketing content using rich imagery.",
    "config": {
      "heading": {
        "friendlyName": "Heading",
        "description": "Heading",
        "type": "object",
        "properties": {
          "text": {
            "type": "string",
            "friendlyName": "Heading Text",
            "description": "Heading Text",
            "default": "Heading",
            "required": true
          },
          "tag": {
            "type": "string",
            "friendlyName": "Heading Level",
            "description": "Heading Tag",
            "enum": {
              "h1": "H1",
              "h2": "H2",
              "h3": "H3",
              "h4": "H4",
              "h5": "H5",
              "h6": "H6"
            },
            "default": "h2"
          }
        }
      },
      "paragraph": {
        "type": "richText",
        "friendlyName": "Rich Text",
        "description": "Paragraph Text"
      },
      "image": {
        "type": "image",
        "friendlyName": "Image",
        "description": "Feature image"
      },
      "links": {
        "type": "array",
        "friendlyName": "Links",
        "description": "Action links",
        "items": {
          "type": "object",
          "friendlyName": "Action Link",
          "description": "Action Link property",
          "properties": {
            "linkText": {
              "type": "string",
              "friendlyName": "Link text",
              "description": "Text for call to action link",
              "default": "Link text "
            },
            "linkUrl": {
              "type": "link",
              "friendlyName": "Link target",
              "description": "Destination url for link",
              "required": true
            },
            "ariaLabel": {
              "type": "string",
              "friendlyName": "Link aria label",
              "description": "Aria Label for link",
              "default": ""
            },
            "openInNewTab": {
              "type": "boolean",
              "friendlyName": "Open in new tab",
              "description": "Open the link in a new tab",
              "default": false
            }
          }
        }
      },
      "actionableRegion": {
        "friendlyName": "Actionable region",
        "description": "Defines the actionable regions of the content block",
        "type": "string",
        "enum": {
          "imageAndLinks": "Image and links",
          "linksOnly": "links only"
        },
        "default": "linksOnly",
        "scope": "module"
      },
      "imageLink": {
        "type": "link",
        "friendlyName": "Link for image",
        "description": "Optional link for image if image is actionable"
      },
      "imageAriaLabel": {
        "friendlyName": "Aria label for image link",
        "description": "Aria label if image link is provided",
        "type": "string"
      },
      "className": {
        "friendlyName": "Custom CSS class name",
        "description": "Provide a custom css class name defined in the theme pack to target the CSS for this module",
        "type": "string",
        "default": ""
      }
    },
    "type": "contentModule"
  },
  "cookie-compliance": {
    "friendlyName": "Cookie consent",
    "name": "cookie-compliance",
    "description": "Cookie consent module allows users to consent for cookie usage on the site",
    "categories": [
      "Compliance"
    ],
    "config": {
      "content": {
        "friendlyName": "Rich text",
        "description": "Text to display in the module",
        "type": "richText"
      },
      "actionLinks": {
        "type": "array",
        "friendlyName": "Links",
        "description": "Link to display inline with the text ",
        "items": {
          "type": "object",
          "friendlyName": "Action Link",
          "description": "Action Link property",
          "properties": {
            "linkText": {
              "type": "string",
              "friendlyName": "Link text",
              "description": "Text for call to action link",
              "default": "Link text "
            },
            "linkUrl": {
              "type": "link",
              "friendlyName": "Link target",
              "description": "Destination url for link",
              "required": true
            },
            "ariaLabel": {
              "type": "string",
              "friendlyName": "Link aria label",
              "description": "Aria Label for link",
              "default": ""
            },
            "openInNewTab": {
              "type": "boolean",
              "friendlyName": "Open in new tab",
              "description": "Open the link in a new tab",
              "default": false
            }
          }
        }
      },
      "className": {
        "friendlyName": "Custom CSS class name",
        "description": "Provide a custom css class name defined in the theme pack to target the CSS for this module",
        "type": "string",
        "default": ""
      }
    },
    "resources": {
      "acceptCookiesButtonText": {
        "comment": "Text for the accept cookies button",
        "value": "Accept"
      },
      "acceptCookiesAriaLabel": {
        "comment": "Aria label for the accept cookies button",
        "value": "Accept cookies"
      }
    },
    "type": "contentModule"
  },
  "default-external-script": {
    "friendlyName": "External script",
    "name": "default-external-script",
    "description": "Used to insert scripts into the page from an external source",
    "categories": [
      "Script",
      "HTML head"
    ],
    "tags": [
      "script",
      "sdk-modules",
      "external"
    ],
    "attributes": {
      "allowInBodyBegin": true,
      "allowInBodyEnd": true,
      "allowInHead": true
    },
    "config": {
      "scriptSource": {
        "friendlyName": "Script source",
        "description": "The script source. Can be an external URL or a relative URL. Relative URLs are resolved from the public folder",
        "type": "string",
        "group": "script tag",
        "required": true
      },
      "async": {
        "friendlyName": "execute script asynchronously",
        "description": "specifies that the script is executed asynchronously",
        "type": "boolean",
        "default": false
      },
      "defer": {
        "friendlyName": "defer script execution",
        "description": "Specifies that the script is executed when the page has finished parsing",
        "type": "boolean",
        "default": false
      }
    },
    "type": "scriptModule"
  },
  "default-inline-script": {
    "friendlyName": "Inline script",
    "name": "default-inline-script",
    "description": "Used to insert inline scripts into the page",
    "categories": [
      "Script",
      "HTML head"
    ],
    "tags": [
      "script",
      "sdk-modules",
      "inline"
    ],
    "attributes": {
      "allowInBodyBegin": true,
      "allowInBodyEnd": true,
      "allowInHead": true
    },
    "config": {
      "inlineScript": {
        "friendlyName": "Inline script",
        "description": "The collection of scripting statements that will be inserted inline into script tags",
        "type": "string",
        "group": "script tag",
        "required": true,
        "editorStyle": "multiLineText",
        "format": "multiLineText"
      }
    },
    "type": "scriptModule"
  },
  "default-page": {
    "friendlyName": "Default Page",
    "name": "default-page",
    "description": "SDK Provided default page",
    "categories": [
      "page",
      "sdk-modules"
    ],
    "attributes": {
      "private": false
    },
    "config": {
      "skipToMainText": {
        "friendlyName": "Skip to main text",
        "description": "Skip to main text",
        "type": "string",
        "default": "Skip to main content",
        "group": "data"
      }
    },
    "slots": {
      "header": {
        "friendlyName": "Header Slot",
        "description": "This is the header slot",
        "allowedCategories": [
          "header",
          "container"
        ],
        "max": 10,
        "min": 0
      },
      "subheader": {
        "friendlyName": "Sub Header Slot",
        "description": "This is the sub header slot",
        "allowedCategories": [
          "sub-header",
          "container"
        ],
        "max": 10,
        "min": 0
      },
      "primary": {
        "friendlyName": "Main Slot",
        "description": "This is the Primary slot",
        "allowedTypes": "*",
        "excludeCategories": [
          "header",
          "footer"
        ],
        "max": 50,
        "min": 0
      },
      "subfooter": {
        "friendlyName": "Sub Footer Slot",
        "description": "This is the sub footer slot",
        "allowedCategories": [
          "sub-footer",
          "container"
        ],
        "max": 10,
        "min": 0
      },
      "footer": {
        "friendlyName": "Footer Slot",
        "description": "This is the footer slot",
        "allowedCategories": [
          "footer",
          "container"
        ],
        "max": 10,
        "min": 0
      }
    },
    "type": "pageModule"
  },
  "fabrikam": {
    "friendlyName": "Fabrikam",
    "name": "fabrikam",
    "description": "This is fabrikam-theme theme.",
    "type": "themeModule"
  },
  "footer-item": {
    "friendlyName": "Footer item",
    "name": "footer-item",
    "description": "Footer with a heading a list of links.",
    "categories": [
      "footer"
    ],
    "moduleGroup": "footer",
    "attributes": {
      "private": true
    },
    "config": {
      "heading": {
        "friendlyName": "Heading",
        "description": "Footer item title",
        "type": "object",
        "properties": {
          "text": {
            "type": "string",
            "friendlyName": "Heading Text",
            "description": "Heading Text",
            "default": "Heading",
            "required": true
          },
          "tag": {
            "type": "string",
            "friendlyName": "Heading Level",
            "description": "Heading Tag",
            "enum": {
              "h1": "H1",
              "h2": "H2",
              "h3": "H3",
              "h4": "H4",
              "h5": "H5",
              "h6": "H6"
            },
            "default": "h2"
          }
        }
      },
      "link": {
        "friendlyName": "Link",
        "description": "Footer item link",
        "type": "object",
        "properties": {
          "linkText": {
            "type": "string",
            "friendlyName": "Link text",
            "description": "Text for call to action link",
            "default": "Link text "
          },
          "linkUrl": {
            "type": "link",
            "friendlyName": "Link target",
            "description": "Destination url for link",
            "required": true
          },
          "ariaLabel": {
            "type": "string",
            "friendlyName": "Link aria label",
            "description": "Aria Label for link",
            "default": ""
          },
          "openInNewTab": {
            "type": "boolean",
            "friendlyName": "Open in new tab",
            "description": "Open the link in a new tab",
            "default": false
          }
        }
      },
      "image": {
        "friendlyName": "Image",
        "description": "Footer item image",
        "type": "image"
      },
      "text": {
        "friendlyName": "Text",
        "description": "Footer item text",
        "type": "string"
      },
      "className": {
        "friendlyName": "Custom CSS class name",
        "description": "Provide a custom css class name defined in the theme pack to target the CSS for this module",
        "type": "string",
        "default": ""
      }
    },
    "type": "moduleDefinition"
  },
  "footer-category": {
    "friendlyName": "Footer category",
    "name": "footer-category",
    "description": "Footer category allows you to display multiple footer items based on category header",
    "categories": [
      "footer"
    ],
    "tags": [
      "footer"
    ],
    "slots": {
      "content": {
        "friendlyName": "Content slot",
        "description": "footer content slot",
        "allowedTypes": [
          "footer-item",
          "text-block",
          "back-top-footer"
        ],
        "allowedCategories": [
          "footer"
        ],
        "min": 1,
        "max": 100
      }
    },
    "config": {
      "categoryClassName": {
        "friendlyName": "Category class name",
        "description": "Category class name",
        "type": "string"
      }
    },
    "type": "containerModule"
  },
  "gift-card-balance-check": {
    "friendlyName": "gift-card-balance-check",
    "name": "gift-card-balance-check",
    "description": "Check balance for gift card",
    "categories": [
      "gift-card-balance-check"
    ],
    "tags": [
      "Additional tags go here"
    ],
    "dataActions": {},
    "config": {
      "className": {
        "friendlyName": "Custom CSS class name",
        "description": "Provide a custom css class name defined in the theme pack to target the CSS for this module",
        "type": "string",
        "default": ""
      },
      "showAdditionalFields": {
        "friendlyName": "Show additional fields",
        "description": "This property allows you to define which fields should be shown in addition to the gift card number field",
        "type": "string",
        "enum": {
          "pin": "Pin",
          "expirationDate": "Expiry date",
          "pinAndExpirationDate": "Pin and Expiry date"
        },
        "scope": "module"
      }
    },
    "resources": {
      "emptyInputError": {
        "comment": "Error message for no gift card code entered",
        "value": "Please enter a gift card number"
      },
      "invalidCodeError": {
        "comment": "Error message for invalid gift card code entered",
        "value": "Invalid gift card code entered"
      },
      "invalidCardInfoError": {
        "comment": "Error message for invalid gift card information entered",
        "value": "Invalid gift card information entered"
      },
      "invalidCardTypeError": {
        "comment": "Error message for invalid gift card type",
        "value": "The gift card type is not supported"
      },
      "noCardPinError": {
        "comment": "Error message for missing required gift card pin",
        "value": "Gift card PIN is required"
      },
      "noCardExpError": {
        "comment": "Error message for missing required gift card expiration date",
        "value": "Gift card expiration date is required"
      },
      "noBalanceError": {
        "comment": "Error message for gift card has 0 balance",
        "value": "Gift card has no balance left"
      },
      "giftCardFormLabel": {
        "comment": "Gift card form label",
        "value": "Gift card"
      },
      "giftCardNumberLabel": {
        "comment": "Gift card number label",
        "value": "Gift card number"
      },
      "giftCardPinLabel": {
        "comment": "Gift card pin label",
        "value": "PIN"
      },
      "giftCardExpLabel": {
        "comment": "Gift card expiration date label",
        "value": "Expiration date"
      },
      "giftCardPinPlaceholderText": {
        "comment": "Text for gift card pin place holder",
        "value": "PIN"
      },
      "giftCardExpPlaceholderText": {
        "comment": "Text for gift card expiratio date place holder",
        "value": "MM/YYYY"
      },
      "giftCardAlertLabel": {
        "comment": "Gift card input fields alert label",
        "value": "Your gift card may or may not include these fields"
      },
      "balanceCheckButton": {
        "comment": "Label for balance check button",
        "value": "Balance check"
      },
      "giftCardAvailableBalanceLabel": {
        "comment": "Label about gift card entered with balance and giftCardIssueAmount",
        "value": "Available balance"
      },
      "enteredGiftCardLabel": {
        "comment": "Label about gift card entered with balance and giftCardIssueAmount",
        "value": "Gift card ending in"
      }
    },
    "type": "contentModule"
  },
  "iframe": {
    "friendlyName": "iframe",
    "name": "iframe",
    "description": "Iframe used to render content from a specified URL",
    "categories": [
      "iframe"
    ],
    "config": {
      "heading": {
        "friendlyName": "Heading",
        "description": "iFrame's heading",
        "type": "object",
        "properties": {
          "text": {
            "type": "string",
            "friendlyName": "Heading Text",
            "description": "Heading Text",
            "default": "Heading",
            "required": true
          },
          "tag": {
            "type": "string",
            "friendlyName": "Heading Level",
            "description": "Heading Tag",
            "enum": {
              "h1": "H1",
              "h2": "H2",
              "h3": "H3",
              "h4": "H4",
              "h5": "H5",
              "h6": "H6"
            },
            "default": "h2"
          }
        }
      },
      "target": {
        "friendlyName": "Target URL",
        "description": "Target URL of external content for iframe. Should be HTTPS only",
        "scope": "module",
        "required": true,
        "type": "link"
      },
      "height": {
        "friendlyName": "Height",
        "description": "iFrame's height in pixels or percentage",
        "type": "string",
        "default": "100%",
        "scope": "module",
        "required": false
      },
      "className": {
        "friendlyName": "Custom CSS class name",
        "description": "Provide a custom css class name defined in the theme pack to target the CSS for this module",
        "type": "string",
        "default": ""
      },
      "iframeAriaLabel": {
        "friendlyName": "Aria-label",
        "description": "Aria-Label for iframe",
        "type": "string",
        "default": "iframe",
        "scope": "module",
        "required": false
      }
    },
    "resources": {
      "cookieConsentRequiredMessage": {
        "comment": "Localized text for cookie consent required message",
        "value": "Cookie consent required to load this content. See cookie banner on the page for more details."
      }
    },
    "type": "contentModule"
  },
  "password-reset": {
    "friendlyName": "Password reset",
    "name": "password-reset",
    "description": "Allows user to reset password.",
    "categories": [
      "Account management",
      "Sign-in"
    ],
    "config": {
      "heading": {
        "friendlyName": "Heading",
        "description": "Module heading",
        "type": "object",
        "properties": {
          "text": {
            "type": "string",
            "friendlyName": "Heading Text",
            "description": "Heading Text",
            "default": "Heading",
            "required": true
          },
          "tag": {
            "type": "string",
            "friendlyName": "Heading Level",
            "description": "Heading Tag",
            "enum": {
              "h1": "H1",
              "h2": "H2",
              "h3": "H3",
              "h4": "H4",
              "h5": "H5",
              "h6": "H6"
            },
            "default": "h2"
          }
        }
      },
      "className": {
        "friendlyName": "Custom CSS class name",
        "description": "Provide a custom css class name defined in the theme pack to target the CSS for this module",
        "type": "string",
        "default": ""
      }
    },
    "resources": {
      "newPasswordLabelText": {
        "value": "New password *",
        "comment": "Text display as placeholder in new password label."
      },
      "confirmPasswordLabelText": {
        "value": "Confirm password *",
        "comment": "Text display as label for confirm password textbox."
      },
      "saveButtonText": {
        "value": "Save",
        "comment": "Save button text."
      },
      "saveButtonAriaLabel": {
        "value": "Save",
        "comment": "Save button aria label."
      },
      "cancelButtonText": {
        "value": "Cancel",
        "comment": "Cancel button text."
      },
      "cancelButtonAriaLabel": {
        "value": "Cancel",
        "comment": "Cancel button aria label."
      },
      "passwordEntryMismatchError": {
        "value": "The password entry fields do not match. Please enter the same password in both fields and try again.",
        "comment": "Error to display when password mismatch."
      },
      "requiredFieldMissingError": {
        "value": "A required field is missing. Please fill out all required fields and try again.",
        "comment": "Field missing error message."
      },
      "fieldIncorrectError": {
        "value": "One or more fields are filled out incorrectly. Please check your entries and try again.",
        "comment": "Error to display when field is incorrect."
      },
      "invalidPasswordError": {
        "value": "Please enter a valid password.",
        "comment": "Error to display user enter invalid password."
      },
      "loadingMessage": {
        "value": "Please wait.",
        "comment": "Loading message."
      }
    },
    "type": "contentModule"
  },
  "password-reset-verification": {
    "friendlyName": "Password verification",
    "name": "password-reset-verification",
    "description": "Allows user to verify email address before reseting password",
    "categories": [
      "Account management",
      "Sign-in"
    ],
    "config": {
      "heading": {
        "friendlyName": "Heading",
        "description": "Module heading",
        "type": "object",
        "properties": {
          "text": {
            "type": "string",
            "friendlyName": "Heading Text",
            "description": "Heading Text",
            "default": "Heading",
            "required": true
          },
          "tag": {
            "type": "string",
            "friendlyName": "Heading Level",
            "description": "Heading Tag",
            "enum": {
              "h1": "H1",
              "h2": "H2",
              "h3": "H3",
              "h4": "H4",
              "h5": "H5",
              "h6": "H6"
            },
            "default": "h2"
          }
        }
      },
      "className": {
        "friendlyName": "Custom CSS class name",
        "description": "Provide a custom css class name defined in the theme pack to target the CSS for this module",
        "type": "string",
        "default": ""
      }
    },
    "resources": {
      "emailAddressLabelText": {
        "value": "Email address *",
        "comment": "Text display as label for email address textbox."
      },
      "verificationCodeLabelText": {
        "value": "Verification code *",
        "comment": "Text display as label for verification code textbox."
      },
      "sendCodeButtonText": {
        "value": "Send verification code",
        "comment": "Send code button text."
      },
      "sendCodeButtonAriaLabel": {
        "value": "Send verification code",
        "comment": "Send code button aria label."
      },
      "resendCodeButtonText": {
        "value": "Send new code",
        "comment": "Re-Send code button text."
      },
      "resendCodeButtonAriaLabel": {
        "value": "Send new code",
        "comment": "Re-Send code button aria label."
      },
      "verifyCodeButtonText": {
        "value": "Verify code",
        "comment": "Verify code button text."
      },
      "verifyCodeButtonAriaLabel": {
        "value": "Verify code",
        "comment": "Verify code button aria label."
      },
      "changeEmailButtonText": {
        "comment": "Change e-mail button text.",
        "value": "Change e-mail"
      },
      "changeEmailButtonAriaLabel": {
        "comment": "Change e-mail button aria label.",
        "value": "Change e-mail"
      },
      "continueButtonText": {
        "value": "Continue",
        "comment": "Continue button text."
      },
      "continueButtonAriaLabel": {
        "value": "Continue",
        "comment": "Continue button aria label."
      },
      "cancelButtonText": {
        "value": "Cancel",
        "comment": "Cancel button text."
      },
      "cancelButtonAriaLabel": {
        "value": "Cancel",
        "comment": "Cancel button aria label."
      },
      "verificationCodeSendSuccess": {
        "value": "Verification code has been sent to your inbox. Please copy it to the verification code input box.",
        "comment": "Message to display on verification code is send successfully."
      },
      "emailAddressVerifiedSuccess": {
        "value": "E-mail address verified. You can now continue",
        "comment": "Message to display on email address is verified successfully."
      },
      "requriedEmailError": {
        "value": "Please enter your email address.",
        "comment": "Error to display when user didn't enter email address."
      },
      "invalidEmailError": {
        "value": "Incorrect format.",
        "comment": "Error to display when email format is invalid."
      },
      "retryError": {
        "value": "That code is incorrect. Please try again.",
        "comment": "Error to display when user entered invalid code."
      },
      "retryNotAllowedError": {
        "value": "You have made too many incorrect attempts. Please try again later.",
        "comment": "Error to display when user entered invalid code to many time and no more try is allowed."
      },
      "throttledError": {
        "value": "There have been too many requests to verify this email address. Please wait a while, then try again.",
        "comment": "Error to display when too many requests is submitted to verify email address."
      },
      "codeExpiredError": {
        "value": "That code is expired. Please request a new code.",
        "comment": "Error to display when code expired."
      },
      "serverError": {
        "value": "We are having trouble verifying your email address. Please enter a valid email address and try again.",
        "comment": "Error to display on server error."
      },
      "loadingMessage": {
        "value": "Please wait.",
        "comment": "Loading message."
      }
    },
    "type": "contentModule"
  },
  "list-page-summary": {
    "friendlyName": "List page summary",
    "name": "list-page-summary",
    "description": "Supports page summary metadata for category page which can be used by search engines and social sharing sites, including the canonical link.",
    "categories": [
      "SEO",
      "HTML head"
    ],
    "config": {
      "title": {
        "friendlyName": "title",
        "description": "The title of the webpage",
        "type": "string"
      },
      "description": {
        "friendlyName": "description",
        "description": "A brief description of the page contents",
        "type": "string"
      },
      "keywords": {
        "friendlyName": "keywords",
        "description": "A series of comma separated keywords that are relevant to the page",
        "type": "string"
      },
      "faviconUrl": {
        "friendlyName": "favicon",
        "description": "Link to the image used as your website's favicon",
        "type": "string",
        "editable": false
      },
      "disableTwitterTags": {
        "friendlyName": "Disable Twitter Tags",
        "description": "Disables rendering the Twitter tags",
        "type": "boolean",
        "default": false
      },
      "sharingImage": {
        "friendlyName": "Sharing Image",
        "description": "Image to use for sharing",
        "type": "image"
      },
      "disableOgTags": {
        "friendlyName": "Disable Facebook OG Tags",
        "description": "Disables rendering the Facebook tags",
        "type": "boolean",
        "default": false
      },
      "ignoreTitleSuffixPrefix": {
        "friendlyName": "Ignores the prefix and suffix specified in the application settings",
        "description": "Ignores the prefix and suffix specified in the application settings",
        "type": "boolean",
        "default": false
      }
    },
    "type": "htmlHeadTagsModule"
  },
  "place-holder-for-container-preview": {
    "friendlyName": "Container Slot Placeholder",
    "name": "place-holder-for-container-preview",
    "description": "Placeholder used for previewing the container slot",
    "categories": [
      "sdk-modules"
    ],
    "attributes": {
      "private": true
    },
    "config": {
      "slotId": {
        "type": "string",
        "friendlyName": "Slot Id",
        "description": "Slot Id",
        "editable": false
      },
      "parent": {
        "type": "string",
        "friendlyName": "Parent module id",
        "description": "Parent module id",
        "editable": false
      },
      "parentType": {
        "type": "string",
        "friendlyName": "Parent module type",
        "description": "Parent module type",
        "editable": false
      }
    },
    "tags": [
      "sdk-modules"
    ],
    "resources": {
      "clickToConfigure": {
        "comment": "Localized 'click here to configure' string.",
        "value": "Click here to configure"
      }
    },
    "type": "contentModule"
  },
  "product-collection": {
    "friendlyName": "Product collection",
    "name": "product-collection",
    "description": "Product collection shows a list of products based on recommendations, relation types and category.",
    "categories": [
      "Products",
      "Recommendations"
    ],
    "tags": [
      "Additional tags go here"
    ],
    "config": {
      "productCollection": {
        "friendlyName": "Products",
        "description": "Configure settings to choose appropriate data source & inputs for product collection",
        "type": "productList",
        "required": true
      },
      "heading": {
        "friendlyName": "Heading",
        "description": "Module heading",
        "type": "object",
        "properties": {
          "text": {
            "type": "string",
            "friendlyName": "Heading Text",
            "description": "Heading Text",
            "default": "Heading",
            "required": true
          },
          "tag": {
            "type": "string",
            "friendlyName": "Heading Level",
            "description": "Heading Tag",
            "enum": {
              "h1": "H1",
              "h2": "H2",
              "h3": "H3",
              "h4": "H4",
              "h5": "H5",
              "h6": "H6"
            },
            "default": "h2"
          }
        }
      },
      "layout": {
        "friendlyName": "Display style",
        "description": "Flag to show all products in a grid layout instead of carousel",
        "type": "string",
        "enum": {
          "carousel": "carousel",
          "grid": "grid"
        },
        "default": "carousel",
        "scope": "module"
      },
      "allowBackNavigation": {
        "friendlyName": "Allow back on PDP",
        "description": "If set to true, back link will be displayed on PDP breadcrumb",
        "type": "boolean",
        "default": false,
        "scope": "module"
      },
      "imageSettings": {
        "friendlyName": "Image settings",
        "description": "Image settings for product items",
        "type": "imageSettings"
      },
      "clientRender": {
        "friendlyName": "Enable module lazy load",
        "description": "This property enables lazy load of module content. It supercedes Image lazy load settings for the module.",
        "type": "boolean",
        "default": false
      },
      "className": {
        "friendlyName": "Custom CSS class name",
        "description": "Provide a custom css class name defined in the theme pack to target the CSS for this module",
        "type": "string",
        "default": ""
      }
    },
    "resources": {
      "priceFree": {
        "value": "Free",
        "comment": "Text to show when product is free"
      },
      "ratingAriaLabel": {
        "value": "Average {0} of {1} stars",
        "comment": "Text to show for rating aria label"
      },
      "flipperNext": {
        "value": "Next",
        "comment": "value for next flipper control"
      },
      "flipperPrevious": {
        "value": "Previous",
        "comment": "Value for previous flipper control"
      },
      "originalPriceText": {
        "comment": "String that corresponds to the original price screen reader text",
        "value": "Original price"
      },
      "currentPriceText": {
        "comment": "String that corresponds to the current price screen reader text",
        "value": "Current price"
      }
    },
    "type": "contentModule"
  },
  "promo-banner": {
    "friendlyName": "Promo banner",
    "name": "promo-banner",
    "description": "Promo banner module is used to display the text promotion as a banner on the page",
    "categories": [
      "Promotions",
      "Marketing"
    ],
    "config": {
      "bannerMessages": {
        "friendlyName": "Banner messages",
        "description": "Promo-banner message",
        "type": "array",
        "items": {
          "type": "object",
          "friendlyName": "Message",
          "description": "Parent Menu Action Link property",
          "properties": {
            "text": {
              "friendlyName": "Text",
              "description": "Promo-banner text",
              "type": "string"
            },
            "links": {
              "friendlyName": "Links",
              "description": "Promo-banner links",
              "type": "array",
              "items": {
                "type": "object",
                "friendlyName": "Action Link",
                "description": "Action Link property",
                "properties": {
                  "linkText": {
                    "type": "string",
                    "friendlyName": "Link text",
                    "description": "Text for call to action link",
                    "default": "Link text "
                  },
                  "linkUrl": {
                    "type": "link",
                    "friendlyName": "Link target",
                    "description": "Destination url for link",
                    "required": true
                  },
                  "ariaLabel": {
                    "type": "string",
                    "friendlyName": "Link aria label",
                    "description": "Aria Label for link",
                    "default": ""
                  },
                  "openInNewTab": {
                    "type": "boolean",
                    "friendlyName": "Open in new tab",
                    "description": "Open the link in a new tab",
                    "default": false
                  }
                }
              }
            }
          }
        }
      },
      "autoplay": {
        "friendlyName": "Autoplay",
        "description": "If true, autoplays the carousel, else user must interact in order to cycle to the next item",
        "type": "boolean",
        "default": true,
        "scope": "module"
      },
      "interval": {
        "friendlyName": " Slide transition interval",
        "description": "The interval at which the carousel automatically cycles (default: 5000 ms)",
        "type": "number",
        "default": 1000,
        "scope": "module"
      },
      "dismissEnabled": {
        "friendlyName": "Allow dismiss",
        "description": "Defines whether the promo banner can be dismissed.",
        "type": "boolean",
        "default": true,
        "scope": "module"
      },
      "hideFlipper": {
        "friendlyName": "Hide carousel flipper",
        "description": "If true, both flipper and sequence indicator are hidden",
        "type": "boolean",
        "default": true,
        "scope": "module"
      },
      "className": {
        "friendlyName": "Custom CSS class name",
        "description": "Provide a custom css class name defined in the theme pack to target the CSS for this module",
        "type": "string",
        "default": ""
      }
    },
    "resources": {
      "closeButtonAriaLabel": {
        "comment": "Text for close button aria label",
        "value": "Close promo-banner"
      },
      "closeButtonLabel": {
        "comment": "Label for close button",
        "value": "Close"
      }
    },
    "type": "contentModule"
  },
  "script-injector": {
    "friendlyName": "Script injector (Deprecated)",
    "name": "script-injector",
    "description": "This module is deprecated. Please use 'Inline Script' or 'External Script' modules instead",
    "categories": [
      "SEO",
      "HTML head"
    ],
    "tags": [
      "script",
      "sdk-modules"
    ],
    "attributes": {
      "private": true,
      "allowInBodyBegin": true,
      "allowInBodyEnd": true,
      "allowInHead": true,
      "deprecate": true
    },
    "config": {
      "scriptSource": {
        "friendlyName": "Script tags",
        "description": "script source or inline script",
        "type": "string",
        "group": "script tag",
        "editorStyle": "multiLineText",
        "format": "multiLineText"
      },
      "async": {
        "friendlyName": "execute script asynchronously",
        "description": "specifies that the script is executed asynchronously",
        "type": "boolean",
        "default": false
      },
      "defer": {
        "friendlyName": "defer script execution",
        "description": "Specifies that the script is executed when the page has finished parsing",
        "type": "boolean",
        "default": false
      },
      "loadPoint": {
        "friendlyName": "script load point",
        "description": "load point in the html document where script tag should be loaded",
        "type": "string",
        "enum": {
          "headStart": "headStart",
          "headEnd": "headEnd",
          "bodyStart": "bodyStart",
          "bodyEnd": "bodyEnd"
        }
      }
    },
    "type": "scriptModule"
  },
  "sign-in": {
    "friendlyName": "Sign in",
    "name": "sign-in",
    "description": "Allows end users to sign-in with either native accounts, or open accounts. This module also allows users to reset a forgotten password.",
    "categories": [
      "Account management",
      "Sign-in"
    ],
    "config": {
      "signInHeading": {
        "friendlyName": "Sign-in Heading",
        "description": "Sign-in section Heading.",
        "required": true,
        "type": "object",
        "properties": {
          "text": {
            "type": "string",
            "friendlyName": "Heading Text",
            "description": "Heading Text",
            "default": "Heading",
            "required": true
          },
          "tag": {
            "type": "string",
            "friendlyName": "Heading Level",
            "description": "Heading Tag",
            "enum": {
              "h1": "H1",
              "h2": "H2",
              "h3": "H3",
              "h4": "H4",
              "h5": "H5",
              "h6": "H6"
            },
            "default": "h2"
          }
        }
      },
      "signUpHeading": {
        "friendlyName": "Sign-up heading",
        "description": "Sign-up heading",
        "required": true,
        "type": "object",
        "properties": {
          "text": {
            "type": "string",
            "friendlyName": "Heading Text",
            "description": "Heading Text",
            "default": "Heading",
            "required": true
          },
          "tag": {
            "type": "string",
            "friendlyName": "Heading Level",
            "description": "Heading Tag",
            "enum": {
              "h1": "H1",
              "h2": "H2",
              "h3": "H3",
              "h4": "H4",
              "h5": "H5",
              "h6": "H6"
            },
            "default": "h2"
          }
        }
      },
      "signInDisclaimer": {
        "friendlyName": "Disclaimer text for sign-in",
        "description": "Disclaimer text sign-in",
        "type": "richText"
      },
      "facebookIcon": {
        "friendlyName": "Facebook icon",
        "description": "Facebook icon",
        "type": "image"
      },
      "microsoftIcon": {
        "friendlyName": "Microsoft icon",
        "description": "Microsoft icon",
        "type": "image"
      },
      "className": {
        "friendlyName": "Custom CSS class name",
        "description": "Provide a custom css class name defined in the theme pack to target the CSS for this module",
        "type": "string",
        "default": ""
      }
    },
    "resources": {
      "signUpDescriptionText": {
        "value": "Create an account with us to track your orders and save your favorites to the Wishlist.",
        "comment": "Sign-up description."
      },
      "facebookButtonText": {
        "value": "Sign in with Facebook",
        "comment": "Facebook button text."
      },
      "facebookButtonAriaLabel": {
        "value": "Sign in with Facebook",
        "comment": "Facebook button aria label."
      },
      "microsoftButtonText": {
        "value": "Sign in with Microsoft",
        "comment": "Microsoft button text."
      },
      "microsoftButtonAriaLabel": {
        "value": "Sign in with Microsoft",
        "comment": "Microsoft button aria label."
      },
      "emailAddressLabelText": {
        "value": "Email address *",
        "comment": "Text display as placeholder in Email adddress label."
      },
      "passwordAriaLabel": {
        "value": "Password",
        "comment": "Text display as Aria Label in the password textbox."
      },
      "emailAddressAriaLabel": {
        "value": "Email address",
        "comment": "Text display as Aria Label in the email textbox."
      },
      "passwordLabelText": {
        "value": "Password *",
        "comment": "Text display as placeholder in password label."
      },
      "loginButtonText": {
        "value": "Sign in",
        "comment": "Login button text."
      },
      "loginButtonAriaLabel": {
        "value": "Sign in",
        "comment": "Login button aria label."
      },
      "signUpButtonText": {
        "value": "Sign Up",
        "comment": "signUp button text."
      },
      "signUpButtonAriaLabel": {
        "value": "Sign Up",
        "comment": "signUp button aria label."
      },
      "forgotPasswordButtonText": {
        "value": "Forgotten password?",
        "comment": "Forgot password button text."
      },
      "forgotPasswordButtonAriaLabel": {
        "value": "Forgotten password?",
        "comment": "Forgot password button aria label."
      },
      "requriedEmailError": {
        "value": "Please enter your email address.",
        "comment": "Error to display when user didn't enter email address."
      },
      "requriedPasswordError": {
        "value": "Please enter your password.",
        "comment": "Error to display when user didn't enter password address."
      },
      "invalidEmailError": {
        "value": "Please enter a valid email address.",
        "comment": "Error to display when email format is invalid."
      },
      "invalidPasswordError": {
        "value": "The password you entered is not in the expected format.",
        "comment": "Error to display when password format is invalid."
      },
      "unknownError": {
        "value": "We are having trouble signing you in. Please try again later.",
        "comment": "Unknown error message."
      },
      "loadingMessage": {
        "value": "Please wait.",
        "comment": "Loading message."
      }
    },
    "type": "contentModule"
  },
  "sign-up": {
    "friendlyName": "Sign up",
    "name": "sign-up",
    "description": "Allows users to begin their journey of associating with a site by registering.  Module captures user information such as name, email address, password etc.",
    "categories": [
      "Account management",
      "Sign-in"
    ],
    "config": {
      "heading": {
        "friendlyName": "Heading",
        "description": "Section Heading.",
        "required": true,
        "type": "object",
        "properties": {
          "text": {
            "type": "string",
            "friendlyName": "Heading Text",
            "description": "Heading Text",
            "default": "Heading",
            "required": true
          },
          "tag": {
            "type": "string",
            "friendlyName": "Heading Level",
            "description": "Heading Tag",
            "enum": {
              "h1": "H1",
              "h2": "H2",
              "h3": "H3",
              "h4": "H4",
              "h5": "H5",
              "h6": "H6"
            },
            "default": "h2"
          }
        }
      },
      "disclaimer": {
        "friendlyName": "Disclaimer text",
        "description": "Disclaimer text",
        "type": "richText"
      },
      "className": {
        "friendlyName": "Custom CSS class name",
        "description": "Provide a custom css class name defined in the theme pack to target the CSS for this module",
        "type": "string",
        "default": ""
      }
    },
    "resources": {
      "firstNameLabelText": {
        "comment": "Text display as label for first name textbox.",
        "value": "First name *"
      },
      "firstNameMaxLength": {
        "comment": "Maximum number for character is allowed for first name.",
        "value": "20"
      },
      "lastNameLabelText": {
        "comment": "Text display as label for last name textbox.",
        "value": "Last name *"
      },
      "lastNameMaxLength": {
        "comment": "Maximum number for character is allowed for first name.",
        "value": "20"
      },
      "emailAddressLabelText": {
        "comment": "Text display as label for email address textbox.",
        "value": "Email address *"
      },
      "verificationCodeLabelText": {
        "comment": "Text display as label for verification code textbox.",
        "value": "Verification code *"
      },
      "passwordLabelText": {
        "comment": "Text display as label for password textbox.",
        "value": "Password *"
      },
      "confirmPasswordLabelText": {
        "comment": "Text display as label for confirm password textbox.",
        "value": "Confirm password *"
      },
      "signUpButtonText": {
        "comment": "Sign-up button text",
        "value": "Sign up"
      },
      "signUpButtonArialabel": {
        "comment": "Sign-up button aria label",
        "value": "Sign up"
      },
      "cancelButtonText": {
        "comment": "Cancel button text",
        "value": "Cancel"
      },
      "cancelButtonArialabel": {
        "comment": "Cancel button aria label",
        "value": "Cancel"
      },
      "sendCodeButtonText": {
        "value": "Send verification code",
        "comment": "Send code button text."
      },
      "sendCodeButtonAriaLabel": {
        "comment": "Send code button aria label.",
        "value": "Send verification code"
      },
      "resendCodeButtonText": {
        "comment": "Re-Send code button text.",
        "value": "Send new code"
      },
      "resendCodeButtonAriaLabel": {
        "comment": "Re-Send code button aria label.",
        "value": "Send new code"
      },
      "verifyCodeButtonText": {
        "comment": "Verify code button text.",
        "value": "Verify code"
      },
      "verifyCodeButtonAriaLabel": {
        "comment": "Verify code button aria label.",
        "value": "Verify code"
      },
      "changeEmailButtonText": {
        "comment": "Change e-mail button text.",
        "value": "Change e-mail"
      },
      "changeEmailButtonAriaLabel": {
        "comment": "Change e-mail button aria label.",
        "value": "Change e-mail"
      },
      "verificationCodeSendSuccess": {
        "comment": "Message to display on verification code is send successfully.",
        "value": "Verification code has been sent to your inbox. Please copy it to the verification code input box."
      },
      "emailAddressVerifiedSuccess": {
        "comment": "Message to display on email address is verified successfully.",
        "value": "E-mail address verified. You can now continue"
      },
      "passwordEntryMismatchError": {
        "comment": "Password mismatch error message.",
        "value": "The password entry fields do not match. Please enter the same password in both fields and try again."
      },
      "requiredFieldMissingSummaryError": {
        "comment": "Field missing error summary.",
        "value": "A required field is missing. Please fill out all required fields and try again."
      },
      "requiredFieldMissingError": {
        "comment": "Field missing error message.",
        "value": "This information is required."
      },
      "fieldIncorrectError": {
        "comment": " Field incorrect error message.",
        "value": "One or more fields are filled out incorrectly. Please check your entries and try again."
      },
      "invalidEmailAddressError": {
        "comment": "Email address invalid field error message.",
        "value": "Please enter a valid email address."
      },
      "invalidPasswordError": {
        "comment": "Must have more than 8 characters with at least 1 number and special character.",
        "value": "Please enter a valid password."
      },
      "invalidEmailError": {
        "comment": "Error to display when email format is invalid.",
        "value": "Incorrect format."
      },
      "retryError": {
        "comment": "Error to display when user entered invalid code.",
        "value": "That code is incorrect. Please try again."
      },
      "retryNotAllowedError": {
        "comment": "Error to display when user entered invalid code to many time and no more try is allowed.",
        "value": "You have made too many incorrect attempts. Please try again later."
      },
      "throttledError": {
        "comment": "Error to display when too many requests is submitted to verify email address.",
        "value": "There have been too many requests to verify this email address. Please wait a while, then try again."
      },
      "codeExpiredError": {
        "comment": "Error to display when code expired.",
        "value": "That code is expired. Please request a new code."
      },
      "serverError": {
        "comment": "Error to display on server error.",
        "value": "We are having trouble verifying your email address. Please enter a valid email address and try again."
      },
      "loadingMessage": {
        "comment": "Loading message.",
        "value": "Please wait."
      }
    },
    "type": "contentModule"
  },
  "site-picker": {
    "friendlyName": "Site picker",
    "name": "site-picker",
    "description": "Module to redirect user to a specific site",
    "categories": [
      "site-picker"
    ],
    "tags": [
      "Additional tags go here"
    ],
    "dataActions": {},
    "config": {
      "heading": {
        "friendlyName": "Heading",
        "description": "Site picker heading",
        "type": "object",
        "properties": {
          "text": {
            "type": "string",
            "friendlyName": "Heading Text",
            "description": "Heading Text",
            "default": "Heading",
            "required": true
          },
          "tag": {
            "type": "string",
            "friendlyName": "Heading Level",
            "description": "Heading Tag",
            "enum": {
              "h1": "H1",
              "h2": "H2",
              "h3": "H3",
              "h4": "H4",
              "h5": "H5",
              "h6": "H6"
            },
            "default": "h2"
          }
        }
      },
      "siteOptions": {
        "type": "array",
        "friendlyName": "Site options",
        "items": {
          "type": "object",
          "friendlyName": "Site options list",
          "description": "List of site options",
          "properties": {
            "siteName": {
              "type": "string",
              "friendlyName": "Site name ",
              "description": "Name of site",
              "default": "default site"
            },
            "siteImage": {
              "friendlyName": "Site image",
              "description": "Site image",
              "type": "image",
              "required": false
            },
            "siteRedirectUrl": {
              "type": "link",
              "friendlyName": "Site redirect url",
              "description": "redirect url for the site",
              "required": true
            }
          }
        },
        "description": "List of site options",
        "scope": "module",
        "group": "Layout Properties"
      },
      "className": {
        "friendlyName": "Site picker class name",
        "description": "Class name for site picker",
        "type": "string",
        "default": ""
      }
    },
    "type": "contentModule"
  },
  "social-share": {
    "friendlyName": "SocialShare",
    "name": "social-share",
    "description": "This module allows users to share a product details page on social media.",
    "categories": [
      "social-share"
    ],
    "slots": {
      "socialShareItems": {
        "friendlyName": "Social share item slot",
        "description": "Social share item slot",
        "allowedTypes": [
          "social-share-item"
        ],
        "min": 1,
        "max": 99
      }
    },
    "config": {
      "caption": {
        "friendlyName": "Caption",
        "description": "Caption of social share",
        "type": "string",
        "required": false
      },
      "className": {
        "friendlyName": "class name",
        "description": "class name",
        "type": "string"
      },
      "orientation": {
        "friendlyName": "Orientation",
        "description": "Sets the desired orientation of the icons strips",
        "type": "string",
        "enum": {
          "vertical": "Vertical",
          "horizontal": "Horizontal"
        },
        "default": "horizontal",
        "scope": "module"
      }
    },
    "type": "moduleDefinition"
  },
  "social-share-item": {
    "friendlyName": "SocialShareItem",
    "name": "social-share-item",
    "description": "Social share item",
    "categories": [
      "social-share-item"
    ],
    "config": {
      "className": {
        "friendlyName": "class name",
        "description": "class name",
        "type": "string"
      },
      "socialMedia": {
        "friendlyName": "Social Media",
        "description": "Choose a social media to share the product details page",
        "type": "string",
        "enum": {
          "facebook": "Facebook",
          "twitter": "Twitter",
          "pinterest": "Pinterest",
          "mail": "Mail",
          "linkedin": "Linkedin"
        },
        "required": true
      },
      "icon": {
        "friendlyName": "Icon",
        "description": "Icon",
        "type": "image",
        "required": true
      }
    },
    "type": "contentModule"
  },
  "spacer": {
    "friendlyName": "Spacer",
    "name": "spacer",
    "description": "Spacer module is used to define space between modules",
    "categories": [
      "Promotions",
      "Marketing"
    ],
    "config": {
      "className": {
        "friendlyName": "Custom CSS class name",
        "description": "Provide a custom css class name defined in the theme pack to target the CSS for this module",
        "type": "string"
      },
      "spacerHeight": {
        "friendlyName": "Spacer height",
        "description": "Provide height to the spacer",
        "type": "string",
        "enum": {
          "spacer1x": "1x",
          "spacer2x": "2x",
          "spacer3x": "3x",
          "spacer4x": "4x",
          "spacer5x": "5x",
          "spacer6x": "6x",
          "spacer7x": "7x",
          "spacer8x": "8x",
          "spacer9x": "9x",
          "spacer10x": "10x"
        },
        "scope": "module"
      }
    },
    "type": "contentModule"
  },
  "starter": {
    "friendlyName": "Starter",
    "name": "starter",
    "description": "This is starter theme.",
    "type": "themeModule"
  },
  "product-page-summary": {
    "friendlyName": "Product page summary",
    "name": "product-page-summary",
    "description": "Supports page summary metadata for product details page which can be used by search engines and social sharing sites, including the canonical link.",
    "categories": [
      "SEO",
      "HTML head"
    ],
    "config": {
      "title": {
        "friendlyName": "title",
        "description": "The title of the webpage",
        "type": "string"
      },
      "description": {
        "friendlyName": "description",
        "description": "A brief description of the page contents",
        "type": "string"
      },
      "keywords": {
        "friendlyName": "keywords",
        "description": "A series of comma separated keywords that are relevant to the page",
        "type": "string"
      },
      "faviconUrl": {
        "friendlyName": "favicon",
        "description": "Link to the image used as your website's favicon",
        "type": "string",
        "editable": false
      },
      "disableTwitterTags": {
        "friendlyName": "Disable Twitter Tags",
        "description": "Disables rendering the Twitter tags",
        "type": "boolean",
        "default": false
      },
      "sharingImage": {
        "friendlyName": "Sharing Image",
        "description": "Image to use for sharing",
        "type": "image"
      },
      "disableOgTags": {
        "friendlyName": "Disable Facebook OG Tags",
        "description": "Disables rendering the Facebook tags",
        "type": "boolean",
        "default": false
      },
      "ignoreTitleSuffixPrefix": {
        "friendlyName": "Ignores the prefix and suffix specified in the application settings",
        "description": "Ignores the prefix and suffix specified in the application settings",
        "type": "boolean",
        "default": false
      }
    },
    "type": "htmlHeadTagsModule"
  },
  "text-block": {
    "friendlyName": "Text block",
    "name": "text-block",
    "description": "Text block is used for textual content on the page",
    "categories": [
      "Promotions",
      "Marketing"
    ],
    "config": {
      "paragraph": {
        "type": "richText",
        "friendlyName": "Rich text",
        "description": "Paragraph text"
      },
      "className": {
        "friendlyName": "CSS classname",
        "description": "CSS classname for content rich block container",
        "type": "string"
      }
    },
    "type": "contentModule"
  },
  "video-player": {
    "friendlyName": "Video player",
    "name": "video-player",
    "description": "Video player supports full video playback capabilities including closed captioning.",
    "categories": [
      "Promotions",
      "Marketing"
    ],
    "config": {
      "video": {
        "friendlyName": "Video",
        "description": "video data",
        "type": "video",
        "required": true
      },
      "autoplay": {
        "friendlyName": "Autoplay",
        "description": "Allows the video to start playing automatically on page load",
        "type": "boolean",
        "default": false,
        "scope": "module"
      },
      "mute": {
        "friendlyName": "Mute",
        "description": "Mutes audio",
        "type": "boolean",
        "default": false,
        "scope": "module"
      },
      "loop": {
        "friendlyName": "Loop",
        "description": "Plays video in a loop",
        "type": "boolean",
        "default": false,
        "scope": "module"
      },
      "autoCaptions": {
        "friendlyName": "Closed captions language",
        "description": "Allows you to set the default language for closed captions, applies only if video supports closed captions",
        "type": "string",
        "default": "",
        "scope": "module"
      },
      "playPauseTrigger": {
        "friendlyName": "Play pause trigger",
        "description": "Shows play or pause trigger",
        "type": "boolean",
        "default": true,
        "scope": "module"
      },
      "controls": {
        "friendlyName": "Video player controls",
        "description": "Shows video player controls",
        "type": "boolean",
        "default": true,
        "scope": "module"
      },
      "playFullScreen": {
        "friendlyName": "Play full screen",
        "description": "Plays video on full screen if trigger is enabled",
        "type": "boolean",
        "default": false,
        "scope": "module"
      },
      "hidePosterFrame": {
        "friendlyName": "Hide poster image",
        "description": "Hides the poster image",
        "type": "boolean",
        "default": false,
        "scope": "module"
      },
      "maskLevel": {
        "friendlyName": "Mask level",
        "description": "Applies a mask for the poster image",
        "type": "number",
        "default": 40,
        "scope": "module"
      },
      "thumbnailFullWidth": {
        "friendlyName": "Thumbnail full width",
        "description": "Sets thumbnail width to (1110) & height to (624) otherwise it will take the actual size of the image",
        "type": "boolean",
        "default": false,
        "scope": "module"
      },
      "lazyLoad": {
        "friendlyName": "Lazy load",
        "description": "Will lazy load the player",
        "type": "boolean",
        "default": true,
        "scope": "module"
      }
    },
    "resources": {
      "playLabel": {
        "comment": "Aria label for play button",
        "value": "play"
      },
      "pauseLabel": {
        "comment": "Aria label for pause button",
        "value": "pause"
      },
      "pausedLabel": {
        "comment": "Aria label for pause action",
        "value": "paused"
      },
      "playingLabel": {
        "comment": "Aria label for play action",
        "value": "playing"
      },
      "unMuteLabel": {
        "comment": "Aria label for unMute button",
        "value": "unMute"
      },
      "muteLabel": {
        "comment": "Aria label for mute button",
        "value": "mute"
      },
      "fullScreenLabel": {
        "comment": "Aria label for full screen buton",
        "value": "full screen"
      },
      "exitFullScreenLabel": {
        "comment": "Aria label for exit full screen buton",
        "value": " exit full screen"
      },
      "seekBarLabel": {
        "comment": "Video player slider label",
        "value": "Seek bar"
      },
      "videoTimeDurationLabel": {
        "comment": "Label for the current and end time for video",
        "value": "Video time duration"
      },
      "closedCaptionLabel": {
        "comment": "Label for the closed caption on video player controls",
        "value": "Closed caption"
      },
      "optionButtonLabel": {
        "comment": "Label for the option button on video player controls",
        "value": "More options"
      }
    },
    "type": "contentModule"
  },
  "accordion": {
    "friendlyName": "Accordion",
    "name": "accordion",
    "description": "An accordion module expands in place to show additional information. Any content can be placed inside this module.",
    "categories": [
      "Organize"
    ],
    "slots": {
      "accordionItems": {
        "friendlyName": "Accordion item slot",
        "description": "Accordion item slot",
        "allowedTypes": [
          "accordion-item"
        ],
        "min": 1,
        "max": 99
      }
    },
    "config": {
      "heading": {
        "friendlyName": "Heading",
        "description": "Module heading",
        "type": "object",
        "properties": {
          "text": {
            "type": "string",
            "friendlyName": "Heading Text",
            "description": "Heading Text",
            "default": "Heading",
            "required": true
          },
          "tag": {
            "type": "string",
            "friendlyName": "Heading Level",
            "description": "Heading Tag",
            "enum": {
              "h1": "H1",
              "h2": "H2",
              "h3": "H3",
              "h4": "H4",
              "h5": "H5",
              "h6": "H6"
            },
            "default": "h2"
          }
        }
      },
      "showToggleAll": {
        "friendlyName": "Show expand all",
        "description": "If true shows an option to expand or collapse all items in the Accordion",
        "type": "boolean",
        "default": true,
        "required": false,
        "scope": "module"
      },
      "interactionStyle": {
        "friendlyName": "Interaction style",
        "description": "Defines if accordion items can be expanded independently or if expanding one collapses the other",
        "type": "string",
        "enum": {
          "Independent": "Independent",
          "ExpandOneItemOnly": "Expand one item only"
        },
        "default": "Independent",
        "scope": "module"
      },
      "className": {
        "friendlyName": "Class name for the module",
        "description": "Class name for the module",
        "type": "string",
        "default": ""
      }
    },
    "resources": {
      "collapseAllText": {
        "value": "Close all",
        "comment": "Collapse all text"
      },
      "expandAllText": {
        "value": "Open all",
        "comment": "Expand all text"
      },
      "toggleAllSeparator": {
        "value": "|",
        "comment": "Toggle all separator"
      }
    },
    "dataActions": {
      "accordionExpandedState": {
        "path": "../../data-actions/accordion-state-data-action",
        "runOn": "server"
      }
    },
    "type": "moduleDefinition"
  },
  "account-address-tile": {
    "friendlyName": "Account address tile",
    "name": "account-address-tile",
    "description": "Account address tile is used to show a summary of addresses associated to the account in the account management page",
    "categories": [
      "Account management"
    ],
    "dataActions": {
      "address": {
        "path": "@msdyn365-commerce-modules/retail-actions/dist/lib/get-address",
        "runOn": "server"
      }
    },
    "config": {
      "heading": {
        "friendlyName": "Heading",
        "description": "Module heading",
        "required": true,
        "type": "object",
        "properties": {
          "text": {
            "type": "string",
            "friendlyName": "Heading Text",
            "description": "Heading Text",
            "default": "Heading",
            "required": true
          },
          "tag": {
            "type": "string",
            "friendlyName": "Heading Level",
            "description": "Heading Tag",
            "enum": {
              "h1": "H1",
              "h2": "H2",
              "h3": "H3",
              "h4": "H4",
              "h5": "H5",
              "h6": "H6"
            },
            "default": "h2"
          }
        }
      },
      "links": {
        "type": "array",
        "friendlyName": "Links",
        "description": "Configure links to address page",
        "items": {
          "type": "object",
          "friendlyName": "Action Link",
          "description": "Action Link property",
          "properties": {
            "linkText": {
              "type": "string",
              "friendlyName": "Link text",
              "description": "Text for call to action link",
              "default": "Link text "
            },
            "linkUrl": {
              "type": "link",
              "friendlyName": "Link target",
              "description": "Destination url for link",
              "required": true
            },
            "ariaLabel": {
              "type": "string",
              "friendlyName": "Link aria label",
              "description": "Aria Label for link",
              "default": ""
            },
            "openInNewTab": {
              "type": "boolean",
              "friendlyName": "Open in new tab",
              "description": "Open the link in a new tab",
              "default": false
            }
          }
        },
        "required": true
      },
      "className": {
        "friendlyName": "Custom CSS class name",
        "description": "Provide a custom css class name defined in the theme pack to target the CSS for this module",
        "type": "string",
        "default": ""
      }
    },
    "resources": {
      "accountAddressTileDescription": {
        "value": "You have {0} address.",
        "comment": "Text display as Account address description."
      }
    },
    "type": "contentModule"
  },
  "account-customer-balance-tile": {
    "friendlyName": "account-customer-balance-tile",
    "name": "account-customer-balance-tile",
    "description": "The tile that displays customer balance and credit limit",
    "categories": [
      "account-customer-balance-tile"
    ],
    "tags": [
      "tiles",
      "balance",
      "customer account"
    ],
    "dataActions": {
      "balance": {
        "path": "@msdyn365-commerce-modules/retail-actions/dist/lib/get-customer-balance",
        "runOn": "server"
      },
      "customerInformation": {
        "path": "@msdyn365-commerce-modules/retail-actions/dist/lib/get-customer"
      }
    },
    "config": {
      "heading": {
        "friendlyName": "Heading",
        "description": "Module heading",
        "required": true,
        "type": "object",
        "properties": {
          "text": {
            "type": "string",
            "friendlyName": "Heading Text",
            "description": "Heading Text",
            "default": "Heading",
            "required": true
          },
          "tag": {
            "type": "string",
            "friendlyName": "Heading Level",
            "description": "Heading Tag",
            "enum": {
              "h1": "H1",
              "h2": "H2",
              "h3": "H3",
              "h4": "H4",
              "h5": "H5",
              "h6": "H6"
            },
            "default": "h2"
          }
        }
      },
      "links": {
        "type": "array",
        "friendlyName": "Links",
        "description": "Configure link to customer account page",
        "items": {
          "type": "object",
          "friendlyName": "Action Link",
          "description": "Action Link property",
          "properties": {
            "linkText": {
              "type": "string",
              "friendlyName": "Link text",
              "description": "Text for call to action link",
              "default": "Link text "
            },
            "linkUrl": {
              "type": "link",
              "friendlyName": "Link target",
              "description": "Destination url for link",
              "required": true
            },
            "ariaLabel": {
              "type": "string",
              "friendlyName": "Link aria label",
              "description": "Aria Label for link",
              "default": ""
            },
            "openInNewTab": {
              "type": "boolean",
              "friendlyName": "Open in new tab",
              "description": "Open the link in a new tab",
              "default": false
            }
          }
        },
        "required": true
      },
      "className": {
        "friendlyName": "Custom CSS class name",
        "description": "Provide a custom css class name defined in the theme pack to target the CSS for this module",
        "type": "string",
        "default": ""
      }
    },
    "resources": {
      "accountCreditVerbagePrefix": {
        "comment": "Prefix for the customer's account credit verbage",
        "value": "You have"
      },
      "accountCreditVerbagePostfix": {
        "comment": "Postfix for the customer's account credit verbage",
        "value": "in account credit."
      },
      "apiGenericErrorMessage": {
        "value": "There was an error retrieving your account balance.",
        "comment": "API error notification text"
      },
      "noCreditErrorMessage": {
        "value": "You do not have account credit established.",
        "comment": "Lack of established credit error notification text"
      }
    },
    "type": "contentModule"
  },
  "account-loyalty": {
    "friendlyName": "Loyalty details",
    "name": "account-loyalty",
    "description": "Account loyalty details shows a summary of the loyalty rewards earned by the user.",
    "categories": [
      "Account management",
      "Loyalty"
    ],
    "dataActions": {
      "loyaltyCard": {
        "path": "@msdyn365-commerce-modules/retail-actions/dist/lib/get-loyalty-card"
      }
    },
    "config": {
      "heading": {
        "type": "object",
        "friendlyName": "Heading",
        "description": "Heading property",
        "properties": {
          "text": {
            "type": "string",
            "friendlyName": "Heading Text",
            "description": "Heading Text",
            "default": "Heading",
            "required": true
          },
          "tag": {
            "type": "string",
            "friendlyName": "Heading Level",
            "description": "Heading Tag",
            "enum": {
              "h1": "H1",
              "h2": "H2",
              "h3": "H3",
              "h4": "H4",
              "h5": "H5",
              "h6": "H6"
            },
            "default": "h2"
          }
        }
      },
      "className": {
        "type": "string",
        "friendlyName": "Custom CSS class name",
        "description": "Provide a custom css class name defined in the theme pack to target the CSS for this module",
        "default": "account-loyalty"
      }
    },
    "resources": {
      "loyaltyCardLabel": {
        "comment": "Label for loyalty card",
        "value": "Loyalty card"
      },
      "joinDateFormatted": {
        "comment": "Format text to show when the user joined the program",
        "value": "Member since {0}"
      },
      "totalAvailablePointsLabel": {
        "comment": "Label for total amount of available loyalty points",
        "value": "Total available points"
      },
      "expiringPointsFormatLabel": {
        "comment": "Format label for expirign points",
        "value": "Expiring points within {0} days"
      },
      "availablePointsLabel": {
        "comment": "Label to display avaialble loyalty points",
        "value": "Total available points"
      },
      "loyaltyActivityDateLabel": {
        "comment": "Label for loyalty activity dates",
        "value": "Date"
      },
      "loyaltyActivityBalanceLabel": {
        "comment": "Label for loyalty activity balance",
        "value": "Balance"
      },
      "redeemedPointsLabel": {
        "comment": "Label for redeemed points",
        "value": "Redeemed"
      },
      "earnedPointsLabel": {
        "comment": "Label for earned points",
        "value": "Earned"
      },
      "pendingPointsLabel": {
        "comment": "Label for pending points",
        "value": "Pending"
      },
      "adjustedPointsLabel": {
        "comment": "Label for adjusted points",
        "value": "Adjusted"
      },
      "backToShoppingText": {
        "comment": "Text for back to shopping button",
        "value": "Back to shopping"
      }
    },
    "type": "contentModule"
  },
  "account-management-address": {
    "friendlyName": "Account management address",
    "name": "account-management-address",
    "description": "Shipping address for account management flow",
    "categories": [
      "address"
    ],
    "dataActions": {
      "address": {
        "path": "@msdyn365-commerce-modules/retail-actions/dist/lib/get-address",
        "runOn": "server"
      },
      "countryRegions": {
        "path": "../../actions/get-country-regions",
        "runOn": "server"
      },
      "addressPurposes": {
        "path": "../../actions/get-address-purposes",
        "runOn": "server"
      }
    },
    "config": {
      "heading": {
        "friendlyName": "Heading",
        "description": "Module heading",
        "type": "object",
        "properties": {
          "text": {
            "type": "string",
            "friendlyName": "Heading Text",
            "description": "Heading Text",
            "default": "Heading",
            "required": true
          },
          "tag": {
            "type": "string",
            "friendlyName": "Heading Level",
            "description": "Heading Tag",
            "enum": {
              "h1": "H1",
              "h2": "H2",
              "h3": "H3",
              "h4": "H4",
              "h5": "H5",
              "h6": "H6"
            },
            "default": "h2"
          }
        }
      },
      "primaryAddressSectionHeading": {
        "friendlyName": "Primary address section heading",
        "description": "Primary address section heading",
        "type": "object",
        "properties": {
          "text": {
            "type": "string",
            "friendlyName": "Heading Text",
            "description": "Heading Text",
            "default": "Heading",
            "required": true
          },
          "tag": {
            "type": "string",
            "friendlyName": "Heading Level",
            "description": "Heading Tag",
            "enum": {
              "h1": "H1",
              "h2": "H2",
              "h3": "H3",
              "h4": "H4",
              "h5": "H5",
              "h6": "H6"
            },
            "default": "h2"
          }
        }
      },
      "otherAddressSectionHeading": {
        "friendlyName": "Other address section heading",
        "description": "Other address section heading",
        "type": "object",
        "properties": {
          "text": {
            "type": "string",
            "friendlyName": "Heading Text",
            "description": "Heading Text",
            "default": "Heading",
            "required": true
          },
          "tag": {
            "type": "string",
            "friendlyName": "Heading Level",
            "description": "Heading Tag",
            "enum": {
              "h1": "H1",
              "h2": "H2",
              "h3": "H3",
              "h4": "H4",
              "h5": "H5",
              "h6": "H6"
            },
            "default": "h2"
          }
        }
      },
      "addAddressHeading": {
        "friendlyName": "Add address section heading",
        "description": "Add address section heading",
        "type": "object",
        "properties": {
          "text": {
            "type": "string",
            "friendlyName": "Heading Text",
            "description": "Heading Text",
            "default": "Heading",
            "required": true
          },
          "tag": {
            "type": "string",
            "friendlyName": "Heading Level",
            "description": "Heading Tag",
            "enum": {
              "h1": "H1",
              "h2": "H2",
              "h3": "H3",
              "h4": "H4",
              "h5": "H5",
              "h6": "H6"
            },
            "default": "h2"
          }
        }
      },
      "editAddressHeading": {
        "friendlyName": "Edit address section heading",
        "description": "Edit address section heading",
        "type": "object",
        "properties": {
          "text": {
            "type": "string",
            "friendlyName": "Heading Text",
            "description": "Heading Text",
            "default": "Heading",
            "required": true
          },
          "tag": {
            "type": "string",
            "friendlyName": "Heading Level",
            "description": "Heading Tag",
            "enum": {
              "h1": "H1",
              "h2": "H2",
              "h3": "H3",
              "h4": "H4",
              "h5": "H5",
              "h6": "H6"
            },
            "default": "h2"
          }
        }
      },
      "className": {
        "friendlyName": "Custom CSS class name",
        "description": "Provide a custom css class name defined in the theme pack to target the CSS for this module",
        "type": "string",
        "default": ""
      },
      "showAddressType": {
        "friendlyName": "Show address type",
        "description": "If true allows user to view/edit address type field. For example: Home, Business etc.",
        "type": "boolean",
        "default": false,
        "required": false
      }
    },
    "resources": {
      "addressAddButtonText": {
        "comment": "Add button text",
        "value": "Add address"
      },
      "addressAddButtonAriaLabel": {
        "comment": "Add button aria label",
        "value": "Add address"
      },
      "addressPrimaryButtonText": {
        "comment": "Primay button text",
        "value": "Set as primary address"
      },
      "addressPrimaryButtonAriaLabel": {
        "comment": "Primay button aria label",
        "value": "Set {addressName} address as your primary address"
      },
      "addressEditButtonText": {
        "comment": "Edit button text",
        "value": "Edit"
      },
      "addressEditButtonAriaLabel": {
        "comment": "Edit button aria label",
        "value": "Edit {addressName} address"
      },
      "addressRemoveButtonText": {
        "comment": "Remove button text",
        "value": "Remove"
      },
      "addressRemoveButtonAriaLabel": {
        "comment": "Remove button aria label",
        "value": "Remove {addressName} address"
      },
      "addressSaveButtonText": {
        "comment": "Save button text",
        "value": "Save"
      },
      "addressSaveButtonAriaLabel": {
        "comment": "Save button aria label",
        "value": "Save"
      },
      "addressCancelButtonText": {
        "comment": "Cancel button text",
        "value": "Cancel"
      },
      "addressCancelButtonAriaLabel": {
        "comment": "Cancel button aria label",
        "value": "Cancel"
      },
      "addressStateDefaultSelectionText": {
        "comment": "Default selection text for state drop down",
        "value": "Select state"
      },
      "addressNameLabel": {
        "comment": "Label for the Name field",
        "value": "Name *"
      },
      "addressNameRequiredErrorMessage": {
        "comment": "Error message to display when name is not provided",
        "value": "Name is required"
      },
      "addressPhoneLabel": {
        "comment": "Label for the phone field",
        "value": "Phone"
      },
      "addressPhoneRequiredErrorMessage": {
        "comment": "Error message to display when phone is not provided",
        "value": "Phone is required"
      },
      "addressZipCodeLabel": {
        "comment": "Label for the zipcode field",
        "value": "Zip code *"
      },
      "addressAddressTypeValueLabel": {
        "comment": "Label for the Address Type field",
        "value": "Address Type *"
      },
      "addressZipCodeRequiredErrorMessage": {
        "comment": "Error message to display when zip code is not provided",
        "value": "Zip code is required"
      },
      "addressCityLabel": {
        "comment": "Label for the city field",
        "value": "City *"
      },
      "addressCityRequiredErrorMessage": {
        "comment": "Error message to display when city is not provided",
        "value": "City is required"
      },
      "addressCountyLabel": {
        "comment": "Label for the County field",
        "value": "County"
      },
      "addressCountyRequiredErrorMessage": {
        "comment": "Error message to display when county is not provided",
        "value": "County is required"
      },
      "addressStateLabel": {
        "comment": "Label for the State field",
        "value": "State *"
      },
      "addressStateRequiredErrorMessage": {
        "comment": "Error message to display when zip code is not provided",
        "value": "State is required"
      },
      "addressThreeLetterISORegionNameLabel": {
        "comment": "Label for the country field",
        "value": "Country *"
      },
      "addressThreeLetterISORegionNameRequiredErrorMessage": {
        "comment": "Error message to display when country is not provided",
        "value": "Country is required"
      },
      "addressStreetLabel": {
        "comment": "Label for the Street field",
        "value": "Street *"
      },
      "addressStreetRequiredErrorMessage": {
        "comment": "Error message to display when street is not provided",
        "value": "Street is required"
      },
      "addressDistrictLabel": {
        "comment": "Label for the District field",
        "value": "District"
      },
      "addressDistrictRequiredErrorMessage": {
        "comment": "Error message to display when district is not provided",
        "value": "District is required"
      },
      "addressStreetNumberLabel": {
        "comment": "Label for the street number field",
        "value": "Street number"
      },
      "addressStreetNumberRequiredErrorMessage": {
        "comment": "Error message to display when street number is not provided",
        "value": "Street number is required"
      },
      "addressBuildingComplimentLabel": {
        "comment": "Label for the building compliment field",
        "value": "Building compliment"
      },
      "addressBuildingComplimentRequiredErrorMessage": {
        "comment": "Error message to display when building compliment is not provided",
        "value": "Building compliment is required"
      },
      "addressPostboxLabel": {
        "comment": "Label for the post box field",
        "value": "Post box"
      },
      "addressPostboxRequiredErrorMessage": {
        "comment": "Error message to display when post box is not provided",
        "value": "Post box is required"
      },
      "addressHouseRULabel": {
        "comment": "Label for the house field",
        "value": "House"
      },
      "addressHouseRURequiredErrorMessage": {
        "comment": "Error message to display when house is not provided",
        "value": "House is required"
      },
      "addressFlatRULabel": {
        "comment": "Label for the flat field",
        "value": "Flat"
      },
      "addressFlatRURequiredErrorMessage": {
        "comment": "Error message to display when flat is not provided",
        "value": "Flat is required"
      },
      "addressCountryOKSMCodeRULabel": {
        "comment": "Label for the countryoksmcode field",
        "value": "Countryoksmcode"
      },
      "addressCountryOKSMCodeRURequiredErrorMessage": {
        "comment": "Error message to display when countryoksmcode is not provided",
        "value": "Countryoksmcode field is required"
      },
      "addressErrorMessageTitle": {
        "comment": "Localized text for error message title",
        "value": "Error message"
      },
      "addressGenericErrorMessage": {
        "comment": "Generic error message for Address module",
        "value": "Something went wrong. Please try again later"
      },
      "addressEmptyListAddressMessage": {
        "comment": "Generic message to show in list address component when no addresses are present",
        "value": "No addresses are present. Please add one."
      },
      "addressIsPrimaryLabel": {
        "comment": "Label for the IsPrimary field",
        "value": "Set as primary address"
      }
    },
    "type": "contentModule"
  },
  "account-customer-balance": {
    "friendlyName": "Customer account balance",
    "name": "account-customer-balance",
    "description": "Customer account credit information section of the my account page",
    "categories": [
      "Account management"
    ],
    "dataActions": {
      "balance": {
        "path": "@msdyn365-commerce-modules/retail-actions/dist/lib/get-customer-balance",
        "runOn": "server"
      },
      "customerInformation": {
        "path": "@msdyn365-commerce-modules/retail-actions/dist/lib/get-customer"
      }
    },
    "config": {
      "heading": {
        "friendlyName": "Heading",
        "description": "Module heading",
        "required": true,
        "type": "object",
        "properties": {
          "text": {
            "type": "string",
            "friendlyName": "Heading Text",
            "description": "Heading Text",
            "default": "Heading",
            "required": true
          },
          "tag": {
            "type": "string",
            "friendlyName": "Heading Level",
            "description": "Heading Tag",
            "enum": {
              "h1": "H1",
              "h2": "H2",
              "h3": "H3",
              "h4": "H4",
              "h5": "H5",
              "h6": "H6"
            },
            "default": "h2"
          }
        }
      }
    },
    "resources": {
      "creditSummarySectionHeading": {
        "comment": "Heading for the customer's credit summary",
        "value": "Account credit summary"
      },
      "accountSectionHeading": {
        "comment": "Heading for the page content",
        "value": "Your account"
      },
      "backToShoppingText": {
        "comment": "Back To Shopping button label",
        "value": "Back to shopping"
      },
      "customerSincePrefix": {
        "comment": "Prefix for the customer's account creation date verbage",
        "value": "Customer since"
      },
      "availableCreditLabel": {
        "comment": "Label for the customer's available credit",
        "value": "Total available credit"
      },
      "balanceOwedLabel": {
        "comment": "Label for the customer's balance owed",
        "value": "Balance owed"
      },
      "creditExcessLabel": {
        "comment": "Label for the customer's excess credit",
        "value": "Credit excess"
      }
    },
    "type": "contentModule"
  },
  "accordion-item": {
    "friendlyName": "accordion-item",
    "name": "accordion-item",
    "description": "Accordion item is a collapsible pane that can be placed inside an Accordion. Any module can be placed inside the Accordion item.",
    "categories": [
      "accordion-item"
    ],
    "tags": [
      "Additional tags go here"
    ],
    "dataActions": {
      "accordionExpandedState": {
        "path": "../../data-actions/accordion-state-data-action",
        "runOn": "server"
      }
    },
    "attributes": {
      "private": true
    },
    "slots": {
      "accordionItemContent": {
        "friendlyName": "Accordion item slot",
        "description": "Accordion item slot",
        "allowedTypes": "*",
        "min": 1,
        "max": 100
      }
    },
    "config": {
      "accordionItemTitle": {
        "friendlyName": "Title",
        "description": "accordion item title",
        "type": "string",
        "required": true
      },
      "isExpandedOnInitialLoad": {
        "friendlyName": "Expand by default",
        "description": "If true, this item will be expanded by default till the user interacts with the module",
        "type": "boolean",
        "default": false,
        "required": false
      },
      "className": {
        "friendlyName": "Class name for the module",
        "description": "Class name for the module",
        "type": "string",
        "default": ""
      }
    },
    "type": "moduleDefinition"
  },
  "account-order-templates-tile": {
    "friendlyName": "Account order templates tile",
    "name": "account-order-templates-tile",
    "description": "Display a summary of account order templates.",
    "categories": [
      "Account management"
    ],
    "tags": [
      "B2B"
    ],
    "dataActions": {
      "featureState": {
        "path": "@msdyn365-commerce-modules/retail-actions/dist/lib/get-feature-state",
        "runOn": "client"
      },
      "orderTemplates": {
        "path": "@msdyn365-commerce-modules/retail-actions/dist/lib/order-templates/get-order-templates",
        "runOn": "client"
      },
      "customerInformation": {
        "path": "@msdyn365-commerce-modules/retail-actions/dist/lib/get-customer",
        "runOn": "client"
      }
    },
    "config": {
      "heading": {
        "friendlyName": "Heading",
        "description": "Module heading",
        "required": true,
        "type": "object",
        "properties": {
          "text": {
            "type": "string",
            "friendlyName": "Heading Text",
            "description": "Heading Text",
            "default": "Heading",
            "required": true
          },
          "tag": {
            "type": "string",
            "friendlyName": "Heading Level",
            "description": "Heading Tag",
            "enum": {
              "h1": "H1",
              "h2": "H2",
              "h3": "H3",
              "h4": "H4",
              "h5": "H5",
              "h6": "H6"
            },
            "default": "h2"
          }
        }
      },
      "links": {
        "type": "array",
        "friendlyName": "Links",
        "description": "Configure link to order templates page",
        "items": {
          "type": "object",
          "friendlyName": "Action Link",
          "description": "Action Link property",
          "properties": {
            "linkText": {
              "type": "string",
              "friendlyName": "Link text",
              "description": "Text for call to action link",
              "default": "Link text "
            },
            "linkUrl": {
              "type": "link",
              "friendlyName": "Link target",
              "description": "Destination url for link",
              "required": true
            },
            "ariaLabel": {
              "type": "string",
              "friendlyName": "Link aria label",
              "description": "Aria Label for link",
              "default": ""
            },
            "openInNewTab": {
              "type": "boolean",
              "friendlyName": "Open in new tab",
              "description": "Open the link in a new tab",
              "default": false
            }
          }
        },
        "required": true
      },
      "className": {
        "friendlyName": "Custom CSS class name",
        "description": "Provide a custom css class name defined in the theme pack to target the CSS for this module",
        "type": "string",
        "default": ""
      },
      "featureName": {
        "friendlyName": "Enter the feature names that needs to be enabled.",
        "description": "This feature tile, if enabled in HQ, will be rendered.",
        "type": "string",
        "default": "Dynamics.AX.Application.RetailB2BEcommerceFeature"
      }
    },
    "resources": {
      "accountOrderTemplatesTileDescription": {
        "value": "You have {0} order templates.",
        "comment": "The tile text that displays a summary of order templates."
      }
    },
    "type": "contentModule"
  },
  "account-welcome-tile": {
    "friendlyName": "Account welcome tile",
    "name": "account-welcome-tile",
    "description": "Account welcome item is used to show a welcome message to the user",
    "categories": [
      "Account management"
    ],
    "dataActions": {
      "accountInformation": {
        "path": "@msdyn365-commerce-modules/retail-actions/dist/lib/get-customer",
        "runOn": "server"
      }
    },
    "config": {
      "heading": {
        "friendlyName": "Heading",
        "description": "Module heading",
        "required": true,
        "type": "object",
        "properties": {
          "text": {
            "type": "string",
            "friendlyName": "Heading Text",
            "description": "Heading Text",
            "default": "Heading",
            "required": true
          },
          "tag": {
            "type": "string",
            "friendlyName": "Heading Level",
            "description": "Heading Tag",
            "enum": {
              "h1": "H1",
              "h2": "H2",
              "h3": "H3",
              "h4": "H4",
              "h5": "H5",
              "h6": "H6"
            },
            "default": "h2"
          }
        }
      },
      "className": {
        "friendlyName": "Custom CSS class name",
        "description": "Provide a custom css class name defined in the theme pack to target the CSS for this module",
        "type": "string",
        "default": ""
      }
    },
    "type": "contentModule"
  },
  "breadcrumb": {
    "friendlyName": "Breadcrumb",
    "name": "breadcrumb",
    "description": "Navigation structure that provides an alternative way to navigate around the website",
    "categories": [
      "breadcrumb"
    ],
    "tags": [
      "Additional tags go here"
    ],
    "dataActions": {
      "categoryHierarchy": {
        "path": "@msdyn365-commerce-modules/retail-actions/dist/lib/get-current-category-hierarchy",
        "runOn": "server"
      },
      "categoryPaths": {
        "path": "@msdyn365-commerce-modules/retail-actions/dist/lib/get-category-paths",
        "runOn": "server"
      },
      "product": {
        "path": "@msdyn365-commerce-modules/retail-actions/dist/lib/get-selected-variant"
      }
    },
    "config": {
      "root": {
        "friendlyName": "Root",
        "description": "Root or start of the link",
        "type": "object",
        "properties": {
          "linkText": {
            "type": "string",
            "friendlyName": "Link Text",
            "description": "Text for breadcrumb",
            "default": "Link text ",
            "required": true
          },
          "linkUrl": {
            "type": "link",
            "friendlyName": "Link target",
            "description": "Destination url for breadcrumb",
            "required": true
          },
          "ariaLabel": {
            "type": "string",
            "friendlyName": "Link aria Label",
            "description": "Aria Label for link",
            "default": ""
          }
        }
      },
      "links": {
        "type": "array",
        "friendlyName": "Breadcrumb links",
        "description": "Links to be displayed in breadcrumb after root",
        "items": {
          "type": "object",
          "friendlyName": "Breadcrumb Link",
          "description": "Breadcrumb Link property",
          "properties": {
            "linkText": {
              "type": "string",
              "friendlyName": "Link Text",
              "description": "Text for breadcrumb",
              "default": "Link text ",
              "required": true
            },
            "linkUrl": {
              "type": "link",
              "friendlyName": "Link target",
              "description": "Destination url for breadcrumb",
              "required": true
            },
            "ariaLabel": {
              "type": "string",
              "friendlyName": "Link aria Label",
              "description": "Aria Label for link",
              "default": ""
            }
          }
        }
      },
      "hideProductName": {
        "friendlyName": "Hide product name in breadcrumb",
        "description": "If true, breadcrumb will not display the product name on product page",
        "type": "boolean",
        "default": false,
        "required": false
      }
    },
    "resources": {
      "backToResultsText": {
        "comment": "Button text to be displayed to go back to previous page",
        "value": "Back to results"
      }
    },
    "type": "contentModule"
  },
  "business-account-address": {
    "friendlyName": "Business account address",
    "name": "business-account-address",
    "description": "Address module for the business partner request form",
    "categories": [
      "Business Account Form"
    ],
    "dataActions": {
      "address": {
        "path": "@msdyn365-commerce-modules/retail-actions/dist/lib/get-address",
        "runOn": "server"
      },
      "countryRegions": {
        "path": "../../actions/get-country-regions",
        "runOn": "server"
      },
      "countryStates": {
        "path": "../../actions/get-country-state",
        "runOn": "server"
      },
      "addressPurposes": {
        "path": "../../actions/get-address-purposes",
        "runOn": "server"
      }
    },
    "config": {
      "className": {
        "friendlyName": "Custom CSS class name",
        "description": "Provide a custom css class name defined in the theme pack to target the CSS for this module",
        "type": "string",
        "default": ""
      }
    },
    "resources": {
      "addressAddButtonText": {
        "comment": "Add button text",
        "value": "Add address"
      },
      "addressAddButtonAriaLabel": {
        "comment": "Add button aria label",
        "value": "Add address"
      },
      "addressPrimaryButtonText": {
        "comment": "Primay button text",
        "value": "Set as primary address"
      },
      "addressPrimaryButtonAriaLabel": {
        "comment": "Primay button aria label",
        "value": "Set {addressName} address as your primary address"
      },
      "addressEditButtonText": {
        "comment": "Edit button text",
        "value": "Edit"
      },
      "addressEditButtonAriaLabel": {
        "comment": "Edit button aria label",
        "value": "Edit {addressName} address"
      },
      "addressRemoveButtonText": {
        "comment": "Remove button text",
        "value": "Remove"
      },
      "addressRemoveButtonAriaLabel": {
        "comment": "Remove button aria label",
        "value": "Remove {addressName} address"
      },
      "addressSaveButtonText": {
        "comment": "Save button text",
        "value": "Save"
      },
      "addressSaveButtonAriaLabel": {
        "comment": "Save button aria label",
        "value": "Save"
      },
      "addressCancelButtonText": {
        "comment": "Cancel button text",
        "value": "Cancel"
      },
      "addressCancelButtonAriaLabel": {
        "comment": "Cancel button aria label",
        "value": "Cancel"
      },
      "addressStateDefaultSelectionText": {
        "comment": "Default selection text for state drop down",
        "value": "Select state"
      },
      "addressNameLabel": {
        "comment": "Label for the Name field",
        "value": "Name *"
      },
      "addressNameLabelOptional": {
        "comment": "Label for the Name field (Optional)",
        "value": "Name"
      },
      "addressNameRequiredErrorMessage": {
        "comment": "Error message to display when name is not provided",
        "value": "Name is required"
      },
      "addressPhoneLabel": {
        "comment": "Label for the phone field",
        "value": "Phone"
      },
      "addressPhoneRequiredErrorMessage": {
        "comment": "Error message to display when phone is not provided",
        "value": "Phone is required"
      },
      "addressZipCodeLabel": {
        "comment": "Label for the zipcode field",
        "value": "Zip code *"
      },
      "addressZipCodeLabelOptional": {
        "comment": "Label for the zipcode field (Optional)",
        "value": "Zip code"
      },
      "addressZipCodeRequiredErrorMessage": {
        "comment": "Error message to display when zip code is not provided",
        "value": "Zip code is required"
      },
      "addressAddressTypeValueLabel": {
        "comment": "Label for the Address Type field",
        "value": "Address Type *"
      },
      "addressAddressTypeValueLabelOptional": {
        "comment": "Label for the Address Type field (Optional)",
        "value": "Address Type "
      },
      "addressCityLabel": {
        "comment": "Label for the city field",
        "value": "City *"
      },
      "addressCityLabelOptional": {
        "comment": "Label for the city field (Optional)",
        "value": "City"
      },
      "addressCityRequiredErrorMessage": {
        "comment": "Error message to display when city is not provided",
        "value": "City is required"
      },
      "addressCountyLabel": {
        "comment": "Label for the County field",
        "value": "County *"
      },
      "addressCountyLabelOptional": {
        "comment": "Label for the County field  (Optional)",
        "value": "County"
      },
      "addressCountyRequiredErrorMessage": {
        "comment": "Error message to display when county is not provided",
        "value": "County is required"
      },
      "addressStateLabel": {
        "comment": "Label for the State field",
        "value": "State *"
      },
      "addressStateLabelOptional": {
        "comment": "Label for the State field",
        "value": "State"
      },
      "addressStateRequiredErrorMessage": {
        "comment": "Error message to display when zip code is not provided",
        "value": "State is required"
      },
      "addressThreeLetterISORegionNameLabel": {
        "comment": "Label for the country field",
        "value": "Country *"
      },
      "addressThreeLetterISORegionNameLabelOptional": {
        "comment": "Label for the country field (Optional)",
        "value": "Country"
      },
      "addressThreeLetterISORegionNameRequiredErrorMessage": {
        "comment": "Error message to display when country is not provided",
        "value": "Country is required"
      },
      "addressStreetLabel": {
        "comment": "Label for the Street field",
        "value": "Street *"
      },
      "addressStreetLabelOptional": {
        "comment": "Label for the Street field",
        "value": "Street"
      },
      "addressStreetRequiredErrorMessage": {
        "comment": "Error message to display when street is not provided",
        "value": "Street is required"
      },
      "addressDistrictLabel": {
        "comment": "Label for the District field",
        "value": "District"
      },
      "addressDistrictRequiredErrorMessage": {
        "comment": "Error message to display when district is not provided",
        "value": "District is required"
      },
      "addressStreetNumberLabel": {
        "comment": "Label for the street number field",
        "value": "Street number"
      },
      "addressStreetNumberRequiredErrorMessage": {
        "comment": "Error message to display when street number is not provided",
        "value": "Street number is required"
      },
      "addressBuildingComplimentLabel": {
        "comment": "Label for the building compliment field",
        "value": "Building compliment"
      },
      "addressBuildingComplimentRequiredErrorMessage": {
        "comment": "Error message to display when building compliment is not provided",
        "value": "Building compliment is required"
      },
      "addressPostboxLabel": {
        "comment": "Label for the post box field",
        "value": "Post box"
      },
      "addressPostboxRequiredErrorMessage": {
        "comment": "Error message to display when post box is not provided",
        "value": "Post box is required"
      },
      "addressHouseRULabel": {
        "comment": "Label for the house field",
        "value": "House"
      },
      "addressHouseRURequiredErrorMessage": {
        "comment": "Error message to display when house is not provided",
        "value": "House is required"
      },
      "addressFlatRULabel": {
        "comment": "Label for the flat field",
        "value": "Flat"
      },
      "addressFlatRURequiredErrorMessage": {
        "comment": "Error message to display when flat is not provided",
        "value": "Flat is required"
      },
      "addressCountryOKSMCodeRULabel": {
        "comment": "Label for the countryoksmcode field",
        "value": "Countryoksmcode"
      },
      "addressCountryOKSMCodeRURequiredErrorMessage": {
        "comment": "Error message to display when countryoksmcode is not provided",
        "value": "Countryoksmcode field is required"
      },
      "addressErrorMessageTitle": {
        "comment": "Localized text for error message title",
        "value": "Error message"
      },
      "addressGenericErrorMessage": {
        "comment": "Generic error message for Address module",
        "value": "Something went wrong. Please try again later"
      },
      "addressEmptyListAddressMessage": {
        "comment": "Generic message to show in list address component when no addresses are present",
        "value": "No addresses are present. Please add one."
      }
    },
    "type": "contentModule"
  },
  "account-wishlist-tile": {
    "friendlyName": "Account wishlist tile",
    "name": "account-wishlist-tile",
    "description": "Display a summary of account wishlists.",
    "categories": [
      "Account management"
    ],
    "dataActions": {
      "wishlists": {
        "path": "@msdyn365-commerce-modules/retail-actions/dist/lib/get-wishlist-by-customer-id",
        "runOn": "server"
      }
    },
    "config": {
      "heading": {
        "friendlyName": "Heading",
        "description": "Module heading",
        "required": true,
        "type": "object",
        "properties": {
          "text": {
            "type": "string",
            "friendlyName": "Heading Text",
            "description": "Heading Text",
            "default": "Heading",
            "required": true
          },
          "tag": {
            "type": "string",
            "friendlyName": "Heading Level",
            "description": "Heading Tag",
            "enum": {
              "h1": "H1",
              "h2": "H2",
              "h3": "H3",
              "h4": "H4",
              "h5": "H5",
              "h6": "H6"
            },
            "default": "h2"
          }
        }
      },
      "links": {
        "type": "array",
        "friendlyName": "Links",
        "description": "Configure link to wishlist page",
        "items": {
          "type": "object",
          "friendlyName": "Action Link",
          "description": "Action Link property",
          "properties": {
            "linkText": {
              "type": "string",
              "friendlyName": "Link text",
              "description": "Text for call to action link",
              "default": "Link text "
            },
            "linkUrl": {
              "type": "link",
              "friendlyName": "Link target",
              "description": "Destination url for link",
              "required": true
            },
            "ariaLabel": {
              "type": "string",
              "friendlyName": "Link aria label",
              "description": "Aria Label for link",
              "default": ""
            },
            "openInNewTab": {
              "type": "boolean",
              "friendlyName": "Open in new tab",
              "description": "Open the link in a new tab",
              "default": false
            }
          }
        },
        "required": true
      },
      "className": {
        "friendlyName": "Custom CSS class name",
        "description": "Provide a custom css class name defined in the theme pack to target the CSS for this module",
        "type": "string",
        "default": ""
      }
    },
    "resources": {
      "accountWishlistTileDescription": {
        "value": "You have {0} items in the Wishlist.",
        "comment": "Text display as summary."
      }
    },
    "type": "contentModule"
  },
  "account-profile": {
    "friendlyName": "User profile details",
    "name": "account-profile",
    "description": "User profile shows user account details such as name, email, preferences etc.",
    "categories": [
      "Account management",
      "User profile"
    ],
    "dataActions": {
      "customerInformation": {
        "path": "@msdyn365-commerce-modules/retail-actions/dist/lib/get-customer"
      },
      "attributeDefinitions": {
        "path": "@msdyn365-commerce-modules/retail-actions/dist/lib/get-attribute-definitions"
      }
    },
    "config": {
      "heading": {
        "friendlyName": "Heading",
        "description": "Module heading",
        "required": true,
        "type": "object",
        "properties": {
          "text": {
            "type": "string",
            "friendlyName": "Heading Text",
            "description": "Heading Text",
            "default": "Heading",
            "required": true
          },
          "tag": {
            "type": "string",
            "friendlyName": "Heading Level",
            "description": "Heading Tag",
            "enum": {
              "h1": "H1",
              "h2": "H2",
              "h3": "H3",
              "h4": "H4",
              "h5": "H5",
              "h6": "H6"
            },
            "default": "h2"
          }
        }
      },
      "nameSectionHeading": {
        "friendlyName": "Name section heading",
        "description": "Name section heading",
        "type": "object",
        "properties": {
          "text": {
            "type": "string",
            "friendlyName": "Heading Text",
            "description": "Heading Text",
            "default": "Heading",
            "required": true
          },
          "tag": {
            "type": "string",
            "friendlyName": "Heading Level",
            "description": "Heading Tag",
            "enum": {
              "h1": "H1",
              "h2": "H2",
              "h3": "H3",
              "h4": "H4",
              "h5": "H5",
              "h6": "H6"
            },
            "default": "h2"
          }
        }
      },
      "emailAddressSectionHeading": {
        "friendlyName": "Email address section heading",
        "description": "Email address section heading",
        "type": "object",
        "properties": {
          "text": {
            "type": "string",
            "friendlyName": "Heading Text",
            "description": "Heading Text",
            "default": "Heading",
            "required": true
          },
          "tag": {
            "type": "string",
            "friendlyName": "Heading Level",
            "description": "Heading Tag",
            "enum": {
              "h1": "H1",
              "h2": "H2",
              "h3": "H3",
              "h4": "H4",
              "h5": "H5",
              "h6": "H6"
            },
            "default": "h2"
          }
        }
      },
      "showPhone": {
        "friendlyName": "Show phone",
        "description": "Flag to show/hide phone",
        "type": "boolean",
        "default": false,
        "required": false
      },
      "phoneSectionHeading": {
        "friendlyName": "Phone section heading",
        "description": "Phone section heading",
        "type": "object",
        "properties": {
          "text": {
            "type": "string",
            "friendlyName": "Heading Text",
            "description": "Heading Text",
            "default": "Heading",
            "required": true
          },
          "tag": {
            "type": "string",
            "friendlyName": "Heading Level",
            "description": "Heading Tag",
            "enum": {
              "h1": "H1",
              "h2": "H2",
              "h3": "H3",
              "h4": "H4",
              "h5": "H5",
              "h6": "H6"
            },
            "default": "h2"
          }
        }
      },
      "showVatNumber": {
        "friendlyName": "Show vat number",
        "description": "Flag to show/hide vat number",
        "type": "boolean",
        "default": false,
        "required": false
      },
      "vatNumberSectionHeading": {
        "friendlyName": "Vat number section heading",
        "description": "Vat number section heading",
        "type": "object",
        "properties": {
          "text": {
            "type": "string",
            "friendlyName": "Heading Text",
            "description": "Heading Text",
            "default": "Heading",
            "required": true
          },
          "tag": {
            "type": "string",
            "friendlyName": "Heading Level",
            "description": "Heading Tag",
            "enum": {
              "h1": "H1",
              "h2": "H2",
              "h3": "H3",
              "h4": "H4",
              "h5": "H5",
              "h6": "H6"
            },
            "default": "h2"
          }
        }
      },
      "preferencesSectionHeading": {
        "friendlyName": "Preference section heading",
        "description": "Preference section heading",
        "type": "object",
        "properties": {
          "text": {
            "type": "string",
            "friendlyName": "Heading Text",
            "description": "Heading Text",
            "default": "Heading",
            "required": true
          },
          "tag": {
            "type": "string",
            "friendlyName": "Heading Level",
            "description": "Heading Tag",
            "enum": {
              "h1": "H1",
              "h2": "H2",
              "h3": "H3",
              "h4": "H4",
              "h5": "H5",
              "h6": "H6"
            },
            "default": "h2"
          }
        }
      },
      "personalizationSectionHeading": {
        "friendlyName": "Personalization preference section heading",
        "description": "Personalization preference section heading",
        "type": "object",
        "properties": {
          "text": {
            "type": "string",
            "friendlyName": "Heading Text",
            "description": "Heading Text",
            "default": "Heading",
            "required": true
          },
          "tag": {
            "type": "string",
            "friendlyName": "Heading Level",
            "description": "Heading Tag",
            "enum": {
              "h1": "H1",
              "h2": "H2",
              "h3": "H3",
              "h4": "H4",
              "h5": "H5",
              "h6": "H6"
            },
            "default": "h2"
          }
        }
      },
      "webTrackingSectionHeading": {
        "friendlyName": "Web Tracking preference section heading",
        "description": "Web Tracking preference section heading",
        "type": "object",
        "properties": {
          "text": {
            "type": "string",
            "friendlyName": "Heading Text",
            "description": "Heading Text",
            "default": "Heading",
            "required": true
          },
          "tag": {
            "type": "string",
            "friendlyName": "Heading Level",
            "description": "Heading Tag",
            "enum": {
              "h1": "H1",
              "h2": "H2",
              "h3": "H3",
              "h4": "H4",
              "h5": "H5",
              "h6": "H6"
            },
            "default": "h2"
          }
        }
      },
      "className": {
        "friendlyName": "Custom CSS class name",
        "description": "Provide a custom css class name defined in the theme pack to target the CSS for this module",
        "type": "string",
        "default": ""
      },
      "showAttributes": {
        "friendlyName": "Show customer account attributes",
        "description": "Add comma separated list of attributes to show",
        "type": "string",
        "default": ""
      },
      "additionalInformationSectionHeading": {
        "friendlyName": "Additional information section heading",
        "description": "Additional information section heading",
        "type": "object",
        "properties": {
          "text": {
            "type": "string",
            "friendlyName": "Heading Text",
            "description": "Heading Text",
            "default": "Heading",
            "required": true
          },
          "tag": {
            "type": "string",
            "friendlyName": "Heading Level",
            "description": "Heading Tag",
            "enum": {
              "h1": "H1",
              "h2": "H2",
              "h3": "H3",
              "h4": "H4",
              "h5": "H5",
              "h6": "H6"
            },
            "default": "h2"
          }
        }
      }
    },
    "resources": {
      "attributeInputValueExceedsMaximumErrorText": {
        "value": "{0} exceeds maximum limit of {1}",
        "comment": "Attribute value exceeds maxmium error text."
      },
      "attributeInputValueExceedsMinimumErrorText": {
        "value": "{0} exceeds minimum limit of {1}",
        "comment": "Attribute value exceeds minimum error text."
      },
      "attributeInputStringMaxLengthErrorText": {
        "value": "{0} exceeds maximum limit of {1} characters",
        "comment": "Attribute input string maximum length error text."
      },
      "attributeInputMandatoryErrorText": {
        "value": "{0} should not be empty",
        "comment": "Attribute input mandatory error text."
      },
      "attributeInputRangeErrorText": {
        "value": "{0} should be in the range of {1}-{2}",
        "comment": "Attribute input range error text."
      },
      "attributeInputTypeErrorText": {
        "value": "{0} should be of {1} type",
        "comment": "Attribute input type error text."
      },
      "attributesCancelButtonAriaLabel": {
        "value": "Cancel",
        "comment": "Attributes cancel button aria label."
      },
      "attributesCancelButtonText": {
        "value": "Cancel",
        "comment": "Attributes cancel button text."
      },
      "attributesEditButtonAriaLabel": {
        "value": "Edit",
        "comment": "Attributes edit button aria label."
      },
      "attributesEditButtonText": {
        "value": "Edit",
        "comment": "Attributes edit button text."
      },
      "attributesSaveButtonAriaLabel": {
        "value": "Save",
        "comment": "Attributes save button aria label."
      },
      "attributesSaveButtonText": {
        "value": "Save",
        "comment": "Attributes save button text."
      },
      "attributesSaveExceptionMessage": {
        "value": "Something went wrong, please try again.",
        "comment": "Attributes save exception message."
      },
      "attributeToggleButtonAriaLabel": {
        "value": "Enable {0}",
        "comment": "Attribute toggle button aria label."
      },
      "editButtonText": {
        "value": "Edit",
        "comment": "Edit button text."
      },
      "editButtonAriaLabel": {
        "value": "Edit profile",
        "comment": "Edit button aria label."
      },
      "toggleEnableText": {
        "value": "Yes",
        "comment": "Label for turned-on state of toggle button."
      },
      "toggleDisableText": {
        "value": "No",
        "comment": "Label for turned-off state of toggle button."
      },
      "personalizationDescription": {
        "value": "Allow personalized recommendations",
        "comment": "Personalization description."
      },
      "personalizationEnableButtonAriaLabel": {
        "value": "Enable personalization",
        "comment": "Enable personalization button aria label."
      },
      "personalizationDisableButtonAriaLabel": {
        "value": "Disable personalization",
        "comment": "Disable personalization button aria label."
      },
      "webTrackingDescription": {
        "value": "Enable browsing activity to be logged to enhance the browsing experience",
        "comment": "Web Tracking description."
      },
      "webTrackingEnableButtonAriaLabel": {
        "value": "Enable browsing activity to be logged",
        "comment": "Enable browsing activity button aria label."
      },
      "webTrackingDisableButtonAriaLabel": {
        "value": "Disable browsing activity to be logged",
        "comment": "Disable browsing activity button aria label."
      }
    },
    "type": "contentModule"
  },
  "business-organization-list": {
    "friendlyName": "business-organization-list",
    "name": "business-organization-list",
    "description": "Allows users to see organization list and edit/remove/add user to oraganization",
    "categories": [
      "business-organization-list"
    ],
    "tags": [
      "Additional tags go here"
    ],
    "dataActions": {
      "users": {
        "path": "@msdyn365-commerce-modules/retail-actions/dist/lib/get-organization-users"
      }
    },
    "config": {
      "heading": {
        "friendlyName": "Heading",
        "description": "Module heading",
        "required": true,
        "type": "object",
        "properties": {
          "text": {
            "type": "string",
            "friendlyName": "Heading Text",
            "description": "Heading Text",
            "default": "Heading",
            "required": true
          },
          "tag": {
            "type": "string",
            "friendlyName": "Heading Level",
            "description": "Heading Tag",
            "enum": {
              "h1": "H1",
              "h2": "H2",
              "h3": "H3",
              "h4": "H4",
              "h5": "H5",
              "h6": "H6"
            },
            "default": "h2"
          }
        }
      },
      "className": {
        "friendlyName": "Custom CSS class name",
        "description": "Provide a custom css class name defined in the theme pack to target the CSS for this module",
        "type": "string",
        "default": ""
      },
      "tableSort": {
        "friendlyName": "Table sort",
        "description": "Provide an option to make table sortable",
        "type": "boolean",
        "default": true
      },
      "showPagination": {
        "friendlyName": "Table pagination",
        "description": "Provide pagination functionality on table",
        "type": "boolean",
        "default": true
      },
      "paginationItemPerPage": {
        "friendlyName": "Pagination Item",
        "description": "Provide ability to user to set display of number items per page",
        "type": "number",
        "default": 5
      }
    },
    "resources": {
      "addUserButtonText": {
        "comment": "Label of the button used to add a user.",
        "value": "Add a user"
      },
      "firstNameLabelText": {
        "comment": "Text display as label for first name textbox.",
        "value": "First name"
      },
      "firstNameMaxLength": {
        "comment": "Maximum number for character is allowed for first name.",
        "value": "20"
      },
      "lastNameLabelText": {
        "comment": "Text display as label for last name textbox.",
        "value": "Last name"
      },
      "lastNameMaxLength": {
        "comment": "Maximum number for character is allowed for last name.",
        "value": "20"
      },
      "emailAddressLabelText": {
        "comment": "Text display as label for email address textbox.",
        "value": "Email address"
      },
      "spendingLimitLabelText": {
        "comment": "Label for the spendingLimit input field",
        "value": "Spending limit"
      },
      "saveButtonText": {
        "comment": "Save button text",
        "value": "Save"
      },
      "saveButtonArialabel": {
        "comment": "Save button aria label",
        "value": "Save"
      },
      "cancelButtonText": {
        "comment": "Cancel button text",
        "value": "Cancel"
      },
      "cancelButtonArialabel": {
        "comment": "Cancel button aria label",
        "value": "Cancel"
      },
      "removeUserButtonText": {
        "comment": "Remove user button text",
        "value": "Yes, remove"
      },
      "removeUserButtonArialabel": {
        "comment": "Remove user aria label",
        "value": "Remove User"
      },
      "cancelRemoveUserButtonText": {
        "comment": "Cancel remove user button text",
        "value": "No"
      },
      "cancelRemoveUserButtonArialabel": {
        "comment": "Cancel remove user aria label",
        "value": "Cancel remove User"
      },
      "editUserFormHeadingText": {
        "comment": "Edit user form heading",
        "value": "Edit user"
      },
      "addUserFormHeadingText": {
        "comment": "Add user form Heading",
        "value": "Add user"
      },
      "requiredFieldMissingSummaryError": {
        "comment": "Field missing error summary.",
        "value": "A required field is missing. Please fill out all required fields and try again."
      },
      "fieldIncorrectErrorText": {
        "comment": "Field incorrect error message.",
        "value": "One or more fields are filled out incorrectly. Please check your entries and try again."
      },
      "actionErrorText": {
        "comment": "Error message that shows when API fails.",
        "value": "Sorry we are unable to perform that action at this moment, please try again later."
      },
      "paginationPreviousButtonText": {
        "comment": "Pagination previous button text message.",
        "value": "Previous"
      },
      "paginationAriaLabel": {
        "value": "Page navigation example",
        "comment": "Text for pagination aria label"
      },
      "paginationNextButtonText": {
        "comment": "Pagination next button text message.",
        "value": "Next"
      },
      "editButtonText": {
        "comment": "Text for the edit button",
        "value": "Edit"
      },
      "deleteButtonText": {
        "comment": "Text for the remove button",
        "value": "Delete"
      },
      "actionButtonText": {
        "comment": "Text for the action button",
        "value": "Actions"
      },
      "activeStatusText": {
        "comment": "Text for to show that BusinessUser is active.",
        "value": "Active"
      },
      "pendingStatusText": {
        "comment": "Text for to show that BusinessUser is pending.",
        "value": "Pending"
      },
      "removedStatusText": {
        "comment": "Text for to show that BusinessUser is disabled.",
        "value": "Removed"
      },
      "removeModalHeaderText": {
        "comment": "Heading text for the Delete user pop up.",
        "value": "Remove a user"
      },
      "removeModalDescription": {
        "comment": "Description text for the Delete user pop up.",
        "value": "Are you sure you want to remove the user from the organization user list?"
      },
      "viewModalHeaderText": {
        "comment": "Heading text for the View User Details pop up.",
        "value": "User details"
      },
      "emptyListMessage": {
        "comment": "Text to show when there are no users in the organzization",
        "value": "No users"
      },
      "loadingMessage": {
        "comment": "Text to show while the users list is loading",
        "value": "Loading..."
      },
      "errorGettingUsersMessage": {
        "comment": "Text for the error message while getting users list",
        "value": "Sorry we are unable to load your organization at this moment, please try again later."
      },
      "errorUpdatingUsersMessage": {
        "comment": "Text for the error message while updating a user.",
        "value": "Sorry we are unable to edit/remove this user, please try again later."
      },
      "allFieldsRequiredMessage": {
        "comment": "Message to display when all input fields are required.",
        "value": "*All Fields are required to add a user"
      },
      "tableNameHeadingText": {
        "comment": "Text for the heading row of the Name column",
        "value": "User name"
      },
      "tableEmailHeadingText": {
        "comment": "Text for the heading row of the Email column",
        "value": "Email"
      },
      "tableStatusHeadingText": {
        "comment": "Text for the heading row of the Status column",
        "value": "Status"
      },
      "tableSpendingLimitHeadingText": {
        "comment": "Text for the heading row of the SpendingLimit column",
        "value": "Spending limit"
      }
    },
    "type": "contentModule"
  },
  "carousel": {
    "friendlyName": "Carousel",
    "name": "carousel",
    "description": "A carousel is used to place multiple promotional items within a carousel view",
    "categories": [
      "Promotions",
      "Marketing"
    ],
    "config": {
      "keyboard": {
        "friendlyName": "keyboard",
        "description": "Shows keyboard controls to navigate items within the carousel",
        "type": "boolean",
        "default": true,
        "scope": "module"
      },
      "pauseOnHover": {
        "friendlyName": "Pause on mouse hover",
        "description": "If set, pauses the cycling of the carousel on mouse enter and resumes the cycling of the carousel on mouse leave",
        "type": "boolean",
        "default": true,
        "scope": "module"
      },
      "autoplay": {
        "friendlyName": "Autoplay",
        "description": "If true, autoplays the items within the carousel",
        "type": "boolean",
        "default": true,
        "scope": "module"
      },
      "interval": {
        "friendlyName": " Slide transition interval",
        "description": "The interval at which the carousel automatically cycles (default: 5000 ms)",
        "type": "number",
        "default": 10000,
        "scope": "module",
        "minimum": 0
      },
      "transitionType": {
        "friendlyName": "Transition type",
        "description": "Animation effects for carousel",
        "type": "string",
        "enum": {
          "slide": "slide effect",
          "fade": "fade effect"
        },
        "default": "slide",
        "scope": "module"
      },
      "hideFlipper": {
        "friendlyName": "Hide carousel flipper",
        "description": "If true, both flipper and sequence indicator are hidden",
        "type": "boolean",
        "default": false,
        "scope": "module"
      },
      "dismissEnabled": {
        "friendlyName": "Allows carousel dismiss",
        "description": "If true, the carousel dismiss button will be displayed",
        "type": "boolean",
        "default": false,
        "scope": "module"
      },
      "className": {
        "friendlyName": "Custom CSS class name",
        "description": "Provide a custom css class name defined in the theme pack to target the CSS for this module",
        "type": "string",
        "default": ""
      }
    },
    "resources": {
      "flipperNext": {
        "comment": "flipperNext config value",
        "value": "Next"
      },
      "flipperPrevious": {
        "comment": "flipperPrevious config value",
        "value": "Previous"
      },
      "ariaLabelForSlide": {
        "comment": "Aria label for the Carousel Indicators",
        "value": "Slide {0}"
      },
      "ariaLabelForDismissButton": {
        "comment": "Aria label for the Carousel Dismiss Button",
        "value": "Cancel"
      }
    },
    "slots": {
      "content": {
        "friendlyName": "Content Slot",
        "description": "Content slot",
        "allowedTypes": [
          "content-block"
        ],
        "min": 1,
        "max": 20
      }
    },
    "type": "containerModule"
  },
  "buybox": {
    "friendlyName": "Buybox (COPY)",
    "name": "buybox",
    "description": "Buybox module",
    "categories": [
      "Product details",
      "Buybox"
    ],
    "dataActions": {
      "product": {
        "path": "@msdyn365-commerce-modules/retail-actions/dist/lib/get-selected-variant"
      },
      "productDimensions": {
        "path": "@msdyn365-commerce-modules/retail-actions/dist/lib/get-dimensions-for-selected-variant"
      },
      "storeSelectorStateManager": {
        "path": "@msdyn365-commerce-modules/bopis-utilities/dist/lib/store-selector-state-manager/store-selector-state-manager-data-action"
      },
      "productPrice": {
        "path": "@msdyn365-commerce-modules/retail-actions/dist/lib/get-price-for-selected-variant"
      },
      "deliveryOptions": {
        "path": "@msdyn365-commerce-modules/retail-actions/dist/lib/get-delivery-options-for-selected-variant"
      },
      "ratingsSummary": {
        "path": "@msdyn365-commerce-modules/retail-actions/dist/lib/get-ratings-summary",
        "runOn": "client"
      },
      "cart": {
        "path": "@msdyn365-commerce/global-state/dist/lib/data-actions/cart-state-data-action",
        "runOn": "server"
      },
      "orderTemplates": {
        "path": "@msdyn365-commerce-modules/retail-actions/dist/lib/order-templates/get-order-templates-preview",
        "runOn": "client"
      },
      "wishlists": {
        "path": "@msdyn365-commerce-modules/retail-actions/dist/lib/get-wishlist-by-customer-id"
      },
      "productAvailableQuantity": {
        "path": "@msdyn365-commerce-modules/retail-actions/dist/lib/get-product-availabilities-for-selected-variant",
        "runOn": "server"
      },
      "customerInformation": {
        "path": "@msdyn365-commerce-modules/retail-actions/dist/lib/get-customer"
      }
    },
    "config": {
      "titleHeadingTag": {
        "friendlyName": "Heading tag",
        "type": "string",
        "description": "Tag to give the heading",
        "enum": {
          "h1": "h1",
          "h2": "h2",
          "h3": "h3",
          "h4": "h4",
          "h5": "h5",
          "h6": "h6"
        },
        "default": "h1",
        "scope": "module"
      },
      "className": {
        "friendlyName": "Custom CSS class name",
        "description": "Provide a custom css class name defined in the theme pack to target the CSS for this module",
        "type": "string",
        "default": ""
      },
      "enableShopSimilarLooks": {
        "friendlyName": "Enable Shop Similar Looks Link",
        "type": "boolean",
        "description": "Flag to show Shop Similar Looks Link",
        "default": false,
        "scope": "module"
      }
    },
    "slots": {
      "mediaGallery": {
        "friendlyName": "Media Gallery",
        "description": "This the slot for the media gallery",
        "max": 1,
        "min": 0,
        "allowedTypes": [
          "media-gallery"
        ]
      },
      "storeSelector": {
        "friendlyName": "Store Selector",
        "description": "Store Selector to use with the Find In Store component",
        "max": 1,
        "min": 0,
        "allowedTypes": [
          "store-selector"
        ]
      },
      "textBlocks": {
        "friendlyName": "Text Blocks",
        "description": "Additional text blocks that can be added in the view",
        "max": 10,
        "min": 0,
        "allowedTypes": [
          "text-block"
        ]
      },
      "socialShare": {
        "friendlyName": "Social Share",
        "description": "This the slot for the social share",
        "max": 1,
        "min": 0,
        "allowedTypes": [
          "social-share"
        ]
      }
    },
    "resources": {
      "findInStoreLinkText": {
        "value": "在商店中查找",
        "comment": "Button text for the find in store section"
      },
      "findInStoreHeaderText": {
        "value": "Buy now, pick up in a store",
        "comment": "Heading text for the find in store section"
      },
      "findInStoreDescriptionText": {
        "value": "Search for product availability at stores within 50 miles of you.",
        "comment": "Description text for the find in store section"
      },
      "priceFree": {
        "value": "免费",
        "comment": "Text to show when product is free"
      },
      "originalPriceText": {
        "comment": "String that corresponds to the original price screen reader text",
        "value": "原价"
      },
      "currentPriceText": {
        "comment": "String that corresponds to the current price screen reader text",
        "value": "现价"
      },
      "addToCartText": {
        "value": "加入购物车",
        "comment": "Text to show on add to cart button"
      },
      "outOfStockText": {
        "value": "暂无现货",
        "comment": "Text to show when out of stock"
      },
      "averageRatingAriaLabel": {
        "comment": "The aria label used for the average rating value",
        "value": "平均 {0}/{1} 星"
      },
      "selectDimensionFormatString": {
        "value": "选择一个 {0}",
        "comment": "Text to show indicating user should select a dimension (i.e. 'Choose a color')"
      },
      "productDimensionTypeColor": {
        "value": "颜色",
        "comment": "String that corresponds to the Color Product Dimension Type (1)"
      },
      "productDimensionTypeConfiguration": {
        "value": "格式",
        "comment": "String that corresponds to the Configuration Product Dimension Type (2)"
      },
      "productDimensionTypeSize": {
        "value": "尺寸",
        "comment": "String that corresponds to the Size Product Dimension Type (3)"
      },
      "productDimensionTypeStyle": {
        "value": "样式",
        "comment": "String that corresponds to the Style Product Dimension Type (4)"
      },
      "addToWishlistButtonText": {
        "value": "收藏",
        "comment": "Text for add to wishlist button"
      },
      "removeFromWishlistButtonText": {
        "value": "从收藏中移除",
        "comment": "Text for remove from wishlist button"
      },
      "nameOfWishlist": {
        "value": "我的收藏",
        "comment": "Name given to wishlist while creating it"
      },
      "inputQuantityAriaLabel": {
        "value": "购买数量",
        "comment": "Aria label for the input quantity"
      },
      "addToWishlistMessage": {
        "value": "收藏成功",
        "comment": "Text for showing for adding item to your wishlist message"
      },
      "removedFromWishlistMessage": {
        "value": "取消收藏成功",
        "comment": "Text for showing removing item from your wishlist"
      },
      "addItemToWishlistError": {
        "value": "无法将该产品添加到收藏",
        "comment": "For showing error message on adding item from wishlist"
      },
      "removeItemFromWishlistError": {
        "value": "无法取消收藏该产品",
        "comment": "For showing error message on removing from wishlist"
      },
      "productQuantityHeading": {
        "value": "数量",
        "comment": "Heading/label for the quantity input"
      },
      "errorMessageOutOfStock": {
        "value": "此产品没有现货",
        "comment": "Error message to show when product is out of stock"
      },
      "errorMessageOutOfRangeOneLeft": {
        "value": "仅剩一种产品，请在可用范围内选择数量",
        "comment": "Error message to show when quantity selected is more than the quantity left, and only one product is left"
      },
      "errorMessageOutOfRangeFormat": {
        "value": "仅剩 {numLeft} 个产品。 请在可用范围内选择数量",
        "comment": "Error message to show when quantity selected is more than the quantity left. {numLeft} is the number of products left."
      },
      "productDimensionTypeColorErrorMessage": {
        "value": "颜色是必选项，请选择",
        "comment": "Error string to show when the user has not selected a color"
      },
      "productDimensionTypeConfigurationErrorMessage": {
        "value": "格式是必选项，请选择",
        "comment": "Error string to show when the user has not selected a configuration"
      },
      "productDimensionTypeSizeErrorMessage": {
        "value": "尺寸是必选项，请选择",
        "comment": "Error string to show when the user has not selected a size"
      },
      "productDimensionTypeStyleErrorMessage": {
        "value": "样式是必选项，请选择",
        "comment": "Error string to show when the user has not selected a style"
      },
      "addToCartLoadingText": {
        "value": "正在添加至购物车",
        "comment": "Error string to show when the user has not selected a style"
      },
      "buyboxErrorMessageHeader": {
        "value": "出现了一些问题",
        "comment": "Header text for the error message region"
      },
      "addedToCartFailureMessage": {
        "value": "添加到购物车失败，请刷新并重试",
        "comment": "Message to show when add to cart fails"
      },
      "maxQuantityLimitText": {
        "value": "您最多只能添加{quantity}个商品添加到购物车中",
        "comment": "String to show message that you've reached max quantity {quantity} is the max quantity"
      },
      "createOrderTemplateHeader": {
        "value": "Create an order template",
        "comment": "Text for create order template dialog header"
      },
      "orderTemplateTitle": {
        "value": "Order template title",
        "comment": "Text for create order template dialog title"
      },
      "orderTemplateNameAriaLabel": {
        "value": "Order template title",
        "comment": "Text for create order template dialog template name input aria label"
      },
      "createOrderTemplateDescription": {
        "value": "Order templates will be saved to your account. You can reuse them in the future to speed up the checkout process. Create an order template and add this item to it.",
        "comment": "Text for create order template dialog description"
      },
      "createNewOrderTemplateButtonText": {
        "value": "Create new",
        "comment": "Text for create order template dialog create new button"
      },
      "createOrderTemplateButtonText": {
        "value": "Create",
        "comment": "Text for create order template dialog create button"
      },
      "cancelNewOrderTemplateCreationButtonText": {
        "value": "Cancel",
        "comment": "Text for create order template dialog cancel button"
      },
      "defaultOrderTemplateName": {
        "value": "Untitled",
        "comment": "Text for create order template dialog default order template name"
      },
      "addToOrderTemplateHeader": {
        "value": "Add to order template",
        "comment": "Text for add to order template dialog header"
      },
      "noOrderTemplatesMessage": {
        "value": "You have not created any order templates.",
        "comment": "Text for add to order template dialog message"
      },
      "noOrderTemplatesDescription": {
        "value": "Order templates will be saved to your account. You can reuse them in the future to speed up the checkout process. Create an order template and add this item to it.",
        "comment": "Text for add to order template dialog description"
      },
      "createAnOrderTemplateButtonText": {
        "value": "Create an order template",
        "comment": "Text for creating an order template button"
      },
      "cancelOrderTemplateCreationButtonText": {
        "value": "Cancel",
        "comment": "Text for canceling adding to order template dialog"
      },
      "selectTemplatesText": {
        "value": "Select a template or create a new one. You have {0} template(s).",
        "comment": "Text for add to order template dialog description"
      },
      "addToTemplateButtonText": {
        "value": "Add to template",
        "comment": "Text for add to order template dialog button"
      },
      "lineItemsText": {
        "value": "{0} line item(s)",
        "comment": "Text for add to order template dialog order template description"
      },
      "addToOrderTemplateButtonText": {
        "value": "Add to order template",
        "comment": "Text for add to order template button"
      },
      "addToOrderTemplateMessage": {
        "value": "Added to your order template",
        "comment": "Text for showing for adding item to your order template message"
      },
      "addItemToOrderTemplateError": {
        "value": "Unable to add item to order template",
        "comment": "For showing error message on adding item to order template"
      },
      "viewOrderTemplateButtonText": {
        "value": "View order template",
        "comment": "View order template text on item added to order template dialog"
      },
      "continueShoppingButtonText": {
        "value": "Continue shopping",
        "comment": "Continue shopping on item added to order template dialog"
      },
      "itemAddedToOrderTemplateHeaderItemOneText": {
        "value": "1 item",
        "comment": "View order template text on item added to order template dialog"
      },
      "itemAddedToOrderTemplateHeaderItemFormatText": {
        "value": "{0} items",
        "comment": "View order template text on item added to order template dialog"
      },
      "itemAddedToOrderTemplateHeaderMessageText": {
        "value": " added to order template",
        "comment": "View order template text on item added to order template dialog"
      },
      "duplicatedProductsHeader": {
        "value": "Duplicated products",
        "comment": "Error dialog header when order template already has the same item added"
      },
      "duplicatedProductsDescription": {
        "value": "This product has been added to the selected order template in the past. Do you want to update the product quantity in the order template?",
        "comment": "Error dialog description when order template already has the same item added"
      },
      "updateQuantityButtonText": {
        "value": "Yes, update quantity",
        "comment": "Error dialog cancel button text when order template already has the same item added"
      },
      "cancelDuplicateItemsButtonText": {
        "value": "Cancel",
        "comment": "Error dialog override quantity button text when order template already has the same item added"
      },
      "shopSimilarLooksText": {
        "value": "Shop similar looks",
        "comment": "Text to show on Shop similar looks button"
      },
      "buyBoxGoToCartText": {
        "value": "View bag and checkout",
        "comment": "Text to show on Button to view cart"
      },
      "buyBoxContinueShoppingText": {
        "value": "Continue shopping",
        "comment": "Text to show on Button to continue shopping"
      },
      "buyBoxSingleItemText": {
        "value": "1 item",
        "comment": "Text to show if one item is added"
      },
      "buyBoxMultiLineItemFormatText": {
        "value": "{0} items",
        "comment": "Text to show if multiple items added"
      },
      "buyBoxHeaderMessageText": {
        "value": " added to bag",
        "comment": "Text to show if a item is added to the bag"
      }
    },
    "type": "containerModule"
  },
  "checkout": {
    "friendlyName": "Checkout",
    "name": "checkout",
    "description": "Checkout captures the information needed to place an order and allows the user to place an order.",
    "categories": [
      "Purchase"
    ],
    "dataActions": {
      "checkout": {
        "path": "@msdyn365-commerce/global-state/dist/lib/data-actions/checkout-state-data-action",
        "runOn": "client"
      },
      "products": {
        "path": "./actions/get-products-in-active-checkout-cart",
        "runOn": "client"
      },
      "orgUnitLocations": {
        "path": "@msdyn365-commerce-modules/retail-actions/dist/lib/search-org-unit-locations",
        "runOn": "client"
      }
    },
    "config": {
      "checkoutHeading": {
        "friendlyName": "Checkout heading",
        "description": "Checkout heading",
        "type": "object",
        "properties": {
          "text": {
            "type": "string",
            "friendlyName": "Heading Text",
            "description": "Heading Text",
            "default": "Heading",
            "required": true
          },
          "tag": {
            "type": "string",
            "friendlyName": "Heading Level",
            "description": "Heading Tag",
            "enum": {
              "h1": "H1",
              "h2": "H2",
              "h3": "H3",
              "h4": "H4",
              "h5": "H5",
              "h6": "H6"
            },
            "default": "h2"
          }
        }
      },
      "lineItemsHeading": {
        "friendlyName": "Line items heading",
        "description": "Line items heading",
        "type": "object",
        "properties": {
          "text": {
            "type": "string",
            "friendlyName": "Heading Text",
            "description": "Heading Text",
            "default": "Heading",
            "required": true
          },
          "tag": {
            "type": "string",
            "friendlyName": "Heading Level",
            "description": "Heading Tag",
            "enum": {
              "h1": "H1",
              "h2": "H2",
              "h3": "H3",
              "h4": "H4",
              "h5": "H5",
              "h6": "H6"
            },
            "default": "h2"
          }
        }
      },
      "orderSummaryHeading": {
        "friendlyName": "Order summary heading",
        "description": "Order summary heading",
        "type": "object",
        "properties": {
          "text": {
            "type": "string",
            "friendlyName": "Heading Text",
            "description": "Heading Text",
            "default": "Heading",
            "required": true
          },
          "tag": {
            "type": "string",
            "friendlyName": "Heading Level",
            "description": "Heading Tag",
            "enum": {
              "h1": "H1",
              "h2": "H2",
              "h3": "H3",
              "h4": "H4",
              "h5": "H5",
              "h6": "H6"
            },
            "default": "h2"
          }
        }
      },
      "showShippingChargesForLineItems": {
        "friendlyName": "Show shipping charges for line items",
        "description": " If shipping charges are available at the line level when the item is on the cart, display the charges",
        "type": "boolean",
        "default": false
      },
      "disableGuidedCheckoutFlow": {
        "friendlyName": "Disable guided checkout flow",
        "description": "Disable guided checkout flow",
        "type": "boolean",
        "default": false,
        "required": false,
        "scope": "module"
      },
      "imageSettings": {
        "friendlyName": "Cart line item image settings",
        "description": "Image settings for cart line items",
        "type": "imageSettings"
      },
      "className": {
        "friendlyName": "Custom CSS class name",
        "description": "Provide a custom css class name defined in the theme pack to target the CSS for this module",
        "type": "string",
        "default": ""
      }
    },
    "resources": {
      "checkoutStepTitleFormat": {
        "comment": "Title of shipping address section",
        "value": "{stepNumber}. {stepTitle}"
      },
      "saveBtnLabel": {
        "comment": "Save button label",
        "value": "Save"
      },
      "saveAndContinueBtnLabel": {
        "comment": "Save and continue button label",
        "value": "Save & continue"
      },
      "changeBtnLabel": {
        "comment": "Change button label",
        "value": "Change"
      },
      "cancelBtnLabel": {
        "comment": "Cancel button label",
        "value": "Cancel"
      },
      "genericErrorMessage": {
        "comment": "Generic error message",
        "value": "Something went wrong, please try again."
      },
      "checkoutOutOfStockErrorMessage": {
        "comment": "Out of stock while checking out error message",
        "value": "Some of the items do not have enough stock. Please adjust the quantity in your cart."
      },
      "cookieConsentRequiredMessage": {
        "comment": "Localized text for cookie consent required message",
        "value": "Cookie consent required to load this content. See cookie banner on the page for more details."
      },
      "backToShopping": {
        "comment": "Back to shopping label",
        "value": "Back to shopping"
      },
      "placeOrderText": {
        "comment": "Text for the checkout button to place the order",
        "value": "Place order"
      },
      "discountStringText": {
        "comment": "String to show discount offer string",
        "value": "Savings "
      },
      "discountOffStringText": {
        "comment": "string to show discount offer string",
        "value": "off"
      },
      "quantityDisplayString": {
        "comment": "Quantity of line item",
        "value": "Quantity"
      },
      "productDimensionTypeColor": {
        "comment": "String that corresponds to the Color Product Dimension Type (1)",
        "value": "Color"
      },
      "productDimensionTypeSize": {
        "comment": "String that corresponds to the Size Product Dimension Type (3)",
        "value": "Size"
      },
      "productDimensionTypeStyle": {
        "comment": "String that corresponds to the Style Product Dimension Type (4)",
        "value": "Style"
      },
      "itemLabel": {
        "comment": "Item label",
        "value": "item"
      },
      "itemsLabel": {
        "comment": "Items label",
        "value": "items"
      },
      "inStorePickUpLabel": {
        "comment": "In store pickup label",
        "value": "In-store pickup ({count} {suffix})"
      },
      "shippingCountCheckoutLineItem": {
        "comment": "Shipping label",
        "value": "Shipping ({count} {suffix})"
      },
      "pickUpAtStoreWithLocationText": {
        "comment": "Text for pick up at store checkbox when location is specified",
        "value": "Pick up at a store "
      },
      "editCartText": {
        "comment": "Edit cart text",
        "value": "Edit Cart"
      },
      "configString": {
        "comment": "Configuration text",
        "value": "Configuration"
      },
      "subTotalLabel": {
        "comment": "Items with count label",
        "value": "Subtotal"
      },
      "shippingLabel": {
        "comment": "Label of shipping",
        "value": "Shipping"
      },
      "otherCharges": {
        "comment": "String associated with other charge line display text",
        "value": "Other charges"
      },
      "shippingCharges": {
        "comment": "String associated with shipping charges line display text",
        "value": "Shipping charges"
      },
      "freeText": {
        "comment": "Free price text",
        "value": "Free"
      },
      "taxLabel": {
        "comment": "Label of estimated tax",
        "value": "Tax"
      },
      "loyaltyLabel": {
        "comment": "Label of loyalty rewards",
        "value": "Loyalty rewards"
      },
      "giftcardLabel": {
        "comment": "Label of gift card",
        "value": "Gift card"
      },
      "totalAmountLabel": {
        "comment": "Label of total amount",
        "value": "Amount due"
      },
      "totalSavingsLabel": {
        "comment": "Label of total savings",
        "value": "Total savings"
      },
      "orderTotalLabel": {
        "comment": "Label for total order amount",
        "value": "Amount Due"
      },
      "totalDiscountsLabel": {
        "comment": "Label of total discounts",
        "value": "Total discounts"
      },
      "toBeCalculatedText": {
        "comment": "Label of to be calculated",
        "value": "To be calculated"
      },
      "inputQuantityAriaLabel": {
        "comment": "Aria label for the input quantity",
        "value": "quantity input"
      }
    },
    "slots": {
      "checkoutInformation": {
        "friendlyName": "Checkout Information",
        "description": "This contains the checkout information like shipping address, payment instrument and etc. This content is in the left slot ",
        "max": 10,
        "min": 1,
        "allowedTypes": [
          "checkout-shipping-address",
          "checkout-billing-address",
          "checkout-guest-profile",
          "checkout-delivery-options",
          "checkout-gift-card",
          "checkout-loyalty",
          "checkout-section-container",
          "checkout-payment-instrument",
          "checkout-terms-and-conditions",
          "text-block",
          "checkout-customer-account-payment"
        ],
        "allowedCategories": [
          "checkout-information-modules"
        ]
      },
      "orderConfirmation": {
        "friendlyName": "Order confirmation",
        "description": "This module shows an order confirmation after the order is placed, using the information found in checkout state",
        "max": 1,
        "min": 0,
        "allowedTypes": [
          "checkout-order-confirmation"
        ]
      },
      "termsAndConditions": {
        "friendlyName": "Terms and conditions",
        "description": "This module shows terms and condition next to Place order button",
        "max": 1,
        "min": 0,
        "allowedTypes": [
          "checkout-terms-and-conditions"
        ]
      }
    },
    "type": "containerModule"
  },
  "cart": {
    "friendlyName": "Cart",
    "name": "cart",
    "description": "Cart is used for viewing all the items added to the cart, allows user to proceed to checkout.",
    "categories": [
      "Purchase",
      "Shopping bag"
    ],
    "dataActions": {
      "storeSelectorStateManager": {
        "path": "@msdyn365-commerce-modules/bopis-utilities/dist/lib/store-selector-state-manager/store-selector-state-manager-data-action"
      },
      "cart": {
        "path": "@msdyn365-commerce/global-state/dist/lib/data-actions/cart-state-data-action",
        "runOn": "server"
      },
      "products": {
        "path": "@msdyn365-commerce-modules/retail-actions/dist/lib/get-products-in-active-cart",
        "runOn": "server"
      },
      "orgUnitLocations": {
        "path": "@msdyn365-commerce-modules/retail-actions/dist/lib/search-org-unit-locations",
        "runOn": "server"
      },
      "wishlists": {
        "path": "@msdyn365-commerce-modules/retail-actions/dist/lib/get-wishlist-by-customer-id",
        "runOn": "client"
      },
      "wishlistItems": {
        "path": "@msdyn365-commerce-modules/retail-actions/dist/lib/get-items-in-wishlist",
        "runOn": "client"
      },
      "productAvailabilites": {
        "path": "@msdyn365-commerce-modules/retail-actions/dist/lib/get-availabilities-cartlines",
        "runOn": "server"
      },
      "deliveryOptions": {
        "path": "@msdyn365-commerce-modules/retail-actions/dist/lib/get-delivery-options-for-cartlines",
        "runOn": "server"
      },
      "customerInformation": {
        "path": "@msdyn365-commerce-modules/retail-actions/dist/lib/get-customer"
      },
      "featureState": {
        "path": "@msdyn365-commerce-modules/retail-actions/dist/lib/get-feature-state",
        "runOn": "server"
      },
      "orderTemplates": {
        "path": "@msdyn365-commerce-modules/retail-actions/dist/lib/order-templates/get-order-templates-preview",
        "runOn": "client"
      }
    },
    "config": {
      "showOutOfStockErrors": {
        "friendlyName": "Show Out Of Stock Errors",
        "description": "Shows error messages when items are out of stock or the quantity exceeds the stock",
        "type": "boolean"
      },
      "showShippingChargesForLineItems": {
        "friendlyName": "Show shipping charges for line items",
        "description": " If shipping charges are available at the line level when the item is on the cart, display the charges",
        "type": "boolean",
        "default": false
      },
      "imageSettings": {
        "friendlyName": "Cart line item Image Settings",
        "description": "Image settings for cart line item",
        "type": "imageSettings"
      },
      "featureName": {
        "friendlyName": "Enter the feature code that needs to be enabled.",
        "description": "This feature code, if enabled in HQ, will add the functionality.",
        "type": "string",
        "default": "Dynamics.AX.Application.RetailB2BEcommerceFeature"
      }
    },
    "resources": {
      "pickUpAtStoreWithLocationText": {
        "comment": "Text for pick up at store checkbox when location is specified",
        "value": "Pick up at a store"
      },
      "bopisSelectAStore": {
        "comment": "Header for BOPIS (Buy Online Pickup In Store) dialog",
        "value": "Select A Store"
      },
      "orLabel": {
        "comment": "The label that shows up between the guest checkout button and the signed-in checkout button, when the application is in an anonymous user state",
        "value": "OR"
      },
      "backToShopping": {
        "comment": "Back to shopping label",
        "value": "Back to shopping"
      },
      "outOfStockErrorMessageHeader": {
        "comment": "Display text for Out of stock error message",
        "value": "There are some issues."
      },
      "outOfStockErrorMessage": {
        "comment": "Display text for Out of stock error message",
        "value": "This product is no longer available. Please remove it from the bag."
      },
      "errorMessageOutOfRangeOneLeft": {
        "value": "There is only one product left. Please choose quantity within the available range",
        "comment": "Error message to show when quantity selected is more than the quantity left, and only one product is left"
      },
      "errorMessageOutOfRangeFormat": {
        "value": "There are only {numLeft} products left. Please choose quantity within the available range",
        "comment": "Error message to show when quantity selected is more than the quantity left. {numLeft} is the number of products left."
      },
      "cartTitle": {
        "comment": "Cart title",
        "value": "Shopping bag"
      },
      "emptyCartText": {
        "comment": "Text for the empty cart",
        "value": "Your cart is empty."
      },
      "failToGetCartText": {
        "comment": "Text for fail to get cart",
        "value": "Unable to get cart!"
      },
      "removeCartButtonText": {
        "comment": "Text for the remove button",
        "value": "Remove"
      },
      "cartRemoveButtonAriaLabel": {
        "comment": "Aria label for the remove button",
        "value": "Remove {productName}"
      },
      "pickUpAtStoreText": {
        "comment": "Text for pick up at store checkbox",
        "value": "Pick up at a store "
      },
      "waitingClass": {
        "comment": "CSS class for the waiting class",
        "value": "waiting waiting-circular waiting-lg"
      },
      "decrementButtonAriaLabel": {
        "comment": "Aria label for the quantity decrease button",
        "value": "Press to decrease the quantity by 1"
      },
      "incrementButtonAriaLabel": {
        "comment": "Aria label for the quantity increment button",
        "value": "Press to increment quantity by 1"
      },
      "inputQuantityAriaLabel": {
        "comment": "Aria label for the input quantity",
        "value": "quantity input"
      },
      "discountStringText": {
        "comment": "string for showing discount off",
        "value": "Discount "
      },
      "saveForLaterText": {
        "comment": "string to save for later text",
        "value": "Move to Wishlist"
      },
      "nameOfWishlist": {
        "comment": "string for name of the wishlist",
        "value": "My Wishlist"
      },
      "productDimensionTypeColor": {
        "comment": "String that corresponds to the Color Product Dimension Type (1)",
        "value": "Color"
      },
      "productDimensionTypeSize": {
        "comment": "String that corresponds to the Size Product Dimension Type (3)",
        "value": "Size"
      },
      "productDimensionTypeStyle": {
        "comment": "String that corresponds to the Style Product Dimension Type (4)",
        "value": "Style"
      },
      "productDimensionTypeConfiguration": {
        "comment": "String that corresponds to the Style Product Dimension Configuration (2)",
        "value": "Configuration"
      },
      "shipInsteadDisplayText": {
        "comment": "String that corresponds to the ship instead display text",
        "value": "Ship this item"
      },
      "changeStoreDisplayText": {
        "comment": "String that corresponds to the change store display text",
        "value": "Change store"
      },
      "quantityDisplayText": {
        "comment": "String that corresponds to the quantity display text",
        "value": "Quantity"
      },
      "shipToAddressDisplayText": {
        "comment": "String that corresponds to the ship it to an address display text",
        "value": "Ship to an address"
      },
      "pickItUpDisplayText": {
        "comment": "String that corresponds to the pick it up display text",
        "value": "Pick this up"
      },
      "totalSavingsText": {
        "comment": "String that corresponds to the total savings display text",
        "value": "Savings"
      },
      "originalPriceText": {
        "comment": "String that corresponds to the original price screen reader text",
        "value": "Original price"
      },
      "currentPriceText": {
        "comment": "String that corresponds to the current price screen reader text",
        "value": "Current price"
      },
      "cartLoadingErrorMessage": {
        "comment": "String that corresponds to the error message that is shown when essential data actions fail",
        "value": "Sorry we are unable to load your cart at this moment, please try again later."
      },
      "orderSummaryTitle": {
        "comment": "Order summary title",
        "value": "Order summary"
      },
      "itemsWithCountLabel": {
        "comment": "Items with count label",
        "value": "Subtotal "
      },
      "estimatedShippingLabel": {
        "comment": "Label of shipping",
        "value": "Estimated Shipping"
      },
      "shippingCharges": {
        "comment": "String associated with shipping charges line display text",
        "value": "Shipping charges"
      },
      "priceFree": {
        "comment": "Free price text",
        "value": "Free"
      },
      "estimatedTaxLabel": {
        "comment": "Label of estimated tax",
        "value": "Estimated Tax"
      },
      "totalAmountLabel": {
        "comment": "Label of total amount",
        "value": "Amount due "
      },
      "totalSavings": {
        "comment": "String associated with Total Savings display text",
        "value": "Total savings "
      },
      "conditionsText": {
        "comment": "String associated with Legal disclaimer for order total display text",
        "value": "*Before applicable taxes"
      },
      "yetToBeCalculatedText": {
        "comment": "String associated with to be calculated display text",
        "value": "To be calculated"
      },
      "orderTotal": {
        "comment": "String associated with order total line display text",
        "value": "Total"
      },
      "otherCharges": {
        "comment": "String associated with other charge line display text",
        "value": "Other charges"
      },
      "notApplicationForCartOrderSummary": {
        "comment": "String associated with order total line display text",
        "value": "Not applicable"
      },
      "totalDiscountsLabel": {
        "comment": "Label of total discounts",
        "value": "Total discounts"
      },
      "guestCheckoutButtonTitle": {
        "comment": "Label for guest checkout button",
        "value": "Guest Checkout"
      },
      "checkoutButtonTitle": {
        "comment": "Label for checkout button",
        "value": "Checkout"
      },
      "backToShoppingButtonTitle": {
        "comment": "Label for back to shopping button",
        "value": "Back to shopping"
      },
      "addToWishlistButtonText": {
        "comment": "Label for Move to wishlist button",
        "value": "Move to wishlist"
      },
      "removeFromWishlistButtonText": {
        "comment": "Label for Remove from wishlist button",
        "value": "Remove from wishlist"
      },
      "defaultWishlistName": {
        "comment": "Label for Default wishlist",
        "value": "My wishlist"
      },
      "promoCodeHeadingText": {
        "comment": "Heading text for promo code",
        "value": "Promo code"
      },
      "promoPlaceholderText": {
        "comment": "Promo code placeholder text",
        "value": "Enter a promo code"
      },
      "promoCodeApplyButtonText": {
        "comment": "Promo code apply button text",
        "value": "Apply"
      },
      "removePromoAriaLabelFormat": {
        "comment": "Promo aria label format",
        "value": "{0} {1}"
      },
      "removePromoText": {
        "comment": "Promo code remove button text",
        "value": "Remove"
      },
      "appliedPromoCodeHeadingText": {
        "comment": "header for applied promo code",
        "value": "Applied promo codes"
      },
      "invalidPromoCodeErrorText": {
        "comment": "To show invalid promo code message",
        "value": "Invalid promo code"
      },
      "failedToAddPromoCodeErrorText": {
        "comment": "To show message on fail to add promo code",
        "value": "Failed to add promo code"
      },
      "failedToRemovePromoCodeErrorText": {
        "comment": "To show message on fail to add promo code",
        "value": "Failed to remove promo code"
      },
      "duplicatePromotionErrorText": {
        "comment": "Text to be shown when adding a duplicate promotion code",
        "value": "Promo code already applied"
      },
      "createOrderTemplateFromCartButton": {
        "comment": "Label for creating creating template from cart button",
        "value": "Save all items to order template"
      },
      "createOrderTemplateHeader": {
        "value": "Create an order template",
        "comment": "Text for create order template dialog header"
      },
      "orderTemplateTitle": {
        "value": "Order template title",
        "comment": "Text for create order template dialog title"
      },
      "orderTemplateNameAriaLabel": {
        "value": "Order template title",
        "comment": "Text for create order template dialog template name input aria label"
      },
      "createOrderTemplateDescription": {
        "value": "Order templates will be saved to your account. You can reuse them in the future to speed up the checkout process. Create an order template and add this item to it.",
        "comment": "Text for create order template dialog description"
      },
      "createNewOrderTemplateButtonText": {
        "value": "Create new",
        "comment": "Text for create order template dialog create new button"
      },
      "createOrderTemplateButtonText": {
        "value": "Create",
        "comment": "Text for create order template dialog create button"
      },
      "cancelNewOrderTemplateCreationButtonText": {
        "value": "Cancel",
        "comment": "Text for create order template dialog cancel button"
      },
      "defaultOrderTemplateName": {
        "value": "Untitled",
        "comment": "Text for create order template dialog default order template name"
      },
      "addToOrderTemplateHeader": {
        "value": "Add to order template",
        "comment": "Text for add to order template dialog header"
      },
      "noOrderTemplatesMessage": {
        "value": "You have not created any order templates.",
        "comment": "Text for add to order template dialog message"
      },
      "noOrderTemplatesDescription": {
        "value": "Order templates will be saved to your account. You can reuse them in the future to speed up the checkout process. Create an order template and add this item to it.",
        "comment": "Text for add to order template dialog description"
      },
      "createAnOrderTemplateButtonText": {
        "value": "Create an order template",
        "comment": "Text for creating an order template button"
      },
      "cancelOrderTemplateCreationButtonText": {
        "value": "Cancel",
        "comment": "Text for canceling adding to order template dialog"
      },
      "selectTemplatesText": {
        "value": "Select a template or create a new one. You have {0} template(s).",
        "comment": "Text for add to order template dialog description"
      },
      "addToTemplateButtonText": {
        "value": "Add to template",
        "comment": "Text for add to order template dialog button"
      },
      "lineItemsText": {
        "value": "{0} line item(s)",
        "comment": "Text for add to order template dialog order template description"
      },
      "addToOrderTemplateButtonText": {
        "value": "Add to order template",
        "comment": "Text for add to order template button"
      },
      "addToOrderTemplateMessage": {
        "value": "Added to your order template",
        "comment": "Text for showing for adding item to your order template message"
      },
      "addItemToOrderTemplateError": {
        "value": "Unable to add item to order template",
        "comment": "For showing error message on adding item to order template"
      },
      "viewOrderTemplateButtonText": {
        "value": "View order template",
        "comment": "View order template text on item added to order template dialog"
      },
      "continueShoppingButtonText": {
        "value": "Continue shopping",
        "comment": "Continue shopping on item added to order template dialog"
      },
      "linesAddedToOrderTemplateHeaderItemsOneText": {
        "value": "1 line item",
        "comment": "View order template text on cart added to order template dialog"
      },
      "linesAddedToOrderTemplateHeaderItemsFormatText": {
        "value": "{0} line items",
        "comment": "View order template text on cart added to order template dialog"
      },
      "linesAddedToOrderTemplateHeaderLinesOneText": {
        "value": "1 line",
        "comment": "View order template text on cart added to order template dialog"
      },
      "linesAddedToOrderTemplateHeaderLinesFormatText": {
        "value": "{0} lines",
        "comment": "View order template text on cart added to order template dialog"
      },
      "linesAddedToOrderTemplateHeaderMessageText": {
        "value": " added to order template",
        "comment": "View order template text on cart added to order template dialog"
      },
      "itemAddedToOrderTemplateHeaderItemOneText": {
        "value": "1 item",
        "comment": "View order template text on item added to order template dialog"
      },
      "itemAddedToOrderTemplateHeaderItemFormatText": {
        "value": "{0} items",
        "comment": "View order template text on item added to order template dialog"
      },
      "itemAddedToOrderTemplateHeaderMessageText": {
        "value": " added to order template",
        "comment": "View order template text on item added to order template dialog"
      },
      "freePriceText": {
        "value": "FREE",
        "comment": "View order template text on item added to order template dialog"
      },
      "duplicatedProductsHeader": {
        "value": "Duplicated products",
        "comment": "Error dialog header when order template already has the same item added"
      },
      "duplicatedProductsDescription": {
        "value": "This product has been added to the selected order template in the past. Do you want to update the product quantity in the order template?",
        "comment": "Error dialog description when order template already has the same item added"
      },
      "updateQuantityButtonText": {
        "value": "Yes, update quantity",
        "comment": "Error dialog cancel button text when order template already has the same item added"
      },
      "cancelDuplicateItemsButtonText": {
        "value": "Cancel",
        "comment": "Error dialog override quantity button text when order template already has the same item added"
      }
    },
    "slots": {
      "storeSelector": {
        "friendlyName": "Store Selector",
        "description": "Store Selector to use with the Find In Store component",
        "max": 1,
        "min": 0,
        "allowedTypes": [
          "store-selector"
        ]
      }
    },
    "type": "containerModule"
  },
  "cart-icon": {
    "friendlyName": "Cart Icon",
    "name": "cart-icon",
    "description": "Cart is used for viewing all the items added to the cart, allows user to proceed to checkout.",
    "categories": [
      "Purchase",
      "Shopping bag"
    ],
    "dataActions": {
      "cart": {
        "path": "@msdyn365-commerce/global-state/dist/lib/data-actions/cart-state-data-action",
        "runOn": "server"
      },
      "orgUnitLocations": {
        "path": "@msdyn365-commerce-modules/retail-actions/dist/lib/search-org-unit-locations",
        "runOn": "server"
      }
    },
    "config": {
      "imageSettings": {
        "friendlyName": "Cart line item Image Settings",
        "description": "Image settings for cart line item",
        "type": "imageSettings"
      },
      "enableHoverCart": {
        "friendlyName": "Show mini cart",
        "description": "Show mini cart on mouse over on cart icon.",
        "type": "boolean",
        "default": true
      }
    },
    "resources": {
      "goToCartButtonTitle": {
        "comment": "Label for go to cart button. Count = number of items in the cart",
        "value": "View shopping bag ({count})"
      },
      "totalPriceFormatString": {
        "comment": "String associated with total price to display. Price = formatted price",
        "value": "Subtotal: {price}"
      },
      "guestCheckoutButtonTitle": {
        "comment": "Label for guest checkout button",
        "value": "Guest Checkout"
      },
      "checkoutButtonTitle": {
        "comment": "Label for checkout button",
        "value": "Checkout"
      },
      "productDimensionTypeColor": {
        "comment": "String that corresponds to the Color Product Dimension Type (1)",
        "value": "Color"
      },
      "productDimensionTypeSize": {
        "comment": "String that corresponds to the Size Product Dimension Type (3)",
        "value": "Size"
      },
      "productDimensionTypeStyle": {
        "comment": "String that corresponds to the Style Product Dimension Type (4)",
        "value": "Style"
      },
      "productDimensionTypeConfiguration": {
        "comment": "String that corresponds to the Style Product Dimension Configuration (2)",
        "value": "Configuration"
      },
      "quantityDisplayText": {
        "comment": "String that corresponds to the quantity display text",
        "value": "Quantity"
      },
      "removeCartButtonText": {
        "comment": "Text for the remove button",
        "value": "Remove"
      },
      "cartLabel": {
        "comment": "string to be shown for cart or shopping bag tooltip",
        "value": "Shopping bag, {0} items"
      },
      "flyoutTitle": {
        "comment": "string to be shown for mini cart flyout",
        "value": "Your shopping bag"
      }
    },
    "slots": {},
    "type": "containerModule"
  },
  "checkout-billing-address": {
    "friendlyName": "Billing address",
    "name": "checkout-billing-address",
    "description": "Billing address allows user to add or select the billing address for the order",
    "categories": [
      "Purchase",
      "Payment"
    ],
    "dataActions": {
      "checkout": {
        "path": "@msdyn365-commerce/global-state/dist/lib/data-actions/checkout-state-data-action",
        "runOn": "client"
      },
      "countryRegions": {
        "path": "../../actions/get-country-regions",
        "runOn": "server"
      },
      "countryStates": {
        "path": "../../actions/get-country-state",
        "runOn": "server"
      },
      "addressPurposes": {
        "path": "../../actions/get-address-purposes",
        "runOn": "server"
      }
    },
    "config": {
      "heading": {
        "friendlyName": "Heading",
        "description": "Module heading",
        "type": "object",
        "properties": {
          "text": {
            "type": "string",
            "friendlyName": "Heading Text",
            "description": "Heading Text",
            "default": "Heading",
            "required": true
          },
          "tag": {
            "type": "string",
            "friendlyName": "Heading Level",
            "description": "Heading Tag",
            "enum": {
              "h1": "H1",
              "h2": "H2",
              "h3": "H3",
              "h4": "H4",
              "h5": "H5",
              "h6": "H6"
            },
            "default": "h2"
          }
        }
      },
      "className": {
        "friendlyName": "Custom CSS class name",
        "description": "Provide a custom css class name defined in the theme pack to target the CSS for this module",
        "type": "string",
        "default": ""
      },
      "showAddressType": {
        "friendlyName": "Show address type",
        "description": "If true allows user to view/edit address type field. For example: Home, Business etc.",
        "type": "boolean",
        "default": false,
        "required": false
      },
      "paymenTenderType": {
        "friendlyName": "Supported tender types",
        "description": "Input the supported tender types as defined in the payment connector in HQ. This field is required only if multiple payment connectors are configured, otherwise leave it as blank",
        "type": "string",
        "required": false,
        "scope": "module"
      }
    },
    "resources": {
      "addressBillingAddressHeading": {
        "comment": "Heading",
        "value": "Billing address"
      },
      "addressSameAsShippingAddressAriaLabel": {
        "comment": "Same as shipping address aria label",
        "value": "Same as shipping address"
      },
      "addressSameAsShippingAddressText": {
        "comment": "Same as shipping address text",
        "value": "Same as shipping address"
      },
      "addressAddButtonText": {
        "comment": "Add button text",
        "value": "Add address"
      },
      "addressAddButtonAriaLabel": {
        "comment": "Add button aria label",
        "value": "Add address"
      },
      "addressPrimaryButtonText": {
        "comment": "Primay button text",
        "value": "Set as primary address"
      },
      "addressPrimaryButtonAriaLabel": {
        "comment": "Primay button aria label",
        "value": "Set {addressName} address as your primary address"
      },
      "addressEditButtonText": {
        "comment": "Edit button text",
        "value": "Edit"
      },
      "addressEditButtonAriaLabel": {
        "comment": "Edit button aria label",
        "value": "Edit {addressName} address"
      },
      "addressRemoveButtonText": {
        "comment": "Remove button text",
        "value": "Remove"
      },
      "addressRemoveButtonAriaLabel": {
        "comment": "Remove button aria label",
        "value": "Remove {addressName} address"
      },
      "addressSaveButtonText": {
        "comment": "Save button text",
        "value": "Save"
      },
      "addressSaveButtonAriaLabel": {
        "comment": "Save button aria label",
        "value": "Save"
      },
      "addressCancelButtonText": {
        "comment": "Cancel button text",
        "value": "Cancel"
      },
      "addressCancelButtonAriaLabel": {
        "comment": "Cancel button aria label",
        "value": "Cancel"
      },
      "addressStateDefaultSelectionText": {
        "comment": "Default selection text for state drop down",
        "value": "Select state"
      },
      "addressNameLabel": {
        "comment": "Label for the Name field",
        "value": "Name *"
      },
      "addressNameRequiredErrorMessage": {
        "comment": "Error message to display when name is not provided",
        "value": "Name is required"
      },
      "addressPhoneLabel": {
        "comment": "Label for the phone field",
        "value": "Phone"
      },
      "addressPhoneRequiredErrorMessage": {
        "comment": "Error message to display when phone is not provided",
        "value": "Phone is required"
      },
      "addressZipCodeLabel": {
        "comment": "Label for the zipcode field",
        "value": "Zip code *"
      },
      "addressAddressTypeValueLabel": {
        "comment": "Label for the Address Type field",
        "value": "Address Type *"
      },
      "addressZipCodeRequiredErrorMessage": {
        "comment": "Error message to display when zip code is not provided",
        "value": "Zip code is required"
      },
      "addressCityLabel": {
        "comment": "Label for the city field",
        "value": "City *"
      },
      "addressCityRequiredErrorMessage": {
        "comment": "Error message to display when city is not provided",
        "value": "City is required"
      },
      "addressCountyLabel": {
        "comment": "Label for the County field",
        "value": "County"
      },
      "addressCountyRequiredErrorMessage": {
        "comment": "Error message to display when county is not provided",
        "value": "County is required"
      },
      "addressStateLabel": {
        "comment": "Label for the State field",
        "value": "State *"
      },
      "addressStateRequiredErrorMessage": {
        "comment": "Error message to display when zip code is not provided",
        "value": "State is required"
      },
      "addressThreeLetterISORegionNameLabel": {
        "comment": "Label for the country field",
        "value": "Country *"
      },
      "addressThreeLetterISORegionNameRequiredErrorMessage": {
        "comment": "Error message to display when country is not provided",
        "value": "Country is required"
      },
      "addressStreetLabel": {
        "comment": "Label for the Street field",
        "value": "Street *"
      },
      "addressStreetRequiredErrorMessage": {
        "comment": "Error message to display when street is not provided",
        "value": "Street is required"
      },
      "addressDistrictLabel": {
        "comment": "Label for the District field",
        "value": "District"
      },
      "addressDistrictRequiredErrorMessage": {
        "comment": "Error message to display when district is not provided",
        "value": "District is required"
      },
      "addressStreetNumberLabel": {
        "comment": "Label for the street number field",
        "value": "Street number"
      },
      "addressStreetNumberRequiredErrorMessage": {
        "comment": "Error message to display when street number is not provided",
        "value": "Street number is required"
      },
      "addressBuildingComplimentLabel": {
        "comment": "Label for the building compliment field",
        "value": "Building compliment"
      },
      "addressBuildingComplimentRequiredErrorMessage": {
        "comment": "Error message to display when building compliment is not provided",
        "value": "Building compliment is required"
      },
      "addressPostboxLabel": {
        "comment": "Label for the post box field",
        "value": "Post box"
      },
      "addressPostboxRequiredErrorMessage": {
        "comment": "Error message to display when post box is not provided",
        "value": "Post box is required"
      },
      "addressHouseRULabel": {
        "comment": "Label for the house field",
        "value": "House"
      },
      "addressHouseRURequiredErrorMessage": {
        "comment": "Error message to display when house is not provided",
        "value": "House is required"
      },
      "addressFlatRULabel": {
        "comment": "Label for the flat field",
        "value": "Flat"
      },
      "addressFlatRURequiredErrorMessage": {
        "comment": "Error message to display when flat is not provided",
        "value": "Flat is required"
      },
      "addressCountryOKSMCodeRULabel": {
        "comment": "Label for the countryoksmcode field",
        "value": "Countryoksmcode"
      },
      "addressCountryOKSMCodeRURequiredErrorMessage": {
        "comment": "Error message to display when countryoksmcode is not provided",
        "value": "Countryoksmcode field is required"
      },
      "addressErrorMessageTitle": {
        "comment": "Localized text for error message title",
        "value": "Error message"
      },
      "addressGenericErrorMessage": {
        "comment": "Generic error message for Address module",
        "value": "Something went wrong. Please try again later"
      },
      "addressEmptyListAddressMessage": {
        "comment": "Generic message to show in list address component when no addresses are present",
        "value": "No addresses are present. Please add one."
      }
    },
    "type": "contentModule"
  },
  "account-loyalty-tile": {
    "friendlyName": "Account loyalty tile",
    "name": "account-loyalty-tile",
    "description": "Account loyalty tile is used to show a summary of loyalty card information associated to the account in the account management page",
    "categories": [
      "Account management"
    ],
    "dataActions": {
      "loyaltyCard": {
        "path": "@msdyn365-commerce-modules/retail-actions/dist/lib/get-loyalty-card",
        "runOn": "server"
      }
    },
    "config": {
      "heading": {
        "friendlyName": "Heading",
        "description": "Module heading",
        "required": true,
        "type": "object",
        "properties": {
          "text": {
            "type": "string",
            "friendlyName": "Heading Text",
            "description": "Heading Text",
            "default": "Heading",
            "required": true
          },
          "tag": {
            "type": "string",
            "friendlyName": "Heading Level",
            "description": "Heading Tag",
            "enum": {
              "h1": "H1",
              "h2": "H2",
              "h3": "H3",
              "h4": "H4",
              "h5": "H5",
              "h6": "H6"
            },
            "default": "h2"
          }
        }
      },
      "signUpLinkText": {
        "type": "string",
        "friendlyName": "Sign up link text",
        "description": "Link text used to link to loyalty sign up page",
        "default": "Learn more"
      },
      "signUpLinkAriaLabel": {
        "type": "string",
        "friendlyName": "Sign up link aria label",
        "description": "Aria label for View loyalty link",
        "default": "Learn more about our loyalty program"
      },
      "viewLinkText": {
        "type": "string",
        "friendlyName": "View loyalty link text",
        "description": "Link text used to link to loyalty summary page",
        "default": "View"
      },
      "viewLinkAriaLabel": {
        "type": "string",
        "friendlyName": "View loyalty link aria label",
        "description": "Aria label for View loyalty link",
        "default": "View loyalty program"
      },
      "className": {
        "friendlyName": "Custom CSS class name",
        "description": "Provide a custom css class name defined in the theme pack to target the CSS for this module",
        "type": "string",
        "default": ""
      }
    },
    "resources": {
      "accountLoyaltySummary": {
        "value": "You have not signed up for our loyalty program",
        "comment": "Text display as summary when the customer is not a loyalty member."
      },
      "accountLoyaltyMemberSummary": {
        "value": "You have {0} points available.",
        "comment": "Text display as summary when the customer is a loyalty member."
      }
    },
    "type": "contentModule"
  },
  "checkout-delivery-options": {
    "friendlyName": "Delivery options",
    "name": "checkout-delivery-options",
    "description": "Delivery options allows the user to choose a delivery option for the order",
    "categories": [
      "Purchase",
      "Shipping"
    ],
    "attributes": {
      "private": true
    },
    "dataActions": {
      "checkout": {
        "path": "@msdyn365-commerce/global-state/dist/lib/data-actions/checkout-state-data-action",
        "runOn": "client"
      }
    },
    "config": {
      "heading": {
        "friendlyName": "Heading",
        "description": "Module heading",
        "type": "object",
        "properties": {
          "text": {
            "type": "string",
            "friendlyName": "Heading Text",
            "description": "Heading Text",
            "default": "Heading",
            "required": true
          },
          "tag": {
            "type": "string",
            "friendlyName": "Heading Level",
            "description": "Heading Tag",
            "enum": {
              "h1": "H1",
              "h2": "H2",
              "h3": "H3",
              "h4": "H4",
              "h5": "H5",
              "h6": "H6"
            },
            "default": "h2"
          }
        }
      },
      "className": {
        "friendlyName": "Custom CSS class name",
        "description": "Provide a custom css class name defined in the theme pack to target the CSS for this module",
        "type": "string",
        "default": ""
      },
      "filterDeliveryModeOption": {
        "friendlyName": "Filter Delivery Mode Option",
        "description": "Filter Delivery Mode Option",
        "enum": {
          "none": "Do not filter",
          "filterOutNonCarrierDeliveryMode": "Non-shipping modes"
        },
        "type": "string",
        "default": "filterOutNonCarrierDeliveryMode",
        "required": false
      }
    },
    "resources": {
      "deliveryOptionsNotFound": {
        "comment": "Erroe message if no delivery options found",
        "value": "Sorry, no delivery options found. Please try different address."
      },
      "genericErrorMessage": {
        "comment": "Generic error message for Address module",
        "value": "Something went wrong. Please try again later"
      },
      "errorMessageTitle": {
        "comment": "Localized text for error message title",
        "value": "Error message"
      },
      "ariaLabelText": {
        "comment": "Aria label for form",
        "value": "Delivery options"
      },
      "priceFree": {
        "comment": "Free text",
        "value": "FREE"
      },
      "saveBtnLabel": {
        "comment": "Save button label",
        "value": "Save"
      },
      "editBtnLabel": {
        "comment": "Edit button label",
        "value": "Change"
      },
      "cancelBtnLabel": {
        "comment": "Cancel button label",
        "value": "Cancel"
      }
    },
    "type": "contentModule"
  },
  "checkout-customer-account-payment": {
    "friendlyName": "Customer account payment",
    "name": "checkout-customer-account-payment",
    "description": "This module allows the user to pay with their customer account at checkout",
    "categories": [
      "Purchase",
      "Payment"
    ],
    "tags": [
      "Purchase",
      "Payment"
    ],
    "dataActions": {
      "checkout": {
        "path": "@msdyn365-commerce/global-state/dist/lib/data-actions/checkout-state-data-action",
        "runOn": "client"
      },
      "customerInformation": {
        "path": "@msdyn365-commerce-modules/retail-actions/dist/lib/get-customer"
      },
      "creditBalances": {
        "path": "@msdyn365-commerce-modules/retail-actions/dist/lib/get-customer-balance"
      }
    },
    "resources": {
      "addPaymentButtonLabel": {
        "comment": "The label that is displayed on the button to pay with customer account",
        "value": "Apply"
      },
      "inputAmountLabel": {
        "comment": "The label that is displayed above the input for the user to choose the amount to pay with customer account",
        "value": "Apply credit balance"
      },
      "inputAmountSummaryLabel": {
        "comment": "The label that is displayed above the input for the user to choose the amount to pay with customer account when in summary mode",
        "value": "Account balance"
      },
      "inputAmountAriaLabel": {
        "comment": "The aria label for accessability for the input for the user to choose the amount to pay with customer account",
        "value": "amount to pay with customer account"
      },
      "customerSinceLabel": {
        "comment": "The label for the date the customer has been a customer since",
        "value": "Customer since "
      },
      "accountCreditLabel": {
        "comment": "The label for the account credit",
        "value": "Account credit: "
      },
      "invalidAmountMessage": {
        "comment": "Message to be displayed when the amount is not valid.",
        "value": "Invalid amount"
      },
      "creditDetailsSectionLabel": {
        "comment": "The label for the credit details section",
        "value": "Current order preview"
      },
      "availableCreditLabel": {
        "comment": "The label for the total available credit line",
        "value": "Total available credit"
      },
      "orderTotalLabel": {
        "comment": "The label for the current total",
        "value": "Current order total"
      },
      "creditExcessLabel": {
        "comment": "The label for the excess that cannot be covered by credit",
        "value": "Credit excess"
      },
      "appliedCustomerAccountPaymentLabel": {
        "comment": "The label for the applied customer account line in summary view",
        "value": "Applied:"
      },
      "removeCustomerAccountPaymentLabel": {
        "comment": "The label for the remove button on a customer account payment",
        "value": "Remove"
      }
    },
    "type": "contentModule"
  },
  "checkout-order-confirmation": {
    "friendlyName": "Checkout order confirmation",
    "name": "checkout-order-confirmation",
    "description": "This module shows an order confirmation after the order is placed, using the information found in checkout state",
    "categories": [
      "Account management",
      "Order management"
    ],
    "dataActions": {
      "checkout": {
        "path": "@msdyn365-commerce/global-state/dist/lib/data-actions/checkout-state-data-action",
        "runOn": "client"
      },
      "loyaltyCard": {
        "path": "@msdyn365-commerce-modules/retail-actions/dist/lib/get-loyalty-card",
        "runOn": "client"
      },
      "tenderTypes": {
        "path": "../../actions/get-tender-types",
        "runOn": "server"
      }
    },
    "config": {
      "heading": {
        "friendlyName": "Heading",
        "description": "Heading",
        "type": "object",
        "properties": {
          "text": {
            "type": "string",
            "friendlyName": "Heading Text",
            "description": "Heading Text",
            "default": "Heading",
            "required": true
          },
          "tag": {
            "type": "string",
            "friendlyName": "Heading Level",
            "description": "Heading Tag",
            "enum": {
              "h1": "H1",
              "h2": "H2",
              "h3": "H3",
              "h4": "H4",
              "h5": "H5",
              "h6": "H6"
            },
            "default": "h2"
          }
        }
      },
      "contactNumber": {
        "friendlyName": "Contact number",
        "description": "Contact number for help",
        "type": "string"
      },
      "imageSettings": {
        "friendlyName": "Order confirmation Image Settings",
        "description": "Image settings for order confirmation",
        "type": "imageSettings"
      },
      "className": {
        "friendlyName": "Custom CSS class name",
        "description": "Provide a custom css class name defined in the theme pack to target the CSS for this module",
        "type": "string",
        "default": ""
      }
    },
    "resources": {
      "loadingLabel": {
        "comment": "Loading message",
        "value": "Loading..."
      },
      "genericErrorMessage": {
        "comment": "Localized generic error message for Payment instrument module",
        "value": "Something went wrong. Please try again later."
      },
      "orderItemLabel": {
        "comment": "total items in order",
        "value": "item"
      },
      "orderItemsLabel": {
        "comment": "total items in order",
        "value": "items"
      },
      "orderIdLabel": {
        "comment": "Order ID label",
        "value": "Order#"
      },
      "confirmationIdLabel": {
        "comment": "Confirmation ID label",
        "value": "Confirmation ID:"
      },
      "orderSummaryTitle": {
        "comment": "Title for order summary",
        "value": "Order summary"
      },
      "paymentMethodsTitle": {
        "comment": "Title for payment methods",
        "value": "Payment method"
      },
      "shippingAddressTitle": {
        "comment": "Title for shipping address",
        "value": "Shipping address"
      },
      "noSalesOrderText": {
        "comment": "Text describes no sales order found",
        "value": "No order confirmation found"
      },
      "creditCardEndingLabel": {
        "comment": "Credit card ending label",
        "value": "card ending in"
      },
      "giftCardEndingLabel": {
        "comment": "Gift card ending label",
        "value": "Gift card ending in"
      },
      "amountCoveredLabel": {
        "comment": "Amount covered label",
        "value": "Amount covered:"
      },
      "loyaltyCardUsedLabel": {
        "comment": "Loyalty card used label",
        "value": "Loyalty card used "
      },
      "cashUsedLabel": {
        "comment": "Cash used label",
        "value": "Cash"
      },
      "customerAccountUsedLabel": {
        "comment": "Customer Account used label",
        "value": "Customer Account"
      },
      "freePriceText": {
        "comment": "Free price text",
        "value": "FREE"
      },
      "orderSummaryItemsTotalLabel": {
        "comment": "Order summary items total label",
        "value": "Subtotal"
      },
      "orderSummaryShippingFeeLabel": {
        "comment": "Order summary shipping fee label",
        "value": "Shipping"
      },
      "orderSummaryTaxLabel": {
        "comment": "Order summary tax label",
        "value": "Tax"
      },
      "orderSummaryGrandTotalLabel": {
        "comment": "Order summary grand total label",
        "value": "Total"
      },
      "salesLineQuantityText": {
        "comment": "Sales line quantity label",
        "value": "Qty"
      },
      "processingLabel": {
        "comment": "Text for order in processing state",
        "value": "Processing"
      },
      "needHelpLabel": {
        "comment": "Need help label",
        "value": "Need help?"
      },
      "helpLineNumberLabel": {
        "comment": "Help line number label",
        "value": "Call"
      },
      "helpLineContactAriaLabel": {
        "comment": "Localized text for contact link aria label",
        "value": "Need help, call"
      },
      "pickedUpSalesLines": {
        "comment": "Store pickup title",
        "value": "Store pickup"
      },
      "deliveredSalesLines": {
        "comment": "Delivery at home",
        "value": "Delivery"
      },
      "carryOutSalesLines": {
        "comment": "Customer carry out",
        "value": "Purchased"
      },
      "orderStatusReadyForPickup": {
        "comment": "Order status for order pickup",
        "value": "Ready for pickup"
      },
      "orderStatusProcessing": {
        "comment": "Order status for order processing",
        "value": "Processing"
      },
      "orderStatusShipped": {
        "comment": "Order status for order shipped",
        "value": "Shipped"
      },
      "orderStatusPickedUp": {
        "comment": "Order status for order picked up",
        "value": "Picked up"
      },
      "orderStatusCanceled": {
        "comment": "Order status for order canceled",
        "value": "Canceled"
      },
      "phoneAriaLabel": {
        "comment": "Aria label for phone",
        "value": "phone"
      },
      "buyItAgainLabel": {
        "comment": "text for buy it again link",
        "value": "Buy it again"
      },
      "buyItAgainAriaLabel": {
        "comment": "text for buy it again aria label",
        "value": "Buy it again for {productName}"
      },
      "shipToLabel": {
        "comment": "Ship to label",
        "value": "Ship to"
      },
      "storeLabel": {
        "comment": "Store label",
        "value": "Store"
      },
      "productDimensionTypeColor": {
        "comment": "String that corresponds to the Color Product Dimension Type (1)",
        "value": "Color"
      },
      "productDimensionTypeSize": {
        "comment": "String that corresponds to the Size Product Dimension Type (3)",
        "value": "Size"
      },
      "productDimensionTypeStyle": {
        "comment": "String that corresponds to the Style Product Dimension Type (4)",
        "value": "Style"
      },
      "trackingLabel": {
        "comment": "tracking number label for orders",
        "value": "Tracking number: "
      },
      "trackingComingSoonLabel": {
        "comment": "tracking number coming soon",
        "value": "Not yet available"
      },
      "trackingAriaLabel": {
        "comment": "aria label for tracking number link",
        "value": "track your order"
      },
      "pointsEarnedLabel": {
        "comment": "Label for the amount of loyalty points earned",
        "value": "Points earned"
      },
      "receiptEmailMessage": {
        "comment": "Label for reciept email",
        "value": "Confirmation email sent to "
      },
      "receiptIdLabel": {
        "comment": "Receipt id label",
        "value": "Receipt#"
      },
      "backToShopping": {
        "comment": "Back to shopping label",
        "value": "Back to shopping"
      },
      "configString": {
        "comment": "Configuration text",
        "value": "Configuration"
      },
      "phoneLabel": {
        "comment": "Phone label",
        "value": "Phone: "
      },
      "orderSummaryHeading": {
        "comment": "Order summary heading",
        "value": "Order summary"
      },
      "discountStringText": {
        "comment": "String to show discount offer string",
        "value": "Savings "
      }
    },
    "type": "contentModule"
  },
  "checkout-loyalty": {
    "friendlyName": "Checkout loyalty",
    "name": "checkout-loyalty",
    "description": "Loyalty allows the user to pay for the order using loyalty points",
    "categories": [
      "Purchase",
      "Payment",
      "Loyalty"
    ],
    "dataActions": {
      "loyaltyCard": {
        "path": "@msdyn365-commerce-modules/retail-actions/dist/lib/get-loyalty-card",
        "runOn": "client"
      },
      "loyaltyTransactionEstimation": {
        "path": "@msdyn365-commerce-modules/retail-actions/dist/lib/get-loyalty-transaction-estimation",
        "runOn": "client"
      },
      "checkout": {
        "path": "@msdyn365-commerce/global-state/dist/lib/data-actions/checkout-state-data-action",
        "runOn": "client"
      }
    },
    "config": {
      "className": {
        "friendlyName": "Custom CSS class name",
        "description": "Provide a custom css class name defined in the theme pack to target the CSS for this module",
        "type": "string",
        "default": ""
      }
    },
    "resources": {
      "loyaltyHeadingText": {
        "comment": "Text used for the loyalty section header of payment",
        "value": "Loyalty card"
      },
      "payWithLoyaltyText": {
        "comment": "Text for pay with loyalty dialog and header",
        "value": "Pay with loyalty rewards"
      },
      "payWithLoyaltyAmountLabel": {
        "comment": "Label for input where user enters in amount to pay with loyalty program",
        "value": "Amount to use"
      },
      "selectLoyaltyProgramLabel": {
        "comment": "Label paired with dropdown to select a loyalty program",
        "value": "Select a loyalty program"
      },
      "totalLoyaltyDollarAmountText": {
        "comment": "The text to display to the user to show their loyalty points in total dollar amount",
        "value": "Total available dollar amount: "
      },
      "availablePointsLabel": {
        "comment": "Label to show total avaiable points",
        "value": "Total available points"
      },
      "expiringLoyaltyPointsLabel": {
        "comment": "Label to show expiring loyalty points",
        "value": "Expiring points within 30 days"
      },
      "loyaltyCoveredAmountText": {
        "comment": "Text to display next to dollar amount covered by applied loyalty points",
        "value": "Amount covered by loyalty: "
      },
      "applyCheckoutLoyaltyPaymentText": {
        "comment": "Text for button that applies the loyalty payment",
        "value": "Apply"
      },
      "removeCheckoutLoyaltyPaymentText": {
        "comment": "Text for button that removes the loyalty payment set",
        "value": "Remove"
      }
    },
    "type": "contentModule"
  },
  "checkout-gift-card": {
    "friendlyName": "Gift card",
    "name": "checkout-gift-card",
    "description": "Gift card allows the user to pay for the order using a gift card",
    "categories": [
      "Purchase",
      "Payment"
    ],
    "dataActions": {
      "checkout": {
        "path": "@msdyn365-commerce/global-state/dist/lib/data-actions/checkout-state-data-action",
        "runOn": "client"
      }
    },
    "config": {
      "className": {
        "friendlyName": "Custom CSS class name",
        "description": "Provide a custom css class name defined in the theme pack to target the CSS for this module",
        "type": "string",
        "default": ""
      },
      "showAdditionalFields": {
        "friendlyName": "Show additional fields",
        "description": "This property allows you to define which fields should be shown in addition to the gift card number field",
        "type": "string",
        "enum": {
          "pin": "Pin",
          "expirationDate": "Expiry date",
          "pinAndExpirationDate": "Pin and Expiry date"
        },
        "scope": "module"
      }
    },
    "resources": {
      "emptyInputError": {
        "comment": "Error message for no gift card code entered",
        "value": "Please enter a gift card number"
      },
      "invalidCodeError": {
        "comment": "Error message for invalid gift card code entered",
        "value": "Invalid gift card code entered"
      },
      "invalidCardInfoError": {
        "comment": "Error message for invalid gift card information entered",
        "value": "Invalid gift card information entered"
      },
      "invalidCardTypeError": {
        "comment": "Error message for invalid gift card type",
        "value": "The gift card type is not supported"
      },
      "noCardPinError": {
        "comment": "Error message for missing required gift card pin",
        "value": "Gift card PIN is required"
      },
      "noCardExpError": {
        "comment": "Error message for missing required gift card expiration date",
        "value": "Gift card expiration date is required"
      },
      "duplicatedCodeError": {
        "comment": "Error message for entering a gift card twice",
        "value": "You already entered this gift card"
      },
      "noBalanceError": {
        "comment": "Error message for gift card has 0 balance",
        "value": "Gift card has no balance left"
      },
      "giftCardFormLabel": {
        "comment": "Gift card form label",
        "value": "Gift card"
      },
      "giftCardNumberLabel": {
        "comment": "Gift card number label",
        "value": "Gift card number"
      },
      "giftCardPinLabel": {
        "comment": "Gift card pin label",
        "value": "PIN"
      },
      "giftCardExpLabel": {
        "comment": "Gift card expiration date label",
        "value": "Expiration date"
      },
      "giftCardPinPlaceholderText": {
        "comment": "Text for gift card pin place holder",
        "value": "PIN"
      },
      "giftCardExpPlaceholderText": {
        "comment": "Text for gift card expiratio date place holder",
        "value": "MM/YYYY"
      },
      "giftCardAlertLabel": {
        "comment": "Gift card input fields alert label",
        "value": "Your gift card may or may not include these fields"
      },
      "applyGiftCardButton": {
        "comment": "Label for apply gift card button",
        "value": "Apply"
      },
      "removeGiftCardButton": {
        "comment": "Label for remove gift card button",
        "value": "Remove"
      },
      "enteredGiftCardLabel": {
        "comment": "Label about gift card entered with balance and giftCardIssueAmount",
        "value": "Gift card ending in"
      },
      "giftCardAvailableBalanceLabel": {
        "comment": "Label about gift card entered with balance and giftCardIssueAmount",
        "value": "Available balance"
      }
    },
    "type": "contentModule"
  },
  "checkout-shipping-address": {
    "friendlyName": "Shipping address",
    "name": "checkout-shipping-address",
    "description": "Shipping address allows to add or select the shipping address for the order",
    "categories": [
      "Purchase",
      "Shipping"
    ],
    "dataActions": {
      "checkout": {
        "path": "@msdyn365-commerce/global-state/dist/lib/data-actions/checkout-state-data-action",
        "runOn": "client"
      },
      "address": {
        "path": "@msdyn365-commerce-modules/retail-actions/dist/lib/get-address",
        "runOn": "server"
      },
      "countryRegions": {
        "path": "../../actions/get-country-regions",
        "runOn": "server"
      },
      "countryStates": {
        "path": "../../actions/get-country-state",
        "runOn": "server"
      },
      "addressPurposes": {
        "path": "../../actions/get-address-purposes",
        "runOn": "server"
      }
    },
    "config": {
      "heading": {
        "friendlyName": "Heading",
        "description": "Module heading",
        "type": "object",
        "properties": {
          "text": {
            "type": "string",
            "friendlyName": "Heading Text",
            "description": "Heading Text",
            "default": "Heading",
            "required": true
          },
          "tag": {
            "type": "string",
            "friendlyName": "Heading Level",
            "description": "Heading Tag",
            "enum": {
              "h1": "H1",
              "h2": "H2",
              "h3": "H3",
              "h4": "H4",
              "h5": "H5",
              "h6": "H6"
            },
            "default": "h2"
          }
        }
      },
      "className": {
        "friendlyName": "Custom CSS class name",
        "description": "Provide a custom css class name defined in the theme pack to target the CSS for this module",
        "type": "string",
        "default": ""
      },
      "showAddressType": {
        "friendlyName": "Show address type",
        "description": "If true allows user to view/edit address type field. For example: Home, Business etc.",
        "type": "boolean",
        "default": false,
        "required": false
      }
    },
    "resources": {
      "addressAddButtonText": {
        "comment": "Add button text",
        "value": "Add address"
      },
      "addressAddButtonAriaLabel": {
        "comment": "Add button aria label",
        "value": "Add address"
      },
      "addressPrimaryButtonText": {
        "comment": "Primay button text",
        "value": "Set as primary address"
      },
      "addressPrimaryButtonAriaLabel": {
        "comment": "Primay button aria label",
        "value": "Set {addressName} address as your primary address"
      },
      "addressEditButtonText": {
        "comment": "Edit button text",
        "value": "Edit"
      },
      "addressEditButtonAriaLabel": {
        "comment": "Edit button aria label",
        "value": "Edit {addressName} address"
      },
      "addressRemoveButtonText": {
        "comment": "Remove button text",
        "value": "Remove"
      },
      "addressRemoveButtonAriaLabel": {
        "comment": "Remove button aria label",
        "value": "Remove {addressName} address"
      },
      "addressSaveButtonText": {
        "comment": "Save button text",
        "value": "Save"
      },
      "addressSaveButtonAriaLabel": {
        "comment": "Save button aria label",
        "value": "Save"
      },
      "addressCancelButtonText": {
        "comment": "Cancel button text",
        "value": "Cancel"
      },
      "addressCancelButtonAriaLabel": {
        "comment": "Cancel button aria label",
        "value": "Cancel"
      },
      "addressStateDefaultSelectionText": {
        "comment": "Default selection text for state drop down",
        "value": "Select state"
      },
      "addressNameLabel": {
        "comment": "Label for the Name field",
        "value": "Name *"
      },
      "addressNameRequiredErrorMessage": {
        "comment": "Error message to display when name is not provided",
        "value": "Name is required"
      },
      "addressPhoneLabel": {
        "comment": "Label for the phone field",
        "value": "Phone"
      },
      "addressPhoneRequiredErrorMessage": {
        "comment": "Error message to display when phone is not provided",
        "value": "Phone is required"
      },
      "addressZipCodeLabel": {
        "comment": "Label for the zipcode field",
        "value": "Zip code *"
      },
      "addressAddressTypeValueLabel": {
        "comment": "Label for the Address Type field",
        "value": "Address Type *"
      },
      "addressIsPrimaryLabel": {
        "comment": "Label for the IsPrimary field",
        "value": "Set as primary address"
      },
      "addressZipCodeRequiredErrorMessage": {
        "comment": "Error message to display when zip code is not provided",
        "value": "Zip code is required"
      },
      "addressCityLabel": {
        "comment": "Label for the city field",
        "value": "City *"
      },
      "addressCityRequiredErrorMessage": {
        "comment": "Error message to display when city is not provided",
        "value": "City is required"
      },
      "addressCountyLabel": {
        "comment": "Label for the County field",
        "value": "County"
      },
      "addressCountyRequiredErrorMessage": {
        "comment": "Error message to display when county is not provided",
        "value": "County is required"
      },
      "addressStateLabel": {
        "comment": "Label for the State field",
        "value": "State *"
      },
      "addressStateRequiredErrorMessage": {
        "comment": "Error message to display when zip code is not provided",
        "value": "State is required"
      },
      "addressThreeLetterISORegionNameLabel": {
        "comment": "Label for the country field",
        "value": "Country *"
      },
      "addressThreeLetterISORegionNameRequiredErrorMessage": {
        "comment": "Error message to display when country is not provided",
        "value": "Country is required"
      },
      "addressStreetLabel": {
        "comment": "Label for the Street field",
        "value": "Street *"
      },
      "addressStreetRequiredErrorMessage": {
        "comment": "Error message to display when street is not provided",
        "value": "Street is required"
      },
      "addressDistrictLabel": {
        "comment": "Label for the District field",
        "value": "District"
      },
      "addressDistrictRequiredErrorMessage": {
        "comment": "Error message to display when district is not provided",
        "value": "District is required"
      },
      "addressStreetNumberLabel": {
        "comment": "Label for the street number field",
        "value": "Street number"
      },
      "addressStreetNumberRequiredErrorMessage": {
        "comment": "Error message to display when street number is not provided",
        "value": "Street number is required"
      },
      "addressBuildingComplimentLabel": {
        "comment": "Label for the building compliment field",
        "value": "Building compliment"
      },
      "addressBuildingComplimentRequiredErrorMessage": {
        "comment": "Error message to display when building compliment is not provided",
        "value": "Building compliment is required"
      },
      "addressPostboxLabel": {
        "comment": "Label for the post box field",
        "value": "Post box"
      },
      "addressPostboxRequiredErrorMessage": {
        "comment": "Error message to display when post box is not provided",
        "value": "Post box is required"
      },
      "addressHouseRULabel": {
        "comment": "Label for the house field",
        "value": "House"
      },
      "addressHouseRURequiredErrorMessage": {
        "comment": "Error message to display when house is not provided",
        "value": "House is required"
      },
      "addressFlatRULabel": {
        "comment": "Label for the flat field",
        "value": "Flat"
      },
      "addressFlatRURequiredErrorMessage": {
        "comment": "Error message to display when flat is not provided",
        "value": "Flat is required"
      },
      "addressCountryOKSMCodeRULabel": {
        "comment": "Label for the countryoksmcode field",
        "value": "Countryoksmcode"
      },
      "addressCountryOKSMCodeRURequiredErrorMessage": {
        "comment": "Error message to display when countryoksmcode is not provided",
        "value": "Countryoksmcode field is required"
      },
      "addressErrorMessageTitle": {
        "comment": "Localized text for error message title",
        "value": "Error message"
      },
      "addressGenericErrorMessage": {
        "comment": "Generic error message for Address module",
        "value": "Something went wrong. Please try again later"
      },
      "addressEmptyListAddressMessage": {
        "comment": "Generic message to show in list address component when no addresses are present",
        "value": "No addresses are present. Please add one."
      }
    },
    "type": "contentModule"
  },
  "checkout-terms-and-conditions": {
    "friendlyName": "Terms and conditions",
    "name": "checkout-terms-and-conditions",
    "description": "Terms and conditions allows the user to accept/deny the terms and conditions",
    "categories": [
      "Purchase",
      "Shipping"
    ],
    "dataActions": {
      "checkout": {
        "path": "@msdyn365-commerce/global-state/dist/lib/data-actions/checkout-state-data-action",
        "runOn": "client"
      }
    },
    "config": {
      "heading": {
        "friendlyName": "Heading",
        "description": "Module heading",
        "type": "object",
        "properties": {
          "text": {
            "type": "string",
            "friendlyName": "Heading Text",
            "description": "Heading Text",
            "default": "Heading",
            "required": true
          },
          "tag": {
            "type": "string",
            "friendlyName": "Heading Level",
            "description": "Heading Tag",
            "enum": {
              "h1": "H1",
              "h2": "H2",
              "h3": "H3",
              "h4": "H4",
              "h5": "H5",
              "h6": "H6"
            },
            "default": "h2"
          }
        }
      },
      "className": {
        "friendlyName": "Custom CSS class name",
        "description": "Provide a custom css class name defined in the theme pack to target the CSS for this module",
        "type": "string",
        "default": ""
      },
      "showControlButtons": {
        "friendlyName": "Show control buttons",
        "description": "Flag to show/hide control(save, cancel and edit) button.",
        "type": "boolean",
        "default": false,
        "required": false
      },
      "showCheckbox": {
        "friendlyName": "Show checkbox",
        "description": "Flag to show/hide checkbox",
        "type": "boolean",
        "default": true,
        "required": false
      },
      "description": {
        "type": "richText",
        "friendlyName": "Terms and conditions",
        "description": "Provide terms and conditions information",
        "required": true
      }
    },
    "resources": {
      "errorMessageTitle": {
        "comment": "Localized text for error message title",
        "value": "Error message"
      },
      "errorMessage": {
        "comment": "Generic error message for terms and conditions module",
        "value": "Terms and condtions have to be accepted to proceed further."
      },
      "saveBtnLabel": {
        "comment": "Save button label",
        "value": "Save"
      },
      "editBtnLabel": {
        "comment": "Edit button label",
        "value": "Change"
      },
      "cancelBtnLabel": {
        "comment": "Cancel button label",
        "value": "Cancel"
      },
      "saveBtnAriaLabel": {
        "comment": "Save button aria label",
        "value": "Save"
      },
      "editBtnAriaLabel": {
        "comment": "Edit button aria label",
        "value": "Change"
      },
      "cancelBtnAriaLabel": {
        "comment": "Cancel button aria label",
        "value": "Cancel"
      }
    },
    "type": "contentModule"
  },
  "checkout-payment-instrument": {
    "friendlyName": "Payment",
    "name": "checkout-payment-instrument",
    "description": "Allows the user to pay for the order using credit card",
    "categories": [
      "Purchase",
      "Payment"
    ],
    "attributes": {
      "private": true
    },
    "dataActions": {
      "checkout": {
        "path": "@msdyn365-commerce/global-state/dist/lib/data-actions/checkout-state-data-action",
        "runOn": "client"
      },
      "cardPaymentAcceptPoint": {
        "path": "./actions/get-card-payment-accept-point",
        "runOn": "client"
      }
    },
    "config": {
      "heading": {
        "friendlyName": "Heading",
        "description": "Module heading",
        "type": "object",
        "properties": {
          "text": {
            "type": "string",
            "friendlyName": "Heading Text",
            "description": "Heading Text",
            "default": "Heading",
            "required": true
          },
          "tag": {
            "type": "string",
            "friendlyName": "Heading Level",
            "description": "Heading Tag",
            "enum": {
              "h1": "H1",
              "h2": "H2",
              "h3": "H3",
              "h4": "H4",
              "h5": "H5",
              "h6": "H6"
            },
            "default": "h2"
          }
        }
      },
      "iFrameHeightOverride": {
        "friendlyName": "Height of the iFrame",
        "description": "Override value for height of the iFrame",
        "type": "number",
        "default": 410,
        "required": false,
        "scope": "module"
      },
      "paymenTenderType": {
        "friendlyName": "Supported tender types",
        "description": "Input the supported tender types as defined in the payment connector in HQ. This field is required only if multiple payment connectors are configured, otherwise leave it as blank",
        "type": "string",
        "required": false,
        "scope": "module"
      },
      "isPrimaryPayment": {
        "friendlyName": "Is primary payment",
        "description": "If multiple payment connectors are configured, this helps denote which one should be treated as primary during error handling and other cases",
        "type": "boolean",
        "default": true,
        "required": false,
        "scope": "module"
      },
      "showBillingAddress": {
        "friendlyName": "Show billing address",
        "description": "Show the billing address from payment connector",
        "type": "boolean",
        "default": false,
        "required": false,
        "scope": "module"
      },
      "paymentStyleOverride": {
        "friendlyName": "Payment style override",
        "description": "Override style of the payment connector",
        "type": "string",
        "required": false,
        "scope": "module"
      },
      "className": {
        "friendlyName": "Custom CSS class name",
        "description": "Provide a custom css class name defined in the theme pack to target the CSS for this module",
        "type": "string",
        "default": ""
      }
    },
    "resources": {
      "cardTitle": {
        "comment": "Card display title",
        "value": "Payment information"
      },
      "cardNumberLabel": {
        "comment": "Localized text for the last 4 digit of the card",
        "value": "Card ending in"
      },
      "expiresDateLabel": {
        "comment": "Localized text for the expires date",
        "value": "Expires"
      },
      "changePaymentButtonText": {
        "comment": "Localized text for the change payment button for Payment instrument module",
        "value": "Change"
      },
      "cancelButtonText": {
        "comment": "Localized text for the cancel button for Payment instrument module",
        "value": "Cancel"
      },
      "submitButtonText": {
        "comment": "Localized text for the submit button for Payment instrument module",
        "value": "Submit"
      },
      "genericErrorMessage": {
        "comment": "Localized generic error message for Payment instrument module",
        "value": "Something went wrong. Please try again later."
      },
      "cardTypeErrorMessage": {
        "comment": "Localized error message for Payment card type not found",
        "value": "The specified card type is not supported."
      },
      "defaultSubmitErrorMessage": {
        "comment": "Localized generic submit failure error message for Payment instrument module",
        "value": "An error occurred in payment method details. Please try again."
      },
      "errorMessageTitle": {
        "comment": "Localized text for error message title",
        "value": "Error message"
      },
      "iframeAriaLabel": {
        "comment": "Localized text for iframe aria label",
        "value": "Payment iframe"
      },
      "loadingMessage": {
        "comment": "Text of the loading message",
        "value": "Loading..."
      },
      "addressTitle": {
        "comment": "Text for billing address section",
        "value": "Billing Address"
      }
    },
    "type": "contentModule"
  },
  "default-container": {
    "friendlyName": "Container",
    "name": "default-container",
    "description": "A container allows multiple modules to be hosted in it. Using the configuration properties various layouts can be achieved.",
    "categories": [
      "container"
    ],
    "config": {
      "heading": {
        "friendlyName": "Heading",
        "description": "Container heading",
        "type": "object",
        "properties": {
          "headingText": {
            "friendlyName": "Heading Text",
            "description": "The heading text",
            "type": "string"
          },
          "tag": {
            "friendlyName": "Heading Tag",
            "description": "The heading tag to use",
            "type": "string",
            "enum": {
              "h1": "H1",
              "h2": "H2",
              "h3": "H3",
              "h4": "H4",
              "h5": "H5",
              "h6": "H6"
            }
          }
        },
        "group": "Layout"
      },
      "layout": {
        "friendlyName": "Container Layout",
        "description": "Controls the placement of the child elements within the container. Flow will place each child next to each other horizontally while stacked while stack the children within the container vertically.",
        "type": "string",
        "enum": {
          "stacked": "Stacked",
          "flow": "Flow"
        },
        "default": "stacked",
        "group": "Layout"
      },
      "containerType": {
        "friendlyName": "Width",
        "description": "Choose from a fixed width container (Fill Container) which will resize at breakpoints or fluid container (Fill Screen) which has a max width of 100% and will continuously resize.",
        "type": "string",
        "enum": {
          "fluid": "Fill Screen",
          "container": "Fill Container"
        },
        "default": "fluid",
        "group": "Layout"
      },
      "childrenWidth": {
        "friendlyName": "children Shown",
        "description": "Determines the number of children that will fit in the row, not applicable for stacked",
        "type": "string",
        "enum": {
          "auto": "auto",
          "one": "Twelve",
          "two": "Six",
          "three": "Four",
          "four": "Three",
          "six": "Two",
          "twelve": "One"
        },
        "default": "four",
        "group": "Layout"
      },
      "className": {
        "friendlyName": "ClassName",
        "description": "class properties",
        "type": "string",
        "default": "",
        "group": "Layout"
      }
    },
    "slots": {
      "content": {
        "friendlyName": "content Slot",
        "description": "This is the content slot",
        "max": 100,
        "min": 0,
        "allowedTypes": "*"
      }
    },
    "type": "containerModule"
  },
  "default-metatags": {
    "friendlyName": "Metatags",
    "name": "default-metatags",
    "description": "Metatag module supports entry of custom meta tags that can further enhance SEO",
    "categories": [
      "SEO",
      "HTML head"
    ],
    "tags": [
      "HTML Tags",
      "Meta"
    ],
    "config": {
      "metaTags": {
        "friendlyName": "Meta Tags",
        "description": "Allows input of meta tags into the page. One meta tag per entry",
        "type": "array",
        "items": {
          "type": "string",
          "friendlyName": "Meta Tag"
        }
      }
    },
    "type": "htmlHeadTagsModule"
  },
  "default-page-summary": {
    "friendlyName": "Page summary",
    "name": "default-page-summary",
    "description": "Supports simplified entry of page summary metadata which can be used by search engines and social sharing sites, including the canonical link.",
    "categories": [
      "SEO",
      "HTML head"
    ],
    "config": {
      "title": {
        "friendlyName": "title",
        "description": "The title of the webpage",
        "type": "string"
      },
      "description": {
        "friendlyName": "description",
        "description": "A brief description of the page contents",
        "type": "string"
      },
      "keywords": {
        "friendlyName": "keywords",
        "description": "A series of comma separated keywords that are relevant to the page",
        "type": "string"
      },
      "faviconUrl": {
        "friendlyName": "favicon",
        "description": "Link to the image used as your website's favicon",
        "type": "string",
        "editable": false
      },
      "disableTwitterTags": {
        "friendlyName": "Disable Twitter Tags",
        "description": "Disables rendering the Twitter tags",
        "type": "boolean",
        "default": false
      },
      "sharingImage": {
        "friendlyName": "Sharing Image",
        "description": "Image to use for sharing",
        "type": "image"
      },
      "disableOgTags": {
        "friendlyName": "Disable Facebook OG Tags",
        "description": "Disables rendering the Facebook tags",
        "type": "boolean",
        "default": false
      },
      "ignoreTitleSuffixPrefix": {
        "friendlyName": "Ignores the prefix and suffix specified in the application settings",
        "description": "Ignores the prefix and suffix specified in the application settings",
        "type": "boolean",
        "default": false
      }
    },
    "type": "htmlHeadTagsModule"
  },
  "default-container-2-slots": {
    "friendlyName": "Container with 2 columns",
    "name": "default-container-2-slots",
    "description": "A container that allows items to be placed in two column view and provides flexibility across view ports.",
    "categories": [
      "container"
    ],
    "tags": [
      "container"
    ],
    "config": {
      "heading": {
        "friendlyName": "Heading",
        "description": "Container heading",
        "type": "object",
        "properties": {
          "headingText": {
            "friendlyName": "Heading Text",
            "description": "The heading text",
            "type": "string"
          },
          "tag": {
            "friendlyName": "Heading Tag",
            "description": "The heading tag to use",
            "type": "string",
            "enum": {
              "h1": "H1",
              "h2": "H2",
              "h3": "H3",
              "h4": "H4",
              "h5": "H5",
              "h6": "H6"
            }
          }
        },
        "group": "Layout"
      },
      "containerType": {
        "friendlyName": "Width",
        "description": "Choose from a fixed width container (Fill Container) which will resize at breakpoints or fluid container (Fill Screen) which has a max width of 100% and will continuously resize.",
        "type": "string",
        "enum": {
          "fluid": "Fill Screen",
          "container": "Fill Container"
        },
        "default": "fluid",
        "group": "Layout"
      },
      "xsmall": {
        "friendlyName": "X-Small view port column configuration",
        "description": "Layout configuration on a extra small view port",
        "type": "string",
        "enum": {
          "col_auto_auto": "Auto",
          "col_12_12": "100%",
          "col_9_3": "75% 25%",
          "col_8_4": "67% 33%",
          "col_6_6": "50% 50%",
          "col_4_8": "33% 67%",
          "col_3_9": "25% 75%"
        },
        "default": "col_auto_auto",
        "group": "Layout"
      },
      "small": {
        "friendlyName": "Small view port column configuration",
        "description": "Layout configuration on a small view port",
        "type": "string",
        "enum": {
          "col_auto_auto": "Auto",
          "col_12_12": "100%",
          "col_9_3": "75% 25%",
          "col_8_4": "67% 33%",
          "col_6_6": "50% 50%",
          "col_4_8": "33% 67%",
          "col_3_9": "25% 75%"
        },
        "default": "col_auto_auto",
        "group": "Layout"
      },
      "medium": {
        "friendlyName": "Medium view port column configuration",
        "description": "Layout configuration on a medium view port",
        "type": "string",
        "enum": {
          "col_auto_auto": "Auto",
          "col_12_12": "100%",
          "col_9_3": "75% 25%",
          "col_8_4": "67% 33%",
          "col_6_6": "50% 50%",
          "col_4_8": "33% 67%",
          "col_3_9": "25% 75%"
        },
        "default": "col_auto_auto",
        "group": "Layout"
      },
      "large": {
        "friendlyName": "Large view port column configuration",
        "description": "Layout configuration on a large view port",
        "type": "string",
        "enum": {
          "col_auto_auto": "Auto",
          "col_12_12": "100%",
          "col_9_3": "75% 25%",
          "col_8_4": "67% 33%",
          "col_6_6": "50% 50%",
          "col_4_8": "33% 67%",
          "col_3_9": "25% 75%"
        },
        "default": "col_auto_auto",
        "group": "Layout"
      },
      "className": {
        "friendlyName": "CSS class name",
        "description": "class properties",
        "type": "string",
        "default": "",
        "group": "Layout"
      }
    },
    "slots": {
      "content": {
        "friendlyName": "Content Slots",
        "description": "Content to be rendered in container. Max 2",
        "allowedTypes": "*",
        "max": 2,
        "min": 0
      }
    },
    "type": "containerModule"
  },
  "checkout-guest-profile": {
    "friendlyName": "Contact information",
    "name": "checkout-guest-profile",
    "description": "Contact information allows the user to provide contact information for the order",
    "categories": [
      "Purchase",
      "Payment"
    ],
    "attributes": {
      "private": true
    },
    "dataActions": {
      "checkout": {
        "path": "@msdyn365-commerce/global-state/dist/lib/data-actions/checkout-state-data-action",
        "runOn": "client"
      }
    },
    "config": {
      "heading": {
        "friendlyName": "Heading",
        "description": "Module heading",
        "type": "object",
        "properties": {
          "text": {
            "type": "string",
            "friendlyName": "Heading Text",
            "description": "Heading Text",
            "default": "Heading",
            "required": true
          },
          "tag": {
            "type": "string",
            "friendlyName": "Heading Level",
            "description": "Heading Tag",
            "enum": {
              "h1": "H1",
              "h2": "H2",
              "h3": "H3",
              "h4": "H4",
              "h5": "H5",
              "h6": "H6"
            },
            "default": "h2"
          }
        }
      },
      "className": {
        "friendlyName": "Custom CSS class name",
        "description": "Provide a custom css class name defined in the theme pack to target the CSS for this module",
        "type": "string",
        "default": ""
      }
    },
    "resources": {
      "emailLabel": {
        "comment": "Email label",
        "value": "Email address for order questions"
      },
      "emailErrortext": {
        "comment": "Email error text",
        "value": "Please enter a valid email"
      },
      "saveBtnLabel": {
        "comment": "Save button label",
        "value": "Save"
      },
      "editBtnLabel": {
        "comment": "Edit button label",
        "value": "Change"
      },
      "cancelBtnLabel": {
        "comment": "Cancel button label",
        "value": "Cancel"
      }
    },
    "type": "contentModule"
  },
  "header": {
    "friendlyName": "Header (COPY)",
    "name": "header",
    "description": " Header is shown on the top of the page and allows the user to browse products via navigation hierarchy. It also support links to specific pages in the site that author wants to promote.",
    "categories": [
      "Header"
    ],
    "dataActions": {
      "cart": {
        "path": "@msdyn365-commerce/global-state/dist/lib/data-actions/cart-state-data-action",
        "runOn": "server"
      },
      "accountInformation": {
        "path": "@msdyn365-commerce-modules/retail-actions/dist/lib/get-customer"
      }
    },
    "config": {
      "logoImage": {
        "friendlyName": "Logo image",
        "description": "Logo image",
        "type": "image",
        "required": true
      },
      "logoLink": {
        "friendlyName": "Logo link",
        "description": "Logo link",
        "type": "object",
        "properties": {
          "linkText": {
            "type": "string",
            "friendlyName": "Link text",
            "description": "Text for call to action link",
            "default": "Link text "
          },
          "linkUrl": {
            "type": "link",
            "friendlyName": "Link target",
            "description": "Destination url for link",
            "required": true
          },
          "ariaLabel": {
            "type": "string",
            "friendlyName": "Link aria label",
            "description": "Aria Label for link",
            "default": ""
          },
          "openInNewTab": {
            "type": "boolean",
            "friendlyName": "Open in new tab",
            "description": "Open the link in a new tab",
            "default": false
          }
        }
      },
      "myAccountLinks": {
        "friendlyName": "My account links",
        "description": "Link to the my account page",
        "type": "array",
        "items": {
          "type": "object",
          "friendlyName": "Action Link",
          "description": "Action Link property",
          "properties": {
            "linkText": {
              "type": "string",
              "friendlyName": "Link text",
              "description": "Text for call to action link",
              "default": "Link text "
            },
            "linkUrl": {
              "type": "link",
              "friendlyName": "Link target",
              "description": "Destination url for link",
              "required": true
            },
            "ariaLabel": {
              "type": "string",
              "friendlyName": "Link aria label",
              "description": "Aria Label for link",
              "default": ""
            },
            "openInNewTab": {
              "type": "boolean",
              "friendlyName": "Open in new tab",
              "description": "Open the link in a new tab",
              "default": false
            }
          }
        }
      },
      "className": {
        "friendlyName": "Custom CSS class name",
        "description": "Provide a custom css class name defined in the theme pack to target the CSS for this module",
        "type": "string",
        "default": ""
      }
    },
    "resources": {
      "mobileHamburgerAriaLabel": {
        "comment": "The aria label used for mobile view hamburger",
        "value": "Expand to see list of items"
      },
      "wishlistTooltipText": {
        "comment": "string to be shown for wishlist tooltip",
        "value": "My Wishlist"
      },
      "cartLabel": {
        "comment": "string to be shown for cart or shopping bag tooltip",
        "value": "Shopping bag, {0} items"
      },
      "signInLinkText": {
        "value": "Sign in",
        "comment": "Sign-in Link text"
      },
      "signInLinkAriaText": {
        "value": "Sign in",
        "comment": "Sign-in Link aria text"
      },
      "signOutLinkText": {
        "value": "Sign out",
        "comment": "Sign-out in Link aria text"
      },
      "signOutLinkAriaText": {
        "value": "Sign out",
        "comment": "Sign-out in Link aria text"
      }
    },
    "slots": {
      "menuBar": {
        "friendlyName": "Navigation menu",
        "description": "Slot for Navigation menu in header handling",
        "allowedTypes": [
          "navigation-menu"
        ],
        "min": 0,
        "max": 1
      },
      "search": {
        "friendlyName": "Search",
        "description": "Slot for Search in header handling",
        "max": 1,
        "min": 0,
        "allowedTypes": [
          "search"
        ]
      },
      "cartIcon": {
        "friendlyName": "Cart Icon",
        "description": "Slot for Cart Icon module in header handling",
        "max": 1,
        "min": 0,
        "allowedTypes": [
          "cart-icon"
        ]
      },
      "siteOptions": {
        "friendlyName": "Site Picker",
        "description": "Slot for Site Picker",
        "max": 1,
        "min": 0,
        "allowedTypes": [
          "site-picker"
        ]
      }
    },
    "type": "containerModule"
  },
  "loyalty-sign-up": {
    "friendlyName": "Loyalty sign up",
    "name": "loyalty-sign-up",
    "description": "Loyalty sign up allows user to sign up for loyalty.",
    "categories": [
      "Loyalty"
    ],
    "dataActions": {
      "loyaltyCard": {
        "path": "@msdyn365-commerce-modules/retail-actions/dist/lib/get-loyalty-card",
        "runOn": "server"
      }
    },
    "config": {
      "heading": {
        "type": "object",
        "friendlyName": "Heading",
        "description": "Heading property",
        "properties": {
          "text": {
            "type": "string",
            "friendlyName": "Heading Text",
            "description": "Heading Text",
            "default": "Heading",
            "required": true
          },
          "tag": {
            "type": "string",
            "friendlyName": "Heading Level",
            "description": "Heading Tag",
            "enum": {
              "h1": "H1",
              "h2": "H2",
              "h3": "H3",
              "h4": "H4",
              "h5": "H5",
              "h6": "H6"
            },
            "default": "h2"
          }
        }
      },
      "memberHeading": {
        "type": "object",
        "friendlyName": "Heading",
        "description": "Heading property",
        "properties": {
          "text": {
            "type": "string",
            "friendlyName": "Heading Text",
            "description": "Heading Text",
            "default": "Heading",
            "required": true
          },
          "tag": {
            "type": "string",
            "friendlyName": "Heading Level",
            "description": "Heading Tag",
            "enum": {
              "h1": "H1",
              "h2": "H2",
              "h3": "H3",
              "h4": "H4",
              "h5": "H5",
              "h6": "H6"
            },
            "default": "h2"
          }
        }
      },
      "className": {
        "friendlyName": "Custom CSS class name",
        "description": "Provide a custom css class name defined in the theme pack to target the CSS for this module",
        "type": "string",
        "default": ""
      }
    },
    "resources": {
      "loyaltyProgramText": {
        "comment": "Brief description informing user of loyalkty program benefits",
        "value": "Become a loyalty member to earn points and to receive member only discounts."
      },
      "loyaltyTermsLinkText": {
        "comment": "Link text for loyalty terms and conditions",
        "value": "By signing up, you accept our Terms & Conditions of our loyalty program."
      },
      "joinLoyaltyButtonText": {
        "comment": "Join loyalty program button text",
        "value": "Sign up for loyalty"
      },
      "viewLoyaltyPageText": {
        "comment": "View loyalty page link text",
        "value": "View loyalty details"
      }
    },
    "type": "contentModule"
  },
  "loyalty-terms": {
    "friendlyName": "Loyalty terms",
    "name": "loyalty-terms",
    "description": "Loyalty terms modal get confirmation from the user before signing up for loyalty",
    "categories": [
      "Loyalty"
    ],
    "dataActions": {
      "loyaltyCard": {
        "path": "@msdyn365-commerce-modules/retail-actions/dist/lib/get-loyalty-card",
        "runOn": "client"
      }
    },
    "slots": {
      "serviceTerms": {
        "friendlyName": "Terms of Service",
        "description": "Content rich block for terms of service",
        "max": 1,
        "min": 0,
        "allowedTypes": [
          "text-block"
        ]
      }
    },
    "config": {
      "redirectToLoyalty": {
        "friendlyName": "Redirect to loyalty details",
        "description": "Redirects user to loyalty details page after signing up for loyalty card",
        "type": "boolean",
        "default": false
      },
      "hideToggle": {
        "friendlyName": "Hides dialog toggle",
        "description": "Hides the dialog toggle when we just want to use the return to page sign up feature",
        "type": "boolean",
        "default": false
      },
      "className": {
        "friendlyName": "Custom CSS class name",
        "description": "Provide a custom css class name defined in the theme pack to target the CSS for this module",
        "type": "string",
        "default": ""
      }
    },
    "resources": {
      "loyaltyTermsHeading": {
        "comment": "Heading text for loyalty terms of service",
        "value": "Loyalty program terms of service"
      },
      "loyaltyAgreeToTerms": {
        "comment": "Text to prompt users to agree to terms of service",
        "value": "I have read and agree to the terms of service listed above"
      },
      "joinLoyaltytermsToggleText": {
        "comment": "Text shown on loyalty terms modal toggle",
        "value": "Sign up for loyalty"
      },
      "joinLoyaltyTermsText": {
        "comment": "Text shown on join loyalty program button in loyalty terms modal",
        "value": "Join now"
      },
      "cancelLoyaltyTermsText": {
        "comment": "The label shown on the loyalty terms modal cancel button",
        "value": "Cancel"
      },
      "loyaltyHeadingText": {
        "comment": "Text used for the loyalty section header of payment",
        "value": "Loyalty card"
      }
    },
    "type": "containerModule"
  },
  "map": {
    "friendlyName": "map",
    "name": "map",
    "description": "Map module displays a map and pinpoints locations that it subscribes to",
    "categories": [
      "map"
    ],
    "tags": [
      "Additional tags go here"
    ],
    "dataActions": {
      "storeSelectorStateManager": {
        "path": "@msdyn365-commerce-modules/bopis-utilities/dist/lib/store-selector-state-manager/store-selector-state-manager-data-action",
        "runOn": "server"
      }
    },
    "config": {
      "heading": {
        "friendlyName": "Heading",
        "description": "Module heading",
        "type": "object",
        "properties": {
          "text": {
            "type": "string",
            "friendlyName": "Heading Text",
            "description": "Heading Text",
            "default": "Heading",
            "required": true
          },
          "tag": {
            "type": "string",
            "friendlyName": "Heading Level",
            "description": "Heading Tag",
            "enum": {
              "h1": "H1",
              "h2": "H2",
              "h3": "H3",
              "h4": "H4",
              "h5": "H5",
              "h6": "H6"
            },
            "default": "h2"
          }
        }
      },
      "pushpinOptions": {
        "friendlyName": "Pushpin Options",
        "description": "Provide additional data to create customized pushpin",
        "type": "object",
        "properties": {
          "size": {
            "friendlyName": "size",
            "description": "Specifies the size of pushpin",
            "type": "number",
            "default": 1.5
          },
          "color": {
            "friendlyName": "Color",
            "description": "Specifies color of pushpin. Any color code including hex is supported",
            "type": "string",
            "default": "#616365"
          },
          "selectionColor": {
            "friendlyName": "Selection color",
            "description": "Specifies color of selected pushpin. Any color code including hex is supported",
            "type": "string",
            "default": "#4C833A"
          },
          "showIndex": {
            "type": "boolean",
            "friendlyName": "Show index",
            "description": "Specifies whether or not to show numbers on the pushpin",
            "default": true
          }
        }
      },
      "className": {
        "friendlyName": "Custom CSS class name",
        "description": "Provide a custom css class name defined in the theme pack to target the CSS for this module",
        "type": "string",
        "default": ""
      }
    },
    "type": "contentModule"
  },
  "media-gallery": {
    "friendlyName": "Media gallery",
    "name": "media-gallery",
    "description": "Media gallery is used for showcasing images of a product in a product details page",
    "categories": [
      "media-gallery"
    ],
    "dataActions": {
      "product": {
        "path": "@msdyn365-commerce-modules/retail-actions/dist/lib/get-selected-variant"
      },
      "mediaLocations": {
        "path": "@msdyn365-commerce-modules/retail-actions/dist/lib/get-media-locations-by-id"
      }
    },
    "config": {
      "imageSource": {
        "friendlyName": "Image source",
        "description": "Default will be Page context, it automatically picks images associated with a product on the buy box",
        "type": "string",
        "enum": {
          "pageContext": "PageContext",
          "productId": "ProductId"
        },
        "required": false,
        "default": "pageContext"
      },
      "productId": {
        "type": "string",
        "friendlyName": "Product id",
        "description": "This field captures the product id for which you want to show images in a gallery. It should be used only when Image source is Product id",
        "required": false
      },
      "imageZoom": {
        "friendlyName": "Image zoom",
        "description": "Image zoom",
        "type": "string",
        "enum": {
          "inline": "Inline",
          "container": "Container"
        },
        "default": "",
        "scope": "module"
      },
      "dataScale": {
        "friendlyName": "Zoom factor",
        "description": "To enhance the zoom",
        "type": "string",
        "default": "1.5"
      },
      "allowFullScreen": {
        "friendlyName": "Full screen",
        "description": "Full screen",
        "type": "boolean",
        "default": false,
        "required": false
      },
      "images": {
        "friendlyName": "Images",
        "description": "Allows images to be curated to the gallery from Media library",
        "type": "array",
        "items": {
          "type": "image"
        }
      },
      "thumbnailsOrientation": {
        "friendlyName": "Thumbnails orientation",
        "description": "Sets the desired orientation of the thumbnails strips",
        "type": "string",
        "enum": {
          "vertical": "Vertical",
          "horizontal": "Horizontal"
        },
        "default": "vertical",
        "scope": "module"
      },
      "thumbnailImageSettings": {
        "friendlyName": "Thumbnail image quality",
        "description": "Image settings for the thumbnails",
        "type": "imageSettings"
      },
      "galleryImageSettings": {
        "friendlyName": "Gallery image quality",
        "description": "Image settings for the main gallery",
        "type": "imageSettings"
      },
      "showPaginationTooltip": {
        "friendlyName": "Show Media Gallery pagination tooltip",
        "description": "Enable/Disable the tooltip of the Media Gallery pagination indicators",
        "type": "boolean",
        "default": false,
        "required": false
      },
      "className": {
        "friendlyName": "Custom CSS class name",
        "description": "Provide a custom css class name defined in the theme pack to target the CSS for this module",
        "type": "string",
        "default": ""
      }
    },
    "resources": {
      "nextScreenshotFlipperText": {
        "comment": "The label for the 'next screenshot' flipper",
        "value": "Next"
      },
      "previousScreenshotFlipperText": {
        "comment": "The label which is shown on 'previous screenshot' flipper",
        "value": "Previous"
      },
      "fullScreenTitleText": {
        "comment": "To show the title on media gallery image fullscreen",
        "value": "fullscreen"
      }
    },
    "type": "contentModule"
  },
  "order-history": {
    "friendlyName": "Order history",
    "name": "order-history",
    "description": "Order history shows a list of recent orders placed by the user ",
    "categories": [
      "Account management",
      "Order management"
    ],
    "dataActions": {
      "channels": {
        "path": "../../actions/get-channels",
        "runOn": "server"
      },
      "orgUnitLocations": {
        "path": "../../actions/get-org-unit-locations",
        "runOn": "server"
      }
    },
    "config": {
      "heading": {
        "friendlyName": "Heading",
        "description": "Heading",
        "type": "object",
        "properties": {
          "text": {
            "type": "string",
            "friendlyName": "Heading Text",
            "description": "Heading Text",
            "default": "Heading",
            "required": true
          },
          "tag": {
            "type": "string",
            "friendlyName": "Heading Level",
            "description": "Heading Tag",
            "enum": {
              "h1": "H1",
              "h2": "H2",
              "h3": "H3",
              "h4": "H4",
              "h5": "H5",
              "h6": "H6"
            },
            "default": "h2"
          }
        }
      },
      "imageSettings": {
        "friendlyName": "Order history Image Settings",
        "description": "Image settings for order history",
        "type": "imageSettings"
      },
      "showChannelInfo": {
        "friendlyName": "Show Channel Information",
        "description": "Show the channel information for each order",
        "type": "boolean",
        "default": true,
        "scope": "module"
      },
      "className": {
        "friendlyName": "Custom CSS class name",
        "description": "Provide a custom css class name defined in the theme pack to target the CSS for this module",
        "type": "string",
        "default": ""
      },
      "pageSize": {
        "friendlyName": "Number of orders per page",
        "description": "Defines the number of orders that will be displayed on each page",
        "type": "number"
      }
    },
    "resources": {
      "loadingLabel": {
        "comment": "Loading message",
        "value": "Loading..."
      },
      "genericErrorMessage": {
        "comment": "Localized generic error message for Payment instrument module",
        "value": "Something went wrong. Please try again later."
      },
      "noOrderHistoryLable": {
        "comment": "Text for no order history",
        "value": "You currently don't have any orders to view."
      },
      "orderIdLabel": {
        "comment": "Order ID label",
        "value": "Order#"
      },
      "processingLabel": {
        "comment": "Text for order in processing state",
        "value": "Processing"
      },
      "confirmationIdLabel": {
        "comment": "Confirmation ID label",
        "value": "Confirmation ID:"
      },
      "detailsLabel": {
        "comment": "Details label",
        "value": "View order details"
      },
      "detailsAriaLabel": {
        "comment": "Details aria label",
        "value": "View order details for {orderId}"
      },
      "orderCountLabel": {
        "comment": "total sales orders in order history",
        "value": "order"
      },
      "ordersCountLabel": {
        "comment": "total sales orders in order history",
        "value": "orders"
      },
      "orderItemLabel": {
        "comment": "total items in order",
        "value": "item"
      },
      "orderItemsLabel": {
        "comment": "total items in order",
        "value": "items"
      },
      "trackingLabel": {
        "comment": "tracking number label for orders",
        "value": "Tracking number: "
      },
      "trackingComingSoonLabel": {
        "comment": "tracking number coming soon",
        "value": "Not yet available"
      },
      "trackingAriaLabel": {
        "comment": "aria label for tracking number link",
        "value": "track your order"
      },
      "backToShopping": {
        "comment": "Back to shopping label",
        "value": "Back to shopping"
      },
      "moreButtonText": {
        "comment": "View more button text",
        "value": "View more"
      },
      "receiptEmailMessage": {
        "comment": "Label for reciept email",
        "value": "Confirmation email sent to "
      },
      "receiptIdLabel": {
        "comment": "Receipt id label",
        "value": "Receipt#"
      },
      "freePriceText": {
        "comment": "Free price text",
        "value": "FREE"
      },
      "pickedUpSalesLines": {
        "comment": "Store pickup title",
        "value": "Store pickup"
      },
      "deliveredSalesLines": {
        "comment": "Delivery at home",
        "value": "Delivery"
      },
      "carryOutSalesLines": {
        "comment": "Customer carry out",
        "value": "Purchased"
      },
      "orderStatusReadyForPickup": {
        "comment": "Order status for order pickup",
        "value": "Ready for pickup"
      },
      "orderStatusProcessing": {
        "comment": "Order status for order processing",
        "value": "Processing"
      },
      "orderStatusShipped": {
        "comment": "Order status for order shipped",
        "value": "Shipped"
      },
      "orderStatusPickedUp": {
        "comment": "Order status for order picked up",
        "value": "Picked up"
      },
      "orderStatusCanceled": {
        "comment": "Order status for order canceled",
        "value": "Canceled"
      },
      "phoneAriaLabel": {
        "comment": "Aria label for phone",
        "value": "phone"
      },
      "buyItAgainLabel": {
        "comment": "text for buy it again link",
        "value": "Buy it again"
      },
      "buyItAgainAriaLabel": {
        "comment": "text for buy it again aria label",
        "value": "Buy it again for {productName}"
      },
      "shipToLabel": {
        "comment": "Ship to label",
        "value": "Ship to"
      },
      "storeLabel": {
        "comment": "Store label",
        "value": "Store"
      },
      "shippingAddressTitle": {
        "comment": "Title for shipping address",
        "value": "Shipping address"
      },
      "phoneLabel": {
        "comment": "Phone label",
        "value": "Phone: "
      },
      "productDimensionTypeColor": {
        "comment": "String that corresponds to the Color Product Dimension Type (1)",
        "value": "Color"
      },
      "productDimensionTypeSize": {
        "comment": "String that corresponds to the Size Product Dimension Type (3)",
        "value": "Size"
      },
      "productDimensionTypeStyle": {
        "comment": "String that corresponds to the Style Product Dimension Type (4)",
        "value": "Style"
      },
      "configString": {
        "comment": "Configuration text",
        "value": "Configuration"
      },
      "salesLineQuantityText": {
        "comment": "Sales line quantity label",
        "value": "Qty"
      },
      "discountStringText": {
        "comment": "String to show discount offer string",
        "value": "Savings "
      },
      "posChannelNameText": {
        "comment": "String to show POS channel name",
        "value": "Purchased at "
      },
      "onlineStoreChannelNameText": {
        "comment": "String to show online store channel name",
        "value": "Online purchase"
      }
    },
    "type": "contentModule"
  },
  "order-details": {
    "friendlyName": "Order details",
    "name": "order-details",
    "description": "Order details shows the items purchased in the order along with shipping and payment information for the order",
    "categories": [
      "Account management",
      "Order management"
    ],
    "dataActions": {
      "orderHydration": {
        "path": "../../actions/get-sales-order-with-hydrations",
        "runOn": "server"
      },
      "tenderTypes": {
        "path": "../../actions/get-tender-types",
        "runOn": "server"
      },
      "loyaltyCard": {
        "path": "@msdyn365-commerce-modules/retail-actions/dist/lib/get-loyalty-card",
        "runOn": "client"
      },
      "channels": {
        "path": "../../actions/get-channels",
        "runOn": "server"
      },
      "orgUnitLocations": {
        "path": "../../actions/get-org-unit-locations",
        "runOn": "server"
      }
    },
    "config": {
      "heading": {
        "friendlyName": "Heading",
        "description": "Heading",
        "type": "object",
        "properties": {
          "text": {
            "type": "string",
            "friendlyName": "Heading Text",
            "description": "Heading Text",
            "default": "Heading",
            "required": true
          },
          "tag": {
            "type": "string",
            "friendlyName": "Heading Level",
            "description": "Heading Tag",
            "enum": {
              "h1": "H1",
              "h2": "H2",
              "h3": "H3",
              "h4": "H4",
              "h5": "H5",
              "h6": "H6"
            },
            "default": "h2"
          }
        }
      },
      "contactNumber": {
        "friendlyName": "Contact number",
        "description": "Contact number for help",
        "type": "string"
      },
      "imageSettings": {
        "friendlyName": "Order details Image Settings",
        "description": "Image settings for order details",
        "type": "imageSettings"
      },
      "showChannelInfo": {
        "friendlyName": "Show Channel Information",
        "description": "Show channel information for the order",
        "type": "boolean",
        "default": true,
        "scope": "module"
      },
      "addressOptions": {
        "friendlyName": "Show address",
        "description": "Shows delivery and pick up address in a single or multiple lines format",
        "type": "string",
        "default": "showAddressWithSingleLine",
        "enum": {
          "showAddressWithSingleLine": "Single line",
          "showAddressWithMultiplelines": "Multiple lines"
        }
      },
      "className": {
        "friendlyName": "Custom CSS class name",
        "description": "Provide a custom css class name defined in the theme pack to target the CSS for this module",
        "type": "string",
        "default": ""
      }
    },
    "resources": {
      "loadingLabel": {
        "comment": "Loading message",
        "value": "Loading..."
      },
      "genericErrorMessage": {
        "comment": "Localized generic error message for Payment instrument module",
        "value": "Something went wrong. Please try again later."
      },
      "orderItemLabel": {
        "comment": "total items in order",
        "value": "item"
      },
      "orderItemsLabel": {
        "comment": "total items in order",
        "value": "items"
      },
      "orderIdLabel": {
        "comment": "Order ID label",
        "value": "Order#"
      },
      "confirmationIdLabel": {
        "comment": "Confirmation ID label",
        "value": "Confirmation ID:"
      },
      "orderSummaryTitle": {
        "comment": "Title for order summary",
        "value": "Order summary"
      },
      "paymentMethodsTitle": {
        "comment": "Title for payment methods",
        "value": "Payment method"
      },
      "shippingAddressTitle": {
        "comment": "Title for shipping address",
        "value": "Shipping address"
      },
      "noSalesOrderDetailsText": {
        "comment": "Text describes no sales order found",
        "value": "No order details found"
      },
      "creditCardEndingLabel": {
        "comment": "Credit card ending label",
        "value": "card ending in"
      },
      "giftCardEndingLabel": {
        "comment": "Gift card ending label",
        "value": "Gift card ending in"
      },
      "amountCoveredLabel": {
        "comment": "Amount covered label",
        "value": "Amount covered:"
      },
      "loyaltyCardUsedLabel": {
        "comment": "Loyalty card used label",
        "value": "Loyalty card used "
      },
      "cashUsedLabel": {
        "comment": "Cash used label",
        "value": "Cash"
      },
      "customerAccountUsedLabel": {
        "comment": "Customer Account used label",
        "value": "Customer Account"
      },
      "freePriceText": {
        "comment": "Free price text",
        "value": "FREE"
      },
      "orderSummaryItemsTotalLabel": {
        "comment": "Order summary items total label",
        "value": "Subtotal"
      },
      "orderSummaryShippingFeeLabel": {
        "comment": "Order summary shipping fee label",
        "value": "Shipping"
      },
      "orderSummaryTaxLabel": {
        "comment": "Order summary tax label",
        "value": "Tax"
      },
      "orderSummaryGrandTotalLabel": {
        "comment": "Order summary grand total label",
        "value": "Total"
      },
      "salesLineQuantityText": {
        "comment": "Sales line quantity label",
        "value": "Qty"
      },
      "processingLabel": {
        "comment": "Text for order in processing state",
        "value": "Processing"
      },
      "needHelpLabel": {
        "comment": "Need help label",
        "value": "Need help?"
      },
      "helpLineNumberLabel": {
        "comment": "Help line number label",
        "value": "Call"
      },
      "helpLineContactAriaLabel": {
        "comment": "Localized text for contact link aria label",
        "value": "Need help, call"
      },
      "pickedUpSalesLines": {
        "comment": "Store pickup title",
        "value": "Store pickup"
      },
      "deliveredSalesLines": {
        "comment": "Delivery at home",
        "value": "Delivery"
      },
      "carryOutSalesLines": {
        "comment": "Customer carry out",
        "value": "Purchased"
      },
      "orderStatusReadyForPickup": {
        "comment": "Order status for order pickup",
        "value": "Ready for pickup"
      },
      "orderStatusProcessing": {
        "comment": "Order status for order processing",
        "value": "Processing"
      },
      "orderStatusShipped": {
        "comment": "Order status for order shipped",
        "value": "Shipped"
      },
      "orderStatusPickedUp": {
        "comment": "Order status for order picked up",
        "value": "Picked up"
      },
      "orderStatusCanceled": {
        "comment": "Order status for order canceled",
        "value": "Canceled"
      },
      "phoneAriaLabel": {
        "comment": "Aria label for phone",
        "value": "phone"
      },
      "buyItAgainLabel": {
        "comment": "text for buy it again link",
        "value": "Buy it again"
      },
      "buyItAgainAriaLabel": {
        "comment": "text for buy it again aria label",
        "value": "Buy it again for {productName}"
      },
      "shipToLabel": {
        "comment": "Ship to label",
        "value": "Ship to"
      },
      "storeLabel": {
        "comment": "Store label",
        "value": "Store"
      },
      "productDimensionTypeColor": {
        "comment": "String that corresponds to the Color Product Dimension Type (1)",
        "value": "Color"
      },
      "productDimensionTypeSize": {
        "comment": "String that corresponds to the Size Product Dimension Type (3)",
        "value": "Size"
      },
      "productDimensionTypeStyle": {
        "comment": "String that corresponds to the Style Product Dimension Type (4)",
        "value": "Style"
      },
      "trackingLabel": {
        "comment": "tracking number label for orders",
        "value": "Tracking number: "
      },
      "trackingComingSoonLabel": {
        "comment": "tracking number coming soon",
        "value": "Not yet available"
      },
      "trackingAriaLabel": {
        "comment": "aria label for tracking number link",
        "value": "track your order"
      },
      "pointsEarnedLabel": {
        "comment": "Label for the amount of loyalty points earned",
        "value": "Points earned"
      },
      "receiptEmailMessage": {
        "comment": "Label for reciept email",
        "value": "Confirmation email sent to "
      },
      "receiptIdLabel": {
        "comment": "Receipt id label",
        "value": "Receipt#"
      },
      "backToShopping": {
        "comment": "Back to shopping label",
        "value": "Back to shopping"
      },
      "configString": {
        "comment": "Configuration text",
        "value": "Configuration"
      },
      "phoneLabel": {
        "comment": "Phone label",
        "value": "Phone: "
      },
      "orderSummaryHeading": {
        "comment": "Order summary heading",
        "value": "Order summary"
      },
      "discountStringText": {
        "comment": "String to show discount offer string",
        "value": "Savings "
      },
      "posChannelNameText": {
        "comment": "String to show POS channel name",
        "value": "Purchased at "
      },
      "onlineStoreChannelNameText": {
        "comment": "String to show online store channel name",
        "value": "Online purchase"
      }
    },
    "type": "contentModule"
  },
  "order-template": {
    "friendlyName": "OrderTemplateLines",
    "name": "order-template",
    "description": "Module to show the order template lines",
    "categories": [
      "Account management"
    ],
    "dataActions": {
      "cart": {
        "path": "@msdyn365-commerce/global-state/dist/lib/data-actions/cart-state-data-action",
        "runOn": "server"
      },
      "orderTemplate": {
        "path": "./actions/get-order-template",
        "runOn": "client"
      }
    },
    "config": {
      "heading": {
        "type": "object",
        "friendlyName": "Heading",
        "description": "Heading property",
        "properties": {
          "text": {
            "type": "string",
            "friendlyName": "Heading Text",
            "description": "Heading Text",
            "default": "Heading",
            "required": true
          },
          "tag": {
            "type": "string",
            "friendlyName": "Heading Level",
            "description": "Heading Tag",
            "enum": {
              "h1": "H1",
              "h2": "H2",
              "h3": "H3",
              "h4": "H4",
              "h5": "H5",
              "h6": "H6"
            },
            "default": "h2"
          }
        }
      },
      "imageSettings": {
        "friendlyName": "OrderTemplateLines item Image Settings",
        "description": "Image settings for OrderTemplateLines item",
        "type": "imageSettings"
      },
      "className": {
        "friendlyName": "Custom CSS class name",
        "description": "Provide a custom css class name defined in the theme pack to target the CSS for this module",
        "type": "string",
        "default": ""
      },
      "itemsPerPage": {
        "friendlyName": "Items per page",
        "description": "Number of items to be displayed per page",
        "type": "number",
        "minimum": 0,
        "scope": "module",
        "default": 10
      }
    },
    "resources": {
      "emptyOrderTemplateLinesText": {
        "comment": "Text for the empty order template lines",
        "value": "Your order template lines is empty."
      },
      "priceFree": {
        "comment": "Text to show when product is free",
        "value": "Free"
      },
      "removeItemFromOrderTemplateButtonText": {
        "comment": "Text for the remove button",
        "value": "Remove from order template"
      },
      "addOrderTemplateItemToBagButtonText": {
        "comment": "Text for the add to bag button",
        "value": "Add to bag"
      },
      "addSelectedToBagButtonText": {
        "comment": "Text for the add to bag button",
        "value": "Add selected to bag"
      },
      "removeSelectedToBagButtonText": {
        "comment": "Text for the add to bag button",
        "value": "Remove selected"
      },
      "waitingClass": {
        "comment": "CSS class for the waiting class",
        "value": "waiting waiting-circular waiting-lg"
      },
      "addedToCartSuccessMessage": {
        "comment": "Added to cart friendly message",
        "value": "Added to your cart"
      },
      "addedToCartFailureMessage": {
        "comment": "Message to show when add to cart fails",
        "value": "Add to cart failed. Please refresh and retry"
      },
      "maxQuantityLimitText": {
        "comment": "String to show message that you've reached max quantity",
        "value": "You already have {curQuantity} of this item in your shopping bag. You can only add {maxQuantity} of this item to your shopping bag"
      },
      "cancelBtnLabel": {
        "value": "Cancel",
        "comment": "Cancel button label"
      },
      "originalPriceText": {
        "comment": "String that corresponds to the original price screen reader text",
        "value": "Original price"
      },
      "currentPriceText": {
        "comment": "String that corresponds to the current price screen reader text",
        "value": "Current price"
      },
      "productDimensionTypeColor": {
        "comment": "String that corresponds to the Color Product Dimension Type (1)",
        "value": "Color"
      },
      "productDimensionTypeConfiguration": {
        "value": "Configuration",
        "comment": "String that corresponds to the Configuration Product Dimension Type (2)"
      },
      "productDimensionTypeSize": {
        "comment": "String that corresponds to the Size Product Dimension Type (3)",
        "value": "Size"
      },
      "productDimensionTypeStyle": {
        "comment": "String that corresponds to the Style Product Dimension Type (4)",
        "value": "Style"
      },
      "errorGettingOrderTemplateLines": {
        "comment": "Text for the error message while getting order template lines",
        "value": "Sorry we are unable to load your order template lines at this moment, please try again later."
      },
      "productNumberText": {
        "comment": "Name of the product number column of the product table",
        "value": "Product number"
      },
      "productText": {
        "comment": "Name of the product column of the product table",
        "value": "Product"
      },
      "productUnitPriceText": {
        "comment": "Name of the product unit price column of the product table",
        "value": "Unit price"
      },
      "productUOMText": {
        "comment": "Text for the unit of measure column of the product table",
        "value": "UOM"
      },
      "productQuantityText": {
        "comment": "Text for the quantity column of the product table",
        "value": "Quantity"
      },
      "productActionsText": {
        "comment": "Text for the actions column of the product table",
        "value": "Actions"
      },
      "addTemplateToBagButtonText": {
        "comment": "Text for the add template to bag button",
        "value": "Add template to bag"
      },
      "addLineModalLinkText": {
        "comment": "Text for the add a line modal link",
        "value": "Add a line"
      },
      "addItemToTemplateText": {
        "comment": "Text for the add a line to the template button",
        "value": "Add to template"
      },
      "searchModalPlaceholderText": {
        "comment": "Placeholder text for the add to template modal",
        "value": "Enter a product name or SKU#"
      },
      "selectProductButtonText": {
        "comment": "Text for the select product for configuration button",
        "value": "Select product"
      },
      "backButtonText": {
        "comment": "Text for the back to products button",
        "value": "Back to products"
      },
      "deleteTemplateButtonText": {
        "comment": "Text for the delete template button",
        "value": "Delete template"
      },
      "orderTemplateTitle": {
        "value": "Order template title",
        "comment": "Text for order template dialog title"
      },
      "renameTemplateButtonText": {
        "value": "Rename template",
        "comment": "Text for the rename template button"
      },
      "renameOrderTemplateTitleText": {
        "value": "Rename the order template",
        "comment": "Text for title of the rename template dialog"
      },
      "renameOrderTemplateButtonText": {
        "value": "Rename",
        "comment": "Text for rename order template dialog button"
      },
      "inputQuantityAriaLabel": {
        "comment": "Aria label for the input quantity",
        "value": "quantity input"
      },
      "decrementButtonAriaLabel": {
        "comment": "Aria label for the quantity decrease button",
        "value": "Press to decrease the quantity by 1"
      },
      "incrementButtonAriaLabel": {
        "comment": "Aria label for the quantity increment button",
        "value": "Press to increment quantity by 1"
      },
      "addToCartFailureMessage": {
        "comment": "Message to show when order template adding to cart have fails",
        "value": "Add to cart failed. Please refresh and retry"
      },
      "addToCartSuccessMessage": {
        "comment": "Message to show when order template successfully added to cart",
        "value": "Order template successfully added to cart"
      },
      "addToCartProcessMessage": {
        "comment": "Message to show when order template adding to cart",
        "value": "Adding to cart"
      },
      "removeSelectedSuccessMessage": {
        "comment": "Message to show when order template successfully added to cart",
        "value": "Selected lines successfully removed to cart"
      },
      "removeSelectedFailureMessage": {
        "comment": "Message to show when order template successfully added to cart",
        "value": "Failed to remove selected lines, please try again"
      },
      "closeWindowButtonText": {
        "comment": "Text for the close modal window button of adding order template",
        "value": "Close"
      },
      "deleteOrderTemplateFailedText": {
        "comment": "Text for the failure in deleting order template",
        "value": "Failed to delete order template"
      },
      "flipperNext": {
        "comment": "flipperNext config value",
        "value": "Next"
      },
      "flipperPrevious": {
        "comment": "flipperPrevious config value",
        "value": "Previous"
      },
      "paginationAriaLabel": {
        "value": "Page navigation example",
        "comment": "Text for pagination aria label"
      },
      "viewCartButtonText": {
        "value": "View bag and checkout",
        "comment": "View cart text on item added to cart dialog"
      },
      "orderTemplateCloseButtonText": {
        "value": "Close",
        "comment": "Text for the close button for order template Dialog"
      },
      "linesAddedToCartHeaderItemsOneText": {
        "value": "1 order template",
        "comment": "View order template text on cart added to cart dialog"
      },
      "linesAddedToCartHeaderLinesOneText": {
        "value": "1 line",
        "comment": "View order template text on cart added to cart dialog"
      },
      "linesAddedToCartHeaderLinesFormatText": {
        "value": "{0} lines",
        "comment": "View order template text on cart added to cart dialog"
      },
      "linesAddedToCartHeaderMessageText": {
        "value": " added to bag",
        "comment": "View order template text on cart added to cart dialog"
      },
      "itemAddedToCartHeaderItemOneText": {
        "value": "1 item",
        "comment": "View order template text on item added to cart dialog"
      },
      "itemAddedToCartHeaderItemFormatText": {
        "value": "{0} items",
        "comment": "View order template text on item added to order template dialog"
      },
      "itemAddedToCartHeaderMessageText": {
        "value": " added to bag",
        "comment": "View order template text on item added to cart dialog"
      },
      "freePriceText": {
        "value": "FREE",
        "comment": "View order template text on item added to cart dialog"
      },
      "quantitySelectLabel": {
        "comment": "Text label for the quantity form control",
        "value": "Quantity"
      },
      "searchErrorMessage": {
        "comment": "Text message for a search API request error",
        "value": "Search error"
      },
      "notFoundSearchErrorRedediation": {
        "comment": "Text message for empty search results",
        "value": "Try entering a different keyword."
      },
      "notFoundSearchErrorNotice": {
        "comment": "Text message for remediating an empty search query",
        "value": "No items found."
      },
      "addLineProductUnitPricePrefix": {
        "comment": "Text prefix for a product's unit price",
        "value": "Unit price:"
      },
      "addLineProductUnitOfMeasurePrefix": {
        "comment": "Text prefix for a product's unit price",
        "value": "UOM:"
      },
      "searchButtonAriaLabel": {
        "comment": "Aria label for product search submit button",
        "value": "Submit search"
      },
      "searchInputAriaLabel": {
        "comment": "Aria label for product search query field",
        "value": "Search query"
      },
      "searchResultsCountVerbage": {
        "comment": "Notification message of number of search results",
        "value": "We found {count} {subject} based on your search."
      },
      "searchResultsCountSubject": {
        "comment": "Notification message subject term, allows for pluralization",
        "value": "product"
      },
      "addToTemplateConfirmation": {
        "comment": "Confirmation of products added to the order template",
        "value": "{count} of {productAndDimensions} have been added to template."
      },
      "addToTemplateError": {
        "comment": "Error message for API error when products added to the order template",
        "value": "There was an error adding this item to the template."
      },
      "totalPriceLabel": {
        "comment": "Text label for total price of configured product",
        "value": "Total"
      },
      "defaultOrderTemplateName": {
        "comment": "Default order template name",
        "value": "Untitled"
      },
      "progressNotificationText": {
        "comment": "Text for progress indicator",
        "value": "Loading..."
      }
    },
    "type": "contentModule"
  },
  "navigation-menu": {
    "friendlyName": "Navigation menu (COPY)",
    "name": "navigation-menu",
    "description": "Navigation menu items represent the product browsing hierarchy and other static links to pages  ",
    "categories": [
      "Header",
      "Navigation"
    ],
    "dataActions": {
      "categories": {
        "path": "@msdyn365-commerce-modules/retail-actions/dist/lib/get-categories-hierarchy"
      }
    },
    "config": {
      "categoryImageSettings": {
        "friendlyName": "category image quality",
        "description": "Image settings category",
        "type": "imageSettings"
      },
      "displayCategoryImage": {
        "friendlyName": "Show category images",
        "description": "Show category images",
        "type": "boolean",
        "default": false,
        "required": false
      },
      "navigationMenuSource": {
        "friendlyName": "Source for navigation menu",
        "description": "Shows navigation menu items from retail server or CMS tool or both",
        "type": "string",
        "enum": {
          "retailServerOnly": "Retail Server",
          "cmsOnly": "Manual Authoring",
          "all": "From both Retail Server and Manual Authoring"
        },
        "default": "all",
        "scope": "module"
      },
      "cmsNavItems": {
        "type": "array",
        "friendlyName": "Static menu items",
        "description": "If source allows manual authoring, you can configure the menu items",
        "items": {
          "type": "object",
          "friendlyName": "Menu item",
          "description": "Menu item property",
          "properties": {
            "linkText": {
              "type": "string",
              "friendlyName": "Menu Item Text",
              "description": "Text for Menu Item",
              "default": "Menu Item Text "
            },
            "linkUrl": {
              "type": "link",
              "friendlyName": "Menu Item Link target",
              "description": "Destination url for Menu Item Link",
              "required": false
            },
            "image": {
              "type": "image",
              "friendlyName": "Menu Item Image",
              "description": "Menu Item Image",
              "required": false
            },
            "imageLink": {
              "type": "link",
              "friendlyName": "Menu Item Image Link",
              "description": "Menu Item Image Link",
              "required": false
            },
            "ariaLabel": {
              "type": "string",
              "friendlyName": "Menu item link aria label",
              "description": "Aria Label for Menu Item Link",
              "default": ""
            },
            "openInNewTab": {
              "type": "boolean",
              "friendlyName": "Open in new tab",
              "description": "Open the link in a new tab",
              "default": false
            },
            "subMenus": {
              "type": "array",
              "friendlyName": "List of Sub menus",
              "description": "List of Sub menus",
              "items": {
                "type": "object",
                "friendlyName": "Sub Menu Action Link",
                "description": "Sub Menu Action Link property",
                "properties": {
                  "linkText": {
                    "type": "string",
                    "friendlyName": "Sub menu link text",
                    "description": "Sub Menu Text for link",
                    "default": "Sub Menu Link text "
                  },
                  "linkUrl": {
                    "type": "link",
                    "friendlyName": "Sub Menu Link target",
                    "description": "Destination url for sub menu link",
                    "required": true
                  },
                  "ariaLabel": {
                    "type": "string",
                    "friendlyName": "Sub menu link aria label",
                    "description": "Aria Label for sub menu link",
                    "default": ""
                  },
                  "image": {
                    "type": "image",
                    "friendlyName": "Menu Item Image",
                    "description": "Menu Item Image",
                    "required": false
                  },
                  "imageLink": {
                    "type": "link",
                    "friendlyName": "Menu Item Image Link",
                    "description": "Menu Item Image Link",
                    "required": false
                  },
                  "subMenus": {
                    "type": "array",
                    "friendlyName": "List of Sub menus",
                    "description": "List of Sub menus",
                    "items": {
                      "type": "object",
                      "friendlyName": "Sub Menu Action Link",
                      "description": "Sub Menu Action Link property",
                      "properties": {
                        "linkText": {
                          "type": "string",
                          "friendlyName": "Sub menu link text",
                          "description": "Sub Menu Text for link",
                          "default": "Sub Menu Link text "
                        },
                        "linkUrl": {
                          "type": "link",
                          "friendlyName": "Sub menu link target",
                          "description": "Destination url for sub menu link",
                          "required": true
                        },
                        "ariaLabel": {
                          "type": "string",
                          "friendlyName": "Sub menu link aria label",
                          "description": "Aria Label for sub menu link",
                          "default": ""
                        },
                        "image": {
                          "type": "image",
                          "friendlyName": "Menu Item Image",
                          "description": "Menu Item Image",
                          "required": false
                        },
                        "imageLink": {
                          "type": "link",
                          "friendlyName": "Menu Item Image Link",
                          "description": "Menu Item Image Link",
                          "required": false
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      },
      "className": {
        "friendlyName": "Custom CSS class name",
        "description": "Provide a custom css class name defined in the theme pack to target the CSS for this module",
        "type": "string",
        "default": ""
      }
    },
    "resources": {
      "menuAriaLabel": {
        "comment": "aria label for main menu",
        "value": "Menu"
      },
      "backButtonAriaLabel": {
        "comment": "aria label for back button",
        "value": "Back"
      },
      "allCategoryMenuText": {
        "comment": "Menu text for all categories",
        "value": "All"
      }
    },
    "type": "contentModule"
  },
  "default-container-3-slots": {
    "friendlyName": "Container with 3 columns",
    "name": "default-container-3-slots",
    "description": "A container that allows modules to be placed in three column view and provides flexibility across view ports.",
    "categories": [
      "container"
    ],
    "tags": [
      "container"
    ],
    "config": {
      "heading": {
        "friendlyName": "Heading",
        "description": "Container heading",
        "type": "object",
        "properties": {
          "headingText": {
            "friendlyName": "Heading Text",
            "description": "The heading text",
            "type": "string"
          },
          "tag": {
            "friendlyName": "Heading Tag",
            "description": "The heading tag to use",
            "type": "string",
            "enum": {
              "h1": "H1",
              "h2": "H2",
              "h3": "H3",
              "h4": "H4",
              "h5": "H5",
              "h6": "H6"
            }
          }
        },
        "group": "Layout"
      },
      "containerType": {
        "friendlyName": "Width",
        "description": "Choose from a fixed width container (Fill Container) which will resize at breakpoints or fluid container (Fill Screen) which has a max width of 100% and will continuously resize.",
        "type": "string",
        "enum": {
          "fluid": "Fill Screen",
          "container": "Fill Container"
        },
        "default": "fluid",
        "group": "Layout"
      },
      "xsmall": {
        "friendlyName": "X-Small view port column configuration",
        "description": "extra small viewport configuration in bootstrap columns",
        "type": "string",
        "enum": {
          "col_auto_auto_auto": "auto",
          "col_4_4_4": "33% 33% 33%",
          "col_6_3_3": "50% 25% 25%",
          "col_3_6_3": "25% 50% 25%",
          "col_3_3_6": "25% 25% 50%",
          "col_2_2_8": "16% 16% 67%",
          "col_2_8_2": "16% 67% 16%",
          "col_8_2_2": "67% 16% 16%"
        },
        "default": "col_auto_auto_auto",
        "group": "Layout"
      },
      "small": {
        "friendlyName": "Small view port column configuration",
        "description": "small viewport configuration in bootstrap columns",
        "type": "string",
        "enum": {
          "col_auto_auto_auto": "auto",
          "col_4_4_4": "33% 33% 33%",
          "col_6_3_3": "50% 25% 25%",
          "col_3_6_3": "25% 50% 25%",
          "col_3_3_6": "25% 25% 50%",
          "col_2_2_8": "16% 16% 67%",
          "col_2_8_2": "16% 67% 16%",
          "col_8_2_2": "67% 16% 16%"
        },
        "default": "col_auto_auto_auto",
        "group": "Layout"
      },
      "medium": {
        "friendlyName": "Medium view port column configuration",
        "description": "medium viewport configuration in bootstrap columns",
        "type": "string",
        "enum": {
          "col_auto_auto_auto": "auto",
          "col_4_4_4": "33% 33% 33%",
          "col_6_3_3": "50% 25% 25%",
          "col_3_6_3": "25% 50% 25%",
          "col_3_3_6": "25% 25% 50%",
          "col_2_2_8": "16% 16% 67%",
          "col_2_8_2": "16% 67% 16%",
          "col_8_2_2": "67% 16% 16%"
        },
        "default": "col_auto_auto_auto",
        "group": "Layout"
      },
      "large": {
        "friendlyName": "Large view port column configuration",
        "description": "large viewport configuration in bootstrap columns",
        "type": "string",
        "enum": {
          "col_auto_auto_auto": "auto",
          "col_4_4_4": "33% 33% 33%",
          "col_6_3_3": "50% 25% 25%",
          "col_3_6_3": "25% 50% 25%",
          "col_3_3_6": "25% 25% 50%",
          "col_2_2_8": "16% 16% 67%",
          "col_2_8_2": "16% 67% 16%",
          "col_8_2_2": "67% 16% 16%"
        },
        "default": "col_auto_auto_auto",
        "group": "Layout"
      },
      "className": {
        "friendlyName": "CSS class name",
        "description": "class properties",
        "type": "string",
        "default": "",
        "group": "Layout"
      }
    },
    "slots": {
      "content": {
        "friendlyName": "Content Slots",
        "description": "Content to be rendered in container. Max 3",
        "allowedTypes": "*",
        "max": 3,
        "min": 0
      }
    },
    "type": "containerModule"
  },
  "ratings-histogram": {
    "friendlyName": "Ratings histogram",
    "name": "ratings-histogram",
    "description": "Ratings histogram shows product ratings in a histogram view",
    "categories": [
      "Product details",
      "Ratings",
      "Reviews"
    ],
    "dataActions": {
      "ratingsSummary": {
        "path": "@msdyn365-commerce-modules/retail-actions/dist/lib/get-ratings-summary"
      },
      "ratingsReviewsState": {
        "path": "../../actions/ratings-reviews-state-data-action",
        "runOn": "client"
      }
    },
    "config": {
      "heading": {
        "friendlyName": "Heading",
        "description": "Heading for histogram",
        "type": "object",
        "properties": {
          "text": {
            "type": "string",
            "friendlyName": "Heading Text",
            "description": "Heading Text",
            "default": "Heading",
            "required": true
          },
          "tag": {
            "type": "string",
            "friendlyName": "Heading Level",
            "description": "Heading Tag",
            "enum": {
              "h1": "H1",
              "h2": "H2",
              "h3": "H3",
              "h4": "H4",
              "h5": "H5",
              "h6": "H6"
            },
            "default": "h2"
          }
        }
      },
      "className": {
        "friendlyName": "Custom CSS class name",
        "description": "Provide a custom css class name defined in the theme pack to target the CSS for this module",
        "type": "string",
        "default": ""
      }
    },
    "resources": {
      "barItemAriaLabel": {
        "comment": "The aria label used for the histgram values",
        "value": "{0} stars, {1}% of users gave {0} stars"
      },
      "averageRatingAriaLabel": {
        "comment": "The aria label used for the average rating value",
        "value": "Ratings and reviews section. Average {0} of {1} stars"
      },
      "ratingCountAriaLabel": {
        "comment": "The aria label used for the number of ratings made for this product",
        "value": "{0} users rated this product."
      },
      "ratingReviewText": {
        "comment": "The text review for rating count one",
        "value": "review"
      },
      "ratingReviewsText": {
        "comment": "The text reviews for rating count more than one",
        "value": "reviews"
      }
    },
    "type": "contentModule"
  },
  "organization-users-tile": {
    "friendlyName": "organization-users-tile",
    "name": "organization-users-tile",
    "description": "Display summary for organizations users",
    "categories": [
      "Account-management"
    ],
    "tags": [
      "B2B"
    ],
    "dataActions": {
      "users": {
        "path": "@msdyn365-commerce-modules/retail-actions/dist/lib/get-organization-users-count"
      }
    },
    "config": {
      "heading": {
        "friendlyName": "Heading",
        "description": "Module heading",
        "required": true,
        "type": "object",
        "properties": {
          "text": {
            "type": "string",
            "friendlyName": "Heading Text",
            "description": "Heading Text",
            "default": "Heading",
            "required": true
          },
          "tag": {
            "type": "string",
            "friendlyName": "Heading Level",
            "description": "Heading Tag",
            "enum": {
              "h1": "H1",
              "h2": "H2",
              "h3": "H3",
              "h4": "H4",
              "h5": "H5",
              "h6": "H6"
            },
            "default": "h2"
          }
        }
      },
      "links": {
        "type": "array",
        "friendlyName": "Links",
        "description": "Configure link to organization user page",
        "items": {
          "type": "object",
          "friendlyName": "Action Link",
          "description": "Action Link property",
          "properties": {
            "linkText": {
              "type": "string",
              "friendlyName": "Link text",
              "description": "Text for call to action link",
              "default": "Link text "
            },
            "linkUrl": {
              "type": "link",
              "friendlyName": "Link target",
              "description": "Destination url for link",
              "required": true
            },
            "ariaLabel": {
              "type": "string",
              "friendlyName": "Link aria label",
              "description": "Aria Label for link",
              "default": ""
            },
            "openInNewTab": {
              "type": "boolean",
              "friendlyName": "Open in new tab",
              "description": "Open the link in a new tab",
              "default": false
            }
          }
        },
        "required": true
      },
      "className": {
        "friendlyName": "Custom CSS class name",
        "description": "Provide a custom css class name defined in the theme pack to target the CSS for this module",
        "type": "string",
        "default": ""
      }
    },
    "resources": {
      "accountOrganizationUsersTileDescription": {
        "value": "You have {0} organization user. ",
        "comment": "Text display as summary for business partners."
      }
    },
    "type": "contentModule"
  },
  "order-template-list": {
    "friendlyName": "OrderTemplateList",
    "name": "order-template-list",
    "description": "Module to show list of order templates for a customer",
    "categories": [
      "Account management"
    ],
    "tags": [
      "Additional tags go here"
    ],
    "dataActions": {
      "orderTemplates": {
        "path": "@msdyn365-commerce-modules/retail-actions/dist/lib/order-templates/get-order-templates-preview",
        "runOn": "client"
      }
    },
    "config": {
      "heading": {
        "type": "object",
        "friendlyName": "Heading",
        "description": "Heading property",
        "properties": {
          "text": {
            "type": "string",
            "friendlyName": "Heading Text",
            "description": "Heading Text",
            "default": "Heading",
            "required": true
          },
          "tag": {
            "type": "string",
            "friendlyName": "Heading Level",
            "description": "Heading Tag",
            "enum": {
              "h1": "H1",
              "h2": "H2",
              "h3": "H3",
              "h4": "H4",
              "h5": "H5",
              "h6": "H6"
            },
            "default": "h2"
          }
        }
      },
      "imageSettings": {
        "friendlyName": "Order Template List Image Settings",
        "description": "Image settings for order template list",
        "type": "imageSettings"
      },
      "className": {
        "friendlyName": "Custom CSS class name",
        "description": "Provide a custom css class name defined in the theme pack to target the CSS for this module",
        "type": "string",
        "default": ""
      },
      "enableImageProductLink": {
        "friendlyName": "Allow images to navigate to PDP",
        "description": "This setting allows navigation to PDP when the image is selected.",
        "type": "boolean",
        "default": false
      }
    },
    "resources": {
      "emptyOrderTemplateText": {
        "comment": "Text for the empty order template list",
        "value": "Your order template list is empty."
      },
      "unableToGetOrderTemplateList": {
        "comment": "Text for the not getting order template list",
        "value": "Unable to get order template list!"
      },
      "removeButtonText": {
        "comment": "Text for the remove button",
        "value": "Remove from order template list"
      },
      "addToBagButtonText": {
        "comment": "Text for the add to bag button",
        "value": "Add to bag"
      },
      "createNewTemplateButtonText": {
        "comment": "Text for the create new template button",
        "value": "Create an order template"
      },
      "orderTemplateCreatedSuccessText": {
        "comment": "Text for the success of creation new order template",
        "value": "Order template created successfully"
      },
      "orderTemplateListTitle": {
        "comment": "Order template list title",
        "value": "Order templates"
      },
      "orderTemplateCreationFailedText": {
        "comment": "Text for Failed to create new order template",
        "value": "Failed to create new order template"
      },
      "deleteOrderTemplateFailedText": {
        "comment": "Text for failed to delete order template",
        "value": "Failed to delete order template"
      },
      "closeWindowButtonText": {
        "comment": "Text for the close modal window button of adding order template",
        "value": "Close"
      },
      "addToCartFailureMessage": {
        "comment": "Message to show when order template adding to cart have fails",
        "value": "Add to cart failed. Please refresh and retry"
      },
      "addToCartSuccessMessage": {
        "comment": "Message to show when order template successfully added to cart",
        "value": "Order template successfully added to cart"
      },
      "addToCartProcessMessage": {
        "comment": "Message to show when order template adding to cart",
        "value": "Adding to cart"
      },
      "viewCartButtonText": {
        "value": "View bag and checkout",
        "comment": "View cart text on item added to cart dialog"
      },
      "orderTemplateCloseButtonText": {
        "value": "Close",
        "comment": "Continue shopping on item added to cart dialog"
      },
      "linesAddedToCartHeaderItemsOneText": {
        "value": "1 order template",
        "comment": "View order template text on cart added to cart dialog"
      },
      "linesAddedToCartHeaderLinesOneText": {
        "value": "1 line",
        "comment": "View order template text on cart added to cart dialog"
      },
      "linesAddedToCartHeaderLinesFormatText": {
        "value": "{0} lines",
        "comment": "View order template text on cart added to cart dialog"
      },
      "linesAddedToCartHeaderMessageText": {
        "value": " added to bag",
        "comment": "View order template text on cart added to cart dialog"
      },
      "createOrderTemplateHeader": {
        "value": "Create an order template",
        "comment": "Text for create order template dialog header"
      },
      "orderTemplateTitle": {
        "value": "Order template title",
        "comment": "Text for create order template dialog title"
      },
      "orderTemplateNameAriaLabel": {
        "value": "Order template title",
        "comment": "Text for create order template dialog template name input aria label"
      },
      "createOrderTemplateDescription": {
        "value": "Order templates will be saved to your account. You can reuse them in the future to speed up the checkout process. Create an order template and add this item to it.",
        "comment": "Text for create order template dialog description"
      },
      "createOrderTemplateButtonText": {
        "value": "Create",
        "comment": "Text for create order template dialog create button"
      },
      "cancelNewOrderTemplateCreationButtonText": {
        "value": "Cancel",
        "comment": "Text for create order template dialog cancel button"
      },
      "defaultOrderTemplateName": {
        "value": "Untitled",
        "comment": "Text for create order template dialog default order template name"
      }
    },
    "type": "contentModule"
  },
  "order-confirmation": {
    "friendlyName": "Order confirmation",
    "name": "order-confirmation",
    "description": "This module shows an order confirmation after the order is placed. It includes confirmation id and details about the order",
    "categories": [
      "Account management",
      "Order management"
    ],
    "dataActions": {
      "orderHydration": {
        "path": "../../actions/get-sales-order-with-hydrations",
        "runOn": "server"
      },
      "tenderTypes": {
        "path": "../../actions/get-tender-types",
        "runOn": "server"
      },
      "loyaltyCard": {
        "path": "@msdyn365-commerce-modules/retail-actions/dist/lib/get-loyalty-card",
        "runOn": "client"
      }
    },
    "config": {
      "heading": {
        "friendlyName": "Heading",
        "description": "Heading",
        "type": "object",
        "properties": {
          "text": {
            "type": "string",
            "friendlyName": "Heading Text",
            "description": "Heading Text",
            "default": "Heading",
            "required": true
          },
          "tag": {
            "type": "string",
            "friendlyName": "Heading Level",
            "description": "Heading Tag",
            "enum": {
              "h1": "H1",
              "h2": "H2",
              "h3": "H3",
              "h4": "H4",
              "h5": "H5",
              "h6": "H6"
            },
            "default": "h2"
          }
        }
      },
      "contactNumber": {
        "friendlyName": "Contact number",
        "description": "Contact number for help",
        "type": "string"
      },
      "imageSettings": {
        "friendlyName": "Order confirmation Image Settings",
        "description": "Image settings for order confirmation",
        "type": "imageSettings"
      },
      "className": {
        "friendlyName": "Custom CSS class name",
        "description": "Provide a custom css class name defined in the theme pack to target the CSS for this module",
        "type": "string",
        "default": ""
      }
    },
    "resources": {
      "loadingLabel": {
        "comment": "Loading message",
        "value": "Loading..."
      },
      "genericErrorMessage": {
        "comment": "Localized generic error message for Payment instrument module",
        "value": "Something went wrong. Please try again later."
      },
      "orderItemLabel": {
        "comment": "total items in order",
        "value": "item"
      },
      "orderItemsLabel": {
        "comment": "total items in order",
        "value": "items"
      },
      "orderIdLabel": {
        "comment": "Order ID label",
        "value": "Order#"
      },
      "confirmationIdLabel": {
        "comment": "Confirmation ID label",
        "value": "Confirmation ID:"
      },
      "orderSummaryTitle": {
        "comment": "Title for order summary",
        "value": "Order summary"
      },
      "paymentMethodsTitle": {
        "comment": "Title for payment methods",
        "value": "Payment method"
      },
      "shippingAddressTitle": {
        "comment": "Title for shipping address",
        "value": "Shipping address"
      },
      "noSalesOrderText": {
        "comment": "Text describes no sales order found",
        "value": "No order confirmation found"
      },
      "creditCardEndingLabel": {
        "comment": "Credit card ending label",
        "value": "card ending in"
      },
      "giftCardEndingLabel": {
        "comment": "Gift card ending label",
        "value": "Gift card ending in"
      },
      "amountCoveredLabel": {
        "comment": "Amount covered label",
        "value": "Amount covered:"
      },
      "loyaltyCardUsedLabel": {
        "comment": "Loyalty card used label",
        "value": "Loyalty card used "
      },
      "cashUsedLabel": {
        "comment": "Cash used label",
        "value": "Cash"
      },
      "customerAccountUsedLabel": {
        "comment": "Customer Account used label",
        "value": "Customer Account"
      },
      "freePriceText": {
        "comment": "Free price text",
        "value": "FREE"
      },
      "orderSummaryItemsTotalLabel": {
        "comment": "Order summary items total label",
        "value": "Subtotal"
      },
      "orderSummaryShippingFeeLabel": {
        "comment": "Order summary shipping fee label",
        "value": "Shipping"
      },
      "orderSummaryTaxLabel": {
        "comment": "Order summary tax label",
        "value": "Tax"
      },
      "orderSummaryGrandTotalLabel": {
        "comment": "Order summary grand total label",
        "value": "Total"
      },
      "salesLineQuantityText": {
        "comment": "Sales line quantity label",
        "value": "Qty"
      },
      "processingLabel": {
        "comment": "Text for order in processing state",
        "value": "Processing"
      },
      "needHelpLabel": {
        "comment": "Need help label",
        "value": "Need help?"
      },
      "helpLineNumberLabel": {
        "comment": "Help line number label",
        "value": "Contact us at"
      },
      "helpLineContactAriaLabel": {
        "comment": "Localized text for contact link aria label",
        "value": "Need help, call"
      },
      "pickedUpSalesLines": {
        "comment": "Store pickup title",
        "value": "Store pickup"
      },
      "deliveredSalesLines": {
        "comment": "Delivery at home",
        "value": "Delivery"
      },
      "carryOutSalesLines": {
        "comment": "Customer carry out",
        "value": "Purchased"
      },
      "orderStatusReadyForPickup": {
        "comment": "Order status for order pickup",
        "value": "Ready for pickup"
      },
      "orderStatusProcessing": {
        "comment": "Order status for order processing",
        "value": "Processing"
      },
      "orderStatusShipped": {
        "comment": "Order status for order shipped",
        "value": "Shipped"
      },
      "orderStatusPickedUp": {
        "comment": "Order status for order picked up",
        "value": "Picked up"
      },
      "orderStatusCanceled": {
        "comment": "Order status for order canceled",
        "value": "Canceled"
      },
      "phoneAriaLabel": {
        "comment": "Aria label for phone",
        "value": "phone"
      },
      "buyItAgainLabel": {
        "comment": "text for buy it again link",
        "value": "Buy it again"
      },
      "buyItAgainAriaLabel": {
        "comment": "text for buy it again aria label",
        "value": "Buy it again for {productName}"
      },
      "shipToLabel": {
        "comment": "Ship to label",
        "value": "Ship to"
      },
      "storeLabel": {
        "comment": "Store label",
        "value": "Store"
      },
      "productDimensionTypeColor": {
        "comment": "String that corresponds to the Color Product Dimension Type (1)",
        "value": "Color"
      },
      "productDimensionTypeSize": {
        "comment": "String that corresponds to the Size Product Dimension Type (3)",
        "value": "Size"
      },
      "productDimensionTypeStyle": {
        "comment": "String that corresponds to the Style Product Dimension Type (4)",
        "value": "Style"
      },
      "trackingLabel": {
        "comment": "tracking number label for orders",
        "value": "Tracking number: "
      },
      "trackingComingSoonLabel": {
        "comment": "tracking number coming soon",
        "value": "Not yet available"
      },
      "trackingAriaLabel": {
        "comment": "aria label for tracking number link",
        "value": "track your order"
      },
      "pointsEarnedLabel": {
        "comment": "Label for the amount of loyalty points earned",
        "value": "Points earned"
      },
      "receiptEmailMessage": {
        "comment": "Label for reciept email",
        "value": "Confirmation email sent to "
      },
      "receiptIdLabel": {
        "comment": "Receipt id label",
        "value": "Receipt#"
      },
      "backToShopping": {
        "comment": "Back to shopping label",
        "value": "Back to shopping"
      },
      "configString": {
        "comment": "Configuration text",
        "value": "Configuration"
      },
      "phoneLabel": {
        "comment": "Phone label",
        "value": "Phone: "
      },
      "orderSummaryHeading": {
        "comment": "Order summary heading",
        "value": "Order summary"
      },
      "discountStringText": {
        "comment": "String to show discount offer string",
        "value": "Savings "
      },
      "pickupItemsHeader": {
        "comment": "Header for pickup items group",
        "value": "Pickup address"
      },
      "pickingItemsLabel": {
        "comment": "Picking items label ",
        "value": "Picking up {0} {1}"
      },
      "shippingItemToYouLabel": {
        "comment": "Shipping items to you label",
        "value": "Shipping {0} {1} to you"
      },
      "orderPlacedOnLabel": {
        "comment": "label for order created date",
        "value": "Order placed on:"
      }
    },
    "type": "contentModule"
  },
  "search-result-container": {
    "friendlyName": "Search results (COPY)",
    "name": "search-result-container",
    "description": "Search results is used on a search results and category page to show the list of products for a search term or category. It also includes refiners, pagination and sort options.",
    "categories": [
      "Products",
      "Search",
      "Category"
    ],
    "dataActions": {
      "products": {
        "path": "./actions/get-full-products-by-collection"
      },
      "category": {
        "path": "@msdyn365-commerce-modules/retail-actions/dist/lib/get-current-category"
      },
      "listPageState": {
        "path": "./list-page-state"
      },
      "categoryHierarchy": {
        "path": "@msdyn365-commerce-modules/retail-actions/dist/lib/get-current-category-hierarchy",
        "runOn": "server"
      },
      "searchConfiguration": {
        "path": "./actions/get-mapped-search-configuration"
      },
      "refiners": {
        "path": "./actions/get-refiners-for-collection"
      },
      "featureProduct": {
        "path": "@msdyn365-commerce-modules/retail-actions/dist/lib/get-selected-variant"
      }
    },
    "config": {
      "itemsPerPage": {
        "friendlyName": "Items per page",
        "description": "Number of items to be displayed per page",
        "type": "number",
        "minimum": 0,
        "scope": "module"
      },
      "allowBackNavigation": {
        "friendlyName": "Allow back on PDP",
        "description": "If set to true, back link will be displayed on PDP breadcrumb",
        "type": "boolean",
        "default": false,
        "scope": "module"
      },
      "imageSettings": {
        "friendlyName": "Image settings",
        "description": "Image settings for product items",
        "type": "imageSettings"
      },
      "className": {
        "friendlyName": "Custom CSS class name",
        "description": "Provide a custom css class name defined in the theme pack to target the CSS for this module",
        "type": "string",
        "default": ""
      },
      "expandRefinersCount": {
        "friendlyName": "Expand Refiners",
        "type": "string",
        "description": "Number of Refiner Menu should be expanded on load",
        "enum": {
          "all": "All",
          "one": "1",
          "two": "2",
          "three": "3",
          "four": "4"
        },
        "default": "all"
      },
      "disableHierarchy": {
        "friendlyName": "Hide category hierarchy display",
        "description": "If set to true, the default category hierarchy will not be displayed",
        "type": "boolean",
        "default": false,
        "scope": "module"
      },
      "includeAttributes": {
        "friendlyName": "Include product attributes in search results",
        "description": "Search results API response includes product attributes when this setting is turned on. Attributes will not be displayed in the user interface but will be available in the response",
        "type": "boolean",
        "default": false,
        "scope": "module"
      }
    },
    "resources": {
      "noResultsForRefinersText": {
        "value": "No products found for the selected criteria.",
        "comment": "Message to display when no products are returned with applied refinement criteria"
      },
      "resultCategoryNotFoundText": {
        "value": "No products found for the selected category",
        "comment": "Result not found text for category page"
      },
      "resultSearchNotFoundText": {
        "value": "No products found for the given search term",
        "comment": "Result not found text for search page"
      },
      "paginationAriaLabel": {
        "value": "Page navigation example",
        "comment": "Text for pagination aria label"
      },
      "priceFree": {
        "value": "Free",
        "comment": "Text to show when product is free"
      },
      "originalPriceText": {
        "comment": "String that corresponds to the original price screen reader text",
        "value": "Original price"
      },
      "currentPriceText": {
        "comment": "String that corresponds to the current price screen reader text",
        "value": "Current price"
      },
      "ratingAriaLabel": {
        "value": "Average {0} of {1} stars",
        "comment": "Text to inform the average rating where {0} and {1} are the ranges"
      },
      "flipperNext": {
        "comment": "flipperNext config value",
        "value": "Next"
      },
      "flipperPrevious": {
        "comment": "flipperPrevious config value",
        "value": "Previous"
      },
      "searchTextPrefix": {
        "comment": "Sets the prefix to the search text to display as the collection title if a search was performed",
        "value": "Results for "
      },
      "numberOfProducts": {
        "comment": "String to define the number of products returned found for a search term",
        "value": "{0} products"
      },
      "oneProduct": {
        "comment": "String to define the only one product being returned for search",
        "value": "1 product"
      },
      "categoryLinkAriaLabel": {
        "comment": "Aria-Label text for links to other categories within the hierarchy",
        "value": "Go To:"
      },
      "sortByDropdownLabel": {
        "comment": "Label used for the sort-by dropdown",
        "value": "Sort by:"
      },
      "sortByOptionNameAsc": {
        "comment": "Text used for the sort-by dropdown option of name A-Z",
        "value": "Name: A to Z"
      },
      "sortByOptionNameDesc": {
        "comment": "Text used for the sort-by dropdown option of name Z-A",
        "value": "Name: Z to A"
      },
      "sortByOptionPriceAsc": {
        "comment": "Text used for the sort-by dropdown option of price low-high",
        "value": "Price: Low to High"
      },
      "sortByOptionPriceDesc": {
        "comment": "Text used for the sort-by dropdown option of price high-low",
        "value": "Price: High to Low"
      },
      "sortByOptionRatingDesc": {
        "comment": "Text used for the sort-by dropdown option of rating high-low",
        "value": "Rating: High to Low"
      },
      "sortByOptionRelevanceDesc": {
        "comment": "Text used for the sort-by dropdown option of relevance high-low",
        "value": "Relevance"
      },
      "placeholderTextMax": {
        "comment": "Placeholder text to display on the maximum input box for input range refiners",
        "value": "No Max"
      },
      "minLabel": {
        "comment": "Label to display with the minimum input box for input range refiners",
        "value": "Min"
      },
      "maxLabel": {
        "comment": "Label to display with the maximum input box for input range refiners",
        "value": "Max"
      },
      "rangeNameFormat": {
        "comment": "Format of name to display on range refiner min-max groups",
        "value": "{0} Range"
      },
      "validationErrorNotNumber": {
        "comment": "Error message to display when a value entered for range refiner min-max is non-numeric",
        "value": "Input should be a number"
      },
      "validationErrorNotRange": {
        "comment": "Error message to display when a value entered for range refiner min-max results in an invalid range",
        "value": "Invalid range: minimum should be less than maximum"
      },
      "clearAllText": {
        "comment": "Text on the button that clears all selected choices, often Clear All or Reset Filters",
        "value": "Clear all"
      },
      "choiceSummaryLabel": {
        "comment": "Optional text to display next to the summary of choices when there is at least one choice selected",
        "value": ""
      },
      "choiceFormat": {
        "comment": "Format of choice to display, where {0} is the name of the refiner and {1} is the refiner value",
        "value": "{1}"
      },
      "choiceRangeValueFormat": {
        "comment": "Format of choice value to display when it specifies a range, where {0} is the minimum value and {1} is the maximum value",
        "value": "{0}-{1}"
      },
      "choiceAriaLabel": {
        "value": "button press enter and space key to remove filter",
        "comment": "Text to show for choice summary aria label"
      },
      "modalTitle": {
        "comment": "Text display as modal title.",
        "value": "Sort & filter"
      },
      "modalCloseButtonText": {
        "comment": "Text display on the button used to close the sort and filter modal.",
        "value": "Close"
      },
      "minValueSliderThumbAriaLabel": {
        "comment": "Aria-label for the min value slider thumb in rangeRefineItem",
        "value": "Minimum price"
      },
      "maxValueSliderThumbAriaLabel": {
        "comment": "Aria-label for the max value slider thumb in rangeRefineItem",
        "value": "Maximum price"
      },
      "featureSimilarLooksTitle": {
        "comment": "Text display on the search feature module as title",
        "value": "Similar Looks to"
      }
    },
    "type": "contentModule"
  },
  "search": {
    "friendlyName": "Search (COPY)",
    "name": "search",
    "description": "Search allows to find products across the ecommerce site catalog",
    "categories": [
      "Header",
      "Search"
    ],
    "dataActions": {
      "searchState": {
        "path": "@msdyn365-commerce-modules/search-utilities/dist/lib/search-state-data-action",
        "runOn": "client"
      }
    },
    "config": {
      "suggestionTypeCriterion": {
        "friendlyName": "Search suggestion types.",
        "description": "Allows product, keyword and category search results, choose default if you want all options",
        "type": "array",
        "items": {
          "type": "object",
          "friendlyName": "Suggestion Type",
          "description": "Suggestion Type property",
          "properties": {
            "SuggestionType": {
              "type": "string",
              "friendlyName": "Suggestion Type Item",
              "description": "Suggestion type for suggestions",
              "enum": {
                "product": "Product",
                "keyword": "Keyword",
                "scopedCategory": "ScopedCategory"
              }
            }
          }
        }
      },
      "topResultsCount": {
        "friendlyName": "Number of results",
        "description": "Fetch top n number of results for earch search type",
        "type": "number",
        "default": 5,
        "minimum": 0,
        "maximum": 30,
        "scope": "module"
      },
      "imageSettings": {
        "friendlyName": "Auto suggest Image Settings",
        "description": "Image settings for auto suggest",
        "type": "imageSettings"
      },
      "hideSearchLabel": {
        "friendlyName": "Hide search label",
        "description": "Hides the search label on the search box",
        "type": "boolean",
        "default": false,
        "scope": "module"
      },
      "disableSubmitSearch": {
        "friendlyName": "Hide search button",
        "description": "Hides the search button on the search box",
        "type": "boolean",
        "default": false,
        "scope": "module"
      },
      "searchplaceholderText": {
        "friendlyName": "Search place holder",
        "description": "Text for search place holder",
        "type": "string",
        "scope": "module"
      },
      "className": {
        "friendlyName": "Custom CSS class name",
        "description": "Provide a custom css class name defined in the theme pack to target the CSS for this module",
        "type": "string",
        "default": ""
      }
    },
    "resources": {
      "searchtext": {
        "comment": "Search label text",
        "value": "Search"
      },
      "searchLabelArialLabel": {
        "comment": "Text for search label aria label",
        "value": "Search collapsed"
      },
      "cancelBtnAriaLabel": {
        "comment": "Text for cancel button aria label",
        "value": "Cancel"
      },
      "searchBtnAriaLabel": {
        "comment": "Text for search button aria label",
        "value": "Search"
      },
      "submitBtnAriaLabel": {
        "comment": "Text for submit button aria label",
        "value": "Submit search"
      },
      "autoSuggestFoundMessage": {
        "comment": "Autosuggest response message for aria label",
        "value": "Autosuggest results are available"
      },
      "noAutoSuggestionMessage": {
        "comment": "Empty autosuggest response message for aria label",
        "value": "No autosuggest results are available"
      },
      "productSuggestionHeading": {
        "comment": "Product suggestion type search results list heading title",
        "value": "Go to products"
      },
      "categorySuggestionHeading": {
        "comment": "Category suggestion type search results list heading title",
        "value": "Search {0} in categories"
      }
    },
    "type": "contentModule"
  },
  "reviews-list": {
    "friendlyName": "Reviews",
    "name": "reviews-list",
    "description": "Shows user reviews for a product and can be used in a product detail page.",
    "categories": [
      "Product details",
      "Ratings",
      "Reviews"
    ],
    "dataActions": {
      "reviewsList": {
        "path": "../../actions/get-product-reviews"
      },
      "ratingsReviewsState": {
        "path": "../../actions/ratings-reviews-state-data-action",
        "runOn": "client"
      },
      "userReview": {
        "path": "../../actions/get-user-review"
      },
      "product": {
        "path": "@msdyn365-commerce-modules/retail-actions/dist/lib/get-selected-variant"
      },
      "ratingsSummary": {
        "path": "@msdyn365-commerce-modules/retail-actions/dist/lib/get-ratings-summary"
      }
    },
    "config": {
      "heading": {
        "friendlyName": "Heading",
        "description": "Heading for reviews list",
        "type": "object",
        "properties": {
          "text": {
            "type": "string",
            "friendlyName": "Heading Text",
            "description": "Heading Text",
            "default": "Heading",
            "required": true
          },
          "tag": {
            "type": "string",
            "friendlyName": "Heading Level",
            "description": "Heading Tag",
            "enum": {
              "h1": "H1",
              "h2": "H2",
              "h3": "H3",
              "h4": "H4",
              "h5": "H5",
              "h6": "H6"
            },
            "default": "h2"
          }
        }
      },
      "reviewsShownOnEachPage": {
        "friendlyName": "Reviews per page",
        "description": "Number of reviews which are shown on each page.",
        "type": "number",
        "default": 10,
        "minimum": 0,
        "required": true
      },
      "className": {
        "friendlyName": "Custom CSS class name",
        "description": "Provide a custom css class name defined in the theme pack to target the CSS for this module",
        "type": "string",
        "default": ""
      }
    },
    "resources": {
      "nextButtonText": {
        "comment": "The label which is shown on next button",
        "value": "Next"
      },
      "previousButtonText": {
        "comment": "The label which is shown on previous button",
        "value": "Previous"
      },
      "publisherResponseBadgeText": {
        "comment": "The text which is shown on publisher response for any review. {0} is replaced by publisher name and {1} is replaced by response date",
        "value": "{0} responded on {1}"
      },
      "pageReviewCountText": {
        "comment": "The string to show the number of reviews which are shown on page. {0} is replaced by review start number, {1} is replaced by review end number and {2} is replaced by total reviews for the product.",
        "value": "Showing {0}-{1} out of {2} reviews"
      },
      "pageReviewAriaLabel": {
        "comment": "The string read by screen readers for the next/previous buttons. {0} is replaced by review start number, {1} is replaced by review end number and {2} is replaced by total reviews for the product.",
        "value": "Show {0}-{1} out of {2} reviews"
      },
      "mostHelpfulSortOptionText": {
        "comment": "Text which is shown in sort by dropdown to sort reviews in the order of their helpfulness.",
        "value": "Most helpful"
      },
      "mostRecentSortOptionText": {
        "comment": "Text which is shown in sort by dropdown to show reviews which are most recent.",
        "value": "Most recent"
      },
      "highestRatedSortOptionText": {
        "comment": "Text which is shown in sort by dropdown to sort reviews by their rating.",
        "value": "Highest rated"
      },
      "lowestRatedSortOptionText": {
        "comment": "Text which is shown in sort by dropdown to sort reviews by their rating.",
        "value": "Lowest rated"
      },
      "allRatinsFilterByOptionText": {
        "comment": "Text which is shown in filter by dropdown to show review with all ratings.",
        "value": "All ratings"
      },
      "fiveStarFilterByOptionText": {
        "comment": "Text which is shown in filter by dropdown to show review with 5 star ratings.",
        "value": "5 stars"
      },
      "fourStarFilterByOptionText": {
        "comment": "Text which is shown in filter by dropdown to show review with 4 star ratings.",
        "value": "4 stars"
      },
      "threeStarFilterByOptionText": {
        "comment": "Text which is shown in filter by dropdown to show review with 3 star ratings.",
        "value": "3 stars"
      },
      "twoStarFilterByOptionText": {
        "comment": "Text which is shown in filter by dropdown to show review with 2 star ratings.",
        "value": "2 stars"
      },
      "oneStarFilterByOptionText": {
        "comment": "Text which is shown in filter by dropdown to show review with 1 star ratings.",
        "value": "1 star"
      },
      "sortByDropdownText": {
        "comment": "Text used for the sort by dropdown.",
        "value": "Sort by:"
      },
      "filterByDropdownText": {
        "comment": "Text used for the filter by dropdown.",
        "value": "Filter by:"
      },
      "noReviewsMessage": {
        "comment": "Text shown in reviews module when no one has reviewed the product yet.",
        "value": "No reviews available. Be the first to review this product."
      },
      "noReviewsWithSelectedFilterMessage": {
        "comment": "Text shown in reviews module when no review is found with selected filter.",
        "value": "Showing 0 reviews."
      },
      "wasReviewHelpfulText": {
        "comment": "The text for the question to ask user if the review was helpful.",
        "value": "Was this helpful?"
      },
      "yesButtonText": {
        "comment": "The label which is shown button which allows user to upvote",
        "value": "Upvote this review"
      },
      "noButtonText": {
        "comment": "The label which is shown on button which allows user to downvote",
        "value": "Downvote this review"
      },
      "cancelReportReviewText": {
        "comment": "The label which is shown button which cancels reporting a review",
        "value": "Cancel"
      },
      "reportReviewButtonText": {
        "comment": "Button text for the buttons that reports a review",
        "value": "Report"
      },
      "okReportReviewText": {
        "comment": "The label which is shown on button to acknowledge successful reporting",
        "value": "Ok"
      },
      "reportModalMessage": {
        "comment": "Message to show in modal a user is reporting a review",
        "value": "If you find this content inappropriate and think it should be removed from the this site, let us know."
      },
      "reportSubmittedMessage": {
        "comment": "Message to show when a review is successfully reported",
        "value": "We have received your feedback. One of our staff members will look into this review soon."
      },
      "reportedText": {
        "comment": "Text displayed after a review is reported",
        "value": "Reported"
      },
      "feedbackThankYouText": {
        "comment": "The text which is shown when the user gives the feedback to the review",
        "value": "Thank you for the feedback."
      },
      "feedbackErrorText": {
        "comment": "The text which is shown when the user when submit feedback fails",
        "value": "Something went wrong. Please try again."
      },
      "reportSpamText": {
        "comment": "The text which is shown in review when the user wants to report spam",
        "value": "Contains spam or advertising"
      },
      "offensiveContentText": {
        "comment": "The text which is shown in review when the user wants to report offensive content",
        "value": "Contains offensive content"
      },
      "profanityContentText": {
        "comment": "The text which is shown in review when the user wants to report profanity content",
        "value": "Contains profanity"
      },
      "editReviewCardText": {
        "comment": "The edit review button text",
        "value": "Edit"
      },
      "reportConcernText": {
        "comment": "Label for report a concern dropdown",
        "value": "Report"
      },
      "reviewRatingNarratorText": {
        "comment": "Aria label for review rating.",
        "value": "User Rating: {0} out of 5"
      },
      "selectRatingAriaLabel": {
        "comment": "Aria label set for selecting the rating while writing a review",
        "value": "Set ratings from 1 to 5 stars"
      },
      "selectRatingLabel": {
        "comment": "Label for selecting the rating while writing a review",
        "value": "Choose a rating"
      },
      "reviewTitleLabel": {
        "comment": "Label for the title of the review",
        "value": "Title"
      },
      "reviewTextLabel": {
        "comment": "Label for the review text",
        "value": "Review"
      },
      "privacyPolicyTitle": {
        "comment": "Privacy Policy",
        "value": "Privacy Policy"
      },
      "privacyPolicyTextFormat": {
        "comment": "The Privacy policy text shown to user's writing a review",
        "value": "By clicking submit, you accept our {0}."
      },
      "writeReviewModalTitle": {
        "comment": "The title of the modal window for writing a review",
        "value": "Write a review"
      },
      "editReviewModalTitle": {
        "value": "Edit your review",
        "comment": "The title of the modal window for editing a review"
      },
      "submitReviewButtonText": {
        "comment": "The submit review button text",
        "value": "Submit"
      },
      "discardReviewButtonText": {
        "comment": "The discard review button text",
        "value": "Discard"
      },
      "errorMessageText": {
        "comment": "The error message text when a review fails to submit",
        "value": "Something went wrong, please try again"
      },
      "averageRatingAriaLabel": {
        "comment": "The aria label used for the average rating value",
        "value": "Ratings and reviews section. Average {0} of {1} stars"
      }
    },
    "type": "contentModule"
  },
  "product-specification": {
    "friendlyName": "Product details",
    "name": "product-specification",
    "description": "Product details is used to display additional information about the product in the product details page",
    "categories": [
      "Product details "
    ],
    "dataActions": {
      "product": {
        "path": "@msdyn365-commerce-modules/retail-actions/dist/lib/get-selected-variant"
      },
      "productSpecificationData": {
        "path": "../../dataActions/get-attributes-for-selected-variant"
      }
    },
    "config": {
      "heading": {
        "friendlyName": "Heading",
        "description": "Heading for product details",
        "type": "object",
        "properties": {
          "text": {
            "type": "string",
            "friendlyName": "Heading Text",
            "description": "Heading Text",
            "default": "Heading",
            "required": true
          },
          "tag": {
            "type": "string",
            "friendlyName": "Heading Level",
            "description": "Heading Tag",
            "enum": {
              "h1": "H1",
              "h2": "H2",
              "h3": "H3",
              "h4": "H4",
              "h5": "H5",
              "h6": "H6"
            },
            "default": "h2"
          }
        }
      },
      "className": {
        "friendlyName": "Custom CSS class name",
        "description": "Provide a custom css class name defined in the theme pack to target the CSS for this module",
        "type": "string",
        "default": ""
      }
    },
    "resources": {
      "trueValueText": {
        "value": "Yes",
        "comment": "Text to show for boolean fields whose value is true"
      },
      "falseValueText": {
        "value": "No",
        "comment": "Text to show for boolean fields whose value is false"
      }
    },
    "type": "contentModule"
  },
  "tab": {
    "friendlyName": "Tab",
    "name": "tab",
    "description": "Tab allows information within a page to be organized within multiple tabs.",
    "categories": [
      "Organize"
    ],
    "slots": {
      "tabItems": {
        "friendlyName": "Tab item slot",
        "description": "Tab item slot",
        "allowedTypes": [
          "tab-item"
        ],
        "min": 1,
        "max": 99
      }
    },
    "config": {
      "heading": {
        "friendlyName": "Heading",
        "description": "Module heading",
        "type": "object",
        "properties": {
          "text": {
            "type": "string",
            "friendlyName": "Heading Text",
            "description": "Heading Text",
            "default": "Heading",
            "required": true
          },
          "tag": {
            "type": "string",
            "friendlyName": "Heading Level",
            "description": "Heading Tag",
            "enum": {
              "h1": "H1",
              "h2": "H2",
              "h3": "H3",
              "h4": "H4",
              "h5": "H5",
              "h6": "H6"
            },
            "default": "h2"
          }
        }
      },
      "defaultTabIndex": {
        "friendlyName": "Default tab index",
        "description": "Default tab index",
        "type": "number",
        "default": 1,
        "required": false
      },
      "className": {
        "friendlyName": "Class name for the module",
        "description": "Class name for the module",
        "type": "string",
        "default": ""
      }
    },
    "dataActions": {
      "activeTabState": {
        "path": "../../data-actions/tab-state-data-action",
        "runOn": "server"
      }
    },
    "type": "moduleDefinition"
  },
  "tab-item": {
    "friendlyName": "tab-item",
    "name": "tab-item",
    "description": "Tab item represents each tab within a Tab module. Any module can be configured within a tab item.",
    "categories": [
      "tab-item"
    ],
    "tags": [
      "Additional tags go here"
    ],
    "dataActions": {
      "activeTabState": {
        "path": "../../data-actions/tab-state-data-action",
        "runOn": "server"
      }
    },
    "attributes": {
      "private": true
    },
    "slots": {
      "tabItemContent": {
        "friendlyName": "Tab item slot",
        "description": "Tab item slot",
        "allowedTypes": "*",
        "min": 1,
        "max": 100
      }
    },
    "config": {
      "tabItemTitle": {
        "friendlyName": "Title",
        "description": "tab item title",
        "type": "string",
        "required": true
      },
      "className": {
        "friendlyName": "Class name for the module",
        "description": "Class name for the module",
        "type": "string",
        "default": ""
      }
    },
    "type": "moduleDefinition"
  },
  "store-selector": {
    "friendlyName": "Store selector",
    "name": "store-selector",
    "description": "Store selector shows the nearby stores where an item is available for pickup",
    "categories": [
      "Product details",
      "Buy box",
      "Store locator"
    ],
    "dataActions": {
      "storeSelectorStateManager": {
        "path": "@msdyn365-commerce-modules/bopis-utilities/dist/lib/store-selector-state-manager/store-selector-state-manager-data-action",
        "runOn": "server"
      },
      "availabilitiesWithHours": {
        "path": "@msdyn365-commerce-modules/retail-actions/dist/lib/get-full-available-inventory-nearby",
        "runOn": "client"
      },
      "storeLocations": {
        "path": "@msdyn365-commerce-modules/retail-actions/dist/lib/get-store-location-information",
        "runOn": "client"
      }
    },
    "config": {
      "lookupRadius": {
        "friendlyName": "Search radius",
        "description": "Radius, in miles or kilometers, to use when searching for nearby store locations",
        "type": "number",
        "default": 50,
        "required": true,
        "minimum": 0
      },
      "termsOfServiceLink": {
        "friendlyName": "Terms of service link",
        "description": "Link to the terms of service",
        "type": "object",
        "properties": {
          "linkText": {
            "type": "string",
            "friendlyName": "Link text",
            "description": "Text for call to action link",
            "default": "Link text "
          },
          "linkUrl": {
            "type": "link",
            "friendlyName": "Link target",
            "description": "Destination url for link",
            "required": true
          },
          "ariaLabel": {
            "type": "string",
            "friendlyName": "Link aria label",
            "description": "Aria Label for link",
            "default": ""
          },
          "openInNewTab": {
            "type": "boolean",
            "friendlyName": "Open in new tab",
            "description": "Open the link in a new tab",
            "default": false
          }
        }
      },
      "heading": {
        "friendlyName": "Heading",
        "description": "Provide a heading",
        "type": "string",
        "default": ""
      },
      "mode": {
        "friendlyName": "Mode",
        "description": "Define whether it's Find store mode or Pick up in store mode",
        "type": "string",
        "enum": {
          "findStores": "Find stores",
          "pickupInStore": "Pickup in store"
        }
      },
      "searchRadiusUnit": {
        "friendlyName": "Search Radius Unit",
        "description": "Define to choose search radius unit in miles or kilometers when displaying distance for a store is from the current location",
        "type": "string",
        "enum": {
          "miles": "miles",
          "kilometers": "kilometers"
        },
        "default": "miles"
      },
      "style": {
        "friendlyName": "Style",
        "description": "Define if module should be rendered inline or as a dialog",
        "type": "string",
        "enum": {
          "inline": "Inline",
          "dialog": "Dialog"
        },
        "default": "dialog"
      },
      "setAsPreferredStore": {
        "friendlyName": "Set as preferred store",
        "description": "Switch to turn set as preferred store on or off",
        "type": "boolean",
        "default": false
      },
      "showAllStores": {
        "friendlyName": "Show all stores",
        "description": "Switch to turn show all stores on or off",
        "type": "boolean",
        "default": false
      },
      "autoSuggestionEnabled": {
        "friendlyName": "Enable auto suggestion",
        "description": "Switch to enable auto suggestion",
        "type": "boolean",
        "default": false
      },
      "autoSuggestOptions": {
        "friendlyName": "Auto Suggest Options",
        "description": "Provide additional data to customized auto suggest",
        "type": "object",
        "properties": {
          "maxResults": {
            "friendlyName": "Max Results",
            "description": "Specifies maximum suggestions",
            "type": "number",
            "default": 5
          }
        }
      },
      "className": {
        "friendlyName": "Custom CSS class name",
        "description": "Provide a custom css class name defined in the theme pack to target the CSS for this module",
        "type": "string",
        "default": ""
      }
    },
    "resources": {
      "searchPlaceholderText": {
        "comment": "Placeholder Text for Search By Location",
        "value": "Enter ZIP code or city, state"
      },
      "searchButtonAriaLabel": {
        "comment": "Aria Label for the search button",
        "value": "Search"
      },
      "searchInputAriaLabel": {
        "comment": "Aria Label for the search input",
        "value": "Search Input"
      },
      "outOfStockText": {
        "comment": "Text for when item is out of stock",
        "value": "Out of stock"
      },
      "inStockText": {
        "comment": "Text for when item is in  stock",
        "value": "In stock"
      },
      "selectedStoreLocationText": {
        "comment": "Text to show in place of button if location is selected for the product",
        "value": "Selected store location"
      },
      "emptyLocationsText": {
        "comment": "Text for when there are no nearby locations",
        "value": "No nearby locations found. Narrow your search criteria or search for a different location."
      },
      "selectStoreText": {
        "comment": "Button text for selecting store for pickup",
        "value": "Pick up here"
      },
      "selectStoreAriaFormatText": {
        "comment": "Aria label text for selecting store for pickup. {StoreName} = name of store",
        "value": "Pick up at {StoreName}"
      },
      "setAsPreferredStoreText": {
        "comment": "Button text for set as preferred store",
        "value": "Set as preferred store"
      },
      "setAsPreferredStoreTextAriaLabel": {
        "comment": "Aria label for set as preferred store",
        "value": "Set as preferred store"
      },
      "preferredStoreText": {
        "comment": "Text for preferred store",
        "value": "Preferred store"
      },
      "preferredStoreAriaLabel": {
        "comment": "Text for preferred store",
        "value": "Preferred store"
      },
      "timeText": {
        "comment": "This field is used to specify the store hours text",
        "value": "Store hours"
      },
      "captionText": {
        "comment": "caption text",
        "value": "We’re expanding our pick-up-in-store service to more locations every day."
      },
      "milesShortText": {
        "comment": "Used when displaying distance a store is from the current location in miles",
        "value": "mi"
      },
      "kilometersShortText": {
        "comment": "Used when displaying distance a store is from the current location in kilometers",
        "value": "km"
      },
      "contactText": {
        "comment": "This field is to specify contact text",
        "value": "Contact"
      },
      "availabilityText": {
        "comment": "This field is to specify availability text",
        "value": "Availability"
      },
      "productDimensionTypeColor": {
        "comment": "String that corresponds to the Color Product Dimension Type (1)",
        "value": "Color"
      },
      "productDimensionTypeConfiguration": {
        "comment": "String that corresponds to the Configuration Product Dimension Type (2)",
        "value": "Configuration"
      },
      "productDimensionTypeSize": {
        "comment": "String that corresponds to the Size Product Dimension Type (3)",
        "value": "Size"
      },
      "productDimensionTypeStyle": {
        "comment": "String that corresponds to the Style Product Dimension Type (4)",
        "value": "Style"
      },
      "storeHoursClosedText": {
        "comment": "String to show on store hours for days where store is closed",
        "value": "Closed"
      },
      "storeHoursMondayText": {
        "comment": "String to show when refering to the day 'Monday'",
        "value": "Mon"
      },
      "storeHoursTuesdayText": {
        "comment": "String to show when refering to the day 'Tuesday'",
        "value": "Tue"
      },
      "storeHoursWednesdayText": {
        "comment": "String to show when refering to the day 'Wednesday'",
        "value": "Wed"
      },
      "storeHoursThursdayText": {
        "comment": "String to show when refering to the day 'Thursday'",
        "value": "Thur"
      },
      "storeHoursFridayText": {
        "comment": "String to show when refering to the day 'Friday'",
        "value": "Fri"
      },
      "storeHoursSaturdayText": {
        "comment": "String to show when refering to the day 'Saturday'",
        "value": "Sat"
      },
      "storeHoursSundayText": {
        "comment": "String to show when refering to the day 'Sunday'",
        "value": "Sun"
      },
      "storeHoursMondayFullText": {
        "comment": "String to show when referring to the day 'Monday'",
        "value": "Monday"
      },
      "storeHoursTuesdayFullText": {
        "comment": "String to show when referring to the day 'Tuesday'",
        "value": "Tuesday"
      },
      "storeHoursWednesdayFullText": {
        "comment": "String to show when referring to the day 'Wednesday'",
        "value": "Wednesday"
      },
      "storeHoursThursdayFullText": {
        "comment": "String to show when referring to the day 'Thursday'",
        "value": "Thursday"
      },
      "storeHoursFridayFullText": {
        "comment": "String to show when referring to the day 'Friday'",
        "value": "Friday"
      },
      "storeHoursSaturdayFullText": {
        "comment": "String to show when referring to the day 'Saturday'",
        "value": "Saturday"
      },
      "storeHoursSundayFullText": {
        "comment": "String to show when referring to the day 'Sunday'",
        "value": "Sunday"
      },
      "storePhoneAriaLabel": {
        "comment": "Aria label for store phone",
        "value": "store phone"
      },
      "storeAddressAriaLabel": {
        "comment": "Aria label for store address",
        "value": "store address"
      },
      "storeCountMessage": {
        "comment": "message to show in BPOIS modal count of stores",
        "value": "We found {count} stores within {radius} miles of you."
      },
      "storeAllCountMessage": {
        "comment": "message to show in BPOIS modal count of all stores",
        "value": "We found {count} stores."
      },
      "storeCountMessageInKm": {
        "comment": "message to show in BPOIS modal count of stores",
        "value": "We found {count} stores within {radius} kilometers of you."
      },
      "storeSelectorHeaderText": {
        "value": "Buy now, pick up in a store",
        "comment": "Heading text for the find in store section"
      },
      "storeLocatorHeaderText": {
        "value": "Store Locator",
        "comment": "Header text for store locator section"
      },
      "seeAllStoresText": {
        "value": "See all stores",
        "comment": "Text for see all stores link"
      },
      "viewMapText": {
        "value": "View Map",
        "comment": "Text for view map button"
      },
      "viewListText": {
        "value": "View List",
        "comment": "Test for view list button"
      }
    },
    "type": "contentModule"
  },
  "wishlist-items": {
    "friendlyName": "Wishlist",
    "name": "wishlist-items",
    "description": "Module to show the items in the wishlist",
    "categories": [
      "Account management"
    ],
    "dataActions": {
      "cart": {
        "path": "@msdyn365-commerce/global-state/dist/lib/data-actions/cart-state-data-action",
        "runOn": "server"
      },
      "wishlists": {
        "path": "@msdyn365-commerce-modules/retail-actions/dist/lib/get-wishlist-by-customer-id",
        "runOn": "client"
      },
      "products": {
        "path": "./actions/get-items-in-wishlists",
        "runOn": "client"
      },
      "productAvailability": {
        "path": "./actions/get-product-availabilities-wishlist-items",
        "runOn": "client"
      }
    },
    "config": {
      "heading": {
        "type": "object",
        "friendlyName": "Heading",
        "description": "Heading property",
        "properties": {
          "text": {
            "type": "string",
            "friendlyName": "Heading Text",
            "description": "Heading Text",
            "default": "Heading",
            "required": true
          },
          "tag": {
            "type": "string",
            "friendlyName": "Heading Level",
            "description": "Heading Tag",
            "enum": {
              "h1": "H1",
              "h2": "H2",
              "h3": "H3",
              "h4": "H4",
              "h5": "H5",
              "h6": "H6"
            },
            "default": "h2"
          }
        }
      },
      "imageSettings": {
        "friendlyName": "Wishlist item Image Settings",
        "description": "Image settings for wishlist item",
        "type": "imageSettings"
      },
      "className": {
        "friendlyName": "Custom CSS class name",
        "description": "Provide a custom css class name defined in the theme pack to target the CSS for this module",
        "type": "string",
        "default": ""
      },
      "enableImageProductLink": {
        "friendlyName": "Allow images to navigate to PDP",
        "description": "This setting allows navigation to PDP when the image is selected.",
        "type": "boolean",
        "default": false
      }
    },
    "resources": {
      "emptyWishlistText": {
        "comment": "Text for the empty wishlist",
        "value": "Your wishlist is empty."
      },
      "priceFree": {
        "comment": "Text to show when product is free",
        "value": "Free"
      },
      "unableToGetWishlist": {
        "comment": "Text for the not getting wishlist",
        "value": "Unable to get wishlists!"
      },
      "removeButtonText": {
        "comment": "Text for the remove button",
        "value": "Remove from wishlist"
      },
      "addToCartButtonText": {
        "comment": "Text for the add to cart button",
        "value": "Add to cart"
      },
      "removeButtonAriaLabel": {
        "comment": "Aria label for the remove button",
        "value": "Remove from wishlist"
      },
      "waitingClass": {
        "comment": "CSS class for the waiting class",
        "value": "waiting waiting-circular waiting-lg"
      },
      "outOfStockText": {
        "comment": "out of stock text for wishlist item",
        "value": "This item is out of stock"
      },
      "addedToCartSuccessMessage": {
        "comment": "Added to cart friendly message",
        "value": "Added to your cart"
      },
      "addedToCartFailureMessage": {
        "comment": "Message to show when add to cart fails",
        "value": "Add to cart failed. Please refresh and retry"
      },
      "maxQuantityLimitText": {
        "comment": "String to show message that you've reached max quantity",
        "value": "You already have {curQuantity} of this item in your shopping bag. You can only add {maxQuantity} of this item to your shopping bag"
      },
      "originalPriceText": {
        "comment": "String that corresponds to the original price screen reader text",
        "value": "Original price"
      },
      "currentPriceText": {
        "comment": "String that corresponds to the current price screen reader text",
        "value": "Current price"
      },
      "productDimensionTypeColor": {
        "comment": "String that corresponds to the Color Product Dimension Type (1)",
        "value": "Color"
      },
      "productDimensionTypeSize": {
        "comment": "String that corresponds to the Size Product Dimension Type (3)",
        "value": "Size"
      },
      "productDimensionTypeStyle": {
        "comment": "String that corresponds to the Style Product Dimension Type (4)",
        "value": "Style"
      },
      "wishlistErrorGettingWishlist": {
        "comment": "Text for the error message while getting wishlist",
        "value": "Sorry we are unable to load your wishlist at this moment, please try again later."
      }
    },
    "type": "contentModule"
  },
  "write-review": {
    "friendlyName": "Write review",
    "name": "write-review",
    "description": "Module for adding reviews of a product/item",
    "categories": [
      "Product details",
      "Ratings",
      "Reviews"
    ],
    "dataActions": {
      "product": {
        "path": "@msdyn365-commerce-modules/retail-actions/dist/lib/get-selected-variant"
      },
      "userReview": {
        "path": "../../actions/get-user-review"
      }
    },
    "config": {
      "heading": {
        "friendlyName": "Heading",
        "description": "Heading for write review",
        "type": "object",
        "properties": {
          "text": {
            "type": "string",
            "friendlyName": "Heading Text",
            "description": "Heading Text",
            "default": "Heading",
            "required": true
          },
          "tag": {
            "type": "string",
            "friendlyName": "Heading Level",
            "description": "Heading Tag",
            "enum": {
              "h1": "H1",
              "h2": "H2",
              "h3": "H3",
              "h4": "H4",
              "h5": "H5",
              "h6": "H6"
            },
            "default": "h2"
          }
        }
      },
      "id": {
        "friendlyName": "Id",
        "description": "Id for the module",
        "type": "string",
        "default": ""
      },
      "className": {
        "friendlyName": "Custom CSS class name",
        "description": "Provide a custom css class name defined in the theme pack to target the CSS for this module",
        "type": "string",
        "default": ""
      }
    },
    "resources": {
      "signInLabel": {
        "value": "Sign in",
        "comment": "The sign in button label"
      },
      "signInAriaLabel": {
        "value": "To rate and review, please sign in",
        "comment": "The sign in button aria label"
      },
      "reviewButtonLabel": {
        "value": "Write a review",
        "comment": "The label for the button which starts the rate and review flow"
      },
      "selectRatingAriaLabel": {
        "value": "Set ratings from 1 to 5 stars",
        "comment": "Aria label set for selecting the rating while writing a review"
      },
      "selectRatingLabel": {
        "value": "Choose a rating",
        "comment": "Label for selecting the rating while writing a review"
      },
      "reviewTitleLabel": {
        "value": "Title",
        "comment": "Label for the title of the review"
      },
      "reviewTextLabel": {
        "value": "Review",
        "comment": "Label for the review text"
      },
      "privacyPolicyTitle": {
        "value": "Privacy Policy",
        "comment": "Privacy Policy"
      },
      "privacyPolicyTextFormat": {
        "value": "By clicking submit, you accept our {0}.",
        "comment": "The Privacy policy text shown to user's writing a review"
      },
      "writeReviewModalTitle": {
        "value": "Write a review",
        "comment": "The title of the modal window for writing a review"
      },
      "editReviewModalTitle": {
        "value": "Edit your review",
        "comment": "The title of the modal window for editing a review"
      },
      "submitReviewButtonText": {
        "value": "Submit",
        "comment": "The submit review button text"
      },
      "editReviewButtonText": {
        "value": "Edit your review",
        "comment": "The edit review button text"
      },
      "discardReviewButtonText": {
        "value": "Discard",
        "comment": "The discard review button text"
      },
      "errorMessageText": {
        "value": "Something went wrong, please try again",
        "comment": "The error message text when a review fails to submit"
      },
      "signInMessage": {
        "value": "Please sign in to rate and review.",
        "comment": "Message shown to tell the user to sign in to leave a review."
      }
    },
    "type": "contentModule"
  },
  "wkea": {
    "description": "This is SDK template theme module",
    "friendlyName": "wkea",
    "name": "wkea",
    "type": "themeModule"
  },
  "footer": {
    "friendlyName": "footer",
    "name": "footer",
    "description": "Please add meaningful description for authoring",
    "categories": [
      "footer"
    ],
    "tags": [
      "Additional tags go here"
    ],
    "dataActions": {},
    "config": {
      "showText": {
        "friendlyName": "showText",
        "description": "example config value",
        "type": "string",
        "default": "Example Config Value",
        "scope": "module",
        "group": "Layout Properties"
      }
    },
    "resources": {
      "resourceKey": {
        "comment": "resource description",
        "value": "resource value"
      }
    },
    "type": "contentModule"
  },
  "index-carousel": {
    "friendlyName": "index-carousel",
    "name": "index-carousel",
    "description": "Please add meaningful description for authoring",
    "categories": [
      "index-carousel"
    ],
    "tags": [
      "Additional tags go here"
    ],
    "dataActions": {},
    "config": {
      "showText": {
        "friendlyName": "showText",
        "description": "example config value",
        "type": "string",
        "default": "Example Config Value",
        "scope": "module",
        "group": "Layout Properties"
      }
    },
    "resources": {
      "resourceKey": {
        "comment": "resource description",
        "value": "resource value"
      }
    },
    "type": "contentModule"
  },
  "index-product": {
    "friendlyName": "index-product",
    "name": "index-product",
    "description": "Please add meaningful description for authoring",
    "categories": [
      "index-product"
    ],
    "tags": [
      "Additional tags go here"
    ],
    "dataActions": {
      "products": {
        "path": "@msdyn365-commerce-modules/retail-actions/dist/lib/get-simple-products",
        "runOn": "server"
      }
    },
    "config": {
      "showText": {
        "friendlyName": "showText",
        "description": "example config value",
        "type": "string",
        "default": "Example Config Value",
        "scope": "module",
        "group": "Layout Properties"
      },
      "productIds": {
        "friendlyName": "Product ID",
        "description": "Provide a Product Id that the module will display",
        "type": "string",
        "scope": "module",
        "group": "Content Properties"
      }
    },
    "resources": {
      "resourceKey": {
        "comment": "resource description",
        "value": "resource value"
      }
    },
    "type": "contentModule"
  },
  "sale": {
    "friendlyName": "sale",
    "name": "sale",
    "description": "Please add meaningful description for authoring",
    "categories": [
      "sale"
    ],
    "tags": [
      "Additional tags go here"
    ],
    "dataActions": {},
    "config": {
      "showText": {
        "friendlyName": "showText",
        "description": "example config value",
        "type": "string",
        "default": "Example Config Value",
        "scope": "module",
        "group": "Layout Properties"
      }
    },
    "resources": {
      "resourceKey": {
        "comment": "resource description",
        "value": "resource value"
      }
    },
    "type": "contentModule"
  },
  "index-person-information": {
    "friendlyName": "Header (COPY)",
    "name": "index-person-information",
    "description": " Header is shown on the top of the page and allows the user to browse products via navigation hierarchy. It also support links to specific pages in the site that author wants to promote.",
    "categories": [
      "Header"
    ],
    "dataActions": {
      "cart": {
        "path": "@msdyn365-commerce/global-state/dist/lib/data-actions/cart-state-data-action",
        "runOn": "server"
      },
      "accountInformation": {
        "path": "@msdyn365-commerce-modules/retail-actions/dist/lib/get-customer"
      }
    },
    "config": {
      "logoImage": {
        "friendlyName": "Logo image",
        "description": "Logo image",
        "type": "image",
        "required": true
      },
      "logoLink": {
        "friendlyName": "Logo link",
        "description": "Logo link",
        "type": "object",
        "properties": {
          "linkText": {
            "type": "string",
            "friendlyName": "Link text",
            "description": "Text for call to action link",
            "default": "Link text "
          },
          "linkUrl": {
            "type": "link",
            "friendlyName": "Link target",
            "description": "Destination url for link",
            "required": true
          },
          "ariaLabel": {
            "type": "string",
            "friendlyName": "Link aria label",
            "description": "Aria Label for link",
            "default": ""
          },
          "openInNewTab": {
            "type": "boolean",
            "friendlyName": "Open in new tab",
            "description": "Open the link in a new tab",
            "default": false
          }
        }
      },
      "myAccountLinks": {
        "friendlyName": "My account links",
        "description": "Link to the my account page",
        "type": "array",
        "items": {
          "type": "object",
          "friendlyName": "Action Link",
          "description": "Action Link property",
          "properties": {
            "linkText": {
              "type": "string",
              "friendlyName": "Link text",
              "description": "Text for call to action link",
              "default": "Link text "
            },
            "linkUrl": {
              "type": "link",
              "friendlyName": "Link target",
              "description": "Destination url for link",
              "required": true
            },
            "ariaLabel": {
              "type": "string",
              "friendlyName": "Link aria label",
              "description": "Aria Label for link",
              "default": ""
            },
            "openInNewTab": {
              "type": "boolean",
              "friendlyName": "Open in new tab",
              "description": "Open the link in a new tab",
              "default": false
            }
          }
        }
      },
      "className": {
        "friendlyName": "Custom CSS class name",
        "description": "Provide a custom css class name defined in the theme pack to target the CSS for this module",
        "type": "string",
        "default": ""
      }
    },
    "resources": {
      "mobileHamburgerAriaLabel": {
        "comment": "The aria label used for mobile view hamburger",
        "value": "Expand to see list of items"
      },
      "wishlistTooltipText": {
        "comment": "string to be shown for wishlist tooltip",
        "value": "My Wishlist"
      },
      "cartLabel": {
        "comment": "string to be shown for cart or shopping bag tooltip",
        "value": "Shopping bag, {0} items"
      },
      "signInLinkText": {
        "value": "Sign in",
        "comment": "Sign-in Link text"
      },
      "signInLinkAriaText": {
        "value": "Sign in",
        "comment": "Sign-in Link aria text"
      },
      "signOutLinkText": {
        "value": "Sign out",
        "comment": "Sign-out in Link aria text"
      },
      "signOutLinkAriaText": {
        "value": "Sign out",
        "comment": "Sign-out in Link aria text"
      }
    },
    "slots": {
      "menuBar": {
        "friendlyName": "Navigation menu",
        "description": "Slot for Navigation menu in header handling",
        "allowedTypes": [
          "navigation-menu"
        ],
        "min": 0,
        "max": 1
      },
      "search": {
        "friendlyName": "Search",
        "description": "Slot for Search in header handling",
        "max": 1,
        "min": 0,
        "allowedTypes": [
          "search"
        ]
      },
      "cartIcon": {
        "friendlyName": "Cart Icon",
        "description": "Slot for Cart Icon module in header handling",
        "max": 1,
        "min": 0,
        "allowedTypes": [
          "cart-icon"
        ]
      },
      "siteOptions": {
        "friendlyName": "Site Picker",
        "description": "Slot for Site Picker",
        "max": 1,
        "min": 0,
        "allowedTypes": [
          "site-picker"
        ]
      }
    },
    "type": "containerModule"
  }
}